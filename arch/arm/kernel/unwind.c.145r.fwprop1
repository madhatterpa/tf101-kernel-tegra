
;; Function __aeabi_unwind_cpp_pr0 (__aeabi_unwind_cpp_pr0)[0:851]

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


try_optimize_cfg iteration 1


Number of successful forward propagations: 0



__aeabi_unwind_cpp_pr0

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	
;;  ref usage 	r0={1d} r1={1d} r2={1d} r3={1d} r11={1d,2u} r12={1d} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} 
;;    total ref usage 18{10d,8u,0e} in 0{0 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 5, 7
0[0,1] 1[1,1] 2[2,1] 3[3,1] 11[4,1] 12[5,1] 13[6,1] 14[7,1] 25[8,1] 26[9,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(10)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 0 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function __aeabi_unwind_cpp_pr1 (__aeabi_unwind_cpp_pr1)[0:852]

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


try_optimize_cfg iteration 1


Number of successful forward propagations: 0



__aeabi_unwind_cpp_pr1

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	
;;  ref usage 	r0={1d} r1={1d} r2={1d} r3={1d} r11={1d,2u} r12={1d} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} 
;;    total ref usage 18{10d,8u,0e} in 0{0 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 5, 7
0[0,1] 1[1,1] 2[2,1] 3[3,1] 11[4,1] 12[5,1] 13[6,1] 14[7,1] 25[8,1] 26[9,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(10)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 0 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function __aeabi_unwind_cpp_pr2 (__aeabi_unwind_cpp_pr2)[0:853]

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


try_optimize_cfg iteration 1


Number of successful forward propagations: 0



__aeabi_unwind_cpp_pr2

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	
;;  ref usage 	r0={1d} r1={1d} r2={1d} r3={1d} r11={1d,2u} r12={1d} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} 
;;    total ref usage 18{10d,8u,0e} in 0{0 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 5, 7
0[0,1] 1[1,1] 2[2,1] 3[3,1] 11[4,1] 12[5,1] 13[6,1] 14[7,1] 25[8,1] 26[9,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(10)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 0 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function unwind_init (unwind_init)[0:862] (unlikely executed)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 11 (  1.8)

In insn 48, replacing
 (compare:CC (reg/v/f:SI 162 [ idx ])
        (reg/f:SI 168))
 with (compare:CC (reg/v/f:SI 162 [ idx ])
        (symbol_ref:SI ("__stop_unwind_idx") [flags 0xc0] <var_decl 0x11041060 __stop_unwind_idx>))
Changes to insn 48 not recognized
 Setting REG_EQUAL note

In insn 55, replacing
 (reg:SI 163 [ <result> ])
 with (const_int 0 [0x0])
Changes to insn 55 not profitable


try_optimize_cfg iteration 1


Number of successful forward propagations: 0



unwind_init

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 24[cc]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r3={1d} r11={1d,5u} r12={1d} r13={1d,5u} r14={1d,1u} r24={1d,1u} r25={1d,5u} r26={1d,4u} r162={2d,5u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,1u} 
;;    total ref usage 54{20d,34u,0e} in 13{13 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 6, 8, 9
0[0,2] 1[2,1] 2[3,1] 3[4,1] 11[5,1] 12[6,1] 13[7,1] 14[8,1] 24[9,1] 25[10,1] 26[11,1] 162[12,2] 163[14,1] 164[15,1] 165[16,1] 166[17,1] 167[18,1] 168[19,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 162
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 162
;; live  kill	
;; rd  in  	(10)
1, 2, 3, 4, 5, 6, 7, 8, 10, 11
;; rd  gen 	(1)
13
;; rd  kill	(2)
12, 13

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 32 0 31 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 31 32 34 2 NOTE_INSN_FUNCTION_BEG)

(insn 34 31 46 2 arch/arm/kernel/unwind.c:446 (set (reg/v/f:SI 162 [ idx ])
        (symbol_ref:SI ("__start_unwind_idx") [flags 0xc0] <var_decl 0x11041000 __start_unwind_idx>)) 167 {*arm_movsi_insn} (nil))
;; End of basic block 2 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162
;; rd  out 	(11)
1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 4) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u4(11){ }u5(13){ }u6(25){ }u7(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 162
;; lr  def 	 162 164 165 166 167
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162
;; live  gen 	 162 164 165 166 167
;; live  kill	
;; rd  in  	(18)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19
;; rd  gen 	(5)
12, 15, 16, 17, 18
;; rd  kill	(6)
12, 13, 15, 16, 17, 18

;; Pred edge  4 [91.0%] 
(code_label 46 34 37 3 9 "" [1 uses])

(note 37 46 38 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 38 37 39 3 arch/arm/kernel/unwind.c:447 (set (reg:SI 165 [ <variable>.addr ])
        (mem/s/j:SI (reg/v/f:SI 162 [ idx ]) [0 <variable>.addr+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 39 38 40 3 arch/arm/kernel/unwind.c:447 (set (reg:SI 164)
        (ashift:SI (reg:SI 165 [ <variable>.addr ])
            (const_int 1 [0x1]))) 117 {*arm_shiftsi3} (nil))

(insn 40 39 41 3 arch/arm/kernel/unwind.c:447 (set (reg:SI 166)
        (ashiftrt:SI (reg:SI 164)
            (const_int 1 [0x1]))) 117 {*arm_shiftsi3} (nil))

(insn 41 40 42 3 arch/arm/kernel/unwind.c:447 (set (reg:SI 167)
        (plus:SI (reg/v/f:SI 162 [ idx ])
            (reg:SI 166))) 4 {*arm_addsi3} (nil))

(insn 42 41 43 3 arch/arm/kernel/unwind.c:447 (set (mem/s/j:SI (reg/v/f:SI 162 [ idx ]) [0 <variable>.addr+0 S4 A32])
        (reg:SI 167)) 167 {*arm_movsi_insn} (nil))

(insn 43 42 44 3 arch/arm/kernel/unwind.c:446 discrim 2 (set (reg/v/f:SI 162 [ idx ])
        (plus:SI (reg/v/f:SI 162 [ idx ])
            (const_int 8 [0x8]))) 4 {*arm_addsi3} (nil))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162
;; rd  out 	(17)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 18, 19


;; Succ edge  4 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u16(11){ }u17(13){ }u18(25){ }u19(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 162
;; lr  def 	 24 [cc] 168
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162
;; live  gen 	 24 [cc] 168
;; live  kill	
;; rd  in  	(18)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19
;; rd  gen 	(2)
9, 19
;; rd  kill	(2)
9, 19

;; Pred edge  2 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%]  (fallthru,dfs_back)
(code_label 44 43 45 4 8 "" [0 uses])

(note 45 44 47 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 47 45 48 4 arch/arm/kernel/unwind.c:446 discrim 1 (set (reg/f:SI 168)
        (symbol_ref:SI ("__stop_unwind_idx") [flags 0xc0] <var_decl 0x11041060 __stop_unwind_idx>)) 167 {*arm_movsi_insn} (nil))

(insn 48 47 49 4 arch/arm/kernel/unwind.c:446 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 162 [ idx ])
            (reg/f:SI 168))) 219 {*arm_cmpsi_insn} (expr_list:REG_EQUAL (compare:CC (reg/v/f:SI 162 [ idx ])
            (symbol_ref:SI ("__stop_unwind_idx") [flags 0xc0] <var_decl 0x11041060 __stop_unwind_idx>))
        (nil)))

(jump_insn 49 48 50 4 arch/arm/kernel/unwind.c:446 discrim 1 (set (pc)
        (if_then_else (ltu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 46)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
        (nil)))
;; End of basic block 4 -> ( 3 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162
;; rd  out 	(18)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19


;; Succ edge  3 [91.0%] 
;; Succ edge  5 [9.0%]  (fallthru)

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u23(11){ }u24(13){ }u25(25){ }u26(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 163
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 163
;; live  kill	
;; rd  in  	(18)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19
;; rd  gen 	(2)
0, 14
;; rd  kill	(3)
0, 1, 14

;; Pred edge  4 [9.0%]  (fallthru)
(note 50 49 51 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 51 50 55 5 arch/arm/kernel/unwind.c:452 (set (reg:SI 163 [ <result> ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 55 51 61 5 arch/arm/kernel/unwind.c:452 (set (reg/i:SI 0 r0)
        (reg:SI 163 [ <result> ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 61 55 0 5 arch/arm/kernel/unwind.c:452 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 5 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(19)
0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function unwind_table_del (unwind_table_del)[0:861]

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 1 }
;; 4 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 7 (  1.4)
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 8 (  1.6)
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 8 (  1.6)

In insn 10, replacing
 (reg/f:SI 137)
 with (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
Changes to insn 10 not profitable

In insn 18, replacing
 (reg:SI 138)
 with (const_int 1048832 [0x100100])
Changes to insn 18 not recognized
 Setting REG_EQUAL note

In insn 20, replacing
 (reg:SI 139)
 with (const_int 2097664 [0x200200])
Changes to insn 20 not recognized
 Setting REG_EQUAL note

In insn 21, replacing
 (reg/f:SI 137)
 with (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
Changes to insn 21 not profitable

In insn 22, replacing
 (reg/f:SI 137)
 with (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
Changes to insn 22 not profitable


try_optimize_cfg iteration 1

deferring deletion of insn with uid = 21.
Deleted 1 trivially dead insns

Number of successful forward propagations: 0



unwind_table_del

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={7d,5u} r1={5d,1u} r2={4d} r3={4d} r11={1d,4u} r12={4d} r13={1d,7u} r14={3d,1u} r15={3d} r16={3d} r17={3d} r18={3d} r19={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={4d,1u} r25={1d,4u} r26={1d,3u} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r81={3d} r82={3d} r83={3d} r84={3d} r85={3d} r86={3d} r87={3d} r88={3d} r89={3d} r90={3d} r91={3d} r92={3d} r93={3d} r94={3d} r95={3d} r96={3d} r97={3d} r98={3d} r99={3d} r100={3d} r101={3d} r102={3d} r103={3d} r104={3d} r105={3d} r106={3d} r107={3d} r108={3d} r109={3d} r110={3d} r111={3d} r112={3d} r113={3d} r114={3d} r115={3d} r116={3d} r117={3d} r118={3d} r119={3d} r120={3d} r121={3d} r122={3d} r123={3d} r124={3d} r125={3d} r126={3d} r127={3d} r133={1d,2u} r134={1d,2u} r135={1d,1u} r136={1d,6u} r137={1d,3u} r138={1d,1u} r139={1d,1u} r140={1d} 
;;    total ref usage 415{373d,42u,0e} in 20{17 regular + 3 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364
0[0,7] 1[7,5] 2[12,4] 3[16,4] 11[20,1] 12[21,4] 13[25,1] 14[26,3] 15[29,3] 16[32,3] 17[35,3] 18[38,3] 19[41,3] 20[44,3] 21[47,3] 22[50,3] 23[53,3] 24[56,4] 25[60,1] 26[61,1] 27[62,3] 28[65,3] 29[68,3] 30[71,3] 31[74,3] 32[77,3] 33[80,3] 34[83,3] 35[86,3] 36[89,3] 37[92,3] 38[95,3] 39[98,3] 40[101,3] 41[104,3] 42[107,3] 43[110,3] 44[113,3] 45[116,3] 46[119,3] 47[122,3] 48[125,3] 49[128,3] 50[131,3] 51[134,3] 52[137,3] 53[140,3] 54[143,3] 55[146,3] 56[149,3] 57[152,3] 58[155,3] 59[158,3] 60[161,3] 61[164,3] 62[167,3] 63[170,3] 64[173,3] 65[176,3] 66[179,3] 67[182,3] 68[185,3] 69[188,3] 70[191,3] 71[194,3] 72[197,3] 73[200,3] 74[203,3] 75[206,3] 76[209,3] 77[212,3] 78[215,3] 79[218,3] 80[221,3] 81[224,3] 82[227,3] 83[230,3] 84[233,3] 85[236,3] 86[239,3] 87[242,3] 88[245,3] 89[248,3] 90[251,3] 91[254,3] 92[257,3] 93[260,3] 94[263,3] 95[266,3] 96[269,3] 97[272,3] 98[275,3] 99[278,3] 100[281,3] 101[284,3] 102[287,3] 103[290,3] 104[293,3] 105[296,3] 106[299,3] 107[302,3] 108[305,3] 109[308,3] 110[311,3] 111[314,3] 112[317,3] 113[320,3] 114[323,3] 115[326,3] 116[329,3] 117[332,3] 118[335,3] 119[338,3] 120[341,3] 121[344,3] 122[347,3] 123[350,3] 124[353,3] 125[356,3] 126[359,3] 127[362,3] 133[365,1] 134[366,1] 135[367,1] 136[368,1] 137[369,1] 138[370,1] 139[371,1] 140[372,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 136
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 136
;; live  kill	
;; rd  in  	(10)
6, 11, 15, 19, 20, 24, 25, 28, 60, 61
;; rd  gen 	(2)
59, 368
;; rd  kill	(5)
56, 57, 58, 59, 368

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 arch/arm/kernel/unwind.c:428 (set (reg/v/f:SI 136 [ tab ])
        (reg:SI 0 r0 [ tab ])) 167 {*arm_movsi_insn} (nil))

(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 3 7 2 arch/arm/kernel/unwind.c:431 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 136 [ tab ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 7 6 8 2 arch/arm/kernel/unwind.c:431 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 33)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 2164 [0x874])
        (nil)))
;; End of basic block 2 -> ( 4 3)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; rd  out 	(12)
6, 11, 15, 19, 20, 24, 25, 28, 59, 60, 61, 368


;; Succ edge  4 [21.6%] 
;; Succ edge  3 [78.4%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u7(11){ }u8(13){ }u9(25){ }u10(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134 135 137 138 139 140
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; live  gen 	 0 [r0] 1 [r1] 133 134 135 137 138 139 140
;; live  kill	 14 [lr]
;; rd  in  	(12)
6, 11, 15, 19, 20, 24, 25, 28, 59, 60, 61, 368
;; rd  gen 	(7)
365, 366, 367, 369, 370, 371, 372
;; rd  kill	(10)
26, 27, 28, 365, 366, 367, 369, 370, 371, 372

;; Pred edge  2 [78.4%]  (fallthru)
(note 8 7 9 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 9 8 10 3 arch/arm/kernel/unwind.c:434 (set (reg/f:SI 137)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 10 9 11 3 arch/arm/kernel/unwind.c:434 (set (reg:SI 0 r0)
        (reg/f:SI 137)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(call_insn 11 10 12 3 arch/arm/kernel/unwind.c:434 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("_raw_spin_lock_irqsave") [flags 0x41] <function_decl 0x10ad9d00 _raw_spin_lock_irqsave>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 12 11 13 3 arch/arm/kernel/unwind.c:434 (set (reg/v:SI 135 [ flags ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 13 12 14 3 include/linux/list.h:106 (set (reg/f:SI 133 [ D.15826 ])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 136 [ tab ])
                (const_int 4 [0x4])) [0 <variable>.list.prev+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 14 13 15 3 include/linux/list.h:106 (set (reg/f:SI 134 [ D.15825 ])
        (mem/s/f/j:SI (reg/v/f:SI 136 [ tab ]) [0 <variable>.list.next+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 15 14 16 3 include/linux/list.h:88 (set (mem/s/f/j:SI (plus:SI (reg/f:SI 134 [ D.15825 ])
                (const_int 4 [0x4])) [0 <variable>.prev+0 S4 A32])
        (reg/f:SI 133 [ D.15826 ])) 167 {*arm_movsi_insn} (nil))

(insn 16 15 17 3 include/linux/list.h:89 (set (mem/s/f/j:SI (reg/f:SI 133 [ D.15826 ]) [0 <variable>.next+0 S4 A32])
        (reg/f:SI 134 [ D.15825 ])) 167 {*arm_movsi_insn} (nil))

(insn 17 16 18 3 include/linux/list.h:107 (set (reg:SI 138)
        (const_int 1048832 [0x100100])) 167 {*arm_movsi_insn} (nil))

(insn 18 17 19 3 include/linux/list.h:107 (set (mem/s/f/j:SI (reg/v/f:SI 136 [ tab ]) [0 <variable>.list.next+0 S4 A32])
        (reg:SI 138)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 1048832 [0x100100])
        (nil)))

(insn 19 18 20 3 include/linux/list.h:108 (set (reg:SI 139)
        (const_int 2097664 [0x200200])) 167 {*arm_movsi_insn} (nil))

(insn 20 19 22 3 include/linux/list.h:108 (set (mem/s/f/j:SI (plus:SI (reg/v/f:SI 136 [ tab ])
                (const_int 4 [0x4])) [0 <variable>.list.prev+0 S4 A32])
        (reg:SI 139)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 2097664 [0x200200])
        (nil)))

(insn 22 20 23 3 include/linux/spinlock.h:340 (set (reg:SI 0 r0)
        (reg/f:SI 137)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 23 22 24 3 include/linux/spinlock.h:340 (set (reg:SI 1 r1)
        (reg/v:SI 135 [ flags ])) 167 {*arm_movsi_insn} (nil))

(call_insn 24 23 25 3 include/linux/spinlock.h:340 (parallel [
            (call (mem:SI (symbol_ref:SI ("_raw_spin_unlock_irqrestore") [flags 0x41] <function_decl 0x10aef080 _raw_spin_unlock_irqrestore>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 25 24 26 3 arch/arm/kernel/unwind.c:438 (set (reg:SI 0 r0)
        (reg/v/f:SI 136 [ tab ])) 167 {*arm_movsi_insn} (nil))

(call_insn/j 26 25 33 3 arch/arm/kernel/unwind.c:438 (parallel [
            (call (mem:SI (symbol_ref:SI ("kfree") [flags 0x41] <function_decl 0x10d76880 kfree>) [0 S4 A32])
                (const_int 0 [0x0]))
            (return)
            (use (const_int 0 [0x0]))
        ]) 258 {*sibcall_insn} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 3 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(18)
6, 11, 15, 19, 20, 24, 25, 59, 60, 61, 365, 366, 367, 368, 369, 370, 371, 372


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u34(11){ }u35(13){ }u36(25){ }u37(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(12)
6, 11, 15, 19, 20, 24, 25, 28, 59, 60, 61, 368
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  2 [21.6%] 
(code_label 33 26 36 4 16 "" [1 uses])

(note 36 33 0 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 4 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(12)
6, 11, 15, 19, 20, 24, 25, 28, 59, 60, 61, 368


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
deleting insn with uid = 21.
ending the processing of deferred insns

;; Function unwind_table_add (unwind_table_add)[0:860]

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;;
;; Loop 1
;;  header 5, latch 4
;;  depth 1, outer 0
;;  nodes: 5 4
;; 2 succs { 7 3 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 4 6 }
;; 6 succs { 7 }
;; 7 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 9 count 11 (  1.4)
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 9 count 15 (  1.9)
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 9 count 15 (  1.9)

In insn 44, replacing
 (reg/f:SI 152)
 with (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
Changes to insn 44 not profitable

In insn 50, replacing
 (reg/f:SI 153)
 with (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
Changes to insn 50 not profitable

In insn 52, replacing
 (reg/f:SI 153)
 with (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
Changes to insn 52 not profitable

In insn 53, replacing
 (reg/f:SI 153)
 with (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
Changes to insn 53 not recognized
 Setting REG_EQUAL note

In insn 56, replacing
 (reg/f:SI 152)
 with (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
Changes to insn 56 not profitable

In insn 57, replacing
 (reg/f:SI 152)
 with (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
Changes to insn 57 not profitable


try_optimize_cfg iteration 1

deferring deletion of insn with uid = 62.
deferring deletion of insn with uid = 56.
deferring deletion of insn with uid = 52.
deferring deletion of insn with uid = 50.
deferring deletion of insn with uid = 47.
deferring deletion of insn with uid = 16.
Deleted 6 trivially dead insns

Number of successful forward propagations: 0



unwind_table_add

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={8d,8u} r1={6d,3u} r2={4d,1u} r3={4d,1u} r11={1d,7u} r12={4d} r13={1d,10u} r14={4d,1u} r15={3d} r16={3d} r17={3d} r18={3d} r19={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={5d,2u} r25={1d,7u} r26={1d,6u} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r81={3d} r82={3d} r83={3d} r84={3d} r85={3d} r86={3d} r87={3d} r88={3d} r89={3d} r90={3d} r91={3d} r92={3d} r93={3d} r94={3d} r95={3d} r96={3d} r97={3d} r98={3d} r99={3d} r100={3d} r101={3d} r102={3d} r103={3d} r104={3d} r105={3d} r106={3d} r107={3d} r108={3d} r109={3d} r110={3d} r111={3d} r112={3d} r113={3d} r114={3d} r115={3d} r116={3d} r117={3d} r118={3d} r119={3d} r120={3d} r121={3d} r122={3d} r123={3d} r124={3d} r125={3d} r126={3d} r127={3d} r133={1d,2u} r134={1d,2u} r135={1d} r136={1d,14u} r137={1d,1u} r138={1d} r139={1d} r140={2d,6u} r141={1d,1u} r142={1d,2u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,3u} r153={1d,5u} r154={1d} r155={1d} r156={1d} 
;;    total ref usage 485{394d,91u,0e} in 42{39 regular + 3 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368
0[0,8] 1[8,6] 2[14,4] 3[18,4] 11[22,1] 12[23,4] 13[27,1] 14[28,4] 15[32,3] 16[35,3] 17[38,3] 18[41,3] 19[44,3] 20[47,3] 21[50,3] 22[53,3] 23[56,3] 24[59,5] 25[64,1] 26[65,1] 27[66,3] 28[69,3] 29[72,3] 30[75,3] 31[78,3] 32[81,3] 33[84,3] 34[87,3] 35[90,3] 36[93,3] 37[96,3] 38[99,3] 39[102,3] 40[105,3] 41[108,3] 42[111,3] 43[114,3] 44[117,3] 45[120,3] 46[123,3] 47[126,3] 48[129,3] 49[132,3] 50[135,3] 51[138,3] 52[141,3] 53[144,3] 54[147,3] 55[150,3] 56[153,3] 57[156,3] 58[159,3] 59[162,3] 60[165,3] 61[168,3] 62[171,3] 63[174,3] 64[177,3] 65[180,3] 66[183,3] 67[186,3] 68[189,3] 69[192,3] 70[195,3] 71[198,3] 72[201,3] 73[204,3] 74[207,3] 75[210,3] 76[213,3] 77[216,3] 78[219,3] 79[222,3] 80[225,3] 81[228,3] 82[231,3] 83[234,3] 84[237,3] 85[240,3] 86[243,3] 87[246,3] 88[249,3] 89[252,3] 90[255,3] 91[258,3] 92[261,3] 93[264,3] 94[267,3] 95[270,3] 96[273,3] 97[276,3] 98[279,3] 99[282,3] 100[285,3] 101[288,3] 102[291,3] 103[294,3] 104[297,3] 105[300,3] 106[303,3] 107[306,3] 108[309,3] 109[312,3] 110[315,3] 111[318,3] 112[321,3] 113[324,3] 114[327,3] 115[330,3] 116[333,3] 117[336,3] 118[339,3] 119[342,3] 120[345,3] 121[348,3] 122[351,3] 123[354,3] 124[357,3] 125[360,3] 126[363,3] 127[366,3] 133[369,1] 134[370,1] 135[371,1] 136[372,1] 137[373,1] 138[374,1] 139[375,1] 140[376,2] 141[378,1] 142[379,1] 143[380,1] 144[381,1] 145[382,1] 146[383,1] 147[384,1] 148[385,1] 149[386,1] 150[387,1] 151[388,1] 152[389,1] 153[390,1] 154[391,1] 155[392,1] 156[393,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 135 136 140 141 142 143 144
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 135 136 140 141 142 143 144
;; live  kill	 14 [lr]
;; rd  in  	(10)
7, 13, 17, 21, 22, 26, 27, 31, 64, 65
;; rd  gen 	(9)
5, 62, 371, 372, 377, 378, 379, 380, 381
;; rd  kill	(25)
0, 1, 2, 3, 4, 5, 6, 7, 28, 29, 30, 31, 59, 60, 61, 62, 63, 371, 372, 376, 377, 378, 379, 380, 381

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 7 3 2 arch/arm/kernel/unwind.c:400 (set (reg/v:SI 140 [ start ])
        (reg:SI 0 r0 [ start ])) 167 {*arm_movsi_insn} (nil))

(insn 3 2 4 2 arch/arm/kernel/unwind.c:400 (set (reg/v:SI 141 [ size ])
        (reg:SI 1 r1 [ size ])) 167 {*arm_movsi_insn} (nil))

(insn 4 3 5 2 arch/arm/kernel/unwind.c:400 (set (reg/v:SI 142 [ text_addr ])
        (reg:SI 2 r2 [ text_addr ])) 167 {*arm_movsi_insn} (nil))

(insn 5 4 6 2 arch/arm/kernel/unwind.c:400 (set (reg/v:SI 143 [ text_size ])
        (reg:SI 3 r3 [ text_size ])) 167 {*arm_movsi_insn} (nil))

(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)

(note 9 6 11 2 ("found") NOTE_INSN_DELETED_LABEL 20)

(insn 11 9 12 2 include/linux/slab_def.h:122 (set (reg/f:SI 144)
        (symbol_ref:SI ("malloc_sizes") [flags 0xc0] <var_decl 0x11023e40 malloc_sizes>)) 167 {*arm_movsi_insn} (nil))

(insn 12 11 13 2 include/linux/slab_def.h:122 (set (reg:SI 0 r0)
        (mem/s/f/j:SI (plus:SI (reg/f:SI 144)
                (const_int 4 [0x4])) [0 <variable>.cs_cachep+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 13 12 14 2 include/linux/slab_def.h:122 (set (reg:SI 1 r1)
        (const_int 208 [0xd0])) 167 {*arm_movsi_insn} (nil))

(call_insn 14 13 15 2 include/linux/slab_def.h:122 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("kmem_cache_alloc") [flags 0x41] <function_decl 0x11024200 kmem_cache_alloc>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 15 14 17 2 include/linux/slab_def.h:122 (set (reg/v/f:SI 136 [ tab ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 17 15 18 2 arch/arm/kernel/unwind.c:408 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 136 [ tab ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 18 17 19 2 arch/arm/kernel/unwind.c:408 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 60)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 1014 [0x3f6])
        (nil)))
;; End of basic block 2 -> ( 7 3)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 140 141 142 143
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 140 141 142 143
;; rd  out 	(17)
5, 13, 17, 21, 22, 26, 27, 62, 64, 65, 371, 372, 377, 378, 379, 380, 381


;; Succ edge  7 [10.1%] 
;; Succ edge  3 [89.9%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u16(11){ }u17(13){ }u18(25){ }u19(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 140 141 142 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 140 141 142 143
;; lr  def 	 145 146
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 140 141 142 143
;; live  gen 	 145 146
;; live  kill	
;; rd  in  	(17)
5, 13, 17, 21, 22, 26, 27, 62, 64, 65, 371, 372, 377, 378, 379, 380, 381
;; rd  gen 	(2)
382, 383
;; rd  kill	(2)
382, 383

;; Pred edge  2 [89.9%]  (fallthru)
(note 19 18 20 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 20 19 21 3 arch/arm/kernel/unwind.c:411 (set (mem/s/f/j:SI (plus:SI (reg/v/f:SI 136 [ tab ])
                (const_int 8 [0x8])) [0 <variable>.start+0 S4 A32])
        (reg/v:SI 140 [ start ])) 167 {*arm_movsi_insn} (nil))

(insn 21 20 22 3 arch/arm/kernel/unwind.c:412 (set (reg:SI 145)
        (plus:SI (reg/v:SI 141 [ size ])
            (reg/v:SI 140 [ start ]))) 4 {*arm_addsi3} (nil))

(insn 22 21 23 3 arch/arm/kernel/unwind.c:412 (set (mem/s/f/j:SI (plus:SI (reg/v/f:SI 136 [ tab ])
                (const_int 12 [0xc])) [0 <variable>.stop+0 S4 A32])
        (reg:SI 145)) 167 {*arm_movsi_insn} (nil))

(insn 23 22 24 3 arch/arm/kernel/unwind.c:413 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 136 [ tab ])
                (const_int 16 [0x10])) [0 <variable>.begin_addr+0 S4 A32])
        (reg/v:SI 142 [ text_addr ])) 167 {*arm_movsi_insn} (nil))

(insn 24 23 25 3 arch/arm/kernel/unwind.c:414 (set (reg:SI 146)
        (plus:SI (reg/v:SI 143 [ text_size ])
            (reg/v:SI 142 [ text_addr ]))) 4 {*arm_addsi3} (nil))

(insn 25 24 38 3 arch/arm/kernel/unwind.c:414 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 136 [ tab ])
                (const_int 20 [0x14])) [0 <variable>.end_addr+0 S4 A32])
        (reg:SI 146)) 167 {*arm_movsi_insn} (nil))
;; End of basic block 3 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 140
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 140
;; rd  out 	(19)
5, 13, 17, 21, 22, 26, 27, 62, 64, 65, 371, 372, 377, 378, 379, 380, 381, 382, 383


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 5) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u32(11){ }u33(13){ }u34(25){ }u35(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 140
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 140
;; lr  def 	 147 148 149 150
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 140
;; live  gen 	 147 148 149 150
;; live  kill	
;; rd  in  	(25)
5, 13, 17, 21, 22, 26, 27, 61, 64, 65, 369, 371, 372, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388
;; rd  gen 	(4)
384, 385, 386, 387
;; rd  kill	(4)
384, 385, 386, 387

;; Pred edge  5 [91.0%] 
(code_label 38 25 28 4 23 "" [1 uses])

(note 28 38 29 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 29 28 30 4 arch/arm/kernel/unwind.c:418 (set (reg:SI 148 [ <variable>.addr ])
        (mem/s/j:SI (plus:SI (reg/v:SI 140 [ start ])
                (const_int -8 [0xfffffffffffffff8])) [0 <variable>.addr+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 30 29 31 4 arch/arm/kernel/unwind.c:418 (set (reg:SI 147)
        (ashift:SI (reg:SI 148 [ <variable>.addr ])
            (const_int 1 [0x1]))) 117 {*arm_shiftsi3} (nil))

(insn 31 30 32 4 arch/arm/kernel/unwind.c:418 (set (reg:SI 149)
        (ashiftrt:SI (reg:SI 147)
            (const_int 1 [0x1]))) 117 {*arm_shiftsi3} (nil))

(insn 32 31 33 4 arch/arm/kernel/unwind.c:418 (set (reg:SI 150)
        (plus:SI (reg/v/f:SI 133 [ idx.409 ])
            (reg:SI 149))) 4 {*arm_addsi3} (nil))

(insn 33 32 34 4 arch/arm/kernel/unwind.c:418 (set (mem/s/j:SI (plus:SI (reg/v:SI 140 [ start ])
                (const_int -8 [0xfffffffffffffff8])) [0 <variable>.addr+0 S4 A32])
        (reg:SI 150)) 167 {*arm_movsi_insn} (nil))
;; End of basic block 4 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 140
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 140
;; rd  out 	(25)
5, 13, 17, 21, 22, 26, 27, 61, 64, 65, 369, 371, 372, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388


;; Succ edge  5 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 3 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u43(11){ }u44(13){ }u45(25){ }u46(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 140
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 140
;; lr  def 	 24 [cc] 133 140 151
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 140
;; live  gen 	 24 [cc] 133 140 151
;; live  kill	
;; rd  in  	(27)
5, 13, 17, 21, 22, 26, 27, 61, 62, 64, 65, 369, 371, 372, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388
;; rd  gen 	(4)
61, 369, 376, 388
;; rd  kill	(9)
59, 60, 61, 62, 63, 369, 376, 377, 388

;; Pred edge  3 [100.0%]  (fallthru)
;; Pred edge  4 [100.0%]  (fallthru,dfs_back)
(code_label 34 33 35 5 22 "" [0 uses])

(note 35 34 36 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 36 35 37 5 arch/arm/kernel/unwind.c:418 (set (reg/v/f:SI 133 [ idx.409 ])
        (reg/v:SI 140 [ start ])) 167 {*arm_movsi_insn} (nil))

(insn 37 36 39 5 arch/arm/kernel/unwind.c:418 (set (reg/v:SI 140 [ start ])
        (plus:SI (reg/v:SI 140 [ start ])
            (const_int 8 [0x8]))) 4 {*arm_addsi3} (nil))

(insn 39 37 40 5 arch/arm/kernel/unwind.c:417 (set (reg/f:SI 151 [ <variable>.stop ])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 136 [ tab ])
                (const_int 12 [0xc])) [0 <variable>.stop+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 40 39 41 5 arch/arm/kernel/unwind.c:417 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 133 [ idx.409 ])
            (reg/f:SI 151 [ <variable>.stop ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 41 40 42 5 arch/arm/kernel/unwind.c:417 (set (pc)
        (if_then_else (ltu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 38)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
        (nil)))
;; End of basic block 5 -> ( 4 6)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 140
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 140
;; rd  out 	(25)
5, 13, 17, 21, 22, 26, 27, 61, 64, 65, 369, 371, 372, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388


;; Succ edge  4 [91.0%] 
;; Succ edge  6 [9.0%]  (fallthru)

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u53(11){ }u54(13){ }u55(25){ }u56(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 137 138 152 153 154 155 156
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; live  gen 	 0 [r0] 1 [r1] 134 137 138 152 153 154 155 156
;; live  kill	 14 [lr]
;; rd  in  	(25)
5, 13, 17, 21, 22, 26, 27, 61, 64, 65, 369, 371, 372, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388
;; rd  gen 	(8)
370, 373, 374, 389, 390, 391, 392, 393
;; rd  kill	(12)
28, 29, 30, 31, 370, 373, 374, 389, 390, 391, 392, 393

;; Pred edge  5 [9.0%]  (fallthru)
(note 42 41 43 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 43 42 44 6 arch/arm/kernel/unwind.c:420 (set (reg/f:SI 152)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 44 43 45 6 arch/arm/kernel/unwind.c:420 (set (reg:SI 0 r0)
        (reg/f:SI 152)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(call_insn 45 44 46 6 arch/arm/kernel/unwind.c:420 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("_raw_spin_lock_irqsave") [flags 0x41] <function_decl 0x10ad9d00 _raw_spin_lock_irqsave>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 46 45 48 6 arch/arm/kernel/unwind.c:420 (set (reg/v:SI 137 [ flags ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 48 46 49 6 include/linux/list.h:76 (set (reg/f:SI 153)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 49 48 51 6 include/linux/list.h:76 (set (reg/f:SI 134 [ D.15855 ])
        (mem/s/f/j/c:SI (plus:SI (reg/f:SI 153)
                (const_int 4 [0x4])) [0 unwind_tables.prev+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 51 49 53 6 include/linux/list.h:41 (set (mem/s/f/j/c:SI (plus:SI (reg/f:SI 153)
                (const_int 4 [0x4])) [0 unwind_tables.prev+0 S4 A32])
        (reg/v/f:SI 136 [ tab ])) 167 {*arm_movsi_insn} (nil))

(insn 53 51 54 6 include/linux/list.h:42 (set (mem/s/f/j:SI (reg/v/f:SI 136 [ tab ]) [0 <variable>.list.next+0 S4 A32])
        (reg/f:SI 153)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn 54 53 55 6 include/linux/list.h:43 (set (mem/s/f/j:SI (plus:SI (reg/v/f:SI 136 [ tab ])
                (const_int 4 [0x4])) [0 <variable>.list.prev+0 S4 A32])
        (reg/f:SI 134 [ D.15855 ])) 167 {*arm_movsi_insn} (nil))

(insn 55 54 57 6 include/linux/list.h:44 (set (mem/s/f/j:SI (reg/f:SI 134 [ D.15855 ]) [0 <variable>.next+0 S4 A32])
        (reg/v/f:SI 136 [ tab ])) 167 {*arm_movsi_insn} (nil))

(insn 57 55 58 6 include/linux/spinlock.h:340 (set (reg:SI 0 r0)
        (reg/f:SI 152)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 58 57 59 6 include/linux/spinlock.h:340 (set (reg:SI 1 r1)
        (reg/v:SI 137 [ flags ])) 167 {*arm_movsi_insn} (nil))

(call_insn 59 58 60 6 include/linux/spinlock.h:340 (parallel [
            (call (mem:SI (symbol_ref:SI ("_raw_spin_unlock_irqrestore") [flags 0x41] <function_decl 0x10aef080 _raw_spin_unlock_irqrestore>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 6 -> ( 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; rd  out 	(33)
5, 13, 17, 21, 22, 26, 27, 61, 64, 65, 369, 370, 371, 372, 373, 374, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 2 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u79(11){ }u80(13){ }u81(25){ }u82(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 0 [r0] 139
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; live  gen 	 0 [r0] 139
;; live  kill	
;; rd  in  	(35)
5, 13, 17, 21, 22, 26, 27, 61, 62, 64, 65, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393
;; rd  gen 	(2)
0, 375
;; rd  kill	(9)
0, 1, 2, 3, 4, 5, 6, 7, 375

;; Pred edge  2 [10.1%] 
;; Pred edge  6 [100.0%]  (fallthru)
(code_label 60 59 61 7 21 "" [1 uses])

(note 61 60 66 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 66 61 72 7 arch/arm/kernel/unwind.c:425 (set (reg/i:SI 0 r0)
        (reg/v/f:SI 136 [ tab ])) 167 {*arm_movsi_insn} (nil))

(insn 72 66 0 7 arch/arm/kernel/unwind.c:425 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 7 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(36)
0, 13, 17, 21, 22, 26, 27, 61, 62, 64, 65, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
deleting insn with uid = 16.
deleting insn with uid = 47.
deleting insn with uid = 50.
deleting insn with uid = 52.
deleting insn with uid = 56.
deleting insn with uid = 62.
ending the processing of deferred insns

;; Function search_index (search_index)[0:854]

Disambiguating loop 1 with multiple latches
Merged latch edges of loop 1
changing bb of uid 70
  unscanned insn
changing bb of uid 49
  from 8 to 11
changing bb of uid 50
  from 8 to 11
changing bb of uid 51
  from 8 to 11
Fallthru edge 4->11 redirected to 11
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 11 9 10
;;
;; Loop 1
;;  header 11, latch 8
;;  depth 1, outer 0
;;  nodes: 11 8 7 6 5
;; 2 succs { 3 4 }
;; 3 succs { 10 }
;; 4 succs { 10 11 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 11 }
;; 11 succs { 5 9 }
;; 9 succs { 10 }
;; 10 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 12 n_edges 15 count 26 (  2.2)
df_worklist_dataflow_doublequeue:n_basic_blocks 12 n_edges 15 count 24 (    2)
df_worklist_dataflow_doublequeue:n_basic_blocks 12 n_edges 15 count 26 (  2.2)

In insn 13, replacing
 (reg/f:SI 141)
 with (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x11075fa0>)
Changes to insn 13 not profitable


try_optimize_cfg iteration 1

Fallthru edge 6->9 redirected to 9
merging block 8 into block 7
deferring deletion of insn with uid = 46.
changing bb of uid 47
deferring deletion of insn with uid = 47.
Merged blocks 7 and 8.


try_optimize_cfg iteration 2



try_optimize_cfg iteration 1

deferring deletion of insn with uid = 56.
deferring deletion of insn with uid = 35.
deferring deletion of insn with uid = 34.
Deleted 3 trivially dead insns

Number of successful forward propagations: 0



search_index

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={4d,4u} r1={3d,2u} r2={2d,1u} r3={2d} r11={1d,10u} r12={2d} r13={1d,11u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={5d,4u} r25={1d,10u} r26={1d,9u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d} r134={1d} r135={1d,5u} r136={1d} r137={1d,4u} r138={2d,5u} r139={4d,5u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u,1d} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} 
;;    total ref usage 237{155d,81u,1e} in 31{30 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133
0[0,4] 1[4,3] 2[7,2] 3[9,2] 11[11,1] 12[12,2] 13[14,1] 14[15,2] 15[17,1] 16[18,1] 17[19,1] 18[20,1] 19[21,1] 20[22,1] 21[23,1] 22[24,1] 23[25,1] 24[26,5] 25[31,1] 26[32,1] 27[33,1] 28[34,1] 29[35,1] 30[36,1] 31[37,1] 32[38,1] 33[39,1] 34[40,1] 35[41,1] 36[42,1] 37[43,1] 38[44,1] 39[45,1] 40[46,1] 41[47,1] 42[48,1] 43[49,1] 44[50,1] 45[51,1] 46[52,1] 47[53,1] 48[54,1] 49[55,1] 50[56,1] 51[57,1] 52[58,1] 53[59,1] 54[60,1] 55[61,1] 56[62,1] 57[63,1] 58[64,1] 59[65,1] 60[66,1] 61[67,1] 62[68,1] 63[69,1] 64[70,1] 65[71,1] 66[72,1] 67[73,1] 68[74,1] 69[75,1] 70[76,1] 71[77,1] 72[78,1] 73[79,1] 74[80,1] 75[81,1] 76[82,1] 77[83,1] 78[84,1] 79[85,1] 80[86,1] 81[87,1] 82[88,1] 83[89,1] 84[90,1] 85[91,1] 86[92,1] 87[93,1] 88[94,1] 89[95,1] 90[96,1] 91[97,1] 92[98,1] 93[99,1] 94[100,1] 95[101,1] 96[102,1] 97[103,1] 98[104,1] 99[105,1] 100[106,1] 101[107,1] 102[108,1] 103[109,1] 104[110,1] 105[111,1] 106[112,1] 107[113,1] 108[114,1] 109[115,1] 110[116,1] 111[117,1] 112[118,1] 113[119,1] 114[120,1] 115[121,1] 116[122,1] 117[123,1] 118[124,1] 119[125,1] 120[126,1] 121[127,1] 122[128,1] 123[129,1] 124[130,1] 125[131,1] 126[132,1] 127[133,1] 133[134,1] 134[135,1] 135[136,1] 136[137,1] 137[138,1] 138[139,2] 139[141,4] 140[145,1] 141[146,1] 142[147,1] 143[148,1] 145[149,1] 146[150,1] 147[151,1] 148[152,1] 149[153,1] 150[154,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 137 138 139 140
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 137 138 139 140
;; live  kill	
;; rd  in  	(10)
3, 6, 8, 10, 11, 13, 14, 16, 31, 32
;; rd  gen 	(5)
30, 138, 140, 144, 145
;; rd  kill	(13)
26, 27, 28, 29, 30, 138, 139, 140, 141, 142, 143, 144, 145

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 6 3 2 arch/arm/kernel/unwind.c:107 (set (reg/v:SI 137 [ addr ])
        (reg:SI 0 r0 [ addr ])) 167 {*arm_movsi_insn} (nil))

(insn 3 2 4 2 arch/arm/kernel/unwind.c:107 (set (reg/v/f:SI 138 [ first ])
        (reg:SI 1 r1 [ first ])) 167 {*arm_movsi_insn} (nil))

(insn 4 3 5 2 arch/arm/kernel/unwind.c:107 (set (reg/v/f:SI 139 [ last ])
        (reg:SI 2 r2 [ last ])) 167 {*arm_movsi_insn} (nil))

(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)

(insn 8 5 9 2 arch/arm/kernel/unwind.c:110 (set (reg:SI 140 [ <variable>.addr ])
        (mem/s/j:SI (reg/v/f:SI 138 [ first ]) [0 <variable>.addr+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 9 8 10 2 arch/arm/kernel/unwind.c:110 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 137 [ addr ])
            (reg:SI 140 [ <variable>.addr ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 10 9 11 2 arch/arm/kernel/unwind.c:110 (set (pc)
        (if_then_else (geu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 19)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139
;; rd  out 	(15)
3, 6, 8, 10, 11, 13, 14, 16, 30, 31, 32, 138, 140, 144, 145


;; Succ edge  3 [0.0%]  (fallthru)
;; Succ edge  4 [100.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u11(11){ }u12(13){ }u13(25){ }u14(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 139 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; live  gen 	 0 [r0] 1 [r1] 139 141
;; live  kill	 14 [lr]
;; rd  in  	(15)
3, 6, 8, 10, 11, 13, 14, 16, 30, 31, 32, 138, 140, 144, 145
;; rd  gen 	(3)
1, 143, 146
;; rd  kill	(11)
0, 1, 2, 3, 15, 16, 141, 142, 143, 144, 146

;; Pred edge  2 [0.0%]  (fallthru)
(note 11 10 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 12 11 13 3 arch/arm/kernel/unwind.c:111 (set (reg/f:SI 141)
        (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x11075fa0>)) 167 {*arm_movsi_insn} (nil))

(insn 13 12 14 3 arch/arm/kernel/unwind.c:111 (set (reg:SI 0 r0)
        (reg/f:SI 141)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x11075fa0>)
        (nil)))

(insn 14 13 15 3 arch/arm/kernel/unwind.c:111 (set (reg:SI 1 r1)
        (reg/v:SI 137 [ addr ])) 167 {*arm_movsi_insn} (nil))

(call_insn 15 14 16 3 arch/arm/kernel/unwind.c:111 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 16 15 19 3 arch/arm/kernel/unwind.c:112 (set (reg/v/f:SI 139 [ last ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 3 -> ( 11)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; rd  out 	(15)
1, 6, 8, 10, 11, 13, 14, 30, 31, 32, 138, 140, 143, 145, 146


;; Succ edge  11 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u20(11){ }u21(13){ }u22(25){ }u23(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139
;; lr  def 	 24 [cc] 142
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139
;; live  gen 	 24 [cc] 142
;; live  kill	
;; rd  in  	(15)
3, 6, 8, 10, 11, 13, 14, 16, 30, 31, 32, 138, 140, 144, 145
;; rd  gen 	(2)
28, 147
;; rd  kill	(6)
26, 27, 28, 29, 30, 147

;; Pred edge  2 [100.0%] 
(code_label 19 16 20 4 28 "" [1 uses])

(note 20 19 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 21 20 22 4 arch/arm/kernel/unwind.c:113 (set (reg:SI 142 [ <variable>.addr ])
        (mem/s/j:SI (reg/v/f:SI 139 [ last ]) [0 <variable>.addr+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 22 21 23 4 arch/arm/kernel/unwind.c:113 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 137 [ addr ])
            (reg:SI 142 [ <variable>.addr ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 23 22 48 4 arch/arm/kernel/unwind.c:113 (set (pc)
        (if_then_else (geu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 54)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))
;; End of basic block 4 -> ( 11 9)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139
;; rd  out 	(16)
3, 6, 8, 10, 11, 13, 14, 16, 28, 31, 32, 138, 140, 144, 145, 147


;; Succ edge  11 [39.0%] 
;; Succ edge  9 [61.0%]  (fallthru)

;; Start of basic block ( 9) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u28(11){ }u29(13){ }u30(25){ }u31(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 139
;; lr  def 	 24 [cc] 133 134 135 143 145 146 147 148 149
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139
;; live  gen 	 24 [cc] 133 134 135 143 145 146 147 148 149
;; live  kill	
;; rd  in  	(28)
3, 6, 8, 10, 11, 13, 14, 16, 26, 31, 32, 134, 135, 136, 138, 139, 140, 141, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154
;; rd  gen 	(10)
27, 134, 135, 136, 148, 149, 150, 151, 152, 153
;; rd  kill	(14)
26, 27, 28, 29, 30, 134, 135, 136, 148, 149, 150, 151, 152, 153

;; Pred edge  9 [95.5%] 
(code_label 48 23 27 5 32 "" [1 uses])

(note 27 48 28 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 28 27 29 5 arch/arm/kernel/unwind.c:117 (set (reg:SI 143)
        (minus:SI (reg/v/f:SI 139 [ last ])
            (reg/v/f:SI 138 [ first ]))) 28 {*arm_subsi3_insn} (nil))

(insn 29 28 30 5 arch/arm/kernel/unwind.c:117 (set (reg:SI 145)
        (ashiftrt:SI (reg:SI 143)
            (const_int 3 [0x3]))) 117 {*arm_shiftsi3} (expr_list:REG_EQUAL (div:SI (reg:SI 143)
            (const_int 8 [0x8]))
        (nil)))

(insn 30 29 31 5 arch/arm/kernel/unwind.c:117 (set (reg:SI 146)
        (plus:SI (reg:SI 145)
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 31 30 32 5 arch/arm/kernel/unwind.c:117 (set (reg:SI 147)
        (ashiftrt:SI (reg:SI 146)
            (const_int 1 [0x1]))) 117 {*arm_shiftsi3} (nil))

(insn 32 31 33 5 arch/arm/kernel/unwind.c:117 (set (reg:SI 148)
        (ashift:SI (reg:SI 147)
            (const_int 3 [0x3]))) 117 {*arm_shiftsi3} (nil))

(insn 33 32 36 5 arch/arm/kernel/unwind.c:117 (set (reg/v/f:SI 135 [ mid ])
        (plus:SI (reg/v/f:SI 138 [ first ])
            (reg:SI 148))) 4 {*arm_addsi3} (nil))

(insn 36 33 37 5 arch/arm/kernel/unwind.c:119 (set (reg:SI 149 [ <variable>.addr ])
        (mem/s/j:SI (reg/v/f:SI 135 [ mid ]) [0 <variable>.addr+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 37 36 38 5 arch/arm/kernel/unwind.c:119 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 137 [ addr ])
            (reg:SI 149 [ <variable>.addr ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 38 37 39 5 arch/arm/kernel/unwind.c:119 (set (pc)
        (if_then_else (geu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 43)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 1400 [0x578])
        (nil)))
;; End of basic block 5 -> ( 6 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 137 138 139
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 137 138 139
;; rd  out 	(28)
3, 6, 8, 10, 11, 13, 14, 16, 27, 31, 32, 134, 135, 136, 138, 139, 140, 141, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154


;; Succ edge  6 [86.0%]  (fallthru,dfs_back)
;; Succ edge  7 [14.0%]  (dfs_back)

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u47(11){ }u48(13){ }u49(25){ }u50(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 137 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 139
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 137 138
;; live  gen 	 139
;; live  kill	
;; rd  in  	(28)
3, 6, 8, 10, 11, 13, 14, 16, 27, 31, 32, 134, 135, 136, 138, 139, 140, 141, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154
;; rd  gen 	(1)
141
;; rd  kill	(4)
141, 142, 143, 144

;; Pred edge  5 [86.0%]  (fallthru,dfs_back)
(note 39 38 40 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 40 39 43 6 arch/arm/kernel/unwind.c:117 (set (reg/v/f:SI 139 [ last ])
        (reg/v/f:SI 135 [ mid ])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 6 -> ( 9)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139
;; rd  out 	(27)
3, 6, 8, 10, 11, 13, 14, 16, 27, 31, 32, 134, 135, 136, 138, 139, 140, 141, 145, 147, 148, 149, 150, 151, 152, 153, 154


;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u52(11){ }u53(13){ }u54(25){ }u55(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 137 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 138
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 137 139
;; live  gen 	 138
;; live  kill	
;; rd  in  	(28)
3, 6, 8, 10, 11, 13, 14, 16, 27, 31, 32, 134, 135, 136, 138, 139, 140, 141, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154
;; rd  gen 	(1)
139
;; rd  kill	(2)
139, 140

;; Pred edge  5 [14.0%]  (dfs_back)
(code_label 43 40 44 7 31 "" [1 uses])

(note 44 43 45 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 45 44 70 7 arch/arm/kernel/unwind.c:117 (set (reg/v/f:SI 138 [ first ])
        (reg/v/f:SI 135 [ mid ])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 7 -> ( 9)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139
;; rd  out 	(27)
3, 6, 8, 10, 11, 13, 14, 16, 27, 31, 32, 134, 135, 136, 138, 139, 141, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154


;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 7 4 6) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u61(11){ }u62(13){ }u63(25){ }u64(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139
;; lr  def 	 24 [cc] 150
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139
;; live  gen 	 24 [cc] 150
;; live  kill	
;; rd  in  	(29)
3, 6, 8, 10, 11, 13, 14, 16, 27, 28, 31, 32, 134, 135, 136, 138, 139, 140, 141, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154
;; rd  gen 	(2)
26, 154
;; rd  kill	(6)
26, 27, 28, 29, 30, 154

;; Pred edge  7 [100.0%]  (fallthru)
;; Pred edge  4 [61.0%]  (fallthru)
;; Pred edge  6 [100.0%]  (fallthru)
(note 70 45 49 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 49 70 50 9 arch/arm/kernel/unwind.c:116 discrim 1 (set (reg/f:SI 150)
        (plus:SI (reg/v/f:SI 139 [ last ])
            (const_int -8 [0xfffffffffffffff8]))) 4 {*arm_addsi3} (nil))

(insn 50 49 51 9 arch/arm/kernel/unwind.c:116 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 138 [ first ])
            (reg/f:SI 150))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 51 50 52 9 arch/arm/kernel/unwind.c:116 discrim 1 (set (pc)
        (if_then_else (ltu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 48)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9550 [0x254e])
        (nil)))
;; End of basic block 9 -> ( 5 10)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139
;; rd  out 	(28)
3, 6, 8, 10, 11, 13, 14, 16, 26, 31, 32, 134, 135, 136, 138, 139, 140, 141, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154


;; Succ edge  5 [95.5%] 
;; Succ edge  10 [4.5%]  (fallthru)

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u69(11){ }u70(13){ }u71(25){ }u72(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 139
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; live  gen 	 139
;; live  kill	
;; rd  in  	(28)
3, 6, 8, 10, 11, 13, 14, 16, 26, 31, 32, 134, 135, 136, 138, 139, 140, 141, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154
;; rd  gen 	(1)
142
;; rd  kill	(4)
141, 142, 143, 144

;; Pred edge  9 [4.5%]  (fallthru)
(note 52 51 53 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 53 52 54 10 arch/arm/kernel/unwind.c:116 discrim 1 (set (reg/v/f:SI 139 [ last ])
        (reg/v/f:SI 138 [ first ])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 10 -> ( 11)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; rd  out 	(27)
3, 6, 8, 10, 11, 13, 14, 16, 26, 31, 32, 134, 135, 136, 138, 139, 140, 142, 145, 147, 148, 149, 150, 151, 152, 153, 154


;; Succ edge  11 [100.0%]  (fallthru)

;; Start of basic block ( 3 4 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u74(11){ }u75(13){ }u76(25){ }u77(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 0 [r0] 136
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  gen 	 0 [r0] 136
;; live  kill	
;; rd  in  	(33)
1, 3, 6, 8, 10, 11, 13, 14, 16, 26, 28, 30, 31, 32, 134, 135, 136, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154
;; rd  gen 	(2)
0, 137
;; rd  kill	(5)
0, 1, 2, 3, 137

;; Pred edge  3 [100.0%]  (fallthru)
;; Pred edge  4 [39.0%] 
;; Pred edge  10 [100.0%]  (fallthru)
(code_label 54 53 55 11 29 "" [1 uses])

(note 55 54 60 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 60 55 66 11 arch/arm/kernel/unwind.c:126 (set (reg/i:SI 0 r0)
        (reg/v/f:SI 139 [ last ])) 167 {*arm_movsi_insn} (nil))

(insn 66 60 0 11 arch/arm/kernel/unwind.c:126 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 11 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(33)
0, 6, 8, 10, 11, 13, 14, 16, 26, 28, 30, 31, 32, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
deleting insn with uid = 34.
deleting insn with uid = 35.
deleting insn with uid = 46.
deleting insn with uid = 47.
deleting insn with uid = 56.
ending the processing of deferred insns

;; Function unwind_get_byte (unwind_get_byte)[0:856]

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { 7 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 9 count 14 (  1.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 9 count 14 (  1.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 9 count 14 (  1.8)

In insn 11, replacing
 (reg/f:SI 139)
 with (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x110e3b80>)
Changes to insn 11 not profitable

In insn 33, replacing
 (reg:SI 146)
 with (const_int 3 [0x3])
Changes to insn 33 not recognized
 Setting REG_EQUAL note


try_optimize_cfg iteration 1

deferring deletion of insn with uid = 42.
deferring deletion of insn with uid = 29.
Deleted 2 trivially dead insns

Number of successful forward propagations: 0



unwind_get_byte

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={4d,4u} r1={2d} r2={2d} r3={2d} r11={1d,7u} r12={2d} r13={1d,8u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={3d,2u} r25={1d,7u} r26={1d,6u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={2d,2u} r134={1d,3u} r135={1d,2u} r136={1d} r137={1d,7u} r138={1d,3u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d} r145={1d,1u} r146={1d,1u} r147={1d,1u} 
;;    total ref usage 207{147d,60u,0e} in 26{25 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130
0[0,4] 1[4,2] 2[6,2] 3[8,2] 11[10,1] 12[11,2] 13[13,1] 14[14,2] 15[16,1] 16[17,1] 17[18,1] 18[19,1] 19[20,1] 20[21,1] 21[22,1] 22[23,1] 23[24,1] 24[25,3] 25[28,1] 26[29,1] 27[30,1] 28[31,1] 29[32,1] 30[33,1] 31[34,1] 32[35,1] 33[36,1] 34[37,1] 35[38,1] 36[39,1] 37[40,1] 38[41,1] 39[42,1] 40[43,1] 41[44,1] 42[45,1] 43[46,1] 44[47,1] 45[48,1] 46[49,1] 47[50,1] 48[51,1] 49[52,1] 50[53,1] 51[54,1] 52[55,1] 53[56,1] 54[57,1] 55[58,1] 56[59,1] 57[60,1] 58[61,1] 59[62,1] 60[63,1] 61[64,1] 62[65,1] 63[66,1] 64[67,1] 65[68,1] 66[69,1] 67[70,1] 68[71,1] 69[72,1] 70[73,1] 71[74,1] 72[75,1] 73[76,1] 74[77,1] 75[78,1] 76[79,1] 77[80,1] 78[81,1] 79[82,1] 80[83,1] 81[84,1] 82[85,1] 83[86,1] 84[87,1] 85[88,1] 86[89,1] 87[90,1] 88[91,1] 89[92,1] 90[93,1] 91[94,1] 92[95,1] 93[96,1] 94[97,1] 95[98,1] 96[99,1] 97[100,1] 98[101,1] 99[102,1] 100[103,1] 101[104,1] 102[105,1] 103[106,1] 104[107,1] 105[108,1] 106[109,1] 107[110,1] 108[111,1] 109[112,1] 110[113,1] 111[114,1] 112[115,1] 113[116,1] 114[117,1] 115[118,1] 116[119,1] 117[120,1] 118[121,1] 119[122,1] 120[123,1] 121[124,1] 122[125,1] 123[126,1] 124[127,1] 125[128,1] 126[129,1] 127[130,1] 133[131,2] 134[133,1] 135[134,1] 136[135,1] 137[136,1] 138[137,1] 139[138,1] 140[139,1] 141[140,1] 142[141,1] 143[142,1] 144[143,1] 145[144,1] 146[145,1] 147[146,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 137 138
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 137 138
;; live  kill	
;; rd  in  	(10)
3, 5, 7, 9, 10, 12, 13, 15, 28, 29
;; rd  gen 	(3)
27, 136, 137
;; rd  kill	(5)
25, 26, 27, 136, 137

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 arch/arm/kernel/unwind.c:162 (set (reg/v/f:SI 137 [ ctrl ])
        (reg:SI 0 r0 [ ctrl ])) 167 {*arm_movsi_insn} (nil))

(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 3 7 2 arch/arm/kernel/unwind.c:165 (set (reg:SI 138 [ <variable>.entries ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 137 [ ctrl ])
                (const_int 68 [0x44])) [0 <variable>.entries+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 7 6 8 2 arch/arm/kernel/unwind.c:165 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 138 [ <variable>.entries ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 8 7 9 2 arch/arm/kernel/unwind.c:165 (set (pc)
        (if_then_else (gt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 16)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138
;; rd  out 	(13)
3, 5, 7, 9, 10, 12, 13, 15, 27, 28, 29, 136, 137


;; Succ edge  3 [0.0%]  (fallthru)
;; Succ edge  4 [100.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(11){ }u9(13){ }u10(25){ }u11(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 139
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 133 139
;; live  kill	 14 [lr]
;; rd  in  	(13)
3, 5, 7, 9, 10, 12, 13, 15, 27, 28, 29, 136, 137
;; rd  gen 	(3)
1, 132, 138
;; rd  kill	(9)
0, 1, 2, 3, 14, 15, 131, 132, 138

;; Pred edge  2 [0.0%]  (fallthru)
(note 9 8 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 10 9 11 3 arch/arm/kernel/unwind.c:166 (set (reg/f:SI 139)
        (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x110e3b80>)) 167 {*arm_movsi_insn} (nil))

(insn 11 10 12 3 arch/arm/kernel/unwind.c:166 (set (reg:SI 0 r0)
        (reg/f:SI 139)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x110e3b80>)
        (nil)))

(call_insn 12 11 13 3 arch/arm/kernel/unwind.c:166 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 13 12 16 3 arch/arm/kernel/unwind.c:167 (set (reg/v:SI 133 [ ret ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 3 -> ( 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; rd  out 	(14)
1, 5, 7, 9, 10, 12, 13, 27, 28, 29, 132, 136, 137, 138


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u15(11){ }u16(13){ }u17(25){ }u18(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc] 133 134 135 140 141 142
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138
;; live  gen 	 24 [cc] 133 134 135 140 141 142
;; live  kill	
;; rd  in  	(13)
3, 5, 7, 9, 10, 12, 13, 15, 27, 28, 29, 136, 137
;; rd  gen 	(7)
25, 131, 133, 134, 139, 140, 141
;; rd  kill	(10)
25, 26, 27, 131, 132, 133, 134, 139, 140, 141

;; Pred edge  2 [100.0%] 
(code_label 16 13 17 4 38 "" [1 uses])

(note 17 16 18 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 18 17 19 4 arch/arm/kernel/unwind.c:170 (set (reg/f:SI 135 [ D.15480 ])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 137 [ ctrl ])
                (const_int 64 [0x40])) [0 <variable>.insn+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 19 18 20 4 arch/arm/kernel/unwind.c:170 (set (reg:SI 134 [ D.15482 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 137 [ ctrl ])
                (const_int 72 [0x48])) [0 <variable>.byte+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 20 19 21 4 arch/arm/kernel/unwind.c:170 (set (reg:SI 140)
        (ashift:SI (reg:SI 134 [ D.15482 ])
            (const_int 3 [0x3]))) 117 {*arm_shiftsi3} (nil))

(insn 21 20 22 4 arch/arm/kernel/unwind.c:170 (set (reg:SI 142)
        (mem:SI (reg/f:SI 135 [ D.15480 ]) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 22 21 23 4 arch/arm/kernel/unwind.c:170 (set (reg:SI 141)
        (lshiftrt:SI (reg:SI 142)
            (reg:SI 140))) 117 {*arm_shiftsi3} (nil))

(insn 23 22 24 4 arch/arm/kernel/unwind.c:170 (set (reg/v:SI 133 [ ret ])
        (and:SI (reg:SI 141)
            (const_int 255 [0xff]))) 67 {*arm_andsi3_insn} (nil))

(insn 24 23 25 4 arch/arm/kernel/unwind.c:172 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 134 [ D.15482 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 25 24 26 4 arch/arm/kernel/unwind.c:172 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 36)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
        (nil)))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 135 137 138
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 135 137 138
;; rd  out 	(19)
3, 5, 7, 9, 10, 12, 13, 15, 25, 28, 29, 131, 133, 134, 136, 137, 139, 140, 141


;; Succ edge  5 [39.0%]  (fallthru)
;; Succ edge  6 [61.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u28(11){ }u29(13){ }u30(25){ }u31(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 135 137 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 138
;; lr  def 	 143 144 145 146
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 135 137 138
;; live  gen 	 143 144 145 146
;; live  kill	
;; rd  in  	(19)
3, 5, 7, 9, 10, 12, 13, 15, 25, 28, 29, 131, 133, 134, 136, 137, 139, 140, 141
;; rd  gen 	(4)
142, 143, 144, 145
;; rd  kill	(4)
142, 143, 144, 145

;; Pred edge  4 [39.0%]  (fallthru)
(note 26 25 27 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 27 26 28 5 arch/arm/kernel/unwind.c:173 (set (reg/f:SI 143)
        (plus:SI (reg/f:SI 135 [ D.15480 ])
            (const_int 4 [0x4]))) 4 {*arm_addsi3} (nil))

(insn 28 27 30 5 arch/arm/kernel/unwind.c:173 (set (mem/s/f/j:SI (plus:SI (reg/v/f:SI 137 [ ctrl ])
                (const_int 64 [0x40])) [0 <variable>.insn+0 S4 A32])
        (reg/f:SI 143)) 167 {*arm_movsi_insn} (nil))

(insn 30 28 31 5 arch/arm/kernel/unwind.c:174 (set (reg:SI 145)
        (plus:SI (reg:SI 138 [ <variable>.entries ])
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (nil))

(insn 31 30 32 5 arch/arm/kernel/unwind.c:174 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 137 [ ctrl ])
                (const_int 68 [0x44])) [0 <variable>.entries+0 S4 A32])
        (reg:SI 145)) 167 {*arm_movsi_insn} (nil))

(insn 32 31 33 5 arch/arm/kernel/unwind.c:175 (set (reg:SI 146)
        (const_int 3 [0x3])) 167 {*arm_movsi_insn} (nil))

(insn 33 32 36 5 arch/arm/kernel/unwind.c:175 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 137 [ ctrl ])
                (const_int 72 [0x48])) [0 <variable>.byte+0 S4 A32])
        (reg:SI 146)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 3 [0x3])
        (nil)))
;; End of basic block 5 -> ( 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(23)
3, 5, 7, 9, 10, 12, 13, 15, 25, 28, 29, 131, 133, 134, 136, 137, 139, 140, 141, 142, 143, 144, 145


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u41(11){ }u42(13){ }u43(25){ }u44(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 137
;; lr  def 	 147
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 137
;; live  gen 	 147
;; live  kill	
;; rd  in  	(19)
3, 5, 7, 9, 10, 12, 13, 15, 25, 28, 29, 131, 133, 134, 136, 137, 139, 140, 141
;; rd  gen 	(1)
146
;; rd  kill	(1)
146

;; Pred edge  4 [61.0%] 
(code_label 36 33 37 6 40 "" [1 uses])

(note 37 36 38 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 38 37 39 6 arch/arm/kernel/unwind.c:177 (set (reg:SI 147)
        (plus:SI (reg:SI 134 [ D.15482 ])
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (nil))

(insn 39 38 40 6 arch/arm/kernel/unwind.c:177 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 137 [ ctrl ])
                (const_int 72 [0x48])) [0 <variable>.byte+0 S4 A32])
        (reg:SI 147)) 167 {*arm_movsi_insn} (nil))
;; End of basic block 6 -> ( 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(20)
3, 5, 7, 9, 10, 12, 13, 15, 25, 28, 29, 131, 133, 134, 136, 137, 139, 140, 141, 146


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 3 6 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u48(11){ }u49(13){ }u50(25){ }u51(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 0 [r0] 136
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  gen 	 0 [r0] 136
;; live  kill	
;; rd  in  	(28)
1, 3, 5, 7, 9, 10, 12, 13, 15, 25, 27, 28, 29, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146
;; rd  gen 	(2)
0, 135
;; rd  kill	(5)
0, 1, 2, 3, 135

;; Pred edge  3 [100.0%]  (fallthru)
;; Pred edge  6 [100.0%]  (fallthru)
;; Pred edge  5 [100.0%]  (fallthru)
(code_label 40 39 41 7 39 "" [0 uses])

(note 41 40 46 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 46 41 52 7 arch/arm/kernel/unwind.c:180 (set (reg/i:SI 0 r0)
        (reg/v:SI 133 [ ret ])) 167 {*arm_movsi_insn} (nil))

(insn 52 46 0 7 arch/arm/kernel/unwind.c:180 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 7 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(28)
0, 5, 7, 9, 10, 12, 13, 15, 25, 27, 28, 29, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
deleting insn with uid = 29.
deleting insn with uid = 42.
ending the processing of deferred insns

;; Function unwind_frame (unwind_frame)[0:858]

;; 6 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73
;;
;; Loop 2
;;  header 67, latch 66
;;  depth 1, outer 0
;;  nodes: 67 66 65 27 29 61 37 38 41 48 52 63 62 53 49 42 40 39 30 28 26 50 51 46 47 45 43 44 36 34 35 33 31 60 58 59 57 55 54
;;
;; Loop 5
;;  header 34, latch 36
;;  depth 2, outer 2
;;  nodes: 34 36 35
;;
;; Loop 4
;;  header 58, latch 60
;;  depth 2, outer 2
;;  nodes: 58 60 59
;;
;; Loop 3
;;  header 45, latch 44
;;  depth 2, outer 2
;;  nodes: 45 44
;;
;; Loop 1
;;  header 10, latch 9
;;  depth 1, outer 0
;;  nodes: 10 9 6 7
;; 2 succs { 72 3 }
;; 3 succs { 4 5 }
;; 4 succs { 13 }
;; 5 succs { 10 }
;; 6 succs { 7 9 }
;; 7 succs { 8 9 }
;; 8 succs { 12 }
;; 9 succs { 10 }
;; 10 succs { 6 11 }
;; 11 succs { 12 }
;; 12 succs { 13 }
;; 13 succs { 14 15 }
;; 14 succs { 73 }
;; 15 succs { 72 16 }
;; 16 succs { 17 18 }
;; 17 succs { 21 }
;; 18 succs { 19 20 }
;; 19 succs { 21 }
;; 20 succs { 73 }
;; 21 succs { 22 23 }
;; 22 succs { 67 }
;; 23 succs { 24 25 }
;; 24 succs { 67 }
;; 25 succs { 73 }
;; 26 succs { 27 28 }
;; 27 succs { 65 }
;; 28 succs { 29 30 }
;; 29 succs { 65 }
;; 30 succs { 31 39 }
;; 31 succs { 32 33 }
;; 32 succs { 73 }
;; 33 succs { 34 }
;; 34 succs { 35 36 }
;; 35 succs { 36 }
;; 36 succs { 34 37 }
;; 37 succs { 38 65 }
;; 38 succs { 65 }
;; 39 succs { 40 42 }
;; 40 succs { 41 49 }
;; 41 succs { 65 }
;; 42 succs { 43 49 }
;; 43 succs { 45 }
;; 44 succs { 45 }
;; 45 succs { 44 46 }
;; 46 succs { 47 48 }
;; 47 succs { 48 }
;; 48 succs { 65 }
;; 49 succs { 50 53 }
;; 50 succs { 51 52 }
;; 51 succs { 52 }
;; 52 succs { 65 }
;; 53 succs { 54 62 }
;; 54 succs { 56 55 }
;; 55 succs { 56 57 }
;; 56 succs { 73 }
;; 57 succs { 58 }
;; 58 succs { 59 60 }
;; 59 succs { 60 }
;; 60 succs { 58 61 }
;; 61 succs { 65 }
;; 62 succs { 63 64 }
;; 63 succs { 65 }
;; 64 succs { 73 }
;; 65 succs { 72 66 }
;; 66 succs { 72 67 }
;; 67 succs { 26 68 }
;; 68 succs { 69 70 }
;; 69 succs { 70 }
;; 70 succs { 72 71 }
;; 71 succs { 73 }
;; 72 succs { 73 }
;; 73 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 74 n_edges 109 count 186 (  2.5)
df_worklist_dataflow_doublequeue:n_basic_blocks 74 n_edges 109 count 150 (    2)
df_worklist_dataflow_doublequeue:n_basic_blocks 74 n_edges 109 count 195 (  2.6)

In insn 28, replacing
 (reg/f:SI 179)
 with (symbol_ref:SI ("__start_unwind_idx") [flags 0xc0] <var_decl 0x11041000 __start_unwind_idx>)
Changes to insn 28 not profitable

In insn 29, replacing
 (reg/f:SI 180)
 with (const:SI (plus:SI (symbol_ref:SI ("__stop_unwind_idx") [flags 0xc0] <var_decl 0x11041060 __stop_unwind_idx>)
            (const_int -8 [0xfffffffffffffff8])))
Changes to insn 29 not profitable

In insn 37, replacing
 (reg/f:SI 181)
 with (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
Changes to insn 37 not profitable

In insn 83, replacing
 (compare:CC (reg/v/f:SI 158 [ table ])
        (reg/f:SI 190))
 with (compare:CC (reg/v/f:SI 158 [ table ])
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182]))
Changes to insn 83 not recognized
 Setting REG_EQUAL note

In insn 90, replacing
 (reg/f:SI 191)
 with (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
Changes to insn 90 not profitable

In insn 99, replacing
 (reg/f:SI 192)
 with (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x110ea840>)
Changes to insn 99 not profitable

In insn 114, replacing
 (reg:SI 196)
 with (const_int 0 [0x0])
Changes to insn 114 not recognized
 Setting REG_EQUAL note

In insn 143, replacing
 (reg/f:SI 203)
 with (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x10d655a0>)
Changes to insn 143 not profitable

In insn 159, replacing
 (reg:SI 204)
 with (const_int 2 [0x2])
Changes to insn 159 not recognized
 Setting REG_EQUAL note

In insn 161, replacing
 (reg:SI 205)
 with (const_int 1 [0x1])
Changes to insn 161 not recognized
 Setting REG_EQUAL note

In insn 170, replacing
 (reg:SI 206)
 with (const_int 1 [0x1])
Changes to insn 170 not recognized
 Setting REG_EQUAL note

In insn 182, replacing
 (reg/f:SI 212)
 with (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x10d65600>)
Changes to insn 182 not profitable

In insn 238, replacing
 (reg/f:SI 226)
 with (symbol_ref/v/f:SI ("*.LC5") [flags 0x82] <string_cst 0x11075a50>)
Changes to insn 238 not profitable

In insn 284, replacing
 (plus:SI (reg:SI 233)
        (reg:SI 231))
 with (plus:SI (reg:SI 233)
        (const_int -76 [0xffffffffffffffb4]))
Changes to insn 284 not profitable
 Setting REG_EQUAL note

In insn 341, replacing
 (reg:SI 245)
 with (const_int 0 [0x0])
Changes to insn 341 not recognized
 Setting REG_EQUAL note

In insn 364, replacing
 (reg/f:SI 248)
 with (symbol_ref/v/f:SI ("*.LC6") [flags 0x82] <string_cst 0x110a6480>)
Changes to insn 364 not profitable

In insn 413, replacing
 (reg/f:SI 258)
 with (symbol_ref/v/f:SI ("*.LC7") [flags 0x82] <string_cst 0x11114000>)
Changes to insn 413 not profitable


try_optimize_cfg iteration 1

deferring deletion of insn with uid = 463.
deferring deletion of insn with uid = 453.
deferring deletion of insn with uid = 306.
deferring deletion of insn with uid = 227.
deferring deletion of insn with uid = 171.
deferring deletion of insn with uid = 119.
deferring deletion of insn with uid = 80.
deferring deletion of insn with uid = 77.
deferring deletion of insn with uid = 70.
deferring deletion of insn with uid = 68.
deferring deletion of insn with uid = 64.
Deleted 11 trivially dead insns

Number of successful forward propagations: 0



unwind_frame

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={34d,28u} r1={26d,9u} r2={21d,4u} r3={17d} r11={1d,73u} r12={17d} r13={1d,89u} r14={17d,1u} r15={16d} r16={16d} r17={16d} r18={16d} r19={16d} r20={16d} r21={16d} r22={16d} r23={16d} r24={52d,36u} r25={1d,117u,6d} r26={1d,72u} r27={16d} r28={16d} r29={16d} r30={16d} r31={16d} r32={16d} r33={16d} r34={16d} r35={16d} r36={16d} r37={16d} r38={16d} r39={16d} r40={16d} r41={16d} r42={16d} r43={16d} r44={16d} r45={16d} r46={16d} r47={16d} r48={16d} r49={16d} r50={16d} r51={16d} r52={16d} r53={16d} r54={16d} r55={16d} r56={16d} r57={16d} r58={16d} r59={16d} r60={16d} r61={16d} r62={16d} r63={16d} r64={16d} r65={16d} r66={16d} r67={16d} r68={16d} r69={16d} r70={16d} r71={16d} r72={16d} r73={16d} r74={16d} r75={16d} r76={16d} r77={16d} r78={16d} r79={16d} r80={16d} r81={16d} r82={16d} r83={16d} r84={16d} r85={16d} r86={16d} r87={16d} r88={16d} r89={16d} r90={16d} r91={16d} r92={16d} r93={16d} r94={16d} r95={16d} r96={16d} r97={16d} r98={16d} r99={16d} r100={16d} r101={16d} r102={16d} r103={16d} r104={16d} r105={16d} r106={16d} r107={16d} r108={16d} r109={16d} r110={16d} r111={16d} r112={16d} r113={16d} r114={16d} r115={16d} r116={16d} r117={16d} r118={16d} r119={16d} r120={16d} r121={16d} r122={16d} r123={16d} r124={16d} r125={16d} r126={16d} r127={16d} r134={1d,1u} r135={1d,3u,1d} r136={1d,1u} r137={1d,5u} r138={2d,4u} r139={2d,2u} r140={2d,2u} r141={1d,2u} r142={1d,3u} r143={1d,1u} r144={1d,1u} r145={1d} r146={1d,13u} r147={2d,4u} r148={2d,3u} r149={1d,1u} r150={2d,2u} r151={2d,4u} r152={2d,6u} r153={2d,3u} r154={1d,1u} r155={1d,1u} r156={1d} r157={1d,1u} r158={2d,14u} r159={1d} r160={1d,2u} r161={1d,2u} r162={1d,2u} r163={8d,2u} r164={3d,5u} r165={1d,2u,1d} r166={1d,1u} r167={1d,2u} r168={1d,2u} r169={1d,2u} r170={1d,4u} r171={1d} r172={1d,6u} r173={1d,1u} r174={1d} r175={1d,12u} r176={1d,1u,1d} r177={1d,1u} r178={1d,1u} r179={1d,1u} r180={1d,1u} r181={1d,1u} r182={1d,1u} r183={1d,1u} r184={1d,1u} r185={1d,1u} r186={1d,1u} r187={1d} r188={1d} r189={1d} r190={1d,7u} r191={1d,1u} r192={1d,1u} r193={1d,1u} r194={1d,1u} r195={1d,1u} r196={1d,1u} r197={1d,1u} r198={1d,1u} r199={1d,1u} r200={1d,1u} r201={1d,1u} r202={1d,1u} r203={1d,1u} r204={1d,1u} r205={1d,1u} r206={1d,1u} r207={1d} r208={1d,1u} r209={1d,1u} r210={1d,1u} r211={1d,1u} r212={1d,1u} r213={1d,4u} r214={1d,1u} r215={1d,1u} r216={1d,1u} r217={1d,1u} r218={1d,1u} r219={1d,1u} r220={1d,1u} r221={1d,1u} r222={1d,1u} r223={1d,1u} r224={1d} r225={1d,1u} r226={1d,1u} r227={1d,1u} r228={1d,1u} r229={1d,1u} r230={1d,1u} r231={1d,1u} r232={1d,1u} r233={1d,1u} r234={1d,1u} r235={1d,1u} r236={1d,1u} r237={1d,1u} r238={1d,1u} r239={1d,1u} r240={1d,1u} r241={1d,1u} r242={1d,1u} r243={1d,1u} r244={1d,1u} r245={1d,1u} r246={1d,1u} r247={1d,2u} r248={1d,1u} r249={1d,1u} r250={1d,1u} r251={1d,1u} r252={1d,1u} r253={1d,1u} r254={1d,1u} r255={1d,1u} r256={1d,1u} r257={1d,1u} r258={1d,1u} r259={1d,1u} r260={1d,1u} r261={1d,1u} r262={1d,1u} r263={1d,3u} r264={1d,1u} r265={1d,1u} r266={1d,1u} r267={1d} 
;;    total ref usage 2760{2101d,650u,9e} in 295{279 regular + 16 call} insns.
;; Reaching defs:

  sparse invalidated 	0, 24
  dense invalidated 	34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947
0[0,34] 1[34,26] 2[60,21] 3[81,17] 11[98,1] 12[99,17] 13[116,1] 14[117,17] 15[134,16] 16[150,16] 17[166,16] 18[182,16] 19[198,16] 20[214,16] 21[230,16] 22[246,16] 23[262,16] 24[278,52] 25[330,1] 26[331,1] 27[332,16] 28[348,16] 29[364,16] 30[380,16] 31[396,16] 32[412,16] 33[428,16] 34[444,16] 35[460,16] 36[476,16] 37[492,16] 38[508,16] 39[524,16] 40[540,16] 41[556,16] 42[572,16] 43[588,16] 44[604,16] 45[620,16] 46[636,16] 47[652,16] 48[668,16] 49[684,16] 50[700,16] 51[716,16] 52[732,16] 53[748,16] 54[764,16] 55[780,16] 56[796,16] 57[812,16] 58[828,16] 59[844,16] 60[860,16] 61[876,16] 62[892,16] 63[908,16] 64[924,16] 65[940,16] 66[956,16] 67[972,16] 68[988,16] 69[1004,16] 70[1020,16] 71[1036,16] 72[1052,16] 73[1068,16] 74[1084,16] 75[1100,16] 76[1116,16] 77[1132,16] 78[1148,16] 79[1164,16] 80[1180,16] 81[1196,16] 82[1212,16] 83[1228,16] 84[1244,16] 85[1260,16] 86[1276,16] 87[1292,16] 88[1308,16] 89[1324,16] 90[1340,16] 91[1356,16] 92[1372,16] 93[1388,16] 94[1404,16] 95[1420,16] 96[1436,16] 97[1452,16] 98[1468,16] 99[1484,16] 100[1500,16] 101[1516,16] 102[1532,16] 103[1548,16] 104[1564,16] 105[1580,16] 106[1596,16] 107[1612,16] 108[1628,16] 109[1644,16] 110[1660,16] 111[1676,16] 112[1692,16] 113[1708,16] 114[1724,16] 115[1740,16] 116[1756,16] 117[1772,16] 118[1788,16] 119[1804,16] 120[1820,16] 121[1836,16] 122[1852,16] 123[1868,16] 124[1884,16] 125[1900,16] 126[1916,16] 127[1932,16] 134[1948,1] 135[1949,1] 136[1950,1] 137[1951,1] 138[1952,2] 139[1954,2] 140[1956,2] 141[1958,1] 142[1959,1] 143[1960,1] 144[1961,1] 145[1962,1] 146[1963,1] 147[1964,2] 148[1966,2] 149[1968,1] 150[1969,2] 151[1971,2] 152[1973,2] 153[1975,2] 154[1977,1] 155[1978,1] 156[1979,1] 157[1980,1] 158[1981,2] 159[1983,1] 160[1984,1] 161[1985,1] 162[1986,1] 163[1987,8] 164[1995,3] 165[1998,1] 166[1999,1] 167[2000,1] 168[2001,1] 169[2002,1] 170[2003,1] 171[2004,1] 172[2005,1] 173[2006,1] 174[2007,1] 175[2008,1] 176[2009,1] 177[2010,1] 178[2011,1] 179[2012,1] 180[2013,1] 181[2014,1] 182[2015,1] 183[2016,1] 184[2017,1] 185[2018,1] 186[2019,1] 187[2020,1] 188[2021,1] 189[2022,1] 190[2023,1] 191[2024,1] 192[2025,1] 193[2026,1] 194[2027,1] 195[2028,1] 196[2029,1] 197[2030,1] 198[2031,1] 199[2032,1] 200[2033,1] 201[2034,1] 202[2035,1] 203[2036,1] 204[2037,1] 205[2038,1] 206[2039,1] 207[2040,1] 208[2041,1] 209[2042,1] 210[2043,1] 211[2044,1] 212[2045,1] 213[2046,1] 214[2047,1] 215[2048,1] 216[2049,1] 217[2050,1] 218[2051,1] 219[2052,1] 220[2053,1] 221[2054,1] 222[2055,1] 223[2056,1] 224[2057,1] 225[2058,1] 226[2059,1] 227[2060,1] 228[2061,1] 229[2062,1] 230[2063,1] 231[2064,1] 232[2065,1] 233[2066,1] 234[2067,1] 235[2068,1] 236[2069,1] 237[2070,1] 238[2071,1] 239[2072,1] 240[2073,1] 241[2074,1] 242[2075,1] 243[2076,1] 244[2077,1] 245[2078,1] 246[2079,1] 247[2080,1] 248[2081,1] 249[2082,1] 250[2083,1] 251[2084,1] 252[2085,1] 253[2086,1] 254[2087,1] 255[2088,1] 256[2089,1] 257[2090,1] 258[2091,1] 259[2092,1] 260[2093,1] 261[2094,1] 262[2095,1] 263[2096,1] 264[2097,1] 265[2098,1] 266[2099,1] 267[2100,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 165 166 173 175 176 177 178
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 24 [cc] 165 166 173 175 176 177 178
;; live  kill	 14 [lr]
;; rd  in  	(10)
33, 59, 80, 97, 98, 115, 116, 133, 330, 331
;; rd  gen 	(9)
31, 328, 1998, 1999, 2006, 2008, 2009, 2010, 2011
;; rd  kill	(24)
117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 1998, 1999, 2006, 2008, 2009, 2010, 2011

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 0 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 3 5 4 2 arch/arm/kernel/unwind.c:275 (set (reg/v/f:SI 175 [ frame ])
        (reg:SI 0 r0 [ frame ])) 167 {*arm_movsi_insn} (nil))

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 8 2 arch/arm/kernel/unwind.c:281 (set (reg/v:SI 165 [ low ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 175 [ frame ])
                (const_int 4 [0x4])) [0 <variable>.sp+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 8 7 9 2 arch/arm/kernel/unwind.c:282 (set (reg:SI 177)
        (plus:SI (reg/v:SI 165 [ low ])
            (const_int 8128 [0x1fc0]))) 4 {*arm_addsi3} (nil))

(insn 9 8 10 2 arch/arm/kernel/unwind.c:282 (set (reg:SI 176)
        (plus:SI (reg:SI 177)
            (const_int 63 [0x3f]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (plus:SI (reg/v:SI 165 [ low ])
            (const_int 8191 [0x1fff]))
        (nil)))

(insn 10 9 11 2 arch/arm/kernel/unwind.c:282 (set (reg:SI 178)
        (and:SI (reg:SI 176)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 11 10 12 2 arch/arm/kernel/unwind.c:282 (set (reg/v:SI 166 [ high ])
        (and:SI (reg:SI 178)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_EQUAL (and:SI (reg:SI 176)
            (const_int -8192 [0xffffffffffffe000]))
        (nil)))

(insn 12 11 13 2 arch/arm/kernel/unwind.c:287 (set (reg:SI 0 r0)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 175 [ frame ])
                (const_int 12 [0xc])) [0 <variable>.pc+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn 13 12 14 2 arch/arm/kernel/unwind.c:287 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("kernel_text_address") [flags 0x41] <function_decl 0x10a58300 kernel_text_address>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 14 13 15 2 arch/arm/kernel/unwind.c:287 (set (reg:SI 173 [ D.15618 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 15 14 16 2 arch/arm/kernel/unwind.c:287 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 173 [ D.15618 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 16 15 17 2 arch/arm/kernel/unwind.c:287 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 458)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 6102 [0x17d6])
        (nil)))
;; End of basic block 2 -> ( 72 3)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 165 166 175
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 165 166 175
;; rd  out 	(17)
31, 59, 80, 97, 98, 115, 116, 328, 330, 331, 1998, 1999, 2006, 2008, 2009, 2010, 2011


;; Succ edge  72 [61.0%] 
;; Succ edge  3 [39.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u18(11){ }u19(13){ }u20(25){ }u21(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 165 166 175
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 175
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 137 155
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 165 166 175
;; live  gen 	 0 [r0] 24 [cc] 137 155
;; live  kill	 14 [lr]
;; rd  in  	(17)
31, 59, 80, 97, 98, 115, 116, 328, 330, 331, 1998, 1999, 2006, 2008, 2009, 2010, 2011
;; rd  gen 	(4)
29, 326, 1951, 1978
;; rd  kill	(19)
117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 1951, 1978

;; Pred edge  2 [39.0%]  (fallthru)
(note 17 16 18 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 18 17 19 3 arch/arm/kernel/unwind.c:290 (set (reg:SI 137 [ temp.525 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 175 [ frame ])
                (const_int 12 [0xc])) [0 <variable>.pc+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 19 18 20 3 arch/arm/kernel/unwind.c:135 (set (reg:SI 0 r0)
        (reg:SI 137 [ temp.525 ])) 167 {*arm_movsi_insn} (nil))

(call_insn 20 19 21 3 arch/arm/kernel/unwind.c:135 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("core_kernel_text") [flags 0x41] <function_decl 0x10a58180 core_kernel_text>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 21 20 22 3 arch/arm/kernel/unwind.c:135 (set (reg:SI 155 [ D.15905 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 22 21 23 3 arch/arm/kernel/unwind.c:135 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 155 [ D.15905 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 23 22 24 3 arch/arm/kernel/unwind.c:135 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 34)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 3 -> ( 4 5)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 165 166 175
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 165 166 175
;; rd  out 	(19)
29, 59, 80, 97, 98, 115, 116, 326, 330, 331, 1951, 1978, 1998, 1999, 2006, 2008, 2009, 2010, 2011


;; Succ edge  4 [50.0%]  (fallthru)
;; Succ edge  5 [50.0%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u29(11){ }u30(13){ }u31(25){ }u32(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 165 166 175
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 164 179 180
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 165 166 175
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 164 179 180
;; live  kill	 14 [lr]
;; rd  in  	(19)
29, 59, 80, 97, 98, 115, 116, 326, 330, 331, 1951, 1978, 1998, 1999, 2006, 2008, 2009, 2010, 2011
;; rd  gen 	(4)
27, 1997, 2012, 2013
;; rd  kill	(22)
117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 1995, 1996, 1997, 2012, 2013

;; Pred edge  3 [50.0%]  (fallthru)
(note 24 23 25 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 25 24 26 4 arch/arm/kernel/unwind.c:137 (set (reg/f:SI 179)
        (symbol_ref:SI ("__start_unwind_idx") [flags 0xc0] <var_decl 0x11041000 __start_unwind_idx>)) 167 {*arm_movsi_insn} (nil))

(insn 26 25 27 4 arch/arm/kernel/unwind.c:137 (set (reg/f:SI 180)
        (const:SI (plus:SI (symbol_ref:SI ("__stop_unwind_idx") [flags 0xc0] <var_decl 0x11041060 __stop_unwind_idx>)
                (const_int -8 [0xfffffffffffffff8])))) 167 {*arm_movsi_insn} (nil))

(insn 27 26 28 4 arch/arm/kernel/unwind.c:137 (set (reg:SI 0 r0)
        (reg:SI 137 [ temp.525 ])) 167 {*arm_movsi_insn} (nil))

(insn 28 27 29 4 arch/arm/kernel/unwind.c:137 (set (reg:SI 1 r1)
        (reg/f:SI 179)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("__start_unwind_idx") [flags 0xc0] <var_decl 0x11041000 __start_unwind_idx>)
        (nil)))

(insn 29 28 30 4 arch/arm/kernel/unwind.c:137 (set (reg:SI 2 r2)
        (reg/f:SI 180)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("__stop_unwind_idx") [flags 0xc0] <var_decl 0x11041060 __stop_unwind_idx>)
                (const_int -8 [0xfffffffffffffff8])))
        (nil)))

(call_insn 30 29 31 4 arch/arm/kernel/unwind.c:137 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("search_index") [flags 0x3] <function_decl 0x11039a00 search_index>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 31 30 34 4 arch/arm/kernel/unwind.c:137 (set (reg/v/f:SI 164 [ idx ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))
;; End of basic block 4 -> ( 13)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 164 165 166 175
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164 165 166 175
;; rd  out 	(22)
27, 59, 80, 97, 98, 115, 116, 326, 330, 331, 1951, 1978, 1997, 1998, 1999, 2006, 2008, 2009, 2010, 2011, 2012, 2013


;; Succ edge  13 [100.0%]  (fallthru)

;; Start of basic block ( 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u41(11){ }u42(13){ }u43(25){ }u44(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 165 166 175
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 157 158 181 182
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 165 166 175
;; live  gen 	 0 [r0] 157 158 181 182
;; live  kill	 14 [lr]
;; rd  in  	(19)
29, 59, 80, 97, 98, 115, 116, 326, 330, 331, 1951, 1978, 1998, 1999, 2006, 2008, 2009, 2010, 2011
;; rd  gen 	(5)
25, 1980, 1982, 2014, 2015
;; rd  kill	(22)
117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 1980, 1981, 1982, 2014, 2015

;; Pred edge  3 [50.0%] 
(code_label 34 31 35 5 46 "" [1 uses])

(note 35 34 36 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 36 35 37 5 arch/arm/kernel/unwind.c:143 (set (reg/f:SI 181)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 37 36 38 5 arch/arm/kernel/unwind.c:143 (set (reg:SI 0 r0)
        (reg/f:SI 181)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(call_insn 38 37 39 5 arch/arm/kernel/unwind.c:143 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("_raw_spin_lock_irqsave") [flags 0x41] <function_decl 0x10ad9d00 _raw_spin_lock_irqsave>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 39 38 40 5 arch/arm/kernel/unwind.c:143 (set (reg/v:SI 157 [ flags ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 40 39 41 5 arch/arm/kernel/unwind.c:144 (set (reg/f:SI 182)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 41 40 81 5 arch/arm/kernel/unwind.c:144 (set (reg/v/f:SI 158 [ table ])
        (mem/s/f/j/c:SI (reg/f:SI 182) [0 unwind_tables.next+0 S4 A32])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 5 -> ( 10)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 157 158 165 166 175
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 157 158 165 166 175
;; rd  out 	(23)
25, 59, 80, 97, 98, 115, 116, 326, 330, 331, 1951, 1978, 1980, 1982, 1998, 1999, 2006, 2008, 2009, 2010, 2011, 2014, 2015


;; Succ edge  10 [100.0%]  (fallthru)

;; Start of basic block ( 10) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u50(11){ }u51(13){ }u52(25){ }u53(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 157 158 165 166 175 190
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 158
;; lr  def 	 24 [cc] 183
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 157 158 165 166 175 190
;; live  gen 	 24 [cc] 183
;; live  kill	
;; rd  in  	(29)
25, 59, 80, 97, 98, 115, 116, 280, 330, 331, 1951, 1978, 1979, 1980, 1981, 1982, 1983, 1998, 1999, 2006, 2008, 2009, 2010, 2011, 2014, 2015, 2016, 2017, 2023
;; rd  gen 	(2)
323, 2016
;; rd  kill	(1)
2016

;; Pred edge  10 [95.5%] 
(code_label 81 41 44 6 51 "" [1 uses])

(note 44 81 45 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 45 44 46 6 arch/arm/kernel/unwind.c:145 (set (reg:SI 183 [ <variable>.begin_addr ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 158 [ table ])
                (const_int 16 [0x10])) [0 <variable>.begin_addr+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 46 45 47 6 arch/arm/kernel/unwind.c:145 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 137 [ temp.525 ])
            (reg:SI 183 [ <variable>.begin_addr ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 47 46 48 6 arch/arm/kernel/unwind.c:145 (set (pc)
        (if_then_else (ltu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 74)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 6 -> ( 7 9)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 157 158 165 166 175 190
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 157 158 165 166 175 190
;; rd  out 	(29)
25, 59, 80, 97, 98, 115, 116, 323, 330, 331, 1951, 1978, 1979, 1980, 1981, 1982, 1983, 1998, 1999, 2006, 2008, 2009, 2010, 2011, 2014, 2015, 2016, 2017, 2023


;; Succ edge  7 [50.0%]  (fallthru)
;; Succ edge  9 [50.0%] 

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u58(11){ }u59(13){ }u60(25){ }u61(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 157 158 165 166 175 190
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 158
;; lr  def 	 24 [cc] 184
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 157 158 165 166 175 190
;; live  gen 	 24 [cc] 184
;; live  kill	
;; rd  in  	(29)
25, 59, 80, 97, 98, 115, 116, 323, 330, 331, 1951, 1978, 1979, 1980, 1981, 1982, 1983, 1998, 1999, 2006, 2008, 2009, 2010, 2011, 2014, 2015, 2016, 2017, 2023
;; rd  gen 	(2)
322, 2017
;; rd  kill	(1)
2017

;; Pred edge  6 [50.0%]  (fallthru)
(note 48 47 49 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 49 48 50 7 arch/arm/kernel/unwind.c:146 (set (reg:SI 184 [ <variable>.end_addr ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 158 [ table ])
                (const_int 20 [0x14])) [0 <variable>.end_addr+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 50 49 51 7 arch/arm/kernel/unwind.c:146 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 137 [ temp.525 ])
            (reg:SI 184 [ <variable>.end_addr ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 51 50 52 7 arch/arm/kernel/unwind.c:146 (set (pc)
        (if_then_else (geu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 74)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9550 [0x254e])
        (nil)))
;; End of basic block 7 -> ( 8 9)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 157 158 165 166 175 190
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 157 158 165 166 175 190
;; rd  out 	(29)
25, 59, 80, 97, 98, 115, 116, 322, 330, 331, 1951, 1978, 1979, 1980, 1981, 1982, 1983, 1998, 1999, 2006, 2008, 2009, 2010, 2011, 2014, 2015, 2016, 2017, 2023


;; Succ edge  8 [4.5%]  (fallthru)
;; Succ edge  9 [95.5%] 

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u66(11){ }u67(13){ }u68(25){ }u69(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 157 158 165 166 175 190
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 158 190
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 160 161 162 164 185 186 187 188 189
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 157 158 165 166 175 190
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 160 161 162 164 185 186 187 188 189
;; live  kill	 14 [lr]
;; rd  in  	(29)
25, 59, 80, 97, 98, 115, 116, 322, 330, 331, 1951, 1978, 1979, 1980, 1981, 1982, 1983, 1998, 1999, 2006, 2008, 2009, 2010, 2011, 2014, 2015, 2016, 2017, 2023
;; rd  gen 	(10)
23, 1984, 1985, 1986, 1996, 2018, 2019, 2020, 2021, 2022
;; rd  kill	(28)
117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 1984, 1985, 1986, 1995, 1996, 1997, 2018, 2019, 2020, 2021, 2022

;; Pred edge  7 [4.5%]  (fallthru)
(note 52 51 53 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 53 52 54 8 arch/arm/kernel/unwind.c:147 (set (reg/f:SI 186 [ <variable>.stop ])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 158 [ table ])
                (const_int 12 [0xc])) [0 <variable>.stop+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 54 53 55 8 arch/arm/kernel/unwind.c:147 (set (reg/f:SI 185)
        (plus:SI (reg/f:SI 186 [ <variable>.stop ])
            (const_int -8 [0xfffffffffffffff8]))) 4 {*arm_addsi3} (nil))

(insn 55 54 56 8 arch/arm/kernel/unwind.c:147 (set (reg:SI 0 r0)
        (reg:SI 137 [ temp.525 ])) 167 {*arm_movsi_insn} (nil))

(insn 56 55 57 8 arch/arm/kernel/unwind.c:147 (set (reg:SI 1 r1)
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 158 [ table ])
                (const_int 8 [0x8])) [0 <variable>.start+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 57 56 58 8 arch/arm/kernel/unwind.c:147 (set (reg:SI 2 r2)
        (reg/f:SI 185)) 167 {*arm_movsi_insn} (nil))

(call_insn 58 57 59 8 arch/arm/kernel/unwind.c:147 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("search_index") [flags 0x3] <function_decl 0x11039a00 search_index>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 59 58 60 8 arch/arm/kernel/unwind.c:147 (set (reg/v/f:SI 164 [ idx ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 60 59 61 8 include/linux/list.h:101 (set (reg/f:SI 161 [ D.15897 ])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 158 [ table ])
                (const_int 4 [0x4])) [0 <variable>.list.prev+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 61 60 62 8 include/linux/list.h:101 (set (reg/f:SI 162 [ D.15896 ])
        (mem/s/f/j:SI (reg/v/f:SI 158 [ table ]) [0 <variable>.list.next+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 62 61 63 8 include/linux/list.h:88 (set (mem/s/f/j:SI (plus:SI (reg/f:SI 162 [ D.15896 ])
                (const_int 4 [0x4])) [0 <variable>.prev+0 S4 A32])
        (reg/f:SI 161 [ D.15897 ])) 167 {*arm_movsi_insn} (nil))

(insn 63 62 65 8 include/linux/list.h:89 (set (mem/s/f/j:SI (reg/f:SI 161 [ D.15897 ]) [0 <variable>.next+0 S4 A32])
        (reg/f:SI 162 [ D.15896 ])) 167 {*arm_movsi_insn} (nil))

(insn 65 63 66 8 include/linux/list.h:62 (set (reg/f:SI 160 [ D.15898 ])
        (mem/s/f/j/c:SI (reg/f:SI 190) [0 unwind_tables.next+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 66 65 67 8 include/linux/list.h:41 (set (mem/s/f/j:SI (plus:SI (reg/f:SI 160 [ D.15898 ])
                (const_int 4 [0x4])) [0 <variable>.prev+0 S4 A32])
        (reg/v/f:SI 158 [ table ])) 167 {*arm_movsi_insn} (nil))

(insn 67 66 69 8 include/linux/list.h:42 (set (mem/s/f/j:SI (reg/v/f:SI 158 [ table ]) [0 <variable>.list.next+0 S4 A32])
        (reg/f:SI 160 [ D.15898 ])) 167 {*arm_movsi_insn} (nil))

(insn 69 67 71 8 include/linux/list.h:43 (set (mem/s/f/j:SI (plus:SI (reg/v/f:SI 158 [ table ])
                (const_int 4 [0x4])) [0 <variable>.list.prev+0 S4 A32])
        (reg/f:SI 190)) 167 {*arm_movsi_insn} (nil))

(insn 71 69 74 8 include/linux/list.h:44 (set (mem/s/f/j/c:SI (reg/f:SI 190) [0 unwind_tables.next+0 S4 A32])
        (reg/v/f:SI 158 [ table ])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 8 -> ( 12)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157 164 165 166 175
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157 164 165 166 175
;; rd  out 	(38)
23, 59, 80, 97, 98, 115, 116, 322, 330, 331, 1951, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1996, 1998, 1999, 2006, 2008, 2009, 2010, 2011, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023


;; Succ edge  12 [100.0%]  (fallthru)

;; Start of basic block ( 6 7) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u98(11){ }u99(13){ }u100(25){ }u101(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 157 158 165 166 175
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158
;; lr  def 	 158 159
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 157 158 165 166 175
;; live  gen 	 158 159
;; live  kill	
;; rd  in  	(30)
25, 59, 80, 97, 98, 115, 116, 322, 323, 330, 331, 1951, 1978, 1979, 1980, 1981, 1982, 1983, 1998, 1999, 2006, 2008, 2009, 2010, 2011, 2014, 2015, 2016, 2017, 2023
;; rd  gen 	(2)
1981, 1983
;; rd  kill	(3)
1981, 1982, 1983

;; Pred edge  6 [50.0%] 
;; Pred edge  7 [95.5%] 
(code_label 74 71 75 9 49 "" [2 uses])

(note 75 74 76 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 76 75 78 9 arch/arm/kernel/unwind.c:144 (set (reg/v/f:SI 158 [ table ])
        (mem/s/f/j:SI (reg/v/f:SI 158 [ table ]) [0 <variable>.list.next+0 S4 A32])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 9 -> ( 10)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 157 158 165 166 175
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 157 158 165 166 175
;; rd  out 	(29)
25, 59, 80, 97, 98, 115, 116, 322, 323, 330, 331, 1951, 1978, 1979, 1980, 1981, 1983, 1998, 1999, 2006, 2008, 2009, 2010, 2011, 2014, 2015, 2016, 2017, 2023


;; Succ edge  10 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 5 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u104(11){ }u105(13){ }u106(25){ }u107(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 157 158 165 166 175
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158
;; lr  def 	 24 [cc] 156 190
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 157 158 165 166 175
;; live  gen 	 24 [cc] 156 190
;; live  kill	
;; rd  in  	(31)
25, 59, 80, 97, 98, 115, 116, 322, 323, 326, 330, 331, 1951, 1978, 1979, 1980, 1981, 1982, 1983, 1998, 1999, 2006, 2008, 2009, 2010, 2011, 2014, 2015, 2016, 2017, 2023
;; rd  gen 	(3)
280, 1979, 2023
;; rd  kill	(2)
1979, 2023

;; Pred edge  5 [100.0%]  (fallthru)
;; Pred edge  9 [100.0%]  (fallthru,dfs_back)
(code_label 78 76 79 10 48 "" [0 uses])

(note 79 78 82 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 82 79 83 10 arch/arm/kernel/unwind.c:144 (set (reg/f:SI 190)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 83 82 84 10 arch/arm/kernel/unwind.c:144 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 158 [ table ])
            (reg/f:SI 190))) 219 {*arm_cmpsi_insn} (expr_list:REG_EQUAL (compare:CC (reg/v/f:SI 158 [ table ])
            (symbol_ref:SI ("*.LANCHOR1") [flags 0x182]))
        (nil)))

(jump_insn 84 83 85 10 arch/arm/kernel/unwind.c:144 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 81)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9550 [0x254e])
        (nil)))
;; End of basic block 10 -> ( 6 11)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 157 158 165 166 175 190
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 157 158 165 166 175 190
;; rd  out 	(29)
25, 59, 80, 97, 98, 115, 116, 280, 330, 331, 1951, 1978, 1979, 1980, 1981, 1982, 1983, 1998, 1999, 2006, 2008, 2009, 2010, 2011, 2014, 2015, 2016, 2017, 2023


;; Succ edge  6 [95.5%] 
;; Succ edge  11 [4.5%]  (fallthru)

;; Start of basic block ( 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u112(11){ }u113(13){ }u114(25){ }u115(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157 165 166 175
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 164
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157 165 166 175
;; live  gen 	 164
;; live  kill	
;; rd  in  	(29)
25, 59, 80, 97, 98, 115, 116, 280, 330, 331, 1951, 1978, 1979, 1980, 1981, 1982, 1983, 1998, 1999, 2006, 2008, 2009, 2010, 2011, 2014, 2015, 2016, 2017, 2023
;; rd  gen 	(1)
1995
;; rd  kill	(3)
1995, 1996, 1997

;; Pred edge  10 [4.5%]  (fallthru)
(note 85 84 86 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 86 85 87 11 arch/arm/kernel/unwind.c:130 (set (reg/v/f:SI 164 [ idx ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 11 -> ( 12)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157 164 165 166 175
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157 164 165 166 175
;; rd  out 	(30)
25, 59, 80, 97, 98, 115, 116, 280, 330, 331, 1951, 1978, 1979, 1980, 1981, 1982, 1983, 1995, 1998, 1999, 2006, 2008, 2009, 2010, 2011, 2014, 2015, 2016, 2017, 2023


;; Succ edge  12 [100.0%]  (fallthru)

;; Start of basic block ( 8 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u116(11){ }u117(13){ }u118(25){ }u119(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157 164 165 166 175
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 191
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157 164 165 166 175
;; live  gen 	 0 [r0] 1 [r1] 191
;; live  kill	 14 [lr]
;; rd  in  	(41)
23, 25, 59, 80, 97, 98, 115, 116, 280, 322, 330, 331, 1951, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1995, 1996, 1998, 1999, 2006, 2008, 2009, 2010, 2011, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023
;; rd  gen 	(1)
2024
;; rd  kill	(18)
117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 2024

;; Pred edge  8 [100.0%]  (fallthru)
;; Pred edge  11 [100.0%]  (fallthru)
(code_label 87 86 88 12 50 "" [0 uses])

(note 88 87 89 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 89 88 90 12 include/linux/spinlock.h:340 (set (reg/f:SI 191)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 90 89 91 12 include/linux/spinlock.h:340 (set (reg:SI 0 r0)
        (reg/f:SI 191)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 91 90 92 12 include/linux/spinlock.h:340 (set (reg:SI 1 r1)
        (reg/v:SI 157 [ flags ])) 167 {*arm_movsi_insn} (nil))

(call_insn 92 91 93 12 include/linux/spinlock.h:340 (parallel [
            (call (mem:SI (symbol_ref:SI ("_raw_spin_unlock_irqrestore") [flags 0x41] <function_decl 0x10aef080 _raw_spin_unlock_irqrestore>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 12 -> ( 13)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 164 165 166 175
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164 165 166 175
;; rd  out 	(42)
23, 25, 59, 80, 97, 98, 115, 116, 280, 322, 330, 331, 1951, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1995, 1996, 1998, 1999, 2006, 2008, 2009, 2010, 2011, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024


;; Succ edge  13 [100.0%]  (fallthru)

;; Start of basic block ( 4 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u125(11){ }u126(13){ }u127(25){ }u128(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 164 165 166 175
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164 165 166 175
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(47)
23, 25, 27, 59, 80, 97, 98, 115, 116, 280, 322, 326, 330, 331, 1951, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1995, 1996, 1997, 1998, 1999, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024
;; rd  gen 	(1)
319
;; rd  kill	(0)


;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  12 [100.0%]  (fallthru)
(code_label 93 92 94 13 47 "" [0 uses])

(note 94 93 95 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 95 94 96 13 arch/arm/kernel/unwind.c:291 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 164 [ idx ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 96 95 97 13 arch/arm/kernel/unwind.c:291 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 105)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 13 -> ( 14 15)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 164 165 166 175
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164 165 166 175
;; rd  out 	(45)
23, 25, 27, 59, 80, 97, 98, 115, 116, 319, 330, 331, 1951, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1995, 1996, 1997, 1998, 1999, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024


;; Succ edge  14 [0.0%]  (fallthru)
;; Succ edge  15 [100.0%] 

;; Start of basic block ( 13) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u131(11){ }u132(13){ }u133(25){ }u134(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 175
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 175
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 163 192
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 175
;; live  gen 	 0 [r0] 1 [r1] 163 192
;; live  kill	 14 [lr]
;; rd  in  	(45)
23, 25, 27, 59, 80, 97, 98, 115, 116, 319, 330, 331, 1951, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1995, 1996, 1997, 1998, 1999, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024
;; rd  gen 	(3)
19, 1994, 2025
;; rd  kill	(26)
117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 2025

;; Pred edge  13 [0.0%]  (fallthru)
(note 97 96 98 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 98 97 99 14 arch/arm/kernel/unwind.c:292 (set (reg/f:SI 192)
        (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x110ea840>)) 167 {*arm_movsi_insn} (nil))

(insn 99 98 100 14 arch/arm/kernel/unwind.c:292 (set (reg:SI 0 r0)
        (reg/f:SI 192)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x110ea840>)
        (nil)))

(insn 100 99 101 14 arch/arm/kernel/unwind.c:292 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 175 [ frame ])
                (const_int 12 [0xc])) [0 <variable>.pc+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn 101 100 102 14 arch/arm/kernel/unwind.c:292 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 102 101 105 14 arch/arm/kernel/unwind.c:293 (set (reg/v:SI 163 [ urc ])
        (const_int -9 [0xfffffffffffffff7])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 14 -> ( 73)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 163
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163
;; rd  out 	(45)
19, 59, 80, 97, 98, 115, 116, 319, 330, 331, 1951, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1994, 1995, 1996, 1997, 1998, 1999, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025


;; Succ edge  73 [100.0%]  (fallthru)

;; Start of basic block ( 13) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u140(11){ }u141(13){ }u142(25){ }u143(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 164 165 166 175
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164 175
;; lr  def 	 24 [cc] 172 193 194 195 196
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164 165 166 175
;; live  gen 	 24 [cc] 172 193 194 195 196
;; live  kill	
;; rd  in  	(45)
23, 25, 27, 59, 80, 97, 98, 115, 116, 319, 330, 331, 1951, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1995, 1996, 1997, 1998, 1999, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024
;; rd  gen 	(6)
317, 2005, 2026, 2027, 2028, 2029
;; rd  kill	(5)
2005, 2026, 2027, 2028, 2029

;; Pred edge  13 [100.0%] 
(code_label 105 102 106 15 52 "" [1 uses])

(note 106 105 107 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 107 106 108 15 arch/arm/kernel/unwind.c:296 (set (reg:SI 193 [ <variable>.fp ])
        (mem/s/j:SI (reg/v/f:SI 175 [ frame ]) [0 <variable>.fp+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 108 107 109 15 arch/arm/kernel/unwind.c:296 (set (mem/s/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -32 [0xffffffffffffffe0])) [0 ctrl.vrs+44 S4 A32])
        (reg:SI 193 [ <variable>.fp ])) 167 {*arm_movsi_insn} (nil))

(insn 109 108 110 15 arch/arm/kernel/unwind.c:297 (set (reg:SI 194 [ <variable>.sp ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 175 [ frame ])
                (const_int 4 [0x4])) [0 <variable>.sp+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 110 109 111 15 arch/arm/kernel/unwind.c:297 (set (mem/s/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -24 [0xffffffffffffffe8])) [0 ctrl.vrs+52 S4 A32])
        (reg:SI 194 [ <variable>.sp ])) 167 {*arm_movsi_insn} (nil))

(insn 111 110 112 15 arch/arm/kernel/unwind.c:298 (set (reg:SI 195 [ <variable>.lr ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 175 [ frame ])
                (const_int 8 [0x8])) [0 <variable>.lr+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 112 111 113 15 arch/arm/kernel/unwind.c:298 (set (mem/s/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -20 [0xffffffffffffffec])) [0 ctrl.vrs+56 S4 A32])
        (reg:SI 195 [ <variable>.lr ])) 167 {*arm_movsi_insn} (nil))

(insn 113 112 114 15 arch/arm/kernel/unwind.c:299 (set (reg:SI 196)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 114 113 115 15 arch/arm/kernel/unwind.c:299 (set (mem/s/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -16 [0xfffffffffffffff0])) [0 ctrl.vrs+60 S4 A32])
        (reg:SI 196)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 115 114 116 15 arch/arm/kernel/unwind.c:301 (set (reg:SI 172 [ D.15626 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 164 [ idx ])
                (const_int 4 [0x4])) [0 <variable>.insn+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 116 115 117 15 arch/arm/kernel/unwind.c:301 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 172 [ D.15626 ])
            (const_int 1 [0x1]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 117 116 118 15 arch/arm/kernel/unwind.c:301 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 458)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 1991 [0x7c7])
        (nil)))
;; End of basic block 15 -> ( 72 16)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 164 165 166 172 175
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164 165 166 172 175
;; rd  out 	(50)
23, 25, 27, 59, 80, 97, 98, 115, 116, 317, 330, 331, 1951, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1995, 1996, 1997, 1998, 1999, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2026, 2027, 2028, 2029


;; Succ edge  72 [19.9%] 
;; Succ edge  16 [80.1%]  (fallthru)

;; Start of basic block ( 15) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u158(11){ }u159(13){ }u160(25){ }u161(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 164 165 166 172 175
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 172
;; lr  def 	 24 [cc] 171
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164 165 166 172 175
;; live  gen 	 24 [cc] 171
;; live  kill	
;; rd  in  	(50)
23, 25, 27, 59, 80, 97, 98, 115, 116, 317, 330, 331, 1951, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1995, 1996, 1997, 1998, 1999, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2026, 2027, 2028, 2029
;; rd  gen 	(2)
279, 2004
;; rd  kill	(1)
2004

;; Pred edge  15 [80.1%]  (fallthru)
(note 118 117 120 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 120 118 121 16 arch/arm/kernel/unwind.c:304 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 172 [ D.15626 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 121 120 122 16 arch/arm/kernel/unwind.c:304 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 130)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 2700 [0xa8c])
        (nil)))
;; End of basic block 16 -> ( 17 18)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 164 165 166 172 175
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164 165 166 172 175
;; rd  out 	(51)
23, 25, 27, 59, 80, 97, 98, 115, 116, 279, 330, 331, 1951, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1995, 1996, 1997, 1998, 1999, 2004, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2026, 2027, 2028, 2029


;; Succ edge  17 [73.0%]  (fallthru)
;; Succ edge  18 [27.0%] 

;; Start of basic block ( 16) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u165(11){ }u166(13){ }u167(25){ }u168(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 164 165 166 172 175
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164 172
;; lr  def 	 197 198 199 200
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164 165 166 172 175
;; live  gen 	 197 198 199 200
;; live  kill	
;; rd  in  	(51)
23, 25, 27, 59, 80, 97, 98, 115, 116, 279, 330, 331, 1951, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1995, 1996, 1997, 1998, 1999, 2004, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2026, 2027, 2028, 2029
;; rd  gen 	(4)
2030, 2031, 2032, 2033
;; rd  kill	(4)
2030, 2031, 2032, 2033

;; Pred edge  16 [73.0%]  (fallthru)
(note 122 121 123 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 123 122 124 17 arch/arm/kernel/unwind.c:306 (set (reg:SI 197)
        (ashift:SI (reg:SI 172 [ D.15626 ])
            (const_int 1 [0x1]))) 117 {*arm_shiftsi3} (nil))

(insn 124 123 125 17 arch/arm/kernel/unwind.c:306 (set (reg:SI 198)
        (ashiftrt:SI (reg:SI 197)
            (const_int 1 [0x1]))) 117 {*arm_shiftsi3} (nil))

(insn 125 124 126 17 arch/arm/kernel/unwind.c:306 (set (reg/f:SI 199)
        (plus:SI (reg/v/f:SI 164 [ idx ])
            (const_int 4 [0x4]))) 4 {*arm_addsi3} (nil))

(insn 126 125 127 17 arch/arm/kernel/unwind.c:306 (set (reg:SI 200)
        (plus:SI (reg:SI 198)
            (reg/f:SI 199))) 4 {*arm_addsi3} (nil))

(insn 127 126 130 17 arch/arm/kernel/unwind.c:306 (set (mem/s/f/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -12 [0xfffffffffffffff4])) [0 ctrl.insn+0 S4 A32])
        (reg:SI 200)) 167 {*arm_movsi_insn} (nil))
;; End of basic block 17 -> ( 21)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 165 166 175
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 165 166 175
;; rd  out 	(55)
23, 25, 27, 59, 80, 97, 98, 115, 116, 279, 330, 331, 1951, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1995, 1996, 1997, 1998, 1999, 2004, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033


;; Succ edge  21 [100.0%]  (fallthru)

;; Start of basic block ( 16) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u176(11){ }u177(13){ }u178(25){ }u179(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 164 165 166 172 175
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 172
;; lr  def 	 24 [cc] 201
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164 165 166 172 175
;; live  gen 	 24 [cc] 201
;; live  kill	
;; rd  in  	(51)
23, 25, 27, 59, 80, 97, 98, 115, 116, 279, 330, 331, 1951, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1995, 1996, 1997, 1998, 1999, 2004, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2026, 2027, 2028, 2029
;; rd  gen 	(2)
316, 2034
;; rd  kill	(1)
2034

;; Pred edge  16 [27.0%] 
(code_label 130 127 131 18 54 "" [1 uses])

(note 131 130 132 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 132 131 133 18 arch/arm/kernel/unwind.c:307 (set (reg:SI 201)
        (and:SI (reg:SI 172 [ D.15626 ])
            (const_int -16777216 [0xffffffffff000000]))) 67 {*arm_andsi3_insn} (nil))

(insn 133 132 134 18 arch/arm/kernel/unwind.c:307 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 201)
            (const_int -2147483648 [0xffffffff80000000]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 134 133 135 18 arch/arm/kernel/unwind.c:307 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 140)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 4 [0x4])
        (nil)))
;; End of basic block 18 -> ( 19 20)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 164 165 166 172 175
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164 165 166 172 175
;; rd  out 	(52)
23, 25, 27, 59, 80, 97, 98, 115, 116, 316, 330, 331, 1951, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1995, 1996, 1997, 1998, 1999, 2004, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2026, 2027, 2028, 2029, 2034


;; Succ edge  19 [100.0%]  (fallthru)
;; Succ edge  20 [0.0%] 

;; Start of basic block ( 18) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u183(11){ }u184(13){ }u185(25){ }u186(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 164 165 166 175
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164
;; lr  def 	 202
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164 165 166 175
;; live  gen 	 202
;; live  kill	
;; rd  in  	(52)
23, 25, 27, 59, 80, 97, 98, 115, 116, 316, 330, 331, 1951, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1995, 1996, 1997, 1998, 1999, 2004, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2026, 2027, 2028, 2029, 2034
;; rd  gen 	(1)
2035
;; rd  kill	(1)
2035

;; Pred edge  18 [100.0%]  (fallthru)
(note 135 134 136 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 136 135 137 19 arch/arm/kernel/unwind.c:309 (set (reg/f:SI 202)
        (plus:SI (reg/v/f:SI 164 [ idx ])
            (const_int 4 [0x4]))) 4 {*arm_addsi3} (nil))

(insn 137 136 140 19 arch/arm/kernel/unwind.c:309 (set (mem/s/f/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -12 [0xfffffffffffffff4])) [0 ctrl.insn+0 S4 A32])
        (reg/f:SI 202)) 167 {*arm_movsi_insn} (nil))
;; End of basic block 19 -> ( 21)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 165 166 175
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 165 166 175
;; rd  out 	(53)
23, 25, 27, 59, 80, 97, 98, 115, 116, 316, 330, 331, 1951, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1995, 1996, 1997, 1998, 1999, 2004, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2026, 2027, 2028, 2029, 2034, 2035


;; Succ edge  21 [100.0%]  (fallthru)

;; Start of basic block ( 18) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u190(11){ }u191(13){ }u192(25){ }u193(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164 172
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164 172
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 163 203
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164 172
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 163 203
;; live  kill	 14 [lr]
;; rd  in  	(52)
23, 25, 27, 59, 80, 97, 98, 115, 116, 316, 330, 331, 1951, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1995, 1996, 1997, 1998, 1999, 2004, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2026, 2027, 2028, 2029, 2034
;; rd  gen 	(3)
17, 1993, 2036
;; rd  kill	(26)
117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 2036

;; Pred edge  18 [0.0%] 
(code_label 140 137 141 20 56 "" [1 uses])

(note 141 140 142 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn 142 141 143 20 arch/arm/kernel/unwind.c:311 (set (reg/f:SI 203)
        (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x10d655a0>)) 167 {*arm_movsi_insn} (nil))

(insn 143 142 144 20 arch/arm/kernel/unwind.c:311 (set (reg:SI 0 r0)
        (reg/f:SI 203)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x10d655a0>)
        (nil)))

(insn 144 143 145 20 arch/arm/kernel/unwind.c:311 (set (reg:SI 1 r1)
        (reg:SI 172 [ D.15626 ])) 167 {*arm_movsi_insn} (nil))

(insn 145 144 146 20 arch/arm/kernel/unwind.c:311 (set (reg:SI 2 r2)
        (reg/v/f:SI 164 [ idx ])) 167 {*arm_movsi_insn} (nil))

(call_insn 146 145 147 20 arch/arm/kernel/unwind.c:311 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 147 146 150 20 arch/arm/kernel/unwind.c:313 (set (reg/v:SI 163 [ urc ])
        (const_int -9 [0xfffffffffffffff7])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 20 -> ( 73)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 163
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163
;; rd  out 	(52)
17, 59, 80, 97, 98, 115, 116, 316, 330, 331, 1951, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1993, 1995, 1996, 1997, 1998, 1999, 2004, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2026, 2027, 2028, 2029, 2034, 2036


;; Succ edge  73 [100.0%]  (fallthru)

;; Start of basic block ( 17 19) -> 21
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u201(11){ }u202(13){ }u203(25){ }u204(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 165 166 175
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 168 169 170
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 165 166 175
;; live  gen 	 24 [cc] 168 169 170
;; live  kill	
;; rd  in  	(58)
23, 25, 27, 59, 80, 97, 98, 115, 116, 279, 316, 330, 331, 1951, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1995, 1996, 1997, 1998, 1999, 2004, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035
;; rd  gen 	(4)
314, 2001, 2002, 2003
;; rd  kill	(3)
2001, 2002, 2003

;; Pred edge  17 [100.0%]  (fallthru)
;; Pred edge  19 [100.0%]  (fallthru)
(code_label 150 147 151 21 55 "" [0 uses])

(note 151 150 152 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn 152 151 153 21 arch/arm/kernel/unwind.c:317 (set (reg/f:SI 170 [ D.15643 ])
        (mem/s/f/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -12 [0xfffffffffffffff4])) [0 ctrl.insn+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 153 152 154 21 arch/arm/kernel/unwind.c:317 (set (reg:SI 169 [ D.15644 ])
        (mem:SI (reg/f:SI 170 [ D.15643 ]) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 154 153 155 21 arch/arm/kernel/unwind.c:317 (set (reg:SI 168 [ D.15645 ])
        (and:SI (reg:SI 169 [ D.15644 ])
            (const_int -16777216 [0xffffffffff000000]))) 67 {*arm_andsi3_insn} (nil))

(insn 155 154 156 21 arch/arm/kernel/unwind.c:317 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 168 [ D.15645 ])
            (const_int -2147483648 [0xffffffff80000000]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 156 155 157 21 arch/arm/kernel/unwind.c:317 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 164)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
        (nil)))
;; End of basic block 21 -> ( 22 23)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 165 166 168 169 170 175
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 165 166 168 169 170 175
;; rd  out 	(60)
23, 25, 27, 59, 80, 97, 98, 115, 116, 314, 330, 331, 1951, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1995, 1996, 1997, 1998, 1999, 2001, 2002, 2003, 2004, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035


;; Succ edge  22 [28.0%]  (fallthru)
;; Succ edge  23 [72.0%] 

;; Start of basic block ( 21) -> 22
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u210(11){ }u211(13){ }u212(25){ }u213(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 165 166 175
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 204 205
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 165 166 175
;; live  gen 	 204 205
;; live  kill	
;; rd  in  	(60)
23, 25, 27, 59, 80, 97, 98, 115, 116, 314, 330, 331, 1951, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1995, 1996, 1997, 1998, 1999, 2001, 2002, 2003, 2004, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035
;; rd  gen 	(2)
2037, 2038
;; rd  kill	(2)
2037, 2038

;; Pred edge  21 [28.0%]  (fallthru)
(note 157 156 158 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(insn 158 157 159 22 arch/arm/kernel/unwind.c:318 (set (reg:SI 204)
        (const_int 2 [0x2])) 167 {*arm_movsi_insn} (nil))

(insn 159 158 160 22 arch/arm/kernel/unwind.c:318 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 ctrl.byte+0 S4 A32])
        (reg:SI 204)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 2 [0x2])
        (nil)))

(insn 160 159 161 22 arch/arm/kernel/unwind.c:319 (set (reg:SI 205)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 161 160 164 22 arch/arm/kernel/unwind.c:319 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0 ctrl.entries+0 S4 A32])
        (reg:SI 205)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
;; End of basic block 22 -> ( 67)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 165 166 175
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 165 166 175
;; rd  out 	(62)
23, 25, 27, 59, 80, 97, 98, 115, 116, 314, 330, 331, 1951, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1995, 1996, 1997, 1998, 1999, 2001, 2002, 2003, 2004, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2037, 2038


;; Succ edge  67 [100.0%]  (fallthru)

;; Start of basic block ( 21) -> 23
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u218(11){ }u219(13){ }u220(25){ }u221(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 165 166 168 169 170 175
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 168
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 165 166 168 169 170 175
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(60)
23, 25, 27, 59, 80, 97, 98, 115, 116, 314, 330, 331, 1951, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1995, 1996, 1997, 1998, 1999, 2001, 2002, 2003, 2004, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035
;; rd  gen 	(1)
313
;; rd  kill	(0)


;; Pred edge  21 [72.0%] 
(code_label 164 161 165 23 57 "" [1 uses])

(note 165 164 166 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(insn 166 165 167 23 arch/arm/kernel/unwind.c:320 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 168 [ D.15645 ])
            (const_int -2130706432 [0xffffffff81000000]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 167 166 168 23 arch/arm/kernel/unwind.c:320 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 179)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 4 [0x4])
        (nil)))
;; End of basic block 23 -> ( 24 25)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 165 166 169 170 175
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 165 166 169 170 175
;; rd  out 	(60)
23, 25, 27, 59, 80, 97, 98, 115, 116, 313, 330, 331, 1951, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1995, 1996, 1997, 1998, 1999, 2001, 2002, 2003, 2004, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035


;; Succ edge  24 [100.0%]  (fallthru)
;; Succ edge  25 [0.0%] 

;; Start of basic block ( 23) -> 24
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u224(11){ }u225(13){ }u226(25){ }u227(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 165 166 170 175
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 170
;; lr  def 	 206 207 208 209 210 211
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 165 166 170 175
;; live  gen 	 206 207 208 209 210 211
;; live  kill	
;; rd  in  	(60)
23, 25, 27, 59, 80, 97, 98, 115, 116, 313, 330, 331, 1951, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1995, 1996, 1997, 1998, 1999, 2001, 2002, 2003, 2004, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035
;; rd  gen 	(6)
2039, 2040, 2041, 2042, 2043, 2044
;; rd  kill	(6)
2039, 2040, 2041, 2042, 2043, 2044

;; Pred edge  23 [100.0%]  (fallthru)
(note 168 167 169 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(insn 169 168 170 24 arch/arm/kernel/unwind.c:321 (set (reg:SI 206)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 170 169 172 24 arch/arm/kernel/unwind.c:321 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 ctrl.byte+0 S4 A32])
        (reg:SI 206)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(insn 172 170 173 24 arch/arm/kernel/unwind.c:322 (set (reg:SI 209)
        (mem:SI (reg/f:SI 170 [ D.15643 ]) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 173 172 174 24 arch/arm/kernel/unwind.c:322 (set (reg:SI 208)
        (and:SI (reg:SI 209)
            (const_int 16711680 [0xff0000]))) 67 {*arm_andsi3_insn} (nil))

(insn 174 173 175 24 arch/arm/kernel/unwind.c:322 (set (reg:SI 210)
        (lshiftrt:SI (reg:SI 208)
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (nil))

(insn 175 174 176 24 arch/arm/kernel/unwind.c:322 (set (reg:SI 211)
        (plus:SI (reg:SI 210)
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 176 175 179 24 arch/arm/kernel/unwind.c:322 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0 ctrl.entries+0 S4 A32])
        (reg:SI 211)) 167 {*arm_movsi_insn} (nil))
;; End of basic block 24 -> ( 67)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 165 166 175
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 165 166 175
;; rd  out 	(66)
23, 25, 27, 59, 80, 97, 98, 115, 116, 313, 330, 331, 1951, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1995, 1996, 1997, 1998, 1999, 2001, 2002, 2003, 2004, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2039, 2040, 2041, 2042, 2043, 2044


;; Succ edge  67 [100.0%]  (fallthru)

;; Start of basic block ( 23) -> 25
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u237(11){ }u238(13){ }u239(25){ }u240(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 169 170
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 169 170
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 163 212
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 169 170
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 163 212
;; live  kill	 14 [lr]
;; rd  in  	(60)
23, 25, 27, 59, 80, 97, 98, 115, 116, 313, 330, 331, 1951, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1995, 1996, 1997, 1998, 1999, 2001, 2002, 2003, 2004, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035
;; rd  gen 	(3)
15, 1992, 2045
;; rd  kill	(26)
117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 2045

;; Pred edge  23 [0.0%] 
(code_label 179 176 180 25 59 "" [1 uses])

(note 180 179 181 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(insn 181 180 182 25 arch/arm/kernel/unwind.c:324 (set (reg/f:SI 212)
        (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x10d65600>)) 167 {*arm_movsi_insn} (nil))

(insn 182 181 183 25 arch/arm/kernel/unwind.c:324 (set (reg:SI 0 r0)
        (reg/f:SI 212)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x10d65600>)
        (nil)))

(insn 183 182 184 25 arch/arm/kernel/unwind.c:324 (set (reg:SI 1 r1)
        (reg:SI 169 [ D.15644 ])) 167 {*arm_movsi_insn} (nil))

(insn 184 183 185 25 arch/arm/kernel/unwind.c:324 (set (reg:SI 2 r2)
        (reg/f:SI 170 [ D.15643 ])) 167 {*arm_movsi_insn} (nil))

(call_insn 185 184 186 25 arch/arm/kernel/unwind.c:324 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 186 185 429 25 arch/arm/kernel/unwind.c:326 (set (reg/v:SI 163 [ urc ])
        (const_int -9 [0xfffffffffffffff7])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 25 -> ( 73)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 163
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163
;; rd  out 	(60)
15, 59, 80, 97, 98, 115, 116, 313, 330, 331, 1951, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1992, 1995, 1996, 1997, 1998, 1999, 2001, 2002, 2003, 2004, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2045


;; Succ edge  73 [100.0%]  (fallthru)

;; Start of basic block ( 67) -> 26
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u248(11){ }u249(13){ }u250(25){ }u251(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 165 166 175
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 141 146 213
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 165 166 175
;; live  gen 	 0 [r0] 24 [cc] 141 146 213
;; live  kill	 14 [lr]
;; rd  in  	(140)
4, 8, 12, 13, 23, 25, 27, 59, 80, 97, 98, 115, 116, 283, 330, 331, 1948, 1949, 1950, 1951, 1952, 1955, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2092
;; rd  gen 	(5)
13, 310, 1958, 1963, 2046
;; rd  kill	(20)
117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 1958, 1963, 2046

;; Pred edge  67 [97.8%] 
(code_label 429 186 189 26 80 "" [1 uses])

(note 189 429 190 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(insn 190 189 191 26 arch/arm/kernel/unwind.c:187 (set (reg/f:SI 213)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -76 [0xffffffffffffffb4]))) 4 {*arm_addsi3} (nil))

(insn 191 190 192 26 arch/arm/kernel/unwind.c:187 (set (reg:SI 0 r0)
        (reg/f:SI 213)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -76 [0xffffffffffffffb4]))
        (nil)))

(call_insn 192 191 193 26 arch/arm/kernel/unwind.c:187 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("unwind_get_byte") [flags 0x3] <function_decl 0x11039c00 unwind_get_byte>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 193 192 194 26 arch/arm/kernel/unwind.c:187 (set (reg/v:SI 146 [ insn ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 194 193 195 26 arch/arm/kernel/unwind.c:191 (set (reg:SI 141 [ D.15954 ])
        (and:SI (reg/v:SI 146 [ insn ])
            (const_int 192 [0xc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 195 194 196 26 arch/arm/kernel/unwind.c:191 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 141 [ D.15954 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 196 195 197 26 arch/arm/kernel/unwind.c:191 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 206)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 26 -> ( 27 28)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 146 165 166 175 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 146 165 166 175 213
;; rd  out 	(134)
13, 59, 80, 97, 98, 115, 116, 310, 330, 331, 1948, 1949, 1950, 1951, 1952, 1955, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2092


;; Succ edge  27 [50.0%]  (fallthru)
;; Succ edge  28 [50.0%] 

;; Start of basic block ( 26) -> 27
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u261(11){ }u262(13){ }u263(25){ }u264(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 165 166 175
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146
;; lr  def 	 214 215 216 217 218
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 165 166 175
;; live  gen 	 214 215 216 217 218
;; live  kill	
;; rd  in  	(134)
13, 59, 80, 97, 98, 115, 116, 310, 330, 331, 1948, 1949, 1950, 1951, 1952, 1955, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2092
;; rd  gen 	(5)
2047, 2048, 2049, 2050, 2051
;; rd  kill	(5)
2047, 2048, 2049, 2050, 2051

;; Pred edge  26 [50.0%]  (fallthru)
(note 197 196 198 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(insn 198 197 199 27 arch/arm/kernel/unwind.c:192 (set (reg:SI 215 [ ctrl.vrs+52 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -24 [0xffffffffffffffe8])) [0 ctrl.vrs+52 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 199 198 200 27 arch/arm/kernel/unwind.c:192 (set (reg:SI 214)
        (plus:SI (reg:SI 215 [ ctrl.vrs+52 ])
            (const_int 4 [0x4]))) 4 {*arm_addsi3} (nil))

(insn 200 199 201 27 arch/arm/kernel/unwind.c:192 (set (reg:SI 216)
        (ashift:SI (reg/v:SI 146 [ insn ])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (nil))

(insn 201 200 202 27 arch/arm/kernel/unwind.c:192 (set (reg:SI 217)
        (and:SI (reg:SI 216)
            (const_int 255 [0xff]))) 67 {*arm_andsi3_insn} (nil))

(insn 202 201 203 27 arch/arm/kernel/unwind.c:192 (set (reg:SI 218)
        (plus:SI (reg:SI 214)
            (reg:SI 217))) 4 {*arm_addsi3} (nil))

(insn 203 202 206 27 arch/arm/kernel/unwind.c:192 (set (mem/s/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -24 [0xffffffffffffffe8])) [0 ctrl.vrs+52 S4 A32])
        (reg:SI 218)) 167 {*arm_movsi_insn} (nil))
;; End of basic block 27 -> ( 65)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 165 166 175
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 165 166 175
;; rd  out 	(134)
13, 59, 80, 97, 98, 115, 116, 310, 330, 331, 1948, 1949, 1950, 1951, 1952, 1955, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2092


;; Succ edge  65 [100.0%]  (fallthru)

;; Start of basic block ( 26) -> 28
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u273(11){ }u274(13){ }u275(25){ }u276(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 146 165 166 175 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 146 165 166 175 213
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(134)
13, 59, 80, 97, 98, 115, 116, 310, 330, 331, 1948, 1949, 1950, 1951, 1952, 1955, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2092
;; rd  gen 	(1)
309
;; rd  kill	(0)


;; Pred edge  26 [50.0%] 
(code_label 206 203 207 28 60 "" [1 uses])

(note 207 206 208 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(insn 208 207 209 28 arch/arm/kernel/unwind.c:193 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 141 [ D.15954 ])
            (const_int 64 [0x40]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 209 208 210 28 arch/arm/kernel/unwind.c:193 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 219)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
        (nil)))
;; End of basic block 28 -> ( 29 30)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 165 166 175 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 165 166 175 213
;; rd  out 	(134)
13, 59, 80, 97, 98, 115, 116, 309, 330, 331, 1948, 1949, 1950, 1951, 1952, 1955, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2092


;; Succ edge  29 [28.0%]  (fallthru)
;; Succ edge  30 [72.0%] 

;; Start of basic block ( 28) -> 29
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u279(11){ }u280(13){ }u281(25){ }u282(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 165 166 175
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146
;; lr  def 	 219 220 221 222 223
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 165 166 175
;; live  gen 	 219 220 221 222 223
;; live  kill	
;; rd  in  	(134)
13, 59, 80, 97, 98, 115, 116, 309, 330, 331, 1948, 1949, 1950, 1951, 1952, 1955, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2092
;; rd  gen 	(5)
2052, 2053, 2054, 2055, 2056
;; rd  kill	(5)
2052, 2053, 2054, 2055, 2056

;; Pred edge  28 [28.0%]  (fallthru)
(note 210 209 211 29 [bb 29] NOTE_INSN_BASIC_BLOCK)

(insn 211 210 212 29 arch/arm/kernel/unwind.c:194 (set (reg:SI 220 [ ctrl.vrs+52 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -24 [0xffffffffffffffe8])) [0 ctrl.vrs+52 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 212 211 213 29 arch/arm/kernel/unwind.c:194 (set (reg:SI 219)
        (plus:SI (reg:SI 220 [ ctrl.vrs+52 ])
            (const_int -4 [0xfffffffffffffffc]))) 4 {*arm_addsi3} (nil))

(insn 213 212 214 29 arch/arm/kernel/unwind.c:194 (set (reg:SI 221)
        (ashift:SI (reg/v:SI 146 [ insn ])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (nil))

(insn 214 213 215 29 arch/arm/kernel/unwind.c:194 (set (reg:SI 222)
        (and:SI (reg:SI 221)
            (const_int 255 [0xff]))) 67 {*arm_andsi3_insn} (nil))

(insn 215 214 216 29 arch/arm/kernel/unwind.c:194 (set (reg:SI 223)
        (minus:SI (reg:SI 219)
            (reg:SI 222))) 28 {*arm_subsi3_insn} (nil))

(insn 216 215 219 29 arch/arm/kernel/unwind.c:194 (set (mem/s/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -24 [0xffffffffffffffe8])) [0 ctrl.vrs+52 S4 A32])
        (reg:SI 223)) 167 {*arm_movsi_insn} (nil))
;; End of basic block 29 -> ( 65)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 165 166 175
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 165 166 175
;; rd  out 	(134)
13, 59, 80, 97, 98, 115, 116, 309, 330, 331, 1948, 1949, 1950, 1951, 1952, 1955, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2092


;; Succ edge  65 [100.0%]  (fallthru)

;; Start of basic block ( 28) -> 30
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u291(11){ }u292(13){ }u293(25){ }u294(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 165 166 175 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146
;; lr  def 	 24 [cc] 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 165 166 175 213
;; live  gen 	 24 [cc] 142
;; live  kill	
;; rd  in  	(134)
13, 59, 80, 97, 98, 115, 116, 309, 330, 331, 1948, 1949, 1950, 1951, 1952, 1955, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2092
;; rd  gen 	(2)
308, 1959
;; rd  kill	(1)
1959

;; Pred edge  28 [72.0%] 
(code_label 219 216 220 30 62 "" [1 uses])

(note 220 219 221 30 [bb 30] NOTE_INSN_BASIC_BLOCK)

(insn 221 220 222 30 arch/arm/kernel/unwind.c:195 (set (reg:SI 142 [ D.15946 ])
        (and:SI (reg/v:SI 146 [ insn ])
            (const_int 240 [0xf0]))) 67 {*arm_andsi3_insn} (nil))

(insn 222 221 223 30 arch/arm/kernel/unwind.c:195 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 142 [ D.15946 ])
            (const_int 128 [0x80]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 223 222 224 30 arch/arm/kernel/unwind.c:195 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 271)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 8629 [0x21b5])
        (nil)))
;; End of basic block 30 -> ( 31 39)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 146 165 166 175 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 146 165 166 175 213
;; rd  out 	(134)
13, 59, 80, 97, 98, 115, 116, 308, 330, 331, 1948, 1949, 1950, 1951, 1952, 1955, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2092


;; Succ edge  31 [13.7%]  (fallthru)
;; Succ edge  39 [86.3%] 

;; Start of basic block ( 30) -> 31
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u298(11){ }u299(13){ }u300(25){ }u301(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 165 166 175 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 213
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 135 136 143 144 147 224 225
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 165 166 175 213
;; live  gen 	 0 [r0] 24 [cc] 135 136 143 144 147 224 225
;; live  kill	 14 [lr]
;; rd  in  	(134)
13, 59, 80, 97, 98, 115, 116, 308, 330, 331, 1948, 1949, 1950, 1951, 1952, 1955, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2092
;; rd  gen 	(9)
12, 306, 1949, 1950, 1960, 1961, 1965, 2057, 2058
;; rd  kill	(25)
117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 1949, 1950, 1960, 1961, 1964, 1965, 2057, 2058

;; Pred edge  30 [13.7%]  (fallthru)
(note 224 223 225 31 [bb 31] NOTE_INSN_BASIC_BLOCK)

(insn 225 224 226 31 arch/arm/kernel/unwind.c:197 (set (reg:SI 136 [ temp.538 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -24 [0xffffffffffffffe8])) [0 ctrl.vrs+52 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 226 225 228 31 arch/arm/kernel/unwind.c:200 (set (reg:SI 143 [ D.15945 ])
        (ashift:SI (reg/v:SI 146 [ insn ])
            (const_int 8 [0x8]))) 117 {*arm_shiftsi3} (nil))

(insn 228 226 229 31 arch/arm/kernel/unwind.c:200 (set (reg:SI 0 r0)
        (reg/f:SI 213)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -76 [0xffffffffffffffb4]))
        (nil)))

(call_insn 229 228 230 31 arch/arm/kernel/unwind.c:200 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("unwind_get_byte") [flags 0x3] <function_decl 0x11039c00 unwind_get_byte>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 230 229 231 31 arch/arm/kernel/unwind.c:200 (set (reg:SI 144 [ D.15944 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 231 230 232 31 arch/arm/kernel/unwind.c:200 (set (reg/v:SI 135 [ insn.539 ])
        (ior:SI (reg:SI 144 [ D.15944 ])
            (reg:SI 143 [ D.15945 ]))) 89 {*arm_iorsi3} (nil))

(insn 232 231 233 31 arch/arm/kernel/unwind.c:201 (set (reg:SI 225)
        (ashift:SI (reg/v:SI 135 [ insn.539 ])
            (const_int 20 [0x14]))) 117 {*arm_shiftsi3} (nil))

(insn 233 232 234 31 arch/arm/kernel/unwind.c:201 (set (reg/v:SI 147 [ mask ])
        (lshiftrt:SI (reg:SI 225)
            (const_int 20 [0x14]))) 117 {*arm_shiftsi3} (expr_list:REG_EQUAL (and:SI (reg/v:SI 135 [ insn.539 ])
            (const_int 4095 [0xfff]))
        (nil)))

(insn 234 233 235 31 arch/arm/kernel/unwind.c:202 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 147 [ mask ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 235 234 236 31 arch/arm/kernel/unwind.c:202 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 244)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 31 -> ( 32 33)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 136 147 165 166 175 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 147 165 166 175 213
;; rd  out 	(134)
12, 59, 80, 97, 98, 115, 116, 306, 330, 331, 1948, 1949, 1950, 1951, 1952, 1955, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2092


;; Succ edge  32 [0.0%]  (fallthru)
;; Succ edge  33 [100.0%] 

;; Start of basic block ( 31) -> 32
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u318(11){ }u319(13){ }u320(25){ }u321(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 163 226
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; live  gen 	 0 [r0] 1 [r1] 163 226
;; live  kill	 14 [lr]
;; rd  in  	(134)
12, 59, 80, 97, 98, 115, 116, 306, 330, 331, 1948, 1949, 1950, 1951, 1952, 1955, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2092
;; rd  gen 	(3)
10, 1991, 2059
;; rd  kill	(26)
117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 2059

;; Pred edge  31 [0.0%]  (fallthru)
(note 236 235 237 32 [bb 32] NOTE_INSN_BASIC_BLOCK)

(insn 237 236 238 32 arch/arm/kernel/unwind.c:203 (set (reg/f:SI 226)
        (symbol_ref/v/f:SI ("*.LC5") [flags 0x82] <string_cst 0x11075a50>)) 167 {*arm_movsi_insn} (nil))

(insn 238 237 239 32 arch/arm/kernel/unwind.c:203 (set (reg:SI 0 r0)
        (reg/f:SI 226)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC5") [flags 0x82] <string_cst 0x11075a50>)
        (nil)))

(insn 239 238 240 32 arch/arm/kernel/unwind.c:203 (set (reg:SI 1 r1)
        (reg/v:SI 135 [ insn.539 ])) 167 {*arm_movsi_insn} (nil))

(call_insn 240 239 241 32 arch/arm/kernel/unwind.c:203 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 241 240 244 32 arch/arm/kernel/unwind.c:203 (set (reg/v:SI 163 [ urc ])
        (const_int -9 [0xfffffffffffffff7])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 32 -> ( 73)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 163
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163
;; rd  out 	(136)
10, 59, 80, 97, 98, 115, 116, 306, 330, 331, 1948, 1949, 1950, 1951, 1952, 1955, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1991, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2092


;; Succ edge  73 [100.0%]  (fallthru)

;; Start of basic block ( 31) -> 33
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u327(11){ }u328(13){ }u329(25){ }u330(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 136 147 165 166 175 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 213
;; lr  def 	 140 148 149
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 147 165 166 175 213
;; live  gen 	 140 148 149
;; live  kill	
;; rd  in  	(134)
12, 59, 80, 97, 98, 115, 116, 306, 330, 331, 1948, 1949, 1950, 1951, 1952, 1955, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2092
;; rd  gen 	(3)
1956, 1967, 1968
;; rd  kill	(5)
1956, 1957, 1966, 1967, 1968

;; Pred edge  31 [100.0%] 
(code_label 244 241 245 33 64 "" [1 uses])

(note 245 244 246 33 [bb 33] NOTE_INSN_BASIC_BLOCK)

(insn 246 245 247 33 arch/arm/kernel/unwind.c:197 (set (reg/v/f:SI 148 [ vsp ])
        (reg:SI 136 [ temp.538 ])) 167 {*arm_movsi_insn} (nil))

(insn 247 246 248 33 arch/arm/kernel/unwind.c:209 (set (reg/v:SI 149 [ load_sp ])
        (and:SI (reg/v:SI 135 [ insn.539 ])
            (const_int 512 [0x200]))) 67 {*arm_andsi3_insn} (nil))

(insn 248 247 261 33 arch/arm/kernel/unwind.c:209 (set (reg:SI 140 [ ivtmp.497 ])
        (reg/f:SI 213)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -76 [0xffffffffffffffb4]))
        (nil)))
;; End of basic block 33 -> ( 34)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 147 148 149 165 166 175
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 147 148 149 165 166 175
;; rd  out 	(133)
12, 59, 80, 97, 98, 115, 116, 306, 330, 331, 1948, 1949, 1950, 1951, 1952, 1955, 1956, 1958, 1959, 1960, 1961, 1962, 1963, 1965, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2092


;; Succ edge  34 [100.0%]  (fallthru)

;; Start of basic block ( 36 33) -> 34
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u335(11){ }u336(13){ }u337(25){ }u338(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 147 148 149 165 166 175
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; lr  def 	 24 [cc] 227
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 147 148 149 165 166 175
;; live  gen 	 24 [cc] 227
;; live  kill	
;; rd  in  	(137)
12, 59, 80, 97, 98, 115, 116, 303, 306, 330, 331, 1948, 1949, 1950, 1951, 1952, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2092
;; rd  gen 	(2)
304, 2060
;; rd  kill	(1)
2060

;; Pred edge  36 [91.7%]  (dfs_back)
;; Pred edge  33 [100.0%]  (fallthru)
(code_label 261 248 249 34 66 "" [1 uses])

(note 249 261 250 34 [bb 34] NOTE_INSN_BASIC_BLOCK)

(insn 250 249 251 34 arch/arm/kernel/unwind.c:211 (set (reg:SI 227)
        (and:SI (reg/v:SI 147 [ mask ])
            (const_int 1 [0x1]))) 67 {*arm_andsi3_insn} (nil))

(insn 251 250 252 34 arch/arm/kernel/unwind.c:211 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 227)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 252 251 253 34 arch/arm/kernel/unwind.c:211 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 257)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 34 -> ( 35 36)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 147 148 149 165 166 175
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 147 148 149 165 166 175
;; rd  out 	(136)
12, 59, 80, 97, 98, 115, 116, 304, 330, 331, 1948, 1949, 1950, 1951, 1952, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2092


;; Succ edge  35 [50.0%]  (fallthru)
;; Succ edge  36 [50.0%] 

;; Start of basic block ( 34) -> 35
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u342(11){ }u343(13){ }u344(25){ }u345(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 147 148 149 165 166 175
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 148
;; lr  def 	 148 228
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 147 148 149 165 166 175
;; live  gen 	 148 228
;; live  kill	
;; rd  in  	(136)
12, 59, 80, 97, 98, 115, 116, 304, 330, 331, 1948, 1949, 1950, 1951, 1952, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2092
;; rd  gen 	(2)
1966, 2061
;; rd  kill	(3)
1966, 1967, 2061

;; Pred edge  34 [50.0%]  (fallthru)
(note 253 252 254 35 [bb 35] NOTE_INSN_BASIC_BLOCK)

(insn 254 253 255 35 arch/arm/kernel/unwind.c:212 (set (reg:SI 228)
        (mem:SI (reg/v/f:SI 148 [ vsp ]) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 255 254 256 35 arch/arm/kernel/unwind.c:212 (set (mem/s/j:SI (plus:SI (reg:SI 140 [ ivtmp.497 ])
                (const_int 16 [0x10])) [0 ctrl.vrs S4 A32])
        (reg:SI 228)) 167 {*arm_movsi_insn} (nil))

(insn 256 255 257 35 arch/arm/kernel/unwind.c:212 (set (reg/v/f:SI 148 [ vsp ])
        (plus:SI (reg/v/f:SI 148 [ vsp ])
            (const_int 4 [0x4]))) 4 {*arm_addsi3} (nil))
;; End of basic block 35 -> ( 36)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 147 148 149 165 166 175
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 147 148 149 165 166 175
;; rd  out 	(135)
12, 59, 80, 97, 98, 115, 116, 304, 330, 331, 1948, 1949, 1950, 1951, 1952, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1968, 1969, 1970, 1971, 1972, 1973, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2092


;; Succ edge  36 [100.0%]  (fallthru)

;; Start of basic block ( 34 35) -> 36
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u350(11){ }u351(13){ }u352(25){ }u353(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 147 148 149 165 166 175
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 147
;; lr  def 	 24 [cc] 140 147
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 147 148 149 165 166 175
;; live  gen 	 24 [cc] 140 147
;; live  kill	
;; rd  in  	(136)
12, 59, 80, 97, 98, 115, 116, 304, 330, 331, 1948, 1949, 1950, 1951, 1952, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2092
;; rd  gen 	(3)
303, 1957, 1964
;; rd  kill	(4)
1956, 1957, 1964, 1965

;; Pred edge  34 [50.0%] 
;; Pred edge  35 [100.0%]  (fallthru)
(code_label 257 256 258 36 65 "" [1 uses])

(note 258 257 259 36 [bb 36] NOTE_INSN_BASIC_BLOCK)

(insn 259 258 260 36 arch/arm/kernel/unwind.c:213 (set (reg/v:SI 147 [ mask ])
        (lshiftrt:SI (reg/v:SI 147 [ mask ])
            (const_int 1 [0x1]))) 117 {*arm_shiftsi3} (nil))

(insn 260 259 262 36 arch/arm/kernel/unwind.c:213 (set (reg:SI 140 [ ivtmp.497 ])
        (plus:SI (reg:SI 140 [ ivtmp.497 ])
            (const_int 4 [0x4]))) 4 {*arm_addsi3} (nil))

(insn 262 260 263 36 arch/arm/kernel/unwind.c:210 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 147 [ mask ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 263 262 264 36 arch/arm/kernel/unwind.c:210 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 261)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9167 [0x23cf])
        (nil)))
;; End of basic block 36 -> ( 34 37)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 147 148 149 165 166 175
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 147 148 149 165 166 175
;; rd  out 	(134)
12, 59, 80, 97, 98, 115, 116, 303, 330, 331, 1948, 1949, 1950, 1951, 1952, 1955, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2092


;; Succ edge  34 [91.7%]  (dfs_back)
;; Succ edge  37 [8.3%]  (fallthru)

;; Start of basic block ( 36) -> 37
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u358(11){ }u359(13){ }u360(25){ }u361(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 148 149 165 166 175
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 165 166 175
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(134)
12, 59, 80, 97, 98, 115, 116, 303, 330, 331, 1948, 1949, 1950, 1951, 1952, 1955, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2092
;; rd  gen 	(1)
302
;; rd  kill	(0)


;; Pred edge  36 [8.3%]  (fallthru)
(note 264 263 265 37 [bb 37] NOTE_INSN_BASIC_BLOCK)

(insn 265 264 266 37 arch/arm/kernel/unwind.c:216 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 149 [ load_sp ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 266 265 267 37 arch/arm/kernel/unwind.c:216 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 419)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 37 -> ( 38 65)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 148 165 166 175
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 165 166 175
;; rd  out 	(134)
12, 59, 80, 97, 98, 115, 116, 302, 330, 331, 1948, 1949, 1950, 1951, 1952, 1955, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2092


;; Succ edge  38 [50.0%]  (fallthru)
;; Succ edge  65 [50.0%] 

;; Start of basic block ( 37) -> 38
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u364(11){ }u365(13){ }u366(25){ }u367(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 148 165 166 175
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 165 166 175
;; live  gen 	
;; live  kill	
;; rd  in  	(134)
12, 59, 80, 97, 98, 115, 116, 302, 330, 331, 1948, 1949, 1950, 1951, 1952, 1955, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2092
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  37 [50.0%]  (fallthru)
(note 267 266 268 38 [bb 38] NOTE_INSN_BASIC_BLOCK)

(insn 268 267 271 38 arch/arm/kernel/unwind.c:217 (set (mem/s/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -24 [0xffffffffffffffe8])) [0 ctrl.vrs+52 S4 A32])
        (reg/v/f:SI 148 [ vsp ])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 38 -> ( 65)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 165 166 175
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 165 166 175
;; rd  out 	(134)
12, 59, 80, 97, 98, 115, 116, 302, 330, 331, 1948, 1949, 1950, 1951, 1952, 1955, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2092


;; Succ edge  65 [100.0%]  (fallthru)

;; Start of basic block ( 30) -> 39
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u370(11){ }u371(13){ }u372(25){ }u373(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 146 165 166 175
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 146 165 166 175
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(134)
13, 59, 80, 97, 98, 115, 116, 308, 330, 331, 1948, 1949, 1950, 1951, 1952, 1955, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2092
;; rd  gen 	(1)
301
;; rd  kill	(0)


;; Pred edge  30 [86.3%] 
(code_label 271 268 272 39 63 "" [1 uses])

(note 272 271 273 39 [bb 39] NOTE_INSN_BASIC_BLOCK)

(insn 273 272 274 39 arch/arm/kernel/unwind.c:218 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 142 [ D.15946 ])
            (const_int 144 [0x90]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 274 273 275 39 arch/arm/kernel/unwind.c:218 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 289)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
        (nil)))
;; End of basic block 39 -> ( 40 42)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 146 165 166 175
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 146 165 166 175
;; rd  out 	(134)
13, 59, 80, 97, 98, 115, 116, 301, 330, 331, 1948, 1949, 1950, 1951, 1952, 1955, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2092


;; Succ edge  40 [28.0%]  (fallthru)
;; Succ edge  42 [72.0%] 

;; Start of basic block ( 39) -> 40
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u376(11){ }u377(13){ }u378(25){ }u379(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 165 166 175
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146
;; lr  def 	 24 [cc] 229
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 165 166 175
;; live  gen 	 24 [cc] 229
;; live  kill	
;; rd  in  	(134)
13, 59, 80, 97, 98, 115, 116, 301, 330, 331, 1948, 1949, 1950, 1951, 1952, 1955, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2092
;; rd  gen 	(2)
300, 2062
;; rd  kill	(1)
2062

;; Pred edge  39 [28.0%]  (fallthru)
(note 275 274 276 40 [bb 40] NOTE_INSN_BASIC_BLOCK)

(insn 276 275 277 40 arch/arm/kernel/unwind.c:219 (set (reg:SI 229)
        (and:SI (reg/v:SI 146 [ insn ])
            (const_int 13 [0xd]))) 67 {*arm_andsi3_insn} (nil))

(insn 277 276 278 40 arch/arm/kernel/unwind.c:219 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 229)
            (const_int 13 [0xd]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 278 277 279 40 arch/arm/kernel/unwind.c:219 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 327)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 2800 [0xaf0])
        (nil)))
;; End of basic block 40 -> ( 41 49)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 165 166 175
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 165 166 175
;; rd  out 	(134)
13, 59, 80, 97, 98, 115, 116, 300, 330, 331, 1948, 1949, 1950, 1951, 1952, 1955, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2092


;; Succ edge  41 [72.0%]  (fallthru)
;; Succ edge  49 [28.0%] 

;; Start of basic block ( 40) -> 41
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u383(11){ }u384(13){ }u385(25){ }u386(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 165 166 175
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146
;; lr  def 	 230 231 232 233 234 235
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 165 166 175
;; live  gen 	 230 231 232 233 234 235
;; live  kill	
;; rd  in  	(134)
13, 59, 80, 97, 98, 115, 116, 300, 330, 331, 1948, 1949, 1950, 1951, 1952, 1955, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2092
;; rd  gen 	(6)
2063, 2064, 2065, 2066, 2067, 2068
;; rd  kill	(6)
2063, 2064, 2065, 2066, 2067, 2068

;; Pred edge  40 [72.0%]  (fallthru)
(note 279 278 280 41 [bb 41] NOTE_INSN_BASIC_BLOCK)

(insn 280 279 281 41 arch/arm/kernel/unwind.c:220 (set (reg:SI 230)
        (and:SI (reg/v:SI 146 [ insn ])
            (const_int 15 [0xf]))) 67 {*arm_andsi3_insn} (nil))

(insn 281 280 282 41 arch/arm/kernel/unwind.c:220 (set (reg:SI 231)
        (const_int -76 [0xffffffffffffffb4])) 167 {*arm_movsi_insn} (nil))

(insn 282 281 283 41 arch/arm/kernel/unwind.c:220 (set (reg:SI 232)
        (ashift:SI (reg:SI 230)
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (nil))

(insn 283 282 284 41 arch/arm/kernel/unwind.c:220 (set (reg:SI 233)
        (plus:SI (reg/f:SI 25 sfp)
            (reg:SI 232))) 4 {*arm_addsi3} (nil))

(insn 284 283 285 41 arch/arm/kernel/unwind.c:220 (set (reg/f:SI 234)
        (plus:SI (reg:SI 233)
            (reg:SI 231))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (plus:SI (reg:SI 233)
            (const_int -76 [0xffffffffffffffb4]))
        (nil)))

(insn 285 284 286 41 arch/arm/kernel/unwind.c:220 (set (reg:SI 235)
        (mem/s/j:SI (reg/f:SI 234) [0 ctrl.vrs S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 286 285 289 41 arch/arm/kernel/unwind.c:220 (set (mem/s/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -24 [0xffffffffffffffe8])) [0 ctrl.vrs+52 S4 A32])
        (reg:SI 235)) 167 {*arm_movsi_insn} (nil))
;; End of basic block 41 -> ( 65)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 165 166 175
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 165 166 175
;; rd  out 	(134)
13, 59, 80, 97, 98, 115, 116, 300, 330, 331, 1948, 1949, 1950, 1951, 1952, 1955, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2092


;; Succ edge  65 [100.0%]  (fallthru)

;; Start of basic block ( 39) -> 42
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u396(11){ }u397(13){ }u398(25){ }u399(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 146 165 166 175
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 146 165 166 175
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(134)
13, 59, 80, 97, 98, 115, 116, 301, 330, 331, 1948, 1949, 1950, 1951, 1952, 1955, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2092
;; rd  gen 	(1)
299
;; rd  kill	(0)


;; Pred edge  39 [72.0%] 
(code_label 289 286 290 42 67 "" [1 uses])

(note 290 289 291 42 [bb 42] NOTE_INSN_BASIC_BLOCK)

(insn 291 290 292 42 arch/arm/kernel/unwind.c:221 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 142 [ D.15946 ])
            (const_int 160 [0xa0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 292 291 293 42 arch/arm/kernel/unwind.c:221 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 327)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 6895 [0x1aef])
        (nil)))
;; End of basic block 42 -> ( 43 49)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 165 166 175
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 165 166 175
;; rd  out 	(134)
13, 59, 80, 97, 98, 115, 116, 299, 330, 331, 1948, 1949, 1950, 1951, 1952, 1955, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2092


;; Succ edge  43 [31.1%]  (fallthru)
;; Succ edge  49 [69.0%] 

;; Start of basic block ( 42) -> 43
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u402(11){ }u403(13){ }u404(25){ }u405(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 165 166 175
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 138 151
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 165 166 175
;; live  gen 	 138 151
;; live  kill	
;; rd  in  	(134)
13, 59, 80, 97, 98, 115, 116, 299, 330, 331, 1948, 1949, 1950, 1951, 1952, 1955, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2092
;; rd  gen 	(2)
1953, 1972
;; rd  kill	(4)
1952, 1953, 1971, 1972

;; Pred edge  42 [31.1%]  (fallthru)
(note 293 292 294 43 [bb 43] NOTE_INSN_BASIC_BLOCK)

(insn 294 293 295 43 arch/arm/kernel/unwind.c:222 (set (reg:SI 138 [ ivtmp.511 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -24 [0xffffffffffffffe8])) [0 ctrl.vrs+52 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 295 294 308 43 arch/arm/kernel/unwind.c:226 (set (reg/v:SI 151 [ reg ])
        (const_int 4 [0x4])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 43 -> ( 45)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 146 151 165 166 175
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 146 151 165 166 175
;; rd  out 	(133)
13, 59, 80, 97, 98, 115, 116, 299, 330, 331, 1948, 1949, 1950, 1951, 1953, 1955, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1966, 1967, 1968, 1969, 1970, 1972, 1973, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2092


;; Succ edge  45 [100.0%]  (fallthru)

;; Start of basic block ( 45) -> 44
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u407(11){ }u408(13){ }u409(25){ }u410(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 146 151 165 166 175
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 151
;; lr  def 	 151 236 237 238
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 146 151 165 166 175
;; live  gen 	 151 236 237 238
;; live  kill	
;; rd  in  	(134)
13, 59, 80, 97, 98, 115, 116, 278, 330, 331, 1948, 1949, 1950, 1951, 1952, 1955, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2092
;; rd  gen 	(4)
1971, 2069, 2070, 2071
;; rd  kill	(5)
1971, 1972, 2069, 2070, 2071

;; Pred edge  45 [92.3%] 
(code_label 308 295 298 44 70 "" [1 uses])

(note 298 308 299 44 [bb 44] NOTE_INSN_BASIC_BLOCK)

(insn 299 298 300 44 arch/arm/kernel/unwind.c:227 (set (reg/f:SI 236)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -76 [0xffffffffffffffb4]))) 4 {*arm_addsi3} (nil))

(insn 300 299 301 44 arch/arm/kernel/unwind.c:227 (set (reg:SI 237)
        (ashift:SI (reg/v:SI 151 [ reg ])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (nil))

(insn 301 300 302 44 arch/arm/kernel/unwind.c:227 (set (reg:SI 238)
        (mem:SI (plus:SI (reg:SI 138 [ ivtmp.511 ])
                (const_int -4 [0xfffffffffffffffc])) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 302 301 303 44 arch/arm/kernel/unwind.c:227 (set (mem/s/j:SI (plus:SI (reg/f:SI 236)
                (reg:SI 237)) [0 ctrl.vrs S4 A32])
        (reg:SI 238)) 167 {*arm_movsi_insn} (nil))

(insn 303 302 304 44 arch/arm/kernel/unwind.c:226 discrim 2 (set (reg/v:SI 151 [ reg ])
        (plus:SI (reg/v:SI 151 [ reg ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))
;; End of basic block 44 -> ( 45)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 146 151 165 166 175
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 146 151 165 166 175
;; rd  out 	(133)
13, 59, 80, 97, 98, 115, 116, 278, 330, 331, 1948, 1949, 1950, 1951, 1952, 1955, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1966, 1967, 1968, 1969, 1970, 1971, 1973, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2092


;; Succ edge  45 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 43 44) -> 45
;; bb 45 artificial_defs: { }
;; bb 45 artificial_uses: { u418(11){ }u419(13){ }u420(25){ }u421(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 146 151 165 166 175
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 146 151
;; lr  def 	 24 [cc] 138 145 239 240
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 146 151 165 166 175
;; live  gen 	 24 [cc] 138 145 239 240
;; live  kill	
;; rd  in  	(136)
13, 59, 80, 97, 98, 115, 116, 278, 299, 330, 331, 1948, 1949, 1950, 1951, 1952, 1953, 1955, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2092
;; rd  gen 	(5)
278, 1952, 1962, 2072, 2073
;; rd  kill	(5)
1952, 1953, 1962, 2072, 2073

;; Pred edge  43 [100.0%]  (fallthru)
;; Pred edge  44 [100.0%]  (fallthru,dfs_back)
(code_label 304 303 305 45 69 "" [0 uses])

(note 305 304 307 45 [bb 45] NOTE_INSN_BASIC_BLOCK)

(insn 307 305 309 45 arch/arm/kernel/unwind.c:226 discrim 2 (set (reg:SI 138 [ ivtmp.511 ])
        (plus:SI (reg:SI 138 [ ivtmp.511 ])
            (const_int 4 [0x4]))) 4 {*arm_addsi3} (nil))

(insn 309 307 310 45 arch/arm/kernel/unwind.c:226 discrim 1 (set (reg:SI 239)
        (and:SI (reg/v:SI 146 [ insn ])
            (const_int 7 [0x7]))) 67 {*arm_andsi3_insn} (nil))

(insn 310 309 311 45 arch/arm/kernel/unwind.c:226 discrim 1 (set (reg:SI 240)
        (plus:SI (reg:SI 239)
            (const_int 4 [0x4]))) 4 {*arm_addsi3} (nil))

(insn 311 310 312 45 arch/arm/kernel/unwind.c:226 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 151 [ reg ])
            (reg:SI 240))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 312 311 313 45 arch/arm/kernel/unwind.c:226 discrim 1 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 308)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9231 [0x240f])
        (nil)))
;; End of basic block 45 -> ( 44 46)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 146 151 165 166 175
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 146 151 165 166 175
;; rd  out 	(134)
13, 59, 80, 97, 98, 115, 116, 278, 330, 331, 1948, 1949, 1950, 1951, 1952, 1955, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2092


;; Succ edge  44 [92.3%] 
;; Succ edge  46 [7.7%]  (fallthru)

;; Start of basic block ( 45) -> 46
;; bb 46 artificial_defs: { }
;; bb 46 artificial_uses: { u429(11){ }u430(13){ }u431(25){ }u432(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 146 165 166 175
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 146
;; lr  def 	 24 [cc] 150 241
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 146 165 166 175
;; live  gen 	 24 [cc] 150 241
;; live  kill	
;; rd  in  	(134)
13, 59, 80, 97, 98, 115, 116, 278, 330, 331, 1948, 1949, 1950, 1951, 1952, 1955, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2092
;; rd  gen 	(3)
298, 1970, 2074
;; rd  kill	(3)
1969, 1970, 2074

;; Pred edge  45 [7.7%]  (fallthru)
(note 313 312 314 46 [bb 46] NOTE_INSN_BASIC_BLOCK)

(insn 314 313 315 46 arch/arm/kernel/unwind.c:226 discrim 1 (set (reg/v/f:SI 150 [ vsp ])
        (plus:SI (reg:SI 138 [ ivtmp.511 ])
            (const_int -4 [0xfffffffffffffffc]))) 4 {*arm_addsi3} (nil))

(insn 315 314 316 46 arch/arm/kernel/unwind.c:228 (set (reg:SI 241)
        (and:SI (reg/v:SI 146 [ insn ])
            (const_int 128 [0x80]))) 67 {*arm_andsi3_insn} (nil))

(insn 316 315 317 46 arch/arm/kernel/unwind.c:228 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 241)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 317 316 318 46 arch/arm/kernel/unwind.c:228 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 322)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 46 -> ( 47 48)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 150 165 166 175
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 150 165 166 175
;; rd  out 	(133)
13, 59, 80, 97, 98, 115, 116, 298, 330, 331, 1948, 1949, 1950, 1951, 1952, 1955, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1966, 1967, 1968, 1970, 1971, 1972, 1973, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2092


;; Succ edge  47 [50.0%]  (fallthru)
;; Succ edge  48 [50.0%] 

;; Start of basic block ( 46) -> 47
;; bb 47 artificial_defs: { }
;; bb 47 artificial_uses: { u437(11){ }u438(13){ }u439(25){ }u440(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 150 165 166 175
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 150
;; lr  def 	 150 242
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 150 165 166 175
;; live  gen 	 150 242
;; live  kill	
;; rd  in  	(133)
13, 59, 80, 97, 98, 115, 116, 298, 330, 331, 1948, 1949, 1950, 1951, 1952, 1955, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1966, 1967, 1968, 1970, 1971, 1972, 1973, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2092
;; rd  gen 	(2)
1969, 2075
;; rd  kill	(3)
1969, 1970, 2075

;; Pred edge  46 [50.0%]  (fallthru)
(note 318 317 319 47 [bb 47] NOTE_INSN_BASIC_BLOCK)

(insn 319 318 320 47 arch/arm/kernel/unwind.c:229 (set (reg:SI 242)
        (mem:SI (reg/v/f:SI 150 [ vsp ]) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 320 319 321 47 arch/arm/kernel/unwind.c:229 (set (mem/s/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -20 [0xffffffffffffffec])) [0 ctrl.vrs+56 S4 A32])
        (reg:SI 242)) 167 {*arm_movsi_insn} (nil))

(insn 321 320 322 47 arch/arm/kernel/unwind.c:229 (set (reg/v/f:SI 150 [ vsp ])
        (reg:SI 138 [ ivtmp.511 ])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 47 -> ( 48)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 150 165 166 175
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 165 166 175
;; rd  out 	(133)
13, 59, 80, 97, 98, 115, 116, 298, 330, 331, 1948, 1949, 1950, 1951, 1952, 1955, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1966, 1967, 1968, 1969, 1971, 1972, 1973, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2092


;; Succ edge  48 [100.0%]  (fallthru)

;; Start of basic block ( 46 47) -> 48
;; bb 48 artificial_defs: { }
;; bb 48 artificial_uses: { u445(11){ }u446(13){ }u447(25){ }u448(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 150 165 166 175
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 165 166 175
;; live  gen 	
;; live  kill	
;; rd  in  	(134)
13, 59, 80, 97, 98, 115, 116, 298, 330, 331, 1948, 1949, 1950, 1951, 1952, 1955, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2092
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  46 [50.0%] 
;; Pred edge  47 [100.0%]  (fallthru)
(code_label 322 321 323 48 71 "" [1 uses])

(note 323 322 324 48 [bb 48] NOTE_INSN_BASIC_BLOCK)

(insn 324 323 327 48 arch/arm/kernel/unwind.c:230 (set (mem/s/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -24 [0xffffffffffffffe8])) [0 ctrl.vrs+52 S4 A32])
        (reg/v/f:SI 150 [ vsp ])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 48 -> ( 65)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 165 166 175
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 165 166 175
;; rd  out 	(134)
13, 59, 80, 97, 98, 115, 116, 298, 330, 331, 1948, 1949, 1950, 1951, 1952, 1955, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2092


;; Succ edge  65 [100.0%]  (fallthru)

;; Start of basic block ( 42 40) -> 49
;; bb 49 artificial_defs: { }
;; bb 49 artificial_uses: { u451(11){ }u452(13){ }u453(25){ }u454(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 165 166 175
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 165 166 175
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(135)
13, 59, 80, 97, 98, 115, 116, 299, 300, 330, 331, 1948, 1949, 1950, 1951, 1952, 1955, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2092
;; rd  gen 	(1)
297
;; rd  kill	(0)


;; Pred edge  42 [69.0%] 
;; Pred edge  40 [28.0%] 
(code_label 327 324 328 49 68 "" [2 uses])

(note 328 327 329 49 [bb 49] NOTE_INSN_BASIC_BLOCK)

(insn 329 328 330 49 arch/arm/kernel/unwind.c:231 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 146 [ insn ])
            (const_int 176 [0xb0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 330 329 331 49 arch/arm/kernel/unwind.c:231 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 344)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
        (nil)))
;; End of basic block 49 -> ( 50 53)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 165 166 175
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 165 166 175
;; rd  out 	(134)
13, 59, 80, 97, 98, 115, 116, 297, 330, 331, 1948, 1949, 1950, 1951, 1952, 1955, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2092


;; Succ edge  50 [28.0%]  (fallthru)
;; Succ edge  53 [72.0%] 

;; Start of basic block ( 49) -> 50
;; bb 50 artificial_defs: { }
;; bb 50 artificial_uses: { u457(11){ }u458(13){ }u459(25){ }u460(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 165 166 175
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 243
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 165 166 175
;; live  gen 	 24 [cc] 243
;; live  kill	
;; rd  in  	(134)
13, 59, 80, 97, 98, 115, 116, 297, 330, 331, 1948, 1949, 1950, 1951, 1952, 1955, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2092
;; rd  gen 	(2)
296, 2076
;; rd  kill	(1)
2076

;; Pred edge  49 [28.0%]  (fallthru)
(note 331 330 332 50 [bb 50] NOTE_INSN_BASIC_BLOCK)

(insn 332 331 333 50 arch/arm/kernel/unwind.c:232 (set (reg:SI 243 [ ctrl.vrs+60 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -16 [0xfffffffffffffff0])) [0 ctrl.vrs+60 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 333 332 334 50 arch/arm/kernel/unwind.c:232 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 243 [ ctrl.vrs+60 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 334 333 335 50 arch/arm/kernel/unwind.c:232 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 338)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 50 -> ( 51 52)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 165 166 175
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 165 166 175
;; rd  out 	(134)
13, 59, 80, 97, 98, 115, 116, 296, 330, 331, 1948, 1949, 1950, 1951, 1952, 1955, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2092


;; Succ edge  51 [50.0%]  (fallthru)
;; Succ edge  52 [50.0%] 

;; Start of basic block ( 50) -> 51
;; bb 51 artificial_defs: { }
;; bb 51 artificial_uses: { u464(11){ }u465(13){ }u466(25){ }u467(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 165 166 175
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 244
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 165 166 175
;; live  gen 	 244
;; live  kill	
;; rd  in  	(134)
13, 59, 80, 97, 98, 115, 116, 296, 330, 331, 1948, 1949, 1950, 1951, 1952, 1955, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2092
;; rd  gen 	(1)
2077
;; rd  kill	(1)
2077

;; Pred edge  50 [50.0%]  (fallthru)
(note 335 334 336 51 [bb 51] NOTE_INSN_BASIC_BLOCK)

(insn 336 335 337 51 arch/arm/kernel/unwind.c:233 (set (reg:SI 244 [ ctrl.vrs+56 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -20 [0xffffffffffffffec])) [0 ctrl.vrs+56 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 337 336 338 51 arch/arm/kernel/unwind.c:233 (set (mem/s/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -16 [0xfffffffffffffff0])) [0 ctrl.vrs+60 S4 A32])
        (reg:SI 244 [ ctrl.vrs+56 ])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 51 -> ( 52)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 165 166 175
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 165 166 175
;; rd  out 	(134)
13, 59, 80, 97, 98, 115, 116, 296, 330, 331, 1948, 1949, 1950, 1951, 1952, 1955, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2092


;; Succ edge  52 [100.0%]  (fallthru)

;; Start of basic block ( 50 51) -> 52
;; bb 52 artificial_defs: { }
;; bb 52 artificial_uses: { u471(11){ }u472(13){ }u473(25){ }u474(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 165 166 175
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 245
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 165 166 175
;; live  gen 	 245
;; live  kill	
;; rd  in  	(134)
13, 59, 80, 97, 98, 115, 116, 296, 330, 331, 1948, 1949, 1950, 1951, 1952, 1955, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2092
;; rd  gen 	(1)
2078
;; rd  kill	(1)
2078

;; Pred edge  50 [50.0%] 
;; Pred edge  51 [100.0%]  (fallthru)
(code_label 338 337 339 52 73 "" [1 uses])

(note 339 338 340 52 [bb 52] NOTE_INSN_BASIC_BLOCK)

(insn 340 339 341 52 arch/arm/kernel/unwind.c:235 (set (reg:SI 245)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 341 340 344 52 arch/arm/kernel/unwind.c:235 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0 ctrl.entries+0 S4 A32])
        (reg:SI 245)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))
;; End of basic block 52 -> ( 65)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 165 166 175
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 165 166 175
;; rd  out 	(134)
13, 59, 80, 97, 98, 115, 116, 296, 330, 331, 1948, 1949, 1950, 1951, 1952, 1955, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2092


;; Succ edge  65 [100.0%]  (fallthru)

;; Start of basic block ( 49) -> 53
;; bb 53 artificial_defs: { }
;; bb 53 artificial_uses: { u477(11){ }u478(13){ }u479(25){ }u480(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 165 166 175
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 165 166 175
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(134)
13, 59, 80, 97, 98, 115, 116, 297, 330, 331, 1948, 1949, 1950, 1951, 1952, 1955, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2092
;; rd  gen 	(1)
295
;; rd  kill	(0)


;; Pred edge  49 [72.0%] 
(code_label 344 341 345 53 72 "" [1 uses])

(note 345 344 346 53 [bb 53] NOTE_INSN_BASIC_BLOCK)

(insn 346 345 347 53 arch/arm/kernel/unwind.c:236 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 146 [ insn ])
            (const_int 177 [0xb1]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 347 346 348 53 arch/arm/kernel/unwind.c:236 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 394)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 8629 [0x21b5])
        (nil)))
;; End of basic block 53 -> ( 54 62)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 165 166 175
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 165 166 175
;; rd  out 	(134)
13, 59, 80, 97, 98, 115, 116, 295, 330, 331, 1948, 1949, 1950, 1951, 1952, 1955, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2092


;; Succ edge  54 [13.7%]  (fallthru)
;; Succ edge  62 [86.3%] 

;; Start of basic block ( 53) -> 54
;; bb 54 artificial_defs: { }
;; bb 54 artificial_uses: { u483(11){ }u484(13){ }u485(25){ }u486(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 165 166 175
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 152 246
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 165 166 175
;; live  gen 	 0 [r0] 24 [cc] 134 152 246
;; live  kill	 14 [lr]
;; rd  in  	(134)
13, 59, 80, 97, 98, 115, 116, 295, 330, 331, 1948, 1949, 1950, 1951, 1952, 1955, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2092
;; rd  gen 	(5)
8, 293, 1948, 1974, 2079
;; rd  kill	(21)
117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 1948, 1973, 1974, 2079

;; Pred edge  53 [13.7%]  (fallthru)
(note 348 347 349 54 [bb 54] NOTE_INSN_BASIC_BLOCK)

(insn 349 348 350 54 arch/arm/kernel/unwind.c:237 (set (reg/f:SI 246)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -76 [0xffffffffffffffb4]))) 4 {*arm_addsi3} (nil))

(insn 350 349 351 54 arch/arm/kernel/unwind.c:237 (set (reg:SI 0 r0)
        (reg/f:SI 246)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -76 [0xffffffffffffffb4]))
        (nil)))

(call_insn 351 350 352 54 arch/arm/kernel/unwind.c:237 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("unwind_get_byte") [flags 0x3] <function_decl 0x11039c00 unwind_get_byte>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 352 351 353 54 arch/arm/kernel/unwind.c:237 (set (reg/v:SI 152 [ mask ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 353 352 354 54 arch/arm/kernel/unwind.c:238 (set (reg:SI 134 [ temp.542 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -24 [0xffffffffffffffe8])) [0 ctrl.vrs+52 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 354 353 355 54 arch/arm/kernel/unwind.c:241 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 152 [ mask ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 355 354 356 54 arch/arm/kernel/unwind.c:241 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 360)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 4 [0x4])
        (nil)))
;; End of basic block 54 -> ( 56 55)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 152 165 166 175
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 152 165 166 175
;; rd  out 	(134)
8, 59, 80, 97, 98, 115, 116, 293, 330, 331, 1948, 1949, 1950, 1951, 1952, 1955, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2092


;; Succ edge  56 [0.0%] 
;; Succ edge  55 [100.0%]  (fallthru)

;; Start of basic block ( 54) -> 55
;; bb 55 artificial_defs: { }
;; bb 55 artificial_uses: { u496(11){ }u497(13){ }u498(25){ }u499(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 152 165 166 175
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152
;; lr  def 	 24 [cc] 247
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 152 165 166 175
;; live  gen 	 24 [cc] 247
;; live  kill	
;; rd  in  	(134)
8, 59, 80, 97, 98, 115, 116, 293, 330, 331, 1948, 1949, 1950, 1951, 1952, 1955, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2092
;; rd  gen 	(2)
292, 2080
;; rd  kill	(1)
2080

;; Pred edge  54 [100.0%]  (fallthru)
(note 356 355 357 55 [bb 55] NOTE_INSN_BASIC_BLOCK)

(insn 357 356 358 55 arch/arm/kernel/unwind.c:241 discrim 1 (set (reg:SI 247)
        (and:SI (reg/v:SI 152 [ mask ])
            (const_int 240 [0xf0]))) 67 {*arm_andsi3_insn} (nil))

(insn 358 357 359 55 arch/arm/kernel/unwind.c:241 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 247)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 359 358 360 55 arch/arm/kernel/unwind.c:241 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 370)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 55 -> ( 56 57)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 152 165 166 175 247
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 152 165 166 175 247
;; rd  out 	(134)
8, 59, 80, 97, 98, 115, 116, 292, 330, 331, 1948, 1949, 1950, 1951, 1952, 1955, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2092


;; Succ edge  56 [0.0%]  (fallthru)
;; Succ edge  57 [100.0%] 

;; Start of basic block ( 54 55) -> 56
;; bb 56 artificial_defs: { }
;; bb 56 artificial_uses: { u503(11){ }u504(13){ }u505(25){ }u506(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 163 248 249
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152
;; live  gen 	 0 [r0] 1 [r1] 163 248 249
;; live  kill	 14 [lr]
;; rd  in  	(135)
8, 59, 80, 97, 98, 115, 116, 292, 293, 330, 331, 1948, 1949, 1950, 1951, 1952, 1955, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2092
;; rd  gen 	(4)
6, 1990, 2081, 2082
;; rd  kill	(27)
117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 2081, 2082

;; Pred edge  54 [0.0%] 
;; Pred edge  55 [0.0%]  (fallthru)
(code_label 360 359 361 56 75 "" [1 uses])

(note 361 360 362 56 [bb 56] NOTE_INSN_BASIC_BLOCK)

(insn 362 361 363 56 arch/arm/kernel/unwind.c:242 (set (reg/f:SI 248)
        (symbol_ref/v/f:SI ("*.LC6") [flags 0x82] <string_cst 0x110a6480>)) 167 {*arm_movsi_insn} (nil))

(insn 363 362 364 56 arch/arm/kernel/unwind.c:242 (set (reg:SI 249)
        (ior:SI (reg/v:SI 152 [ mask ])
            (const_int 45312 [0xb100]))) 89 {*arm_iorsi3} (nil))

(insn 364 363 365 56 arch/arm/kernel/unwind.c:242 (set (reg:SI 0 r0)
        (reg/f:SI 248)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC6") [flags 0x82] <string_cst 0x110a6480>)
        (nil)))

(insn 365 364 366 56 arch/arm/kernel/unwind.c:242 (set (reg:SI 1 r1)
        (reg:SI 249)) 167 {*arm_movsi_insn} (nil))

(call_insn 366 365 367 56 arch/arm/kernel/unwind.c:242 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 367 366 370 56 arch/arm/kernel/unwind.c:242 (set (reg/v:SI 163 [ urc ])
        (const_int -9 [0xfffffffffffffff7])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 56 -> ( 73)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 163
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163
;; rd  out 	(138)
6, 59, 80, 97, 98, 115, 116, 292, 293, 330, 331, 1948, 1949, 1950, 1951, 1952, 1955, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1990, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2092


;; Succ edge  73 [100.0%]  (fallthru)

;; Start of basic block ( 55) -> 57
;; bb 57 artificial_defs: { }
;; bb 57 artificial_uses: { u513(11){ }u514(13){ }u515(25){ }u516(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 152 165 166 175 247
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 247
;; lr  def 	 139 153
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 152 165 166 175 247
;; live  gen 	 139 153
;; live  kill	
;; rd  in  	(134)
8, 59, 80, 97, 98, 115, 116, 292, 330, 331, 1948, 1949, 1950, 1951, 1952, 1955, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2092
;; rd  gen 	(2)
1954, 1976
;; rd  kill	(4)
1954, 1955, 1975, 1976

;; Pred edge  55 [100.0%] 
(code_label 370 367 371 57 76 "" [1 uses])

(note 371 370 372 57 [bb 57] NOTE_INSN_BASIC_BLOCK)

(insn 372 371 373 57 arch/arm/kernel/unwind.c:238 (set (reg/v/f:SI 153 [ vsp ])
        (reg:SI 134 [ temp.542 ])) 167 {*arm_movsi_insn} (nil))

(insn 373 372 387 57 arch/arm/kernel/unwind.c:238 (set (reg:SI 139 [ ivtmp.505 ])
        (reg:SI 247)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))
;; End of basic block 57 -> ( 58)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 152 153 165 166 175
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 152 153 165 166 175
;; rd  out 	(133)
8, 59, 80, 97, 98, 115, 116, 292, 330, 331, 1948, 1949, 1950, 1951, 1952, 1954, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1974, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2092


;; Succ edge  58 [100.0%]  (fallthru)

;; Start of basic block ( 60 57) -> 58
;; bb 58 artificial_defs: { }
;; bb 58 artificial_uses: { u519(11){ }u520(13){ }u521(25){ }u522(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 152 153 165 166 175
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152
;; lr  def 	 24 [cc] 250
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 152 153 165 166 175
;; live  gen 	 24 [cc] 250
;; live  kill	
;; rd  in  	(137)
8, 59, 80, 97, 98, 115, 116, 289, 292, 330, 331, 1948, 1949, 1950, 1951, 1952, 1954, 1955, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2092
;; rd  gen 	(2)
290, 2083
;; rd  kill	(1)
2083

;; Pred edge  60 [93.8%]  (dfs_back)
;; Pred edge  57 [100.0%]  (fallthru)
(code_label 387 373 374 58 78 "" [1 uses])

(note 374 387 375 58 [bb 58] NOTE_INSN_BASIC_BLOCK)

(insn 375 374 376 58 arch/arm/kernel/unwind.c:249 (set (reg:SI 250)
        (and:SI (reg/v:SI 152 [ mask ])
            (const_int 1 [0x1]))) 67 {*arm_andsi3_insn} (nil))

(insn 376 375 377 58 arch/arm/kernel/unwind.c:249 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 250)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 377 376 378 58 arch/arm/kernel/unwind.c:249 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 383)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 58 -> ( 59 60)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 152 153 165 166 175
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 152 153 165 166 175
;; rd  out 	(136)
8, 59, 80, 97, 98, 115, 116, 290, 330, 331, 1948, 1949, 1950, 1951, 1952, 1954, 1955, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2092


;; Succ edge  59 [50.0%]  (fallthru)
;; Succ edge  60 [50.0%] 

;; Start of basic block ( 58) -> 59
;; bb 59 artificial_defs: { }
;; bb 59 artificial_uses: { u526(11){ }u527(13){ }u528(25){ }u529(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 152 153 165 166 175
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 153
;; lr  def 	 153 251 252
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 152 153 165 166 175
;; live  gen 	 153 251 252
;; live  kill	
;; rd  in  	(136)
8, 59, 80, 97, 98, 115, 116, 290, 330, 331, 1948, 1949, 1950, 1951, 1952, 1954, 1955, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2092
;; rd  gen 	(3)
1975, 2084, 2085
;; rd  kill	(4)
1975, 1976, 2084, 2085

;; Pred edge  58 [50.0%]  (fallthru)
(note 378 377 379 59 [bb 59] NOTE_INSN_BASIC_BLOCK)

(insn 379 378 380 59 arch/arm/kernel/unwind.c:250 (set (reg/f:SI 251)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -76 [0xffffffffffffffb4]))) 4 {*arm_addsi3} (nil))

(insn 380 379 381 59 arch/arm/kernel/unwind.c:250 (set (reg:SI 252)
        (mem:SI (reg/v/f:SI 153 [ vsp ]) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 381 380 382 59 arch/arm/kernel/unwind.c:250 (set (mem/s/j:SI (plus:SI (reg/f:SI 251)
                (reg:SI 139 [ ivtmp.505 ])) [0 ctrl.vrs S4 A32])
        (reg:SI 252)) 167 {*arm_movsi_insn} (nil))

(insn 382 381 383 59 arch/arm/kernel/unwind.c:250 (set (reg/v/f:SI 153 [ vsp ])
        (plus:SI (reg/v/f:SI 153 [ vsp ])
            (const_int 4 [0x4]))) 4 {*arm_addsi3} (nil))
;; End of basic block 59 -> ( 60)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 152 153 165 166 175
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 152 153 165 166 175
;; rd  out 	(135)
8, 59, 80, 97, 98, 115, 116, 290, 330, 331, 1948, 1949, 1950, 1951, 1952, 1954, 1955, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2092


;; Succ edge  60 [100.0%]  (fallthru)

;; Start of basic block ( 58 59) -> 60
;; bb 60 artificial_defs: { }
;; bb 60 artificial_uses: { u536(11){ }u537(13){ }u538(25){ }u539(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 152 153 165 166 175
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 152
;; lr  def 	 24 [cc] 139 152
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 152 153 165 166 175
;; live  gen 	 24 [cc] 139 152
;; live  kill	
;; rd  in  	(136)
8, 59, 80, 97, 98, 115, 116, 290, 330, 331, 1948, 1949, 1950, 1951, 1952, 1954, 1955, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2092
;; rd  gen 	(3)
289, 1955, 1973
;; rd  kill	(4)
1954, 1955, 1973, 1974

;; Pred edge  58 [50.0%] 
;; Pred edge  59 [100.0%]  (fallthru)
(code_label 383 382 384 60 77 "" [1 uses])

(note 384 383 385 60 [bb 60] NOTE_INSN_BASIC_BLOCK)

(insn 385 384 386 60 arch/arm/kernel/unwind.c:251 (set (reg/v:SI 152 [ mask ])
        (lshiftrt:SI (reg/v:SI 152 [ mask ])
            (const_int 1 [0x1]))) 117 {*arm_shiftsi3} (nil))

(insn 386 385 388 60 arch/arm/kernel/unwind.c:251 (set (reg:SI 139 [ ivtmp.505 ])
        (plus:SI (reg:SI 139 [ ivtmp.505 ])
            (const_int 4 [0x4]))) 4 {*arm_addsi3} (nil))

(insn 388 386 389 60 arch/arm/kernel/unwind.c:248 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 152 [ mask ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 389 388 390 60 arch/arm/kernel/unwind.c:248 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 387)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9375 [0x249f])
        (nil)))
;; End of basic block 60 -> ( 58 61)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 152 153 165 166 175
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 152 153 165 166 175
;; rd  out 	(134)
8, 59, 80, 97, 98, 115, 116, 289, 330, 331, 1948, 1949, 1950, 1951, 1952, 1955, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2092


;; Succ edge  58 [93.8%]  (dfs_back)
;; Succ edge  61 [6.2%]  (fallthru)

;; Start of basic block ( 60) -> 61
;; bb 61 artificial_defs: { }
;; bb 61 artificial_uses: { u544(11){ }u545(13){ }u546(25){ }u547(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 153 165 166 175
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153 165 166 175
;; live  gen 	
;; live  kill	
;; rd  in  	(134)
8, 59, 80, 97, 98, 115, 116, 289, 330, 331, 1948, 1949, 1950, 1951, 1952, 1955, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2092
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  60 [6.2%]  (fallthru)
(note 390 389 391 61 [bb 61] NOTE_INSN_BASIC_BLOCK)

(insn 391 390 394 61 arch/arm/kernel/unwind.c:254 (set (mem/s/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -24 [0xffffffffffffffe8])) [0 ctrl.vrs+52 S4 A32])
        (reg/v/f:SI 153 [ vsp ])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 61 -> ( 65)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 165 166 175
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 165 166 175
;; rd  out 	(134)
8, 59, 80, 97, 98, 115, 116, 289, 330, 331, 1948, 1949, 1950, 1951, 1952, 1955, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2092


;; Succ edge  65 [100.0%]  (fallthru)

;; Start of basic block ( 53) -> 62
;; bb 62 artificial_defs: { }
;; bb 62 artificial_uses: { u550(11){ }u551(13){ }u552(25){ }u553(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 165 166 175
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 165 166 175
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(134)
13, 59, 80, 97, 98, 115, 116, 295, 330, 331, 1948, 1949, 1950, 1951, 1952, 1955, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2092
;; rd  gen 	(1)
288
;; rd  kill	(0)


;; Pred edge  53 [86.3%] 
(code_label 394 391 395 62 74 "" [1 uses])

(note 395 394 396 62 [bb 62] NOTE_INSN_BASIC_BLOCK)

(insn 396 395 397 62 arch/arm/kernel/unwind.c:255 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 146 [ insn ])
            (const_int 178 [0xb2]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 397 396 398 62 arch/arm/kernel/unwind.c:255 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 410)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 4 [0x4])
        (nil)))
;; End of basic block 62 -> ( 63 64)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 165 166 175
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 165 166 175
;; rd  out 	(134)
13, 59, 80, 97, 98, 115, 116, 288, 330, 331, 1948, 1949, 1950, 1951, 1952, 1955, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2092


;; Succ edge  63 [100.0%]  (fallthru)
;; Succ edge  64 [0.0%] 

;; Start of basic block ( 62) -> 63
;; bb 63 artificial_defs: { }
;; bb 63 artificial_uses: { u556(11){ }u557(13){ }u558(25){ }u559(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 165 166 175
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 154 253 254 255 256 257
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 165 166 175
;; live  gen 	 0 [r0] 154 253 254 255 256 257
;; live  kill	 14 [lr]
;; rd  in  	(134)
13, 59, 80, 97, 98, 115, 116, 288, 330, 331, 1948, 1949, 1950, 1951, 1952, 1955, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2092
;; rd  gen 	(7)
4, 1977, 2086, 2087, 2088, 2089, 2090
;; rd  kill	(23)
117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 1977, 2086, 2087, 2088, 2089, 2090

;; Pred edge  62 [100.0%]  (fallthru)
(note 398 397 399 63 [bb 63] NOTE_INSN_BASIC_BLOCK)

(insn 399 398 400 63 arch/arm/kernel/unwind.c:256 (set (reg/f:SI 253)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -76 [0xffffffffffffffb4]))) 4 {*arm_addsi3} (nil))

(insn 400 399 401 63 arch/arm/kernel/unwind.c:256 (set (reg:SI 0 r0)
        (reg/f:SI 253)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -76 [0xffffffffffffffb4]))
        (nil)))

(call_insn 401 400 402 63 arch/arm/kernel/unwind.c:256 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("unwind_get_byte") [flags 0x3] <function_decl 0x11039c00 unwind_get_byte>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 402 401 403 63 arch/arm/kernel/unwind.c:256 (set (reg/v:SI 154 [ uleb128 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 403 402 404 63 arch/arm/kernel/unwind.c:258 (set (reg:SI 255 [ ctrl.vrs+52 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -24 [0xffffffffffffffe8])) [0 ctrl.vrs+52 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 404 403 405 63 arch/arm/kernel/unwind.c:258 (set (reg:SI 254)
        (plus:SI (reg:SI 255 [ ctrl.vrs+52 ])
            (const_int 516 [0x204]))) 4 {*arm_addsi3} (nil))

(insn 405 404 406 63 arch/arm/kernel/unwind.c:258 (set (reg:SI 256)
        (ashift:SI (reg/v:SI 154 [ uleb128 ])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (nil))

(insn 406 405 407 63 arch/arm/kernel/unwind.c:258 (set (reg:SI 257)
        (plus:SI (reg:SI 254)
            (reg:SI 256))) 4 {*arm_addsi3} (nil))

(insn 407 406 410 63 arch/arm/kernel/unwind.c:258 (set (mem/s/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -24 [0xffffffffffffffe8])) [0 ctrl.vrs+52 S4 A32])
        (reg:SI 257)) 167 {*arm_movsi_insn} (nil))
;; End of basic block 63 -> ( 65)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 165 166 175
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 165 166 175
;; rd  out 	(134)
4, 59, 80, 97, 98, 115, 116, 288, 330, 331, 1948, 1949, 1950, 1951, 1952, 1955, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2092


;; Succ edge  65 [100.0%]  (fallthru)

;; Start of basic block ( 62) -> 64
;; bb 64 artificial_defs: { }
;; bb 64 artificial_uses: { u573(11){ }u574(13){ }u575(25){ }u576(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 163 258
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146
;; live  gen 	 0 [r0] 1 [r1] 163 258
;; live  kill	 14 [lr]
;; rd  in  	(134)
13, 59, 80, 97, 98, 115, 116, 288, 330, 331, 1948, 1949, 1950, 1951, 1952, 1955, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2092
;; rd  gen 	(3)
2, 1989, 2091
;; rd  kill	(26)
117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 2091

;; Pred edge  62 [0.0%] 
(code_label 410 407 411 64 79 "" [1 uses])

(note 411 410 412 64 [bb 64] NOTE_INSN_BASIC_BLOCK)

(insn 412 411 413 64 arch/arm/kernel/unwind.c:260 (set (reg/f:SI 258)
        (symbol_ref/v/f:SI ("*.LC7") [flags 0x82] <string_cst 0x11114000>)) 167 {*arm_movsi_insn} (nil))

(insn 413 412 414 64 arch/arm/kernel/unwind.c:260 (set (reg:SI 0 r0)
        (reg/f:SI 258)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC7") [flags 0x82] <string_cst 0x11114000>)
        (nil)))

(insn 414 413 415 64 arch/arm/kernel/unwind.c:260 (set (reg:SI 1 r1)
        (reg/v:SI 146 [ insn ])) 167 {*arm_movsi_insn} (nil))

(call_insn 415 414 416 64 arch/arm/kernel/unwind.c:260 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 416 415 419 64 arch/arm/kernel/unwind.c:260 (set (reg/v:SI 163 [ urc ])
        (const_int -9 [0xfffffffffffffff7])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 64 -> ( 73)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 163
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163
;; rd  out 	(136)
2, 59, 80, 97, 98, 115, 116, 288, 330, 331, 1948, 1949, 1950, 1951, 1952, 1955, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1989, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092


;; Succ edge  73 [100.0%]  (fallthru)

;; Start of basic block ( 27 29 61 37 38 41 48 52 63) -> 65
;; bb 65 artificial_defs: { }
;; bb 65 artificial_uses: { u582(11){ }u583(13){ }u584(25){ }u585(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 165 166 175
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 165
;; lr  def 	 24 [cc] 167
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 165 166 175
;; live  gen 	 24 [cc] 167
;; live  kill	
;; rd  in  	(144)
4, 8, 12, 13, 59, 80, 97, 98, 115, 116, 288, 289, 296, 298, 300, 302, 309, 310, 330, 331, 1948, 1949, 1950, 1951, 1952, 1955, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2092
;; rd  gen 	(2)
285, 2000
;; rd  kill	(1)
2000

;; Pred edge  27 [100.0%]  (fallthru)
;; Pred edge  29 [100.0%]  (fallthru)
;; Pred edge  61 [100.0%]  (fallthru)
;; Pred edge  37 [50.0%] 
;; Pred edge  38 [100.0%]  (fallthru)
;; Pred edge  41 [100.0%]  (fallthru)
;; Pred edge  48 [100.0%]  (fallthru)
;; Pred edge  52 [100.0%]  (fallthru)
;; Pred edge  63 [100.0%]  (fallthru)
(code_label 419 416 420 65 61 "" [1 uses])

(note 420 419 421 65 [bb 65] NOTE_INSN_BASIC_BLOCK)

(insn 421 420 422 65 arch/arm/kernel/unwind.c:333 (set (reg:SI 167 [ D.15661 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -24 [0xffffffffffffffe8])) [0 ctrl.vrs+52 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 422 421 423 65 arch/arm/kernel/unwind.c:333 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 167 [ D.15661 ])
            (reg/v:SI 165 [ low ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 423 422 424 65 arch/arm/kernel/unwind.c:333 (set (pc)
        (if_then_else (ltu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 458)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 225 [0xe1])
        (nil)))
;; End of basic block 65 -> ( 72 66)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 165 166 167 175
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 165 166 167 175
;; rd  out 	(137)
4, 8, 12, 13, 59, 80, 97, 98, 115, 116, 285, 330, 331, 1948, 1949, 1950, 1951, 1952, 1955, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2092


;; Succ edge  72 [2.2%] 
;; Succ edge  66 [97.8%]  (fallthru)

;; Start of basic block ( 65) -> 66
;; bb 66 artificial_defs: { }
;; bb 66 artificial_uses: { u590(11){ }u591(13){ }u592(25){ }u593(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 165 166 167 175
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166 167
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 165 166 167 175
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(137)
4, 8, 12, 13, 59, 80, 97, 98, 115, 116, 285, 330, 331, 1948, 1949, 1950, 1951, 1952, 1955, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2092
;; rd  gen 	(1)
284
;; rd  kill	(0)


;; Pred edge  65 [97.8%]  (fallthru)
(note 424 423 425 66 [bb 66] NOTE_INSN_BASIC_BLOCK)

(insn 425 424 426 66 arch/arm/kernel/unwind.c:333 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 167 [ D.15661 ])
            (reg/v:SI 166 [ high ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 426 425 427 66 arch/arm/kernel/unwind.c:333 discrim 1 (set (pc)
        (if_then_else (geu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 458)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 1400 [0x578])
        (nil)))
;; End of basic block 66 -> ( 72 67)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 165 166 175
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 165 166 175
;; rd  out 	(137)
4, 8, 12, 13, 59, 80, 97, 98, 115, 116, 284, 330, 331, 1948, 1949, 1950, 1951, 1952, 1955, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2092


;; Succ edge  72 [14.0%] 
;; Succ edge  67 [86.0%]  (fallthru,dfs_back)

;; Start of basic block ( 24 66 22) -> 67
;; bb 67 artificial_defs: { }
;; bb 67 artificial_uses: { u597(11){ }u598(13){ }u599(25){ }u600(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 165 166 175
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 259
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 165 166 175
;; live  gen 	 24 [cc] 259
;; live  kill	
;; rd  in  	(142)
4, 8, 12, 13, 23, 25, 27, 59, 80, 97, 98, 115, 116, 284, 313, 314, 330, 331, 1948, 1949, 1950, 1951, 1952, 1955, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2092
;; rd  gen 	(2)
283, 2092
;; rd  kill	(1)
2092

;; Pred edge  24 [100.0%]  (fallthru)
;; Pred edge  66 [86.0%]  (fallthru,dfs_back)
;; Pred edge  22 [100.0%]  (fallthru)
(code_label 427 426 428 67 58 "" [0 uses])

(note 428 427 430 67 [bb 67] NOTE_INSN_BASIC_BLOCK)

(insn 430 428 431 67 arch/arm/kernel/unwind.c:329 discrim 1 (set (reg:SI 259 [ ctrl.entries ])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0 ctrl.entries+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 431 430 432 67 arch/arm/kernel/unwind.c:329 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 259 [ ctrl.entries ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 432 431 433 67 arch/arm/kernel/unwind.c:329 discrim 1 (set (pc)
        (if_then_else (gt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 429)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9775 [0x262f])
        (nil)))
;; End of basic block 67 -> ( 26 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 165 166 175
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 165 166 175
;; rd  out 	(140)
4, 8, 12, 13, 23, 25, 27, 59, 80, 97, 98, 115, 116, 283, 330, 331, 1948, 1949, 1950, 1951, 1952, 1955, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2092


;; Succ edge  26 [97.8%] 
;; Succ edge  68 [2.2%]  (fallthru)

;; Start of basic block ( 67) -> 68
;; bb 68 artificial_defs: { }
;; bb 68 artificial_uses: { u604(11){ }u605(13){ }u606(25){ }u607(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 175
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 260
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 175
;; live  gen 	 24 [cc] 260
;; live  kill	
;; rd  in  	(140)
4, 8, 12, 13, 23, 25, 27, 59, 80, 97, 98, 115, 116, 283, 330, 331, 1948, 1949, 1950, 1951, 1952, 1955, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2092
;; rd  gen 	(2)
282, 2093
;; rd  kill	(1)
2093

;; Pred edge  67 [2.2%]  (fallthru)
(note 433 432 434 68 [bb 68] NOTE_INSN_BASIC_BLOCK)

(insn 434 433 435 68 arch/arm/kernel/unwind.c:337 (set (reg:SI 260 [ ctrl.vrs+60 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -16 [0xfffffffffffffff0])) [0 ctrl.vrs+60 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 435 434 436 68 arch/arm/kernel/unwind.c:337 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 260 [ ctrl.vrs+60 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 436 435 437 68 arch/arm/kernel/unwind.c:337 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 440)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 68 -> ( 69 70)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 175
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 175
;; rd  out 	(141)
4, 8, 12, 13, 23, 25, 27, 59, 80, 97, 98, 115, 116, 282, 330, 331, 1948, 1949, 1950, 1951, 1952, 1955, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2092, 2093


;; Succ edge  69 [50.0%]  (fallthru)
;; Succ edge  70 [50.0%] 

;; Start of basic block ( 68) -> 69
;; bb 69 artificial_defs: { }
;; bb 69 artificial_uses: { u611(11){ }u612(13){ }u613(25){ }u614(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 175
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 261
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 175
;; live  gen 	 261
;; live  kill	
;; rd  in  	(141)
4, 8, 12, 13, 23, 25, 27, 59, 80, 97, 98, 115, 116, 282, 330, 331, 1948, 1949, 1950, 1951, 1952, 1955, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2092, 2093
;; rd  gen 	(1)
2094
;; rd  kill	(1)
2094

;; Pred edge  68 [50.0%]  (fallthru)
(note 437 436 438 69 [bb 69] NOTE_INSN_BASIC_BLOCK)

(insn 438 437 439 69 arch/arm/kernel/unwind.c:338 (set (reg:SI 261 [ ctrl.vrs+56 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -20 [0xffffffffffffffec])) [0 ctrl.vrs+56 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 439 438 440 69 arch/arm/kernel/unwind.c:338 (set (mem/s/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -16 [0xfffffffffffffff0])) [0 ctrl.vrs+60 S4 A32])
        (reg:SI 261 [ ctrl.vrs+56 ])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 69 -> ( 70)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 175
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 175
;; rd  out 	(142)
4, 8, 12, 13, 23, 25, 27, 59, 80, 97, 98, 115, 116, 282, 330, 331, 1948, 1949, 1950, 1951, 1952, 1955, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2092, 2093, 2094


;; Succ edge  70 [100.0%]  (fallthru)

;; Start of basic block ( 68 69) -> 70
;; bb 70 artificial_defs: { }
;; bb 70 artificial_uses: { u618(11){ }u619(13){ }u620(25){ }u621(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 175
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 175
;; lr  def 	 24 [cc] 262 263
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 175
;; live  gen 	 24 [cc] 262 263
;; live  kill	
;; rd  in  	(142)
4, 8, 12, 13, 23, 25, 27, 59, 80, 97, 98, 115, 116, 282, 330, 331, 1948, 1949, 1950, 1951, 1952, 1955, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2092, 2093, 2094
;; rd  gen 	(3)
281, 2095, 2096
;; rd  kill	(2)
2095, 2096

;; Pred edge  68 [50.0%] 
;; Pred edge  69 [100.0%]  (fallthru)
(code_label 440 439 441 70 81 "" [1 uses])

(note 441 440 442 70 [bb 70] NOTE_INSN_BASIC_BLOCK)

(insn 442 441 443 70 arch/arm/kernel/unwind.c:341 (set (reg:SI 262 [ <variable>.pc ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 175 [ frame ])
                (const_int 12 [0xc])) [0 <variable>.pc+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 443 442 444 70 arch/arm/kernel/unwind.c:341 (set (reg:SI 263 [ ctrl.vrs+60 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -16 [0xfffffffffffffff0])) [0 ctrl.vrs+60 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 444 443 445 70 arch/arm/kernel/unwind.c:341 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 262 [ <variable>.pc ])
            (reg:SI 263 [ ctrl.vrs+60 ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 445 444 446 70 arch/arm/kernel/unwind.c:341 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 458)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 1991 [0x7c7])
        (nil)))
;; End of basic block 70 -> ( 72 71)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 175 263
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 175 263
;; rd  out 	(144)
4, 8, 12, 13, 23, 25, 27, 59, 80, 97, 98, 115, 116, 281, 330, 331, 1948, 1949, 1950, 1951, 1952, 1955, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2092, 2093, 2094, 2095, 2096


;; Succ edge  72 [19.9%] 
;; Succ edge  71 [80.1%]  (fallthru)

;; Start of basic block ( 70) -> 71
;; bb 71 artificial_defs: { }
;; bb 71 artificial_uses: { u627(11){ }u628(13){ }u629(25){ }u630(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 175 263
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 175 263
;; lr  def 	 163 264 265 266 267
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 175 263
;; live  gen 	 163 264 265 266 267
;; live  kill	
;; rd  in  	(144)
4, 8, 12, 13, 23, 25, 27, 59, 80, 97, 98, 115, 116, 281, 330, 331, 1948, 1949, 1950, 1951, 1952, 1955, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2092, 2093, 2094, 2095, 2096
;; rd  gen 	(5)
1988, 2097, 2098, 2099, 2100
;; rd  kill	(12)
1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 2097, 2098, 2099, 2100

;; Pred edge  70 [80.1%]  (fallthru)
(note 446 445 447 71 [bb 71] NOTE_INSN_BASIC_BLOCK)

(insn 447 446 448 71 arch/arm/kernel/unwind.c:344 (set (reg:SI 264 [ ctrl.vrs+44 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -32 [0xffffffffffffffe0])) [0 ctrl.vrs+44 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 448 447 449 71 arch/arm/kernel/unwind.c:344 (set (mem/s/j:SI (reg/v/f:SI 175 [ frame ]) [0 <variable>.fp+0 S4 A32])
        (reg:SI 264 [ ctrl.vrs+44 ])) 167 {*arm_movsi_insn} (nil))

(insn 449 448 450 71 arch/arm/kernel/unwind.c:345 (set (reg:SI 265 [ ctrl.vrs+52 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -24 [0xffffffffffffffe8])) [0 ctrl.vrs+52 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 450 449 451 71 arch/arm/kernel/unwind.c:345 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 175 [ frame ])
                (const_int 4 [0x4])) [0 <variable>.sp+0 S4 A32])
        (reg:SI 265 [ ctrl.vrs+52 ])) 167 {*arm_movsi_insn} (nil))

(insn 451 450 452 71 arch/arm/kernel/unwind.c:346 (set (reg:SI 266 [ ctrl.vrs+56 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -20 [0xffffffffffffffec])) [0 ctrl.vrs+56 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 452 451 454 71 arch/arm/kernel/unwind.c:346 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 175 [ frame ])
                (const_int 8 [0x8])) [0 <variable>.lr+0 S4 A32])
        (reg:SI 266 [ ctrl.vrs+56 ])) 167 {*arm_movsi_insn} (nil))

(insn 454 452 455 71 arch/arm/kernel/unwind.c:347 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 175 [ frame ])
                (const_int 12 [0xc])) [0 <variable>.pc+0 S4 A32])
        (reg:SI 263 [ ctrl.vrs+60 ])) 167 {*arm_movsi_insn} (nil))

(insn 455 454 458 71 arch/arm/kernel/unwind.c:349 (set (reg/v:SI 163 [ urc ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 71 -> ( 73)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 163
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163
;; rd  out 	(149)
4, 8, 12, 13, 23, 25, 27, 59, 80, 97, 98, 115, 116, 281, 330, 331, 1948, 1949, 1950, 1951, 1952, 1955, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1988, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100


;; Succ edge  73 [100.0%]  (fallthru)

;; Start of basic block ( 2 65 15 70 66) -> 72
;; bb 72 artificial_defs: { }
;; bb 72 artificial_uses: { u643(11){ }u644(13){ }u645(25){ }u646(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 163
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 163
;; live  kill	
;; rd  in  	(149)
4, 8, 12, 13, 23, 25, 27, 31, 59, 80, 97, 98, 115, 116, 281, 284, 285, 317, 328, 330, 331, 1948, 1949, 1950, 1951, 1952, 1955, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2092, 2093, 2094, 2095, 2096
;; rd  gen 	(1)
1987
;; rd  kill	(8)
1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994

;; Pred edge  2 [61.0%] 
;; Pred edge  65 [2.2%] 
;; Pred edge  15 [19.9%] 
;; Pred edge  70 [19.9%] 
;; Pred edge  66 [14.0%] 
(code_label 458 455 459 72 45 "" [5 uses])

(note 459 458 460 72 [bb 72] NOTE_INSN_BASIC_BLOCK)

(insn 460 459 461 72 arch/arm/kernel/unwind.c:288 (set (reg/v:SI 163 [ urc ])
        (const_int -9 [0xfffffffffffffff7])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 72 -> ( 73)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 163
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163
;; rd  out 	(150)
4, 8, 12, 13, 23, 25, 27, 31, 59, 80, 97, 98, 115, 116, 281, 284, 285, 317, 328, 330, 331, 1948, 1949, 1950, 1951, 1952, 1955, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2092, 2093, 2094, 2095, 2096


;; Succ edge  73 [100.0%]  (fallthru)

;; Start of basic block ( 72 14 32 64 20 71 25 56) -> 73
;; bb 73 artificial_defs: { }
;; bb 73 artificial_uses: { u647(11){ }u648(13){ }u649(25){ }u650(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 163
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163
;; lr  def 	 0 [r0] 174
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163
;; live  gen 	 0 [r0] 174
;; live  kill	
;; rd  in  	(183)
2, 4, 6, 8, 10, 12, 13, 15, 17, 19, 23, 25, 27, 31, 59, 80, 97, 98, 115, 116, 281, 284, 285, 288, 292, 293, 306, 313, 316, 317, 319, 328, 330, 331, 1948, 1949, 1950, 1951, 1952, 1955, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100
;; rd  gen 	(2)
0, 2007
;; rd  kill	(1)
2007

;; Pred edge  72 [100.0%]  (fallthru)
;; Pred edge  14 [100.0%]  (fallthru)
;; Pred edge  32 [100.0%]  (fallthru)
;; Pred edge  64 [100.0%]  (fallthru)
;; Pred edge  20 [100.0%]  (fallthru)
;; Pred edge  71 [100.0%]  (fallthru)
;; Pred edge  25 [100.0%]  (fallthru)
;; Pred edge  56 [100.0%]  (fallthru)
(code_label 461 460 462 73 53 "" [0 uses])

(note 462 461 467 73 [bb 73] NOTE_INSN_BASIC_BLOCK)

(insn 467 462 473 73 arch/arm/kernel/unwind.c:350 (set (reg/i:SI 0 r0)
        (reg/v:SI 163 [ urc ])) 167 {*arm_movsi_insn} (nil))

(insn 473 467 0 73 arch/arm/kernel/unwind.c:350 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 73 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(171)
0, 59, 80, 97, 98, 115, 116, 281, 284, 285, 288, 292, 293, 306, 313, 316, 317, 319, 328, 330, 331, 1948, 1949, 1950, 1951, 1952, 1955, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
deleting insn with uid = 64.
deleting insn with uid = 68.
deleting insn with uid = 70.
deleting insn with uid = 77.
deleting insn with uid = 80.
deleting insn with uid = 119.
deleting insn with uid = 171.
deleting insn with uid = 227.
deleting insn with uid = 306.
deleting insn with uid = 453.
deleting insn with uid = 463.
ending the processing of deferred insns

;; Function unwind_backtrace (unwind_backtrace)[0:859]

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
;;
;; Loop 1
;;  header 12, latch 13
;;  depth 1, outer 0
;;  nodes: 12 13
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 9 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 12 }
;; 9 succs { 10 11 }
;; 10 succs { 12 }
;; 11 succs { 12 }
;; 12 succs { 14 13 }
;; 13 succs { 12 }
;; 14 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 15 n_edges 19 count 19 (  1.3)
df_worklist_dataflow_doublequeue:n_basic_blocks 15 n_edges 19 count 29 (  1.9)
df_worklist_dataflow_doublequeue:n_basic_blocks 15 n_edges 19 count 29 (  1.9)

In insn 58, replacing
 (reg/f:SI 153)
 with (symbol_ref:SI ("unwind_backtrace") [flags 0x3] <function_decl 0x11039480 unwind_backtrace>)
Changes to insn 58 not recognized
 Setting REG_EQUAL note


try_optimize_cfg iteration 1

deferring deletion of insn with uid = 69.
deferring deletion of insn with uid = 55.
deferring deletion of insn with uid = 53.
deferring deletion of insn with uid = 51.
deferring deletion of insn with uid = 44.
deferring deletion of insn with uid = 10.
Deleted 6 trivially dead insns

Number of successful forward propagations: 0



unwind_backtrace

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 11[fp] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={7d,6u} r1={5d,2u} r2={5d,1u} r3={4d} r11={1d,16u} r12={4d} r13={1d,23u,2d} r14={4d,2u} r15={3d} r16={3d} r17={3d} r18={3d} r19={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={8d,5u} r25={1d,30u,1d} r26={1d,13u} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r81={3d} r82={3d} r83={3d} r84={3d} r85={3d} r86={3d} r87={3d} r88={3d} r89={3d} r90={3d} r91={3d} r92={3d} r93={3d} r94={3d} r95={3d} r96={3d} r97={3d} r98={3d} r99={3d} r100={3d} r101={3d} r102={3d} r103={3d} r104={3d} r105={3d} r106={3d} r107={3d} r108={3d} r109={3d} r110={3d} r111={3d} r112={3d} r113={3d} r114={3d} r115={3d} r116={3d} r117={3d} r118={3d} r119={3d} r120={3d} r121={3d} r122={3d} r123={3d} r124={3d} r125={3d} r126={3d} r127={3d} r133={1d} r134={1d} r135={1d,1u} r136={1d,1u} r137={1d} r138={1d} r139={1d} r140={1d,1u} r141={2d,1u} r142={1d,9u} r143={2d,5u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,2u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} 
;;    total ref usage 543{404d,136u,3e} in 57{54 regular + 3 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370
0[0,7] 1[7,5] 2[12,5] 3[17,4] 11[21,1] 12[22,4] 13[26,1] 14[27,4] 15[31,3] 16[34,3] 17[37,3] 18[40,3] 19[43,3] 20[46,3] 21[49,3] 22[52,3] 23[55,3] 24[58,8] 25[66,1] 26[67,1] 27[68,3] 28[71,3] 29[74,3] 30[77,3] 31[80,3] 32[83,3] 33[86,3] 34[89,3] 35[92,3] 36[95,3] 37[98,3] 38[101,3] 39[104,3] 40[107,3] 41[110,3] 42[113,3] 43[116,3] 44[119,3] 45[122,3] 46[125,3] 47[128,3] 48[131,3] 49[134,3] 50[137,3] 51[140,3] 52[143,3] 53[146,3] 54[149,3] 55[152,3] 56[155,3] 57[158,3] 58[161,3] 59[164,3] 60[167,3] 61[170,3] 62[173,3] 63[176,3] 64[179,3] 65[182,3] 66[185,3] 67[188,3] 68[191,3] 69[194,3] 70[197,3] 71[200,3] 72[203,3] 73[206,3] 74[209,3] 75[212,3] 76[215,3] 77[218,3] 78[221,3] 79[224,3] 80[227,3] 81[230,3] 82[233,3] 83[236,3] 84[239,3] 85[242,3] 86[245,3] 87[248,3] 88[251,3] 89[254,3] 90[257,3] 91[260,3] 92[263,3] 93[266,3] 94[269,3] 95[272,3] 96[275,3] 97[278,3] 98[281,3] 99[284,3] 100[287,3] 101[290,3] 102[293,3] 103[296,3] 104[299,3] 105[302,3] 106[305,3] 107[308,3] 108[311,3] 109[314,3] 110[317,3] 111[320,3] 112[323,3] 113[326,3] 114[329,3] 115[332,3] 116[335,3] 117[338,3] 118[341,3] 119[344,3] 120[347,3] 121[350,3] 122[353,3] 123[356,3] 124[359,3] 125[362,3] 126[365,3] 127[368,3] 133[371,1] 134[372,1] 135[373,1] 136[374,1] 137[375,1] 138[376,1] 139[377,1] 140[378,1] 141[379,2] 142[381,1] 143[382,2] 144[384,1] 145[385,1] 146[386,1] 147[387,1] 148[388,1] 149[389,1] 150[390,1] 151[391,1] 152[392,1] 153[393,1] 154[394,1] 155[395,1] 156[396,1] 157[397,1] 158[398,1] 159[399,1] 160[400,1] 161[401,1] 162[402,1] 163[403,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 142 143 152
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 142 143 152
;; live  kill	
;; rd  in  	(10)
6, 11, 16, 20, 21, 25, 26, 30, 66, 67
;; rd  gen 	(4)
65, 381, 383, 392
;; rd  kill	(12)
58, 59, 60, 61, 62, 63, 64, 65, 381, 382, 383, 392

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 0 101 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 101 5 2 2 (set (reg:SI 152)
        (reg:SI 14 lr)) 167 {*arm_movsi_insn} (nil))

(insn 2 101 3 2 arch/arm/kernel/unwind.c:353 (set (reg/v/f:SI 142 [ regs ])
        (reg:SI 0 r0 [ regs ])) 167 {*arm_movsi_insn} (nil))

(insn 3 2 4 2 arch/arm/kernel/unwind.c:353 (set (reg/v/f:SI 143 [ tsk ])
        (reg:SI 1 r1 [ tsk ])) 167 {*arm_movsi_insn} (nil))

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 8 2 arch/arm/kernel/unwind.c:359 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 143 [ tsk ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 8 7 9 2 arch/arm/kernel/unwind.c:359 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 14)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 8500 [0x2134])
        (nil)))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 152
;; rd  out 	(14)
6, 11, 16, 20, 21, 25, 26, 30, 65, 66, 67, 381, 383, 392


;; Succ edge  3 [15.0%]  (fallthru)
;; Succ edge  4 [85.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u9(11){ }u10(13){ }u11(25){ }u12(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134 143 144 145
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 152
;; live  gen 	 134 143 144 145
;; live  kill	
;; rd  in  	(14)
6, 11, 16, 20, 21, 25, 26, 30, 65, 66, 67, 381, 383, 392
;; rd  gen 	(4)
372, 382, 384, 385
;; rd  kill	(5)
372, 382, 383, 384, 385

;; Pred edge  2 [15.0%]  (fallthru)
(note 9 8 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 11 9 12 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/current.h:10 (set (reg:SI 145)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 12 11 13 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/current.h:10 (set (reg:SI 144)
        (and:SI (reg:SI 145)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
            (const_int -8192 [0xffffffffffffe000]))
        (nil)))

(insn 13 12 14 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/current.h:10 (set (reg/v/f:SI 143 [ tsk ])
        (mem/s/f/j:SI (plus:SI (reg:SI 144)
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 152
;; rd  out 	(17)
6, 11, 16, 20, 21, 25, 26, 30, 65, 66, 67, 372, 381, 382, 384, 385, 392


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u18(11){ }u19(13){ }u20(25){ }u21(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 152
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(18)
6, 11, 16, 20, 21, 25, 26, 30, 65, 66, 67, 372, 381, 382, 383, 384, 385, 392
;; rd  gen 	(1)
64
;; rd  kill	(8)
58, 59, 60, 61, 62, 63, 64, 65

;; Pred edge  2 [85.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 14 13 15 4 94 "" [1 uses])

(note 15 14 16 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 16 15 17 4 arch/arm/kernel/unwind.c:362 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 142 [ regs ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 17 16 18 4 arch/arm/kernel/unwind.c:362 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 42)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 3017 [0xbc9])
        (nil)))
;; End of basic block 4 -> ( 5 9)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 152
;; rd  out 	(18)
6, 11, 16, 20, 21, 25, 26, 30, 64, 66, 67, 372, 381, 382, 383, 384, 385, 392


;; Succ edge  5 [69.8%]  (fallthru)
;; Succ edge  9 [30.2%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u24(11){ }u25(13){ }u26(25){ }u27(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 140 146 147 148
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; live  gen 	 0 [r0] 24 [cc] 140 146 147 148
;; live  kill	 14 [lr]
;; rd  in  	(18)
6, 11, 16, 20, 21, 25, 26, 30, 64, 66, 67, 372, 381, 382, 383, 384, 385, 392
;; rd  gen 	(6)
4, 62, 378, 386, 387, 388
;; rd  kill	(23)
0, 1, 2, 3, 4, 5, 6, 27, 28, 29, 30, 58, 59, 60, 61, 62, 63, 64, 65, 378, 386, 387, 388

;; Pred edge  4 [69.8%]  (fallthru)
(note 18 17 19 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 19 18 20 5 arch/arm/kernel/unwind.c:363 (set (reg:SI 146 [ <variable>.uregs+44 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 142 [ regs ])
                (const_int 44 [0x2c])) [0 <variable>.uregs+44 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 20 19 21 5 arch/arm/kernel/unwind.c:363 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -16 [0xfffffffffffffff0])) [0 frame.fp+0 S4 A64])
        (reg:SI 146 [ <variable>.uregs+44 ])) 167 {*arm_movsi_insn} (nil))

(insn 21 20 22 5 arch/arm/kernel/unwind.c:364 (set (reg:SI 147 [ <variable>.uregs+52 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 142 [ regs ])
                (const_int 52 [0x34])) [0 <variable>.uregs+52 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 22 21 23 5 arch/arm/kernel/unwind.c:364 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -12 [0xfffffffffffffff4])) [0 frame.sp+0 S4 A32])
        (reg:SI 147 [ <variable>.uregs+52 ])) 167 {*arm_movsi_insn} (nil))

(insn 23 22 24 5 arch/arm/kernel/unwind.c:365 (set (reg:SI 148 [ <variable>.uregs+56 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 142 [ regs ])
                (const_int 56 [0x38])) [0 <variable>.uregs+56 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 24 23 25 5 arch/arm/kernel/unwind.c:365 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0 frame.lr+0 S4 A64])
        (reg:SI 148 [ <variable>.uregs+56 ])) 167 {*arm_movsi_insn} (nil))

(insn 25 24 26 5 arch/arm/kernel/unwind.c:367 (set (reg:SI 0 r0)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 142 [ regs ])
                (const_int 60 [0x3c])) [0 <variable>.uregs+60 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn 26 25 27 5 arch/arm/kernel/unwind.c:367 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("kernel_text_address") [flags 0x41] <function_decl 0x10a58300 kernel_text_address>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 27 26 28 5 arch/arm/kernel/unwind.c:367 (set (reg:SI 140 [ D.15691 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 28 27 29 5 arch/arm/kernel/unwind.c:367 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 140 [ D.15691 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 29 28 30 5 arch/arm/kernel/unwind.c:367 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 34)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 5 -> ( 6 7)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; rd  out 	(21)
4, 11, 16, 20, 21, 25, 26, 62, 66, 67, 372, 378, 381, 382, 383, 384, 385, 386, 387, 388, 392


;; Succ edge  6 [50.0%]  (fallthru)
;; Succ edge  7 [50.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u43(11){ }u44(13){ }u45(25){ }u46(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; live  gen 	 141
;; live  kill	
;; rd  in  	(21)
4, 11, 16, 20, 21, 25, 26, 62, 66, 67, 372, 378, 381, 382, 383, 384, 385, 386, 387, 388, 392
;; rd  gen 	(1)
380
;; rd  kill	(2)
379, 380

;; Pred edge  5 [50.0%]  (fallthru)
(note 30 29 31 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 31 30 34 6 arch/arm/kernel/unwind.c:367 discrim 1 (set (reg:SI 141 [ iftmp.237 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 142 [ regs ])
                (const_int 60 [0x3c])) [0 <variable>.uregs+60 S4 A32])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 6 -> ( 8)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; rd  out 	(22)
4, 11, 16, 20, 21, 25, 26, 62, 66, 67, 372, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 392


;; Succ edge  8 [100.0%]  (fallthru)

;; Start of basic block ( 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u48(11){ }u49(13){ }u50(25){ }u51(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; live  gen 	 141
;; live  kill	
;; rd  in  	(21)
4, 11, 16, 20, 21, 25, 26, 62, 66, 67, 372, 378, 381, 382, 383, 384, 385, 386, 387, 388, 392
;; rd  gen 	(1)
379
;; rd  kill	(2)
379, 380

;; Pred edge  5 [50.0%] 
(code_label 34 31 35 7 96 "" [1 uses])

(note 35 34 36 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 36 35 37 7 arch/arm/kernel/unwind.c:367 discrim 2 (set (reg:SI 141 [ iftmp.237 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 142 [ regs ])
                (const_int 56 [0x38])) [0 <variable>.uregs+56 S4 A32])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 7 -> ( 8)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; rd  out 	(22)
4, 11, 16, 20, 21, 25, 26, 62, 66, 67, 372, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 392


;; Succ edge  8 [100.0%]  (fallthru)

;; Start of basic block ( 6 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u53(11){ }u54(13){ }u55(25){ }u56(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; live  gen 	
;; live  kill	
;; rd  in  	(23)
4, 11, 16, 20, 21, 25, 26, 62, 66, 67, 372, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 392
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  6 [100.0%]  (fallthru)
;; Pred edge  7 [100.0%]  (fallthru)
(code_label 37 36 38 8 97 "" [0 uses])

(note 38 37 39 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 39 38 42 8 arch/arm/kernel/unwind.c:367 discrim 3 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 frame.pc+0 S4 A32])
        (reg:SI 141 [ iftmp.237 ])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 8 -> ( 12)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(23)
4, 11, 16, 20, 21, 25, 26, 62, 66, 67, 372, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 392


;; Succ edge  12 [100.0%]  (fallthru)

;; Start of basic block ( 4) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u59(11){ }u60(13){ }u61(25){ }u62(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 24 [cc] 133 149 150 151
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 152
;; live  gen 	 24 [cc] 133 149 150 151
;; live  kill	
;; rd  in  	(18)
6, 11, 16, 20, 21, 25, 26, 30, 64, 66, 67, 372, 381, 382, 383, 384, 385, 392
;; rd  gen 	(5)
61, 371, 389, 390, 391
;; rd  kill	(12)
58, 59, 60, 61, 62, 63, 64, 65, 371, 389, 390, 391

;; Pred edge  4 [30.2%] 
(code_label 42 39 43 9 95 "" [1 uses])

(note 43 42 45 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 45 43 46 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 150)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 46 45 47 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 149)
        (and:SI (reg:SI 150)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
            (const_int -8192 [0xffffffffffffe000]))
        (nil)))

(insn 47 46 48 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 151 [ <variable>.task ])
        (mem/s/f/j:SI (plus:SI (reg:SI 149)
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 48 47 49 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 143 [ tsk ])
            (reg/f:SI 151 [ <variable>.task ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 49 48 50 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 61)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9328 [0x2470])
        (nil)))
;; End of basic block 9 -> ( 10 11)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 152
;; rd  out 	(22)
6, 11, 16, 20, 21, 25, 26, 30, 61, 66, 67, 371, 372, 381, 382, 383, 384, 385, 389, 390, 391, 392


;; Succ edge  10 [6.7%]  (fallthru)
;; Succ edge  11 [93.3%] 

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u71(11){ }u72(13){ }u73(25){ }u74(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152
;; lr  def 	 137 138 139 153
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152
;; live  gen 	 137 138 139 153
;; live  kill	
;; rd  in  	(22)
6, 11, 16, 20, 21, 25, 26, 30, 61, 66, 67, 371, 372, 381, 382, 383, 384, 385, 389, 390, 391, 392
;; rd  gen 	(4)
375, 376, 377, 393
;; rd  kill	(4)
375, 376, 377, 393

;; Pred edge  9 [6.7%]  (fallthru)
(note 50 49 52 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 52 50 54 10 arch/arm/kernel/unwind.c:370 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -16 [0xfffffffffffffff0])) [0 frame.fp+0 S4 A64])
        (reg/f:SI 11 fp)) 167 {*arm_movsi_insn} (nil))

(insn 54 52 56 10 arch/arm/kernel/unwind.c:371 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -12 [0xfffffffffffffff4])) [0 frame.sp+0 S4 A32])
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn 56 54 57 10 arch/arm/kernel/unwind.c:372 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0 frame.lr+0 S4 A64])
        (reg:SI 152)) 167 {*arm_movsi_insn} (nil))

(insn 57 56 58 10 arch/arm/kernel/unwind.c:373 (set (reg/f:SI 153)
        (symbol_ref:SI ("unwind_backtrace") [flags 0x3] <function_decl 0x11039480 unwind_backtrace>)) 167 {*arm_movsi_insn} (nil))

(insn 58 57 61 10 arch/arm/kernel/unwind.c:373 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 frame.pc+0 S4 A32])
        (reg/f:SI 153)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("unwind_backtrace") [flags 0x3] <function_decl 0x11039480 unwind_backtrace>)
        (nil)))
;; End of basic block 10 -> ( 12)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(26)
6, 11, 16, 20, 21, 25, 26, 30, 61, 66, 67, 371, 372, 375, 376, 377, 381, 382, 383, 384, 385, 389, 390, 391, 392, 393


;; Succ edge  12 [100.0%]  (fallthru)

;; Start of basic block ( 9) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u86(11){ }u87(13){ }u88(25){ }u89(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143
;; lr  def 	 154 155 156 157 158 159 160
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143
;; live  gen 	 154 155 156 157 158 159 160
;; live  kill	
;; rd  in  	(22)
6, 11, 16, 20, 21, 25, 26, 30, 61, 66, 67, 371, 372, 381, 382, 383, 384, 385, 389, 390, 391, 392
;; rd  gen 	(7)
394, 395, 396, 397, 398, 399, 400
;; rd  kill	(7)
394, 395, 396, 397, 398, 399, 400

;; Pred edge  9 [93.3%] 
(code_label 61 58 62 11 99 "" [1 uses])

(note 62 61 63 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 63 62 64 11 arch/arm/kernel/unwind.c:376 (set (reg/f:SI 154 [ <variable>.stack ])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 143 [ tsk ])
                (const_int 4 [0x4])) [0 <variable>.stack+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 64 63 65 11 arch/arm/kernel/unwind.c:376 (set (reg:SI 155 [ <variable>.cpu_context.fp ])
        (mem/s/j:SI (plus:SI (reg/f:SI 154 [ <variable>.stack ])
                (const_int 56 [0x38])) [0 <variable>.cpu_context.fp+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 65 64 66 11 arch/arm/kernel/unwind.c:376 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -16 [0xfffffffffffffff0])) [0 frame.fp+0 S4 A64])
        (reg:SI 155 [ <variable>.cpu_context.fp ])) 167 {*arm_movsi_insn} (nil))

(insn 66 65 67 11 arch/arm/kernel/unwind.c:377 (set (reg/f:SI 156 [ <variable>.stack ])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 143 [ tsk ])
                (const_int 4 [0x4])) [0 <variable>.stack+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 67 66 68 11 arch/arm/kernel/unwind.c:377 (set (reg:SI 157 [ <variable>.cpu_context.sp ])
        (mem/s/j:SI (plus:SI (reg/f:SI 156 [ <variable>.stack ])
                (const_int 60 [0x3c])) [0 <variable>.cpu_context.sp+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 68 67 70 11 arch/arm/kernel/unwind.c:377 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -12 [0xfffffffffffffff4])) [0 frame.sp+0 S4 A32])
        (reg:SI 157 [ <variable>.cpu_context.sp ])) 167 {*arm_movsi_insn} (nil))

(insn 70 68 71 11 arch/arm/kernel/unwind.c:382 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0 frame.lr+0 S4 A64])
        (reg/v/f:SI 142 [ regs ])) 167 {*arm_movsi_insn} (nil))

(insn 71 70 72 11 arch/arm/kernel/unwind.c:383 (set (reg/f:SI 159 [ <variable>.stack ])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 143 [ tsk ])
                (const_int 4 [0x4])) [0 <variable>.stack+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 72 71 73 11 arch/arm/kernel/unwind.c:383 (set (reg:SI 160 [ <variable>.cpu_context.pc ])
        (mem/s/j:SI (plus:SI (reg/f:SI 159 [ <variable>.stack ])
                (const_int 64 [0x40])) [0 <variable>.cpu_context.pc+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 73 72 74 11 arch/arm/kernel/unwind.c:383 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 frame.pc+0 S4 A32])
        (reg:SI 160 [ <variable>.cpu_context.pc ])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 11 -> ( 12)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(29)
6, 11, 16, 20, 21, 25, 26, 30, 61, 66, 67, 371, 372, 381, 382, 383, 384, 385, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400


;; Succ edge  12 [100.0%]  (fallthru)

;; Start of basic block ( 11 13 10 8) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u105(11){ }u106(13){ }u107(25){ }u108(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 135 136 161
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 24 [cc] 135 136 161
;; live  kill	 14 [lr]
;; rd  in  	(48)
2, 4, 6, 11, 16, 20, 21, 25, 26, 30, 59, 61, 62, 66, 67, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403
;; rd  gen 	(5)
2, 59, 373, 374, 401
;; rd  kill	(22)
0, 1, 2, 3, 4, 5, 6, 27, 28, 29, 30, 58, 59, 60, 61, 62, 63, 64, 65, 373, 374, 401

;; Pred edge  11 [100.0%]  (fallthru)
;; Pred edge  13 [100.0%]  (fallthru)
;; Pred edge  10 [100.0%]  (fallthru)
;; Pred edge  8 [100.0%]  (fallthru)
(code_label 74 73 75 12 98 "" [0 uses])

(note 75 74 76 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 76 75 77 12 arch/arm/kernel/unwind.c:388 (set (reg/v:SI 135 [ where ])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 frame.pc+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 77 76 78 12 arch/arm/kernel/unwind.c:390 (set (reg/f:SI 161)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -16 [0xfffffffffffffff0]))) 4 {*arm_addsi3} (nil))

(insn 78 77 79 12 arch/arm/kernel/unwind.c:390 (set (reg:SI 0 r0)
        (reg/f:SI 161)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -16 [0xfffffffffffffff0]))
        (nil)))

(call_insn 79 78 80 12 arch/arm/kernel/unwind.c:390 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("unwind_frame") [flags 0x3] <function_decl 0x11024e00 unwind_frame>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 80 79 81 12 arch/arm/kernel/unwind.c:390 (set (reg/v:SI 136 [ urc ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 81 80 82 12 arch/arm/kernel/unwind.c:391 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 136 [ urc ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 82 81 83 12 arch/arm/kernel/unwind.c:391 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 97)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 900 [0x384])
        (nil)))
;; End of basic block 12 -> ( 14 13)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; rd  out 	(43)
2, 11, 16, 20, 21, 25, 26, 59, 66, 67, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403


;; Succ edge  14 [9.0%] 
;; Succ edge  13 [91.0%]  (fallthru)

;; Start of basic block ( 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u118(11){ }u119(13){ }u120(25){ }u121(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 162 163
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 162 163
;; live  kill	 14 [lr]
;; rd  in  	(43)
2, 11, 16, 20, 21, 25, 26, 59, 66, 67, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403
;; rd  gen 	(2)
402, 403
;; rd  kill	(6)
27, 28, 29, 30, 402, 403

;; Pred edge  12 [91.0%]  (fallthru)
(note 83 82 84 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 84 83 85 13 arch/arm/kernel/unwind.c:393 (set (reg:SI 163 [ frame.sp ])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -12 [0xfffffffffffffff4])) [0 frame.sp+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 85 84 86 13 arch/arm/kernel/unwind.c:393 (set (reg:SI 162)
        (plus:SI (reg:SI 163 [ frame.sp ])
            (const_int -4 [0xfffffffffffffffc]))) 4 {*arm_addsi3} (nil))

(insn 86 85 87 13 arch/arm/kernel/unwind.c:393 (set (reg:SI 0 r0)
        (reg/v:SI 135 [ where ])) 167 {*arm_movsi_insn} (nil))

(insn 87 86 88 13 arch/arm/kernel/unwind.c:393 (set (reg:SI 1 r1)
        (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 frame.pc+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 88 87 89 13 arch/arm/kernel/unwind.c:393 (set (reg:SI 2 r2)
        (reg:SI 162)) 167 {*arm_movsi_insn} (nil))

(call_insn 89 88 97 13 arch/arm/kernel/unwind.c:393 (parallel [
            (call (mem:SI (symbol_ref:SI ("dump_backtrace_entry") [flags 0x41] <function_decl 0x11039280 dump_backtrace_entry>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))
;; End of basic block 13 -> ( 12)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(43)
2, 11, 16, 20, 21, 25, 26, 59, 66, 67, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403


;; Succ edge  12 [100.0%]  (fallthru)

;; Start of basic block ( 12) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u131(11){ }u132(13){ }u133(25){ }u134(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(43)
2, 11, 16, 20, 21, 25, 26, 59, 66, 67, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  12 [9.0%] 
(code_label 97 89 100 14 101 "" [1 uses])

(note 100 97 0 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 14 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(43)
2, 11, 16, 20, 21, 25, 26, 59, 66, 67, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
deleting insn with uid = 10.
deleting insn with uid = 44.
deleting insn with uid = 51.
deleting insn with uid = 53.
deleting insn with uid = 55.
deleting insn with uid = 69.
ending the processing of deferred insns
