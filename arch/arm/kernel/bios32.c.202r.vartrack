
;; Function pci_fixup_unassign (pci_fixup_unassign)[0:1046] (unlikely executed)


Basic block 2:
IN:
Stack adjustment: 0
Reg 0: dev+0
Variables:
  name: dev
    offset 0
      (reg:SI 0 r0 [ dev ])

OUT:
Stack adjustment: 0
Reg 0: dev+0
Variables:
  name: dev
    offset 0
      (reg:SI 0 r0 [ dev ])


3 basic blocks, 2 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, probably never executed.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(13){ }d-1(14){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


Basic block 2 , prev 0, next 1, loop_depth 0, count 0, freq 10000, probably never executed.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 1 [r1] 2 [r2] 3 [r3]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 1 [r1] 2 [r2] 3 [r3]
;; live  kill	

Successors:  EXIT [100.0%] 
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


Basic block 1 , prev 2, loop_depth 0, count 0, freq 10000, probably never executed.
Predecessors:  2 [100.0%] 
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(13){ }u-1(14){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp] 14 [lr]
;; lr  def 	
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	




pci_fixup_unassign

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3]
;;  ref usage 	r0={1d,4u,2d} r1={2d,1u} r2={2d,1u} r3={3d,2u} r13={1d,2u} r14={1d,1u} 
;;    total ref usage 23{10d,11u,2e} in 7{7 regular + 0 call} insns.
(note 1 0 26 NOTE_INSN_DELETED)

(note 26 1 4 2 ( dev (expr_list:REG_DEP_TRUE (reg:SI 0 r0 [ dev ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 1 [r1] 2 [r2] 3 [r3]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 1 [r1] 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 26 22 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 22 4 3 2 NOTE_INSN_PROLOGUE_END)

(note 3 22 6 2 NOTE_INSN_FUNCTION_BEG)

(insn:TI 6 3 20 2 arch/arm/kernel/bios32.c:135 (set (reg:SI 2 r2 [orig:134 <variable>.end ] [134])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 0 r0 [orig:133 dev ] [133])
                (const_int 468 [0x1d4])) [0 <variable>.end+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 0 r0 [orig:133 dev ] [133])
                (const_int 468 [0x1d4])) [0 <variable>.end+0 S4 A32])
        (nil)))

(insn 20 6 7 2 arch/arm/kernel/bios32.c:136 (set (reg:SI 1 r1 [137])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 0 [0x0])
        (nil)))

(insn:TI 7 20 11 2 arch/arm/kernel/bios32.c:135 (set (reg:SI 3 r3 [orig:135 <variable>.start ] [135])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 0 r0 [orig:133 dev ] [133])
                (const_int 464 [0x1d0])) [0 <variable>.start+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn:TI 11 7 8 2 arch/arm/kernel/bios32.c:136 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 0 r0 [orig:133 dev ] [133])
                (const_int 464 [0x1d0])) [0 <variable>.start+0 S4 A64])
        (reg:SI 1 r1 [137])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [137])
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn:TI 8 11 9 2 arch/arm/kernel/bios32.c:135 (set (reg:SI 3 r3 [136])
        (minus:SI (reg:SI 2 r2 [orig:134 <variable>.end ] [134])
            (reg:SI 3 r3 [orig:135 <variable>.start ] [135]))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [orig:134 <variable>.end ] [134])
        (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 0 r0 [orig:133 dev ] [133])
                    (const_int 468 [0x1d4])) [0 <variable>.end+0 S4 A32])
            (nil))))

(insn 9 8 23 2 arch/arm/kernel/bios32.c:135 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 0 r0 [orig:133 dev ] [133])
                (const_int 468 [0x1d4])) [0 <variable>.end+0 S4 A32])
        (reg:SI 3 r3 [136])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [136])
        (expr_list:REG_DEAD (reg/v/f:SI 0 r0 [orig:133 dev ] [133])
            (nil))))

(note 23 9 24 2 NOTE_INSN_EPILOGUE_BEG)

(jump_insn:TI 24 23 25 2 arch/arm/kernel/bios32.c:137 (return) 260 {return} (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%] 

(barrier 25 24 19)

(note 19 25 21 NOTE_INSN_DELETED)

(note 21 19 0 NOTE_INSN_DELETED)


;; Function pci_fixup_dec21285 (pci_fixup_dec21285)[0:1047] (unlikely executed)


Basic block 2:
IN:
Stack adjustment: 0
Reg 0: dev+0
Variables:
  name: dev
    offset 0
      (reg:SI 0 r0 [ dev ])

OUT:
Stack adjustment: 0
Reg 0: dev+0
Variables:
  name: dev
    offset 0
      (reg:SI 0 r0 [ dev ])


Basic block 3:
IN:
Stack adjustment: 0
Reg 0: dev+0
Variables:
  name: dev
    offset 0
      (reg:SI 0 r0 [ dev ])

OUT:
Stack adjustment: 0
Reg 0: dev+0
Reg 2: i+0
Variables:
  name: dev
    offset 0
      (reg:SI 0 r0 [ dev ])
  name: i
    offset 0
      (reg/v:SI 2 r2 [orig:166 i ] [166])


Basic block 4:
IN:
Stack adjustment: 0
Reg 0: dev+0
Reg 2: i+0
Variables:
  name: dev
    offset 0
      (reg:SI 0 r0 [ dev ])
  name: i
    offset 0
      (reg/v:SI 2 r2 [orig:166 i ] [166])

OUT:
Stack adjustment: 0
Reg 0: dev+0
Reg 2: i+0
Variables:
  name: dev
    offset 0
      (reg:SI 0 r0 [ dev ])
  name: i
    offset 0
      (reg/v:SI 2 r2 [orig:166 i ] [166])


Basic block 5:
IN:
Stack adjustment: 0
Reg 0: dev+0
Reg 2: i+0
Variables:
  name: dev
    offset 0
      (reg:SI 0 r0 [ dev ])
  name: i
    offset 0
      (reg/v:SI 2 r2 [orig:166 i ] [166])

OUT:
Stack adjustment: 0
Reg 0: dev+0
Reg 2: i+0
Variables:
  name: dev
    offset 0
      (reg:SI 0 r0 [ dev ])
  name: i
    offset 0
      (reg/v:SI 2 r2 [orig:166 i ] [166])


6 basic blocks, 7 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 1366, probably never executed.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(13){ }d-1(14){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 1366, probably never executed.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 2 [r2] 24 [cc]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 24 [cc]
;; live  kill	

Successors:  3 [61.0%]  (fallthru) EXIT [39.0%] 
;; lr  out 	 0 [r0] 2 [r2] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 2 [r2] 13 [sp] 14 [lr]


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 833, probably never executed.
Predecessors:  2 [61.0%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 2 [r2] 13 [sp]
;; lr  def 	 1 [r1] 3 [r3] 12 [ip]
;; live  in  	 0 [r0] 2 [r2] 13 [sp] 14 [lr]
;; live  gen 	 1 [r1] 3 [r3] 12 [ip]
;; live  kill	

Successors:  4 [100.0%]  (fallthru)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]


Basic block 4 , prev 3, next 5, loop_depth 1, count 0, freq 9167, probably never executed.
Predecessors:  4 [90.9%]  (dfs_back) 3 [100.0%]  (fallthru)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 24 [cc]
;; live  kill	

Successors:  4 [90.9%]  (dfs_back) 5 [9.1%]  (fallthru,loop_exit)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]


Basic block 5 , prev 4, next 1, loop_depth 0, count 0, freq 1366, probably never executed.
Predecessors:  4 [9.1%]  (fallthru,loop_exit)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

Successors:  EXIT [100.0%] 
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]

Invalid sum of incoming frequencies 833, should be 1366

Basic block 1 , prev 5, loop_depth 0, count 0, freq 1366, probably never executed.
Predecessors:  5 [100.0%]  2 [39.0%] 
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(13){ }u-1(14){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp] 14 [lr]
;; lr  def 	
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	

Invalid sum of incoming frequencies 1899, should be 1366



pci_fixup_dec21285

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 12[ip] 24[cc]
;;  ref usage 	r0={1d,4u,1d} r1={2d,3u} r2={3d,4u} r3={3d,4u} r12={2d,2u} r13={1d,5u} r14={1d,1u} r24={2d,2u} 
;;    total ref usage 41{15d,25u,1e} in 16{16 regular + 0 call} insns.
(note 33 0 98 NOTE_INSN_DELETED)

(note 98 33 36 2 ( dev (expr_list:REG_DEP_TRUE (reg:SI 0 r0 [ dev ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 2 [r2] 24 [cc]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 36 98 93 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 93 36 35 2 NOTE_INSN_PROLOGUE_END)

(note 35 93 38 2 NOTE_INSN_FUNCTION_BEG)

(insn:TI 38 35 39 2 arch/arm/kernel/bios32.c:149 (set (reg:SI 2 r2 [orig:168 <variable>.devfn ] [168])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 0 r0 [orig:167 dev ] [167])
                (const_int 28 [0x1c])) [0 <variable>.devfn+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn:TI 39 38 40 2 arch/arm/kernel/bios32.c:149 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2 r2 [orig:168 <variable>.devfn ] [168])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn:TI 40 39 41 2 arch/arm/kernel/bios32.c:149 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (return)
            (pc))) 261 {*cond_return} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 2 -> ( 3 1)
;; lr  out 	 0 [r0] 2 [r2] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 2 [r2] 13 [sp] 14 [lr]


;; Succ edge  3 [61.0%]  (fallthru)
;; Succ edge  EXIT [39.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 2 [r2] 13 [sp]
;; lr  def 	 1 [r1] 3 [r3] 12 [ip]
;; live  in  	 0 [r0] 2 [r2] 13 [sp] 14 [lr]
;; live  gen 	 1 [r1] 3 [r3] 12 [ip]
;; live  kill	

;; Pred edge  2 [61.0%]  (fallthru)
(note 41 40 42 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 42 41 43 3 NOTE_INSN_DELETED)

(insn:TI 43 42 46 3 arch/arm/kernel/bios32.c:151 (set (reg:SI 12 ip [169])
        (zero_extend:SI (mem/s/j:QI (plus:SI (reg/v/f:SI 0 r0 [orig:167 dev ] [167])
                    (const_int 40 [0x28])) [0 <variable>.class+0 S1 A64]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 46 43 49 3 arch/arm/kernel/bios32.c:151 (set (reg:SI 3 r3 [orig:165 ivtmp.375 ] [165])
        (reg/v/f:SI 0 r0 [orig:167 dev ] [167])) 167 {*arm_movsi_insn} (nil))

(insn:TI 49 46 99 3 arch/arm/kernel/bios32.c:153 (set (reg:SI 1 r1 [175])
        (reg/v:SI 2 r2 [orig:166 i ] [166])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 0 [0x0])
        (nil)))

(note 99 49 44 3 ( i (expr_list:REG_DEP_TRUE (reg/v:SI 2 r2 [orig:166 i ] [166])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 44 99 45 3 arch/arm/kernel/bios32.c:151 (set (reg:SI 12 ip [171])
        (ior:SI (reg:SI 12 ip [169])
            (const_int 393216 [0x60000]))) 89 {*arm_iorsi3} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 0 r0 [orig:167 dev ] [167])
                (const_int 40 [0x28])) [0 <variable>.class+0 S4 A64])
        (nil)))

(insn 45 44 57 3 arch/arm/kernel/bios32.c:151 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 0 r0 [orig:167 dev ] [167])
                (const_int 40 [0x28])) [0 <variable>.class+0 S4 A64])
        (reg:SI 12 ip [171])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 12 ip [171])
        (expr_list:REG_DEAD (reg/v/f:SI 0 r0 [orig:167 dev ] [167])
            (nil))))
;; End of basic block 3 -> ( 4)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  4 [90.9%]  (dfs_back)
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 57 45 48 4 5 "" [1 uses])

(note 48 57 55 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn:TI 55 48 50 4 arch/arm/kernel/bios32.c:152 discrim 2 (set (reg/v:SI 2 r2 [orig:166 i ] [166])
        (plus:SI (reg/v:SI 2 r2 [orig:166 i ] [166])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 50 55 58 4 arch/arm/kernel/bios32.c:153 (set (mem/s/j:SI (plus:SI (reg:SI 3 r3 [orig:165 ivtmp.375 ] [165])
                (const_int 464 [0x1d0])) [0 <variable>.start+0 S4 A32])
        (reg:SI 1 r1 [175])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn:TI 58 50 52 4 arch/arm/kernel/bios32.c:152 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 2 r2 [orig:166 i ] [166])
            (const_int 11 [0xb]))) 219 {*arm_cmpsi_insn} (nil))

(insn 52 58 54 4 arch/arm/kernel/bios32.c:154 (set (mem/s/j:SI (plus:SI (reg:SI 3 r3 [orig:165 ivtmp.375 ] [165])
                (const_int 468 [0x1d4])) [0 <variable>.end+0 S4 A32])
        (reg:SI 1 r1 [175])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn:TI 54 52 56 4 arch/arm/kernel/bios32.c:155 (set (mem/s/j:SI (plus:SI (reg:SI 3 r3 [orig:165 ivtmp.375 ] [165])
                (const_int 476 [0x1dc])) [0 <variable>.flags+0 S4 A32])
        (reg:SI 1 r1 [175])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 56 54 59 4 arch/arm/kernel/bios32.c:152 discrim 2 (set (reg:SI 3 r3 [orig:165 ivtmp.375 ] [165])
        (plus:SI (reg:SI 3 r3 [orig:165 ivtmp.375 ] [165])
            (const_int 28 [0x1c]))) 4 {*arm_addsi3} (nil))

(jump_insn:TI 59 56 68 4 arch/arm/kernel/bios32.c:152 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 57)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9091 [0x2383])
            (nil))))
;; End of basic block 4 -> ( 4 5)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]


;; Succ edge  4 [90.9%]  (dfs_back)
;; Succ edge  5 [9.1%]  (fallthru,loop_exit)

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  4 [9.1%]  (fallthru,loop_exit)
(note 68 59 95 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(jump_insn:TI 95 68 94 5 (return) 260 {return} (nil))
;; End of basic block 5 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%] 

(barrier 94 95 91)

(note 91 94 92 NOTE_INSN_DELETED)

(note 92 91 0 NOTE_INSN_DELETED)


;; Function pci_fixup_ide_bases (pci_fixup_ide_bases)[0:1048] (unlikely executed)


Basic block 2:
IN:
Stack adjustment: 0
Reg 0: dev+0
Variables:
  name: dev
    offset 0
      (reg:SI 0 r0 [ dev ])

OUT:
Stack adjustment: 0
Reg 0: dev+0
Variables:
  name: dev
    offset 0
      (reg:SI 0 r0 [ dev ])


Basic block 3:
IN:
Stack adjustment: 0
Reg 0: dev+0
Variables:
  name: dev
    offset 0
      (reg:SI 0 r0 [ dev ])

OUT:
Stack adjustment: 0
Reg 0: dev+0
Reg 3: i+0
Variables:
  name: dev
    offset 0
      (reg:SI 0 r0 [ dev ])
  name: i
    offset 0
      (reg/v:SI 3 r3 [orig:134 i ] [134])


Basic block 4:
IN:
Stack adjustment: 0
Reg 0: dev+0
Reg 3: i+0
Variables:
  name: dev
    offset 0
      (reg:SI 0 r0 [ dev ])
  name: i
    offset 0
      (reg/v:SI 3 r3 [orig:134 i ] [134])

OUT:
Stack adjustment: 0
Reg 3: i+0
Variables:
  name: i
    offset 0
      (reg/v:SI 3 r3 [orig:134 i ] [134])


Basic block 5:
IN:
Stack adjustment: 0
Reg 3: i+0
Variables:
  name: i
    offset 0
      (reg/v:SI 3 r3 [orig:134 i ] [134])

OUT:
Stack adjustment: 0
Reg 3: i+0
Variables:
  name: i
    offset 0
      (reg/v:SI 3 r3 [orig:134 i ] [134])


6 basic blocks, 7 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 2203, probably never executed.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(13){ }d-1(14){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 2203, probably never executed.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 24 [cc]
;; live  kill	

Successors:  EXIT [62.2%]  3 [37.8%]  (fallthru)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 833, probably never executed.
Predecessors:  2 [37.8%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3]
;; live  kill	

Successors:  4 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 3 [r3] 13 [sp] 14 [lr]


Basic block 4 , prev 3, next 5, loop_depth 1, count 0, freq 9167, probably never executed.
Predecessors:  4 [90.9%]  (dfs_back) 3 [100.0%]  (fallthru)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 3 [r3] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 0 [r0] 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc]
;; live  kill	

Successors:  4 [90.9%]  (dfs_back) 5 [9.1%]  (fallthru,loop_exit)
;; lr  out 	 0 [r0] 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 3 [r3] 13 [sp] 14 [lr]


Basic block 5 , prev 4, next 1, loop_depth 0, count 0, freq 2203, probably never executed.
Predecessors:  4 [9.1%]  (fallthru,loop_exit)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

Successors:  EXIT [100.0%] 
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]

Invalid sum of incoming frequencies 833, should be 2203

Basic block 1 , prev 5, loop_depth 0, count 0, freq 2203, probably never executed.
Predecessors:  5 [100.0%]  2 [62.2%] 
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(13){ }u-1(14){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp] 14 [lr]
;; lr  def 	
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	

Invalid sum of incoming frequencies 3573, should be 2203



pci_fixup_ide_bases

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 24[cc]
;;  ref usage 	r0={2d,5u,2d} r1={2d,1u} r2={4d,6u} r3={4d,3u} r13={1d,5u} r14={1d,1u} r24={3d,5u} 
;;    total ref usage 45{17d,26u,2e} in 16{16 regular + 0 call} insns.
(note 1 0 50 NOTE_INSN_DELETED)

(note 50 1 4 2 ( dev (expr_list:REG_DEP_TRUE (reg:SI 0 r0 [ dev ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 50 46 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 46 4 3 2 NOTE_INSN_PROLOGUE_END)

(note 3 46 7 2 NOTE_INSN_FUNCTION_BEG)

(note 7 3 6 2 NOTE_INSN_DELETED)

(insn:TI 6 7 43 2 arch/arm/kernel/bios32.c:169 (set (reg:SI 2 r2 [orig:139 <variable>.class ] [139])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 0 r0 [orig:137 dev ] [137])
                (const_int 40 [0x28])) [0 <variable>.class+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 0 r0 [orig:137 dev ] [137])
                (const_int 40 [0x28])) [0 <variable>.class+0 S4 A64])
        (nil)))

(insn 43 6 9 2 arch/arm/kernel/bios32.c:169 (set (reg:SI 3 r3 [140])
        (const_int 257 [0x101])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 257 [0x101])
        (nil)))

(insn:TI 9 43 10 2 arch/arm/kernel/bios32.c:169 (set (reg:CC_SWP 24 cc)
        (compare:CC_SWP (lshiftrt:SI (reg:SI 2 r2 [orig:139 <variable>.class ] [139])
                (const_int 8 [0x8]))
            (reg:SI 3 r3 [140]))) 221 {*arm_cmpsi_shiftsi_swp} (expr_list:REG_DEAD (reg:SI 3 r3 [140])
        (expr_list:REG_DEAD (reg:SI 2 r2 [orig:139 <variable>.class ] [139])
            (nil))))

(jump_insn:TI 10 9 11 2 arch/arm/kernel/bios32.c:169 (set (pc)
        (if_then_else (ne (reg:CC_SWP 24 cc)
                (const_int 0 [0x0]))
            (return)
            (pc))) 261 {*cond_return} (expr_list:REG_DEAD (reg:CC_SWP 24 cc)
        (expr_list:REG_BR_PROB (const_int 6218 [0x184a])
            (nil))))
;; End of basic block 2 -> ( 1 3)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  EXIT [62.2%] 
;; Succ edge  3 [37.8%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3]
;; live  kill	

;; Pred edge  2 [37.8%]  (fallthru)
(note 11 10 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn:TI 13 11 51 3 arch/arm/kernel/bios32.c:169 (set (reg/v:SI 3 r3 [orig:134 i ] [134])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))
;; End of basic block 3 -> ( 4)
;; lr  out 	 0 [r0] 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 3 [r3] 13 [sp] 14 [lr]


;; Succ edge  4 [100.0%]  (fallthru)

(note 51 13 27 4 ( i (expr_list:REG_DEP_TRUE (reg/v:SI 3 r3 [orig:134 i ] [134])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 4 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 3 [r3] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 0 [r0] 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  4 [90.9%]  (dfs_back)
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 27 51 14 4 12 "" [1 uses])

(note 14 27 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn:TI 15 14 52 4 arch/arm/kernel/bios32.c:174 (set (reg:SI 2 r2 [orig:136 D.18475 ] [136])
        (mem/s/j:SI (plus:SI (reg:SI 0 r0 [orig:133 ivtmp.413 ] [133])
                (const_int 464 [0x1d0])) [0 <variable>.start+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(note 52 15 25 4 ( dev (nil)) NOTE_INSN_VAR_LOCATION)

(insn 25 52 16 4 arch/arm/kernel/bios32.c:172 (set (reg/v:SI 3 r3 [orig:134 i ] [134])
        (plus:SI (reg/v:SI 3 r3 [orig:134 i ] [134])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn:TI 16 25 17 4 arch/arm/kernel/bios32.c:174 (set (reg:SI 1 r1 [141])
        (and:SI (reg:SI 2 r2 [orig:136 D.18475 ] [136])
            (const_int -129 [0xffffffffffffff7f]))) 67 {*arm_andsi3_insn} (nil))

(insn:TI 17 16 20 4 arch/arm/kernel/bios32.c:174 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1 r1 [141])
            (const_int 884 [0x374]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [141])
        (nil)))

(insn:TI 20 17 22 4 arch/arm/kernel/bios32.c:175 (cond_exec (eq (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 2 r2 [orig:135 D.18479 ] [135])
            (ior:SI (reg:SI 2 r2 [orig:136 D.18475 ] [136])
                (const_int 2 [0x2])))) 2310 {neon_vornv2di+43} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg:SI 0 r0 [orig:133 ivtmp.413 ] [133])
                (const_int 464 [0x1d0])) [0 <variable>.start+0 S4 A32])
        (nil)))

(insn 22 20 21 4 arch/arm/kernel/bios32.c:176 (cond_exec (eq (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (mem/s/j:SI (plus:SI (reg:SI 0 r0 [orig:133 ivtmp.413 ] [133])
                    (const_int 468 [0x1d4])) [0 <variable>.end+0 S4 A32])
            (reg:SI 2 r2 [orig:135 D.18479 ] [135]))) 2345 {neon_vornv2di+78} (nil))

(insn:TI 21 22 28 4 arch/arm/kernel/bios32.c:175 (cond_exec (eq (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (mem/s/j:SI (plus:SI (reg:SI 0 r0 [orig:133 ivtmp.413 ] [133])
                    (const_int 464 [0x1d0])) [0 <variable>.start+0 S4 A32])
            (reg:SI 2 r2 [orig:135 D.18479 ] [135]))) 2345 {neon_vornv2di+78} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_DEAD (reg:SI 2 r2 [orig:135 D.18479 ] [135])
            (nil))))

(insn 28 21 26 4 arch/arm/kernel/bios32.c:172 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 3 r3 [orig:134 i ] [134])
            (const_int 11 [0xb]))) 219 {*arm_cmpsi_insn} (nil))

(insn:TI 26 28 29 4 arch/arm/kernel/bios32.c:172 (set (reg:SI 0 r0 [orig:133 ivtmp.413 ] [133])
        (plus:SI (reg:SI 0 r0 [orig:133 ivtmp.413 ] [133])
            (const_int 28 [0x1c]))) 4 {*arm_addsi3} (nil))

(jump_insn:TI 29 26 38 4 arch/arm/kernel/bios32.c:172 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 27)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9091 [0x2383])
            (nil))))
;; End of basic block 4 -> ( 4 5)
;; lr  out 	 0 [r0] 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 3 [r3] 13 [sp] 14 [lr]


;; Succ edge  4 [90.9%]  (dfs_back)
;; Succ edge  5 [9.1%]  (fallthru,loop_exit)

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  4 [9.1%]  (fallthru,loop_exit)
(note 38 29 48 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(jump_insn:TI 48 38 47 5 (return) 260 {return} (nil))
;; End of basic block 5 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%] 

(barrier 47 48 42)

(note 42 47 44 NOTE_INSN_DELETED)

(note 44 42 0 NOTE_INSN_DELETED)


;; Function pci_fixup_it8152 (pci_fixup_it8152)[0:1051] (unlikely executed)


Basic block 2:
IN:
Stack adjustment: 0
Reg 0: dev+0
Variables:
  name: dev
    offset 0
      (reg:SI 0 r0 [ dev ])

OUT:
Stack adjustment: 0
Reg 0: dev+0
Variables:
  name: dev
    offset 0
      (reg:SI 0 r0 [ dev ])


Basic block 3:
IN:
Stack adjustment: 0
Reg 0: dev+0
Variables:
  name: dev
    offset 0
      (reg:SI 0 r0 [ dev ])

OUT:
Stack adjustment: 0
Reg 0: dev+0
Variables:
  name: dev
    offset 0
      (reg:SI 0 r0 [ dev ])


Basic block 4:
IN:
Stack adjustment: 0
Reg 0: dev+0
Variables:
  name: dev
    offset 0
      (reg:SI 0 r0 [ dev ])

OUT:
Stack adjustment: 0
Reg 0: dev+0
Reg 3: i+0
Variables:
  name: i
    offset 0
      (reg/v:SI 3 r3 [orig:134 i ] [134])
  name: dev
    offset 0
      (reg:SI 0 r0 [ dev ])


Basic block 5:
IN:
Stack adjustment: 0
Reg 0: dev+0
Variables:
  name: dev
    offset 0
      (reg:SI 0 r0 [ dev ])

OUT:
Stack adjustment: 0
Reg 0: dev+0
Variables:
  name: dev
    offset 0
      (reg:SI 0 r0 [ dev ])


Basic block 6:
IN:
Stack adjustment: 0
Reg 0: dev+0
Variables:
  name: dev
    offset 0
      (reg:SI 0 r0 [ dev ])

OUT:
Stack adjustment: 0
Reg 0: dev+0
Variables:
  name: dev
    offset 0
      (reg:SI 0 r0 [ dev ])


Basic block 7:
IN:
Stack adjustment: 0
Reg 0: dev+0
Reg 3: i+0
Variables:
  name: i
    offset 0
      (reg/v:SI 3 r3 [orig:134 i ] [134])
  name: dev
    offset 0
      (reg:SI 0 r0 [ dev ])

OUT:
Stack adjustment: 0
Reg 3: i+0
Variables:
  name: i
    offset 0
      (reg/v:SI 3 r3 [orig:134 i ] [134])


Basic block 8:
IN:
Stack adjustment: 0
Reg 3: i+0
Variables:
  name: i
    offset 0
      (reg/v:SI 3 r3 [orig:134 i ] [134])

OUT:
Stack adjustment: 0
Reg 3: i+0
Variables:
  name: i
    offset 0
      (reg/v:SI 3 r3 [orig:134 i ] [134])


9 basic blocks, 12 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 1135, probably never executed.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(13){ }d-1(14){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 1135, probably never executed.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 24 [cc]
;; live  kill	

Successors:  4 [28.0%]  3 [72.0%]  (fallthru)
;; lr  out 	 0 [r0] 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 3 [r3] 13 [sp] 14 [lr]


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 817, probably never executed.
Predecessors:  2 [72.0%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  4 [28.0%]  (fallthru) 5 [72.0%] 
;; lr  out 	 0 [r0] 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 3 [r3] 13 [sp] 14 [lr]


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 769, probably never executed.
Predecessors:  3 [28.0%]  (fallthru) 2 [28.0%]  6 [100.0%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 2 [r2] 3 [r3]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3]
;; live  kill	

Successors:  7 [100.0%] 
;; lr  out 	 0 [r0] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 2 [r2] 3 [r3] 13 [sp] 14 [lr]


Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 588, probably never executed.
Predecessors:  3 [72.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 2 [r2] 24 [cc]
;; live  in  	 0 [r0] 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 24 [cc]
;; live  kill	

Successors:  6 [37.8%]  (fallthru) EXIT [62.2%] 
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


Basic block 6 , prev 5, next 7, loop_depth 0, count 0, freq 222, probably never executed.
Predecessors:  5 [37.8%]  (fallthru)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}

Successors:  4 [100.0%] 


Basic block 7 , prev 6, next 8, loop_depth 1, count 0, freq 9231, probably never executed.
Predecessors:  7 [91.7%]  (dfs_back) 4 [100.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 0 [r0] 3 [r3] 24 [cc]
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 3 [r3] 24 [cc]
;; live  kill	

Successors:  7 [91.7%]  (dfs_back) 8 [8.3%]  (fallthru,loop_exit)
;; lr  out 	 0 [r0] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 2 [r2] 3 [r3] 13 [sp] 14 [lr]


Basic block 8 , prev 7, next 1, loop_depth 0, count 0, freq 1135, probably never executed.
Predecessors:  7 [8.3%]  (fallthru,loop_exit)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

Successors:  EXIT [100.0%] 
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]

Invalid sum of incoming frequencies 769, should be 1135

Basic block 1 , prev 8, loop_depth 0, count 0, freq 1135, probably never executed.
Predecessors:  8 [100.0%]  5 [62.2%] 
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(13){ }u-1(14){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp] 14 [lr]
;; lr  def 	
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	

Invalid sum of incoming frequencies 1501, should be 1135



pci_fixup_it8152

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 2[r2] 3[r3] 24[cc]
;;  ref usage 	r0={2d,5u} r1={1d} r2={4d,5u} r3={4d,6u,1d} r13={1d,8u} r14={1d,1u} r24={4d,4u} 
;;    total ref usage 47{17d,29u,1e} in 21{21 regular + 0 call} insns.
(note 1 0 74 NOTE_INSN_DELETED)

(note 74 1 4 2 ( dev (expr_list:REG_DEP_TRUE (reg:SI 0 r0 [ dev ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 74 60 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 60 4 3 2 NOTE_INSN_PROLOGUE_END)

(note 3 60 6 2 NOTE_INSN_FUNCTION_BEG)

(insn:TI 6 3 7 2 arch/arm/kernel/bios32.c:262 (set (reg:SI 3 r3 [orig:135 D.18514 ] [135])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 0 r0 [orig:136 dev ] [136])
                (const_int 40 [0x28])) [0 <variable>.class+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn:TI 7 6 8 2 arch/arm/kernel/bios32.c:262 (set (reg:SI 2 r2 [137])
        (lshiftrt:SI (reg:SI 3 r3 [orig:135 D.18514 ] [135])
            (const_int 8 [0x8]))) 117 {*arm_shiftsi3} (nil))

(insn:TI 8 7 9 2 arch/arm/kernel/bios32.c:262 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2 r2 [137])
            (const_int 1536 [0x600]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [137])
        (nil)))

(jump_insn:TI 9 8 10 2 arch/arm/kernel/bios32.c:262 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 13)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2800 [0xaf0])
            (nil))))
;; End of basic block 2 -> ( 4 3)
;; lr  out 	 0 [r0] 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 3 [r3] 13 [sp] 14 [lr]


;; Succ edge  4 [28.0%] 
;; Succ edge  3 [72.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  2 [72.0%]  (fallthru)
(note 10 9 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn:TI 11 10 12 3 arch/arm/kernel/bios32.c:262 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [orig:135 D.18514 ] [135])
            (const_int 425984 [0x68000]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn:TI 12 11 13 3 arch/arm/kernel/bios32.c:262 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 19)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 3 -> ( 4 5)
;; lr  out 	 0 [r0] 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 3 [r3] 13 [sp] 14 [lr]


;; Succ edge  4 [28.0%]  (fallthru)
;; Succ edge  5 [72.0%] 

;; Start of basic block ( 3 2 6) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 2 [r2] 3 [r3]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  3 [28.0%]  (fallthru)
;; Pred edge  2 [28.0%] 
;; Pred edge  6 [100.0%] 
(code_label 13 12 14 4 16 "" [2 uses])

(note 14 13 16 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn:TI 16 14 75 4 arch/arm/kernel/bios32.c:262 discrim 1 (set (reg/v:SI 3 r3 [orig:134 i ] [134])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(note 75 16 29 4 ( i (expr_list:REG_DEP_TRUE (reg/v:SI 3 r3 [orig:134 i ] [134])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 29 75 69 4 arch/arm/kernel/bios32.c:266 (set (reg:SI 2 r2 [142])
        (reg/v:SI 3 r3 [orig:134 i ] [134])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 0 [0x0])
        (nil)))

(jump_insn 69 29 70 4 (set (pc)
        (label_ref 27)) -1 (nil))
;; End of basic block 4 -> ( 7)
;; lr  out 	 0 [r0] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 2 [r2] 3 [r3] 13 [sp] 14 [lr]


;; Succ edge  7 [100.0%] 

(barrier 70 69 76)

(note 76 70 19 5 ( i (nil)) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 2 [r2] 24 [cc]
;; live  in  	 0 [r0] 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 24 [cc]
;; live  kill	

;; Pred edge  3 [72.0%] 
(code_label 19 76 20 5 17 "" [1 uses])

(note 20 19 21 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn:TI 21 20 22 5 arch/arm/kernel/bios32.c:262 discrim 2 (set (reg:SI 2 r2 [138])
        (const_int 524547 [0x80103])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 524547 [0x80103])
        (nil)))

(insn:TI 22 21 23 5 arch/arm/kernel/bios32.c:262 discrim 2 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [orig:135 D.18514 ] [135])
            (reg:SI 2 r2 [138]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [orig:135 D.18514 ] [135])
        (expr_list:REG_DEAD (reg:SI 2 r2 [138])
            (expr_list:REG_EQUAL (compare:CC (reg:SI 3 r3 [orig:135 D.18514 ] [135])
                    (const_int 524547 [0x80103]))
                (nil)))))

(jump_insn:TI 23 22 71 5 arch/arm/kernel/bios32.c:262 discrim 2 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (return)
            (pc))) 261 {*cond_return} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6218 [0x184a])
            (nil))))
;; End of basic block 5 -> ( 6 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  6 [37.8%]  (fallthru)
;; Succ edge  EXIT [62.2%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}

;; Pred edge  5 [37.8%]  (fallthru)
(note 71 23 72 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(jump_insn 72 71 73 6 (set (pc)
        (label_ref 13)) -1 (nil))
;; End of basic block 6 -> ( 4)


;; Succ edge  4 [100.0%] 

(barrier 73 72 77)

(note 77 73 27 7 ( i (expr_list:REG_DEP_TRUE (reg/v:SI 3 r3 [orig:134 i ] [134])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 7 4) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 0 [r0] 3 [r3] 24 [cc]
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  7 [91.7%]  (dfs_back)
;; Pred edge  4 [100.0%] 
(code_label 27 77 28 7 18 "" [2 uses])

(note 28 27 35 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn:TI 35 28 30 7 arch/arm/kernel/bios32.c:265 discrim 2 (set (reg/v:SI 3 r3 [orig:134 i ] [134])
        (plus:SI (reg/v:SI 3 r3 [orig:134 i ] [134])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 30 35 78 7 arch/arm/kernel/bios32.c:266 (set (mem/s/j:SI (plus:SI (reg:SI 0 r0 [orig:133 ivtmp.446 ] [133])
                (const_int 464 [0x1d0])) [0 <variable>.start+0 S4 A32])
        (reg:SI 2 r2 [142])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(note 78 30 37 7 ( dev (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 37 78 32 7 arch/arm/kernel/bios32.c:265 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 3 r3 [orig:134 i ] [134])
            (const_int 11 [0xb]))) 219 {*arm_cmpsi_insn} (nil))

(insn 32 37 34 7 arch/arm/kernel/bios32.c:267 (set (mem/s/j:SI (plus:SI (reg:SI 0 r0 [orig:133 ivtmp.446 ] [133])
                (const_int 468 [0x1d4])) [0 <variable>.end+0 S4 A32])
        (reg:SI 2 r2 [142])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn:TI 34 32 36 7 arch/arm/kernel/bios32.c:268 (set (mem/s/j:SI (plus:SI (reg:SI 0 r0 [orig:133 ivtmp.446 ] [133])
                (const_int 476 [0x1dc])) [0 <variable>.flags+0 S4 A32])
        (reg:SI 2 r2 [142])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 36 34 38 7 arch/arm/kernel/bios32.c:265 discrim 2 (set (reg:SI 0 r0 [orig:133 ivtmp.446 ] [133])
        (plus:SI (reg:SI 0 r0 [orig:133 ivtmp.446 ] [133])
            (const_int 28 [0x1c]))) 4 {*arm_addsi3} (nil))

(jump_insn:TI 38 36 47 7 arch/arm/kernel/bios32.c:265 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 27)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9167 [0x23cf])
            (nil))))
;; End of basic block 7 -> ( 7 8)
;; lr  out 	 0 [r0] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 2 [r2] 3 [r3] 13 [sp] 14 [lr]


;; Succ edge  7 [91.7%]  (dfs_back)
;; Succ edge  8 [8.3%]  (fallthru,loop_exit)

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  7 [8.3%]  (fallthru,loop_exit)
(note 47 38 62 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(jump_insn:TI 62 47 61 8 (return) 260 {return} (nil))
;; End of basic block 8 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%] 

(barrier 61 62 57)

(note 57 61 58 NOTE_INSN_DELETED)

(note 58 57 0 NOTE_INSN_DELETED)


;; Function pcibios_resource_to_bus (pcibios_resource_to_bus)[0:1057]


Basic block 2:
IN:
Stack adjustment: 0
Reg 0: dev+0
Reg 1: region+0
Reg 2: res+0
Variables:
  name: region
    offset 0
      (reg:SI 1 r1 [ region ])
  name: res
    offset 0
      (reg:SI 2 r2 [ res ])
  name: dev
    offset 0
      (reg:SI 0 r0 [ dev ])

OUT:
Stack adjustment: 0
Reg 1: region+0
Reg 12: root+0
Variables:
  name: region
    offset 0
      (reg:SI 1 r1 [ region ])
  name: root
    offset 0
      (reg/v/f:SI 12 ip [orig:134 root ] [134])


3 basic blocks, 2 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(13){ }d-1(14){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 13 [sp] 14 [lr]


Basic block 2 , prev 0, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 13 [sp]
;; lr  def 	 0 [r0] 2 [r2] 3 [r3] 12 [ip] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 2 [r2] 3 [r3] 12 [ip] 24 [cc]
;; live  kill	

Successors:  EXIT [100.0%] 
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


Basic block 1 , prev 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  2 [100.0%] 
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(13){ }u-1(14){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp] 14 [lr]
;; lr  def 	
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	




pcibios_resource_to_bus

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 12[ip] 24[cc]
;;  ref usage 	r0={4d,6u} r1={1d,2u,2d} r2={2d,4u,1d} r3={5d,5u} r12={1d,2u} r13={1d,2u} r14={1d,1u} r24={2d,2u} 
;;    total ref usage 44{17d,24u,3e} in 13{13 regular + 0 call} insns.
(note 1 0 50 NOTE_INSN_DELETED)

(note 50 1 51 2 ( dev (expr_list:REG_DEP_TRUE (reg:SI 0 r0 [ dev ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 51 50 52 2 ( region (expr_list:REG_DEP_TRUE (reg:SI 1 r1 [ region ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 52 51 6 2 ( res (expr_list:REG_DEP_TRUE (reg:SI 2 r2 [ res ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 13 [sp]
;; lr  def 	 0 [r0] 2 [r2] 3 [r3] 12 [ip] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 2 [r2] 3 [r3] 12 [ip] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 52 46 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 46 6 2 2 NOTE_INSN_PROLOGUE_END)

(note 2 46 5 2 NOTE_INSN_DELETED)

(note 5 2 10 2 NOTE_INSN_FUNCTION_BEG)

(note 10 5 22 2 NOTE_INSN_DELETED)

(note 22 10 8 2 NOTE_INSN_DELETED)

(insn:TI 8 22 53 2 arch/arm/kernel/bios32.c:423 (set (reg/v/f:SI 12 ip [orig:134 root ] [134])
        (mem/s/f/j:SI (plus:SI (reg:SI 0 r0 [ dev ])
                (const_int 16 [0x10])) [0 <variable>.sysdata+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ dev ])
        (nil)))

(note 53 8 9 2 ( root (expr_list:REG_DEP_TRUE (reg/v/f:SI 12 ip [orig:134 root ] [134])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 9 53 54 2 arch/arm/kernel/bios32.c:426 (set (reg:SI 0 r0 [orig:135 D.18655 ] [135])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 2 r2 [orig:138 res ] [138])
                (const_int 12 [0xc])) [0 <variable>.flags+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(note 54 9 11 2 ( dev (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 11 54 19 2 arch/arm/kernel/bios32.c:426 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (and:SI (reg:SI 0 r0 [orig:135 D.18655 ] [135])
                        (const_int 256 [0x100]))
                    (const_int 0 [0x0])))
            (set (reg:SI 3 r3 [139])
                (and:SI (reg:SI 0 r0 [orig:135 D.18655 ] [135])
                    (const_int 256 [0x100])))
        ]) 69 {*andsi3_compare0} (nil))

(insn:TI 19 11 55 2 arch/arm/kernel/bios32.c:427 (cond_exec (ne (reg:CC_NOOV 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v:SI 3 r3 [orig:133 offset ] [133])
            (mem/s/j:SI (plus:SI (reg/v/f:SI 12 ip [orig:134 root ] [134])
                    (const_int 24 [0x18])) [0 <variable>.io_offset+0 S4 A64]))) 2345 {neon_vornv2di+78} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (nil)))

(note 55 19 23 2 ( offset (expr_list:REG_DEP_TRUE (reg/v:SI 3 r3 [orig:133 offset ] [133])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn 23 55 29 2 arch/arm/kernel/bios32.c:428 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 0 r0 [orig:135 D.18655 ] [135])
                (const_int 1 [0x1])
                (const_int 9 [0x9]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg:SI 0 r0 [orig:135 D.18655 ] [135])
        (nil)))

(insn:TI 29 23 26 2 arch/arm/kernel/bios32.c:431 (set (reg:SI 0 r0 [orig:141 <variable>.start ] [141])
        (mem/s/j:SI (reg/v/f:SI 2 r2 [orig:138 res ] [138]) [0 <variable>.start+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (reg/v/f:SI 2 r2 [orig:138 res ] [138]) [0 <variable>.start+0 S4 A32])
        (nil)))

(insn:TI 26 29 30 2 arch/arm/kernel/bios32.c:429 (cond_exec (ne (reg:CC_NOOV 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v:SI 3 r3 [orig:133 offset ] [133])
            (mem/s/j:SI (plus:SI (reg/v/f:SI 12 ip [orig:134 root ] [134])
                    (const_int 16 [0x10])) [0 <variable>.mem_offset+0 S4 A64]))) 2345 {neon_vornv2di+78} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_DEAD (reg/v/f:SI 12 ip [orig:134 root ] [134])
            (nil))))

(insn:TI 30 26 31 2 arch/arm/kernel/bios32.c:431 (set (reg:SI 0 r0 [142])
        (minus:SI (reg:SI 0 r0 [orig:141 <variable>.start ] [141])
            (reg/v:SI 3 r3 [orig:133 offset ] [133]))) 28 {*arm_subsi3_insn} (expr_list:REG_EQUIV (mem/s/j:SI (reg/v/f:SI 1 r1 [orig:137 region ] [137]) [0 <variable>.start+0 S4 A32])
        (nil)))

(insn 31 30 32 2 arch/arm/kernel/bios32.c:431 (set (mem/s/j:SI (reg/v/f:SI 1 r1 [orig:137 region ] [137]) [0 <variable>.start+0 S4 A32])
        (reg:SI 0 r0 [142])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [142])
        (nil)))

(insn:TI 32 31 56 2 arch/arm/kernel/bios32.c:432 (set (reg:SI 2 r2 [orig:143 <variable>.end ] [143])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 2 r2 [orig:138 res ] [138])
                (const_int 4 [0x4])) [0 <variable>.end+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(note 56 32 33 2 ( res (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 33 56 57 2 arch/arm/kernel/bios32.c:432 (set (reg:SI 3 r3 [144])
        (minus:SI (reg:SI 2 r2 [orig:143 <variable>.end ] [143])
            (reg/v:SI 3 r3 [orig:133 offset ] [133]))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [orig:143 <variable>.end ] [143])
        (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 1 r1 [orig:137 region ] [137])
                    (const_int 4 [0x4])) [0 <variable>.end+0 S4 A32])
            (nil))))

(note 57 33 34 2 ( offset (nil)) NOTE_INSN_VAR_LOCATION)

(insn 34 57 47 2 arch/arm/kernel/bios32.c:432 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 1 r1 [orig:137 region ] [137])
                (const_int 4 [0x4])) [0 <variable>.end+0 S4 A32])
        (reg:SI 3 r3 [144])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [144])
        (expr_list:REG_DEAD (reg/v/f:SI 1 r1 [orig:137 region ] [137])
            (nil))))

(note 47 34 48 2 NOTE_INSN_EPILOGUE_BEG)

(jump_insn:TI 48 47 49 2 arch/arm/kernel/bios32.c:433 (return) 260 {return} (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%] 

(barrier 49 48 44)

(note 44 49 45 NOTE_INSN_DELETED)

(note 45 44 0 NOTE_INSN_DELETED)


;; Function pcibios_bus_to_resource (pcibios_bus_to_resource)[0:1058] (unlikely executed)


Basic block 2:
IN:
Stack adjustment: 0
Reg 0: dev+0
Reg 1: res+0
Reg 2: region+0
Variables:
  name: region
    offset 0
      (reg:SI 2 r2 [ region ])
  name: dev
    offset 0
      (reg:SI 0 r0 [ dev ])
  name: res
    offset 0
      (reg:SI 1 r1 [ res ])

OUT:
Stack adjustment: 0
Reg 1: res+0
Reg 12: root+0
Variables:
  name: root
    offset 0
      (reg/v/f:SI 12 ip [orig:134 root ] [134])
  name: res
    offset 0
      (reg:SI 1 r1 [ res ])


3 basic blocks, 2 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, probably never executed.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(13){ }d-1(14){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 13 [sp] 14 [lr]


Basic block 2 , prev 0, next 1, loop_depth 0, count 0, freq 10000, probably never executed.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 13 [sp]
;; lr  def 	 0 [r0] 2 [r2] 3 [r3] 12 [ip] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 2 [r2] 3 [r3] 12 [ip] 24 [cc]
;; live  kill	

Successors:  EXIT [100.0%] 
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


Basic block 1 , prev 2, loop_depth 0, count 0, freq 10000, probably never executed.
Predecessors:  2 [100.0%] 
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(13){ }u-1(14){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp] 14 [lr]
;; lr  def 	
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	




pcibios_bus_to_resource

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 12[ip] 24[cc]
;;  ref usage 	r0={4d,6u} r1={1d,3u,2d} r2={2d,3u,1d} r3={5d,5u} r12={1d,2u} r13={1d,2u} r14={1d,1u} r24={2d,2u} 
;;    total ref usage 44{17d,24u,3e} in 13{13 regular + 0 call} insns.
(note 1 0 50 NOTE_INSN_DELETED)

(note 50 1 51 2 ( res (expr_list:REG_DEP_TRUE (reg:SI 1 r1 [ res ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 51 50 52 2 ( region (expr_list:REG_DEP_TRUE (reg:SI 2 r2 [ region ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 52 51 6 2 ( dev (expr_list:REG_DEP_TRUE (reg:SI 0 r0 [ dev ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 13 [sp]
;; lr  def 	 0 [r0] 2 [r2] 3 [r3] 12 [ip] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 2 [r2] 3 [r3] 12 [ip] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 52 46 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 46 6 2 2 NOTE_INSN_PROLOGUE_END)

(note 2 46 5 2 NOTE_INSN_DELETED)

(note 5 2 10 2 NOTE_INSN_FUNCTION_BEG)

(note 10 5 22 2 NOTE_INSN_DELETED)

(note 22 10 8 2 NOTE_INSN_DELETED)

(insn:TI 8 22 53 2 arch/arm/kernel/bios32.c:439 (set (reg/v/f:SI 12 ip [orig:134 root ] [134])
        (mem/s/f/j:SI (plus:SI (reg:SI 0 r0 [ dev ])
                (const_int 16 [0x10])) [0 <variable>.sysdata+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ dev ])
        (nil)))

(note 53 8 9 2 ( root (expr_list:REG_DEP_TRUE (reg/v/f:SI 12 ip [orig:134 root ] [134])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 9 53 54 2 arch/arm/kernel/bios32.c:442 (set (reg:SI 0 r0 [orig:135 D.18675 ] [135])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 1 r1 [orig:137 res ] [137])
                (const_int 12 [0xc])) [0 <variable>.flags+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(note 54 9 11 2 ( dev (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 11 54 19 2 arch/arm/kernel/bios32.c:442 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (and:SI (reg:SI 0 r0 [orig:135 D.18675 ] [135])
                        (const_int 256 [0x100]))
                    (const_int 0 [0x0])))
            (set (reg:SI 3 r3 [139])
                (and:SI (reg:SI 0 r0 [orig:135 D.18675 ] [135])
                    (const_int 256 [0x100])))
        ]) 69 {*andsi3_compare0} (nil))

(insn:TI 19 11 55 2 arch/arm/kernel/bios32.c:443 (cond_exec (ne (reg:CC_NOOV 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v:SI 3 r3 [orig:133 offset ] [133])
            (mem/s/j:SI (plus:SI (reg/v/f:SI 12 ip [orig:134 root ] [134])
                    (const_int 24 [0x18])) [0 <variable>.io_offset+0 S4 A64]))) 2345 {neon_vornv2di+78} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (nil)))

(note 55 19 23 2 ( offset (expr_list:REG_DEP_TRUE (reg/v:SI 3 r3 [orig:133 offset ] [133])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn 23 55 29 2 arch/arm/kernel/bios32.c:444 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 0 r0 [orig:135 D.18675 ] [135])
                (const_int 1 [0x1])
                (const_int 9 [0x9]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg:SI 0 r0 [orig:135 D.18675 ] [135])
        (nil)))

(insn:TI 29 23 26 2 arch/arm/kernel/bios32.c:447 (set (reg:SI 0 r0 [orig:141 <variable>.start ] [141])
        (mem/s/j:SI (reg/v/f:SI 2 r2 [orig:138 region ] [138]) [0 <variable>.start+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (reg/v/f:SI 2 r2 [orig:138 region ] [138]) [0 <variable>.start+0 S4 A32])
        (nil)))

(insn:TI 26 29 30 2 arch/arm/kernel/bios32.c:445 (cond_exec (ne (reg:CC_NOOV 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v:SI 3 r3 [orig:133 offset ] [133])
            (mem/s/j:SI (plus:SI (reg/v/f:SI 12 ip [orig:134 root ] [134])
                    (const_int 16 [0x10])) [0 <variable>.mem_offset+0 S4 A64]))) 2345 {neon_vornv2di+78} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_DEAD (reg/v/f:SI 12 ip [orig:134 root ] [134])
            (nil))))

(insn:TI 30 26 31 2 arch/arm/kernel/bios32.c:447 (set (reg:SI 0 r0 [142])
        (plus:SI (reg/v:SI 3 r3 [orig:133 offset ] [133])
            (reg:SI 0 r0 [orig:141 <variable>.start ] [141]))) 4 {*arm_addsi3} (expr_list:REG_EQUIV (mem/s/j:SI (reg/v/f:SI 1 r1 [orig:137 res ] [137]) [0 <variable>.start+0 S4 A32])
        (nil)))

(insn 31 30 32 2 arch/arm/kernel/bios32.c:447 (set (mem/s/j:SI (reg/v/f:SI 1 r1 [orig:137 res ] [137]) [0 <variable>.start+0 S4 A32])
        (reg:SI 0 r0 [142])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [142])
        (nil)))

(insn:TI 32 31 56 2 arch/arm/kernel/bios32.c:448 (set (reg:SI 2 r2 [orig:143 <variable>.end ] [143])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 2 r2 [orig:138 region ] [138])
                (const_int 4 [0x4])) [0 <variable>.end+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(note 56 32 33 2 ( region (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 33 56 57 2 arch/arm/kernel/bios32.c:448 (set (reg:SI 3 r3 [144])
        (plus:SI (reg/v:SI 3 r3 [orig:133 offset ] [133])
            (reg:SI 2 r2 [orig:143 <variable>.end ] [143]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 2 r2 [orig:143 <variable>.end ] [143])
        (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 1 r1 [orig:137 res ] [137])
                    (const_int 4 [0x4])) [0 <variable>.end+0 S4 A32])
            (nil))))

(note 57 33 34 2 ( offset (nil)) NOTE_INSN_VAR_LOCATION)

(insn 34 57 47 2 arch/arm/kernel/bios32.c:448 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 1 r1 [orig:137 res ] [137])
                (const_int 4 [0x4])) [0 <variable>.end+0 S4 A32])
        (reg:SI 3 r3 [144])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [144])
        (expr_list:REG_DEAD (reg/v/f:SI 1 r1 [orig:137 res ] [137])
            (nil))))

(note 47 34 48 2 NOTE_INSN_EPILOGUE_BEG)

(jump_insn:TI 48 47 49 2 arch/arm/kernel/bios32.c:449 (return) 260 {return} (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%] 

(barrier 49 48 44)

(note 44 49 45 NOTE_INSN_DELETED)

(note 45 44 0 NOTE_INSN_DELETED)


;; Function pcibios_align_resource (pcibios_align_resource)[0:1064]


Basic block 2:
IN:
Stack adjustment: 0
Reg 0: data+0
Reg 1: res+0
Reg 2: size+0
Reg 3: align+0
Variables:
  name: data
    offset 0
      (reg:SI 0 r0 [ data ])
  name: res
    offset 0
      (reg:SI 1 r1 [ res ])
  name: size
    offset 0
      (reg:SI 2 r2 [ size ])
  name: align
    offset 0
      (reg:SI 3 r3 [ align ])

OUT:
Stack adjustment: 0
Reg 1: res+0
Reg 2: start+0
Reg 3: align+0
Variables:
  name: start
    offset 0
      (reg/v:SI 2 r2 [orig:133 start ] [133])
  name: res
    offset 0
      (reg:SI 1 r1 [ res ])
  name: align
    offset 0
      (reg:SI 3 r3 [ align ])


Basic block 3:
IN:
Stack adjustment: 0
Reg 1: res+0
Reg 2: start+0
Reg 3: align+0
Variables:
  name: start
    offset 0
      (reg/v:SI 2 r2 [orig:133 start ] [133])
  name: res
    offset 0
      (reg:SI 1 r1 [ res ])
  name: align
    offset 0
      (reg:SI 3 r3 [ align ])

OUT:
Stack adjustment: 0
Reg 1: res+0
Reg 2: start+0
Reg 3: align+0
Variables:
  name: start
    offset 0
      (reg/v:SI 2 r2 [orig:133 start ] [133])
  name: res
    offset 0
      (reg:SI 1 r1 [ res ])
  name: align
    offset 0
      (reg:SI 3 r3 [ align ])


Basic block 4:
IN:
Stack adjustment: 0
Reg 1: res+0
Reg 2: start+0
Reg 3: align+0
Variables:
  name: start
    offset 0
      (reg/v:SI 2 r2 [orig:133 start ] [133])
  name: res
    offset 0
      (reg:SI 1 r1 [ res ])
  name: align
    offset 0
      (reg:SI 3 r3 [ align ])

OUT:
Stack adjustment: 0


5 basic blocks, 5 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(13){ }d-1(14){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 1 [r1] 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 3 [r3] 13 [sp] 14 [lr]


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	 0 [r0] 2 [r2] 24 [cc]
;; live  in  	 1 [r1] 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 2 [r2] 24 [cc]
;; live  kill	

Successors:  3 [61.0%]  (fallthru) 4 [39.0%] 
;; lr  out 	 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 2 [r2] 3 [r3] 13 [sp] 14 [lr]


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 6100, maybe hot.
Predecessors:  2 [61.0%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 24 [cc]
;; live  kill	

Successors:  4 [100.0%]  (fallthru)
;; lr  out 	 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 2 [r2] 3 [r3] 13 [sp] 14 [lr]


Basic block 4 , prev 3, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  2 [39.0%]  3 [100.0%]  (fallthru)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  in  	 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	

Successors:  EXIT [100.0%] 
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


Basic block 1 , prev 4, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  4 [100.0%] 
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(13){ }u-1(14){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp] 14 [lr]
;; lr  def 	
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	




pcibios_align_resource

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 24[cc]
;;  ref usage 	r0={3d,3u} r1={2d,3u} r2={7d,11u,1d} r3={2d,3u} r13={1d,4u} r14={1d,1u} r24={2d,5u} 
;;    total ref usage 49{18d,30u,1e} in 15{15 regular + 0 call} insns.
(note 1 0 51 NOTE_INSN_DELETED)

(note 51 1 52 2 ( res (expr_list:REG_DEP_TRUE (reg:SI 1 r1 [ res ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 52 51 53 2 ( size (expr_list:REG_DEP_TRUE (reg:SI 2 r2 [ size ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 53 52 54 2 ( align (expr_list:REG_DEP_TRUE (reg:SI 3 r3 [ align ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 54 53 7 2 ( data (expr_list:REG_DEP_TRUE (reg:SI 0 r0 [ data ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	 0 [r0] 2 [r2] 24 [cc]
;; live  in  	 1 [r1] 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 2 [r2] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 54 47 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 47 7 6 2 NOTE_INSN_PROLOGUE_END)

(note 6 47 11 2 NOTE_INSN_FUNCTION_BEG)

(note 11 6 10 2 NOTE_INSN_DELETED)

(insn:TI 10 11 55 2 arch/arm/kernel/bios32.c:607 (set (reg:SI 0 r0 [orig:142 <variable>.flags ] [142])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 1 r1 [orig:138 res ] [138])
                (const_int 12 [0xc])) [0 <variable>.flags+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(note 55 10 9 2 ( data (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 9 55 56 2 arch/arm/kernel/bios32.c:605 (set (reg/v:SI 2 r2 [orig:133 start ] [133])
        (mem/s/j:SI (reg/v/f:SI 1 r1 [orig:138 res ] [138]) [0 <variable>.start+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 1 r1 [orig:138 res ] [138])
        (nil)))

(note 56 9 57 2 ( size (nil)) NOTE_INSN_VAR_LOCATION)

(note 57 56 12 2 ( start (expr_list:REG_DEP_TRUE (reg/v:SI 2 r2 [orig:133 start ] [133])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 12 57 13 2 arch/arm/kernel/bios32.c:607 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 0 r0 [orig:142 <variable>.flags ] [142])
                (const_int 1 [0x1])
                (const_int 8 [0x8]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg:SI 0 r0 [orig:142 <variable>.flags ] [142])
        (nil)))

(jump_insn:TI 13 12 14 2 arch/arm/kernel/bios32.c:607 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 23)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 2 [r2] 3 [r3] 13 [sp] 14 [lr]


;; Succ edge  3 [61.0%]  (fallthru)
;; Succ edge  4 [39.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 24 [cc]
;; live  kill	

;; Pred edge  2 [61.0%]  (fallthru)
(note 14 13 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 15 14 21 3 NOTE_INSN_DELETED)

(note 21 15 16 3 NOTE_INSN_DELETED)

(insn:TI 16 21 19 3 arch/arm/kernel/bios32.c:607 discrim 1 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (and:SI (reg/v:SI 2 r2 [orig:133 start ] [133])
                        (const_int 768 [0x300]))
                    (const_int 0 [0x0])))
            (clobber (scratch:SI))
        ]) 70 {*andsi3_compare0_scratch} (nil))

(insn:TI 19 16 58 3 arch/arm/kernel/bios32.c:608 (cond_exec (ne (reg:CC_NOOV 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 2 r2 [144])
            (plus:SI (reg/v:SI 2 r2 [orig:133 start ] [133])
                (const_int 1020 [0x3fc])))) 2268 {neon_vornv2di+1} (nil))

(note 58 19 20 3 ( start (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 20 58 43 3 arch/arm/kernel/bios32.c:608 (cond_exec (ne (reg:CC_NOOV 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 2 r2 [orig:135 D.18811 ] [135])
            (plus:SI (reg:SI 2 r2 [144])
                (const_int 3 [0x3])))) 2268 {neon_vornv2di+1} (expr_list:REG_EQUAL (plus:SI (reg/v:SI 2 r2 [orig:133 start ] [133])
            (const_int 1023 [0x3ff]))
        (nil)))

(insn:TI 43 20 59 3 arch/arm/kernel/bios32.c:608 (cond_exec (ne (reg:CC_NOOV 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v:SI 2 r2 [orig:133 start ] [133])
            (and:SI (reg:SI 2 r2 [orig:135 D.18811 ] [135])
                (const_int -1021 [0xfffffffffffffc03])))) 2295 {neon_vornv2di+28} (nil))

(note 59 43 44 3 ( start (expr_list:REG_DEP_TRUE (reg/v:SI 2 r2 [orig:133 start ] [133])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 44 59 23 3 arch/arm/kernel/bios32.c:608 (cond_exec (ne (reg:CC_NOOV 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v:SI 2 r2 [orig:133 start ] [133])
            (and:SI (reg/v:SI 2 r2 [orig:133 start ] [133])
                (const_int -4 [0xfffffffffffffffc])))) 2295 {neon_vornv2di+28} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (nil)))
;; End of basic block 3 -> ( 4)
;; lr  out 	 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 2 [r2] 3 [r3] 13 [sp] 14 [lr]


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  in  	 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  2 [39.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 23 44 24 4 35 "" [1 uses])

(note 24 23 28 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 28 24 25 4 NOTE_INSN_DELETED)

(insn:TI 25 28 60 4 arch/arm/kernel/bios32.c:610 (set (reg:SI 1 r1 [146])
        (plus:SI (reg/v:SI 3 r3 [orig:140 align ] [140])
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (nil))

(note 60 25 27 4 ( res (nil)) NOTE_INSN_VAR_LOCATION)

(insn 27 60 61 4 arch/arm/kernel/bios32.c:613 (set (reg:SI 3 r3 [148])
        (neg:SI (reg/v:SI 3 r3 [orig:140 align ] [140]))) 127 {*arm_negsi2} (nil))

(note 61 27 26 4 ( align (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 26 61 62 4 arch/arm/kernel/bios32.c:610 (set (reg:SI 2 r2 [orig:134 D.18813 ] [134])
        (plus:SI (reg:SI 1 r1 [146])
            (reg/v:SI 2 r2 [orig:133 start ] [133]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 1 r1 [146])
        (nil)))

(note 62 26 33 4 ( start (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 33 62 39 4 arch/arm/kernel/bios32.c:613 (set (reg/i:SI 0 r0)
        (and:SI (reg:SI 2 r2 [orig:134 D.18813 ] [134])
            (reg:SI 3 r3 [148]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [148])
        (expr_list:REG_DEAD (reg:SI 2 r2 [orig:134 D.18813 ] [134])
            (nil))))

(insn 39 33 48 4 arch/arm/kernel/bios32.c:613 (use (reg/i:SI 0 r0)) -1 (nil))

(note 48 39 49 4 NOTE_INSN_EPILOGUE_BEG)

(jump_insn 49 48 50 4 arch/arm/kernel/bios32.c:613 (return) 260 {return} (nil))
;; End of basic block 4 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%] 

(barrier 50 49 45)

(note 45 50 46 NOTE_INSN_DELETED)

(note 46 45 0 NOTE_INSN_DELETED)


;; Function pci_fixup_dec21142 (pci_fixup_dec21142)[0:1049] (unlikely executed)


Basic block 2:
IN:
Stack adjustment: 0
Reg 0: dev+0
Variables:
  name: dev
    offset 0
      (reg:SI 0 r0 [ dev ])

OUT:
Stack adjustment: 0


3 basic blocks, 2 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, probably never executed.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(13){ }d-1(14){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


Basic block 2 , prev 0, next 1, loop_depth 0, count 0, freq 10000, probably never executed.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	

Successors:  EXIT [100.0%]  (ab,sibcall)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


Basic block 1 , prev 2, loop_depth 0, count 0, freq 10000, probably never executed.
Predecessors:  2 [100.0%]  (ab,sibcall)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(13){ }u-1(14){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp] 14 [lr]
;; lr  def 	
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	




pci_fixup_dec21142

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr]
;;  ref usage 	r0={3d,3u} r1={3d,1u} r2={3d,1u} r3={3d,1u} r12={1d} r13={1d,3u} r14={1d,2u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 137{126d,11u,0e} in 6{5 regular + 1 call} insns.
(note 1 0 23 NOTE_INSN_DELETED)

(note 23 1 4 2 ( dev (expr_list:REG_DEP_TRUE (reg:SI 0 r0 [ dev ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 23 20 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 20 4 3 2 NOTE_INSN_PROLOGUE_END)

(note 3 20 7 2 NOTE_INSN_FUNCTION_BEG)

(insn:TI 7 3 8 2 include/linux/pci.h:773 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 0 r0 [orig:133 dev ] [133])
                (const_int 28 [0x1c])) [0 <variable>.devfn+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 8 7 9 2 include/linux/pci.h:773 (set (reg:SI 2 r2)
        (const_int 64 [0x40])) 167 {*arm_movsi_insn} (nil))

(insn:TI 9 8 6 2 include/linux/pci.h:773 (set (reg:SI 3 r3)
        (const_int -2147483648 [0xffffffff80000000])) 167 {*arm_movsi_insn} (nil))

(insn 6 9 24 2 include/linux/pci.h:773 (set (reg:SI 0 r0)
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 0 r0 [orig:133 dev ] [133])
                (const_int 8 [0x8])) [0 <variable>.bus+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(note 24 6 21 2 ( dev (nil)) NOTE_INSN_VAR_LOCATION)

(note 21 24 22 2 NOTE_INSN_EPILOGUE_BEG)

(insn:TI 22 21 10 2 arch/arm/kernel/bios32.c:188 (parallel [
            (unspec:SI [
                    (reg:SI 14 lr)
                ] 6)
            (unspec_volatile [
                    (return)
                ] 1)
        ]) 322 {sibcall_epilogue} (nil))

(call_insn/j:TI 10 22 11 2 include/linux/pci.h:773 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("pci_bus_write_config_dword") [flags 0x41] <function_decl 0x10f95880 pci_bus_write_config_dword>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_UNUSED (reg:SI 0 r0)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 11 10 19)

(note 19 11 0 NOTE_INSN_DELETED)


;; Function pci_fixup_cy82c693 (pci_fixup_cy82c693)[0:1050] (unlikely executed)


Basic block 2:
IN:
Stack adjustment: 0
Reg 0: dev+0
Variables:
  name: dev
    offset 0
      (reg:SI 0 r0 [ dev ])

OUT:
Stack adjustment: 16
Reg 0: dev+0
Reg 4: dev+0
Variables:
  name: dev
    offset 0
      (reg/v/f:SI 4 r4 [orig:137 dev ] [137])
      (reg:SI 0 r0 [ dev ])


Basic block 3:
IN:
Stack adjustment: 16
Reg 0: dev+0
Reg 4: dev+0
Variables:
  name: dev
    offset 0
      (reg/v/f:SI 4 r4 [orig:137 dev ] [137])
      (reg:SI 0 r0 [ dev ])

OUT:
Stack adjustment: 16
Reg 4: dev+0
Reg 5: base1+0
Variables:
  name: base1
    offset 0
      (reg/v:SI 5 r5 [orig:133 base1 ] [133])
  name: dev
    offset 0
      (reg/v/f:SI 4 r4 [orig:137 dev ] [137])


Basic block 4:
IN:
Stack adjustment: 16
Reg 0: dev+0
Reg 4: dev+0
Variables:
  name: dev
    offset 0
      (reg/v/f:SI 4 r4 [orig:137 dev ] [137])
      (reg:SI 0 r0 [ dev ])

OUT:
Stack adjustment: 16
Reg 0: dev+0
Reg 4: dev+0
Variables:
  name: dev
    offset 0
      (reg/f:SI 0 r0 [orig:137 dev ] [137])
      (reg/v/f:SI 4 r4 [orig:137 dev ] [137])


Basic block 5:
IN:
Stack adjustment: 16
Reg 0: dev+0
Reg 4: dev+0
Variables:
  name: dev
    offset 0
      (reg/f:SI 0 r0 [orig:137 dev ] [137])
      (reg/v/f:SI 4 r4 [orig:137 dev ] [137])

OUT:
Stack adjustment: 16
Reg 4: dev+0
Variables:
  name: dev
    offset 0
      (reg/v/f:SI 4 r4 [orig:137 dev ] [137])


6 basic blocks, 7 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, probably never executed.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(13){ }d-1(14){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, probably never executed.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  def 	 2 [r2] 3 [r3] 4 [r4] 13 [sp] 24 [cc]
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 4 [r4] 13 [sp] 24 [cc]
;; live  kill	

Successors:  3 [28.0%]  (fallthru) 4 [72.0%] 
;; lr  out 	 0 [r0] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 2800, probably never executed.
Predecessors:  2 [28.0%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 3 [r3] 4 [r4] 6 [r6] 13 [sp]
;; lr  use 	 0 [r0] 3 [r3] 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 3 [r3] 4 [r4] 6 [r6] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 24 [cc]
;; live  kill	 14 [lr]

Successors:  EXIT [100.0%] 
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp]


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 7200, probably never executed.
Predecessors:  2 [72.0%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 1 [r1] 24 [cc]
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  gen 	 1 [r1] 24 [cc]
;; live  kill	

Successors:  5 [39.0%]  (fallthru) EXIT [61.0%] 
;; lr  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]


Basic block 5 , prev 4, next 1, loop_depth 0, count 0, freq 2807, probably never executed.
Predecessors:  4 [39.0%]  (fallthru)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	 14 [lr]

Successors:  EXIT [100.0%]  (ab,sibcall)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp]


Basic block 1 , prev 5, loop_depth 0, count 0, freq 10000, probably never executed.
Predecessors:  5 [100.0%]  (ab,sibcall) 3 [100.0%]  4 [61.0%] 
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(4){ }u-1(5){ }u-1(6){ }u-1(13){ }u-1(14){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  def 	
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	




pci_fixup_cy82c693

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;;  exit block uses 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={15d,13u} r1={15d,8u} r2={16d,8u} r3={19d,17u} r4={2d,18u} r5={2d,3u} r6={1d,2u} r12={7d} r13={2d,13u} r14={7d,3u} r15={7d} r16={7d} r17={7d} r18={7d} r19={7d} r20={7d} r21={7d} r22={7d} r23={7d} r24={10d,4u} r27={7d} r28={7d} r29={7d} r30={7d} r31={7d} r32={7d} r33={7d} r34={7d} r35={7d} r36={7d} r37={7d} r38={7d} r39={7d} r40={7d} r41={7d} r42={7d} r43={7d} r44={7d} r45={7d} r46={7d} r47={7d} r48={7d} r49={7d} r50={7d} r51={7d} r52={7d} r53={7d} r54={7d} r55={7d} r56={7d} r57={7d} r58={7d} r59={7d} r60={7d} r61={7d} r62={7d} r63={7d} r64={7d} r65={7d} r66={7d} r67={7d} r68={7d} r69={7d} r70={7d} r71={7d} r72={7d} r73={7d} r74={7d} r75={7d} r76={7d} r77={7d} r78={7d} r79={7d} r80={7d} r81={7d} r82={7d} r83={7d} r84={7d} r85={7d} r86={7d} r87={7d} r88={7d} r89={7d} r90={7d} r91={7d} r92={7d} r93={7d} r94={7d} r95={7d} r96={7d} r97={7d} r98={7d} r99={7d} r100={7d} r101={7d} r102={7d} r103={7d} r104={7d} r105={7d} r106={7d} r107={7d} r108={7d} r109={7d} r110={7d} r111={7d} r112={7d} r113={7d} r114={7d} r115={7d} r116={7d} r117={7d} r118={7d} r119={7d} r120={7d} r121={7d} r122={7d} r123={7d} r124={7d} r125={7d} r126={7d} r127={7d} 
;;    total ref usage 955{866d,89u,0e} in 56{49 regular + 7 call} insns.
(note 1 0 113 NOTE_INSN_DELETED)

(note 113 1 4 2 ( dev (expr_list:REG_DEP_TRUE (reg:SI 0 r0 [ dev ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  def 	 2 [r2] 3 [r3] 4 [r4] 13 [sp] 24 [cc]
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 4 [r4] 13 [sp] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 113 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 7 2 NOTE_INSN_FUNCTION_BEG)

(note 7 3 105 2 NOTE_INSN_DELETED)

(insn/f:TI 105 7 106 2 arch/arm/kernel/bios32.c:208 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 4 r4)
                    ] 2))
            (use (reg:SI 5 r5))
            (use (reg:SI 6 r6))
            (use (reg:SI 14 lr))
        ]) 327 {*push_multi} (expr_list:REG_DEAD (reg:SI 4 r4)
        (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                    (set/f (reg/f:SI 13 sp)
                        (plus:SI (reg/f:SI 13 sp)
                            (const_int -16 [0xfffffffffffffff0])))
                    (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                        (reg:SI 4 r4))
                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                (const_int 4 [0x4])) [0 S4 A32])
                        (reg:SI 5 r5))
                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                (const_int 8 [0x8])) [0 S4 A32])
                        (reg:SI 6 r6))
                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                (const_int 12 [0xc])) [0 S4 A32])
                        (reg:SI 14 lr))
                ])
            (nil))))

(note 106 105 6 2 NOTE_INSN_PROLOGUE_END)

(insn:TI 6 106 102 2 arch/arm/kernel/bios32.c:209 (set (reg:SI 3 r3 [orig:136 D.18490 ] [136])
        (mem/s/j:SI (plus:SI (reg/f:SI 0 r0 [orig:137 dev ] [137])
                (const_int 40 [0x28])) [0 <variable>.class+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn:TI 102 6 2 2 arch/arm/kernel/bios32.c:209 (set (reg:SI 2 r2 [139])
        (const_int 257 [0x101])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 257 [0x101])
        (nil)))

(insn 2 102 9 2 arch/arm/kernel/bios32.c:208 (set (reg/v/f:SI 4 r4 [orig:137 dev ] [137])
        (reg:SI 0 r0 [ dev ])) 167 {*arm_movsi_insn} (nil))

(insn:TI 9 2 10 2 arch/arm/kernel/bios32.c:209 (set (reg:CC_SWP 24 cc)
        (compare:CC_SWP (lshiftrt:SI (reg:SI 3 r3 [orig:136 D.18490 ] [136])
                (const_int 8 [0x8]))
            (reg:SI 2 r2 [139]))) 221 {*arm_cmpsi_shiftsi_swp} (expr_list:REG_DEAD (reg:SI 2 r2 [139])
        (nil)))

(jump_insn:TI 10 9 114 2 arch/arm/kernel/bios32.c:209 (set (pc)
        (if_then_else (ne (reg:CC_SWP 24 cc)
                (const_int 0 [0x0]))
            (label_ref 52)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_SWP 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 0 [r0] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]


;; Succ edge  3 [28.0%]  (fallthru)
;; Succ edge  4 [72.0%] 

(note 114 10 11 3 ( dev (expr_list:REG_DEP_TRUE (reg/v/f:SI 4 r4 [orig:137 dev ] [137])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 3 [r3] 4 [r4] 6 [r6] 13 [sp]
;; lr  use 	 0 [r0] 3 [r3] 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 3 [r3] 4 [r4] 6 [r6] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  2 [28.0%]  (fallthru)
(note 11 114 26 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 26 11 32 3 NOTE_INSN_DELETED)

(note 32 26 12 3 NOTE_INSN_DELETED)

(insn:TI 12 32 28 3 arch/arm/kernel/bios32.c:212 (set (reg:SI 3 r3 [140])
        (and:SI (reg:SI 3 r3 [orig:136 D.18490 ] [136])
            (const_int 128 [0x80]))) 67 {*arm_andsi3_insn} (nil))

(insn 28 12 13 3 include/linux/pci.h:773 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg/f:SI 0 r0 [orig:137 dev ] [137])
                (const_int 28 [0x1c])) [0 <variable>.devfn+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn:TI 13 28 29 3 arch/arm/kernel/bios32.c:212 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [140])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [140])
        (nil)))

(insn 29 13 97 3 include/linux/pci.h:773 (set (reg:SI 2 r2)
        (const_int 16 [0x10])) 167 {*arm_movsi_insn} (nil))

(insn:TI 97 29 115 3 arch/arm/kernel/bios32.c:217 (set (reg/v:SI 3 r3 [orig:134 base0 ] [134])
        (if_then_else:SI (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (const_int 496 [0x1f0])
            (const_int 368 [0x170]))) 240 {*movsicc_insn} (nil))

(note 115 97 95 3 ( base0 (expr_list:REG_DEP_TRUE (reg/v:SI 3 r3 [orig:134 base0 ] [134])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn 95 115 116 3 arch/arm/kernel/bios32.c:217 (set (reg/v:SI 5 r5 [orig:133 base1 ] [133])
        (if_then_else:SI (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (const_int 1012 [0x3f4])
            (const_int 884 [0x374]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(note 116 95 30 3 ( base1 (expr_list:REG_DEP_TRUE (reg/v:SI 5 r5 [orig:133 base1 ] [133])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 30 116 117 3 include/linux/pci.h:773 (set (reg:SI 3 r3)
        (ior:SI (reg/v:SI 3 r3 [orig:134 base0 ] [134])
            (const_int 1 [0x1]))) 89 {*arm_iorsi3} (nil))

(note 117 30 27 3 ( base0 (nil)) NOTE_INSN_VAR_LOCATION)

(insn 27 117 31 3 include/linux/pci.h:773 (set (reg:SI 0 r0)
        (mem/s/f/j:SI (plus:SI (reg/f:SI 0 r0 [orig:137 dev ] [137])
                (const_int 8 [0x8])) [0 <variable>.bus+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(call_insn:TI 31 27 36 3 include/linux/pci.h:773 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("pci_bus_write_config_dword") [flags 0x41] <function_decl 0x10f95880 pci_bus_write_config_dword>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_UNUSED (reg:SI 0 r0)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 36 31 33 3 include/linux/pci.h:773 (set (reg:SI 3 r3)
        (ior:SI (reg/v:SI 5 r5 [orig:133 base1 ] [133])
            (const_int 1 [0x1]))) 89 {*arm_iorsi3} (nil))

(insn:TI 33 36 35 3 include/linux/pci.h:773 (set (reg:SI 0 r0)
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:137 dev ] [137])
                (const_int 8 [0x8])) [0 <variable>.bus+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 35 33 34 3 include/linux/pci.h:773 (set (reg:SI 2 r2)
        (const_int 20 [0x14])) 167 {*arm_movsi_insn} (nil))

(insn:TI 34 35 37 3 include/linux/pci.h:773 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:137 dev ] [137])
                (const_int 28 [0x1c])) [0 <variable>.devfn+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn:TI 37 34 38 3 include/linux/pci.h:773 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("pci_bus_write_config_dword") [flags 0x41] <function_decl 0x10f95880 pci_bus_write_config_dword>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_UNUSED (reg:SI 0 r0)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 38 37 49 3 arch/arm/kernel/bios32.c:225 (set (reg:SI 3 r3 [143])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 0 [0x0])
        (nil)))

(insn:TI 49 38 39 3 arch/arm/kernel/bios32.c:231 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:137 dev ] [137])
                (const_int 504 [0x1f8])) [0 <variable>.flags+0 S4 A64])
        (reg:SI 3 r3 [143])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn:TI 39 49 41 3 arch/arm/kernel/bios32.c:225 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:137 dev ] [137])
                (const_int 464 [0x1d0])) [0 <variable>.start+0 S4 A64])
        (reg:SI 3 r3 [143])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn:TI 41 39 43 3 arch/arm/kernel/bios32.c:226 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:137 dev ] [137])
                (const_int 468 [0x1d4])) [0 <variable>.end+0 S4 A32])
        (reg:SI 3 r3 [143])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn:TI 43 41 45 3 arch/arm/kernel/bios32.c:227 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:137 dev ] [137])
                (const_int 476 [0x1dc])) [0 <variable>.flags+0 S4 A32])
        (reg:SI 3 r3 [143])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn:TI 45 43 47 3 arch/arm/kernel/bios32.c:229 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:137 dev ] [137])
                (const_int 492 [0x1ec])) [0 <variable>.start+0 S4 A32])
        (reg:SI 3 r3 [143])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn:TI 47 45 107 3 arch/arm/kernel/bios32.c:230 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:137 dev ] [137])
                (const_int 496 [0x1f0])) [0 <variable>.end+0 S4 A64])
        (reg:SI 3 r3 [143])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [143])
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(jump_insn:TI 107 47 99 3 (return) 260 {return} (nil))
;; End of basic block 3 -> ( 1)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp]


;; Succ edge  EXIT [100.0%] 

(barrier 99 107 118)

(note 118 99 119 4 ( base1 (nil)) NOTE_INSN_VAR_LOCATION)

(note 119 118 52 4 ( dev (expr_list:REG_DEP_TRUE (reg/v/f:SI 4 r4 [orig:137 dev ] [137])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 1 [r1] 24 [cc]
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  gen 	 1 [r1] 24 [cc]
;; live  kill	

;; Pred edge  2 [72.0%] 
(code_label 52 119 53 4 40 "" [1 uses])

(note 53 52 55 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 55 53 54 4 NOTE_INSN_DELETED)

(insn:TI 54 55 56 4 arch/arm/kernel/bios32.c:232 (set (reg:SI 1 r1 [orig:135 D.18501 ] [135])
        (mem/s/j:SI (plus:SI (reg/f:SI 0 r0 [orig:137 dev ] [137])
                (const_int 28 [0x1c])) [0 <variable>.devfn+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn:TI 56 54 57 4 arch/arm/kernel/bios32.c:232 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 1 r1 [orig:135 D.18501 ] [135])
                (const_int 3 [0x3])
                (const_int 0 [0x0]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn:TI 57 56 120 4 arch/arm/kernel/bios32.c:232 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (return)
            (pc))) 261 {*cond_return} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 6102 [0x17d6])
            (nil))))
;; End of basic block 4 -> ( 5 1)
;; lr  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]


;; Succ edge  5 [39.0%]  (fallthru)
;; Succ edge  EXIT [61.0%] 

(note 120 57 58 5 ( dev (expr_list:REG_DEP_TRUE (reg/f:SI 0 r0 [orig:137 dev ] [137])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	 14 [lr]

;; Pred edge  4 [39.0%]  (fallthru)
(note 58 120 61 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn:TI 61 58 62 5 include/linux/pci.h:764 (set (reg:SI 2 r2)
        (const_int 75 [0x4b])) 167 {*arm_movsi_insn} (nil))

(insn 62 61 59 5 include/linux/pci.h:764 (set (reg:SI 3 r3)
        (const_int 14 [0xe])) 167 {*arm_movsi_insn} (nil))

(insn:TI 59 62 121 5 include/linux/pci.h:764 (set (reg:SI 0 r0)
        (mem/s/f/j:SI (plus:SI (reg/f:SI 0 r0 [orig:137 dev ] [137])
                (const_int 8 [0x8])) [0 <variable>.bus+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(note 121 59 63 5 ( dev (expr_list:REG_DEP_TRUE (reg/v/f:SI 4 r4 [orig:137 dev ] [137])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(call_insn:TI 63 121 65 5 include/linux/pci.h:764 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("pci_bus_write_config_byte") [flags 0x41] <function_decl 0x10f95780 pci_bus_write_config_byte>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_UNUSED (reg:SI 0 r0)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 65 63 66 5 include/linux/pci.h:764 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:137 dev ] [137])
                (const_int 28 [0x1c])) [0 <variable>.devfn+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn:TI 66 65 67 5 include/linux/pci.h:764 (set (reg:SI 2 r2)
        (const_int 76 [0x4c])) 167 {*arm_movsi_insn} (nil))

(insn 67 66 64 5 include/linux/pci.h:764 (set (reg:SI 3 r3)
        (const_int 15 [0xf])) 167 {*arm_movsi_insn} (nil))

(insn:TI 64 67 68 5 include/linux/pci.h:764 (set (reg:SI 0 r0)
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:137 dev ] [137])
                (const_int 8 [0x8])) [0 <variable>.bus+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(call_insn:TI 68 64 70 5 include/linux/pci.h:764 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("pci_bus_write_config_byte") [flags 0x41] <function_decl 0x10f95780 pci_bus_write_config_byte>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_UNUSED (reg:SI 0 r0)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 70 68 71 5 include/linux/pci.h:764 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:137 dev ] [137])
                (const_int 28 [0x1c])) [0 <variable>.devfn+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn:TI 71 70 72 5 include/linux/pci.h:764 (set (reg:SI 2 r2)
        (const_int 77 [0x4d])) 167 {*arm_movsi_insn} (nil))

(insn 72 71 69 5 include/linux/pci.h:764 (set (reg:SI 3 r3)
        (const_int 65 [0x41])) 167 {*arm_movsi_insn} (nil))

(insn:TI 69 72 73 5 include/linux/pci.h:764 (set (reg:SI 0 r0)
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:137 dev ] [137])
                (const_int 8 [0x8])) [0 <variable>.bus+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(call_insn:TI 73 69 75 5 include/linux/pci.h:764 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("pci_bus_write_config_byte") [flags 0x41] <function_decl 0x10f95780 pci_bus_write_config_byte>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_UNUSED (reg:SI 0 r0)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 75 73 76 5 include/linux/pci.h:764 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:137 dev ] [137])
                (const_int 28 [0x1c])) [0 <variable>.devfn+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn:TI 76 75 77 5 include/linux/pci.h:764 (set (reg:SI 2 r2)
        (const_int 68 [0x44])) 167 {*arm_movsi_insn} (nil))

(insn 77 76 74 5 include/linux/pci.h:764 (set (reg:SI 3 r3)
        (const_int 23 [0x17])) 167 {*arm_movsi_insn} (nil))

(insn:TI 74 77 78 5 include/linux/pci.h:764 (set (reg:SI 0 r0)
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:137 dev ] [137])
                (const_int 8 [0x8])) [0 <variable>.bus+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(call_insn:TI 78 74 80 5 include/linux/pci.h:764 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("pci_bus_write_config_byte") [flags 0x41] <function_decl 0x10f95780 pci_bus_write_config_byte>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_UNUSED (reg:SI 0 r0)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 80 78 79 5 include/linux/pci.h:764 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:137 dev ] [137])
                (const_int 28 [0x1c])) [0 <variable>.devfn+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn:TI 79 80 81 5 include/linux/pci.h:764 (set (reg:SI 0 r0)
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:137 dev ] [137])
                (const_int 8 [0x8])) [0 <variable>.bus+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 81 79 82 5 include/linux/pci.h:764 (set (reg:SI 2 r2)
        (const_int 69 [0x45])) 167 {*arm_movsi_insn} (nil))

(insn:TI 82 81 110 5 include/linux/pci.h:764 (set (reg:SI 3 r3)
        (const_int 3 [0x3])) 167 {*arm_movsi_insn} (nil))

(note 110 82 111 5 NOTE_INSN_EPILOGUE_BEG)

(insn:TI 111 110 83 5 arch/arm/kernel/bios32.c:254 (parallel [
            (unspec:SI [
                    (reg:SI 14 lr)
                ] 6)
            (unspec_volatile [
                    (return)
                ] 1)
        ]) 322 {sibcall_epilogue} (expr_list:REG_DEAD (reg:SI 14 lr)
        (nil)))

(call_insn/j:TI 83 111 84 5 include/linux/pci.h:764 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("pci_bus_write_config_byte") [flags 0x41] <function_decl 0x10f95780 pci_bus_write_config_byte>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_UNUSED (reg:SI 0 r0)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 5 -> ( 1)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 84 83 101)

(note 101 84 103 NOTE_INSN_DELETED)

(note 103 101 0 NOTE_INSN_DELETED)


;; Function pci_fixup_83c553 (pci_fixup_83c553)[0:1045] (unlikely executed)


Basic block 2:
IN:
Stack adjustment: 0
Reg 0: dev+0
Variables:
  name: dev
    offset 0
      (reg:SI 0 r0 [ dev ])

OUT:
Stack adjustment: 16
Reg 4: dev+0
Variables:
  name: dev
    offset 0
      (reg/v/f:SI 4 r4 [orig:136 dev ] [136])


Basic block 3:
IN:
Stack adjustment: 16
Reg 4: dev+0
Variables:
  name: dev
    offset 0
      (reg/v/f:SI 4 r4 [orig:136 dev ] [136])

OUT:
Stack adjustment: 16
Reg 4: dev+0
Variables:
  name: dev
    offset 0
      (reg/v/f:SI 4 r4 [orig:136 dev ] [136])


Basic block 4:
IN:
Stack adjustment: 16
Reg 4: dev+0
Variables:
  name: dev
    offset 0
      (reg/v/f:SI 4 r4 [orig:136 dev ] [136])

OUT:
Stack adjustment: 16
Reg 4: dev+0
Variables:
  name: dev
    offset 0
      (reg/v/f:SI 4 r4 [orig:136 dev ] [136])


5 basic blocks, 5 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, probably never executed.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(13){ }d-1(14){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, probably never executed.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 12 [ip] 13 [sp] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp] 24 [cc]
;; live  kill	 14 [lr]

Successors:  3 [78.3%]  (fallthru) 4 [21.6%] 
;; lr  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 13 [sp]


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 7835, probably never executed.
Predecessors:  2 [78.3%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  gen 	
;; live  kill	 14 [lr]

Successors:  4 [100.0%]  (fallthru)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp]


Basic block 4 , prev 3, next 1, loop_depth 0, count 0, freq 10000, probably never executed.
Predecessors:  2 [21.6%]  3 [100.0%]  (fallthru)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 2 [r2] 3 [r3]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3]
;; live  kill	

Successors:  EXIT [100.0%] 
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp]


Basic block 1 , prev 4, loop_depth 0, count 0, freq 10000, probably never executed.
Predecessors:  4 [100.0%] 
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(4){ }u-1(5){ }u-1(6){ }u-1(13){ }u-1(14){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  def 	
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	




pci_fixup_83c553

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;;  exit block uses 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={21d,13u} r1={22d,11u} r2={21d,10u} r3={25d,16u} r4={2d,22u,2d} r5={2d,5u} r6={1d,2u} r12={10d} r13={2d,15u} r14={11d,2u} r15={10d} r16={10d} r17={10d} r18={10d} r19={10d} r20={10d} r21={10d} r22={10d} r23={10d} r24={11d,1u} r27={10d} r28={10d} r29={10d} r30={10d} r31={10d} r32={10d} r33={10d} r34={10d} r35={10d} r36={10d} r37={10d} r38={10d} r39={10d} r40={10d} r41={10d} r42={10d} r43={10d} r44={10d} r45={10d} r46={10d} r47={10d} r48={10d} r49={10d} r50={10d} r51={10d} r52={10d} r53={10d} r54={10d} r55={10d} r56={10d} r57={10d} r58={10d} r59={10d} r60={10d} r61={10d} r62={10d} r63={10d} r64={10d} r65={10d} r66={10d} r67={10d} r68={10d} r69={10d} r70={10d} r71={10d} r72={10d} r73={10d} r74={10d} r75={10d} r76={10d} r77={10d} r78={10d} r79={10d} r80={10d} r81={10d} r82={10d} r83={10d} r84={10d} r85={10d} r86={10d} r87={10d} r88={10d} r89={10d} r90={10d} r91={10d} r92={10d} r93={10d} r94={10d} r95={10d} r96={10d} r97={10d} r98={10d} r99={10d} r100={10d} r101={10d} r102={10d} r103={10d} r104={10d} r105={10d} r106={10d} r107={10d} r108={10d} r109={10d} r110={10d} r111={10d} r112={10d} r113={10d} r114={10d} r115={10d} r116={10d} r117={10d} r118={10d} r119={10d} r120={10d} r121={10d} r122={10d} r123={10d} r124={10d} r125={10d} r126={10d} r127={10d} 
;;    total ref usage 1327{1228d,97u,2e} in 65{55 regular + 10 call} insns.
(note 1 0 91 NOTE_INSN_DELETED)

(note 91 1 4 2 ( dev (expr_list:REG_DEP_TRUE (reg:SI 0 r0 [ dev ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 12 [ip] 13 [sp] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 91 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 86 2 NOTE_INSN_FUNCTION_BEG)

(insn/f:TI 86 3 87 2 arch/arm/kernel/bios32.c:82 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 4 r4)
                    ] 2))
            (use (reg:SI 5 r5))
            (use (reg:SI 6 r6))
            (use (reg:SI 14 lr))
        ]) 327 {*push_multi} (expr_list:REG_DEAD (reg:SI 14 lr)
        (expr_list:REG_DEAD (reg:SI 5 r5)
            (expr_list:REG_DEAD (reg:SI 4 r4)
                (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                            (set/f (reg/f:SI 13 sp)
                                (plus:SI (reg/f:SI 13 sp)
                                    (const_int -16 [0xfffffffffffffff0])))
                            (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                                (reg:SI 4 r4))
                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                        (const_int 4 [0x4])) [0 S4 A32])
                                (reg:SI 5 r5))
                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                        (const_int 8 [0x8])) [0 S4 A32])
                                (reg:SI 6 r6))
                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                        (const_int 12 [0xc])) [0 S4 A32])
                                (reg:SI 14 lr))
                        ])
                    (nil))))))

(note 87 86 2 2 NOTE_INSN_PROLOGUE_END)

(insn:TI 2 87 9 2 arch/arm/kernel/bios32.c:82 (set (reg/v/f:SI 4 r4 [orig:136 dev ] [136])
        (reg:SI 0 r0 [ dev ])) 167 {*arm_movsi_insn} (nil))

(insn:TI 9 2 7 2 include/linux/pci.h:773 (set (reg:SI 3 r3)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 7 9 8 2 include/linux/pci.h:773 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg/f:SI 0 r0 [orig:136 dev ] [136])
                (const_int 28 [0x1c])) [0 <variable>.devfn+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn:TI 8 7 6 2 include/linux/pci.h:773 (set (reg:SI 2 r2)
        (const_int 16 [0x10])) 167 {*arm_movsi_insn} (nil))

(insn 6 8 92 2 include/linux/pci.h:773 (set (reg:SI 0 r0)
        (mem/s/f/j:SI (plus:SI (reg/f:SI 0 r0 [orig:136 dev ] [136])
                (const_int 8 [0x8])) [0 <variable>.bus+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(note 92 6 20 2 ( dev (expr_list:REG_DEP_TRUE (reg/v/f:SI 4 r4 [orig:136 dev ] [136])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 20 92 10 2 arch/arm/kernel/bios32.c:90 (set (reg:SI 5 r5 [140])
        (reg:SI 3 r3)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 0 [0x0])
        (nil)))

(call_insn 10 20 12 2 include/linux/pci.h:773 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("pci_bus_write_config_dword") [flags 0x41] <function_decl 0x10f95880 pci_bus_write_config_dword>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_UNUSED (reg:SI 0 r0)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn:TI 12 10 13 2 include/linux/pci.h:768 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:136 dev ] [136])
                (const_int 28 [0x1c])) [0 <variable>.devfn+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 13 12 11 2 include/linux/pci.h:768 (set (reg:SI 2 r2)
        (const_int 4 [0x4])) 167 {*arm_movsi_insn} (nil))

(insn:TI 11 13 14 2 include/linux/pci.h:768 (set (reg:SI 0 r0)
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:136 dev ] [136])
                (const_int 8 [0x8])) [0 <variable>.bus+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 14 11 15 2 include/linux/pci.h:768 (set (reg:SI 3 r3)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(call_insn:TI 15 14 16 2 include/linux/pci.h:768 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("pci_bus_write_config_word") [flags 0x41] <function_decl 0x10f95800 pci_bus_write_config_word>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_UNUSED (reg:SI 0 r0)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 16 15 17 2 arch/arm/kernel/bios32.c:89 (set (reg:SI 0 r0 [orig:137 <variable>.end ] [137])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:136 dev ] [136])
                (const_int 468 [0x1d4])) [0 <variable>.end+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:136 dev ] [136])
                (const_int 468 [0x1d4])) [0 <variable>.end+0 S4 A32])
        (nil)))

(insn:TI 17 16 24 2 arch/arm/kernel/bios32.c:89 (set (reg:SI 1 r1 [orig:138 <variable>.start ] [138])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:136 dev ] [136])
                (const_int 464 [0x1d0])) [0 <variable>.start+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 24 17 21 2 include/linux/pci.h:764 (set (reg:SI 2 r2)
        (const_int 72 [0x48])) 167 {*arm_movsi_insn} (nil))

(insn:TI 21 24 25 2 arch/arm/kernel/bios32.c:90 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:136 dev ] [136])
                (const_int 464 [0x1d0])) [0 <variable>.start+0 S4 A64])
        (reg:SI 5 r5 [140])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 25 21 18 2 include/linux/pci.h:764 (set (reg:SI 3 r3)
        (const_int 255 [0xff])) 167 {*arm_movsi_insn} (nil))

(insn:TI 18 25 22 2 arch/arm/kernel/bios32.c:89 (set (reg:SI 1 r1 [139])
        (minus:SI (reg:SI 0 r0 [orig:137 <variable>.end ] [137])
            (reg:SI 1 r1 [orig:138 <variable>.start ] [138]))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [orig:137 <variable>.end ] [137])
        (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:136 dev ] [136])
                    (const_int 468 [0x1d4])) [0 <variable>.end+0 S4 A32])
            (nil))))

(insn 22 18 19 2 include/linux/pci.h:764 (set (reg:SI 0 r0)
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:136 dev ] [136])
                (const_int 8 [0x8])) [0 <variable>.bus+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn:TI 19 22 23 2 arch/arm/kernel/bios32.c:89 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:136 dev ] [136])
                (const_int 468 [0x1d4])) [0 <variable>.end+0 S4 A32])
        (reg:SI 1 r1 [139])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [139])
        (nil)))

(insn:TI 23 19 26 2 include/linux/pci.h:764 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:136 dev ] [136])
                (const_int 28 [0x1c])) [0 <variable>.devfn+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn:TI 26 23 28 2 include/linux/pci.h:764 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("pci_bus_write_config_byte") [flags 0x41] <function_decl 0x10f95780 pci_bus_write_config_byte>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_UNUSED (reg:SI 0 r0)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 28 26 27 2 include/linux/pci.h:764 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:136 dev ] [136])
                (const_int 28 [0x1c])) [0 <variable>.devfn+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn:TI 27 28 29 2 include/linux/pci.h:764 (set (reg:SI 0 r0)
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:136 dev ] [136])
                (const_int 8 [0x8])) [0 <variable>.bus+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 29 27 30 2 include/linux/pci.h:764 (set (reg:SI 2 r2)
        (const_int 66 [0x42])) 167 {*arm_movsi_insn} (nil))

(insn:TI 30 29 31 2 include/linux/pci.h:764 (set (reg:SI 3 r3)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(call_insn:TI 31 30 33 2 include/linux/pci.h:764 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("pci_bus_write_config_byte") [flags 0x41] <function_decl 0x10f95780 pci_bus_write_config_byte>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_UNUSED (reg:SI 0 r0)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 33 31 32 2 include/linux/pci.h:764 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:136 dev ] [136])
                (const_int 28 [0x1c])) [0 <variable>.devfn+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn:TI 32 33 34 2 include/linux/pci.h:764 (set (reg:SI 0 r0)
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:136 dev ] [136])
                (const_int 8 [0x8])) [0 <variable>.bus+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 34 32 35 2 include/linux/pci.h:764 (set (reg:SI 2 r2)
        (const_int 64 [0x40])) 167 {*arm_movsi_insn} (nil))

(insn:TI 35 34 36 2 include/linux/pci.h:764 (set (reg:SI 3 r3)
        (const_int 34 [0x22])) 167 {*arm_movsi_insn} (nil))

(call_insn:TI 36 35 38 2 include/linux/pci.h:764 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("pci_bus_write_config_byte") [flags 0x41] <function_decl 0x10f95780 pci_bus_write_config_byte>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_UNUSED (reg:SI 0 r0)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 38 36 37 2 include/linux/pci.h:764 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:136 dev ] [136])
                (const_int 28 [0x1c])) [0 <variable>.devfn+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn:TI 37 38 39 2 include/linux/pci.h:764 (set (reg:SI 0 r0)
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:136 dev ] [136])
                (const_int 8 [0x8])) [0 <variable>.bus+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 39 37 40 2 include/linux/pci.h:764 (set (reg:SI 2 r2)
        (const_int 131 [0x83])) 167 {*arm_movsi_insn} (nil))

(insn:TI 40 39 41 2 include/linux/pci.h:764 (set (reg:SI 3 r3)
        (const_int 2 [0x2])) 167 {*arm_movsi_insn} (nil))

(call_insn:TI 41 40 43 2 include/linux/pci.h:764 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("pci_bus_write_config_byte") [flags 0x41] <function_decl 0x10f95780 pci_bus_write_config_byte>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_UNUSED (reg:SI 0 r0)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 43 41 42 2 include/linux/pci.h:764 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:136 dev ] [136])
                (const_int 28 [0x1c])) [0 <variable>.devfn+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn:TI 42 43 44 2 include/linux/pci.h:764 (set (reg:SI 0 r0)
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:136 dev ] [136])
                (const_int 8 [0x8])) [0 <variable>.bus+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 44 42 45 2 include/linux/pci.h:764 (set (reg:SI 2 r2)
        (const_int 128 [0x80])) 167 {*arm_movsi_insn} (nil))

(insn:TI 45 44 46 2 include/linux/pci.h:764 (set (reg:SI 3 r3)
        (const_int 17 [0x11])) 167 {*arm_movsi_insn} (nil))

(call_insn:TI 46 45 50 2 include/linux/pci.h:764 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("pci_bus_write_config_byte") [flags 0x41] <function_decl 0x10f95780 pci_bus_write_config_byte>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_UNUSED (reg:SI 0 r0)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 50 46 48 2 include/linux/pci.h:764 (set (reg:SI 3 r3)
        (reg:SI 5 r5 [140])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn:TI 48 50 49 2 include/linux/pci.h:764 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:136 dev ] [136])
                (const_int 28 [0x1c])) [0 <variable>.devfn+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 49 48 47 2 include/linux/pci.h:764 (set (reg:SI 2 r2)
        (const_int 129 [0x81])) 167 {*arm_movsi_insn} (nil))

(insn:TI 47 49 51 2 include/linux/pci.h:764 (set (reg:SI 0 r0)
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:136 dev ] [136])
                (const_int 8 [0x8])) [0 <variable>.bus+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(call_insn:TI 51 47 53 2 include/linux/pci.h:764 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("pci_bus_write_config_byte") [flags 0x41] <function_decl 0x10f95780 pci_bus_write_config_byte>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_UNUSED (reg:SI 0 r0)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 53 51 52 2 include/linux/pci.h:768 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:136 dev ] [136])
                (const_int 28 [0x1c])) [0 <variable>.devfn+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn:TI 52 53 54 2 include/linux/pci.h:768 (set (reg:SI 0 r0)
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:136 dev ] [136])
                (const_int 8 [0x8])) [0 <variable>.bus+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 54 52 55 2 include/linux/pci.h:768 (set (reg:SI 2 r2)
        (const_int 68 [0x44])) 167 {*arm_movsi_insn} (nil))

(insn:TI 55 54 56 2 include/linux/pci.h:768 (set (reg:SI 3 r3)
        (const_int 45056 [0xb000])) 167 {*arm_movsi_insn} (nil))

(call_insn:TI 56 55 57 2 include/linux/pci.h:768 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("pci_bus_write_config_word") [flags 0x41] <function_decl 0x10f95800 pci_bus_write_config_word>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_UNUSED (reg:SI 0 r0)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn:TI 57 56 58 2 arch/arm/kernel/bios32.c:129 (parallel [
            (asm_operands/v ("dsb") ("") 0 []
                 [] 8785836)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn:TI 58 57 59 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:94 (set (reg/f:SI 3 r3 [141])
        (symbol_ref:SI ("outer_cache") [flags 0xc0] <var_decl 0x512cf6c0 outer_cache>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("outer_cache") [flags 0xc0] <var_decl 0x512cf6c0 outer_cache>)
        (nil)))

(insn:TI 59 58 60 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:94 (set (reg/f:SI 3 r3 [orig:133 D.19037 ] [133])
        (mem/s/f/j/c:SI (plus:SI (reg/f:SI 3 r3 [141])
                (const_int 24 [0x18])) [0 outer_cache.sync+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/f/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("outer_cache") [flags 0xc0] <var_decl 0x512cf6c0 outer_cache>)
                    (const_int 24 [0x18]))) [0 outer_cache.sync+0 S4 A32])
        (nil)))

(insn:TI 60 59 61 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:94 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 3 r3 [orig:133 D.19037 ] [133])
            (reg:SI 5 r5))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn:TI 61 60 62 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:94 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 64)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2165 [0x875])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 13 [sp]


;; Succ edge  3 [78.3%]  (fallthru)
;; Succ edge  4 [21.6%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  gen 	
;; live  kill	 14 [lr]

;; Pred edge  2 [78.3%]  (fallthru)
(note 62 61 63 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(call_insn:TI 63 62 64 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:95 (parallel [
            (call (mem:SI (reg/f:SI 3 r3 [orig:133 D.19037 ] [133]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 244 {*call_reg_armv5} (expr_list:REG_DEAD (reg/f:SI 3 r3 [orig:133 D.19037 ] [133])
        (nil))
    (nil))
;; End of basic block 3 -> ( 4)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp]


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 2 [r2] 3 [r3]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  2 [21.6%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 64 63 65 4 46 "" [1 uses])

(note 65 64 66 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn:TI 66 65 84 4 arch/arm/kernel/bios32.c:129 (set (reg/f:SI 3 r3 [142])
        (symbol_ref:SI ("tegra_pcie_io_base") [flags 0xc0] <var_decl 0x10ed5660 tegra_pcie_io_base>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("tegra_pcie_io_base") [flags 0xc0] <var_decl 0x10ed5660 tegra_pcie_io_base>)
        (nil)))

(insn 84 66 67 4 arch/arm/kernel/bios32.c:129 (set (reg:SI 2 r2 [145])
        (const_int 8 [0x8])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 8 [0x8])
        (nil)))

(insn:TI 67 84 72 4 arch/arm/kernel/bios32.c:129 (set (reg/f:SI 3 r3 [orig:143 tegra_pcie_io_base ] [143])
        (mem/f/c/i:SI (reg/f:SI 3 r3 [142]) [0 tegra_pcie_io_base+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (symbol_ref:SI ("tegra_pcie_io_base") [flags 0xc0] <var_decl 0x10ed5660 tegra_pcie_io_base>) [0 tegra_pcie_io_base+0 S4 A32])
        (nil)))

(insn:TI 72 67 73 4 arch/arm/kernel/bios32.c:129 (set (mem/v:QI (plus:SI (reg/f:SI 3 r3 [orig:143 tegra_pcie_io_base ] [143])
                (const_int 1233 [0x4d1])) [0 S1 A8])
        (reg:QI 2 r2 [145])) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:QI 2 r2 [145])
        (expr_list:REG_EQUAL (const_int 8 [0x8])
            (nil))))

(insn:TI 73 72 88 4 arch/arm/kernel/bios32.c:129 (set (reg:SI 3 r3 [148])
        (zero_extend:SI (mem/v:QI (plus:SI (reg/f:SI 3 r3 [orig:143 tegra_pcie_io_base ] [143])
                    (const_int 1233 [0x4d1])) [0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_UNUSED (reg:SI 3 r3 [148])
        (nil)))

(note 88 73 89 4 NOTE_INSN_EPILOGUE_BEG)

(jump_insn:TI 89 88 90 4 arch/arm/kernel/bios32.c:130 (return) 260 {return} (nil))
;; End of basic block 4 -> ( 1)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp]


;; Succ edge  EXIT [100.0%] 

(barrier 90 89 83)

(note 83 90 85 NOTE_INSN_DELETED)

(note 85 83 0 NOTE_INSN_DELETED)


;; Function pci_mmap_page_range (pci_mmap_page_range)[0:1066]


Basic block 2:
IN:
Stack adjustment: 0
Reg 0: dev+0
Reg 1: vma+0
Reg 2: mmap_state+0
Reg 3: write_combine+0
Variables:
  name: mmap_state
    offset 0
      (reg:SI 2 r2 [ mmap_state ])
  name: write_combine
    offset 0
      (reg:SI 3 r3 [ write_combine ])
  name: dev
    offset 0
      (reg:SI 0 r0 [ dev ])
  name: vma
    offset 0
      (reg:SI 1 r1 [ vma ])

OUT:
Stack adjustment: 16
Reg 2: mmap_state+0
Reg 12: vma+0
Variables:
  name: mmap_state
    offset 0
      (reg:SI 2 r2 [ mmap_state ])
  name: vma
    offset 0
      (reg/v/f:SI 12 ip [orig:141 vma ] [141])


Basic block 3:
IN:
Stack adjustment: 16
Reg 2: mmap_state+0
Reg 12: vma+0
Variables:
  name: mmap_state
    offset 0
      (reg:SI 2 r2 [ mmap_state ])
  name: vma
    offset 0
      (reg/v/f:SI 12 ip [orig:141 vma ] [141])

OUT:
Stack adjustment: 16


Basic block 4:
IN:
Stack adjustment: 16
Reg 2: mmap_state+0
Reg 12: vma+0
Variables:
  name: mmap_state
    offset 0
      (reg:SI 2 r2 [ mmap_state ])
  name: vma
    offset 0
      (reg/v/f:SI 12 ip [orig:141 vma ] [141])

OUT:
Stack adjustment: 16
Reg 2: mmap_state+0
Reg 12: vma+0
Variables:
  name: mmap_state
    offset 0
      (reg:SI 2 r2 [ mmap_state ])
  name: vma
    offset 0
      (reg/v/f:SI 12 ip [orig:141 vma ] [141])


5 basic blocks, 5 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(13){ }d-1(14){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 13 [sp] 14 [lr]


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 13 [sp] 14 [lr]
;; lr  def 	 3 [r3] 12 [ip] 13 [sp] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 3 [r3] 12 [ip] 13 [sp] 24 [cc]
;; live  kill	

Successors:  3 [1.7%]  (fallthru) 4 [98.3%] 
;; lr  out 	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 12 [ip] 13 [sp] 14 [lr]


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 167, maybe hot.
Predecessors:  2 [1.7%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 3 [r3] 12 [ip] 13 [sp]
;; lr  use 	 1 [r1] 3 [r3] 12 [ip] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 1 [r1] 3 [r3] 12 [ip] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 14 [lr] 24 [cc]
;; live  kill	 14 [lr]

Successors:  4 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]


Basic block 4 , prev 3, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  3 [100.0%]  (fallthru) 2 [98.3%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	
;; live  in  	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

Successors:  EXIT [100.0%] 
;; lr  out 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]


Basic block 1 , prev 4, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  4 [100.0%] 
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(4){ }u-1(13){ }u-1(14){ }}
;; lr  in  	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; lr  def 	
;; live  in  	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	




pci_mmap_page_range

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 12[ip] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={6d,9u} r1={3d,6u} r2={6d,5u} r3={6d,5u} r4={2d,3u} r12={2d,4u,4d} r13={2d,7u} r14={4d,5u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={3d,3u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 195{144d,47u,4e} in 25{24 regular + 1 call} insns.
(note 1 0 77 NOTE_INSN_DELETED)

(note 77 1 78 2 ( dev (expr_list:REG_DEP_TRUE (reg:SI 0 r0 [ dev ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 78 77 79 2 ( vma (expr_list:REG_DEP_TRUE (reg:SI 1 r1 [ vma ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 79 78 80 2 ( mmap_state (expr_list:REG_DEP_TRUE (reg:SI 2 r2 [ mmap_state ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 80 79 7 2 ( write_combine (expr_list:REG_DEP_TRUE (reg:SI 3 r3 [ write_combine ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 13 [sp] 14 [lr]
;; lr  def 	 3 [r3] 12 [ip] 13 [sp] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 3 [r3] 12 [ip] 13 [sp] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 80 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 7 4 2 NOTE_INSN_DELETED)

(note 4 2 6 2 NOTE_INSN_DELETED)

(note 6 4 10 2 NOTE_INSN_FUNCTION_BEG)

(insn:TI 10 6 3 2 arch/arm/kernel/bios32.c:664 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2 r2 [ mmap_state ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ mmap_state ])
        (nil)))

(insn 3 10 72 2 arch/arm/kernel/bios32.c:660 (set (reg/v/f:SI 12 ip [orig:141 vma ] [141])
        (reg:SI 1 r1 [ vma ])) 167 {*arm_movsi_insn} (nil))

(insn/f:TI 72 3 82 2 arch/arm/kernel/bios32.c:660 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 0 r0)
                    ] 2))
            (use (reg:SI 1 r1))
            (use (reg:SI 4 r4))
            (use (reg:SI 14 lr))
        ]) 327 {*push_multi} (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                (set/f (reg/f:SI 13 sp)
                    (plus:SI (reg/f:SI 13 sp)
                        (const_int -16 [0xfffffffffffffff0])))
                (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                    (reg:SI 0 r0))
                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                            (const_int 4 [0x4])) [0 S4 A32])
                    (reg:SI 1 r1))
                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                            (const_int 8 [0x8])) [0 S4 A32])
                    (reg:SI 4 r4))
                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                            (const_int 12 [0xc])) [0 S4 A32])
                    (reg:SI 14 lr))
            ])
        (nil)))

(note 82 72 81 2 ( dev (nil)) NOTE_INSN_VAR_LOCATION)

(note 81 82 73 2 ( vma (expr_list:REG_DEP_TRUE (reg/v/f:SI 12 ip [orig:141 vma ] [141])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 73 81 9 2 NOTE_INSN_PROLOGUE_END)

(insn:TI 9 73 84 2 arch/arm/kernel/bios32.c:661 (set (reg/f:SI 3 r3 [orig:138 D.18871 ] [138])
        (mem/s/f/j:SI (plus:SI (reg:SI 0 r0 [ dev ])
                (const_int 16 [0x10])) [0 <variable>.sysdata+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(note 84 9 83 2 ( write_combine (nil)) NOTE_INSN_VAR_LOCATION)

(note 83 84 13 2 ( dev (expr_list:REG_DEP_TRUE (reg:SI 0 r0 [ dev ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 13 83 85 2 arch/arm/kernel/bios32.c:665 (cond_exec (eq (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 0 r0 [orig:137 D.18874 ] [137])
            (const_int -22 [0xffffffffffffffea]))) 2345 {neon_vornv2di+78} (nil))

(note 85 13 11 2 ( dev (nil)) NOTE_INSN_VAR_LOCATION)

(jump_insn 11 85 17 2 arch/arm/kernel/bios32.c:664 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 50)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9833 [0x2669])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  3 [1.7%]  (fallthru)
;; Succ edge  4 [98.3%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 3 [r3] 12 [ip] 13 [sp]
;; lr  use 	 1 [r1] 3 [r3] 12 [ip] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 1 [r1] 3 [r3] 12 [ip] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 14 [lr] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  2 [1.7%]  (fallthru)
(note 17 11 20 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 20 17 27 3 NOTE_INSN_DELETED)

(note 27 20 33 3 NOTE_INSN_DELETED)

(note 33 27 40 3 NOTE_INSN_DELETED)

(note 40 33 21 3 NOTE_INSN_DELETED)

(insn:TI 21 40 86 3 arch/arm/kernel/bios32.c:667 (set (reg:SI 2 r2 [orig:149 <variable>.mem_offset ] [149])
        (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:138 D.18871 ] [138])
                (const_int 16 [0x10])) [0 <variable>.mem_offset+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(note 86 21 35 3 ( mmap_state (nil)) NOTE_INSN_VAR_LOCATION)

(insn 35 86 19 3 arch/arm/kernel/bios32.c:675 (set (reg:SI 0 r0)
        (reg/f:SI 1 r1 [orig:141 vma ] [141])) 167 {*arm_movsi_insn} (nil))

(insn:TI 19 35 31 3 arch/arm/kernel/bios32.c:667 (set (reg:SI 3 r3 [orig:148 <variable>.mem_offset+4 ] [148])
        (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:138 D.18871 ] [138])
                (const_int 20 [0x14])) [0 <variable>.mem_offset+4 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn:TI 31 19 22 3 arch/arm/kernel/bios32.c:675 (set (reg:SI 1 r1 [orig:135 D.18881 ] [135])
        (mem/s/j:SI (plus:SI (reg/f:SI 1 r1 [orig:141 vma ] [141])
                (const_int 4 [0x4])) [0 <variable>.vm_start+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 12 ip [orig:141 vma ] [141])
                (const_int 4 [0x4])) [0 <variable>.vm_start+0 S4 A32])
        (nil)))

(insn:TI 22 31 28 3 arch/arm/kernel/bios32.c:667 (set (reg:SI 2 r2 [156])
        (lshiftrt:SI (reg:SI 2 r2 [orig:149 <variable>.mem_offset ] [149])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 28 22 26 3 arch/arm/kernel/bios32.c:673 (set (reg:SI 14 lr [orig:152 <variable>.vm_page_prot ] [152])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 12 ip [orig:141 vma ] [141])
                (const_int 20 [0x14])) [0 <variable>.vm_page_prot+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 12 ip [orig:141 vma ] [141])
                (const_int 20 [0x14])) [0 <variable>.vm_page_prot+0 S4 A32])
        (nil)))

(insn:TI 26 28 23 3 arch/arm/kernel/bios32.c:667 (set (reg:SI 4 r4 [orig:151 <variable>.vm_pgoff ] [151])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 12 ip [orig:141 vma ] [141])
                (const_int 72 [0x48])) [0 <variable>.vm_pgoff+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 12 ip [orig:141 vma ] [141])
                (const_int 72 [0x48])) [0 <variable>.vm_pgoff+0 S4 A32])
        (nil)))

(insn 23 26 32 3 arch/arm/kernel/bios32.c:667 (set (reg:SI 2 r2 [156])
        (ior:SI (ashift:SI (reg:SI 3 r3 [orig:148 <variable>.mem_offset+4 ] [148])
                (const_int 20 [0x14]))
            (reg:SI 2 r2 [156]))) 270 {*arith_shiftsi} (expr_list:REG_DEAD (reg:SI 3 r3 [orig:148 <variable>.mem_offset+4 ] [148])
        (nil)))

(insn:TI 32 23 29 3 arch/arm/kernel/bios32.c:675 (set (reg:SI 3 r3 [orig:154 <variable>.vm_end ] [154])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 12 ip [orig:141 vma ] [141])
                (const_int 8 [0x8])) [0 <variable>.vm_end+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 12 ip [orig:141 vma ] [141])
                (const_int 8 [0x8])) [0 <variable>.vm_end+0 S4 A32])
        (nil)))

(insn 29 32 37 3 arch/arm/kernel/bios32.c:673 (set (reg:SI 14 lr [orig:136 D.18880 ] [136])
        (and:SI (reg:SI 14 lr [orig:152 <variable>.vm_page_prot ] [152])
            (const_int -61 [0xffffffffffffffc3]))) 67 {*arm_andsi3_insn} (nil))

(insn:TI 37 29 30 3 arch/arm/kernel/bios32.c:675 (set (reg:SI 2 r2)
        (plus:SI (reg:SI 4 r4 [orig:151 <variable>.vm_pgoff ] [151])
            (reg:SI 2 r2 [156]))) 4 {*arm_addsi3} (nil))

(insn 30 37 38 3 arch/arm/kernel/bios32.c:673 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 12 ip [orig:141 vma ] [141])
                (const_int 20 [0x14])) [0 <variable>.vm_page_prot+0 S4 A32])
        (reg:SI 14 lr [orig:136 D.18880 ] [136])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 12 ip [orig:141 vma ] [141])
        (nil)))

(insn:TI 38 30 34 3 arch/arm/kernel/bios32.c:675 (set (reg:SI 3 r3)
        (minus:SI (reg:SI 3 r3 [orig:154 <variable>.vm_end ] [154])
            (reg:SI 1 r1))) 28 {*arm_subsi3_insn} (nil))

(insn 34 38 39 3 arch/arm/kernel/bios32.c:675 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg:SI 14 lr [orig:136 D.18880 ] [136])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 14 lr [orig:136 D.18880 ] [136])
        (nil)))

(call_insn:TI 39 34 87 3 arch/arm/kernel/bios32.c:675 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("remap_pfn_range") [flags 0x41] <function_decl 0x1112fe80 remap_pfn_range>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(note 87 39 41 3 ( vma (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 41 87 67 3 arch/arm/kernel/bios32.c:675 (parallel [
            (set (reg:CC 24 cc)
                (compare:CC (reg:SI 0 r0)
                    (const_int 0 [0x0])))
            (set (reg:SI 0 r0 [orig:134 D.18884 ] [134])
                (reg:SI 0 r0))
        ]) 174 {*movsi_compare0} (nil))

(insn:TI 67 41 88 3 arch/arm/kernel/bios32.c:680 (set (reg:SI 0 r0 [orig:137 D.18874 ] [137])
        (if_then_else:SI (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (reg:SI 0 r0 [orig:134 D.18884 ] [134])
            (const_int -11 [0xfffffffffffffff5]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))
;; End of basic block 3 -> ( 4)
;; lr  out 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]


;; Succ edge  4 [100.0%]  (fallthru)

(note 88 67 89 4 ( vma (expr_list:REG_DEP_TRUE (reg/v/f:SI 12 ip [orig:141 vma ] [141])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 89 88 50 4 ( mmap_state (expr_list:REG_DEP_TRUE (reg:SI 2 r2 [ mmap_state ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 3 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	
;; live  in  	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  3 [100.0%]  (fallthru)
;; Pred edge  2 [98.3%] 
(code_label 50 89 51 4 52 "" [1 uses])

(note 51 50 62 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 62 51 74 4 arch/arm/kernel/bios32.c:681 (use (reg/i:SI 0 r0)) -1 (nil))

(note 74 62 75 4 NOTE_INSN_EPILOGUE_BEG)

(jump_insn:TI 75 74 76 4 arch/arm/kernel/bios32.c:681 (unspec_volatile [
            (return)
        ] 1) 323 {*epilogue_insns} (nil))
;; End of basic block 4 -> ( 1)
;; lr  out 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%] 

(barrier 76 75 70)

(note 70 76 71 NOTE_INSN_DELETED)

(note 71 70 0 NOTE_INSN_DELETED)


;; Function pcibios_map_irq (pcibios_map_irq)[0:1060]


Basic block 2:
IN:
Stack adjustment: 0
Reg 0: dev+0
Reg 1: slot+0
Reg 2: pin+0
Variables:
  name: dev
    offset 0
      (reg:SI 0 r0 [ dev ])
  name: slot
    offset 0
      (reg:QI 1 r1 [ slot ])
  name: pin
    offset 0
      (reg:QI 2 r2 [ pin ])

OUT:
Stack adjustment: 32
Reg 0: dev+0
Reg 1: slot+0
Reg 2: pin+0
Reg 4: irq+0
Reg 5: dev+0
Reg 6: pin+0
Reg 7: slot+0
Variables:
  name: irq
    offset 0
      (reg/v:SI 4 r4 [orig:134 irq ] [134])
  name: dev
    offset 0
      (reg/v/f:SI 5 r5 [orig:137 dev ] [137])
      (reg/f:SI 0 r0 [orig:137 dev ] [137])
  name: slot
    offset 0
      (reg:QI 7 r7 [ slot ])
      (reg:QI 1 r1 [ slot ])
  name: pin
    offset 0
      (reg:QI 6 r6 [ pin ])
      (reg:QI 2 r2 [ pin ])


Basic block 3:
IN:
Stack adjustment: 32
Reg 0: dev+0
Reg 1: slot+0
Reg 2: pin+0
Reg 4: irq+0
Reg 5: dev+0
Reg 6: pin+0
Reg 7: slot+0
Variables:
  name: irq
    offset 0
      (reg/v:SI 4 r4 [orig:134 irq ] [134])
  name: dev
    offset 0
      (reg/v/f:SI 5 r5 [orig:137 dev ] [137])
      (reg/f:SI 0 r0 [orig:137 dev ] [137])
  name: slot
    offset 0
      (reg:QI 7 r7 [ slot ])
      (reg:QI 1 r1 [ slot ])
  name: pin
    offset 0
      (reg:QI 6 r6 [ pin ])
      (reg:QI 2 r2 [ pin ])

OUT:
Stack adjustment: 32
Reg 4: irq+0
Reg 5: dev+0
Reg 6: pin+0
Reg 7: slot+0
Variables:
  name: irq
    offset 0
      (reg/v:SI 4 r4 [orig:134 irq ] [134])
  name: dev
    offset 0
      (reg/v/f:SI 5 r5 [orig:137 dev ] [137])
  name: slot
    offset 0
      (reg:QI 7 r7 [ slot ])
  name: pin
    offset 0
      (reg:QI 6 r6 [ pin ])


Basic block 4:
IN:
Stack adjustment: 32
Reg 0: dev+0
Reg 1: slot+0
Reg 2: pin+0
Reg 4: irq+0
Reg 5: dev+0
Reg 6: pin+0
Reg 7: slot+0
Variables:
  name: irq
    offset 0
      (reg/v:SI 4 r4 [orig:134 irq ] [134])
  name: dev
    offset 0
      (reg/v/f:SI 5 r5 [orig:137 dev ] [137])
      (reg/f:SI 0 r0 [orig:137 dev ] [137])
  name: slot
    offset 0
      (reg:QI 7 r7 [ slot ])
      (reg:QI 1 r1 [ slot ])
  name: pin
    offset 0
      (reg:QI 6 r6 [ pin ])
      (reg:QI 2 r2 [ pin ])

OUT:
Stack adjustment: 32
Reg 0: dev+0
Reg 1: slot+0
Reg 2: pin+0
Reg 4: irq+0
Reg 5: dev+0
Reg 6: pin+0
Reg 7: slot+0
Variables:
  name: irq
    offset 0
      (reg/v:SI 4 r4 [orig:134 irq ] [134])
  name: dev
    offset 0
      (reg/v/f:SI 5 r5 [orig:137 dev ] [137])
      (reg/f:SI 0 r0 [orig:137 dev ] [137])
  name: slot
    offset 0
      (reg:QI 7 r7 [ slot ])
      (reg:QI 1 r1 [ slot ])
  name: pin
    offset 0
      (reg:QI 6 r6 [ pin ])
      (reg:QI 2 r2 [ pin ])


Basic block 5:
IN:
Stack adjustment: 32
Reg 0: dev+0
Reg 1: slot+0
Reg 2: pin+0
Reg 4: irq+0
Reg 5: dev+0
Reg 6: pin+0
Reg 7: slot+0
Variables:
  name: irq
    offset 0
      (reg/v:SI 4 r4 [orig:134 irq ] [134])
  name: dev
    offset 0
      (reg/v/f:SI 5 r5 [orig:137 dev ] [137])
      (reg/f:SI 0 r0 [orig:137 dev ] [137])
  name: slot
    offset 0
      (reg:QI 7 r7 [ slot ])
      (reg:QI 1 r1 [ slot ])
  name: pin
    offset 0
      (reg:QI 6 r6 [ pin ])
      (reg:QI 2 r2 [ pin ])

OUT:
Stack adjustment: 32
Reg 4: irq+0
Reg 5: dev+0
Reg 6: pin+0
Reg 7: slot+0
Variables:
  name: irq
    offset 0
      (reg/v:SI 4 r4 [orig:134 irq ] [134])
  name: dev
    offset 0
      (reg/v/f:SI 5 r5 [orig:137 dev ] [137])
  name: slot
    offset 0
      (reg:QI 7 r7 [ slot ])
  name: pin
    offset 0
      (reg:QI 6 r6 [ pin ])


Basic block 6:
IN:
Stack adjustment: 32
Reg 0: dev+0
Reg 1: slot+0
Reg 2: pin+0
Reg 4: irq+0
Reg 5: dev+0
Reg 6: pin+0
Reg 7: slot+0
Variables:
  name: irq
    offset 0
      (reg/v:SI 4 r4 [orig:134 irq ] [134])
  name: dev
    offset 0
      (reg/v/f:SI 5 r5 [orig:137 dev ] [137])
      (reg/f:SI 0 r0 [orig:137 dev ] [137])
  name: slot
    offset 0
      (reg:QI 7 r7 [ slot ])
      (reg:QI 1 r1 [ slot ])
  name: pin
    offset 0
      (reg:QI 6 r6 [ pin ])
      (reg:QI 2 r2 [ pin ])

OUT:
Stack adjustment: 32
Reg 1: slot+0
Reg 2: pin+0
Reg 4: irq+0
Reg 5: dev+0
Reg 6: pin+0
Reg 7: slot+0
Variables:
  name: irq
    offset 0
      (reg/v:SI 4 r4 [orig:134 irq ] [134])
  name: dev
    offset 0
      (reg/v/f:SI 5 r5 [orig:137 dev ] [137])
  name: slot
    offset 0
      (reg:QI 7 r7 [ slot ])
      (reg:QI 1 r1 [ slot ])
  name: pin
    offset 0
      (reg:QI 6 r6 [ pin ])
      (reg:QI 2 r2 [ pin ])


7 basic blocks, 8 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(7){ }d-1(13){ }d-1(14){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; lr  def 	 3 [r3] 5 [r5] 6 [r6] 7 [r7] 12 [ip] 13 [sp] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 12 [ip] 13 [sp] 24 [cc]
;; live  kill	

Successors:  4 [30.2%]  3 [69.8%]  (fallthru)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 12 [ip] 13 [sp] 14 [lr]


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 6983, maybe hot.
Predecessors:  2 [69.8%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 5 [r5] 6 [r6] 7 [r7] 12 [ip] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 12 [ip] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 5 [r5] 6 [r6] 7 [r7] 12 [ip] 13 [sp]
;; live  gen 	 0 [r0] 4 [r4]
;; live  kill	 14 [lr]

Successors:  4 [100.0%]  (fallthru)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  3 [100.0%]  (fallthru) 2 [30.2%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

Successors:  5 [0.0%]  (fallthru) 6 [100.0%] 
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]


Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 4.
Predecessors:  4 [0.0%]  (fallthru)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc]
;; live  kill	 14 [lr]

Successors:  6 [100.0%]  (fallthru)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


Basic block 6 , prev 5, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  4 [100.0%]  5 [100.0%]  (fallthru)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

Successors:  EXIT [100.0%] 
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]


Basic block 1 , prev 6, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  6 [100.0%] 
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(4){ }u-1(5){ }u-1(6){ }u-1(7){ }u-1(13){ }u-1(14){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; lr  def 	
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	




pcibios_map_irq

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 7[r7] 12[ip] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={5d,8u} r1={5d,6u} r2={4d,4u} r3={7d,4u} r4={3d,5u} r5={2d,4u,1d} r6={2d,3u} r7={2d,3u} r12={3d,2u} r13={2d,10u} r14={3d,2u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={5d,4u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} 
;;    total ref usage 319{263d,55u,1e} in 26{24 regular + 2 call} insns.
(note 1 0 69 NOTE_INSN_DELETED)

(note 69 1 70 2 ( dev (expr_list:REG_DEP_TRUE (reg:SI 0 r0 [ dev ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 70 69 71 2 ( slot (expr_list:REG_DEP_TRUE (reg:QI 1 r1 [ slot ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 71 70 6 2 ( pin (expr_list:REG_DEP_TRUE (reg:QI 2 r2 [ pin ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; lr  def 	 3 [r3] 5 [r5] 6 [r6] 7 [r7] 12 [ip] 13 [sp] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 12 [ip] 13 [sp] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 71 5 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 5 6 64 2 NOTE_INSN_FUNCTION_BEG)

(insn/f:TI 64 5 74 2 arch/arm/kernel/bios32.c:480 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 0 r0)
                    ] 2))
            (use (reg:SI 1 r1))
            (use (reg:SI 2 r2))
            (use (reg:SI 4 r4))
            (use (reg:SI 5 r5))
            (use (reg:SI 6 r6))
            (use (reg:SI 7 r7))
            (use (reg:SI 14 lr))
        ]) 327 {*push_multi} (expr_list:REG_DEAD (reg:SI 7 r7)
        (expr_list:REG_DEAD (reg:SI 6 r6)
            (expr_list:REG_DEAD (reg:SI 5 r5)
                (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                            (set/f (reg/f:SI 13 sp)
                                (plus:SI (reg/f:SI 13 sp)
                                    (const_int -32 [0xffffffffffffffe0])))
                            (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                                (reg:SI 0 r0))
                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                        (const_int 4 [0x4])) [0 S4 A32])
                                (reg:SI 1 r1))
                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                        (const_int 8 [0x8])) [0 S4 A32])
                                (reg:SI 2 r2))
                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                        (const_int 12 [0xc])) [0 S4 A32])
                                (reg:SI 4 r4))
                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                        (const_int 16 [0x10])) [0 S4 A32])
                                (reg:SI 5 r5))
                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                        (const_int 20 [0x14])) [0 S4 A32])
                                (reg:SI 6 r6))
                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                        (const_int 24 [0x18])) [0 S4 A32])
                                (reg:SI 7 r7))
                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                        (const_int 28 [0x1c])) [0 S4 A32])
                                (reg:SI 14 lr))
                        ])
                    (nil))))))

(note 74 64 73 2 ( dev (nil)) NOTE_INSN_VAR_LOCATION)

(note 73 74 72 2 ( slot (nil)) NOTE_INSN_VAR_LOCATION)

(note 72 73 65 2 ( pin (nil)) NOTE_INSN_VAR_LOCATION)

(note 65 72 8 2 NOTE_INSN_PROLOGUE_END)

(insn:TI 8 65 75 2 arch/arm/kernel/bios32.c:484 (set (reg/f:SI 3 r3 [orig:140 <variable>.sysdata ] [140])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 0 r0 [orig:137 dev ] [137])
                (const_int 16 [0x10])) [0 <variable>.sysdata+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/f/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:137 dev ] [137])
                (const_int 16 [0x10])) [0 <variable>.sysdata+0 S4 A64])
        (nil)))

(note 75 8 2 2 ( dev (expr_list:REG_DEP_TRUE (reg/f:SI 0 r0 [orig:137 dev ] [137])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 2 75 3 2 arch/arm/kernel/bios32.c:480 (set (reg/v/f:SI 5 r5 [orig:137 dev ] [137])
        (reg:SI 0 r0 [ dev ])) 167 {*arm_movsi_insn} (nil))

(insn 3 2 76 2 arch/arm/kernel/bios32.c:480 (set (reg/v:SI 7 r7 [orig:138 slot ] [138])
        (reg:SI 1 r1 [ slot ])) 167 {*arm_movsi_insn} (nil))

(note 76 3 4 2 ( slot (expr_list:REG_DEP_TRUE (reg:QI 1 r1 [ slot ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 4 76 77 2 arch/arm/kernel/bios32.c:480 (set (reg/v:SI 6 r6 [orig:139 pin ] [139])
        (reg:SI 2 r2 [ pin ])) 167 {*arm_movsi_insn} (nil))

(note 77 4 9 2 ( pin (expr_list:REG_DEP_TRUE (reg:QI 2 r2 [ pin ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 9 77 10 2 arch/arm/kernel/bios32.c:484 (set (reg/f:SI 12 ip [orig:135 D.18723 ] [135])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 3 r3 [orig:140 <variable>.sysdata ] [140])
                (const_int 48 [0x30])) [0 <variable>.map_irq+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 3 r3 [orig:140 <variable>.sysdata ] [140])
        (nil)))

(insn:TI 10 9 13 2 arch/arm/kernel/bios32.c:484 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 12 ip [orig:135 D.18723 ] [135])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn:TI 13 10 78 2 arch/arm/kernel/bios32.c:482 (cond_exec (eq (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v:SI 4 r4 [orig:134 irq ] [134])
            (const_int -1 [0xffffffffffffffff]))) 2345 {neon_vornv2di+78} (nil))

(note 78 13 11 2 ( irq (expr_list:REG_DEP_TRUE (reg/v:SI 4 r4 [orig:134 irq ] [134])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(jump_insn:TI 11 78 79 2 arch/arm/kernel/bios32.c:484 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 23)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3017 [0xbc9])
            (nil))))
;; End of basic block 2 -> ( 4 3)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  4 [30.2%] 
;; Succ edge  3 [69.8%]  (fallthru)

(note 79 11 80 3 ( dev (expr_list:REG_DEP_TRUE (reg/v/f:SI 5 r5 [orig:137 dev ] [137])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 80 79 81 3 ( slot (expr_list:REG_DEP_TRUE (reg:QI 7 r7 [ slot ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 81 80 17 3 ( pin (expr_list:REG_DEP_TRUE (reg:QI 6 r6 [ pin ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 5 [r5] 6 [r6] 7 [r7] 12 [ip] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 12 [ip] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 5 [r5] 6 [r6] 7 [r7] 12 [ip] 13 [sp]
;; live  gen 	 0 [r0] 4 [r4]
;; live  kill	 14 [lr]

;; Pred edge  2 [69.8%]  (fallthru)
(note 17 81 21 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(call_insn:TI 21 17 22 3 arch/arm/kernel/bios32.c:485 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (reg/f:SI 12 ip [orig:135 D.18723 ] [135]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 249 {*call_value_reg_armv5} (expr_list:REG_DEAD (reg/f:SI 12 ip [orig:135 D.18723 ] [135])
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn:TI 22 21 82 3 arch/arm/kernel/bios32.c:485 (set (reg/v:SI 4 r4 [orig:134 irq ] [134])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))
;; End of basic block 3 -> ( 4)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  4 [100.0%]  (fallthru)

(note 82 22 83 4 ( dev (expr_list:REG_DEP_TRUE (reg/v/f:SI 5 r5 [orig:137 dev ] [137])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 83 82 84 4 ( slot (expr_list:REG_DEP_TRUE (reg:QI 7 r7 [ slot ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 84 83 23 4 ( pin (expr_list:REG_DEP_TRUE (reg:QI 6 r6 [ pin ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 3 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  3 [100.0%]  (fallthru)
;; Pred edge  2 [30.2%] 
(code_label 23 84 24 4 57 "" [1 uses])

(note 24 23 25 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn:TI 25 24 26 4 arch/arm/kernel/bios32.c:487 (set (reg/f:SI 3 r3 [141])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn:TI 26 25 27 4 arch/arm/kernel/bios32.c:487 (set (reg:SI 3 r3 [orig:142 debug_pci ] [142])
        (mem/c/i:SI (reg/f:SI 3 r3 [141]) [0 debug_pci+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 debug_pci+0 S4 A32])
        (nil)))

(insn:TI 27 26 28 4 arch/arm/kernel/bios32.c:487 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [orig:142 debug_pci ] [142])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [orig:142 debug_pci ] [142])
        (nil)))

(jump_insn:TI 28 27 29 4 arch/arm/kernel/bios32.c:487 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 44)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]


;; Succ edge  5 [0.0%]  (fallthru)
;; Succ edge  6 [100.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  4 [0.0%]  (fallthru)
(note 29 28 30 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn:TI 30 29 41 5 include/linux/device.h:620 (set (reg/f:SI 1 r1 [orig:133 D.19046 ] [133])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:137 dev ] [137])
                (const_int 140 [0x8c])) [0 <variable>.dev.init_name+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 41 30 42 5 arch/arm/kernel/bios32.c:488 (set (reg:SI 2 r2)
        (reg/v:SI 7 r7 [orig:138 slot ] [138])) 167 {*arm_movsi_insn} (nil))

(insn:TI 42 41 39 5 arch/arm/kernel/bios32.c:488 (set (reg:SI 3 r3)
        (reg/v:SI 6 r6 [orig:139 pin ] [139])) 167 {*arm_movsi_insn} (nil))

(insn 39 42 31 5 arch/arm/kernel/bios32.c:488 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x1138f690>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x1138f690>)
        (nil)))

(insn:TI 31 39 34 5 include/linux/device.h:620 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 1 r1 [orig:133 D.19046 ] [133])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn:TI 34 31 38 5 include/linux/kobject.h:82 (cond_exec (eq (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg/f:SI 1 r1 [orig:133 D.19046 ] [133])
            (mem/s/f/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:137 dev ] [137])
                    (const_int 104 [0x68])) [0 <variable>.dev.kobj.name+0 S4 A64]))) 2345 {neon_vornv2di+78} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn:TI 38 34 43 5 arch/arm/kernel/bios32.c:488 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg/v:SI 4 r4 [orig:134 irq ] [134])) 167 {*arm_movsi_insn} (nil))

(call_insn 43 38 85 5 arch/arm/kernel/bios32.c:488 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_UNUSED (reg:SI 0 r0)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 5 -> ( 6)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  6 [100.0%]  (fallthru)

(note 85 43 86 6 ( dev (expr_list:REG_DEP_TRUE (reg/v/f:SI 5 r5 [orig:137 dev ] [137])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 86 85 87 6 ( slot (expr_list:REG_DEP_TRUE (reg:QI 7 r7 [ slot ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 87 86 44 6 ( pin (expr_list:REG_DEP_TRUE (reg:QI 6 r6 [ pin ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 4 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  4 [100.0%] 
;; Pred edge  5 [100.0%]  (fallthru)
(code_label 44 87 45 6 58 "" [1 uses])

(note 45 44 50 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn:TI 50 45 56 6 arch/arm/kernel/bios32.c:492 (set (reg/i:SI 0 r0)
        (reg/v:SI 4 r4 [orig:134 irq ] [134])) 167 {*arm_movsi_insn} (nil))

(insn 56 50 66 6 arch/arm/kernel/bios32.c:492 (use (reg/i:SI 0 r0)) -1 (nil))

(note 66 56 67 6 NOTE_INSN_EPILOGUE_BEG)

(jump_insn 67 66 68 6 arch/arm/kernel/bios32.c:492 (unspec_volatile [
            (return)
        ] 1) 323 {*epilogue_insns} (nil))
;; End of basic block 6 -> ( 1)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%] 

(barrier 68 67 62)

(note 62 68 63 NOTE_INSN_DELETED)

(note 63 62 0 NOTE_INSN_DELETED)


;; Function pcibios_swizzle (pcibios_swizzle)[0:1059] (unlikely executed)


Basic block 2:
IN:
Stack adjustment: 0
Reg 0: dev+0
Reg 1: pin+0
Variables:
  name: pin
    offset 0
      (reg:SI 1 r1 [ pin ])
  name: dev
    offset 0
      (reg:SI 0 r0 [ dev ])

OUT:
Stack adjustment: 32
Reg 0: dev+0
Reg 1: pin+0
Reg 5: dev+0
Reg 6: pin+0
Variables:
  name: pin
    offset 0
      (reg/f:SI 1 r1 [orig:140 pin ] [140])
      (reg/v/f:SI 6 r6 [orig:140 pin ] [140])
  name: dev
    offset 0
      (reg/v/f:SI 5 r5 [orig:139 dev ] [139])
      (reg/f:SI 0 r0 [orig:139 dev ] [139])


Basic block 3:
IN:
Stack adjustment: 32
Reg 0: dev+0
Reg 1: pin+0
Reg 5: dev+0
Reg 6: pin+0
Variables:
  name: pin
    offset 0
      (reg/f:SI 1 r1 [orig:140 pin ] [140])
      (reg/v/f:SI 6 r6 [orig:140 pin ] [140])
  name: dev
    offset 0
      (reg/v/f:SI 5 r5 [orig:139 dev ] [139])
      (reg/f:SI 0 r0 [orig:139 dev ] [139])

OUT:
Stack adjustment: 32
Reg 4: slot+0
Reg 5: dev+0
Reg 6: pin+0
Variables:
  name: pin
    offset 0
      (reg/v/f:SI 6 r6 [orig:140 pin ] [140])
  name: slot
    offset 0
      (reg/v:SI 4 r4 [orig:134 slot ] [134])
  name: dev
    offset 0
      (reg/v/f:SI 5 r5 [orig:139 dev ] [139])


Basic block 4:
IN:
Stack adjustment: 32
Reg 0: dev+0
Reg 1: pin+0
Reg 4: slot+0
Reg 5: dev+0
Reg 6: pin+0
Variables:
  name: pin
    offset 0
      (reg/v/f:SI 6 r6 [orig:140 pin ] [140])
      (reg/f:SI 1 r1 [orig:140 pin ] [140])
  name: slot
    offset 0
      (reg/v:SI 4 r4 [orig:134 slot ] [134])
  name: dev
    offset 0
      (reg/v/f:SI 5 r5 [orig:139 dev ] [139])
      (reg/f:SI 0 r0 [orig:139 dev ] [139])

OUT:
Stack adjustment: 32
Reg 0: dev+0
Reg 1: pin+0
Reg 4: slot+0
Reg 5: dev+0
Reg 6: pin+0
Variables:
  name: pin
    offset 0
      (reg/v/f:SI 6 r6 [orig:140 pin ] [140])
      (reg/f:SI 1 r1 [orig:140 pin ] [140])
  name: slot
    offset 0
      (reg/v:SI 4 r4 [orig:134 slot ] [134])
  name: dev
    offset 0
      (reg/v/f:SI 5 r5 [orig:139 dev ] [139])
      (reg/f:SI 0 r0 [orig:139 dev ] [139])


Basic block 5:
IN:
Stack adjustment: 32
Reg 0: dev+0
Reg 1: pin+0
Reg 4: slot+0
Reg 5: dev+0
Reg 6: pin+0
Variables:
  name: pin
    offset 0
      (reg/v/f:SI 6 r6 [orig:140 pin ] [140])
      (reg/f:SI 1 r1 [orig:140 pin ] [140])
  name: slot
    offset 0
      (reg/v:SI 4 r4 [orig:134 slot ] [134])
  name: dev
    offset 0
      (reg/v/f:SI 5 r5 [orig:139 dev ] [139])
      (reg/f:SI 0 r0 [orig:139 dev ] [139])

OUT:
Stack adjustment: 32
Reg 4: slot+0
Reg 5: dev+0
Reg 6: pin+0
Variables:
  name: pin
    offset 0
      (reg/v/f:SI 6 r6 [orig:140 pin ] [140])
  name: slot
    offset 0
      (reg/v:SI 4 r4 [orig:134 slot ] [134])
  name: dev
    offset 0
      (reg/v/f:SI 5 r5 [orig:139 dev ] [139])


Basic block 6:
IN:
Stack adjustment: 32
Reg 0: dev+0
Reg 1: pin+0
Reg 4: slot+0
Reg 5: dev+0
Reg 6: pin+0
Variables:
  name: pin
    offset 0
      (reg/v/f:SI 6 r6 [orig:140 pin ] [140])
      (reg/f:SI 1 r1 [orig:140 pin ] [140])
  name: slot
    offset 0
      (reg/v:SI 4 r4 [orig:134 slot ] [134])
  name: dev
    offset 0
      (reg/v/f:SI 5 r5 [orig:139 dev ] [139])
      (reg/f:SI 0 r0 [orig:139 dev ] [139])

OUT:
Stack adjustment: 32
Reg 1: pin+0
Reg 4: slot+0
Reg 5: dev+0
Reg 6: pin+0
Variables:
  name: pin
    offset 0
      (reg/v/f:SI 6 r6 [orig:140 pin ] [140])
      (reg/f:SI 1 r1 [orig:140 pin ] [140])
  name: slot
    offset 0
      (reg/v:SI 4 r4 [orig:134 slot ] [134])
  name: dev
    offset 0
      (reg/v/f:SI 5 r5 [orig:139 dev ] [139])


7 basic blocks, 8 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, probably never executed.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(7){ }d-1(13){ }d-1(14){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, probably never executed.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; lr  def 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 24 [cc]
;; live  kill	

Successors:  3 [69.8%]  (fallthru) 4 [30.2%] 
;; lr  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 6983, probably never executed.
Predecessors:  2 [69.8%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 0 [r0] 4 [r4]
;; live  kill	 14 [lr]

Successors:  4 [100.0%]  (fallthru)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 10000, probably never executed.
Predecessors:  3 [100.0%]  (fallthru) 2 [30.2%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

Successors:  5 [0.0%]  (fallthru) 6 [100.0%] 
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]


Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 4, probably never executed.
Predecessors:  4 [0.0%]  (fallthru)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc]
;; live  kill	 14 [lr]

Successors:  6 [100.0%]  (fallthru)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


Basic block 6 , prev 5, next 1, loop_depth 0, count 0, freq 10000, probably never executed.
Predecessors:  4 [100.0%]  5 [100.0%]  (fallthru)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

Successors:  EXIT [100.0%] 
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]


Basic block 1 , prev 6, loop_depth 0, count 0, freq 10000, probably never executed.
Predecessors:  6 [100.0%] 
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(4){ }u-1(5){ }u-1(6){ }u-1(7){ }u-1(13){ }u-1(14){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; lr  def 	
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	




pcibios_swizzle

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 7[r7] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={5d,8u} r1={5d,7u} r2={4d,2u} r3={7d,4u} r4={3d,6u} r5={2d,4u,1d} r6={2d,3u} r7={2d,3u} r12={2d} r13={2d,10u} r14={3d,2u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={5d,3u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} 
;;    total ref usage 315{262d,52u,1e} in 25{23 regular + 2 call} insns.
(note 1 0 73 NOTE_INSN_DELETED)

(note 73 1 74 2 ( dev (expr_list:REG_DEP_TRUE (reg:SI 0 r0 [ dev ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 74 73 5 2 ( pin (expr_list:REG_DEP_TRUE (reg:SI 1 r1 [ pin ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; lr  def 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 74 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 4 5 68 2 NOTE_INSN_FUNCTION_BEG)

(insn/f:TI 68 4 76 2 arch/arm/kernel/bios32.c:462 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 0 r0)
                    ] 2))
            (use (reg:SI 1 r1))
            (use (reg:SI 2 r2))
            (use (reg:SI 4 r4))
            (use (reg:SI 5 r5))
            (use (reg:SI 6 r6))
            (use (reg:SI 7 r7))
            (use (reg:SI 14 lr))
        ]) 327 {*push_multi} (expr_list:REG_DEAD (reg:SI 7 r7)
        (expr_list:REG_DEAD (reg:SI 6 r6)
            (expr_list:REG_DEAD (reg:SI 5 r5)
                (expr_list:REG_DEAD (reg:SI 4 r4)
                    (expr_list:REG_DEAD (reg:SI 2 r2)
                        (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                                    (set/f (reg/f:SI 13 sp)
                                        (plus:SI (reg/f:SI 13 sp)
                                            (const_int -32 [0xffffffffffffffe0])))
                                    (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                                        (reg:SI 0 r0))
                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                (const_int 4 [0x4])) [0 S4 A32])
                                        (reg:SI 1 r1))
                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                (const_int 8 [0x8])) [0 S4 A32])
                                        (reg:SI 2 r2))
                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                (const_int 12 [0xc])) [0 S4 A32])
                                        (reg:SI 4 r4))
                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                (const_int 16 [0x10])) [0 S4 A32])
                                        (reg:SI 5 r5))
                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                (const_int 20 [0x14])) [0 S4 A32])
                                        (reg:SI 6 r6))
                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                (const_int 24 [0x18])) [0 S4 A32])
                                        (reg:SI 7 r7))
                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                (const_int 28 [0x1c])) [0 S4 A32])
                                        (reg:SI 14 lr))
                                ])
                            (nil))))))))

(note 76 68 75 2 ( dev (nil)) NOTE_INSN_VAR_LOCATION)

(note 75 76 69 2 ( pin (nil)) NOTE_INSN_VAR_LOCATION)

(note 69 75 8 2 NOTE_INSN_PROLOGUE_END)

(insn:TI 8 69 77 2 arch/arm/kernel/bios32.c:466 (set (reg/f:SI 3 r3 [orig:141 <variable>.sysdata ] [141])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 0 r0 [orig:139 dev ] [139])
                (const_int 16 [0x10])) [0 <variable>.sysdata+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/f/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:139 dev ] [139])
                (const_int 16 [0x10])) [0 <variable>.sysdata+0 S4 A64])
        (nil)))

(note 77 8 2 2 ( dev (expr_list:REG_DEP_TRUE (reg/f:SI 0 r0 [orig:139 dev ] [139])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 2 77 3 2 arch/arm/kernel/bios32.c:462 (set (reg/v/f:SI 5 r5 [orig:139 dev ] [139])
        (reg:SI 0 r0 [ dev ])) 167 {*arm_movsi_insn} (nil))

(insn 3 2 78 2 arch/arm/kernel/bios32.c:462 (set (reg/v/f:SI 6 r6 [orig:140 pin ] [140])
        (reg:SI 1 r1 [ pin ])) 167 {*arm_movsi_insn} (nil))

(note 78 3 7 2 ( pin (expr_list:REG_DEP_TRUE (reg:SI 1 r1 [ pin ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 7 78 9 2 arch/arm/kernel/bios32.c:464 (set (reg:SI 7 r7 [orig:137 D.18704 ] [137])
        (zero_extend:SI (mem:QI (reg/f:SI 1 r1 [orig:140 pin ] [140]) [0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn:TI 9 7 10 2 arch/arm/kernel/bios32.c:466 (set (reg/f:SI 4 r4 [orig:136 D.18705 ] [136])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 3 r3 [orig:141 <variable>.sysdata ] [141])
                (const_int 44 [0x2c])) [0 <variable>.swizzle+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 3 r3 [orig:141 <variable>.sysdata ] [141])
        (nil)))

(insn:TI 10 9 11 2 arch/arm/kernel/bios32.c:466 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 4 r4 [orig:136 D.18705 ] [136])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn:TI 11 10 79 2 arch/arm/kernel/bios32.c:466 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 24)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3017 [0xbc9])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]


;; Succ edge  3 [69.8%]  (fallthru)
;; Succ edge  4 [30.2%] 

(note 79 11 17 3 ( dev (expr_list:REG_DEP_TRUE (reg/v/f:SI 5 r5 [orig:139 dev ] [139])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 0 [r0] 4 [r4]
;; live  kill	 14 [lr]

;; Pred edge  2 [69.8%]  (fallthru)
(note 17 79 20 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(call_insn:TI 20 17 80 3 arch/arm/kernel/bios32.c:467 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (reg/f:SI 4 r4 [orig:136 D.18705 ] [136]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 249 {*call_value_reg_armv5} (expr_list:REG_DEAD (reg/f:SI 4 r4 [orig:136 D.18705 ] [136])
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(note 80 20 21 3 ( pin (expr_list:REG_DEP_TRUE (reg/v/f:SI 6 r6 [orig:140 pin ] [140])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 21 80 81 3 arch/arm/kernel/bios32.c:467 (set (reg/v:SI 4 r4 [orig:134 slot ] [134])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))
;; End of basic block 3 -> ( 4)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  4 [100.0%]  (fallthru)

(note 81 21 82 4 ( slot (expr_list:REG_DEP_TRUE (reg/v:SI 4 r4 [orig:134 slot ] [134])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 82 81 83 4 ( dev (expr_list:REG_DEP_TRUE (reg/v/f:SI 5 r5 [orig:139 dev ] [139])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 83 82 24 4 ( pin (expr_list:REG_DEP_TRUE (reg/v/f:SI 6 r6 [orig:140 pin ] [140])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 3 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  3 [100.0%]  (fallthru)
;; Pred edge  2 [30.2%] 
(code_label 24 83 25 4 65 "" [1 uses])

(note 25 24 26 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn:TI 26 25 27 4 arch/arm/kernel/bios32.c:469 (set (reg/f:SI 3 r3 [143])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn:TI 27 26 28 4 arch/arm/kernel/bios32.c:469 (set (reg:SI 3 r3 [orig:144 debug_pci ] [144])
        (mem/c/i:SI (reg/f:SI 3 r3 [143]) [0 debug_pci+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 debug_pci+0 S4 A32])
        (nil)))

(insn:TI 28 27 29 4 arch/arm/kernel/bios32.c:469 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [orig:144 debug_pci ] [144])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [orig:144 debug_pci ] [144])
        (nil)))

(jump_insn:TI 29 28 30 4 arch/arm/kernel/bios32.c:469 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 46)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]


;; Succ edge  5 [0.0%]  (fallthru)
;; Succ edge  6 [100.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  4 [0.0%]  (fallthru)
(note 30 29 31 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn:TI 31 30 43 5 include/linux/device.h:620 (set (reg/f:SI 1 r1 [orig:133 D.19052 ] [133])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:139 dev ] [139])
                (const_int 140 [0x8c])) [0 <variable>.dev.init_name+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 43 31 39 5 arch/arm/kernel/bios32.c:470 (set (reg:SI 2 r2)
        (reg:SI 7 r7 [orig:137 D.18704 ] [137])) 167 {*arm_movsi_insn} (nil))

(insn:TI 39 43 32 5 arch/arm/kernel/bios32.c:470 (set (reg:SI 3 r3 [146])
        (zero_extend:SI (mem:QI (reg/v/f:SI 6 r6 [orig:140 pin ] [140]) [0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn:TI 32 39 41 5 include/linux/device.h:620 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 1 r1 [orig:133 D.19052 ] [133])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn 41 32 35 5 arch/arm/kernel/bios32.c:470 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x1138f820>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x1138f820>)
        (nil)))

(insn:TI 35 41 40 5 include/linux/kobject.h:82 (cond_exec (eq (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg/f:SI 1 r1 [orig:133 D.19052 ] [133])
            (mem/s/f/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:139 dev ] [139])
                    (const_int 104 [0x68])) [0 <variable>.dev.kobj.name+0 S4 A64]))) 2345 {neon_vornv2di+78} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn:TI 40 35 45 5 arch/arm/kernel/bios32.c:470 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg/v:SI 4 r4 [orig:134 slot ] [134])) 167 {*arm_movsi_insn} (nil))

(call_insn 45 40 84 5 arch/arm/kernel/bios32.c:470 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_UNUSED (reg:SI 0 r0)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 5 -> ( 6)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  6 [100.0%]  (fallthru)

(note 84 45 85 6 ( dev (expr_list:REG_DEP_TRUE (reg/v/f:SI 5 r5 [orig:139 dev ] [139])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 85 84 46 6 ( pin (expr_list:REG_DEP_TRUE (reg/v/f:SI 6 r6 [orig:140 pin ] [140])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 4 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  4 [100.0%] 
;; Pred edge  5 [100.0%]  (fallthru)
(code_label 46 85 47 6 66 "" [1 uses])

(note 47 46 48 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note 48 47 49 6 NOTE_INSN_DELETED)

(note 49 48 54 6 NOTE_INSN_DELETED)

(insn:TI 54 49 60 6 arch/arm/kernel/bios32.c:474 (set (reg/i:SI 0 r0)
        (zero_extend:SI (reg:QI 4 r4 [orig:134 slot ] [134]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 60 54 70 6 arch/arm/kernel/bios32.c:474 (use (reg/i:SI 0 r0)) -1 (nil))

(note 70 60 71 6 NOTE_INSN_EPILOGUE_BEG)

(jump_insn 71 70 72 6 arch/arm/kernel/bios32.c:474 (unspec_volatile [
            (return)
        ] 1) 323 {*epilogue_insns} (nil))
;; End of basic block 6 -> ( 1)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%] 

(barrier 72 71 66)

(note 66 72 67 NOTE_INSN_DELETED)

(note 67 66 0 NOTE_INSN_DELETED)


;; Function pcibios_update_irq (pcibios_update_irq)[0:1052] (unlikely executed)


Basic block 2:
IN:
Stack adjustment: 0
Reg 0: dev+0
Reg 1: irq+0
Variables:
  name: dev
    offset 0
      (reg:SI 0 r0 [ dev ])
  name: irq
    offset 0
      (reg:SI 1 r1 [ irq ])

OUT:
Stack adjustment: 16
Reg 0: dev+0
Reg 1: irq+0
Reg 4: dev+0
Reg 5: irq+0
Variables:
  name: dev
    offset 0
      (reg/v/f:SI 4 r4 [orig:134 dev ] [134])
      (reg:SI 0 r0 [ dev ])
  name: irq
    offset 0
      (reg/v:SI 5 r5 [orig:135 irq ] [135])
      (reg:SI 1 r1 [ irq ])


Basic block 3:
IN:
Stack adjustment: 16
Reg 0: dev+0
Reg 1: irq+0
Reg 4: dev+0
Reg 5: irq+0
Variables:
  name: dev
    offset 0
      (reg/v/f:SI 4 r4 [orig:134 dev ] [134])
      (reg:SI 0 r0 [ dev ])
  name: irq
    offset 0
      (reg/v:SI 5 r5 [orig:135 irq ] [135])
      (reg:SI 1 r1 [ irq ])

OUT:
Stack adjustment: 16
Reg 4: dev+0
Reg 5: irq+0
Variables:
  name: dev
    offset 0
      (reg/v/f:SI 4 r4 [orig:134 dev ] [134])
  name: irq
    offset 0
      (reg/v:SI 5 r5 [orig:135 irq ] [135])


Basic block 4:
IN:
Stack adjustment: 16
Reg 0: dev+0
Reg 1: irq+0
Reg 4: dev+0
Reg 5: irq+0
Variables:
  name: dev
    offset 0
      (reg/v/f:SI 4 r4 [orig:134 dev ] [134])
      (reg:SI 0 r0 [ dev ])
  name: irq
    offset 0
      (reg/v:SI 5 r5 [orig:135 irq ] [135])
      (reg:SI 1 r1 [ irq ])

OUT:
Stack adjustment: 16
Reg 4: dev+0
Reg 5: irq+0
Variables:
  name: dev
    offset 0
      (reg/v/f:SI 4 r4 [orig:134 dev ] [134])
  name: irq
    offset 0
      (reg/v:SI 5 r5 [orig:135 irq ] [135])


5 basic blocks, 5 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, probably never executed.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(13){ }d-1(14){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, probably never executed.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  def 	 3 [r3] 4 [r4] 5 [r5] 13 [sp] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 4 [r4] 5 [r5] 13 [sp] 24 [cc]
;; live  kill	

Successors:  3 [0.0%]  (fallthru) 4 [100.0%] 
;; lr  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 4, probably never executed.
Predecessors:  2 [0.0%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  gen 	 0 [r0] 2 [r2] 24 [cc]
;; live  kill	 14 [lr]

Successors:  4 [100.0%]  (fallthru)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp]


Basic block 4 , prev 3, next 1, loop_depth 0, count 0, freq 10000, probably never executed.
Predecessors:  2 [100.0%]  3 [100.0%]  (fallthru)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	

Successors:  EXIT [100.0%]  (ab,sibcall)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]


Basic block 1 , prev 4, loop_depth 0, count 0, freq 10000, probably never executed.
Predecessors:  4 [100.0%]  (ab,sibcall)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(4){ }u-1(5){ }u-1(6){ }u-1(13){ }u-1(14){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  def 	
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	




pcibios_update_irq

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;;  exit block uses 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={5d,5u} r1={4d,3u} r2={6d,4u} r3={6d,3u} r4={2d,4u} r5={2d,3u} r6={1d,2u} r12={2d} r13={2d,7u} r14={2d,3u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={4d,2u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} 
;;    total ref usage 292{256d,36u,0e} in 18{16 regular + 2 call} insns.
(note 1 0 46 NOTE_INSN_DELETED)

(note 46 1 47 2 ( dev (expr_list:REG_DEP_TRUE (reg:SI 0 r0 [ dev ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 47 46 5 2 ( irq (expr_list:REG_DEP_TRUE (reg:SI 1 r1 [ irq ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  def 	 3 [r3] 4 [r4] 5 [r5] 13 [sp] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 4 [r4] 5 [r5] 13 [sp] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 47 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 4 5 40 2 NOTE_INSN_FUNCTION_BEG)

(insn:TI 40 4 42 2 arch/arm/kernel/bios32.c:278 (set (reg/f:SI 3 r3 [136])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn/f:TI 42 40 43 2 arch/arm/kernel/bios32.c:277 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 4 r4)
                    ] 2))
            (use (reg:SI 5 r5))
            (use (reg:SI 6 r6))
            (use (reg:SI 14 lr))
        ]) 327 {*push_multi} (expr_list:REG_DEAD (reg:SI 5 r5)
        (expr_list:REG_DEAD (reg:SI 4 r4)
            (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                        (set/f (reg/f:SI 13 sp)
                            (plus:SI (reg/f:SI 13 sp)
                                (const_int -16 [0xfffffffffffffff0])))
                        (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                            (reg:SI 4 r4))
                        (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                    (const_int 4 [0x4])) [0 S4 A32])
                            (reg:SI 5 r5))
                        (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                    (const_int 8 [0x8])) [0 S4 A32])
                            (reg:SI 6 r6))
                        (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                    (const_int 12 [0xc])) [0 S4 A32])
                            (reg:SI 14 lr))
                    ])
                (nil)))))

(note 43 42 2 2 NOTE_INSN_PROLOGUE_END)

(insn:TI 2 43 8 2 arch/arm/kernel/bios32.c:277 (set (reg/v/f:SI 4 r4 [orig:134 dev ] [134])
        (reg:SI 0 r0 [ dev ])) 167 {*arm_movsi_insn} (nil))

(insn:TI 8 2 3 2 arch/arm/kernel/bios32.c:278 (set (reg:SI 3 r3 [orig:137 debug_pci ] [137])
        (mem/c/i:SI (reg/f:SI 3 r3 [136]) [0 debug_pci+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 debug_pci+0 S4 A32])
        (nil)))

(insn 3 8 9 2 arch/arm/kernel/bios32.c:277 (set (reg/v:SI 5 r5 [orig:135 irq ] [135])
        (reg:SI 1 r1 [ irq ])) 167 {*arm_movsi_insn} (nil))

(insn:TI 9 3 10 2 arch/arm/kernel/bios32.c:278 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [orig:137 debug_pci ] [137])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [orig:137 debug_pci ] [137])
        (nil)))

(jump_insn:TI 10 9 48 2 arch/arm/kernel/bios32.c:278 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 24)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]


;; Succ edge  3 [0.0%]  (fallthru)
;; Succ edge  4 [100.0%] 

(note 48 10 49 3 ( dev (expr_list:REG_DEP_TRUE (reg/v/f:SI 4 r4 [orig:134 dev ] [134])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 49 48 11 3 ( irq (expr_list:REG_DEP_TRUE (reg/v:SI 5 r5 [orig:135 irq ] [135])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  gen 	 0 [r0] 2 [r2] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  2 [0.0%]  (fallthru)
(note 11 49 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn:TI 12 11 13 3 include/linux/device.h:620 (set (reg/f:SI 2 r2 [orig:133 D.19058 ] [133])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 0 r0 [orig:134 dev ] [134])
                (const_int 140 [0x8c])) [0 <variable>.dev.init_name+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn:TI 13 12 16 3 include/linux/device.h:620 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 2 r2 [orig:133 D.19058 ] [133])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn:TI 16 13 20 3 include/linux/kobject.h:82 (cond_exec (eq (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg/f:SI 2 r2 [orig:133 D.19058 ] [133])
            (mem/s/f/j:SI (plus:SI (reg/f:SI 0 r0 [orig:134 dev ] [134])
                    (const_int 104 [0x68])) [0 <variable>.dev.kobj.name+0 S4 A64]))) 2345 {neon_vornv2di+78} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_DEAD (reg/f:SI 0 r0 [orig:134 dev ] [134])
            (nil))))

(insn:TI 20 16 23 3 arch/arm/kernel/bios32.c:279 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x113f96c0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x113f96c0>)
        (nil)))

(call_insn:TI 23 20 50 3 arch/arm/kernel/bios32.c:279 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))
;; End of basic block 3 -> ( 4)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp]


;; Succ edge  4 [100.0%]  (fallthru)

(note 50 23 51 4 ( dev (expr_list:REG_DEP_TRUE (reg/v/f:SI 4 r4 [orig:134 dev ] [134])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 51 50 24 4 ( irq (expr_list:REG_DEP_TRUE (reg/v:SI 5 r5 [orig:135 irq ] [135])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  2 [100.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 24 51 25 4 72 "" [1 uses])

(note 25 24 26 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 26 25 28 4 NOTE_INSN_DELETED)

(insn:TI 28 26 30 4 include/linux/pci.h:764 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:134 dev ] [134])
                (const_int 28 [0x1c])) [0 <variable>.devfn+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 30 28 27 4 include/linux/pci.h:764 (set (reg:SI 3 r3)
        (zero_extend:SI (reg:QI 5 r5 [orig:135 irq ] [135]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn:TI 27 30 29 4 include/linux/pci.h:764 (set (reg:SI 0 r0)
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:134 dev ] [134])
                (const_int 8 [0x8])) [0 <variable>.bus+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 29 27 44 4 include/linux/pci.h:764 (set (reg:SI 2 r2)
        (const_int 60 [0x3c])) 167 {*arm_movsi_insn} (nil))

(note 44 29 45 4 NOTE_INSN_EPILOGUE_BEG)

(insn:TI 45 44 31 4 arch/arm/kernel/bios32.c:281 (parallel [
            (unspec:SI [
                    (reg:SI 14 lr)
                ] 6)
            (unspec_volatile [
                    (return)
                ] 1)
        ]) 322 {sibcall_epilogue} (nil))

(call_insn/j:TI 31 45 32 4 include/linux/pci.h:764 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("pci_bus_write_config_byte") [flags 0x41] <function_decl 0x10f95780 pci_bus_write_config_byte>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_UNUSED (reg:SI 0 r0)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 4 -> ( 1)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 32 31 41)

(note 41 32 0 NOTE_INSN_DELETED)


;; Function pcibios_enable_device (pcibios_enable_device)[0:1065]


Basic block 2:
IN:
Stack adjustment: 0
Reg 0: dev+0
Reg 1: mask+0
Variables:
  name: dev
    offset 0
      (reg:SI 0 r0 [ dev ])
  name: mask
    offset 0
      (reg:SI 1 r1 [ mask ])

OUT:
Stack adjustment: 24
Reg 1: idx+0
Reg 2: old_cmd+0
Reg 4: dev+0
Reg 5: mask+0
Variables:
  name: dev
    offset 0
      (reg/v/f:SI 4 r4 [orig:142 dev ] [142])
  name: mask
    offset 0
      (reg/v:SI 5 r5 [orig:143 mask ] [143])
  name: cmd
    offset 0
      (mem/c/i:HI (plus:SI (reg/f:SI 26 afp)
        (const_int -22 [0xffffffffffffffea])) [0 cmd+0 S2 A16])
  name: old_cmd
    offset 0
      (reg:HI 2 r2 [ old_cmd ])
  name: idx
    offset 0
      (reg/v:SI 1 r1 [orig:138 idx ] [138])


Basic block 3:
IN:
Stack adjustment: 24
Reg 1: idx+0
Reg 2: old_cmd+0
Reg 4: dev+0
Reg 5: mask+0
Variables:
  name: dev
    offset 0
      (reg/v/f:SI 4 r4 [orig:142 dev ] [142])
  name: mask
    offset 0
      (reg/v:SI 5 r5 [orig:143 mask ] [143])
  name: cmd
    offset 0
      (mem/c/i:HI (plus:SI (reg/f:SI 26 afp)
        (const_int -22 [0xffffffffffffffea])) [0 cmd+0 S2 A16])
      (mem/c/i:HI (plus:SI (reg/f:SI 13 sp)
        (const_int 6 [0x6])) [0 cmd+0 S2 A16])
  name: old_cmd
    offset 0
      (reg:HI 2 r2 [ old_cmd ])
  name: idx
    offset 0
      (reg/v:SI 1 r1 [orig:138 idx ] [138])

OUT:
Stack adjustment: 24
Reg 1: idx+0
Reg 2: old_cmd+0
Reg 4: dev+0
Reg 5: mask+0
Variables:
  name: dev
    offset 0
      (reg/v/f:SI 4 r4 [orig:142 dev ] [142])
  name: mask
    offset 0
      (reg/v:SI 5 r5 [orig:143 mask ] [143])
  name: cmd
    offset 0
      (mem/c/i:HI (plus:SI (reg/f:SI 26 afp)
        (const_int -22 [0xffffffffffffffea])) [0 cmd+0 S2 A16])
      (mem/c/i:HI (plus:SI (reg/f:SI 13 sp)
        (const_int 6 [0x6])) [0 cmd+0 S2 A16])
  name: old_cmd
    offset 0
      (reg:HI 2 r2 [ old_cmd ])
  name: idx
    offset 0
      (reg/v:SI 1 r1 [orig:138 idx ] [138])


Basic block 4:
IN:
Stack adjustment: 24
Reg 1: idx+0
Reg 2: old_cmd+0
Reg 4: dev+0
Reg 5: mask+0
Variables:
  name: dev
    offset 0
      (reg/v/f:SI 4 r4 [orig:142 dev ] [142])
  name: mask
    offset 0
      (reg/v:SI 5 r5 [orig:143 mask ] [143])
  name: cmd
    offset 0
      (mem/c/i:HI (plus:SI (reg/f:SI 26 afp)
        (const_int -22 [0xffffffffffffffea])) [0 cmd+0 S2 A16])
      (mem/c/i:HI (plus:SI (reg/f:SI 13 sp)
        (const_int 6 [0x6])) [0 cmd+0 S2 A16])
  name: old_cmd
    offset 0
      (reg:HI 2 r2 [ old_cmd ])
  name: idx
    offset 0
      (reg/v:SI 1 r1 [orig:138 idx ] [138])

OUT:
Stack adjustment: 24
Reg 1: idx+0
Reg 2: old_cmd+0
Reg 4: dev+0
Reg 5: mask+0
Variables:
  name: dev
    offset 0
      (reg/v/f:SI 4 r4 [orig:142 dev ] [142])
  name: mask
    offset 0
      (reg/v:SI 5 r5 [orig:143 mask ] [143])
  name: cmd
    offset 0
      (mem/c/i:HI (plus:SI (reg/f:SI 26 afp)
        (const_int -22 [0xffffffffffffffea])) [0 cmd+0 S2 A16])
      (mem/c/i:HI (plus:SI (reg/f:SI 13 sp)
        (const_int 6 [0x6])) [0 cmd+0 S2 A16])
  name: old_cmd
    offset 0
      (reg:HI 2 r2 [ old_cmd ])
  name: idx
    offset 0
      (reg/v:SI 1 r1 [orig:138 idx ] [138])


Basic block 5:
IN:
Stack adjustment: 24
Reg 1: idx+0
Reg 2: old_cmd+0
Reg 4: dev+0
Reg 5: mask+0
Variables:
  name: dev
    offset 0
      (reg/v/f:SI 4 r4 [orig:142 dev ] [142])
  name: mask
    offset 0
      (reg/v:SI 5 r5 [orig:143 mask ] [143])
  name: cmd
    offset 0
      (mem/c/i:HI (plus:SI (reg/f:SI 26 afp)
        (const_int -22 [0xffffffffffffffea])) [0 cmd+0 S2 A16])
      (mem/c/i:HI (plus:SI (reg/f:SI 13 sp)
        (const_int 6 [0x6])) [0 cmd+0 S2 A16])
  name: old_cmd
    offset 0
      (reg:HI 2 r2 [ old_cmd ])
  name: idx
    offset 0
      (reg/v:SI 1 r1 [orig:138 idx ] [138])

OUT:
Stack adjustment: 24
Reg 1: idx+0
Reg 2: old_cmd+0
Reg 4: dev+0
Reg 5: mask+0
Variables:
  name: dev
    offset 0
      (reg/v/f:SI 4 r4 [orig:142 dev ] [142])
  name: mask
    offset 0
      (reg/v:SI 5 r5 [orig:143 mask ] [143])
  name: cmd
    offset 0
      (mem/c/i:HI (plus:SI (reg/f:SI 26 afp)
        (const_int -22 [0xffffffffffffffea])) [0 cmd+0 S2 A16])
      (mem/c/i:HI (plus:SI (reg/f:SI 13 sp)
        (const_int 6 [0x6])) [0 cmd+0 S2 A16])
  name: old_cmd
    offset 0
      (reg:HI 2 r2 [ old_cmd ])
  name: idx
    offset 0
      (reg/v:SI 1 r1 [orig:138 idx ] [138])


Basic block 6:
IN:
Stack adjustment: 24
Reg 1: idx+0
Reg 2: old_cmd+0
Reg 4: dev+0
Reg 5: mask+0
Variables:
  name: dev
    offset 0
      (reg/v/f:SI 4 r4 [orig:142 dev ] [142])
  name: mask
    offset 0
      (reg/v:SI 5 r5 [orig:143 mask ] [143])
  name: cmd
    offset 0
      (mem/c/i:HI (plus:SI (reg/f:SI 26 afp)
        (const_int -22 [0xffffffffffffffea])) [0 cmd+0 S2 A16])
      (mem/c/i:HI (plus:SI (reg/f:SI 13 sp)
        (const_int 6 [0x6])) [0 cmd+0 S2 A16])
  name: old_cmd
    offset 0
      (reg:HI 2 r2 [ old_cmd ])
  name: idx
    offset 0
      (reg/v:SI 1 r1 [orig:138 idx ] [138])

OUT:
Stack adjustment: 24
Reg 4: dev+0
Reg 5: mask+0
Variables:
  name: dev
    offset 0
      (reg/v/f:SI 4 r4 [orig:142 dev ] [142])
  name: mask
    offset 0
      (reg/v:SI 5 r5 [orig:143 mask ] [143])
  name: cmd
    offset 0
      (mem/c/i:HI (plus:SI (reg/f:SI 26 afp)
        (const_int -22 [0xffffffffffffffea])) [0 cmd+0 S2 A16])
      (mem/c/i:HI (plus:SI (reg/f:SI 13 sp)
        (const_int 6 [0x6])) [0 cmd+0 S2 A16])


Basic block 7:
IN:
Stack adjustment: 24
Reg 1: idx+0
Reg 2: old_cmd+0
Reg 4: dev+0
Reg 5: mask+0
Variables:
  name: dev
    offset 0
      (reg/v/f:SI 4 r4 [orig:142 dev ] [142])
  name: mask
    offset 0
      (reg/v:SI 5 r5 [orig:143 mask ] [143])
  name: cmd
    offset 0
      (mem/c/i:HI (plus:SI (reg/f:SI 26 afp)
        (const_int -22 [0xffffffffffffffea])) [0 cmd+0 S2 A16])
      (mem/c/i:HI (plus:SI (reg/f:SI 13 sp)
        (const_int 6 [0x6])) [0 cmd+0 S2 A16])
  name: old_cmd
    offset 0
      (reg:HI 2 r2 [ old_cmd ])
  name: idx
    offset 0
      (reg/v:SI 1 r1 [orig:138 idx ] [138])

OUT:
Stack adjustment: 24
Reg 1: idx+0
Reg 2: old_cmd+0
Reg 4: dev+0
Reg 5: mask+0
Variables:
  name: dev
    offset 0
      (reg/v/f:SI 4 r4 [orig:142 dev ] [142])
  name: mask
    offset 0
      (reg/v:SI 5 r5 [orig:143 mask ] [143])
  name: cmd
    offset 0
      (mem/c/i:HI (plus:SI (reg/f:SI 13 sp)
        (const_int 6 [0x6])) [0 cmd+0 S2 A16])
  name: old_cmd
    offset 0
      (reg:HI 2 r2 [ old_cmd ])
  name: idx
    offset 0
      (reg/v:SI 1 r1 [orig:138 idx ] [138])


Basic block 8:
IN:
Stack adjustment: 24
Reg 1: idx+0
Reg 2: old_cmd+0
Reg 4: dev+0
Reg 5: mask+0
Variables:
  name: dev
    offset 0
      (reg/v/f:SI 4 r4 [orig:142 dev ] [142])
  name: mask
    offset 0
      (reg/v:SI 5 r5 [orig:143 mask ] [143])
  name: cmd
    offset 0
      (mem/c/i:HI (plus:SI (reg/f:SI 13 sp)
        (const_int 6 [0x6])) [0 cmd+0 S2 A16])
      (mem/c/i:HI (plus:SI (reg/f:SI 26 afp)
        (const_int -22 [0xffffffffffffffea])) [0 cmd+0 S2 A16])
  name: old_cmd
    offset 0
      (reg:HI 2 r2 [ old_cmd ])
  name: idx
    offset 0
      (reg/v:SI 1 r1 [orig:138 idx ] [138])

OUT:
Stack adjustment: 24
Reg 1: idx+0
Reg 2: old_cmd+0
Reg 4: dev+0
Reg 5: mask+0
Variables:
  name: dev
    offset 0
      (reg/v/f:SI 4 r4 [orig:142 dev ] [142])
  name: mask
    offset 0
      (reg/v:SI 5 r5 [orig:143 mask ] [143])
  name: cmd
    offset 0
      (mem/c/i:HI (plus:SI (reg/f:SI 13 sp)
        (const_int 6 [0x6])) [0 cmd+0 S2 A16])
      (mem/c/i:HI (plus:SI (reg/f:SI 26 afp)
        (const_int -22 [0xffffffffffffffea])) [0 cmd+0 S2 A16])
  name: old_cmd
    offset 0
      (reg:HI 2 r2 [ old_cmd ])
  name: idx
    offset 0
      (reg/v:SI 1 r1 [orig:138 idx ] [138])


Basic block 9:
IN:
Stack adjustment: 24
Reg 1: idx+0
Reg 2: old_cmd+0
Reg 4: dev+0
Reg 5: mask+0
Variables:
  name: dev
    offset 0
      (reg/v/f:SI 4 r4 [orig:142 dev ] [142])
  name: mask
    offset 0
      (reg/v:SI 5 r5 [orig:143 mask ] [143])
  name: cmd
    offset 0
      (mem/c/i:HI (plus:SI (reg/f:SI 26 afp)
        (const_int -22 [0xffffffffffffffea])) [0 cmd+0 S2 A16])
      (mem/c/i:HI (plus:SI (reg/f:SI 13 sp)
        (const_int 6 [0x6])) [0 cmd+0 S2 A16])
  name: old_cmd
    offset 0
      (reg:HI 2 r2 [ old_cmd ])
  name: idx
    offset 0
      (reg/v:SI 1 r1 [orig:138 idx ] [138])

OUT:
Stack adjustment: 24
Reg 1: idx+0
Reg 2: old_cmd+0
Reg 4: dev+0
Reg 5: mask+0
Variables:
  name: dev
    offset 0
      (reg/v/f:SI 4 r4 [orig:142 dev ] [142])
  name: mask
    offset 0
      (reg/v:SI 5 r5 [orig:143 mask ] [143])
  name: cmd
    offset 0
      (mem/c/i:HI (plus:SI (reg/f:SI 26 afp)
        (const_int -22 [0xffffffffffffffea])) [0 cmd+0 S2 A16])
      (mem/c/i:HI (plus:SI (reg/f:SI 13 sp)
        (const_int 6 [0x6])) [0 cmd+0 S2 A16])
  name: old_cmd
    offset 0
      (reg:HI 2 r2 [ old_cmd ])
  name: idx
    offset 0
      (reg/v:SI 1 r1 [orig:138 idx ] [138])


Basic block 10:
IN:
Stack adjustment: 24
Reg 1: idx+0
Reg 2: old_cmd+0
Reg 4: dev+0
Reg 5: mask+0
Variables:
  name: dev
    offset 0
      (reg/v/f:SI 4 r4 [orig:142 dev ] [142])
  name: mask
    offset 0
      (reg/v:SI 5 r5 [orig:143 mask ] [143])
  name: cmd
    offset 0
      (mem/c/i:HI (plus:SI (reg/f:SI 26 afp)
        (const_int -22 [0xffffffffffffffea])) [0 cmd+0 S2 A16])
      (mem/c/i:HI (plus:SI (reg/f:SI 13 sp)
        (const_int 6 [0x6])) [0 cmd+0 S2 A16])
  name: old_cmd
    offset 0
      (reg:HI 2 r2 [ old_cmd ])
  name: idx
    offset 0
      (reg/v:SI 1 r1 [orig:138 idx ] [138])

OUT:
Stack adjustment: 24
Reg 4: dev+0
Reg 5: mask+0
Variables:
  name: dev
    offset 0
      (reg/v/f:SI 4 r4 [orig:142 dev ] [142])
  name: mask
    offset 0
      (reg/v:SI 5 r5 [orig:143 mask ] [143])
  name: cmd
    offset 0
      (mem/c/i:HI (plus:SI (reg/f:SI 26 afp)
        (const_int -22 [0xffffffffffffffea])) [0 cmd+0 S2 A16])
      (mem/c/i:HI (plus:SI (reg/f:SI 13 sp)
        (const_int 6 [0x6])) [0 cmd+0 S2 A16])


Basic block 11:
IN:
Stack adjustment: 24
Reg 1: idx+0
Reg 2: old_cmd+0
Reg 4: dev+0
Reg 5: mask+0
Variables:
  name: dev
    offset 0
      (reg/v/f:SI 4 r4 [orig:142 dev ] [142])
  name: mask
    offset 0
      (reg/v:SI 5 r5 [orig:143 mask ] [143])
  name: cmd
    offset 0
      (mem/c/i:HI (plus:SI (reg/f:SI 26 afp)
        (const_int -22 [0xffffffffffffffea])) [0 cmd+0 S2 A16])
      (mem/c/i:HI (plus:SI (reg/f:SI 13 sp)
        (const_int 6 [0x6])) [0 cmd+0 S2 A16])
  name: old_cmd
    offset 0
      (reg:HI 2 r2 [ old_cmd ])
  name: idx
    offset 0
      (reg/v:SI 1 r1 [orig:138 idx ] [138])

OUT:
Stack adjustment: 24
Reg 1: idx+0
Reg 2: old_cmd+0
Reg 4: dev+0
Reg 5: mask+0
Variables:
  name: dev
    offset 0
      (reg/v/f:SI 4 r4 [orig:142 dev ] [142])
  name: mask
    offset 0
      (reg/v:SI 5 r5 [orig:143 mask ] [143])
  name: cmd
    offset 0
      (mem/c/i:HI (plus:SI (reg/f:SI 26 afp)
        (const_int -22 [0xffffffffffffffea])) [0 cmd+0 S2 A16])
      (mem/c/i:HI (plus:SI (reg/f:SI 13 sp)
        (const_int 6 [0x6])) [0 cmd+0 S2 A16])
  name: old_cmd
    offset 0
      (reg:HI 2 r2 [ old_cmd ])
  name: idx
    offset 0
      (reg/v:SI 1 r1 [orig:138 idx ] [138])


Basic block 12:
IN:
Stack adjustment: 24
Reg 1: idx+0
Reg 2: old_cmd+0
Reg 4: dev+0
Reg 5: mask+0
Variables:
  name: dev
    offset 0
      (reg/v/f:SI 4 r4 [orig:142 dev ] [142])
  name: mask
    offset 0
      (reg/v:SI 5 r5 [orig:143 mask ] [143])
  name: cmd
    offset 0
      (mem/c/i:HI (plus:SI (reg/f:SI 26 afp)
        (const_int -22 [0xffffffffffffffea])) [0 cmd+0 S2 A16])
      (mem/c/i:HI (plus:SI (reg/f:SI 13 sp)
        (const_int 6 [0x6])) [0 cmd+0 S2 A16])
  name: old_cmd
    offset 0
      (reg:HI 2 r2 [ old_cmd ])
  name: idx
    offset 0
      (reg/v:SI 1 r1 [orig:138 idx ] [138])

OUT:
Stack adjustment: 24
Reg 1: idx+0
Reg 2: old_cmd+0
Reg 4: dev+0
Reg 5: mask+0
Variables:
  name: dev
    offset 0
      (reg/v/f:SI 4 r4 [orig:142 dev ] [142])
  name: mask
    offset 0
      (reg/v:SI 5 r5 [orig:143 mask ] [143])
  name: cmd
    offset 0
      (mem/c/i:HI (plus:SI (reg/f:SI 26 afp)
        (const_int -22 [0xffffffffffffffea])) [0 cmd+0 S2 A16])
      (mem/c/i:HI (plus:SI (reg/f:SI 13 sp)
        (const_int 6 [0x6])) [0 cmd+0 S2 A16])
  name: old_cmd
    offset 0
      (reg:HI 2 r2 [ old_cmd ])
  name: idx
    offset 0
      (reg/v:SI 1 r1 [orig:138 idx ] [138])


13 basic blocks, 17 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 1430, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(13){ }d-1(14){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 13 [sp] 14 [lr]


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 1430, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 12 [ip] 13 [sp] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp]
;; live  kill	 14 [lr]

Successors:  3 [100.0%]  (fallthru)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp]


Basic block 3 , prev 2, next 4, loop_depth 1, count 0, freq 8571, maybe hot.
Predecessors:  8 [83.3%]  (dfs_back) 2 [100.0%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc]
;; live  kill	

Successors:  8 [50.0%]  4 [50.0%]  (fallthru)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp]


Basic block 4 , prev 3, next 5, loop_depth 1, count 0, freq 4285, maybe hot.
Predecessors:  3 [50.0%]  (fallthru)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 0 [r0] 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp]
;; live  gen 	 0 [r0] 24 [cc]
;; live  kill	

Successors:  5 [50.0%]  (fallthru) 7 [50.0%] 
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp]


Basic block 5 , prev 4, next 6, loop_depth 1, count 0, freq 2143, maybe hot.
Predecessors:  4 [50.0%]  (fallthru)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 0 [r0] 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp]
;; live  gen 	 0 [r0] 24 [cc]
;; live  kill	

Successors:  6 [0.0%]  (fallthru,loop_exit) 7 [100.0%] 
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp]


Basic block 6 , prev 5, next 7, loop_depth 0, count 0, freq 1.
Predecessors:  5 [0.0%]  (fallthru,loop_exit)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc]
;; live  kill	 14 [lr]

Successors:  12 [100.0%] 
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 13 [sp]


Basic block 7 , prev 6, next 8, loop_depth 1, count 0, freq 4285, maybe hot.
Predecessors:  4 [50.0%]  5 [100.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 0 [r0] 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp]
;; live  gen 	 0 [r0] 24 [cc]
;; live  kill	

Successors:  8 [100.0%]  (fallthru)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp]


Basic block 8 , prev 7, next 9, loop_depth 1, count 0, freq 8570, maybe hot.
Predecessors:  3 [50.0%]  7 [100.0%]  (fallthru)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 3 [r3] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

Successors:  3 [83.3%]  (dfs_back) 9 [16.7%]  (fallthru,loop_exit)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp]


Basic block 9 , prev 8, next 10, loop_depth 0, count 0, freq 1429, maybe hot.
Predecessors:  8 [16.7%]  (fallthru,loop_exit)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 4 [r4] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 2 [r2] 4 [r4] 5 [r5] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

Successors:  10 [0.0%]  (fallthru) 11 [100.0%] 
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp]


Basic block 10 , prev 9, next 11, loop_depth 0, count 0, freq 1.
Predecessors:  9 [0.0%]  (fallthru)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc]
;; live  kill	 14 [lr]

Successors:  11 [100.0%]  (fallthru)
;; lr  out 	 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 13 [sp]


Basic block 11 , prev 10, next 12, loop_depth 0, count 0, freq 1429, maybe hot.
Predecessors:  10 [100.0%]  (fallthru) 9 [100.0%] 
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 4 [r4] 5 [r5] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	

Successors:  12 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 13 [sp]


Basic block 12 , prev 11, next 1, loop_depth 0, count 0, freq 1430, maybe hot.
Predecessors:  11 [100.0%]  (fallthru) 6 [100.0%] 
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 13 [sp]
;; live  gen 	
;; live  kill	

Successors:  EXIT [100.0%] 
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 13 [sp]


Basic block 1 , prev 12, loop_depth 0, count 0, freq 1430, maybe hot.
Predecessors:  12 [100.0%] 
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(4){ }u-1(5){ }u-1(13){ }u-1(14){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; lr  def 	
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 13 [sp]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	




pcibios_enable_device

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={20d,22u} r1={13d,13u} r2={8d,5u} r3={13d,14u,4d} r4={2d,11u} r5={2d,3u} r12={4d} r13={2d,27u} r14={5d,2u} r15={4d} r16={4d} r17={4d} r18={4d} r19={4d} r20={4d} r21={4d} r22={4d} r23={4d} r24={14d,16u} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r81={4d} r82={4d} r83={4d} r84={4d} r85={4d} r86={4d} r87={4d} r88={4d} r89={4d} r90={4d} r91={4d} r92={4d} r93={4d} r94={4d} r95={4d} r96={4d} r97={4d} r98={4d} r99={4d} r100={4d} r101={4d} r102={4d} r103={4d} r104={4d} r105={4d} r106={4d} r107={4d} r108={4d} r109={4d} r110={4d} r111={4d} r112={4d} r113={4d} r114={4d} r115={4d} r116={4d} r117={4d} r118={4d} r119={4d} r120={4d} r121={4d} r122={4d} r123={4d} r124={4d} r125={4d} r126={4d} r127={4d} 
;;    total ref usage 640{523d,113u,4e} in 62{58 regular + 4 call} insns.
(note 2 0 153 NOTE_INSN_DELETED)

(note 153 2 154 2 ( dev (expr_list:REG_DEP_TRUE (reg:SI 0 r0 [ dev ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 154 153 6 2 ( mask (expr_list:REG_DEP_TRUE (reg:SI 1 r1 [ mask ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 12 [ip] 13 [sp] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 154 5 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 5 6 8 2 NOTE_INSN_FUNCTION_BEG)

(note 8 5 139 2 NOTE_INSN_DELETED)

(insn/f:TI 139 8 156 2 arch/arm/kernel/bios32.c:620 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 0 r0)
                    ] 2))
            (use (reg:SI 1 r1))
            (use (reg:SI 2 r2))
            (use (reg:SI 4 r4))
            (use (reg:SI 5 r5))
            (use (reg:SI 14 lr))
        ]) 327 {*push_multi} (expr_list:REG_DEAD (reg:SI 14 lr)
        (expr_list:REG_DEAD (reg:SI 5 r5)
            (expr_list:REG_DEAD (reg:SI 4 r4)
                (expr_list:REG_DEAD (reg:SI 2 r2)
                    (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                                (set/f (reg/f:SI 13 sp)
                                    (plus:SI (reg/f:SI 13 sp)
                                        (const_int -24 [0xffffffffffffffe8])))
                                (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                                    (reg:SI 0 r0))
                                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                            (const_int 4 [0x4])) [0 S4 A32])
                                    (reg:SI 1 r1))
                                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                            (const_int 8 [0x8])) [0 S4 A32])
                                    (reg:SI 2 r2))
                                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                            (const_int 12 [0xc])) [0 S4 A32])
                                    (reg:SI 4 r4))
                                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                            (const_int 16 [0x10])) [0 S4 A32])
                                    (reg:SI 5 r5))
                                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                            (const_int 20 [0x14])) [0 S4 A32])
                                    (reg:SI 14 lr))
                            ])
                        (nil)))))))

(note 156 139 155 2 ( dev (nil)) NOTE_INSN_VAR_LOCATION)

(note 155 156 140 2 ( mask (nil)) NOTE_INSN_VAR_LOCATION)

(note 140 155 3 2 NOTE_INSN_PROLOGUE_END)

(insn:TI 3 140 157 2 arch/arm/kernel/bios32.c:620 (set (reg/v/f:SI 4 r4 [orig:142 dev ] [142])
        (reg:SI 0 r0 [ dev ])) 167 {*arm_movsi_insn} (nil))

(note 157 3 11 2 ( dev (expr_list:REG_DEP_TRUE (reg:SI 0 r0 [ dev ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 11 157 12 2 include/linux/pci.h:755 (set (reg:SI 2 r2)
        (const_int 4 [0x4])) 167 {*arm_movsi_insn} (nil))

(insn 12 11 4 2 include/linux/pci.h:755 (set (reg:SI 3 r3)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 6 [0x6]))) 4 {*arm_addsi3} (nil))

(insn:TI 4 12 158 2 arch/arm/kernel/bios32.c:620 (set (reg/v:SI 5 r5 [orig:143 mask ] [143])
        (reg:SI 1 r1 [ mask ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ mask ])
        (nil)))

(note 158 4 9 2 ( mask (expr_list:REG_DEP_TRUE (reg:SI 1 r1 [ mask ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn 9 158 159 2 include/linux/pci.h:755 (set (reg:SI 0 r0)
        (mem/s/f/j:SI (plus:SI (reg/f:SI 0 r0 [orig:142 dev ] [142])
                (const_int 8 [0x8])) [0 <variable>.bus+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(note 159 9 10 2 ( dev (expr_list:REG_DEP_TRUE (reg/v/f:SI 4 r4 [orig:142 dev ] [142])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 10 159 160 2 include/linux/pci.h:755 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:142 dev ] [142])
                (const_int 28 [0x1c])) [0 <variable>.devfn+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(note 160 10 13 2 ( mask (expr_list:REG_DEP_TRUE (reg/v:SI 5 r5 [orig:143 mask ] [143])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(call_insn:TI 13 160 14 2 include/linux/pci.h:755 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("pci_bus_read_config_word") [flags 0x41] <function_decl 0x10f95680 pci_bus_read_config_word>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_UNUSED (reg:SI 0 r0)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 14 13 162 2 arch/arm/kernel/bios32.c:626 (set (reg/v:SI 2 r2 [orig:139 old_cmd ] [139])
        (zero_extend:SI (mem/c/i:HI (plus:SI (reg/f:SI 13 sp)
                    (const_int 6 [0x6])) [0 cmd+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(note 162 14 161 2 ( old_cmd (expr_list:REG_DEP_TRUE (reg:HI 2 r2 [ old_cmd ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 161 162 15 2 ( cmd (expr_list:REG_DEP_TRUE (mem/c/i:HI (plus:SI (reg/f:SI 26 afp)
            (const_int -22 [0xffffffffffffffea])) [0 cmd+0 S2 A16])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 15 161 16 2 arch/arm/kernel/bios32.c:626 (set (reg:SI 3 r3 [orig:135 ivtmp.717 ] [135])
        (reg/v/f:SI 4 r4 [orig:142 dev ] [142])) 167 {*arm_movsi_insn} (nil))

(insn 16 15 163 2 arch/arm/kernel/bios32.c:627 (set (reg/v:SI 1 r1 [orig:138 idx ] [138])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))
;; End of basic block 2 -> ( 3)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp]


;; Succ edge  3 [100.0%]  (fallthru)

(note 163 16 164 3 ( idx (expr_list:REG_DEP_TRUE (reg/v:SI 1 r1 [orig:138 idx ] [138])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 164 163 71 3 ( cmd (expr_list:REG_DEP_TRUE (mem/c/i:HI (plus:SI (reg/f:SI 26 afp)
            (const_int -22 [0xffffffffffffffea])) [0 cmd+0 S2 A16])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 8 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc]
;; live  kill	

;; Pred edge  8 [83.3%]  (dfs_back)
;; Pred edge  2 [100.0%]  (fallthru)
(code_label 71 164 17 3 83 "" [1 uses])

(note 17 71 19 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 19 17 18 3 NOTE_INSN_DELETED)

(insn:TI 18 19 69 3 arch/arm/kernel/bios32.c:629 (set (reg:SI 0 r0 [145])
        (ashiftrt:SI (reg/v:SI 5 r5 [orig:143 mask ] [143])
            (reg/v:SI 1 r1 [orig:138 idx ] [138]))) 117 {*arm_shiftsi3} (nil))

(insn 69 18 20 3 arch/arm/kernel/bios32.c:627 (set (reg/v:SI 1 r1 [orig:138 idx ] [138])
        (plus:SI (reg/v:SI 1 r1 [orig:138 idx ] [138])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn:TI 20 69 21 3 arch/arm/kernel/bios32.c:629 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 0 r0 [145])
                (const_int 1 [0x1])
                (const_int 0 [0x0]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg:SI 0 r0 [145])
        (nil)))

(jump_insn:TI 21 20 22 3 arch/arm/kernel/bios32.c:629 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 67)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 3 -> ( 8 4)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp]


;; Succ edge  8 [50.0%] 
;; Succ edge  4 [50.0%]  (fallthru)

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 0 [r0] 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp]
;; live  gen 	 0 [r0] 24 [cc]
;; live  kill	

;; Pred edge  3 [50.0%]  (fallthru)
(note 22 21 23 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn:TI 23 22 24 4 arch/arm/kernel/bios32.c:633 (set (reg:SI 0 r0 [orig:147 <variable>.start ] [147])
        (mem/s/j:SI (plus:SI (reg:SI 3 r3 [orig:135 ivtmp.717 ] [135])
                (const_int 464 [0x1d0])) [0 <variable>.start+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg:SI 3 r3 [orig:135 ivtmp.717 ] [135])
                (const_int 464 [0x1d0])) [0 <variable>.start+0 S4 A32])
        (nil)))

(insn:TI 24 23 25 4 arch/arm/kernel/bios32.c:633 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0 [orig:147 <variable>.start ] [147])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [orig:147 <variable>.start ] [147])
        (nil)))

(jump_insn:TI 25 24 26 4 arch/arm/kernel/bios32.c:633 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 45)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 4 -> ( 5 7)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp]


;; Succ edge  5 [50.0%]  (fallthru)
;; Succ edge  7 [50.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 0 [r0] 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp]
;; live  gen 	 0 [r0] 24 [cc]
;; live  kill	

;; Pred edge  4 [50.0%]  (fallthru)
(note 26 25 27 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn:TI 27 26 28 5 arch/arm/kernel/bios32.c:633 discrim 1 (set (reg:SI 0 r0 [orig:148 <variable>.end ] [148])
        (mem/s/j:SI (plus:SI (reg:SI 3 r3 [orig:135 ivtmp.717 ] [135])
                (const_int 468 [0x1d4])) [0 <variable>.end+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg:SI 3 r3 [orig:135 ivtmp.717 ] [135])
                (const_int 468 [0x1d4])) [0 <variable>.end+0 S4 A32])
        (nil)))

(insn:TI 28 27 29 5 arch/arm/kernel/bios32.c:633 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0 [orig:148 <variable>.end ] [148])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [orig:148 <variable>.end ] [148])
        (nil)))

(jump_insn:TI 29 28 30 5 arch/arm/kernel/bios32.c:633 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 45)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 5 -> ( 6 7)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp]


;; Succ edge  6 [0.0%]  (fallthru,loop_exit)
;; Succ edge  7 [100.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  5 [0.0%]  (fallthru,loop_exit)
(note 30 29 31 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn:TI 31 30 165 6 include/linux/device.h:620 (set (reg/f:SI 1 r1 [orig:137 D.19078 ] [137])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:142 dev ] [142])
                (const_int 140 [0x8c])) [0 <variable>.dev.init_name+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(note 165 31 39 6 ( idx (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 39 165 32 6 arch/arm/kernel/bios32.c:634 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x11068d80>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x11068d80>)
        (nil)))

(insn:TI 32 39 35 6 include/linux/device.h:620 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 1 r1 [orig:137 D.19078 ] [137])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn:TI 35 32 41 6 include/linux/kobject.h:82 (cond_exec (eq (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg/f:SI 1 r1 [orig:137 D.19078 ] [137])
            (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:142 dev ] [142])
                    (const_int 104 [0x68])) [0 <variable>.dev.kobj.name+0 S4 A64]))) 2345 {neon_vornv2di+78} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(call_insn:TI 41 35 166 6 arch/arm/kernel/bios32.c:634 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(note 166 41 42 6 ( old_cmd (nil)) NOTE_INSN_VAR_LOCATION)

(insn 42 166 151 6 arch/arm/kernel/bios32.c:636 (set (reg:SI 0 r0 [orig:140 D.18842 ] [140])
        (const_int -22 [0xffffffffffffffea])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int -22 [0xffffffffffffffea])
        (nil)))

(jump_insn 151 42 152 6 arch/arm/kernel/bios32.c:636 (set (pc)
        (label_ref 115)) -1 (nil))
;; End of basic block 6 -> ( 12)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 13 [sp]


;; Succ edge  12 [100.0%] 

(barrier 152 151 167)

(note 167 152 168 7 ( old_cmd (expr_list:REG_DEP_TRUE (reg:HI 2 r2 [ old_cmd ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 168 167 45 7 ( idx (expr_list:REG_DEP_TRUE (reg/v:SI 1 r1 [orig:138 idx ] [138])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 4 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 0 [r0] 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp]
;; live  gen 	 0 [r0] 24 [cc]
;; live  kill	

;; Pred edge  4 [50.0%] 
;; Pred edge  5 [100.0%] 
(code_label 45 168 46 7 79 "" [2 uses])

(note 46 45 48 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(note 48 46 59 7 NOTE_INSN_DELETED)

(note 59 48 47 7 NOTE_INSN_DELETED)

(insn:TI 47 59 49 7 arch/arm/kernel/bios32.c:638 (set (reg:SI 0 r0 [orig:151 <variable>.flags ] [151])
        (mem/s/j:SI (plus:SI (reg:SI 3 r3 [orig:135 ivtmp.717 ] [135])
                (const_int 476 [0x1dc])) [0 <variable>.flags+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg:SI 3 r3 [orig:135 ivtmp.717 ] [135])
                (const_int 476 [0x1dc])) [0 <variable>.flags+0 S4 A32])
        (nil)))

(insn:TI 49 47 52 7 arch/arm/kernel/bios32.c:638 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 0 r0 [orig:151 <variable>.flags ] [151])
                (const_int 1 [0x1])
                (const_int 8 [0x8]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(insn:TI 52 49 169 7 arch/arm/kernel/bios32.c:639 (cond_exec (ne (reg:CC_NOOV 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 0 r0 [orig:153 cmd ] [153])
            (zero_extend:SI (mem/c/i:HI (plus:SI (reg/f:SI 13 sp)
                        (const_int 6 [0x6])) [0 cmd+0 S2 A16])))) 2332 {neon_vornv2di+65} (nil))

(note 169 52 54 7 ( cmd (expr_list:REG_DEP_TRUE (reg:HI 0 r0 [ cmd ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 54 169 170 7 arch/arm/kernel/bios32.c:639 (cond_exec (ne (reg:CC_NOOV 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 0 r0 [154])
            (ior:SI (reg:SI 0 r0 [orig:153 cmd ] [153])
                (const_int 1 [0x1])))) 2310 {neon_vornv2di+43} (nil))

(note 170 54 55 7 ( cmd (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 55 170 171 7 arch/arm/kernel/bios32.c:639 (cond_exec (ne (reg:CC_NOOV 24 cc)
            (const_int 0 [0x0]))
        (set (mem/c/i:HI (plus:SI (reg/f:SI 13 sp)
                    (const_int 6 [0x6])) [0 cmd+0 S2 A16])
            (reg:HI 0 r0 [154]))) 2348 {neon_vornv2di+81} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_DEAD (reg:HI 0 r0 [154])
            (nil))))

(note 171 55 58 7 ( cmd (expr_list:REG_DEP_TRUE (mem/c/i:HI (plus:SI (reg/f:SI 13 sp)
            (const_int 6 [0x6])) [0 cmd+0 S2 A16])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 58 171 60 7 arch/arm/kernel/bios32.c:640 (set (reg:SI 0 r0 [orig:156 <variable>.flags ] [156])
        (mem/s/j:SI (plus:SI (reg:SI 3 r3 [orig:135 ivtmp.717 ] [135])
                (const_int 476 [0x1dc])) [0 <variable>.flags+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg:SI 3 r3 [orig:135 ivtmp.717 ] [135])
                (const_int 476 [0x1dc])) [0 <variable>.flags+0 S4 A32])
        (nil)))

(insn:TI 60 58 63 7 arch/arm/kernel/bios32.c:640 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 0 r0 [orig:156 <variable>.flags ] [156])
                (const_int 1 [0x1])
                (const_int 9 [0x9]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(insn:TI 63 60 172 7 arch/arm/kernel/bios32.c:641 (cond_exec (ne (reg:CC_NOOV 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 0 r0 [orig:158 cmd ] [158])
            (zero_extend:SI (mem/c/i:HI (plus:SI (reg/f:SI 13 sp)
                        (const_int 6 [0x6])) [0 cmd+0 S2 A16])))) 2332 {neon_vornv2di+65} (nil))

(note 172 63 65 7 ( cmd (expr_list:REG_DEP_TRUE (reg:HI 0 r0 [ cmd ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 65 172 173 7 arch/arm/kernel/bios32.c:641 (cond_exec (ne (reg:CC_NOOV 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 0 r0 [159])
            (ior:SI (reg:SI 0 r0 [orig:158 cmd ] [158])
                (const_int 2 [0x2])))) 2310 {neon_vornv2di+43} (nil))

(note 173 65 66 7 ( cmd (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 66 173 174 7 arch/arm/kernel/bios32.c:641 (cond_exec (ne (reg:CC_NOOV 24 cc)
            (const_int 0 [0x0]))
        (set (mem/c/i:HI (plus:SI (reg/f:SI 13 sp)
                    (const_int 6 [0x6])) [0 cmd+0 S2 A16])
            (reg:HI 0 r0 [159]))) 2348 {neon_vornv2di+81} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_DEAD (reg:HI 0 r0 [159])
            (nil))))
;; End of basic block 7 -> ( 8)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp]


;; Succ edge  8 [100.0%]  (fallthru)

(note 174 66 175 8 ( cmd (expr_list:REG_DEP_TRUE (mem/c/i:HI (plus:SI (reg/f:SI 13 sp)
            (const_int 6 [0x6])) [0 cmd+0 S2 A16])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 175 174 67 8 ( cmd (expr_list:REG_DEP_TRUE (mem/c/i:HI (plus:SI (reg/f:SI 13 sp)
            (const_int 6 [0x6])) [0 cmd+0 S2 A16])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 3 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 3 [r3] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  3 [50.0%] 
;; Pred edge  7 [100.0%]  (fallthru)
(code_label 67 175 68 8 78 "" [1 uses])

(note 68 67 72 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn:TI 72 68 70 8 arch/arm/kernel/bios32.c:627 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 1 r1 [orig:138 idx ] [138])
            (const_int 6 [0x6]))) 219 {*arm_cmpsi_insn} (nil))

(insn 70 72 73 8 arch/arm/kernel/bios32.c:627 (set (reg:SI 3 r3 [orig:135 ivtmp.717 ] [135])
        (plus:SI (reg:SI 3 r3 [orig:135 ivtmp.717 ] [135])
            (const_int 28 [0x1c]))) 4 {*arm_addsi3} (nil))

(jump_insn:TI 73 70 176 8 arch/arm/kernel/bios32.c:627 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 71)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 8333 [0x208d])
            (nil))))
;; End of basic block 8 -> ( 3 9)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp]


;; Succ edge  3 [83.3%]  (dfs_back)
;; Succ edge  9 [16.7%]  (fallthru,loop_exit)

(note 176 73 74 9 ( cmd (expr_list:REG_DEP_TRUE (mem/c/i:HI (plus:SI (reg/f:SI 26 afp)
            (const_int -22 [0xffffffffffffffea])) [0 cmd+0 S2 A16])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 4 [r4] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 2 [r2] 4 [r4] 5 [r5] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  8 [16.7%]  (fallthru,loop_exit)
(note 74 176 75 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(note 75 74 76 9 NOTE_INSN_DELETED)

(insn:TI 76 75 77 9 arch/arm/kernel/bios32.c:647 (set (reg:SI 3 r3 [160])
        (zero_extend:SI (mem/s/j:HI (plus:SI (reg/v/f:SI 4 r4 [orig:142 dev ] [142])
                    (const_int 42 [0x2a])) [0 <variable>.class+2 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn:TI 77 76 80 9 arch/arm/kernel/bios32.c:647 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [160])
            (const_int 6 [0x6]))) 219 {*arm_cmpsi_insn} (nil))

(insn:TI 80 77 177 9 arch/arm/kernel/bios32.c:648 (cond_exec (eq (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 3 r3 [orig:163 cmd ] [163])
            (zero_extend:SI (mem/c/i:HI (plus:SI (reg/f:SI 13 sp)
                        (const_int 6 [0x6])) [0 cmd+0 S2 A16])))) 2332 {neon_vornv2di+65} (nil))

(note 177 80 82 9 ( cmd (expr_list:REG_DEP_TRUE (reg:HI 3 r3 [ cmd ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 82 177 178 9 arch/arm/kernel/bios32.c:648 (cond_exec (eq (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 3 r3 [164])
            (ior:SI (reg:SI 3 r3 [orig:163 cmd ] [163])
                (const_int 3 [0x3])))) 2310 {neon_vornv2di+43} (nil))

(note 178 82 83 9 ( cmd (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 83 178 179 9 arch/arm/kernel/bios32.c:648 (cond_exec (eq (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (mem/c/i:HI (plus:SI (reg/f:SI 13 sp)
                    (const_int 6 [0x6])) [0 cmd+0 S2 A16])
            (reg:HI 3 r3 [164]))) 2348 {neon_vornv2di+81} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_DEAD (reg:HI 3 r3 [164])
            (nil))))

(note 179 83 86 9 ( cmd (expr_list:REG_DEP_TRUE (mem/c/i:HI (plus:SI (reg/f:SI 13 sp)
            (const_int 6 [0x6])) [0 cmd+0 S2 A16])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 86 179 87 9 arch/arm/kernel/bios32.c:650 (set (reg:SI 3 r3 [orig:134 cmd.723 ] [134])
        (zero_extend:SI (mem/c/i:HI (plus:SI (reg/f:SI 13 sp)
                    (const_int 6 [0x6])) [0 cmd+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn:TI 87 86 88 9 arch/arm/kernel/bios32.c:650 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [orig:134 cmd.723 ] [134])
            (reg/v:SI 2 r2 [orig:139 old_cmd ] [139]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn:TI 88 87 180 9 arch/arm/kernel/bios32.c:650 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 146)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 9 -> ( 10 11)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp]


;; Succ edge  10 [0.0%]  (fallthru)
;; Succ edge  11 [100.0%] 

(note 180 88 94 10 ( cmd (expr_list:REG_DEP_TRUE (mem/c/i:HI (plus:SI (reg/f:SI 26 afp)
            (const_int -22 [0xffffffffffffffea])) [0 cmd+0 S2 A16])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  9 [0.0%]  (fallthru)
(note 94 180 108 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(note 108 94 95 10 NOTE_INSN_DELETED)

(insn:TI 95 108 181 10 include/linux/device.h:620 (set (reg/f:SI 1 r1 [orig:136 D.19084 ] [136])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:142 dev ] [142])
                (const_int 140 [0x8c])) [0 <variable>.dev.init_name+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(note 181 95 103 10 ( idx (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 103 181 96 10 arch/arm/kernel/bios32.c:651 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x1138fb40>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x1138fb40>)
        (nil)))

(insn:TI 96 103 99 10 include/linux/device.h:620 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 1 r1 [orig:136 D.19084 ] [136])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn:TI 99 96 107 10 include/linux/kobject.h:82 (cond_exec (eq (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg/f:SI 1 r1 [orig:136 D.19084 ] [136])
            (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:142 dev ] [142])
                    (const_int 104 [0x68])) [0 <variable>.dev.kobj.name+0 S4 A64]))) 2345 {neon_vornv2di+78} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(call_insn:TI 107 99 182 10 arch/arm/kernel/bios32.c:651 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_UNUSED (reg:SI 0 r0)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(note 182 107 110 10 ( old_cmd (nil)) NOTE_INSN_VAR_LOCATION)

(insn 110 182 109 10 include/linux/pci.h:768 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:142 dev ] [142])
                (const_int 28 [0x1c])) [0 <variable>.devfn+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn:TI 109 110 111 10 include/linux/pci.h:768 (set (reg:SI 0 r0)
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:142 dev ] [142])
                (const_int 8 [0x8])) [0 <variable>.bus+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 111 109 112 10 include/linux/pci.h:768 (set (reg:SI 2 r2)
        (const_int 4 [0x4])) 167 {*arm_movsi_insn} (nil))

(insn:TI 112 111 113 10 include/linux/pci.h:768 (set (reg:SI 3 r3)
        (zero_extend:SI (mem/c/i:HI (plus:SI (reg/f:SI 13 sp)
                    (const_int 6 [0x6])) [0 cmd+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(call_insn:TI 113 112 183 10 include/linux/pci.h:768 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("pci_bus_write_config_word") [flags 0x41] <function_decl 0x10f95800 pci_bus_write_config_word>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_UNUSED (reg:SI 0 r0)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 10 -> ( 11)
;; lr  out 	 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 13 [sp]


;; Succ edge  11 [100.0%]  (fallthru)

(note 183 113 184 11 ( old_cmd (expr_list:REG_DEP_TRUE (reg:HI 2 r2 [ old_cmd ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 184 183 146 11 ( idx (expr_list:REG_DEP_TRUE (reg/v:SI 1 r1 [orig:138 idx ] [138])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 10 9) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 4 [r4] 5 [r5] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  10 [100.0%]  (fallthru)
;; Pred edge  9 [100.0%] 
(code_label 146 184 144 11 89 "" [1 uses])

(note 144 146 114 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn:TI 114 144 115 11 arch/arm/kernel/bios32.c:655 (set (reg:SI 0 r0 [orig:140 D.18842 ] [140])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))
;; End of basic block 11 -> ( 12)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 13 [sp]


;; Succ edge  12 [100.0%]  (fallthru)

;; Start of basic block ( 11 6) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 13 [sp]
;; live  gen 	
;; live  kill	

;; Pred edge  11 [100.0%]  (fallthru)
;; Pred edge  6 [100.0%] 
(code_label 115 114 116 12 81 "" [1 uses])

(note 116 115 127 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 127 116 141 12 arch/arm/kernel/bios32.c:656 (use (reg/i:SI 0 r0)) -1 (nil))

(note 141 127 142 12 NOTE_INSN_EPILOGUE_BEG)

(jump_insn:TI 142 141 143 12 arch/arm/kernel/bios32.c:656 (unspec_volatile [
            (return)
        ] 1) 323 {*epilogue_insns} (nil))
;; End of basic block 12 -> ( 1)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 13 [sp]


;; Succ edge  EXIT [100.0%] 

(barrier 143 142 137)

(note 137 143 138 NOTE_INSN_DELETED)

(note 138 137 0 NOTE_INSN_DELETED)


;; Function pcibios_fixup_bus (pcibios_fixup_bus)[0:1056]


Basic block 2:
IN:
Stack adjustment: 0
Reg 0: bus+0
Variables:
  name: bus
    offset 0
      (reg:SI 0 r0 [ bus ])

OUT:
Stack adjustment: 48
Reg 0: bus+0
Reg 6: bus+0
Reg 7: root+0
Variables:
  name: root
    offset 0
      (reg/v/f:SI 7 r7 [orig:144 root ] [144])
  name: bus
    offset 0
      (reg/f:SI 0 r0 [orig:152 bus ] [152])
      (reg/v/f:SI 6 r6 [orig:152 bus ] [152])


Basic block 3:
IN:
Stack adjustment: 48
Reg 0: bus+0
Reg 6: bus+0
Reg 7: root+0
Variables:
  name: root
    offset 0
      (reg/v/f:SI 7 r7 [orig:144 root ] [144])
  name: bus
    offset 0
      (reg/f:SI 0 r0 [orig:152 bus ] [152])
      (reg/v/f:SI 6 r6 [orig:152 bus ] [152])

OUT:
Stack adjustment: 48
Reg 0: bus+0
Reg 6: bus+0
Reg 7: root+0
Variables:
  name: root
    offset 0
      (reg/v/f:SI 7 r7 [orig:144 root ] [144])
  name: bus
    offset 0
      (reg/f:SI 0 r0 [orig:152 bus ] [152])
      (reg/v/f:SI 6 r6 [orig:152 bus ] [152])


Basic block 4:
IN:
Stack adjustment: 48
Reg 0: bus+0
Reg 6: bus+0
Reg 7: root+0
Variables:
  name: root
    offset 0
      (reg/v/f:SI 7 r7 [orig:144 root ] [144])
  name: bus
    offset 0
      (reg/f:SI 0 r0 [orig:152 bus ] [152])
      (reg/v/f:SI 6 r6 [orig:152 bus ] [152])

OUT:
Stack adjustment: 48
Reg 0: bus+0
Reg 4: dev+0
Reg 5: features+0
Reg 6: bus+0
Reg 7: root+0
Variables:
  name: root
    offset 0
      (reg/v/f:SI 7 r7 [orig:144 root ] [144])
  name: dev
    offset 0
      (reg/v/f:SI 4 r4 [orig:143 dev ] [143])
  name: features
    offset 0
      (reg:HI 5 r5 [ features ])
  name: bus
    offset 0
      (reg/v/f:SI 6 r6 [orig:152 bus ] [152])
      (reg/f:SI 0 r0 [orig:152 bus ] [152])


Basic block 5:
IN:
Stack adjustment: 48
Reg 0: bus+0
Reg 2: i+0
Reg 4: dev+0
Reg 5: features+0
Reg 6: bus+0
Reg 7: root+0
Variables:
  name: status
    offset 0
      (mem/c/i:HI (plus:SI (reg/f:SI 13 sp)
        (const_int 6 [0x6])) [0 status+0 S2 A16])
  name: bus
    offset 0
      (reg/v/f:SI 6 r6 [orig:152 bus ] [152])
      (reg/f:SI 0 r0 [orig:152 bus ] [152])
  name: root
    offset 0
      (reg/v/f:SI 7 r7 [orig:144 root ] [144])
  name: dev
    offset 0
      (reg/v/f:SI 4 r4 [orig:143 dev ] [143])
  name: features
    offset 0
      (reg:HI 5 r5 [ features ])
  name: i
    offset 0
      (reg/v:SI 2 r2 [orig:139 i ] [139])

OUT:
Stack adjustment: 48
Reg 2: i+0
Reg 4: dev+0
Reg 5: features+0
Reg 6: bus+0
Reg 7: root+0
Variables:
  name: status
    offset 0
      (mem/c/i:HI (plus:SI (reg/f:SI 13 sp)
        (const_int 6 [0x6])) [0 status+0 S2 A16])
  name: bus
    offset 0
      (reg/v/f:SI 6 r6 [orig:152 bus ] [152])
  name: root
    offset 0
      (reg/v/f:SI 7 r7 [orig:144 root ] [144])
  name: dev
    offset 0
      (reg/v/f:SI 4 r4 [orig:143 dev ] [143])
  name: features
    offset 0
      (reg:HI 5 r5 [ features ])
  name: i
    offset 0
      (reg/v:SI 2 r2 [orig:139 i ] [139])


Basic block 6:
IN:
Stack adjustment: 48
Reg 2: i+0
Reg 4: dev+0
Reg 5: features+0
Reg 6: bus+0
Reg 7: root+0
Variables:
  name: status
    offset 0
      (mem/c/i:HI (plus:SI (reg/f:SI 13 sp)
        (const_int 6 [0x6])) [0 status+0 S2 A16])
  name: root
    offset 0
      (reg/v/f:SI 7 r7 [orig:144 root ] [144])
  name: features
    offset 0
      (reg:HI 5 r5 [ features ])
  name: dev
    offset 0
      (reg/v/f:SI 4 r4 [orig:143 dev ] [143])
  name: bus
    offset 0
      (reg/v/f:SI 6 r6 [orig:152 bus ] [152])
  name: i
    offset 0
      (reg/v:SI 2 r2 [orig:139 i ] [139])

OUT:
Stack adjustment: 48
Reg 2: i+0
Reg 4: dev+0
Reg 5: features+0
Reg 6: bus+0
Reg 7: root+0
Variables:
  name: status
    offset 0
      (mem/c/i:HI (plus:SI (reg/f:SI 13 sp)
        (const_int 6 [0x6])) [0 status+0 S2 A16])
  name: bus
    offset 0
      (reg/v/f:SI 6 r6 [orig:152 bus ] [152])
  name: root
    offset 0
      (reg/v/f:SI 7 r7 [orig:144 root ] [144])
  name: dev
    offset 0
      (reg/v/f:SI 4 r4 [orig:143 dev ] [143])
  name: features
    offset 0
      (reg:HI 5 r5 [ features ])
  name: i
    offset 0
      (reg/v:SI 2 r2 [orig:139 i ] [139])


Basic block 7:
IN:
Stack adjustment: 48
Reg 2: i+0
Reg 4: dev+0
Reg 5: features+0
Reg 6: bus+0
Reg 7: root+0
Variables:
  name: status
    offset 0
      (mem/c/i:HI (plus:SI (reg/f:SI 13 sp)
        (const_int 6 [0x6])) [0 status+0 S2 A16])
  name: bus
    offset 0
      (reg/v/f:SI 6 r6 [orig:152 bus ] [152])
  name: root
    offset 0
      (reg/v/f:SI 7 r7 [orig:144 root ] [144])
  name: dev
    offset 0
      (reg/v/f:SI 4 r4 [orig:143 dev ] [143])
  name: features
    offset 0
      (reg:HI 5 r5 [ features ])
  name: i
    offset 0
      (reg/v:SI 2 r2 [orig:139 i ] [139])

OUT:
Stack adjustment: 48
Reg 2: i+0
Reg 4: dev+0
Reg 5: features+0
Reg 6: bus+0
Reg 7: root+0
Variables:
  name: status
    offset 0
      (mem/c/i:HI (plus:SI (reg/f:SI 13 sp)
        (const_int 6 [0x6])) [0 status+0 S2 A16])
  name: bus
    offset 0
      (reg/v/f:SI 6 r6 [orig:152 bus ] [152])
  name: root
    offset 0
      (reg/v/f:SI 7 r7 [orig:144 root ] [144])
  name: dev
    offset 0
      (reg/v/f:SI 4 r4 [orig:143 dev ] [143])
  name: features
    offset 0
      (reg:HI 5 r5 [ features ])
  name: i
    offset 0
      (reg/v:SI 2 r2 [orig:139 i ] [139])


Basic block 8:
IN:
Stack adjustment: 48
Reg 2: i+0
Reg 4: dev+0
Reg 5: features+0
Reg 6: bus+0
Reg 7: root+0
Variables:
  name: status
    offset 0
      (mem/c/i:HI (plus:SI (reg/f:SI 13 sp)
        (const_int 6 [0x6])) [0 status+0 S2 A16])
  name: root
    offset 0
      (reg/v/f:SI 7 r7 [orig:144 root ] [144])
  name: features
    offset 0
      (reg:HI 5 r5 [ features ])
  name: dev
    offset 0
      (reg/v/f:SI 4 r4 [orig:143 dev ] [143])
  name: bus
    offset 0
      (reg/v/f:SI 6 r6 [orig:152 bus ] [152])
  name: i
    offset 0
      (reg/v:SI 2 r2 [orig:139 i ] [139])

OUT:
Stack adjustment: 48
Reg 4: dev+0
Reg 5: features+0
Reg 6: bus+0
Reg 7: root+0
Variables:
  name: bus
    offset 0
      (reg/v/f:SI 6 r6 [orig:152 bus ] [152])
  name: root
    offset 0
      (reg/v/f:SI 7 r7 [orig:144 root ] [144])
  name: dev
    offset 0
      (reg/v/f:SI 4 r4 [orig:143 dev ] [143])
  name: features
    offset 0
      (reg:HI 5 r5 [ features ])


Basic block 9:
IN:
Stack adjustment: 48
Reg 4: dev+0
Reg 5: features+0
Reg 6: bus+0
Reg 7: root+0
Variables:
  name: root
    offset 0
      (reg/v/f:SI 7 r7 [orig:144 root ] [144])
  name: dev
    offset 0
      (reg/v/f:SI 4 r4 [orig:143 dev ] [143])
  name: features
    offset 0
      (reg:HI 5 r5 [ features ])
  name: bus
    offset 0
      (reg/v/f:SI 6 r6 [orig:152 bus ] [152])

OUT:
Stack adjustment: 48
Reg 4: dev+0
Reg 5: features+0
Reg 6: bus+0
Reg 7: root+0
Variables:
  name: root
    offset 0
      (reg/v/f:SI 7 r7 [orig:144 root ] [144])
  name: dev
    offset 0
      (reg/v/f:SI 4 r4 [orig:143 dev ] [143])
  name: features
    offset 0
      (reg:HI 5 r5 [ features ])
  name: bus
    offset 0
      (reg/v/f:SI 6 r6 [orig:152 bus ] [152])


Basic block 10:
IN:
Stack adjustment: 48
Reg 4: dev+0
Reg 5: features+0
Reg 6: bus+0
Reg 7: root+0
Variables:
  name: root
    offset 0
      (reg/v/f:SI 7 r7 [orig:144 root ] [144])
  name: dev
    offset 0
      (reg/v/f:SI 4 r4 [orig:143 dev ] [143])
  name: features
    offset 0
      (reg:HI 5 r5 [ features ])
  name: bus
    offset 0
      (reg/v/f:SI 6 r6 [orig:152 bus ] [152])

OUT:
Stack adjustment: 48
Reg 4: dev+0
Reg 5: features+0
Reg 6: bus+0
Reg 7: root+0
Variables:
  name: root
    offset 0
      (reg/v/f:SI 7 r7 [orig:144 root ] [144])
  name: dev
    offset 0
      (reg/v/f:SI 4 r4 [orig:143 dev ] [143])
  name: features
    offset 0
      (reg:HI 5 r5 [ features ])
  name: bus
    offset 0
      (reg/v/f:SI 6 r6 [orig:152 bus ] [152])


Basic block 11:
IN:
Stack adjustment: 48
Reg 4: dev+0
Reg 5: features+0
Reg 6: bus+0
Reg 7: root+0
Variables:
  name: root
    offset 0
      (reg/v/f:SI 7 r7 [orig:144 root ] [144])
  name: dev
    offset 0
      (reg/v/f:SI 4 r4 [orig:143 dev ] [143])
  name: features
    offset 0
      (reg:HI 5 r5 [ features ])
  name: bus
    offset 0
      (reg/v/f:SI 6 r6 [orig:152 bus ] [152])

OUT:
Stack adjustment: 48
Reg 4: dev+0
Reg 5: features+0
Reg 6: bus+0
Reg 7: root+0
Variables:
  name: root
    offset 0
      (reg/v/f:SI 7 r7 [orig:144 root ] [144])
  name: dev
    offset 0
      (reg/v/f:SI 4 r4 [orig:143 dev ] [143])
  name: features
    offset 0
      (reg:HI 5 r5 [ features ])
  name: bus
    offset 0
      (reg/v/f:SI 6 r6 [orig:152 bus ] [152])


Basic block 12:
IN:
Stack adjustment: 48
Reg 4: dev+0
Reg 5: features+0
Reg 6: bus+0
Reg 7: root+0
Variables:
  name: root
    offset 0
      (reg/v/f:SI 7 r7 [orig:144 root ] [144])
  name: dev
    offset 0
      (reg/v/f:SI 4 r4 [orig:143 dev ] [143])
  name: features
    offset 0
      (reg:HI 5 r5 [ features ])
  name: bus
    offset 0
      (reg/v/f:SI 6 r6 [orig:152 bus ] [152])

OUT:
Stack adjustment: 48
Reg 4: dev+0
Reg 5: features+0
Reg 6: bus+0
Reg 7: root+0
Variables:
  name: root
    offset 0
      (reg/v/f:SI 7 r7 [orig:144 root ] [144])
  name: dev
    offset 0
      (reg/v/f:SI 4 r4 [orig:143 dev ] [143])
  name: features
    offset 0
      (reg:HI 5 r5 [ features ])
  name: bus
    offset 0
      (reg/v/f:SI 6 r6 [orig:152 bus ] [152])


Basic block 13:
IN:
Stack adjustment: 48
Reg 4: dev+0
Reg 5: features+0
Reg 6: bus+0
Reg 7: root+0
Variables:
  name: root
    offset 0
      (reg/v/f:SI 7 r7 [orig:144 root ] [144])
  name: dev
    offset 0
      (reg/v/f:SI 4 r4 [orig:143 dev ] [143])
  name: features
    offset 0
      (reg:HI 5 r5 [ features ])
  name: bus
    offset 0
      (reg/v/f:SI 6 r6 [orig:152 bus ] [152])

OUT:
Stack adjustment: 48
Reg 4: dev+0
Reg 5: features+0
Reg 6: bus+0
Reg 7: root+0
Variables:
  name: root
    offset 0
      (reg/v/f:SI 7 r7 [orig:144 root ] [144])
  name: dev
    offset 0
      (reg/v/f:SI 4 r4 [orig:143 dev ] [143])
  name: features
    offset 0
      (reg:HI 5 r5 [ features ])
  name: bus
    offset 0
      (reg/v/f:SI 6 r6 [orig:152 bus ] [152])


Basic block 14:
IN:
Stack adjustment: 48
Reg 4: dev+0
Reg 5: features+0
Reg 6: bus+0
Reg 7: root+0
Variables:
  name: root
    offset 0
      (reg/v/f:SI 7 r7 [orig:144 root ] [144])
  name: dev
    offset 0
      (reg/v/f:SI 4 r4 [orig:143 dev ] [143])
  name: features
    offset 0
      (reg:HI 5 r5 [ features ])
  name: bus
    offset 0
      (reg/v/f:SI 6 r6 [orig:152 bus ] [152])

OUT:
Stack adjustment: 48
Reg 4: dev+0
Reg 5: features+0
Reg 6: bus+0
Reg 7: root+0
Variables:
  name: root
    offset 0
      (reg/v/f:SI 7 r7 [orig:144 root ] [144])
  name: dev
    offset 0
      (reg/v/f:SI 4 r4 [orig:143 dev ] [143])
  name: features
    offset 0
      (reg:HI 5 r5 [ features ])
  name: bus
    offset 0
      (reg/v/f:SI 6 r6 [orig:152 bus ] [152])


Basic block 15:
IN:
Stack adjustment: 48
Reg 4: dev+0
Reg 5: features+0
Reg 6: bus+0
Reg 7: root+0
Variables:
  name: root
    offset 0
      (reg/v/f:SI 7 r7 [orig:144 root ] [144])
  name: dev
    offset 0
      (reg/v/f:SI 4 r4 [orig:143 dev ] [143])
  name: features
    offset 0
      (reg:HI 5 r5 [ features ])
  name: bus
    offset 0
      (reg/v/f:SI 6 r6 [orig:152 bus ] [152])

OUT:
Stack adjustment: 48
Reg 3: status+0
Reg 4: dev+0
Reg 5: features+0
Reg 6: bus+0
Reg 7: root+0
Variables:
  name: root
    offset 0
      (reg/v/f:SI 7 r7 [orig:144 root ] [144])
  name: dev
    offset 0
      (reg/v/f:SI 4 r4 [orig:143 dev ] [143])
  name: features
    offset 0
      (reg:HI 5 r5 [ features ])
  name: status
    offset 0
      (reg:HI 3 r3 [ status.302 ])
  name: bus
    offset 0
      (reg/v/f:SI 6 r6 [orig:152 bus ] [152])


Basic block 16:
IN:
Stack adjustment: 48
Reg 4: dev+0
Reg 5: features+0
Reg 6: bus+0
Reg 7: root+0
Variables:
  name: root
    offset 0
      (reg/v/f:SI 7 r7 [orig:144 root ] [144])
  name: dev
    offset 0
      (reg/v/f:SI 4 r4 [orig:143 dev ] [143])
  name: features
    offset 0
      (reg:HI 5 r5 [ features ])
  name: bus
    offset 0
      (reg/v/f:SI 6 r6 [orig:152 bus ] [152])

OUT:
Stack adjustment: 48
Reg 3: status+0
Reg 4: dev+0
Reg 5: features+0
Reg 6: bus+0
Reg 7: root+0
Variables:
  name: root
    offset 0
      (reg/v/f:SI 7 r7 [orig:144 root ] [144])
  name: dev
    offset 0
      (reg/v/f:SI 4 r4 [orig:143 dev ] [143])
  name: features
    offset 0
      (reg:HI 5 r5 [ features ])
  name: status
    offset 0
      (reg:HI 3 r3 [ status.767 ])
  name: bus
    offset 0
      (reg/v/f:SI 6 r6 [orig:152 bus ] [152])


Basic block 17:
IN:
Stack adjustment: 48
Reg 3: status+0
Reg 4: dev+0
Reg 5: features+0
Reg 6: bus+0
Reg 7: root+0
Variables:
  name: root
    offset 0
      (reg/v/f:SI 7 r7 [orig:144 root ] [144])
  name: dev
    offset 0
      (reg/v/f:SI 4 r4 [orig:143 dev ] [143])
  name: features
    offset 0
      (reg:HI 5 r5 [ features ])
  name: status
    offset 0
      (reg:HI 3 r3 [ status.767 ])
  name: bus
    offset 0
      (reg/v/f:SI 6 r6 [orig:152 bus ] [152])

OUT:
Stack adjustment: 48
Reg 4: dev+0
Reg 5: features+0
Reg 6: bus+0
Reg 7: root+0
Variables:
  name: root
    offset 0
      (reg/v/f:SI 7 r7 [orig:144 root ] [144])
  name: dev
    offset 0
      (reg/v/f:SI 4 r4 [orig:143 dev ] [143])
  name: features
    offset 0
      (reg:HI 5 r5 [ features ])
  name: status
    offset 0
      (mem/c/i:HI (plus:SI (reg/f:SI 13 sp)
        (const_int 6 [0x6])) [0 status+0 S2 A16])
  name: bus
    offset 0
      (reg/v/f:SI 6 r6 [orig:152 bus ] [152])


Basic block 18:
IN:
Stack adjustment: 48
Reg 4: dev+0
Reg 5: features+0
Reg 6: bus+0
Reg 7: root+0
Variables:
  name: root
    offset 0
      (reg/v/f:SI 7 r7 [orig:144 root ] [144])
  name: dev
    offset 0
      (reg/v/f:SI 4 r4 [orig:143 dev ] [143])
  name: features
    offset 0
      (reg:HI 5 r5 [ features ])
  name: status
    offset 0
      (mem/c/i:HI (plus:SI (reg/f:SI 13 sp)
        (const_int 6 [0x6])) [0 status+0 S2 A16])
  name: bus
    offset 0
      (reg/v/f:SI 6 r6 [orig:152 bus ] [152])

OUT:
Stack adjustment: 48
Reg 4: dev+0
Reg 5: features+0
Reg 6: bus+0
Reg 7: root+0
Variables:
  name: root
    offset 0
      (reg/v/f:SI 7 r7 [orig:144 root ] [144])
  name: dev
    offset 0
      (reg/v/f:SI 4 r4 [orig:143 dev ] [143])
  name: features
    offset 0
      (reg:HI 5 r5 [ features ])
  name: status
    offset 0
      (mem/c/i:HI (plus:SI (reg/f:SI 13 sp)
        (const_int 6 [0x6])) [0 status+0 S2 A16])
  name: bus
    offset 0
      (reg/v/f:SI 6 r6 [orig:152 bus ] [152])


Basic block 19:
IN:
Stack adjustment: 48
Reg 0: bus+0
Reg 4: dev+0
Reg 5: features+0
Reg 6: bus+0
Reg 7: root+0
Variables:
  name: root
    offset 0
      (reg/v/f:SI 7 r7 [orig:144 root ] [144])
  name: dev
    offset 0
      (reg/v/f:SI 4 r4 [orig:143 dev ] [143])
  name: features
    offset 0
      (reg:HI 5 r5 [ features ])
  name: status
    offset 0
      (mem/c/i:HI (plus:SI (reg/f:SI 13 sp)
        (const_int 6 [0x6])) [0 status+0 S2 A16])
  name: bus
    offset 0
      (reg/v/f:SI 6 r6 [orig:152 bus ] [152])
      (reg/f:SI 0 r0 [orig:152 bus ] [152])

OUT:
Stack adjustment: 48
Reg 0: bus+0
Reg 4: dev+0
Reg 5: features+0
Reg 6: bus+0
Reg 7: root+0
Variables:
  name: root
    offset 0
      (reg/v/f:SI 7 r7 [orig:144 root ] [144])
  name: dev
    offset 0
      (reg/v/f:SI 4 r4 [orig:143 dev ] [143])
  name: features
    offset 0
      (reg:HI 5 r5 [ features ])
  name: status
    offset 0
      (mem/c/i:HI (plus:SI (reg/f:SI 13 sp)
        (const_int 6 [0x6])) [0 status+0 S2 A16])
  name: bus
    offset 0
      (reg/v/f:SI 6 r6 [orig:152 bus ] [152])
      (reg/f:SI 0 r0 [orig:152 bus ] [152])


Basic block 20:
IN:
Stack adjustment: 48
Reg 0: bus+0
Reg 4: dev+0
Reg 5: features+0
Reg 6: bus+0
Reg 7: root+0
Variables:
  name: root
    offset 0
      (reg/v/f:SI 7 r7 [orig:144 root ] [144])
  name: dev
    offset 0
      (reg/v/f:SI 4 r4 [orig:143 dev ] [143])
  name: features
    offset 0
      (reg:HI 5 r5 [ features ])
  name: status
    offset 0
      (mem/c/i:HI (plus:SI (reg/f:SI 13 sp)
        (const_int 6 [0x6])) [0 status+0 S2 A16])
  name: bus
    offset 0
      (reg/v/f:SI 6 r6 [orig:152 bus ] [152])
      (reg/f:SI 0 r0 [orig:152 bus ] [152])

OUT:
Stack adjustment: 48
Reg 0: bus+0
Reg 2: i+0
Reg 4: dev+0
Reg 5: features+0
Reg 6: bus+0
Reg 7: root+0
Variables:
  name: root
    offset 0
      (reg/v/f:SI 7 r7 [orig:144 root ] [144])
  name: dev
    offset 0
      (reg/v/f:SI 4 r4 [orig:143 dev ] [143])
  name: features
    offset 0
      (reg:HI 5 r5 [ features ])
  name: status
    offset 0
      (mem/c/i:HI (plus:SI (reg/f:SI 13 sp)
        (const_int 6 [0x6])) [0 status+0 S2 A16])
  name: bus
    offset 0
      (reg/v/f:SI 6 r6 [orig:152 bus ] [152])
      (reg/f:SI 0 r0 [orig:152 bus ] [152])
  name: i
    offset 0
      (reg/v:SI 2 r2 [orig:139 i ] [139])


Basic block 21:
IN:
Stack adjustment: 48
Reg 0: bus+0
Reg 4: dev+0
Reg 5: features+0
Reg 6: bus+0
Reg 7: root+0
Variables:
  name: root
    offset 0
      (reg/v/f:SI 7 r7 [orig:144 root ] [144])
  name: dev
    offset 0
      (reg/v/f:SI 4 r4 [orig:143 dev ] [143])
  name: features
    offset 0
      (reg:HI 5 r5 [ features ])
  name: status
    offset 0
      (mem/c/i:HI (plus:SI (reg/f:SI 13 sp)
        (const_int 6 [0x6])) [0 status+0 S2 A16])
  name: bus
    offset 0
      (reg/v/f:SI 6 r6 [orig:152 bus ] [152])
      (reg/f:SI 0 r0 [orig:152 bus ] [152])

OUT:
Stack adjustment: 48
Reg 0: bus+0
Reg 4: dev+0
Reg 5: features+0
Reg 6: bus+0
Variables:
  name: dev
    offset 0
      (reg/v/f:SI 4 r4 [orig:134 dev.764 ] [134])
  name: features
    offset 0
      (reg:HI 5 r5 [ features ])
  name: status
    offset 0
      (mem/c/i:HI (plus:SI (reg/f:SI 13 sp)
        (const_int 6 [0x6])) [0 status+0 S2 A16])
  name: bus
    offset 0
      (reg/v/f:SI 6 r6 [orig:152 bus ] [152])
      (reg/f:SI 0 r0 [orig:152 bus ] [152])


Basic block 22:
IN:
Stack adjustment: 48
Reg 0: bus+0
Reg 4: dev+0
Reg 5: features+0
Reg 6: bus+0
Variables:
  name: status
    offset 0
      (mem/c/i:HI (plus:SI (reg/f:SI 13 sp)
        (const_int 6 [0x6])) [0 status+0 S2 A16])
  name: dev
    offset 0
      (reg/v/f:SI 4 r4 [orig:134 dev.764 ] [134])
  name: features
    offset 0
      (reg:HI 5 r5 [ features ])
  name: bus
    offset 0
      (reg/v/f:SI 6 r6 [orig:152 bus ] [152])
      (reg/f:SI 0 r0 [orig:152 bus ] [152])
  name: cmd
    offset 0
      (mem/c/i:HI (plus:SI (reg/f:SI 13 sp)
        (const_int 6 [0x6])) [0 cmd+0 S2 A16])

OUT:
Stack adjustment: 48
Reg 4: dev+0
Reg 5: features+0
Reg 6: bus+0
Variables:
  name: status
    offset 0
      (mem/c/i:HI (plus:SI (reg/f:SI 13 sp)
        (const_int 6 [0x6])) [0 status+0 S2 A16])
  name: dev
    offset 0
      (reg/v/f:SI 4 r4 [orig:134 dev.764 ] [134])
  name: features
    offset 0
      (reg:HI 5 r5 [ features ])
  name: bus
    offset 0
      (reg/v/f:SI 6 r6 [orig:152 bus ] [152])
  name: cmd
    offset 0
      (mem/c/i:HI (plus:SI (reg/f:SI 13 sp)
        (const_int 6 [0x6])) [0 cmd+0 S2 A16])


Basic block 23:
IN:
Stack adjustment: 48
Reg 0: bus+0
Reg 4: dev+0
Reg 5: features+0
Reg 6: bus+0
Variables:
  name: status
    offset 0
      (mem/c/i:HI (plus:SI (reg/f:SI 13 sp)
        (const_int 6 [0x6])) [0 status+0 S2 A16])
  name: dev
    offset 0
      (reg/v/f:SI 4 r4 [orig:134 dev.764 ] [134])
  name: features
    offset 0
      (reg:HI 5 r5 [ features ])
  name: bus
    offset 0
      (reg/v/f:SI 6 r6 [orig:152 bus ] [152])
      (reg/f:SI 0 r0 [orig:152 bus ] [152])
  name: cmd
    offset 0
      (mem/c/i:HI (plus:SI (reg/f:SI 13 sp)
        (const_int 6 [0x6])) [0 cmd+0 S2 A16])

OUT:
Stack adjustment: 48
Reg 0: bus+0
Reg 4: dev+0
Reg 5: features+0
Reg 6: bus+0
Variables:
  name: status
    offset 0
      (mem/c/i:HI (plus:SI (reg/f:SI 13 sp)
        (const_int 6 [0x6])) [0 status+0 S2 A16])
  name: dev
    offset 0
      (reg/v/f:SI 4 r4 [orig:134 dev.764 ] [134])
  name: features
    offset 0
      (reg:HI 5 r5 [ features ])
  name: bus
    offset 0
      (reg/v/f:SI 6 r6 [orig:152 bus ] [152])
      (reg/f:SI 0 r0 [orig:152 bus ] [152])
  name: cmd
    offset 0
      (mem/c/i:HI (plus:SI (reg/f:SI 13 sp)
        (const_int 6 [0x6])) [0 cmd+0 S2 A16])


Basic block 24:
IN:
Stack adjustment: 48
Reg 0: bus+0
Reg 4: dev+0
Reg 5: features+0
Reg 6: bus+0
Variables:
  name: status
    offset 0
      (mem/c/i:HI (plus:SI (reg/f:SI 13 sp)
        (const_int 6 [0x6])) [0 status+0 S2 A16])
  name: dev
    offset 0
      (reg/v/f:SI 4 r4 [orig:134 dev.764 ] [134])
  name: features
    offset 0
      (reg:HI 5 r5 [ features ])
  name: bus
    offset 0
      (reg/v/f:SI 6 r6 [orig:152 bus ] [152])
      (reg/f:SI 0 r0 [orig:152 bus ] [152])
  name: cmd
    offset 0
      (mem/c/i:HI (plus:SI (reg/f:SI 13 sp)
        (const_int 6 [0x6])) [0 cmd+0 S2 A16])

OUT:
Stack adjustment: 48
Reg 0: bus+0
Reg 4: dev+0
Reg 5: features+0
Reg 6: bus+0
Variables:
  name: status
    offset 0
      (mem/c/i:HI (plus:SI (reg/f:SI 13 sp)
        (const_int 6 [0x6])) [0 status+0 S2 A16])
  name: dev
    offset 0
      (reg/v/f:SI 4 r4 [orig:134 dev.764 ] [134])
  name: features
    offset 0
      (reg:HI 5 r5 [ features ])
  name: bus
    offset 0
      (reg/v/f:SI 6 r6 [orig:152 bus ] [152])
      (reg/f:SI 0 r0 [orig:152 bus ] [152])
  name: cmd
    offset 0
      (mem/c/i:HI (plus:SI (reg/f:SI 13 sp)
        (const_int 6 [0x6])) [0 cmd+0 S2 A16])


Basic block 25:
IN:
Stack adjustment: 48
Reg 0: bus+0
Reg 4: dev+0
Reg 5: features+0
Reg 6: bus+0
Variables:
  name: status
    offset 0
      (mem/c/i:HI (plus:SI (reg/f:SI 13 sp)
        (const_int 6 [0x6])) [0 status+0 S2 A16])
  name: dev
    offset 0
      (reg/v/f:SI 4 r4 [orig:134 dev.764 ] [134])
  name: features
    offset 0
      (reg:HI 5 r5 [ features ])
  name: bus
    offset 0
      (reg/v/f:SI 6 r6 [orig:152 bus ] [152])
      (reg/f:SI 0 r0 [orig:152 bus ] [152])
  name: cmd
    offset 0
      (mem/c/i:HI (plus:SI (reg/f:SI 13 sp)
        (const_int 6 [0x6])) [0 cmd+0 S2 A16])

OUT:
Stack adjustment: 48
Reg 0: bus+0
Reg 4: dev+0
Reg 5: features+0
Reg 6: bus+0
Variables:
  name: status
    offset 0
      (mem/c/i:HI (plus:SI (reg/f:SI 13 sp)
        (const_int 6 [0x6])) [0 status+0 S2 A16])
  name: dev
    offset 0
      (reg/v/f:SI 4 r4 [orig:134 dev.764 ] [134])
  name: features
    offset 0
      (reg:HI 5 r5 [ features ])
  name: bus
    offset 0
      (reg/v/f:SI 6 r6 [orig:152 bus ] [152])
      (reg/f:SI 0 r0 [orig:152 bus ] [152])
  name: cmd
    offset 0
      (mem/c/i:HI (plus:SI (reg/f:SI 13 sp)
        (const_int 6 [0x6])) [0 cmd+0 S2 A16])


Basic block 26:
IN:
Stack adjustment: 48
Reg 0: bus+0
Reg 4: dev+0
Reg 5: features+0
Reg 6: bus+0
Variables:
  name: status
    offset 0
      (mem/c/i:HI (plus:SI (reg/f:SI 13 sp)
        (const_int 6 [0x6])) [0 status+0 S2 A16])
  name: dev
    offset 0
      (reg/v/f:SI 4 r4 [orig:134 dev.764 ] [134])
  name: features
    offset 0
      (reg:HI 5 r5 [ features ])
  name: bus
    offset 0
      (reg/v/f:SI 6 r6 [orig:152 bus ] [152])
      (reg/f:SI 0 r0 [orig:152 bus ] [152])
  name: cmd
    offset 0
      (mem/c/i:HI (plus:SI (reg/f:SI 13 sp)
        (const_int 6 [0x6])) [0 cmd+0 S2 A16])

OUT:
Stack adjustment: 48
Reg 0: bus+0
Reg 4: dev+0
Reg 5: features+0
Reg 6: bus+0
Variables:
  name: status
    offset 0
      (mem/c/i:HI (plus:SI (reg/f:SI 13 sp)
        (const_int 6 [0x6])) [0 status+0 S2 A16])
  name: dev
    offset 0
      (reg/v/f:SI 4 r4 [orig:134 dev.764 ] [134])
  name: features
    offset 0
      (reg:HI 5 r5 [ features ])
  name: bus
    offset 0
      (reg/v/f:SI 6 r6 [orig:152 bus ] [152])
      (reg/f:SI 0 r0 [orig:152 bus ] [152])
  name: cmd
    offset 0
      (mem/c/i:HI (plus:SI (reg/f:SI 13 sp)
        (const_int 6 [0x6])) [0 cmd+0 S2 A16])


Basic block 27:
IN:
Stack adjustment: 48
Reg 0: bus+0
Reg 4: dev+0
Reg 5: features+0
Reg 6: bus+0
Variables:
  name: status
    offset 0
      (mem/c/i:HI (plus:SI (reg/f:SI 13 sp)
        (const_int 6 [0x6])) [0 status+0 S2 A16])
  name: dev
    offset 0
      (reg/v/f:SI 4 r4 [orig:134 dev.764 ] [134])
  name: features
    offset 0
      (reg:HI 5 r5 [ features ])
  name: bus
    offset 0
      (reg/v/f:SI 6 r6 [orig:152 bus ] [152])
      (reg/f:SI 0 r0 [orig:152 bus ] [152])
  name: cmd
    offset 0
      (mem/c/i:HI (plus:SI (reg/f:SI 13 sp)
        (const_int 6 [0x6])) [0 cmd+0 S2 A16])

OUT:
Stack adjustment: 48
Reg 4: dev+0
Reg 5: features+0
Reg 6: bus+0
Variables:
  name: status
    offset 0
      (mem/c/i:HI (plus:SI (reg/f:SI 13 sp)
        (const_int 6 [0x6])) [0 status+0 S2 A16])
  name: dev
    offset 0
      (reg/v/f:SI 4 r4 [orig:134 dev.764 ] [134])
  name: features
    offset 0
      (reg:HI 5 r5 [ features ])
  name: bus
    offset 0
      (reg/v/f:SI 6 r6 [orig:152 bus ] [152])
  name: cmd
    offset 0
      (mem/c/i:HI (plus:SI (reg/f:SI 13 sp)
        (const_int 6 [0x6])) [0 cmd+0 S2 A16])


28 basic blocks, 39 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(7){ }d-1(8){ }d-1(9){ }d-1(10){ }d-1(11){ }d-1(13){ }d-1(14){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  def 	 3 [r3] 6 [r6] 7 [r7] 13 [sp] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 6 [r6] 7 [r7] 13 [sp] 24 [cc]
;; live  kill	

Successors:  3 [15.0%]  (fallthru) 4 [85.0%] 
;; lr  out 	 0 [r0] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 0 [r0] 6 [r6] 7 [r7] 13 [sp]


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 135, maybe hot.
Predecessors:  2 [15.0%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp]
;; lr  def 	 3 [r3]
;; live  in  	 0 [r0] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 3 [r3]
;; live  kill	

Successors:  4 [100.0%]  (fallthru)
;; lr  out 	 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 6 [r6] 7 [r7] 13 [sp]


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  3 [100.0%]  (fallthru) 2 [85.0%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 6 [r6] 13 [sp]
;; lr  def 	 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp]
;; live  in  	 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp]
;; live  kill	

Successors:  19 [100.0%] 
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 5 , prev 4, next 6, loop_depth 2, count 0, freq 4.
Predecessors:  7 [91.7%]  (dfs_back) 20 [100.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 0 [r0] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 24 [cc]
;; live  kill	

Successors:  7 [50.0%]  6 [50.0%]  (fallthru)
;; lr  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 6 , prev 5, next 7, loop_depth 2, count 0, freq 2.
Predecessors:  5 [50.0%]  (fallthru)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 0 [r0] 3 [r3] 7 [r7] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 12 [ip] 24 [cc]
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 12 [ip] 24 [cc]
;; live  kill	

Successors:  7 [100.0%]  (fallthru)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 7 , prev 6, next 8, loop_depth 2, count 0, freq 4.
Predecessors:  5 [50.0%]  6 [100.0%]  (fallthru)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3] 24 [cc]
;; live  kill	

Successors:  5 [91.7%]  (dfs_back) 8 [8.3%]  (fallthru,loop_exit)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 8 , prev 7, next 9, loop_depth 1, count 0, freq 0.
Predecessors:  7 [8.3%]  (fallthru,loop_exit)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 9 [r9] 10 [sl] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 24 [cc]
;; live  kill	 14 [lr]

Successors:  9 [28.0%]  (fallthru) 10 [72.0%] 
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 9 , prev 8, next 10, loop_depth 1, count 0, freq 0.
Predecessors:  8 [28.0%]  (fallthru)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 11 [fp] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

Successors:  11 [50.0%]  10 [50.0%]  (fallthru)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 10 , prev 9, next 11, loop_depth 1, count 0, freq 0.
Predecessors:  8 [72.0%]  9 [50.0%]  (fallthru)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3] 24 [cc]
;; live  kill	

Successors:  11 [28.0%]  (fallthru) 12 [72.0%] 
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 11 , prev 10, next 12, loop_depth 1, count 0, freq 0.
Predecessors:  9 [50.0%]  10 [28.0%]  (fallthru)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 5 [r5]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 5 [r5]
;; live  kill	

Successors:  12 [100.0%]  (fallthru)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 12 , prev 11, next 13, loop_depth 1, count 0, freq 0.
Predecessors:  10 [72.0%]  11 [100.0%]  (fallthru)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3] 24 [cc]
;; live  kill	

Successors:  15 [29.0%]  13 [71.0%]  (fallthru)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 13 , prev 12, next 14, loop_depth 1, count 0, freq 0.
Predecessors:  12 [71.0%]  (fallthru)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 2 [r2] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 2 [r2] 24 [cc]
;; live  kill	

Successors:  14 [29.0%]  (fallthru) 18 [71.0%] 
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 14 , prev 13, next 15, loop_depth 1, count 0, freq 0.
Predecessors:  13 [29.0%]  (fallthru)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(13){ }}

Successors:  16 [100.0%] 


Basic block 15 , prev 14, next 16, loop_depth 1, count 0, freq 0.
Predecessors:  12 [29.0%] 
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 10 [sl] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	 14 [lr]

Successors:  17 [100.0%] 
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 16 , prev 15, next 17, loop_depth 1, count 0, freq 0.
Predecessors:  14 [100.0%] 
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 10 [sl] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	 14 [lr]

Successors:  17 [100.0%]  (fallthru)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 17 , prev 16, next 18, loop_depth 1, count 0, freq 0.
Predecessors:  16 [100.0%]  (fallthru) 15 [100.0%] 
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]

Successors:  18 [100.0%]  (fallthru)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 18 , prev 17, next 19, loop_depth 1, count 0, freq 0.
Predecessors:  13 [71.0%]  17 [100.0%]  (fallthru)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 4 [r4]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 4 [r4]
;; live  kill	

Successors:  19 [100.0%]  (fallthru,dfs_back)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 19 , prev 18, next 20, loop_depth 1, count 0, freq 900, maybe hot.
Predecessors:  18 [100.0%]  (fallthru,dfs_back) 4 [100.0%] 
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 8 [r8] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  20 [0.0%]  (fallthru) 21 [100.0%]  (loop_exit)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 20 , prev 19, next 21, loop_depth 1, count 0, freq 0.
Predecessors:  19 [0.0%]  (fallthru)
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3]
;; live  kill	

Successors:  5 [100.0%] 
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 21 , prev 20, next 22, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  19 [100.0%]  (loop_exit)
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(13){ }}
;; lr  in  	 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 6 [r6] 13 [sp]
;; lr  def 	 4 [r4] 7 [r7]
;; live  in  	 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 4 [r4] 7 [r7]
;; live  kill	

Successors:  23 [100.0%] 
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 22 , prev 21, next 23, loop_depth 1, count 0, freq 9100, maybe hot.
Predecessors:  23 [91.0%] 
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4]
;; live  kill	 14 [lr]

Successors:  23 [100.0%]  (fallthru,dfs_back)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 23 , prev 22, next 24, loop_depth 1, count 0, freq 10000, maybe hot.
Predecessors:  22 [100.0%]  (fallthru,dfs_back) 21 [100.0%] 
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 7 [r7] 8 [r8] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3] 24 [cc]
;; live  kill	

Successors:  22 [91.0%]  24 [9.0%]  (fallthru,loop_exit)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 24 , prev 23, next 25, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  23 [9.0%]  (fallthru,loop_exit)
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 6 [r6] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

Successors:  25 [85.0%]  (fallthru) 27 [15.0%] 
;; lr  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 25 , prev 24, next 26, loop_depth 0, count 0, freq 765, maybe hot.
Predecessors:  24 [85.0%]  (fallthru)
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

Successors:  26 [28.0%]  (fallthru) 27 [72.0%] 
;; lr  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 26 , prev 25, next 27, loop_depth 0, count 0, freq 214, maybe hot.
Predecessors:  25 [28.0%]  (fallthru)
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 3 [r3] 5 [r5] 6 [r6] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

Successors:  27 [100.0%]  (fallthru)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 27 , prev 26, next 1, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  24 [15.0%]  25 [72.0%]  26 [100.0%]  (fallthru)
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 5 [r5] 6 [r6] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc]
;; live  kill	 14 [lr]

Successors:  EXIT [100.0%] 
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 1 , prev 27, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  27 [100.0%] 
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(4){ }u-1(5){ }u-1(6){ }u-1(7){ }u-1(8){ }u-1(9){ }u-1(10){ }u-1(11){ }u-1(13){ }u-1(14){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  def 	
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	




pcibios_fixup_bus

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;;  exit block uses 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 7[r7] 8[r8] 9[r9] 10[sl] 11[fp] 12[ip] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={19d,18u} r1={23d,17u} r2={24d,16u} r3={39d,42u,8d} r4={5d,25u,2d} r5={8d,15u} r6={2d,10u,1d} r7={3d,8u,3d} r8={3d,6u} r9={2d,3u} r10={2d,5u} r11={2d,3u} r12={9d,1u} r13={2d,44u,2d} r14={9d,2u} r15={8d} r16={8d} r17={8d} r18={8d} r19={8d} r20={8d} r21={8d} r22={8d} r23={8d} r24={25d,24u} r25={4d} r27={8d} r28={8d} r29={8d} r30={8d} r31={8d} r32={8d} r33={8d} r34={8d} r35={8d} r36={8d} r37={8d} r38={8d} r39={8d} r40={8d} r41={8d} r42={8d} r43={8d} r44={8d} r45={8d} r46={8d} r47={8d} r48={8d} r49={8d} r50={8d} r51={8d} r52={8d} r53={8d} r54={8d} r55={8d} r56={8d} r57={8d} r58={8d} r59={8d} r60={8d} r61={8d} r62={8d} r63={8d} r64={8d} r65={8d} r66={8d} r67={8d} r68={8d} r69={8d} r70={8d} r71={8d} r72={8d} r73={8d} r74={8d} r75={8d} r76={8d} r77={8d} r78={8d} r79={8d} r80={8d} r81={8d} r82={8d} r83={8d} r84={8d} r85={8d} r86={8d} r87={8d} r88={8d} r89={8d} r90={8d} r91={8d} r92={8d} r93={8d} r94={8d} r95={8d} r96={8d} r97={8d} r98={8d} r99={8d} r100={8d} r101={8d} r102={8d} r103={8d} r104={8d} r105={8d} r106={8d} r107={8d} r108={8d} r109={8d} r110={8d} r111={8d} r112={8d} r113={8d} r114={8d} r115={8d} r116={8d} r117={8d} r118={8d} r119={8d} r120={8d} r121={8d} r122={8d} r123={8d} r124={8d} r125={8d} r126={8d} r127={8d} 
;;    total ref usage 1316{1057d,239u,20e} in 141{133 regular + 8 call} insns.
(note 1 0 388 NOTE_INSN_DELETED)

(note 388 1 4 2 ( bus (expr_list:REG_DEP_TRUE (reg:SI 0 r0 [ bus ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  def 	 3 [r3] 6 [r6] 7 [r7] 13 [sp] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 6 [r6] 7 [r7] 13 [sp] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 388 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 349 2 NOTE_INSN_FUNCTION_BEG)

(insn/f:TI 349 3 389 2 arch/arm/kernel/bios32.c:339 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 0 r0)
                    ] 2))
            (use (reg:SI 1 r1))
            (use (reg:SI 2 r2))
            (use (reg:SI 4 r4))
            (use (reg:SI 5 r5))
            (use (reg:SI 6 r6))
            (use (reg:SI 7 r7))
            (use (reg:SI 8 r8))
            (use (reg:SI 9 r9))
            (use (reg:SI 10 sl))
            (use (reg:SI 11 fp))
            (use (reg:SI 14 lr))
        ]) 327 {*push_multi} (expr_list:REG_DEAD (reg:SI 14 lr)
        (expr_list:REG_DEAD (reg:SI 11 fp)
            (expr_list:REG_DEAD (reg:SI 10 sl)
                (expr_list:REG_DEAD (reg:SI 9 r9)
                    (expr_list:REG_DEAD (reg:SI 8 r8)
                        (expr_list:REG_DEAD (reg:SI 7 r7)
                            (expr_list:REG_DEAD (reg:SI 6 r6)
                                (expr_list:REG_DEAD (reg:SI 5 r5)
                                    (expr_list:REG_DEAD (reg:SI 4 r4)
                                        (expr_list:REG_DEAD (reg:SI 2 r2)
                                            (expr_list:REG_DEAD (reg:SI 1 r1)
                                                (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                                                            (set/f (reg/f:SI 13 sp)
                                                                (plus:SI (reg/f:SI 13 sp)
                                                                    (const_int -48 [0xffffffffffffffd0])))
                                                            (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                                                                (reg:SI 0 r0))
                                                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                        (const_int 4 [0x4])) [0 S4 A32])
                                                                (reg:SI 1 r1))
                                                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                        (const_int 8 [0x8])) [0 S4 A32])
                                                                (reg:SI 2 r2))
                                                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                        (const_int 12 [0xc])) [0 S4 A32])
                                                                (reg:SI 4 r4))
                                                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                        (const_int 16 [0x10])) [0 S4 A32])
                                                                (reg:SI 5 r5))
                                                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                        (const_int 20 [0x14])) [0 S4 A32])
                                                                (reg:SI 6 r6))
                                                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                        (const_int 24 [0x18])) [0 S4 A32])
                                                                (reg:SI 7 r7))
                                                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                        (const_int 28 [0x1c])) [0 S4 A32])
                                                                (reg:SI 8 r8))
                                                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                        (const_int 32 [0x20])) [0 S4 A32])
                                                                (reg:SI 9 r9))
                                                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                        (const_int 36 [0x24])) [0 S4 A32])
                                                                (reg:SI 10 sl))
                                                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                        (const_int 40 [0x28])) [0 S4 A32])
                                                                (reg:SI 11 fp))
                                                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                        (const_int 44 [0x2c])) [0 S4 A32])
                                                                (reg:SI 14 lr))
                                                        ])
                                                    (nil))))))))))))))

(note 389 349 350 2 ( bus (nil)) NOTE_INSN_VAR_LOCATION)

(note 350 389 7 2 NOTE_INSN_PROLOGUE_END)

(insn:TI 7 350 390 2 arch/arm/kernel/bios32.c:322 (set (reg/f:SI 3 r3 [orig:153 <variable>.self ] [153])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 0 r0 [orig:152 bus ] [152])
                (const_int 28 [0x1c])) [0 <variable>.self+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/f/j:SI (plus:SI (reg/v/f:SI 6 r6 [orig:152 bus ] [152])
                (const_int 28 [0x1c])) [0 <variable>.self+0 S4 A32])
        (nil)))

(note 390 7 2 2 ( bus (expr_list:REG_DEP_TRUE (reg/f:SI 0 r0 [orig:152 bus ] [152])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 2 390 6 2 arch/arm/kernel/bios32.c:339 (set (reg/v/f:SI 6 r6 [orig:152 bus ] [152])
        (reg:SI 0 r0 [ bus ])) 167 {*arm_movsi_insn} (nil))

(insn 6 2 391 2 arch/arm/kernel/bios32.c:340 (set (reg/v/f:SI 7 r7 [orig:144 root ] [144])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 0 r0 [orig:152 bus ] [152])
                (const_int 68 [0x44])) [0 <variable>.sysdata+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(note 391 6 8 2 ( root (expr_list:REG_DEP_TRUE (reg/v/f:SI 7 r7 [orig:144 root ] [144])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 8 391 9 2 arch/arm/kernel/bios32.c:322 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 3 r3 [orig:153 <variable>.self ] [153])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/f:SI 3 r3 [orig:153 <variable>.self ] [153])
        (nil)))

(jump_insn:TI 9 8 10 2 arch/arm/kernel/bios32.c:322 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 17)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 8500 [0x2134])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 0 [r0] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 0 [r0] 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  3 [15.0%]  (fallthru)
;; Succ edge  4 [85.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp]
;; lr  def 	 3 [r3]
;; live  in  	 0 [r0] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 3 [r3]
;; live  kill	

;; Pred edge  2 [15.0%]  (fallthru)
(note 10 9 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn:TI 11 10 12 3 arch/arm/kernel/bios32.c:330 (set (reg/f:SI 3 r3 [orig:154 <variable>.resource ] [154])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 7 r7 [orig:144 root ] [144])
                (const_int 32 [0x20])) [0 <variable>.resource+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/f/j:SI (plus:SI (reg/v/f:SI 7 r7 [orig:144 root ] [144])
                (const_int 32 [0x20])) [0 <variable>.resource+0 S4 A64])
        (nil)))

(insn:TI 12 11 13 3 arch/arm/kernel/bios32.c:330 (set (mem/s/f/j:SI (plus:SI (reg/f:SI 0 r0 [orig:152 bus ] [152])
                (const_int 40 [0x28])) [0 <variable>.resource+0 S4 A64])
        (reg/f:SI 3 r3 [orig:154 <variable>.resource ] [154])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 3 r3 [orig:154 <variable>.resource ] [154])
        (nil)))

(insn:TI 13 12 14 3 arch/arm/kernel/bios32.c:330 (set (reg/f:SI 3 r3 [orig:155 <variable>.resource+4 ] [155])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 7 r7 [orig:144 root ] [144])
                (const_int 36 [0x24])) [0 <variable>.resource+4 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/f/j:SI (plus:SI (reg/v/f:SI 7 r7 [orig:144 root ] [144])
                (const_int 36 [0x24])) [0 <variable>.resource+4 S4 A32])
        (nil)))

(insn:TI 14 13 15 3 arch/arm/kernel/bios32.c:330 (set (mem/s/f/j:SI (plus:SI (reg/f:SI 0 r0 [orig:152 bus ] [152])
                (const_int 44 [0x2c])) [0 <variable>.resource+4 S4 A32])
        (reg/f:SI 3 r3 [orig:155 <variable>.resource+4 ] [155])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 3 r3 [orig:155 <variable>.resource+4 ] [155])
        (nil)))

(insn:TI 15 14 16 3 arch/arm/kernel/bios32.c:330 (set (reg/f:SI 3 r3 [orig:156 <variable>.resource+8 ] [156])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 7 r7 [orig:144 root ] [144])
                (const_int 40 [0x28])) [0 <variable>.resource+8 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/f/j:SI (plus:SI (reg/v/f:SI 7 r7 [orig:144 root ] [144])
                (const_int 40 [0x28])) [0 <variable>.resource+8 S4 A64])
        (nil)))

(insn:TI 16 15 17 3 arch/arm/kernel/bios32.c:330 (set (mem/s/f/j:SI (plus:SI (reg/f:SI 0 r0 [orig:152 bus ] [152])
                (const_int 48 [0x30])) [0 <variable>.resource+8 S4 A64])
        (reg/f:SI 3 r3 [orig:156 <variable>.resource+8 ] [156])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 3 r3 [orig:156 <variable>.resource+8 ] [156])
        (expr_list:REG_DEAD (reg/f:SI 0 r0 [orig:152 bus ] [152])
            (nil))))
;; End of basic block 3 -> ( 4)
;; lr  out 	 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 3 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 6 [r6] 13 [sp]
;; lr  def 	 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp]
;; live  in  	 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp]
;; live  kill	

;; Pred edge  3 [100.0%]  (fallthru)
;; Pred edge  2 [85.0%] 
(code_label 17 16 18 4 93 "" [1 uses])

(note 18 17 94 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 94 18 106 4 NOTE_INSN_DELETED)

(note 106 94 109 4 NOTE_INSN_DELETED)

(note 109 106 283 4 NOTE_INSN_DELETED)

(insn:TI 283 109 21 4 arch/arm/kernel/bios32.c:350 (set (reg/f:SI 8 r8 [orig:150 D.18622 ] [150])
        (reg/v/f:SI 6 r6 [orig:152 bus ] [152])) 167 {*arm_movsi_insn} (nil))

(insn 21 283 392 4 arch/arm/kernel/bios32.c:342 (set (reg/v:SI 5 r5 [orig:142 features ] [142])
        (const_int 832 [0x340])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 832 [0x340])
        (nil)))

(note 392 21 55 4 ( features (expr_list:REG_DEP_TRUE (reg:HI 5 r5 [ features ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 55 392 70 4 include/linux/pci.h:755 (set (reg/f:SI 10 sl [219])
        (plus:SI (reg/f:SI 13 sp)
            (const_int 6 [0x6]))) 4 {*arm_addsi3} (expr_list:REG_EQUIV (plus:SI (reg/f:SI 13 sp)
            (const_int 6 [0x6]))
        (nil)))

(insn 70 55 19 4 arch/arm/kernel/bios32.c:289 (set (reg:SI 9 r9 [221])
        (const_int 4330 [0x10ea])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 4330 [0x10ea])
        (nil)))

(insn:TI 19 70 393 4 arch/arm/kernel/bios32.c:350 (set (reg/v/f:SI 4 r4 [orig:143 dev ] [143])
        (mem/s/f/j:SI (pre_modify:SI (reg/f:SI 8 r8 [orig:150 D.18622 ] [150])
                (plus:SI (reg/f:SI 8 r8 [orig:150 D.18622 ] [150])
                    (const_int 20 [0x14]))) [0 <variable>.devices.next+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_INC (reg/f:SI 8 r8 [orig:150 D.18622 ] [150])
        (nil)))

(note 393 19 78 4 ( dev (expr_list:REG_DEP_TRUE (reg/v/f:SI 4 r4 [orig:143 dev ] [143])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn 78 393 376 4 arch/arm/kernel/bios32.c:289 discrim 1 (set (reg:SI 11 fp [223])
        (const_int 8208 [0x2010])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 8208 [0x2010])
        (nil)))

(jump_insn 376 78 377 4 arch/arm/kernel/bios32.c:350 (set (pc)
        (label_ref 158)) -1 (nil))
;; End of basic block 4 -> ( 19)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  19 [100.0%] 

(barrier 377 376 394)

(note 394 377 395 5 ( status (expr_list:REG_DEP_TRUE (mem/c/i:HI (plus:SI (reg/f:SI 13 sp)
            (const_int 6 [0x6])) [0 status+0 S2 A16])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 395 394 396 5 ( bus (expr_list:REG_DEP_TRUE (reg/v/f:SI 6 r6 [orig:152 bus ] [152])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 396 395 51 5 ( i (expr_list:REG_DEP_TRUE (reg/v:SI 2 r2 [orig:139 i ] [139])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 7 20) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 0 [r0] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 24 [cc]
;; live  kill	

;; Pred edge  7 [91.7%]  (dfs_back)
;; Pred edge  20 [100.0%] 
(code_label 51 396 24 5 98 "" [2 uses])

(note 24 51 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn:TI 25 24 26 5 arch/arm/kernel/bios32.c:307 (set (reg:SI 0 r0 [orig:137 D.19109 ] [137])
        (mem/s/j:SI (plus:SI (reg:SI 3 r3 [orig:135 ivtmp.761 ] [135])
                (const_int 464 [0x1d0])) [0 <variable>.start+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn:TI 26 25 27 5 arch/arm/kernel/bios32.c:307 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0 [orig:137 D.19109 ] [137])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn:TI 27 26 28 5 arch/arm/kernel/bios32.c:307 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 47)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 5 -> ( 7 6)
;; lr  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  7 [50.0%] 
;; Succ edge  6 [50.0%]  (fallthru)

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 0 [r0] 3 [r3] 7 [r7] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 12 [ip] 24 [cc]
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 12 [ip] 24 [cc]
;; live  kill	

;; Pred edge  5 [50.0%]  (fallthru)
(note 28 27 30 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note 30 28 29 6 NOTE_INSN_DELETED)

(insn:TI 29 30 44 6 arch/arm/kernel/bios32.c:309 (set (reg:SI 1 r1 [orig:158 <variable>.flags ] [158])
        (mem/s/j:SI (plus:SI (reg:SI 3 r3 [orig:135 ivtmp.761 ] [135])
                (const_int 476 [0x1dc])) [0 <variable>.flags+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg:SI 3 r3 [orig:135 ivtmp.761 ] [135])
                (const_int 476 [0x1dc])) [0 <variable>.flags+0 S4 A32])
        (nil)))

(insn:TI 44 29 31 6 arch/arm/kernel/bios32.c:315 (set (reg:SI 12 ip [orig:160 <variable>.end ] [160])
        (mem/s/j:SI (plus:SI (reg:SI 3 r3 [orig:135 ivtmp.761 ] [135])
                (const_int 468 [0x1d4])) [0 <variable>.end+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg:SI 3 r3 [orig:135 ivtmp.761 ] [135])
                (const_int 468 [0x1d4])) [0 <variable>.end+0 S4 A32])
        (nil)))

(insn:TI 31 44 34 6 arch/arm/kernel/bios32.c:309 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 1 r1 [orig:158 <variable>.flags ] [158])
                (const_int 1 [0x1])
                (const_int 9 [0x9]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(insn:TI 34 31 397 6 arch/arm/kernel/bios32.c:310 (cond_exec (ne (reg:CC_NOOV 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v:SI 1 r1 [orig:138 offset ] [138])
            (mem/s/j:SI (plus:SI (reg/v/f:SI 7 r7 [orig:144 root ] [144])
                    (const_int 16 [0x10])) [0 <variable>.mem_offset+0 S4 A64]))) 2345 {neon_vornv2di+78} (nil))

(note 397 34 39 6 ( offset (expr_list:REG_DEP_TRUE (reg/v:SI 1 r1 [orig:138 offset ] [138])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 39 397 42 6 arch/arm/kernel/bios32.c:312 (cond_exec (eq (reg:CC_NOOV 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v:SI 1 r1 [orig:138 offset ] [138])
            (mem/s/j:SI (plus:SI (reg/v/f:SI 7 r7 [orig:144 root ] [144])
                    (const_int 24 [0x18])) [0 <variable>.io_offset+0 S4 A64]))) 2345 {neon_vornv2di+78} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (nil)))

(insn:TI 42 39 45 6 arch/arm/kernel/bios32.c:314 (set (reg:SI 0 r0 [159])
        (plus:SI (reg/v:SI 1 r1 [orig:138 offset ] [138])
            (reg:SI 0 r0 [orig:137 D.19109 ] [137]))) 4 {*arm_addsi3} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg:SI 3 r3 [orig:135 ivtmp.761 ] [135])
                (const_int 464 [0x1d0])) [0 <variable>.start+0 S4 A32])
        (nil)))

(insn 45 42 398 6 arch/arm/kernel/bios32.c:315 (set (reg:SI 1 r1 [161])
        (plus:SI (reg:SI 12 ip [orig:160 <variable>.end ] [160])
            (reg/v:SI 1 r1 [orig:138 offset ] [138]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 12 ip [orig:160 <variable>.end ] [160])
        (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg:SI 3 r3 [orig:135 ivtmp.761 ] [135])
                    (const_int 468 [0x1d4])) [0 <variable>.end+0 S4 A32])
            (nil))))

(note 398 45 43 6 ( offset (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 43 398 46 6 arch/arm/kernel/bios32.c:314 (set (mem/s/j:SI (plus:SI (reg:SI 3 r3 [orig:135 ivtmp.761 ] [135])
                (const_int 464 [0x1d0])) [0 <variable>.start+0 S4 A32])
        (reg:SI 0 r0 [159])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [159])
        (nil)))

(insn:TI 46 43 47 6 arch/arm/kernel/bios32.c:315 (set (mem/s/j:SI (plus:SI (reg:SI 3 r3 [orig:135 ivtmp.761 ] [135])
                (const_int 468 [0x1d4])) [0 <variable>.end+0 S4 A32])
        (reg:SI 1 r1 [161])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [161])
        (nil)))
;; End of basic block 6 -> ( 7)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 5 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  5 [50.0%] 
;; Pred edge  6 [100.0%]  (fallthru)
(code_label 47 46 48 7 95 "" [1 uses])

(note 48 47 49 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn:TI 49 48 50 7 arch/arm/kernel/bios32.c:306 (set (reg/v:SI 2 r2 [orig:139 i ] [139])
        (plus:SI (reg/v:SI 2 r2 [orig:139 i ] [139])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 50 49 52 7 arch/arm/kernel/bios32.c:306 (set (reg:SI 3 r3 [orig:135 ivtmp.761 ] [135])
        (plus:SI (reg:SI 3 r3 [orig:135 ivtmp.761 ] [135])
            (const_int 28 [0x1c]))) 4 {*arm_addsi3} (nil))

(insn:TI 52 50 53 7 arch/arm/kernel/bios32.c:306 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 2 r2 [orig:139 i ] [139])
            (const_int 11 [0xb]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn:TI 53 52 54 7 arch/arm/kernel/bios32.c:306 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 51)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9167 [0x23cf])
            (nil))))
;; End of basic block 7 -> ( 5 8)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  5 [91.7%]  (dfs_back)
;; Succ edge  8 [8.3%]  (fallthru,loop_exit)

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 9 [r9] 10 [sl] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  7 [8.3%]  (fallthru,loop_exit)
(note 54 53 62 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(note 62 54 59 8 NOTE_INSN_DELETED)

(insn:TI 59 62 56 8 include/linux/pci.h:755 (set (reg:SI 3 r3)
        (reg/f:SI 10 sl [219])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -2 [0xfffffffffffffffe]))
        (nil)))

(insn 56 59 271 8 include/linux/pci.h:755 (set (reg:SI 0 r0)
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:143 dev ] [143])
                (const_int 8 [0x8])) [0 <variable>.bus+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn:TI 271 56 399 8 include/linux/pci.h:755 (set (reg:SI 2 r2)
        (const_int 6 [0x6])) 167 {*arm_movsi_insn} (nil))

(note 399 271 57 8 ( i (nil)) NOTE_INSN_VAR_LOCATION)

(insn 57 399 60 8 include/linux/pci.h:755 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:143 dev ] [143])
                (const_int 28 [0x1c])) [0 <variable>.devfn+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn:TI 60 57 61 8 include/linux/pci.h:755 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("pci_bus_read_config_word") [flags 0x41] <function_decl 0x10f95680 pci_bus_read_config_word>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_UNUSED (reg:SI 0 r0)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 61 60 400 8 arch/arm/kernel/bios32.c:363 (set (reg:SI 3 r3 [orig:163 status ] [163])
        (zero_extend:SI (mem/c/i:HI (plus:SI (reg/f:SI 13 sp)
                    (const_int 6 [0x6])) [0 status+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(note 400 61 63 8 ( status (expr_list:REG_DEP_TRUE (reg:HI 3 r3 [ status ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 63 400 72 8 arch/arm/kernel/bios32.c:363 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 3 r3 [orig:163 status ] [163])
                (const_int 1 [0x1])
                (const_int 7 [0x7]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg:SI 3 r3 [orig:163 status ] [163])
        (nil)))

(insn 72 63 401 8 arch/arm/kernel/bios32.c:289 (set (reg:SI 3 r3 [orig:168 <variable>.vendor ] [168])
        (zero_extend:SI (mem/s/j:HI (plus:SI (reg/v/f:SI 4 r4 [orig:143 dev ] [143])
                    (const_int 32 [0x20])) [0 <variable>.vendor+0 S2 A64]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(note 401 72 303 8 ( status (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 303 401 402 8 arch/arm/kernel/bios32.c:364 (cond_exec (eq (reg:CC_NOOV 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v:SI 5 r5 [orig:142 features ] [142])
            (and:SI (reg/v:SI 5 r5 [orig:142 features ] [142])
                (const_int 4294966783 [0xfffffdff])))) 2295 {neon_vornv2di+28} (nil))

(note 402 303 304 8 ( features (expr_list:REG_DEP_TRUE (reg:HI 5 r5 [ features ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 304 402 403 8 arch/arm/kernel/bios32.c:364 (cond_exec (eq (reg:CC_NOOV 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v:SI 5 r5 [orig:142 features ] [142])
            (ashift:SI (reg/v:SI 5 r5 [orig:142 features ] [142])
                (const_int 16 [0x10])))) 2320 {neon_vornv2di+53} (nil))

(note 403 304 305 8 ( features (expr_list:REG_DEP_TRUE (reg:HI 5 r5 [ features ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 305 403 404 8 arch/arm/kernel/bios32.c:364 (cond_exec (eq (reg:CC_NOOV 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v:SI 5 r5 [orig:142 features ] [142])
            (lshiftrt:SI (reg/v:SI 5 r5 [orig:142 features ] [142])
                (const_int 16 [0x10])))) 2320 {neon_vornv2di+53} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (nil)))

(note 404 305 74 8 ( features (expr_list:REG_DEP_TRUE (reg:HI 5 r5 [ features ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn 74 404 75 8 arch/arm/kernel/bios32.c:289 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [orig:168 <variable>.vendor ] [168])
            (reg:SI 9 r9 [221]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [orig:168 <variable>.vendor ] [168])
        (expr_list:REG_EQUAL (compare:CC (reg:SI 3 r3 [orig:168 <variable>.vendor ] [168])
                (const_int 4330 [0x10ea]))
            (nil))))

(jump_insn:TI 75 74 76 8 arch/arm/kernel/bios32.c:289 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 92)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 8 -> ( 9 10)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  9 [28.0%]  (fallthru)
;; Succ edge  10 [72.0%] 

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 11 [fp] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  8 [28.0%]  (fallthru)
(note 76 75 81 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(note 81 76 82 9 NOTE_INSN_DELETED)

(note 82 81 84 9 NOTE_INSN_DELETED)

(note 84 82 85 9 NOTE_INSN_DELETED)

(note 85 84 87 9 NOTE_INSN_DELETED)

(note 87 85 88 9 NOTE_INSN_DELETED)

(note 88 87 89 9 NOTE_INSN_DELETED)

(note 89 88 77 9 NOTE_INSN_DELETED)

(insn:TI 77 89 90 9 arch/arm/kernel/bios32.c:290 (set (reg:SI 3 r3 [orig:136 D.19123 ] [136])
        (zero_extend:SI (mem/s/j:HI (plus:SI (reg/v/f:SI 4 r4 [orig:143 dev ] [143])
                    (const_int 34 [0x22])) [0 <variable>.device+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn:TI 90 77 91 9 arch/arm/kernel/bios32.c:290 (set (reg:CC_DEQ 24 cc)
        (compare:CC_DEQ (ior:SI (eq:SI (reg:SI 3 r3 [orig:136 D.19123 ] [136])
                    (reg:SI 11 fp [223]))
                (eq:SI (reg:SI 3 r3 [orig:136 D.19123 ] [136])
                    (const_int 8192 [0x2000])))
            (const_int 0 [0x0]))) 285 {*cmp_ior} (expr_list:REG_DEAD (reg:SI 3 r3 [orig:136 D.19123 ] [136])
        (nil)))

(jump_insn:TI 91 90 92 9 arch/arm/kernel/bios32.c:290 (set (pc)
        (if_then_else (ne (reg:CC_DEQ 24 cc)
                (const_int 0 [0x0]))
            (label_ref 98)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_DEQ 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 9 -> ( 11 10)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  11 [50.0%] 
;; Succ edge  10 [50.0%]  (fallthru)

;; Start of basic block ( 8 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  8 [72.0%] 
;; Pred edge  9 [50.0%]  (fallthru)
(code_label 92 91 93 10 100 "" [1 uses])

(note 93 92 95 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn:TI 95 93 341 10 arch/arm/kernel/bios32.c:292 (set (reg:SI 3 r3 [181])
        (mem/s:SI (plus:SI (reg/v/f:SI 4 r4 [orig:143 dev ] [143])
                (const_int 32 [0x20])) [0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s:SI (plus:SI (reg/v/f:SI 4 r4 [orig:143 dev ] [143])
                (const_int 32 [0x20])) [0 S4 A64])
        (nil)))

(insn:TI 341 95 96 10 arch/arm/kernel/bios32.c:292 (set (reg:SI 2 r2)
        (const_int -2125327741 [0xffffffff81521283])) 167 {*arm_movsi_insn} (nil))

(insn:TI 96 341 97 10 arch/arm/kernel/bios32.c:292 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [181])
            (reg:SI 2 r2))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [181])
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_EQUAL (compare:CC (reg:SI 3 r3 [181])
                    (const_int -2125327741 [0xffffffff81521283]))
                (nil)))))

(jump_insn:TI 97 96 98 10 arch/arm/kernel/bios32.c:292 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 102)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 10 -> ( 11 12)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  11 [28.0%]  (fallthru)
;; Succ edge  12 [72.0%] 

;; Start of basic block ( 9 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 5 [r5]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 5 [r5]
;; live  kill	

;; Pred edge  9 [50.0%] 
;; Pred edge  10 [28.0%]  (fallthru)
(code_label 98 97 99 11 101 "" [1 uses])

(note 99 98 300 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn:TI 300 99 405 11 arch/arm/kernel/bios32.c:367 (set (reg/v:SI 5 r5 [orig:142 features ] [142])
        (and:SI (reg/v:SI 5 r5 [orig:142 features ] [142])
            (const_int 4294966975 [0xfffffebf]))) 67 {*arm_andsi3_insn} (nil))

(note 405 300 301 11 ( features (expr_list:REG_DEP_TRUE (reg:HI 5 r5 [ features ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 301 405 406 11 arch/arm/kernel/bios32.c:367 (set (reg/v:SI 5 r5 [orig:142 features ] [142])
        (ashift:SI (reg/v:SI 5 r5 [orig:142 features ] [142])
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (nil))

(note 406 301 302 11 ( features (expr_list:REG_DEP_TRUE (reg:HI 5 r5 [ features ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 302 406 407 11 arch/arm/kernel/bios32.c:367 (set (reg/v:SI 5 r5 [orig:142 features ] [142])
        (lshiftrt:SI (reg/v:SI 5 r5 [orig:142 features ] [142])
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (nil))
;; End of basic block 11 -> ( 12)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  12 [100.0%]  (fallthru)

(note 407 302 102 12 ( features (expr_list:REG_DEP_TRUE (reg:HI 5 r5 [ features ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 10 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  10 [72.0%] 
;; Pred edge  11 [100.0%]  (fallthru)
(code_label 102 407 103 12 102 "" [1 uses])

(note 103 102 104 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn:TI 104 103 342 12 arch/arm/kernel/bios32.c:369 (set (reg:SI 3 r3 [orig:184 <variable>.class ] [184])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:143 dev ] [143])
                (const_int 40 [0x28])) [0 <variable>.class+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:143 dev ] [143])
                (const_int 40 [0x28])) [0 <variable>.class+0 S4 A64])
        (nil)))

(insn 342 104 105 12 arch/arm/kernel/bios32.c:369 (set (reg:SI 2 r2)
        (const_int 1540 [0x604])) 167 {*arm_movsi_insn} (nil))

(insn:TI 105 342 107 12 arch/arm/kernel/bios32.c:369 (set (reg:SI 3 r3 [183])
        (lshiftrt:SI (reg:SI 3 r3 [orig:184 <variable>.class ] [184])
            (const_int 8 [0x8]))) 117 {*arm_shiftsi3} (nil))

(insn:TI 107 105 108 12 arch/arm/kernel/bios32.c:369 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [183])
            (reg:SI 2 r2))) 219 {*arm_cmpsi_insn} (expr_list:REG_EQUAL (compare:CC (reg:SI 3 r3 [183])
            (const_int 1540 [0x604]))
        (nil)))

(jump_insn:TI 108 107 254 12 arch/arm/kernel/bios32.c:369 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 114)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
            (nil))))
;; End of basic block 12 -> ( 15 13)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  15 [29.0%] 
;; Succ edge  13 [71.0%]  (fallthru)

;; Start of basic block ( 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 2 [r2] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 2 [r2] 24 [cc]
;; live  kill	

;; Pred edge  12 [71.0%]  (fallthru)
(note 254 108 343 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn:TI 343 254 110 13 arch/arm/kernel/bios32.c:369 (set (reg:SI 2 r2)
        (plus:SI (reg:SI 2 r2)
            (const_int 3 [0x3]))) 4 {*arm_addsi3} (nil))

(insn:TI 110 343 111 13 arch/arm/kernel/bios32.c:369 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [183])
            (reg:SI 2 r2))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [183])
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_EQUAL (compare:CC (reg:SI 3 r3 [183])
                    (const_int 1543 [0x607]))
                (nil)))))

(jump_insn:TI 111 110 378 13 arch/arm/kernel/bios32.c:369 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 154)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 13 -> ( 14 18)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  14 [29.0%]  (fallthru)
;; Succ edge  18 [71.0%] 

;; Start of basic block ( 13) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(13){ }}

;; Pred edge  13 [29.0%]  (fallthru)
(note 378 111 380 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(jump_insn 380 378 381 14 (set (pc)
        (label_ref 379)) -1 (nil))
;; End of basic block 14 -> ( 16)


;; Succ edge  16 [100.0%] 

(barrier 381 380 114)

;; Start of basic block ( 12) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 10 [sl] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	 14 [lr]

;; Pred edge  12 [29.0%] 
(code_label 114 381 115 15 104 "" [1 uses])

(note 115 114 124 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(note 124 115 118 15 NOTE_INSN_DELETED)

(insn:TI 118 124 120 15 include/linux/pci.h:755 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:143 dev ] [143])
                (const_int 28 [0x1c])) [0 <variable>.devfn+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 120 118 277 15 include/linux/pci.h:755 (set (reg:SI 3 r3)
        (reg/f:SI 10 sl [219])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -2 [0xfffffffffffffffe]))
        (nil)))

(insn:TI 277 120 117 15 include/linux/pci.h:755 (set (reg:SI 2 r2)
        (const_int 62 [0x3e])) 167 {*arm_movsi_insn} (nil))

(insn 117 277 121 15 include/linux/pci.h:755 (set (reg:SI 0 r0)
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:143 dev ] [143])
                (const_int 8 [0x8])) [0 <variable>.bus+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(call_insn:TI 121 117 122 15 include/linux/pci.h:755 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("pci_bus_read_config_word") [flags 0x41] <function_decl 0x10f95680 pci_bus_read_config_word>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_UNUSED (reg:SI 0 r0)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 122 121 409 15 arch/arm/kernel/bios32.c:373 (set (reg:SI 1 r1 [orig:189 status ] [189])
        (zero_extend:SI (mem/c/i:HI (plus:SI (reg/f:SI 13 sp)
                    (const_int 6 [0x6])) [0 status+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(note 409 122 408 15 ( status (expr_list:REG_DEP_TRUE (reg:HI 1 r1 [ status ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 408 409 297 15 ( status (expr_list:REG_DEP_TRUE (mem/c/i:HI (plus:SI (reg/f:SI 26 afp)
            (const_int -46 [0xffffffffffffffd2])) [0 status+0 S2 A16])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 297 408 410 15 arch/arm/kernel/bios32.c:373 (set (reg:SI 3 r3 [orig:151 status.302 ] [151])
        (const_int 65343 [0xff3f])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 65343 [0xff3f])
        (nil)))

(note 410 297 278 15 ( status (expr_list:REG_DEP_TRUE (reg:HI 3 r3 [ status.302 ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn 278 410 125 15 include/linux/pci.h:768 (set (reg:SI 2 r2)
        (const_int 62 [0x3e])) 167 {*arm_movsi_insn} (nil))

(insn:TI 125 278 298 15 arch/arm/kernel/bios32.c:373 (set (reg:SI 1 r1 [191])
        (ior:SI (reg:SI 1 r1 [orig:189 status ] [189])
            (const_int 33 [0x21]))) 89 {*arm_iorsi3} (nil))

(insn:TI 298 125 411 15 arch/arm/kernel/bios32.c:373 (set (reg:SI 3 r3 [orig:151 status.302 ] [151])
        (and:SI (reg:SI 1 r1 [191])
            (reg:SI 3 r3 [orig:151 status.302 ] [151]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [191])
        (nil)))

(note 411 298 382 15 ( status (expr_list:REG_DEP_TRUE (reg:HI 3 r3 [ status.302 ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(jump_insn 382 411 383 15 (set (pc)
        (label_ref 356)) -1 (nil))
;; End of basic block 15 -> ( 17)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  17 [100.0%] 

(barrier 383 382 412)

(note 412 383 379 16 ( status (nil)) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 14) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 10 [sl] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	 14 [lr]

;; Pred edge  14 [100.0%] 
(code_label 379 412 137 16 117 "" [1 uses])

(note 137 379 146 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(note 146 137 281 16 NOTE_INSN_DELETED)

(insn:TI 281 146 142 16 include/linux/pci.h:755 (set (reg:SI 2 r2)
        (const_int 62 [0x3e])) 167 {*arm_movsi_insn} (nil))

(insn 142 281 140 16 include/linux/pci.h:755 (set (reg:SI 3 r3)
        (reg/f:SI 10 sl [219])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -2 [0xfffffffffffffffe]))
        (nil)))

(insn:TI 140 142 139 16 include/linux/pci.h:755 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:143 dev ] [143])
                (const_int 28 [0x1c])) [0 <variable>.devfn+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn:TI 139 140 143 16 include/linux/pci.h:755 (set (reg:SI 0 r0)
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:143 dev ] [143])
                (const_int 8 [0x8])) [0 <variable>.bus+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(call_insn:TI 143 139 144 16 include/linux/pci.h:755 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("pci_bus_read_config_word") [flags 0x41] <function_decl 0x10f95680 pci_bus_read_config_word>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_UNUSED (reg:SI 0 r0)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 144 143 414 16 arch/arm/kernel/bios32.c:379 (set (reg:SI 3 r3 [orig:195 status ] [195])
        (zero_extend:SI (mem/c/i:HI (plus:SI (reg/f:SI 13 sp)
                    (const_int 6 [0x6])) [0 status+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(note 414 144 413 16 ( status (expr_list:REG_DEP_TRUE (reg:HI 3 r3 [ status ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 413 414 282 16 ( status (expr_list:REG_DEP_TRUE (mem/c/i:HI (plus:SI (reg/f:SI 26 afp)
            (const_int -46 [0xffffffffffffffd2])) [0 status+0 S2 A16])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 282 413 147 16 include/linux/pci.h:768 (set (reg:SI 2 r2)
        (const_int 62 [0x3e])) 167 {*arm_movsi_insn} (nil))

(insn:TI 147 282 415 16 arch/arm/kernel/bios32.c:379 (set (reg:SI 3 r3 [orig:133 status.767 ] [133])
        (ior:SI (reg:SI 3 r3 [orig:195 status ] [195])
            (const_int 33 [0x21]))) 89 {*arm_iorsi3} (nil))
;; End of basic block 16 -> ( 17)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  17 [100.0%]  (fallthru)

(note 415 147 356 17 ( status (expr_list:REG_DEP_TRUE (reg:HI 3 r3 [ status.767 ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 16 15) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]

;; Pred edge  16 [100.0%]  (fallthru)
;; Pred edge  15 [100.0%] 
(code_label 356 415 354 17 115 "" [1 uses])

(note 354 356 148 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn:TI 148 354 149 17 arch/arm/kernel/bios32.c:379 (set (mem/c/i:HI (plus:SI (reg/f:SI 13 sp)
                (const_int 6 [0x6])) [0 status+0 S2 A16])
        (reg:HI 3 r3 [orig:133 status.767 ] [133])) 176 {*movhi_insn_arch4} (nil))

(insn:TI 149 148 150 17 include/linux/pci.h:768 (set (reg:SI 0 r0)
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:143 dev ] [143])
                (const_int 8 [0x8])) [0 <variable>.bus+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn:TI 150 149 153 17 include/linux/pci.h:768 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:143 dev ] [143])
                (const_int 28 [0x1c])) [0 <variable>.devfn+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn:TI 153 150 416 17 include/linux/pci.h:768 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("pci_bus_write_config_word") [flags 0x41] <function_decl 0x10f95800 pci_bus_write_config_word>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_UNUSED (reg:SI 0 r0)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(note 416 153 154 17 ( status (expr_list:REG_DEP_TRUE (mem/c/i:HI (plus:SI (reg/f:SI 13 sp)
            (const_int 6 [0x6])) [0 status+0 S2 A16])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)
;; End of basic block 17 -> ( 18)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  18 [100.0%]  (fallthru)

;; Start of basic block ( 13 17) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 4 [r4]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 4 [r4]
;; live  kill	

;; Pred edge  13 [71.0%] 
;; Pred edge  17 [100.0%]  (fallthru)
(code_label 154 416 155 18 103 "" [1 uses])

(note 155 154 156 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn:TI 156 155 417 18 arch/arm/kernel/bios32.c:350 (set (reg/v/f:SI 4 r4 [orig:143 dev ] [143])
        (mem/s/f/j:SI (reg/v/f:SI 4 r4 [orig:143 dev ] [143]) [0 <variable>.bus_list.next+0 S4 A64])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 18 -> ( 19)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  19 [100.0%]  (fallthru,dfs_back)

(note 417 156 418 19 ( dev (expr_list:REG_DEP_TRUE (reg/v/f:SI 4 r4 [orig:143 dev ] [143])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 418 417 158 19 ( bus (expr_list:REG_DEP_TRUE (reg/v/f:SI 6 r6 [orig:152 bus ] [152])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 18 4) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 8 [r8] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  18 [100.0%]  (fallthru,dfs_back)
;; Pred edge  4 [100.0%] 
(code_label 158 418 159 19 94 "" [1 uses])

(note 159 158 160 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn:TI 160 159 161 19 arch/arm/kernel/bios32.c:350 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 4 r4 [orig:143 dev ] [143])
            (reg/f:SI 8 r8 [orig:150 D.18622 ] [150]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn:TI 161 160 162 19 arch/arm/kernel/bios32.c:350 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 167)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 19 -> ( 20 21)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  20 [0.0%]  (fallthru)
;; Succ edge  21 [100.0%]  (loop_exit)

;; Start of basic block ( 19) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  19 [0.0%]  (fallthru)
(note 162 161 163 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn:TI 163 162 269 20 arch/arm/kernel/bios32.c:350 discrim 1 (set (reg:SI 3 r3 [orig:135 ivtmp.761 ] [135])
        (reg/v/f:SI 4 r4 [orig:143 dev ] [143])) 167 {*arm_movsi_insn} (nil))

(insn 269 163 419 20 arch/arm/kernel/bios32.c:350 discrim 1 (set (reg/v:SI 2 r2 [orig:139 i ] [139])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(note 419 269 384 20 ( i (expr_list:REG_DEP_TRUE (reg/v:SI 2 r2 [orig:139 i ] [139])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(jump_insn 384 419 385 20 (set (pc)
        (label_ref 51)) -1 (nil))
;; End of basic block 20 -> ( 5)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  5 [100.0%] 

(barrier 385 384 420)

(note 420 385 167 21 ( i (nil)) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 19) -> 21
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(13){ }}
;; lr  in  	 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 6 [r6] 13 [sp]
;; lr  def 	 4 [r4] 7 [r7]
;; live  in  	 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 4 [r4] 7 [r7]
;; live  kill	

;; Pred edge  19 [100.0%]  (loop_exit)
(code_label 167 420 168 21 106 "" [1 uses])

(note 168 167 169 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn:TI 169 168 421 21 arch/arm/kernel/bios32.c:388 (set (reg/v/f:SI 4 r4 [orig:134 dev.764 ] [134])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 6 r6 [orig:152 bus ] [152])
                (const_int 20 [0x14])) [0 <variable>.devices.next+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(note 421 169 173 21 ( dev (expr_list:REG_DEP_TRUE (reg/v/f:SI 4 r4 [orig:134 dev.764 ] [134])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn 173 421 422 21 include/linux/pci.h:755 (set (reg/f:SI 7 r7 [214])
        (plus:SI (reg/f:SI 13 sp)
            (const_int 6 [0x6]))) 4 {*arm_addsi3} (expr_list:REG_EQUIV (plus:SI (reg/f:SI 13 sp)
            (const_int 6 [0x6]))
        (nil)))

(note 422 173 386 21 ( root (nil)) NOTE_INSN_VAR_LOCATION)

(jump_insn 386 422 387 21 arch/arm/kernel/bios32.c:388 (set (pc)
        (label_ref 196)) -1 (nil))
;; End of basic block 21 -> ( 23)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  23 [100.0%] 

(barrier 387 386 423)

(note 423 387 198 22 ( cmd (expr_list:REG_DEP_TRUE (mem/c/i:HI (plus:SI (reg/f:SI 13 sp)
            (const_int 6 [0x6])) [0 cmd+0 S2 A16])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 23) -> 22
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4]
;; live  kill	 14 [lr]

;; Pred edge  23 [91.0%] 
(code_label 198 423 172 22 108 "" [1 uses])

(note 172 198 181 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(note 181 172 175 22 NOTE_INSN_DELETED)

(insn:TI 175 181 174 22 include/linux/pci.h:755 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:134 dev.764 ] [134])
                (const_int 28 [0x1c])) [0 <variable>.devfn+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn:TI 174 175 178 22 include/linux/pci.h:755 (set (reg:SI 0 r0)
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:134 dev.764 ] [134])
                (const_int 8 [0x8])) [0 <variable>.bus+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(call_insn:TI 178 174 179 22 include/linux/pci.h:755 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("pci_bus_read_config_word") [flags 0x41] <function_decl 0x10f95680 pci_bus_read_config_word>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_UNUSED (reg:SI 0 r0)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 179 178 424 22 arch/arm/kernel/bios32.c:392 (set (reg:SI 3 r3 [orig:199 cmd ] [199])
        (zero_extend:SI (mem/c/i:HI (plus:SI (reg/f:SI 13 sp)
                    (const_int 6 [0x6])) [0 cmd+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(note 424 179 266 22 ( cmd (expr_list:REG_DEP_TRUE (reg:HI 3 r3 [ cmd ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 266 424 182 22 include/linux/pci.h:768 (set (reg:SI 2 r2)
        (const_int 4 [0x4])) 167 {*arm_movsi_insn} (nil))

(insn:TI 182 266 425 22 arch/arm/kernel/bios32.c:392 (set (reg:SI 3 r3 [orig:149 cmd.306 ] [149])
        (ior:SI (reg/v:SI 5 r5 [orig:142 features ] [142])
            (reg:SI 3 r3 [orig:199 cmd ] [199]))) 89 {*arm_iorsi3} (nil))

(note 425 182 183 22 ( cmd (expr_list:REG_DEP_TRUE (reg:HI 3 r3 [ cmd.306 ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn 183 425 185 22 arch/arm/kernel/bios32.c:392 (set (mem/c/i:HI (plus:SI (reg/f:SI 13 sp)
                (const_int 6 [0x6])) [0 cmd+0 S2 A16])
        (reg:HI 3 r3 [orig:149 cmd.306 ] [149])) 176 {*movhi_insn_arch4} (nil))

(insn:TI 185 183 184 22 include/linux/pci.h:768 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:134 dev.764 ] [134])
                (const_int 28 [0x1c])) [0 <variable>.devfn+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn:TI 184 185 188 22 include/linux/pci.h:768 (set (reg:SI 0 r0)
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:134 dev.764 ] [134])
                (const_int 8 [0x8])) [0 <variable>.bus+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(call_insn:TI 188 184 426 22 include/linux/pci.h:768 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("pci_bus_write_config_word") [flags 0x41] <function_decl 0x10f95800 pci_bus_write_config_word>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_UNUSED (reg:SI 0 r0)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(note 426 188 189 22 ( cmd (expr_list:REG_DEP_TRUE (mem/c/i:HI (plus:SI (reg/f:SI 13 sp)
            (const_int 6 [0x6])) [0 cmd+0 S2 A16])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn 189 426 190 22 include/linux/pci.h:764 (set (reg:SI 0 r0)
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:134 dev.764 ] [134])
                (const_int 8 [0x8])) [0 <variable>.bus+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn:TI 190 189 267 22 include/linux/pci.h:764 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:134 dev.764 ] [134])
                (const_int 28 [0x1c])) [0 <variable>.devfn+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 267 190 268 22 include/linux/pci.h:764 (set (reg:SI 2 r2)
        (const_int 12 [0xc])) 167 {*arm_movsi_insn} (nil))

(insn:TI 268 267 193 22 include/linux/pci.h:764 (set (reg:SI 3 r3)
        (const_int 8 [0x8])) 167 {*arm_movsi_insn} (nil))

(call_insn:TI 193 268 194 22 include/linux/pci.h:764 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("pci_bus_write_config_byte") [flags 0x41] <function_decl 0x10f95780 pci_bus_write_config_byte>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_UNUSED (reg:SI 0 r0)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 194 193 427 22 arch/arm/kernel/bios32.c:388 discrim 2 (set (reg/v/f:SI 4 r4 [orig:134 dev.764 ] [134])
        (mem/s/f/j:SI (reg/v/f:SI 4 r4 [orig:134 dev.764 ] [134]) [0 <variable>.bus_list.next+0 S4 A64])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 22 -> ( 23)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  23 [100.0%]  (fallthru,dfs_back)

(note 427 194 196 23 ( bus (expr_list:REG_DEP_TRUE (reg/v/f:SI 6 r6 [orig:152 bus ] [152])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 22 21) -> 23
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 7 [r7] 8 [r8] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  22 [100.0%]  (fallthru,dfs_back)
;; Pred edge  21 [100.0%] 
(code_label 196 427 197 23 107 "" [1 uses])

(note 197 196 199 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(insn:TI 199 197 265 23 arch/arm/kernel/bios32.c:388 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 4 r4 [orig:134 dev.764 ] [134])
            (reg/f:SI 8 r8 [orig:150 D.18622 ] [150]))) 219 {*arm_cmpsi_insn} (nil))

(insn 265 199 177 23 include/linux/pci.h:755 (set (reg:SI 2 r2)
        (const_int 4 [0x4])) 167 {*arm_movsi_insn} (nil))

(insn:TI 177 265 200 23 include/linux/pci.h:755 (set (reg:SI 3 r3)
        (reg/f:SI 7 r7 [214])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -2 [0xfffffffffffffffe]))
        (nil)))

(jump_insn:TI 200 177 201 23 arch/arm/kernel/bios32.c:388 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 198)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil))))
;; End of basic block 23 -> ( 22 24)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  22 [91.0%] 
;; Succ edge  24 [9.0%]  (fallthru,loop_exit)

;; Start of basic block ( 23) -> 24
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 6 [r6] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  23 [9.0%]  (fallthru,loop_exit)
(note 201 200 202 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(insn:TI 202 201 203 24 arch/arm/kernel/bios32.c:402 (set (reg/f:SI 3 r3 [orig:148 D.18625 ] [148])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 6 r6 [orig:152 bus ] [152])
                (const_int 28 [0x1c])) [0 <variable>.self+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn:TI 203 202 204 24 arch/arm/kernel/bios32.c:402 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 3 r3 [orig:148 D.18625 ] [148])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn:TI 204 203 205 24 arch/arm/kernel/bios32.c:402 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 229)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
            (nil))))
;; End of basic block 24 -> ( 25 27)
;; lr  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  25 [85.0%]  (fallthru)
;; Succ edge  27 [15.0%] 

;; Start of basic block ( 24) -> 25
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  24 [85.0%]  (fallthru)
(note 205 204 206 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(insn:TI 206 205 207 25 arch/arm/kernel/bios32.c:402 (set (reg:SI 3 r3 [orig:201 <variable>.hdr_type ] [201])
        (zero_extend:SI (mem/s/j:QI (plus:SI (reg/f:SI 3 r3 [orig:148 D.18625 ] [148])
                    (const_int 45 [0x2d])) [0 <variable>.hdr_type+0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn:TI 207 206 208 25 arch/arm/kernel/bios32.c:402 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [orig:201 <variable>.hdr_type ] [201])
            (const_int 1 [0x1]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn:TI 208 207 209 25 arch/arm/kernel/bios32.c:402 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 229)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 25 -> ( 26 27)
;; lr  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  26 [28.0%]  (fallthru)
;; Succ edge  27 [72.0%] 

;; Start of basic block ( 25) -> 26
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 3 [r3] 5 [r5] 6 [r6] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  25 [28.0%]  (fallthru)
(note 209 208 211 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(note 211 209 221 26 NOTE_INSN_DELETED)

(note 221 211 212 26 NOTE_INSN_DELETED)

(insn:TI 212 221 215 26 arch/arm/kernel/bios32.c:403 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 5 r5 [orig:142 features ] [142])
                (const_int 1 [0x1])
                (const_int 9 [0x9]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(insn:TI 215 212 217 26 arch/arm/kernel/bios32.c:404 (cond_exec (ne (reg:CC_NOOV 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 3 r3 [orig:204 <variable>.bridge_ctl ] [204])
            (zero_extend:SI (mem/s/j:HI (plus:SI (reg/v/f:SI 6 r6 [orig:152 bus ] [152])
                        (const_int 130 [0x82])) [0 <variable>.bridge_ctl+0 S2 A16])))) 2332 {neon_vornv2di+65} (nil))

(insn:TI 217 215 218 26 arch/arm/kernel/bios32.c:404 (cond_exec (ne (reg:CC_NOOV 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 3 r3 [205])
            (ior:SI (reg:SI 3 r3 [orig:204 <variable>.bridge_ctl ] [204])
                (const_int 128 [0x80])))) 2310 {neon_vornv2di+43} (nil))

(insn:TI 218 217 222 26 arch/arm/kernel/bios32.c:404 (cond_exec (ne (reg:CC_NOOV 24 cc)
            (const_int 0 [0x0]))
        (set (mem/s/j:HI (plus:SI (reg/v/f:SI 6 r6 [orig:152 bus ] [152])
                    (const_int 130 [0x82])) [0 <variable>.bridge_ctl+0 S2 A16])
            (reg:HI 3 r3 [205]))) 2348 {neon_vornv2di+81} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (nil)))

(insn 222 218 225 26 arch/arm/kernel/bios32.c:405 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 5 r5 [orig:142 features ] [142])
                (const_int 1 [0x1])
                (const_int 6 [0x6]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(insn:TI 225 222 227 26 arch/arm/kernel/bios32.c:406 (cond_exec (ne (reg:CC_NOOV 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 3 r3 [orig:208 <variable>.bridge_ctl ] [208])
            (zero_extend:SI (mem/s/j:HI (plus:SI (reg/v/f:SI 6 r6 [orig:152 bus ] [152])
                        (const_int 130 [0x82])) [0 <variable>.bridge_ctl+0 S2 A16])))) 2332 {neon_vornv2di+65} (nil))

(insn:TI 227 225 228 26 arch/arm/kernel/bios32.c:406 (cond_exec (ne (reg:CC_NOOV 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 3 r3 [209])
            (ior:SI (reg:SI 3 r3 [orig:208 <variable>.bridge_ctl ] [208])
                (const_int 1 [0x1])))) 2310 {neon_vornv2di+43} (nil))

(insn:TI 228 227 229 26 arch/arm/kernel/bios32.c:406 (cond_exec (ne (reg:CC_NOOV 24 cc)
            (const_int 0 [0x0]))
        (set (mem/s/j:HI (plus:SI (reg/v/f:SI 6 r6 [orig:152 bus ] [152])
                    (const_int 130 [0x82])) [0 <variable>.bridge_ctl+0 S2 A16])
            (reg:HI 3 r3 [209]))) 2348 {neon_vornv2di+81} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_DEAD (reg:HI 3 r3 [209])
            (nil))))
;; End of basic block 26 -> ( 27)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  27 [100.0%]  (fallthru)

;; Start of basic block ( 24 25 26) -> 27
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 5 [r5] 6 [r6] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  24 [15.0%] 
;; Pred edge  25 [72.0%] 
;; Pred edge  26 [100.0%]  (fallthru)
(code_label 229 228 230 27 109 "" [2 uses])

(note 230 229 231 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(note 231 230 232 27 NOTE_INSN_DELETED)

(note 232 231 261 27 NOTE_INSN_DELETED)

(note 261 232 312 27 NOTE_INSN_DELETED)

(insn:TI 312 261 260 27 arch/arm/kernel/bios32.c:412 discrim 3 (set (reg/f:SI 3 r3 [213])
        (symbol_ref/v/f:SI ("*.LC5") [flags 0x82] <string_cst 0x1141f500>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref/v/f:SI ("*.LC5") [flags 0x82] <string_cst 0x1141f500>)
        (nil)))

(insn 260 312 313 27 arch/arm/kernel/bios32.c:412 discrim 2 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 5 r5 [orig:142 features ] [142])
                (const_int 1 [0x1])
                (const_int 9 [0x9]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(insn:TI 313 260 246 27 arch/arm/kernel/bios32.c:412 discrim 3 (set (reg/f:SI 2 r2 [212])
        (symbol_ref/v/f:SI ("*.LC6") [flags 0x82] <string_cst 0x1141f460>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref/v/f:SI ("*.LC6") [flags 0x82] <string_cst 0x1141f460>)
        (nil)))

(insn:TI 246 313 247 27 arch/arm/kernel/bios32.c:412 discrim 3 (set (reg:SI 1 r1)
        (zero_extend:SI (mem/s/j:QI (plus:SI (reg/v/f:SI 6 r6 [orig:152 bus ] [152])
                    (const_int 76 [0x4c])) [0 <variable>.number+0 S1 A32]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn:TI 247 246 245 27 arch/arm/kernel/bios32.c:412 discrim 3 (set (reg:SI 2 r2)
        (if_then_else:SI (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (reg/f:SI 2 r2 [212])
            (reg/f:SI 3 r3 [213]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_DEAD (reg/f:SI 3 r3 [213])
            (nil))))

(insn 245 247 248 27 arch/arm/kernel/bios32.c:412 discrim 3 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC7") [flags 0x82] <string_cst 0x1138fc30>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC7") [flags 0x82] <string_cst 0x1138fc30>)
        (nil)))

(call_insn:TI 248 245 351 27 arch/arm/kernel/bios32.c:412 discrim 3 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(note 351 248 352 27 NOTE_INSN_EPILOGUE_BEG)

(jump_insn 352 351 353 27 arch/arm/kernel/bios32.c:414 (unspec_volatile [
            (return)
        ] 1) 323 {*epilogue_insns} (nil))
;; End of basic block 27 -> ( 1)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  EXIT [100.0%] 

(barrier 353 352 311)

(note 311 353 340 NOTE_INSN_DELETED)

(note 340 311 0 NOTE_INSN_DELETED)


;; Function pcibios_bus_report_status (pcibios_bus_report_status)[0:1043]


Basic block 2:
IN:
Stack adjustment: 0
Reg 0: bus+0
Reg 1: status_mask+0
Reg 2: warn+0
Variables:
  name: bus
    offset 0
      (reg:SI 0 r0 [ bus ])
  name: status_mask
    offset 0
      (reg:SI 1 r1 [ status_mask ])
  name: warn
    offset 0
      (reg:SI 2 r2 [ warn ])

OUT:
Stack adjustment: 40
Reg 0: bus+0
Reg 1: status_mask+0
Reg 2: warn+0
Reg 4: dev+0
Reg 6: status_mask+0
Reg 7: warn+0
Reg 8: bus+0
Variables:
  name: dev
    offset 0
      (reg/v/f:SI 4 r4 [orig:137 dev ] [137])
  name: bus
    offset 0
      (reg/v/f:SI 8 r8 [orig:142 bus ] [142])
      (reg/f:SI 0 r0 [orig:142 bus ] [142])
  name: status_mask
    offset 0
      (reg/v:SI 6 r6 [orig:143 status_mask ] [143])
      (reg:SI 1 r1 [ status_mask ])
  name: warn
    offset 0
      (reg/v:SI 7 r7 [orig:144 warn ] [144])
      (reg:SI 2 r2 [ warn ])


Basic block 3:
IN:
Stack adjustment: 40
Reg 0: bus+0
Reg 1: status_mask+0
Reg 4: dev+0
Reg 6: status_mask+0
Reg 7: warn+0
Reg 8: bus+0
Variables:
  name: dev
    offset 0
      (reg/v/f:SI 4 r4 [orig:137 dev ] [137])
  name: bus
    offset 0
      (reg/v/f:SI 8 r8 [orig:142 bus ] [142])
      (reg/f:SI 0 r0 [orig:142 bus ] [142])
  name: status_mask
    offset 0
      (reg/v:SI 6 r6 [orig:143 status_mask ] [143])
      (reg:SI 1 r1 [ status_mask ])
  name: warn
    offset 0
      (reg/v:SI 7 r7 [orig:144 warn ] [144])
  name: status
    offset 0
      (mem/c/i:HI (plus:SI (reg/f:SI 26 afp)
        (const_int -38 [0xffffffffffffffda])) [0 status+0 S2 A16])

OUT:
Stack adjustment: 40
Reg 4: dev+0
Reg 6: status_mask+0
Reg 7: warn+0
Reg 8: bus+0
Variables:
  name: dev
    offset 0
      (reg/v/f:SI 4 r4 [orig:137 dev ] [137])
  name: bus
    offset 0
      (reg/v/f:SI 8 r8 [orig:142 bus ] [142])
  name: status_mask
    offset 0
      (reg/v:SI 6 r6 [orig:143 status_mask ] [143])
  name: warn
    offset 0
      (reg/v:SI 7 r7 [orig:144 warn ] [144])
  name: status
    offset 0
      (mem/c/i:HI (plus:SI (reg/f:SI 26 afp)
        (const_int -38 [0xffffffffffffffda])) [0 status+0 S2 A16])


Basic block 4:
IN:
Stack adjustment: 40
Reg 4: dev+0
Reg 6: status_mask+0
Reg 7: warn+0
Reg 8: bus+0
Variables:
  name: dev
    offset 0
      (reg/v/f:SI 4 r4 [orig:137 dev ] [137])
  name: bus
    offset 0
      (reg/v/f:SI 8 r8 [orig:142 bus ] [142])
  name: status_mask
    offset 0
      (reg/v:SI 6 r6 [orig:143 status_mask ] [143])
  name: warn
    offset 0
      (reg/v:SI 7 r7 [orig:144 warn ] [144])
  name: status
    offset 0
      (mem/c/i:HI (plus:SI (reg/f:SI 26 afp)
        (const_int -38 [0xffffffffffffffda])) [0 status+0 S2 A16])

OUT:
Stack adjustment: 40
Reg 4: dev+0
Reg 6: status_mask+0
Reg 7: warn+0
Reg 8: bus+0
Variables:
  name: dev
    offset 0
      (reg/v/f:SI 4 r4 [orig:137 dev ] [137])
  name: bus
    offset 0
      (reg/v/f:SI 8 r8 [orig:142 bus ] [142])
  name: status_mask
    offset 0
      (reg/v:SI 6 r6 [orig:143 status_mask ] [143])
  name: warn
    offset 0
      (reg/v:SI 7 r7 [orig:144 warn ] [144])
  name: status
    offset 0
      (mem/c/i:HI (plus:SI (reg/f:SI 26 afp)
        (const_int -38 [0xffffffffffffffda])) [0 status+0 S2 A16])


Basic block 5:
IN:
Stack adjustment: 40
Reg 4: dev+0
Reg 6: status_mask+0
Reg 7: warn+0
Reg 8: bus+0
Variables:
  name: dev
    offset 0
      (reg/v/f:SI 4 r4 [orig:137 dev ] [137])
  name: bus
    offset 0
      (reg/v/f:SI 8 r8 [orig:142 bus ] [142])
  name: status_mask
    offset 0
      (reg/v:SI 6 r6 [orig:143 status_mask ] [143])
  name: warn
    offset 0
      (reg/v:SI 7 r7 [orig:144 warn ] [144])
  name: status
    offset 0
      (mem/c/i:HI (plus:SI (reg/f:SI 26 afp)
        (const_int -38 [0xffffffffffffffda])) [0 status+0 S2 A16])

OUT:
Stack adjustment: 40
Reg 4: dev+0
Reg 6: status_mask+0
Reg 7: warn+0
Reg 8: bus+0
Variables:
  name: dev
    offset 0
      (reg/v/f:SI 4 r4 [orig:137 dev ] [137])
  name: bus
    offset 0
      (reg/v/f:SI 8 r8 [orig:142 bus ] [142])
  name: status_mask
    offset 0
      (reg/v:SI 6 r6 [orig:143 status_mask ] [143])
  name: warn
    offset 0
      (reg/v:SI 7 r7 [orig:144 warn ] [144])
  name: status
    offset 0
      (mem/c/i:HI (plus:SI (reg/f:SI 26 afp)
        (const_int -38 [0xffffffffffffffda])) [0 status+0 S2 A16])


Basic block 6:
IN:
Stack adjustment: 40
Reg 4: dev+0
Reg 6: status_mask+0
Reg 7: warn+0
Reg 8: bus+0
Variables:
  name: dev
    offset 0
      (reg/v/f:SI 4 r4 [orig:137 dev ] [137])
  name: bus
    offset 0
      (reg/v/f:SI 8 r8 [orig:142 bus ] [142])
  name: status_mask
    offset 0
      (reg/v:SI 6 r6 [orig:143 status_mask ] [143])
  name: warn
    offset 0
      (reg/v:SI 7 r7 [orig:144 warn ] [144])
  name: status
    offset 0
      (mem/c/i:HI (plus:SI (reg/f:SI 26 afp)
        (const_int -38 [0xffffffffffffffda])) [0 status+0 S2 A16])

OUT:
Stack adjustment: 40
Reg 4: dev+0
Reg 6: status_mask+0
Reg 7: warn+0
Reg 8: bus+0
Variables:
  name: dev
    offset 0
      (reg/v/f:SI 4 r4 [orig:137 dev ] [137])
  name: bus
    offset 0
      (reg/v/f:SI 8 r8 [orig:142 bus ] [142])
  name: status_mask
    offset 0
      (reg/v:SI 6 r6 [orig:143 status_mask ] [143])
  name: warn
    offset 0
      (reg/v:SI 7 r7 [orig:144 warn ] [144])
  name: status
    offset 0
      (mem/c/i:HI (plus:SI (reg/f:SI 26 afp)
        (const_int -38 [0xffffffffffffffda])) [0 status+0 S2 A16])


Basic block 7:
IN:
Stack adjustment: 40
Reg 4: dev+0
Reg 6: status_mask+0
Reg 7: warn+0
Reg 8: bus+0
Variables:
  name: dev
    offset 0
      (reg/v/f:SI 4 r4 [orig:137 dev ] [137])
  name: bus
    offset 0
      (reg/v/f:SI 8 r8 [orig:142 bus ] [142])
  name: status_mask
    offset 0
      (reg/v:SI 6 r6 [orig:143 status_mask ] [143])
  name: warn
    offset 0
      (reg/v:SI 7 r7 [orig:144 warn ] [144])
  name: status
    offset 0
      (mem/c/i:HI (plus:SI (reg/f:SI 26 afp)
        (const_int -38 [0xffffffffffffffda])) [0 status+0 S2 A16])

OUT:
Stack adjustment: 40
Reg 4: dev+0
Reg 6: status_mask+0
Reg 7: warn+0
Reg 8: bus+0
Variables:
  name: dev
    offset 0
      (reg/v/f:SI 4 r4 [orig:137 dev ] [137])
  name: bus
    offset 0
      (reg/v/f:SI 8 r8 [orig:142 bus ] [142])
  name: status_mask
    offset 0
      (reg/v:SI 6 r6 [orig:143 status_mask ] [143])
  name: warn
    offset 0
      (reg/v:SI 7 r7 [orig:144 warn ] [144])
  name: status
    offset 0
      (mem/c/i:HI (plus:SI (reg/f:SI 26 afp)
        (const_int -38 [0xffffffffffffffda])) [0 status+0 S2 A16])


Basic block 8:
IN:
Stack adjustment: 40
Reg 4: dev+0
Reg 6: status_mask+0
Reg 7: warn+0
Reg 8: bus+0
Variables:
  name: dev
    offset 0
      (reg/v/f:SI 4 r4 [orig:137 dev ] [137])
  name: bus
    offset 0
      (reg/v/f:SI 8 r8 [orig:142 bus ] [142])
  name: status_mask
    offset 0
      (reg/v:SI 6 r6 [orig:143 status_mask ] [143])
  name: warn
    offset 0
      (reg/v:SI 7 r7 [orig:144 warn ] [144])
  name: status
    offset 0
      (mem/c/i:HI (plus:SI (reg/f:SI 26 afp)
        (const_int -38 [0xffffffffffffffda])) [0 status+0 S2 A16])

OUT:
Stack adjustment: 40
Reg 4: dev+0
Reg 6: status_mask+0
Reg 7: warn+0
Reg 8: bus+0
Variables:
  name: dev
    offset 0
      (reg/v/f:SI 4 r4 [orig:137 dev ] [137])
  name: bus
    offset 0
      (reg/v/f:SI 8 r8 [orig:142 bus ] [142])
  name: status_mask
    offset 0
      (reg/v:SI 6 r6 [orig:143 status_mask ] [143])
  name: warn
    offset 0
      (reg/v:SI 7 r7 [orig:144 warn ] [144])
  name: status
    offset 0
      (mem/c/i:HI (plus:SI (reg/f:SI 26 afp)
        (const_int -38 [0xffffffffffffffda])) [0 status+0 S2 A16])


Basic block 9:
IN:
Stack adjustment: 40
Reg 4: dev+0
Reg 6: status_mask+0
Reg 7: warn+0
Reg 8: bus+0
Variables:
  name: dev
    offset 0
      (reg/v/f:SI 4 r4 [orig:137 dev ] [137])
  name: bus
    offset 0
      (reg/v/f:SI 8 r8 [orig:142 bus ] [142])
  name: status_mask
    offset 0
      (reg/v:SI 6 r6 [orig:143 status_mask ] [143])
  name: warn
    offset 0
      (reg/v:SI 7 r7 [orig:144 warn ] [144])
  name: status
    offset 0
      (mem/c/i:HI (plus:SI (reg/f:SI 26 afp)
        (const_int -38 [0xffffffffffffffda])) [0 status+0 S2 A16])

OUT:
Stack adjustment: 40
Reg 4: dev+0
Reg 6: status_mask+0
Reg 7: warn+0
Reg 8: bus+0
Variables:
  name: dev
    offset 0
      (reg/v/f:SI 4 r4 [orig:137 dev ] [137])
  name: bus
    offset 0
      (reg/v/f:SI 8 r8 [orig:142 bus ] [142])
  name: status_mask
    offset 0
      (reg/v:SI 6 r6 [orig:143 status_mask ] [143])
  name: warn
    offset 0
      (reg/v:SI 7 r7 [orig:144 warn ] [144])
  name: status
    offset 0
      (mem/c/i:HI (plus:SI (reg/f:SI 26 afp)
        (const_int -38 [0xffffffffffffffda])) [0 status+0 S2 A16])


Basic block 10:
IN:
Stack adjustment: 40
Reg 0: bus+0
Reg 1: status_mask+0
Reg 2: warn+0
Reg 4: dev+0
Reg 6: status_mask+0
Reg 7: warn+0
Reg 8: bus+0
Variables:
  name: bus
    offset 0
      (reg/v/f:SI 8 r8 [orig:142 bus ] [142])
      (reg/f:SI 0 r0 [orig:142 bus ] [142])
  name: status_mask
    offset 0
      (reg/v:SI 6 r6 [orig:143 status_mask ] [143])
      (reg:SI 1 r1 [ status_mask ])
  name: warn
    offset 0
      (reg/v:SI 7 r7 [orig:144 warn ] [144])
      (reg:SI 2 r2 [ warn ])
  name: dev
    offset 0
      (reg/v/f:SI 4 r4 [orig:137 dev ] [137])
  name: status
    offset 0
      (mem/c/i:HI (plus:SI (reg/f:SI 26 afp)
        (const_int -38 [0xffffffffffffffda])) [0 status+0 S2 A16])

OUT:
Stack adjustment: 40
Reg 0: bus+0
Reg 1: status_mask+0
Reg 4: dev+0
Reg 6: status_mask+0
Reg 7: warn+0
Reg 8: bus+0
Variables:
  name: dev
    offset 0
      (reg/v/f:SI 4 r4 [orig:137 dev ] [137])
  name: bus
    offset 0
      (reg/v/f:SI 8 r8 [orig:142 bus ] [142])
      (reg/f:SI 0 r0 [orig:142 bus ] [142])
  name: status_mask
    offset 0
      (reg/v:SI 6 r6 [orig:143 status_mask ] [143])
      (reg:SI 1 r1 [ status_mask ])
  name: warn
    offset 0
      (reg/v:SI 7 r7 [orig:144 warn ] [144])
  name: status
    offset 0
      (mem/c/i:HI (plus:SI (reg/f:SI 26 afp)
        (const_int -38 [0xffffffffffffffda])) [0 status+0 S2 A16])


Basic block 11:
IN:
Stack adjustment: 40
Reg 0: bus+0
Reg 1: status_mask+0
Reg 4: dev+0
Reg 6: status_mask+0
Reg 7: warn+0
Reg 8: bus+0
Variables:
  name: dev
    offset 0
      (reg/v/f:SI 4 r4 [orig:137 dev ] [137])
  name: bus
    offset 0
      (reg/v/f:SI 8 r8 [orig:142 bus ] [142])
      (reg/f:SI 0 r0 [orig:142 bus ] [142])
  name: status_mask
    offset 0
      (reg/v:SI 6 r6 [orig:143 status_mask ] [143])
      (reg:SI 1 r1 [ status_mask ])
  name: warn
    offset 0
      (reg/v:SI 7 r7 [orig:144 warn ] [144])
  name: status
    offset 0
      (mem/c/i:HI (plus:SI (reg/f:SI 26 afp)
        (const_int -38 [0xffffffffffffffda])) [0 status+0 S2 A16])

OUT:
Stack adjustment: 40
Reg 0: bus+0
Reg 1: status_mask+0
Reg 4: dev+0
Reg 6: status_mask+0
Reg 7: warn+0
Reg 8: bus+0
Variables:
  name: dev
    offset 0
      (reg/v/f:SI 4 r4 [orig:133 dev.798 ] [133])
  name: bus
    offset 0
      (reg/v/f:SI 8 r8 [orig:142 bus ] [142])
      (reg/f:SI 0 r0 [orig:142 bus ] [142])
  name: status_mask
    offset 0
      (reg/v:SI 6 r6 [orig:143 status_mask ] [143])
      (reg:SI 1 r1 [ status_mask ])
  name: warn
    offset 0
      (reg/v:SI 7 r7 [orig:144 warn ] [144])
  name: status
    offset 0
      (mem/c/i:HI (plus:SI (reg/f:SI 26 afp)
        (const_int -38 [0xffffffffffffffda])) [0 status+0 S2 A16])


Basic block 12:
IN:
Stack adjustment: 40
Reg 0: bus+0
Reg 4: dev+0
Reg 6: status_mask+0
Reg 7: warn+0
Reg 8: bus+0
Variables:
  name: dev
    offset 0
      (reg/v/f:SI 4 r4 [orig:133 dev.798 ] [133])
  name: bus
    offset 0
      (reg/v/f:SI 8 r8 [orig:142 bus ] [142])
      (reg/f:SI 0 r0 [orig:142 bus ] [142])
  name: status_mask
    offset 0
      (reg/v:SI 6 r6 [orig:143 status_mask ] [143])
  name: warn
    offset 0
      (reg/v:SI 7 r7 [orig:144 warn ] [144])
  name: status
    offset 0
      (mem/c/i:HI (plus:SI (reg/f:SI 26 afp)
        (const_int -38 [0xffffffffffffffda])) [0 status+0 S2 A16])

OUT:
Stack adjustment: 40
Reg 4: dev+0
Reg 6: status_mask+0
Reg 7: warn+0
Reg 8: bus+0
Variables:
  name: dev
    offset 0
      (reg/v/f:SI 4 r4 [orig:133 dev.798 ] [133])
  name: bus
    offset 0
      (reg/v/f:SI 8 r8 [orig:142 bus ] [142])
  name: status_mask
    offset 0
      (reg/v:SI 6 r6 [orig:143 status_mask ] [143])
  name: warn
    offset 0
      (reg/v:SI 7 r7 [orig:144 warn ] [144])
  name: status
    offset 0
      (mem/c/i:HI (plus:SI (reg/f:SI 26 afp)
        (const_int -38 [0xffffffffffffffda])) [0 status+0 S2 A16])


Basic block 13:
IN:
Stack adjustment: 40
Reg 4: dev+0
Reg 6: status_mask+0
Reg 7: warn+0
Reg 8: bus+0
Variables:
  name: dev
    offset 0
      (reg/v/f:SI 4 r4 [orig:133 dev.798 ] [133])
  name: bus
    offset 0
      (reg/v/f:SI 8 r8 [orig:142 bus ] [142])
  name: status_mask
    offset 0
      (reg/v:SI 6 r6 [orig:143 status_mask ] [143])
  name: warn
    offset 0
      (reg/v:SI 7 r7 [orig:144 warn ] [144])
  name: status
    offset 0
      (mem/c/i:HI (plus:SI (reg/f:SI 26 afp)
        (const_int -38 [0xffffffffffffffda])) [0 status+0 S2 A16])

OUT:
Stack adjustment: 40
Reg 4: dev+0
Reg 6: status_mask+0
Reg 7: warn+0
Reg 8: bus+0
Variables:
  name: dev
    offset 0
      (reg/v/f:SI 4 r4 [orig:133 dev.798 ] [133])
  name: bus
    offset 0
      (reg/v/f:SI 8 r8 [orig:142 bus ] [142])
  name: status_mask
    offset 0
      (reg/v:SI 6 r6 [orig:143 status_mask ] [143])
  name: warn
    offset 0
      (reg/v:SI 7 r7 [orig:144 warn ] [144])
  name: status
    offset 0
      (mem/c/i:HI (plus:SI (reg/f:SI 26 afp)
        (const_int -38 [0xffffffffffffffda])) [0 status+0 S2 A16])


Basic block 14:
IN:
Stack adjustment: 40
Reg 4: dev+0
Reg 6: status_mask+0
Reg 7: warn+0
Reg 8: bus+0
Variables:
  name: dev
    offset 0
      (reg/v/f:SI 4 r4 [orig:133 dev.798 ] [133])
  name: bus
    offset 0
      (reg/v/f:SI 8 r8 [orig:142 bus ] [142])
  name: status_mask
    offset 0
      (reg/v:SI 6 r6 [orig:143 status_mask ] [143])
  name: warn
    offset 0
      (reg/v:SI 7 r7 [orig:144 warn ] [144])
  name: status
    offset 0
      (mem/c/i:HI (plus:SI (reg/f:SI 26 afp)
        (const_int -38 [0xffffffffffffffda])) [0 status+0 S2 A16])

OUT:
Stack adjustment: 40
Reg 4: dev+0
Reg 6: status_mask+0
Reg 7: warn+0
Reg 8: bus+0
Variables:
  name: dev
    offset 0
      (reg/v/f:SI 4 r4 [orig:133 dev.798 ] [133])
  name: bus
    offset 0
      (reg/v/f:SI 8 r8 [orig:142 bus ] [142])
  name: status_mask
    offset 0
      (reg/v:SI 6 r6 [orig:143 status_mask ] [143])
  name: warn
    offset 0
      (reg/v:SI 7 r7 [orig:144 warn ] [144])
  name: status
    offset 0
      (mem/c/i:HI (plus:SI (reg/f:SI 26 afp)
        (const_int -38 [0xffffffffffffffda])) [0 status+0 S2 A16])


Basic block 15:
IN:
Stack adjustment: 40
Reg 0: bus+0
Reg 1: status_mask+0
Reg 4: dev+0
Reg 6: status_mask+0
Reg 7: warn+0
Reg 8: bus+0
Variables:
  name: dev
    offset 0
      (reg/v/f:SI 4 r4 [orig:133 dev.798 ] [133])
  name: bus
    offset 0
      (reg/v/f:SI 8 r8 [orig:142 bus ] [142])
      (reg/f:SI 0 r0 [orig:142 bus ] [142])
  name: status_mask
    offset 0
      (reg/v:SI 6 r6 [orig:143 status_mask ] [143])
      (reg:SI 1 r1 [ status_mask ])
  name: warn
    offset 0
      (reg/v:SI 7 r7 [orig:144 warn ] [144])
  name: status
    offset 0
      (mem/c/i:HI (plus:SI (reg/f:SI 26 afp)
        (const_int -38 [0xffffffffffffffda])) [0 status+0 S2 A16])

OUT:
Stack adjustment: 40
Reg 0: bus+0
Reg 4: dev+0
Reg 6: status_mask+0
Reg 7: warn+0
Reg 8: bus+0
Variables:
  name: dev
    offset 0
      (reg/v/f:SI 4 r4 [orig:133 dev.798 ] [133])
  name: bus
    offset 0
      (reg/v/f:SI 8 r8 [orig:142 bus ] [142])
      (reg/f:SI 0 r0 [orig:142 bus ] [142])
  name: status_mask
    offset 0
      (reg/v:SI 6 r6 [orig:143 status_mask ] [143])
  name: warn
    offset 0
      (reg/v:SI 7 r7 [orig:144 warn ] [144])
  name: status
    offset 0
      (mem/c/i:HI (plus:SI (reg/f:SI 26 afp)
        (const_int -38 [0xffffffffffffffda])) [0 status+0 S2 A16])


Basic block 16:
IN:
Stack adjustment: 40
Reg 0: bus+0
Reg 4: dev+0
Reg 6: status_mask+0
Reg 7: warn+0
Reg 8: bus+0
Variables:
  name: dev
    offset 0
      (reg/v/f:SI 4 r4 [orig:133 dev.798 ] [133])
  name: bus
    offset 0
      (reg/v/f:SI 8 r8 [orig:142 bus ] [142])
      (reg/f:SI 0 r0 [orig:142 bus ] [142])
  name: status_mask
    offset 0
      (reg/v:SI 6 r6 [orig:143 status_mask ] [143])
  name: warn
    offset 0
      (reg/v:SI 7 r7 [orig:144 warn ] [144])
  name: status
    offset 0
      (mem/c/i:HI (plus:SI (reg/f:SI 26 afp)
        (const_int -38 [0xffffffffffffffda])) [0 status+0 S2 A16])

OUT:
Stack adjustment: 40
Reg 0: bus+0
Reg 4: dev+0
Reg 6: status_mask+0
Reg 7: warn+0
Reg 8: bus+0
Variables:
  name: dev
    offset 0
      (reg/v/f:SI 4 r4 [orig:133 dev.798 ] [133])
  name: bus
    offset 0
      (reg/v/f:SI 8 r8 [orig:142 bus ] [142])
      (reg/f:SI 0 r0 [orig:142 bus ] [142])
  name: status_mask
    offset 0
      (reg/v:SI 6 r6 [orig:143 status_mask ] [143])
  name: warn
    offset 0
      (reg/v:SI 7 r7 [orig:144 warn ] [144])
  name: status
    offset 0
      (mem/c/i:HI (plus:SI (reg/f:SI 26 afp)
        (const_int -38 [0xffffffffffffffda])) [0 status+0 S2 A16])


17 basic blocks, 24 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(7){ }d-1(8){ }d-1(9){ }d-1(10){ }d-1(13){ }d-1(14){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  def 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  gen 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  kill	

Successors:  10 [100.0%] 
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]


Basic block 3 , prev 2, next 4, loop_depth 1, count 0, freq 9100, maybe hot.
Predecessors:  10 [91.0%] 
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc]
;; live  kill	

Successors:  4 [71.0%]  (fallthru) 5 [29.0%] 
;; lr  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]


Basic block 4 , prev 3, next 5, loop_depth 1, count 0, freq 6461, maybe hot.
Predecessors:  3 [71.0%]  (fallthru)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 1 [r1] 24 [cc]
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  gen 	 1 [r1] 24 [cc]
;; live  kill	

Successors:  9 [50.0%]  5 [50.0%]  (fallthru)
;; lr  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]


Basic block 5 , prev 4, next 6, loop_depth 1, count 0, freq 5869, maybe hot.
Predecessors:  4 [50.0%]  (fallthru) 3 [29.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; lr  use 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 9 [r9] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 3 [r3] 24 [cc]
;; live  kill	 14 [lr]

Successors:  9 [28.0%]  6 [72.0%]  (fallthru)
;; lr  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


Basic block 6 , prev 5, next 7, loop_depth 1, count 0, freq 4226, maybe hot.
Predecessors:  5 [72.0%]  (fallthru)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 6 [r6] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

Successors:  9 [71.0%]  7 [29.0%]  (fallthru)
;; lr  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


Basic block 7 , prev 6, next 8, loop_depth 1, count 0, freq 1226, maybe hot.
Predecessors:  6 [29.0%]  (fallthru)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; lr  use 	 3 [r3] 4 [r4] 7 [r7] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc]
;; live  kill	 14 [lr]

Successors:  8 [0.0%]  (fallthru) 9 [100.0%] 
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


Basic block 8 , prev 7, next 9, loop_depth 1, count 0, freq 0.
Predecessors:  7 [0.0%]  (fallthru)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc]
;; live  kill	 14 [lr]

Successors:  9 [100.0%]  (fallthru)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


Basic block 9 , prev 8, next 10, loop_depth 1, count 0, freq 9100, maybe hot.
Predecessors:  4 [50.0%]  5 [28.0%]  6 [71.0%]  7 [100.0%]  8 [100.0%]  (fallthru)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 4 [r4]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  gen 	 4 [r4]
;; live  kill	

Successors:  10 [100.0%]  (fallthru,dfs_back)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]


Basic block 10 , prev 9, next 11, loop_depth 1, count 0, freq 10000, maybe hot.
Predecessors:  9 [100.0%]  (fallthru,dfs_back) 2 [100.0%] 
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 5 [r5] 10 [sl] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 24 [cc]
;; live  kill	

Successors:  3 [91.0%]  11 [9.0%]  (fallthru,loop_exit)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]


Basic block 11 , prev 10, next 12, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  10 [9.0%]  (fallthru,loop_exit)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(13){ }}
;; lr  in  	 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 8 [r8] 13 [sp]
;; lr  def 	 4 [r4]
;; live  in  	 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  gen 	 4 [r4]
;; live  kill	

Successors:  15 [100.0%] 
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]


Basic block 12 , prev 11, next 13, loop_depth 1, count 0, freq 9100, maybe hot.
Predecessors:  15 [91.0%] 
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 3 [r3] 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 3 [r3] 24 [cc]
;; live  kill	

Successors:  13 [69.8%]  (fallthru) 14 [30.2%] 
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]


Basic block 13 , prev 12, next 14, loop_depth 1, count 0, freq 6355, maybe hot.
Predecessors:  12 [69.8%]  (fallthru)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	
;; live  kill	 14 [lr]

Successors:  14 [100.0%]  (fallthru)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


Basic block 14 , prev 13, next 15, loop_depth 1, count 0, freq 9100, maybe hot.
Predecessors:  12 [30.2%]  13 [100.0%]  (fallthru)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 4 [r4]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  gen 	 4 [r4]
;; live  kill	

Successors:  15 [100.0%]  (fallthru,dfs_back)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]


Basic block 15 , prev 14, next 16, loop_depth 1, count 0, freq 10000, maybe hot.
Predecessors:  14 [100.0%]  (fallthru,dfs_back) 11 [100.0%] 
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  def 	 1 [r1] 2 [r2] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  gen 	 1 [r1] 2 [r2] 24 [cc]
;; live  kill	

Successors:  12 [91.0%]  16 [9.0%]  (fallthru,loop_exit)
;; lr  out 	 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]


Basic block 16 , prev 15, next 1, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  15 [9.0%]  (fallthru,loop_exit)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

Successors:  EXIT [100.0%] 
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]


Basic block 1 , prev 16, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  16 [100.0%] 
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(4){ }u-1(5){ }u-1(6){ }u-1(7){ }u-1(8){ }u-1(9){ }u-1(10){ }u-1(13){ }u-1(14){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  def 	
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	




pcibios_bus_report_status

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;;  exit block uses 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 7[r7] 8[r8] 9[r9] 10[sl] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={9d,7u} r1={13d,12u} r2={9d,5u} r3={9d,7u,1d} r4={5d,14u,3d} r5={3d,6u} r6={2d,5u} r7={2d,4u} r8={2d,3u} r9={2d,3u} r10={2d,3u} r12={4d} r13={2d,24u,1d} r14={5d,2u} r15={4d} r16={4d} r17={4d} r18={4d} r19={4d} r20={4d} r21={4d} r22={4d} r23={4d} r24={13d,9u} r25={1d} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r81={4d} r82={4d} r83={4d} r84={4d} r85={4d} r86={4d} r87={4d} r88={4d} r89={4d} r90={4d} r91={4d} r92={4d} r93={4d} r94={4d} r95={4d} r96={4d} r97={4d} r98={4d} r99={4d} r100={4d} r101={4d} r102={4d} r103={4d} r104={4d} r105={4d} r106={4d} r107={4d} r108={4d} r109={4d} r110={4d} r111={4d} r112={4d} r113={4d} r114={4d} r115={4d} r116={4d} r117={4d} r118={4d} r119={4d} r120={4d} r121={4d} r122={4d} r123={4d} r124={4d} r125={4d} r126={4d} r127={4d} 
;;    total ref usage 632{522d,104u,6e} in 53{49 regular + 4 call} insns.
(note 1 0 131 NOTE_INSN_DELETED)

(note 131 1 132 2 ( bus (expr_list:REG_DEP_TRUE (reg:SI 0 r0 [ bus ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 132 131 133 2 ( status_mask (expr_list:REG_DEP_TRUE (reg:SI 1 r1 [ status_mask ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 133 132 6 2 ( warn (expr_list:REG_DEP_TRUE (reg:SI 2 r2 [ warn ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  def 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  gen 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 133 5 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 5 6 115 2 NOTE_INSN_FUNCTION_BEG)

(insn/f:TI 115 5 135 2 arch/arm/kernel/bios32.c:26 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 0 r0)
                    ] 2))
            (use (reg:SI 1 r1))
            (use (reg:SI 4 r4))
            (use (reg:SI 5 r5))
            (use (reg:SI 6 r6))
            (use (reg:SI 7 r7))
            (use (reg:SI 8 r8))
            (use (reg:SI 9 r9))
            (use (reg:SI 10 sl))
            (use (reg:SI 14 lr))
        ]) 327 {*push_multi} (expr_list:REG_DEAD (reg:SI 10 sl)
        (expr_list:REG_DEAD (reg:SI 9 r9)
            (expr_list:REG_DEAD (reg:SI 8 r8)
                (expr_list:REG_DEAD (reg:SI 7 r7)
                    (expr_list:REG_DEAD (reg:SI 6 r6)
                        (expr_list:REG_DEAD (reg:SI 5 r5)
                            (expr_list:REG_DEAD (reg:SI 4 r4)
                                (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                                            (set/f (reg/f:SI 13 sp)
                                                (plus:SI (reg/f:SI 13 sp)
                                                    (const_int -40 [0xffffffffffffffd8])))
                                            (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                                                (reg:SI 0 r0))
                                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 4 [0x4])) [0 S4 A32])
                                                (reg:SI 1 r1))
                                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 8 [0x8])) [0 S4 A32])
                                                (reg:SI 4 r4))
                                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 12 [0xc])) [0 S4 A32])
                                                (reg:SI 5 r5))
                                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 16 [0x10])) [0 S4 A32])
                                                (reg:SI 6 r6))
                                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 20 [0x14])) [0 S4 A32])
                                                (reg:SI 7 r7))
                                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 24 [0x18])) [0 S4 A32])
                                                (reg:SI 8 r8))
                                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 28 [0x1c])) [0 S4 A32])
                                                (reg:SI 9 r9))
                                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 32 [0x20])) [0 S4 A32])
                                                (reg:SI 10 sl))
                                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 36 [0x24])) [0 S4 A32])
                                                (reg:SI 14 lr))
                                        ])
                                    (nil))))))))))

(note 135 115 134 2 ( bus (nil)) NOTE_INSN_VAR_LOCATION)

(note 134 135 116 2 ( status_mask (nil)) NOTE_INSN_VAR_LOCATION)

(note 116 134 106 2 NOTE_INSN_PROLOGUE_END)

(insn:TI 106 116 136 2 arch/arm/kernel/bios32.c:29 (set (reg/f:SI 5 r5 [orig:139 D.18413 ] [139])
        (reg/f:SI 0 r0 [orig:142 bus ] [142])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 0 r0 [orig:142 bus ] [142])
        (nil)))

(note 136 106 2 2 ( bus (expr_list:REG_DEP_TRUE (reg/f:SI 0 r0 [orig:142 bus ] [142])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 2 136 3 2 arch/arm/kernel/bios32.c:26 (set (reg/v/f:SI 8 r8 [orig:142 bus ] [142])
        (reg:SI 0 r0 [ bus ])) 167 {*arm_movsi_insn} (nil))

(insn 3 2 137 2 arch/arm/kernel/bios32.c:26 (set (reg/v:SI 6 r6 [orig:143 status_mask ] [143])
        (reg:SI 1 r1 [ status_mask ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ status_mask ])
        (nil)))

(note 137 3 4 2 ( status_mask (expr_list:REG_DEP_TRUE (reg:SI 1 r1 [ status_mask ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 4 137 23 2 arch/arm/kernel/bios32.c:26 (set (reg/v:SI 7 r7 [orig:144 warn ] [144])
        (reg:SI 2 r2 [ warn ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ warn ])
        (nil)))

(insn 23 4 30 2 include/linux/pci.h:755 (set (reg/f:SI 10 sl [155])
        (plus:SI (reg/f:SI 13 sp)
            (const_int 6 [0x6]))) 4 {*arm_addsi3} (expr_list:REG_EQUIV (plus:SI (reg/f:SI 13 sp)
            (const_int 6 [0x6]))
        (nil)))

(insn:TI 30 23 8 2 arch/arm/kernel/bios32.c:40 (set (reg:SI 9 r9 [157])
        (const_int 65535 [0xffff])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 65535 [0xffff])
        (nil)))

(insn 8 30 138 2 arch/arm/kernel/bios32.c:29 (set (reg/v/f:SI 4 r4 [orig:137 dev ] [137])
        (mem/s/f/j:SI (pre_modify:SI (reg/f:SI 5 r5 [orig:139 D.18413 ] [139])
                (plus:SI (reg/f:SI 5 r5 [orig:139 D.18413 ] [139])
                    (const_int 20 [0x14]))) [0 <variable>.devices.next+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_INC (reg/f:SI 5 r5 [orig:139 D.18413 ] [139])
        (nil)))

(note 138 8 127 2 ( dev (expr_list:REG_DEP_TRUE (reg/v/f:SI 4 r4 [orig:137 dev ] [137])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(jump_insn 127 138 128 2 arch/arm/kernel/bios32.c:29 (set (pc)
        (label_ref 66)) -1 (nil))
;; End of basic block 2 -> ( 10)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]


;; Succ edge  10 [100.0%] 

(barrier 128 127 139)

(note 139 128 140 3 ( bus (expr_list:REG_DEP_TRUE (reg/v/f:SI 8 r8 [orig:142 bus ] [142])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 140 139 141 3 ( status_mask (expr_list:REG_DEP_TRUE (reg/v:SI 6 r6 [orig:143 status_mask ] [143])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 141 140 142 3 ( warn (expr_list:REG_DEP_TRUE (reg/v:SI 7 r7 [orig:144 warn ] [144])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 142 141 68 3 ( status (expr_list:REG_DEP_TRUE (mem/c/i:HI (plus:SI (reg/f:SI 26 afp)
            (const_int -38 [0xffffffffffffffda])) [0 status+0 S2 A16])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 10) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc]
;; live  kill	

;; Pred edge  10 [91.0%] 
(code_label 68 142 12 3 125 "" [1 uses])

(note 12 68 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn:TI 13 12 24 3 arch/arm/kernel/bios32.c:36 (set (reg/f:SI 1 r1 [orig:141 D.18392 ] [141])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:137 dev ] [137])
                (const_int 8 [0x8])) [0 <variable>.bus+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:137 dev ] [137])
                (const_int 8 [0x8])) [0 <variable>.bus+0 S4 A64])
        (nil)))

(insn:TI 24 13 14 3 include/linux/pci.h:755 (set (reg:SI 0 r0)
        (reg/f:SI 1 r1 [orig:141 D.18392 ] [141])) 167 {*arm_movsi_insn} (nil))

(insn:TI 14 24 15 3 arch/arm/kernel/bios32.c:36 (set (reg:SI 1 r1 [orig:145 <variable>.number ] [145])
        (zero_extend:SI (mem/s/j:QI (plus:SI (reg/f:SI 1 r1 [orig:141 D.18392 ] [141])
                    (const_int 76 [0x4c])) [0 <variable>.number+0 S1 A32]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn:TI 15 14 16 3 arch/arm/kernel/bios32.c:36 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1 r1 [orig:145 <variable>.number ] [145])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [orig:145 <variable>.number ] [145])
        (nil)))

(jump_insn:TI 16 15 17 3 arch/arm/kernel/bios32.c:36 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 21)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
            (nil))))
;; End of basic block 3 -> ( 4 5)
;; lr  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]


;; Succ edge  4 [71.0%]  (fallthru)
;; Succ edge  5 [29.0%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 1 [r1] 24 [cc]
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  gen 	 1 [r1] 24 [cc]
;; live  kill	

;; Pred edge  3 [71.0%]  (fallthru)
(note 17 16 18 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn:TI 18 17 19 4 arch/arm/kernel/bios32.c:36 (set (reg:SI 1 r1 [orig:146 <variable>.devfn ] [146])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:137 dev ] [137])
                (const_int 28 [0x1c])) [0 <variable>.devfn+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:137 dev ] [137])
                (const_int 28 [0x1c])) [0 <variable>.devfn+0 S4 A32])
        (nil)))

(insn:TI 19 18 20 4 arch/arm/kernel/bios32.c:36 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1 r1 [orig:146 <variable>.devfn ] [146])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [orig:146 <variable>.devfn ] [146])
        (nil)))

(jump_insn:TI 20 19 21 4 arch/arm/kernel/bios32.c:36 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 62)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 4 -> ( 9 5)
;; lr  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]


;; Succ edge  9 [50.0%] 
;; Succ edge  5 [50.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; lr  use 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 9 [r9] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 3 [r3] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  4 [50.0%]  (fallthru)
;; Pred edge  3 [29.0%] 
(code_label 21 20 22 5 122 "" [1 uses])

(note 22 21 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn:TI 25 22 28 5 include/linux/pci.h:755 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:137 dev ] [137])
                (const_int 28 [0x1c])) [0 <variable>.devfn+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn:TI 28 25 29 5 include/linux/pci.h:755 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("pci_bus_read_config_word") [flags 0x41] <function_decl 0x10f95680 pci_bus_read_config_word>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_UNUSED (reg:SI 0 r0)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 29 28 31 5 arch/arm/kernel/bios32.c:40 (set (reg:SI 3 r3 [orig:140 status.287 ] [140])
        (zero_extend:SI (mem/c/i:HI (plus:SI (reg/f:SI 13 sp)
                    (const_int 6 [0x6])) [0 status+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn:TI 31 29 32 5 arch/arm/kernel/bios32.c:40 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [orig:140 status.287 ] [140])
            (reg:SI 9 r9 [157]))) 219 {*arm_cmpsi_insn} (expr_list:REG_EQUAL (compare:CC (reg:SI 3 r3 [orig:140 status.287 ] [140])
            (const_int 65535 [0xffff]))
        (nil)))

(jump_insn:TI 32 31 33 5 arch/arm/kernel/bios32.c:40 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 62)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2800 [0xaf0])
            (nil))))
;; End of basic block 5 -> ( 9 6)
;; lr  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  9 [28.0%] 
;; Succ edge  6 [72.0%]  (fallthru)

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 6 [r6] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  5 [72.0%]  (fallthru)
(note 33 32 34 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note 34 33 35 6 NOTE_INSN_DELETED)

(insn:TI 35 34 36 6 arch/arm/kernel/bios32.c:43 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (and:SI (reg/v:SI 6 r6 [orig:143 status_mask ] [143])
                        (reg:SI 3 r3 [orig:140 status.287 ] [140]))
                    (const_int 0 [0x0])))
            (set (reg:SI 3 r3 [149])
                (and:SI (reg/v:SI 6 r6 [orig:143 status_mask ] [143])
                    (reg:SI 3 r3 [orig:140 status.287 ] [140])))
        ]) 69 {*andsi3_compare0} (nil))

(jump_insn:TI 36 35 37 6 arch/arm/kernel/bios32.c:43 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 62)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 6 -> ( 9 7)
;; lr  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  9 [71.0%] 
;; Succ edge  7 [29.0%]  (fallthru)

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; lr  use 	 3 [r3] 4 [r4] 7 [r7] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  6 [29.0%]  (fallthru)
(note 37 36 40 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(note 40 37 42 7 NOTE_INSN_DELETED)

(insn:TI 42 40 104 7 include/linux/pci.h:768 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:137 dev ] [137])
                (const_int 28 [0x1c])) [0 <variable>.devfn+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 104 42 41 7 include/linux/pci.h:768 (set (reg:SI 2 r2)
        (const_int 6 [0x6])) 167 {*arm_movsi_insn} (nil))

(insn:TI 41 104 45 7 include/linux/pci.h:768 (set (reg:SI 0 r0)
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:137 dev ] [137])
                (const_int 8 [0x8])) [0 <variable>.bus+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(call_insn:TI 45 41 46 7 include/linux/pci.h:768 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("pci_bus_write_config_word") [flags 0x41] <function_decl 0x10f95800 pci_bus_write_config_word>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_UNUSED (reg:SI 0 r0)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 46 45 47 7 arch/arm/kernel/bios32.c:49 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 7 r7 [orig:144 warn ] [144])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn:TI 47 46 48 7 arch/arm/kernel/bios32.c:49 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 62)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 7 -> ( 8 9)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  8 [0.0%]  (fallthru)
;; Succ edge  9 [100.0%] 

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  7 [0.0%]  (fallthru)
(note 48 47 57 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(note 57 48 49 8 NOTE_INSN_DELETED)

(insn:TI 49 57 105 8 include/linux/device.h:620 (set (reg/f:SI 1 r1 [orig:134 D.19194 ] [134])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:137 dev ] [137])
                (const_int 140 [0x8c])) [0 <variable>.dev.init_name+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn:TI 105 49 50 8 arch/arm/kernel/bios32.c:50 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC8") [flags 0x82] <string_cst 0x1143a9c0>)) 167 {*arm_movsi_insn} (nil))

(insn:TI 50 105 60 8 include/linux/device.h:620 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 1 r1 [orig:134 D.19194 ] [134])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn 60 50 53 8 arch/arm/kernel/bios32.c:50 (set (reg:SI 2 r2)
        (zero_extend:SI (mem/c/i:HI (plus:SI (reg/f:SI 13 sp)
                    (const_int 6 [0x6])) [0 status+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn:TI 53 60 61 8 include/linux/kobject.h:82 (cond_exec (eq (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg/f:SI 1 r1 [orig:134 D.19194 ] [134])
            (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:137 dev ] [137])
                    (const_int 104 [0x68])) [0 <variable>.dev.kobj.name+0 S4 A64]))) 2345 {neon_vornv2di+78} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(call_insn:TI 61 53 62 8 arch/arm/kernel/bios32.c:50 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))
;; End of basic block 8 -> ( 9)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 4 5 6 7 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 4 [r4]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  gen 	 4 [r4]
;; live  kill	

;; Pred edge  4 [50.0%] 
;; Pred edge  5 [28.0%] 
;; Pred edge  6 [71.0%] 
;; Pred edge  7 [100.0%] 
;; Pred edge  8 [100.0%]  (fallthru)
(code_label 62 61 63 9 123 "" [4 uses])

(note 63 62 64 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn:TI 64 63 143 9 arch/arm/kernel/bios32.c:29 (set (reg/v/f:SI 4 r4 [orig:137 dev ] [137])
        (mem/s/f/j:SI (reg/v/f:SI 4 r4 [orig:137 dev ] [137]) [0 <variable>.bus_list.next+0 S4 A64])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 9 -> ( 10)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]


;; Succ edge  10 [100.0%]  (fallthru,dfs_back)

(note 143 64 144 10 ( bus (expr_list:REG_DEP_TRUE (reg/v/f:SI 8 r8 [orig:142 bus ] [142])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 144 143 145 10 ( status_mask (expr_list:REG_DEP_TRUE (reg/v:SI 6 r6 [orig:143 status_mask ] [143])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 145 144 66 10 ( warn (expr_list:REG_DEP_TRUE (reg/v:SI 7 r7 [orig:144 warn ] [144])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 9 2) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 5 [r5] 10 [sl] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  9 [100.0%]  (fallthru,dfs_back)
;; Pred edge  2 [100.0%] 
(code_label 66 145 67 10 121 "" [1 uses])

(note 67 66 69 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn:TI 69 67 102 10 arch/arm/kernel/bios32.c:29 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 4 r4 [orig:137 dev ] [137])
            (reg/f:SI 5 r5 [orig:139 D.18413 ] [139]))) 219 {*arm_cmpsi_insn} (nil))

(insn 102 69 27 10 include/linux/pci.h:755 (set (reg:SI 2 r2)
        (const_int 6 [0x6])) 167 {*arm_movsi_insn} (nil))

(insn:TI 27 102 70 10 include/linux/pci.h:755 (set (reg:SI 3 r3)
        (reg/f:SI 10 sl [155])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -2 [0xfffffffffffffffe]))
        (nil)))

(jump_insn:TI 70 27 71 10 arch/arm/kernel/bios32.c:29 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 68)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil))))
;; End of basic block 10 -> ( 3 11)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]


;; Succ edge  3 [91.0%] 
;; Succ edge  11 [9.0%]  (fallthru,loop_exit)

;; Start of basic block ( 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(13){ }}
;; lr  in  	 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 8 [r8] 13 [sp]
;; lr  def 	 4 [r4]
;; live  in  	 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  gen 	 4 [r4]
;; live  kill	

;; Pred edge  10 [9.0%]  (fallthru,loop_exit)
(note 71 70 72 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn:TI 72 71 146 11 arch/arm/kernel/bios32.c:53 (set (reg/v/f:SI 4 r4 [orig:133 dev.798 ] [133])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 8 r8 [orig:142 bus ] [142])
                (const_int 20 [0x14])) [0 <variable>.devices.next+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(note 146 72 129 11 ( dev (expr_list:REG_DEP_TRUE (reg/v/f:SI 4 r4 [orig:133 dev.798 ] [133])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(jump_insn 129 146 130 11 arch/arm/kernel/bios32.c:53 (set (pc)
        (label_ref 88)) -1 (nil))
;; End of basic block 11 -> ( 15)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]


;; Succ edge  15 [100.0%] 

(barrier 130 129 147)

(note 147 130 90 12 ( status_mask (expr_list:REG_DEP_TRUE (reg/v:SI 6 r6 [orig:143 status_mask ] [143])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 15) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 3 [r3] 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  15 [91.0%] 
(code_label 90 147 75 12 128 "" [1 uses])

(note 75 90 76 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn:TI 76 75 121 12 arch/arm/kernel/bios32.c:54 (set (reg/f:SI 3 r3 [orig:138 D.18414 ] [138])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:133 dev.798 ] [133])
                (const_int 12 [0xc])) [0 <variable>.subordinate+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:133 dev.798 ] [133])
                (const_int 12 [0xc])) [0 <variable>.subordinate+0 S4 A32])
        (nil)))

(insn:TI 121 76 78 12 arch/arm/kernel/bios32.c:54 (parallel [
            (set (reg:CC 24 cc)
                (compare:CC (reg/f:SI 3 r3 [orig:138 D.18414 ] [138])
                    (const_int 0 [0x0])))
            (set (reg:SI 0 r0)
                (reg/f:SI 3 r3 [orig:138 D.18414 ] [138]))
        ]) 174 {*movsi_compare0} (expr_list:REG_DEAD (reg/f:SI 3 r3 [orig:138 D.18414 ] [138])
        (nil)))

(jump_insn:TI 78 121 79 12 arch/arm/kernel/bios32.c:54 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 84)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3017 [0xbc9])
            (nil))))
;; End of basic block 12 -> ( 13 14)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]


;; Succ edge  13 [69.8%]  (fallthru)
;; Succ edge  14 [30.2%] 

;; Start of basic block ( 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	
;; live  kill	 14 [lr]

;; Pred edge  12 [69.8%]  (fallthru)
(note 79 78 83 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(call_insn:TI 83 79 84 13 arch/arm/kernel/bios32.c:55 (parallel [
            (call (mem:SI (symbol_ref:SI ("pcibios_bus_report_status") [flags 0x3] <function_decl 0x111deb00 pcibios_bus_report_status>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_DEAD (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))
;; End of basic block 13 -> ( 14)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  14 [100.0%]  (fallthru)

;; Start of basic block ( 12 13) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 4 [r4]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  gen 	 4 [r4]
;; live  kill	

;; Pred edge  12 [30.2%] 
;; Pred edge  13 [100.0%]  (fallthru)
(code_label 84 83 85 14 127 "" [1 uses])

(note 85 84 86 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn:TI 86 85 148 14 arch/arm/kernel/bios32.c:53 (set (reg/v/f:SI 4 r4 [orig:133 dev.798 ] [133])
        (mem/s/f/j:SI (reg/v/f:SI 4 r4 [orig:133 dev.798 ] [133]) [0 <variable>.bus_list.next+0 S4 A64])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 14 -> ( 15)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]


;; Succ edge  15 [100.0%]  (fallthru,dfs_back)

(note 148 86 149 15 ( bus (expr_list:REG_DEP_TRUE (reg/v/f:SI 8 r8 [orig:142 bus ] [142])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 149 148 88 15 ( status_mask (expr_list:REG_DEP_TRUE (reg/v:SI 6 r6 [orig:143 status_mask ] [143])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 14 11) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  def 	 1 [r1] 2 [r2] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  gen 	 1 [r1] 2 [r2] 24 [cc]
;; live  kill	

;; Pred edge  14 [100.0%]  (fallthru,dfs_back)
;; Pred edge  11 [100.0%] 
(code_label 88 149 89 15 126 "" [1 uses])

(note 89 88 91 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn:TI 91 89 81 15 arch/arm/kernel/bios32.c:53 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 4 r4 [orig:133 dev.798 ] [133])
            (reg/f:SI 5 r5 [orig:139 D.18413 ] [139]))) 219 {*arm_cmpsi_insn} (nil))

(insn 81 91 82 15 arch/arm/kernel/bios32.c:55 (set (reg:SI 1 r1)
        (reg/v:SI 6 r6 [orig:143 status_mask ] [143])) 167 {*arm_movsi_insn} (nil))

(insn:TI 82 81 92 15 arch/arm/kernel/bios32.c:55 (set (reg:SI 2 r2)
        (reg/v:SI 7 r7 [orig:144 warn ] [144])) 167 {*arm_movsi_insn} (nil))

(jump_insn:TI 92 82 119 15 arch/arm/kernel/bios32.c:53 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 90)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil))))
;; End of basic block 15 -> ( 12 16)
;; lr  out 	 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]


;; Succ edge  12 [91.0%] 
;; Succ edge  16 [9.0%]  (fallthru,loop_exit)

;; Start of basic block ( 15) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  15 [9.0%]  (fallthru,loop_exit)
(note 119 92 117 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(note 117 119 118 16 NOTE_INSN_EPILOGUE_BEG)

(jump_insn:TI 118 117 120 16 arch/arm/kernel/bios32.c:56 (unspec_volatile [
            (return)
        ] 1) 323 {*epilogue_insns} (nil))
;; End of basic block 16 -> ( 1)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%] 

(barrier 120 118 112)

(note 112 120 113 NOTE_INSN_DELETED)

(note 113 112 0 NOTE_INSN_DELETED)


;; Function pcibios_report_status (pcibios_report_status)[0:1044]


Basic block 2:
IN:
Stack adjustment: 0
Reg 0: status_mask+0
Reg 1: warn+0
Variables:
  name: status_mask
    offset 0
      (reg:SI 0 r0 [ status_mask ])
  name: warn
    offset 0
      (reg:SI 1 r1 [ warn ])

OUT:
Stack adjustment: 24
Reg 0: status_mask+0
Reg 1: warn+0
Reg 4: l+0
Reg 6: warn+0
Reg 7: status_mask+0
Variables:
  name: status_mask
    offset 0
      (reg/v:SI 7 r7 [orig:134 status_mask ] [134])
      (reg:SI 0 r0 [ status_mask ])
  name: warn
    offset 0
      (reg/v:SI 6 r6 [orig:135 warn ] [135])
      (reg:SI 1 r1 [ warn ])
  name: l
    offset 0
      (reg/v/f:SI 4 r4 [orig:133 l ] [133])


Basic block 3:
IN:
Stack adjustment: 24
Reg 4: l+0
Reg 6: warn+0
Reg 7: status_mask+0
Variables:
  name: status_mask
    offset 0
      (reg/v:SI 7 r7 [orig:134 status_mask ] [134])
  name: warn
    offset 0
      (reg/v:SI 6 r6 [orig:135 warn ] [135])
  name: l
    offset 0
      (reg/v/f:SI 4 r4 [orig:133 l ] [133])

OUT:
Stack adjustment: 24
Reg 4: l+0
Reg 6: warn+0
Reg 7: status_mask+0
Variables:
  name: status_mask
    offset 0
      (reg/v:SI 7 r7 [orig:134 status_mask ] [134])
  name: warn
    offset 0
      (reg/v:SI 6 r6 [orig:135 warn ] [135])
  name: l
    offset 0
      (reg/v/f:SI 4 r4 [orig:133 l ] [133])


Basic block 4:
IN:
Stack adjustment: 24
Reg 0: status_mask+0
Reg 1: warn+0
Reg 4: l+0
Reg 6: warn+0
Reg 7: status_mask+0
Variables:
  name: status_mask
    offset 0
      (reg/v:SI 7 r7 [orig:134 status_mask ] [134])
      (reg:SI 0 r0 [ status_mask ])
  name: warn
    offset 0
      (reg/v:SI 6 r6 [orig:135 warn ] [135])
      (reg:SI 1 r1 [ warn ])
  name: l
    offset 0
      (reg/v/f:SI 4 r4 [orig:133 l ] [133])

OUT:
Stack adjustment: 24
Reg 4: l+0
Reg 6: warn+0
Reg 7: status_mask+0
Variables:
  name: status_mask
    offset 0
      (reg/v:SI 7 r7 [orig:134 status_mask ] [134])
  name: warn
    offset 0
      (reg/v:SI 6 r6 [orig:135 warn ] [135])
  name: l
    offset 0
      (reg/v/f:SI 4 r4 [orig:133 l ] [133])


Basic block 5:
IN:
Stack adjustment: 24
Reg 4: l+0
Reg 6: warn+0
Reg 7: status_mask+0
Variables:
  name: status_mask
    offset 0
      (reg/v:SI 7 r7 [orig:134 status_mask ] [134])
  name: warn
    offset 0
      (reg/v:SI 6 r6 [orig:135 warn ] [135])
  name: l
    offset 0
      (reg/v/f:SI 4 r4 [orig:133 l ] [133])

OUT:
Stack adjustment: 24
Reg 4: l+0
Reg 6: warn+0
Reg 7: status_mask+0
Variables:
  name: status_mask
    offset 0
      (reg/v:SI 7 r7 [orig:134 status_mask ] [134])
  name: warn
    offset 0
      (reg/v:SI 6 r6 [orig:135 warn ] [135])
  name: l
    offset 0
      (reg/v/f:SI 4 r4 [orig:133 l ] [133])


6 basic blocks, 6 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(7){ }d-1(8){ }d-1(13){ }d-1(14){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  def 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  kill	

Successors:  4 [100.0%] 
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]


Basic block 3 , prev 2, next 4, loop_depth 1, count 0, freq 9100, maybe hot.
Predecessors:  4 [91.0%] 
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 4 [r4]
;; live  kill	 14 [lr]

Successors:  4 [100.0%]  (fallthru,dfs_back)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


Basic block 4 , prev 3, next 5, loop_depth 1, count 0, freq 10000, maybe hot.
Predecessors:  3 [100.0%]  (fallthru,dfs_back) 2 [100.0%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc]
;; live  kill	

Successors:  3 [91.0%]  5 [9.0%]  (fallthru,loop_exit)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]


Basic block 5 , prev 4, next 1, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  4 [9.0%]  (fallthru,loop_exit)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

Successors:  EXIT [100.0%] 
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]


Basic block 1 , prev 5, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  5 [100.0%] 
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(4){ }u-1(5){ }u-1(6){ }u-1(7){ }u-1(8){ }u-1(13){ }u-1(14){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  def 	
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	




pcibios_report_status

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;;  exit block uses 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 7[r7] 8[r8] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={3d,2u} r1={3d,2u} r2={3d,1u} r3={3d,2u} r4={3d,5u,1d} r5={2d,3u} r6={2d,3u} r7={2d,3u} r8={1d,2u} r12={1d} r13={2d,7u} r14={2d,2u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={2d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 173{139d,33u,1e} in 15{14 regular + 1 call} insns.
(note 1 0 46 NOTE_INSN_DELETED)

(note 46 1 47 2 ( status_mask (expr_list:REG_DEP_TRUE (reg:SI 0 r0 [ status_mask ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 47 46 5 2 ( warn (expr_list:REG_DEP_TRUE (reg:SI 1 r1 [ warn ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  def 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 47 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 4 5 7 2 NOTE_INSN_FUNCTION_BEG)

(insn:TI 7 4 36 2 arch/arm/kernel/bios32.c:62 (set (reg/f:SI 3 r3 [136])
        (symbol_ref:SI ("pci_root_buses") [flags 0xc0] <var_decl 0x10f887e0 pci_root_buses>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("pci_root_buses") [flags 0xc0] <var_decl 0x10f887e0 pci_root_buses>)
        (nil)))

(insn/f:TI 36 7 37 2 arch/arm/kernel/bios32.c:59 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 4 r4)
                    ] 2))
            (use (reg:SI 5 r5))
            (use (reg:SI 6 r6))
            (use (reg:SI 7 r7))
            (use (reg:SI 8 r8))
            (use (reg:SI 14 lr))
        ]) 327 {*push_multi} (expr_list:REG_DEAD (reg:SI 7 r7)
        (expr_list:REG_DEAD (reg:SI 6 r6)
            (expr_list:REG_DEAD (reg:SI 5 r5)
                (expr_list:REG_DEAD (reg:SI 4 r4)
                    (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                                (set/f (reg/f:SI 13 sp)
                                    (plus:SI (reg/f:SI 13 sp)
                                        (const_int -24 [0xffffffffffffffe8])))
                                (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                                    (reg:SI 4 r4))
                                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                            (const_int 4 [0x4])) [0 S4 A32])
                                    (reg:SI 5 r5))
                                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                            (const_int 8 [0x8])) [0 S4 A32])
                                    (reg:SI 6 r6))
                                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                            (const_int 12 [0xc])) [0 S4 A32])
                                    (reg:SI 7 r7))
                                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                            (const_int 16 [0x10])) [0 S4 A32])
                                    (reg:SI 8 r8))
                                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                            (const_int 20 [0x14])) [0 S4 A32])
                                    (reg:SI 14 lr))
                            ])
                        (nil)))))))

(note 37 36 2 2 NOTE_INSN_PROLOGUE_END)

(insn:TI 2 37 3 2 arch/arm/kernel/bios32.c:59 (set (reg/v:SI 7 r7 [orig:134 status_mask ] [134])
        (reg:SI 0 r0 [ status_mask ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ status_mask ])
        (nil)))

(insn:TI 3 2 20 2 arch/arm/kernel/bios32.c:59 (set (reg/v:SI 6 r6 [orig:135 warn ] [135])
        (reg:SI 1 r1 [ warn ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ warn ])
        (nil)))

(insn 20 3 8 2 arch/arm/kernel/bios32.c:62 (set (reg/f:SI 5 r5 [138])
        (reg/f:SI 3 r3 [136])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("pci_root_buses") [flags 0xc0] <var_decl 0x10f887e0 pci_root_buses>)
        (nil)))

(insn:TI 8 20 48 2 arch/arm/kernel/bios32.c:62 (set (reg/v/f:SI 4 r4 [orig:133 l ] [133])
        (mem/s/f/j/c:SI (reg/f:SI 3 r3 [136]) [0 pci_root_buses.next+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 3 r3 [136])
        (expr_list:REG_EQUAL (mem/s/f/j/c:SI (symbol_ref:SI ("pci_root_buses") [flags 0xc0] <var_decl 0x10f887e0 pci_root_buses>) [0 pci_root_buses.next+0 S4 A32])
            (nil))))

(note 48 8 44 2 ( l (expr_list:REG_DEP_TRUE (reg/v/f:SI 4 r4 [orig:133 l ] [133])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(jump_insn 44 48 45 2 arch/arm/kernel/bios32.c:62 (set (pc)
        (label_ref 17)) -1 (nil))
;; End of basic block 2 -> ( 4)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]


;; Succ edge  4 [100.0%] 

(barrier 45 44 49)

(note 49 45 50 3 ( status_mask (expr_list:REG_DEP_TRUE (reg/v:SI 7 r7 [orig:134 status_mask ] [134])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 50 49 19 3 ( warn (expr_list:REG_DEP_TRUE (reg/v:SI 6 r6 [orig:135 warn ] [135])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 4) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 4 [r4]
;; live  kill	 14 [lr]

;; Pred edge  4 [91.0%] 
(code_label 19 50 11 3 134 "" [1 uses])

(note 11 19 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(call_insn:TI 15 11 16 3 arch/arm/kernel/bios32.c:65 (parallel [
            (call (mem:SI (symbol_ref:SI ("pcibios_bus_report_status") [flags 0x3] <function_decl 0x111deb00 pcibios_bus_report_status>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_DEAD (reg:SI 0 r0)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 16 15 51 3 arch/arm/kernel/bios32.c:62 discrim 2 (set (reg/v/f:SI 4 r4 [orig:133 l ] [133])
        (mem/s/f/j:SI (reg/v/f:SI 4 r4 [orig:133 l ] [133]) [0 <variable>.next+0 S4 A32])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 3 -> ( 4)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  4 [100.0%]  (fallthru,dfs_back)

(note 51 16 52 4 ( status_mask (expr_list:REG_DEP_TRUE (reg/v:SI 7 r7 [orig:134 status_mask ] [134])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 52 51 17 4 ( warn (expr_list:REG_DEP_TRUE (reg/v:SI 6 r6 [orig:135 warn ] [135])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 3 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc]
;; live  kill	

;; Pred edge  3 [100.0%]  (fallthru,dfs_back)
;; Pred edge  2 [100.0%] 
(code_label 17 52 18 4 133 "" [1 uses])

(note 18 17 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn:TI 21 18 12 4 arch/arm/kernel/bios32.c:62 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 4 r4 [orig:133 l ] [133])
            (reg/f:SI 5 r5 [138]))) 219 {*arm_cmpsi_insn} (expr_list:REG_EQUAL (compare:CC (reg/v/f:SI 4 r4 [orig:133 l ] [133])
            (symbol_ref:SI ("pci_root_buses") [flags 0xc0] <var_decl 0x10f887e0 pci_root_buses>))
        (nil)))

(insn 12 21 13 4 arch/arm/kernel/bios32.c:65 (set (reg:SI 0 r0)
        (reg/v/f:SI 4 r4 [orig:133 l ] [133])) 167 {*arm_movsi_insn} (nil))

(insn:TI 13 12 14 4 arch/arm/kernel/bios32.c:65 (set (reg:SI 1 r1)
        (reg/v:SI 7 r7 [orig:134 status_mask ] [134])) 167 {*arm_movsi_insn} (nil))

(insn 14 13 22 4 arch/arm/kernel/bios32.c:65 (set (reg:SI 2 r2)
        (reg/v:SI 6 r6 [orig:135 warn ] [135])) 167 {*arm_movsi_insn} (nil))

(jump_insn:TI 22 14 40 4 arch/arm/kernel/bios32.c:62 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 19)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil))))
;; End of basic block 4 -> ( 3 5)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]


;; Succ edge  3 [91.0%] 
;; Succ edge  5 [9.0%]  (fallthru,loop_exit)

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  4 [9.0%]  (fallthru,loop_exit)
(note 40 22 38 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 38 40 39 5 NOTE_INSN_EPILOGUE_BEG)

(jump_insn:TI 39 38 41 5 arch/arm/kernel/bios32.c:67 (return) 260 {return} (nil))
;; End of basic block 5 -> ( 1)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%] 

(barrier 41 39 34)

(note 34 41 35 NOTE_INSN_DELETED)

(note 35 34 0 NOTE_INSN_DELETED)


;; Function pcibios_setup (pcibios_setup)[0:1063] (unlikely executed)


Basic block 2:
IN:
Stack adjustment: 0
Reg 0: str+0
Variables:
  name: str
    offset 0
      (reg:SI 0 r0 [ str ])

OUT:
Stack adjustment: 8
Reg 4: str+0
Variables:
  name: str
    offset 0
      (reg/v/f:SI 4 r4 [orig:136 str ] [136])


Basic block 3:
IN:
Stack adjustment: 8
Reg 4: str+0
Variables:
  name: str
    offset 0
      (reg/v/f:SI 4 r4 [orig:136 str ] [136])

OUT:
Stack adjustment: 8
Reg 4: str+0
Variables:
  name: str
    offset 0
      (reg/v/f:SI 4 r4 [orig:136 str ] [136])


Basic block 4:
IN:
Stack adjustment: 8
Reg 4: str+0
Variables:
  name: str
    offset 0
      (reg/v/f:SI 4 r4 [orig:136 str ] [136])

OUT:
Stack adjustment: 8
Reg 4: str+0
Variables:
  name: str
    offset 0
      (reg/v/f:SI 4 r4 [orig:136 str ] [136])


Basic block 5:
IN:
Stack adjustment: 8
Reg 4: str+0
Variables:
  name: str
    offset 0
      (reg/v/f:SI 4 r4 [orig:136 str ] [136])

OUT:
Stack adjustment: 8
Reg 4: str+0
Variables:
  name: str
    offset 0
      (reg/v/f:SI 4 r4 [orig:136 str ] [136])


6 basic blocks, 6 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, probably never executed.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(13){ }d-1(14){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, probably never executed.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 13 [sp] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 4 [r4] 13 [sp] 24 [cc]
;; live  kill	 14 [lr]

Successors:  3 [10.0%]  (fallthru) 4 [90.0%] 
;; lr  out 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 13 [sp]


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 1000, probably never executed.
Predecessors:  2 [10.0%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 4 [r4]
;; live  in  	 0 [r0] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3] 4 [r4]
;; live  kill	

Successors:  5 [100.0%] 
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 9000, probably never executed.
Predecessors:  2 [90.0%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 24 [cc]
;; live  kill	 14 [lr]

Successors:  5 [100.0%]  (fallthru)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]


Basic block 5 , prev 4, next 1, loop_depth 0, count 0, freq 10000, probably never executed.
Predecessors:  4 [100.0%]  (fallthru) 3 [100.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	

Successors:  EXIT [100.0%] 
;; lr  out 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 13 [sp]


Basic block 1 , prev 5, loop_depth 0, count 0, freq 10000, probably never executed.
Predecessors:  5 [100.0%] 
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(4){ }u-1(13){ }u-1(14){ }}
;; lr  in  	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; lr  def 	
;; live  in  	 0 [r0] 4 [r4] 13 [sp]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	




pcibios_setup

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={7d,11u} r1={5d,2u} r2={5d,3u} r3={5d,3u} r4={4d,5u} r12={2d} r13={2d,8u} r14={3d,2u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={4d,5u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} 
;;    total ref usage 296{257d,39u,0e} in 22{20 regular + 2 call} insns.
(note 1 0 67 NOTE_INSN_DELETED)

(note 67 1 4 2 ( str (expr_list:REG_DEP_TRUE (reg:SI 0 r0 [ str ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 13 [sp] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 4 [r4] 13 [sp] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 67 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 10 2 NOTE_INSN_FUNCTION_BEG)

(note 10 3 58 2 NOTE_INSN_DELETED)

(insn/f:TI 58 10 59 2 arch/arm/kernel/bios32.c:576 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 4 r4)
                    ] 2))
            (use (reg:SI 14 lr))
        ]) 327 {*push_multi} (expr_list:REG_DEAD (reg:SI 14 lr)
        (expr_list:REG_DEAD (reg:SI 4 r4)
            (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                        (set/f (reg/f:SI 13 sp)
                            (plus:SI (reg/f:SI 13 sp)
                                (const_int -8 [0xfffffffffffffff8])))
                        (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                            (reg:SI 4 r4))
                        (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                    (const_int 4 [0x4])) [0 S4 A32])
                            (reg:SI 14 lr))
                    ])
                (nil)))))

(note 59 58 8 2 NOTE_INSN_PROLOGUE_END)

(insn:TI 8 59 2 2 arch/arm/kernel/bios32.c:577 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC9") [flags 0x82] <string_cst 0x1144a480>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC9") [flags 0x82] <string_cst 0x1144a480>)
        (nil)))

(insn:TI 2 8 9 2 arch/arm/kernel/bios32.c:576 (set (reg/v/f:SI 4 r4 [orig:136 str ] [136])
        (reg:SI 0 r0 [ str ])) 167 {*arm_movsi_insn} (nil))

(call_insn/i 9 2 68 2 arch/arm/kernel/bios32.c:577 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcmp") [flags 0x41] <function_decl 0x51157680 strcmp>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(note 68 9 12 2 ( str (expr_list:REG_DEP_TRUE (reg/v/f:SI 4 r4 [orig:136 str ] [136])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 12 68 13 2 arch/arm/kernel/bios32.c:577 (parallel [
            (set (reg:CC 24 cc)
                (compare:CC (reg:SI 0 r0)
                    (const_int 0 [0x0])))
            (set (reg:SI 0 r0 [138])
                (reg:SI 0 r0))
        ]) 174 {*movsi_compare0} (nil))

(jump_insn:TI 13 12 14 2 arch/arm/kernel/bios32.c:577 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 21)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9000 [0x2328])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 13 [sp]


;; Succ edge  3 [10.0%]  (fallthru)
;; Succ edge  4 [90.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 4 [r4]
;; live  in  	 0 [r0] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3] 4 [r4]
;; live  kill	

;; Pred edge  2 [10.0%]  (fallthru)
(note 14 13 56 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn:TI 56 14 16 3 arch/arm/kernel/bios32.c:578 (set (reg/f:SI 3 r3 [139])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 16 56 18 3 arch/arm/kernel/bios32.c:578 (set (reg:SI 2 r2 [140])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 1 [0x1])
        (nil)))

(insn:TI 18 16 17 3 arch/arm/kernel/bios32.c:579 (set (reg/v/f:SI 4 r4 [orig:136 str ] [136])
        (reg:SI 0 r0 [138])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [138])
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn:TI 17 18 65 3 arch/arm/kernel/bios32.c:578 (set (mem/c/i:SI (reg/f:SI 3 r3 [139]) [0 debug_pci+0 S4 A32])
        (reg:SI 2 r2 [140])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 3 r3 [139])
        (expr_list:REG_DEAD (reg:SI 2 r2 [140])
            (expr_list:REG_EQUAL (const_int 1 [0x1])
                (nil)))))

(jump_insn 65 17 66 3 arch/arm/kernel/bios32.c:579 (set (pc)
        (label_ref 36)) -1 (nil))
;; End of basic block 3 -> ( 5)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  5 [100.0%] 

(barrier 66 65 21)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  2 [90.0%] 
(code_label 21 66 22 4 139 "" [1 uses])

(note 22 21 27 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 27 22 24 4 NOTE_INSN_DELETED)

(insn:TI 24 27 25 4 arch/arm/kernel/bios32.c:580 (set (reg:SI 0 r0)
        (reg/v/f:SI 4 r4 [orig:136 str ] [136])) 167 {*arm_movsi_insn} (nil))

(insn 25 24 26 4 arch/arm/kernel/bios32.c:580 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC10") [flags 0x82] <string_cst 0x1144b2d0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC10") [flags 0x82] <string_cst 0x1144b2d0>)
        (nil)))

(call_insn/i:TI 26 25 29 4 arch/arm/kernel/bios32.c:580 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcmp") [flags 0x41] <function_decl 0x51157680 strcmp>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn:TI 29 26 35 4 arch/arm/kernel/bios32.c:580 (parallel [
            (set (reg:CC 24 cc)
                (compare:CC (reg:SI 0 r0)
                    (const_int 0 [0x0])))
            (set (reg:SI 0 r0 [142])
                (reg:SI 0 r0))
        ]) 174 {*movsi_compare0} (nil))

(insn:TI 35 29 33 4 arch/arm/kernel/bios32.c:582 (cond_exec (eq (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v/f:SI 4 r4 [orig:136 str ] [136])
            (reg:SI 0 r0 [142]))) 2345 {neon_vornv2di+78} (expr_list:REG_DEAD (reg:SI 0 r0 [142])
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn 33 35 55 4 arch/arm/kernel/bios32.c:581 (cond_exec (eq (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 2 r2 [144])
            (const_int 1 [0x1]))) 2345 {neon_vornv2di+78} (expr_list:REG_EQUIV (const_int 1 [0x1])
        (nil)))

(insn:TI 55 33 34 4 arch/arm/kernel/bios32.c:581 (cond_exec (eq (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg/f:SI 3 r3 [143])
            (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]))) 2345 {neon_vornv2di+78} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn:TI 34 55 36 4 arch/arm/kernel/bios32.c:581 (cond_exec (eq (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (mem/c/i:SI (plus:SI (reg/f:SI 3 r3 [143])
                    (const_int 4 [0x4])) [0 use_firmware+0 S4 A32])
            (reg:SI 2 r2 [144]))) 2345 {neon_vornv2di+78} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_DEAD (reg/f:SI 3 r3 [143])
            (expr_list:REG_DEAD (reg:SI 2 r2 [144])
                (expr_list:REG_EQUAL (const_int 1 [0x1])
                    (nil))))))
;; End of basic block 4 -> ( 5)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%] 
(code_label 36 34 37 5 140 "" [1 uses])

(note 37 36 42 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn:TI 42 37 48 5 arch/arm/kernel/bios32.c:585 (set (reg/i:SI 0 r0)
        (reg/v/f:SI 4 r4 [orig:136 str ] [136])) 167 {*arm_movsi_insn} (nil))

(insn 48 42 60 5 arch/arm/kernel/bios32.c:585 (use (reg/i:SI 0 r0)) -1 (nil))

(note 60 48 61 5 NOTE_INSN_EPILOGUE_BEG)

(jump_insn 61 60 62 5 arch/arm/kernel/bios32.c:585 (return) 260 {return} (nil))
;; End of basic block 5 -> ( 1)
;; lr  out 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 13 [sp]


;; Succ edge  EXIT [100.0%] 

(barrier 62 61 54)

(note 54 62 57 NOTE_INSN_DELETED)

(note 57 54 0 NOTE_INSN_DELETED)


;; Function pci_common_init (pci_common_init)[0:1062] (unlikely executed)


Basic block 2:
IN:
Stack adjustment: 0
Reg 0: hw+0
Variables:
  name: hw
    offset 0
      (reg:SI 0 r0 [ hw ])

OUT:
Stack adjustment: 40
Reg 0: hw+0
Reg 4: hw+0
Variables:
  name: hw
    offset 0
      (reg/v/f:SI 4 r4 [orig:147 hw ] [147])
      (reg/f:SI 0 r0 [orig:147 hw ] [147])


Basic block 3:
IN:
Stack adjustment: 40
Reg 0: hw+0
Reg 4: hw+0
Variables:
  name: hw
    offset 0
      (reg/v/f:SI 4 r4 [orig:147 hw ] [147])
      (reg/f:SI 0 r0 [orig:147 hw ] [147])

OUT:
Stack adjustment: 40
Reg 4: hw+0
Variables:
  name: hw
    offset 0
      (reg/v/f:SI 4 r4 [orig:147 hw ] [147])


Basic block 4:
IN:
Stack adjustment: 40
Reg 0: hw+0
Reg 4: hw+0
Variables:
  name: hw
    offset 0
      (reg/v/f:SI 4 r4 [orig:147 hw ] [147])
      (reg/f:SI 0 r0 [orig:147 hw ] [147])

OUT:
Stack adjustment: 40
Reg 0: hw+0
Reg 4: hw+0
Reg 6: nr+0
Reg 7: busnr+0
Variables:
  name: nr
    offset 0
      (reg/v:SI 6 r6 [orig:137 nr ] [137])
  name: busnr
    offset 0
      (reg/v:SI 7 r7 [orig:138 busnr ] [138])
  name: hw
    offset 0
      (reg/v/f:SI 4 r4 [orig:147 hw ] [147])
      (reg/f:SI 0 r0 [orig:147 hw ] [147])


Basic block 5:
IN:
Stack adjustment: 40
Reg 0: hw+0
Reg 4: hw+0
Reg 5: ret+0
Reg 6: nr+0
Reg 7: busnr+0
Reg 11: ret+0
Variables:
  name: ret
    offset 0
      (reg/v/f:SI 5 r5 [orig:139 ret ] [139])
  name: nr
    offset 0
      (reg/v:SI 6 r6 [orig:137 nr ] [137])
  name: busnr
    offset 0
      (reg/v:SI 7 r7 [orig:138 busnr ] [138])
  name: ret
    offset 0
      (reg/v:SI 11 fp [orig:136 ret ] [136])
  name: hw
    offset 0
      (reg/v/f:SI 4 r4 [orig:147 hw ] [147])
      (reg/f:SI 0 r0 [orig:147 hw ] [147])

OUT:
Stack adjustment: 40
Reg 4: hw+0
Reg 5: ret+0
Reg 6: nr+0
Reg 7: busnr+0
Reg 11: ret+0
Variables:
  name: ret
    offset 0
      (reg/v/f:SI 5 r5 [orig:139 ret ] [139])
  name: nr
    offset 0
      (reg/v:SI 6 r6 [orig:137 nr ] [137])
  name: busnr
    offset 0
      (reg/v:SI 7 r7 [orig:138 busnr ] [138])
  name: ret
    offset 0
      (reg/v:SI 11 fp [orig:136 ret ] [136])
  name: hw
    offset 0
      (reg/v/f:SI 4 r4 [orig:147 hw ] [147])


Basic block 6:
IN:
Stack adjustment: 40
Reg 4: hw+0
Reg 5: ret+0
Reg 6: nr+0
Reg 7: busnr+0
Reg 11: ret+0
Variables:
  name: ret
    offset 0
      (reg/v/f:SI 5 r5 [orig:139 ret ] [139])
  name: nr
    offset 0
      (reg/v:SI 6 r6 [orig:137 nr ] [137])
  name: busnr
    offset 0
      (reg/v:SI 7 r7 [orig:138 busnr ] [138])
  name: ret
    offset 0
      (reg/v:SI 11 fp [orig:136 ret ] [136])
  name: hw
    offset 0
      (reg/v/f:SI 4 r4 [orig:147 hw ] [147])

OUT:
Stack adjustment: 40
Reg 4: hw+0
Reg 5: ret+0
Reg 6: nr+0
Reg 7: busnr+0
Reg 11: ret+0
Variables:
  name: ret
    offset 0
      (reg/v/f:SI 5 r5 [orig:139 ret ] [139])
  name: nr
    offset 0
      (reg/v:SI 6 r6 [orig:137 nr ] [137])
  name: busnr
    offset 0
      (reg/v:SI 7 r7 [orig:138 busnr ] [138])
  name: ret
    offset 0
      (reg/v:SI 11 fp [orig:136 ret ] [136])
  name: hw
    offset 0
      (reg/v/f:SI 4 r4 [orig:147 hw ] [147])


Basic block 7:
IN:
Stack adjustment: 40
Reg 4: hw+0
Reg 5: ret+0
Reg 6: nr+0
Reg 7: busnr+0
Reg 11: ret+0
Variables:
  name: ret
    offset 0
      (reg/v/f:SI 5 r5 [orig:139 ret ] [139])
  name: nr
    offset 0
      (reg/v:SI 6 r6 [orig:137 nr ] [137])
  name: busnr
    offset 0
      (reg/v:SI 7 r7 [orig:138 busnr ] [138])
  name: ret
    offset 0
      (reg/v:SI 11 fp [orig:136 ret ] [136])
  name: hw
    offset 0
      (reg/v/f:SI 4 r4 [orig:147 hw ] [147])

OUT:
Stack adjustment: 40
Reg 4: hw+0
Reg 5: ret+0
Reg 6: nr+0
Reg 7: busnr+0
Reg 11: ret+0
Variables:
  name: ret
    offset 0
      (reg/v/f:SI 5 r5 [orig:139 ret ] [139])
  name: nr
    offset 0
      (reg/v:SI 6 r6 [orig:137 nr ] [137])
  name: busnr
    offset 0
      (reg/v:SI 7 r7 [orig:138 busnr ] [138])
  name: ret
    offset 0
      (reg/v:SI 11 fp [orig:136 ret ] [136])
  name: hw
    offset 0
      (reg/v/f:SI 4 r4 [orig:147 hw ] [147])


Basic block 8:
IN:
Stack adjustment: 40
Reg 4: hw+0
Reg 5: ret+0
Reg 6: nr+0
Reg 7: busnr+0
Reg 11: ret+0
Variables:
  name: ret
    offset 0
      (reg/v/f:SI 5 r5 [orig:139 ret ] [139])
  name: nr
    offset 0
      (reg/v:SI 6 r6 [orig:137 nr ] [137])
  name: busnr
    offset 0
      (reg/v:SI 7 r7 [orig:138 busnr ] [138])
  name: ret
    offset 0
      (reg/v:SI 11 fp [orig:136 ret ] [136])
  name: hw
    offset 0
      (reg/v/f:SI 4 r4 [orig:147 hw ] [147])

OUT:
Stack adjustment: 40
Reg 4: hw+0
Reg 5: ret+0
Reg 6: nr+0
Reg 7: busnr+0
Reg 11: ret+0
Variables:
  name: ret
    offset 0
      (reg/v/f:SI 5 r5 [orig:139 ret ] [139])
  name: nr
    offset 0
      (reg/v:SI 6 r6 [orig:137 nr ] [137])
  name: busnr
    offset 0
      (reg/v:SI 7 r7 [orig:138 busnr ] [138])
  name: ret
    offset 0
      (reg/v:SI 11 fp [orig:136 ret ] [136])
  name: hw
    offset 0
      (reg/v/f:SI 4 r4 [orig:147 hw ] [147])


Basic block 9:
IN:
Stack adjustment: 40
Reg 4: hw+0
Reg 5: ret+0
Reg 6: nr+0
Reg 7: busnr+0
Reg 11: ret+0
Variables:
  name: ret
    offset 0
      (reg/v/f:SI 5 r5 [orig:139 ret ] [139])
  name: nr
    offset 0
      (reg/v:SI 6 r6 [orig:137 nr ] [137])
  name: busnr
    offset 0
      (reg/v:SI 7 r7 [orig:138 busnr ] [138])
  name: ret
    offset 0
      (reg/v:SI 11 fp [orig:136 ret ] [136])
  name: hw
    offset 0
      (reg/v/f:SI 4 r4 [orig:147 hw ] [147])

OUT:
Stack adjustment: 40
Reg 4: hw+0
Reg 5: ret+0
Reg 6: nr+0
Reg 7: busnr+0
Reg 11: ret+0
Variables:
  name: ret
    offset 0
      (reg/v/f:SI 5 r5 [orig:139 ret ] [139])
  name: nr
    offset 0
      (reg/v:SI 6 r6 [orig:137 nr ] [137])
  name: busnr
    offset 0
      (reg/v:SI 7 r7 [orig:138 busnr ] [138])
  name: ret
    offset 0
      (reg/v:SI 11 fp [orig:136 ret ] [136])
  name: hw
    offset 0
      (reg/v/f:SI 4 r4 [orig:147 hw ] [147])


Basic block 10:
IN:
Stack adjustment: 40
Reg 4: hw+0
Reg 5: ret+0
Reg 6: nr+0
Reg 7: busnr+0
Reg 11: ret+0
Variables:
  name: ret
    offset 0
      (reg/v/f:SI 5 r5 [orig:139 ret ] [139])
  name: nr
    offset 0
      (reg/v:SI 6 r6 [orig:137 nr ] [137])
  name: busnr
    offset 0
      (reg/v:SI 7 r7 [orig:138 busnr ] [138])
  name: ret
    offset 0
      (reg/v:SI 11 fp [orig:136 ret ] [136])
  name: hw
    offset 0
      (reg/v/f:SI 4 r4 [orig:147 hw ] [147])

OUT:
Stack adjustment: 40
Reg 4: hw+0
Reg 5: ret+0
Reg 6: nr+0
Reg 7: busnr+0
Reg 11: ret+0
Variables:
  name: ret
    offset 0
      (reg/v/f:SI 5 r5 [orig:139 ret ] [139])
  name: nr
    offset 0
      (reg/v:SI 6 r6 [orig:137 nr ] [137])
  name: busnr
    offset 0
      (reg/v:SI 7 r7 [orig:138 busnr ] [138])
  name: ret
    offset 0
      (reg/v:SI 11 fp [orig:136 ret ] [136])
  name: hw
    offset 0
      (reg/v/f:SI 4 r4 [orig:147 hw ] [147])


Basic block 11:
IN:
Stack adjustment: 40
Reg 4: hw+0
Reg 5: ret+0
Reg 6: nr+0
Reg 7: busnr+0
Reg 11: ret+0
Variables:
  name: ret
    offset 0
      (reg/v/f:SI 5 r5 [orig:139 ret ] [139])
  name: nr
    offset 0
      (reg/v:SI 6 r6 [orig:137 nr ] [137])
  name: busnr
    offset 0
      (reg/v:SI 7 r7 [orig:138 busnr ] [138])
  name: ret
    offset 0
      (reg/v:SI 11 fp [orig:136 ret ] [136])
  name: hw
    offset 0
      (reg/v/f:SI 4 r4 [orig:147 hw ] [147])

OUT:
Stack adjustment: 40
Reg 4: hw+0
Reg 5: ret+0
Reg 6: nr+0
Reg 7: busnr+0
Reg 11: ret+0
Variables:
  name: ret
    offset 0
      (reg/v/f:SI 5 r5 [orig:139 ret ] [139])
  name: nr
    offset 0
      (reg/v:SI 6 r6 [orig:137 nr ] [137])
  name: busnr
    offset 0
      (reg/v:SI 7 r7 [orig:138 busnr ] [138])
  name: ret
    offset 0
      (reg/v:SI 11 fp [orig:136 ret ] [136])
  name: hw
    offset 0
      (reg/v/f:SI 4 r4 [orig:147 hw ] [147])


Basic block 12:
IN:
Stack adjustment: 40
Reg 4: hw+0
Reg 5: ret+0
Reg 6: nr+0
Reg 7: busnr+0
Reg 11: ret+0
Variables:
  name: ret
    offset 0
      (reg/v/f:SI 5 r5 [orig:139 ret ] [139])
  name: nr
    offset 0
      (reg/v:SI 6 r6 [orig:137 nr ] [137])
  name: busnr
    offset 0
      (reg/v:SI 7 r7 [orig:138 busnr ] [138])
  name: ret
    offset 0
      (reg/v:SI 11 fp [orig:136 ret ] [136])
  name: hw
    offset 0
      (reg/v/f:SI 4 r4 [orig:147 hw ] [147])

OUT:
Stack adjustment: 40
Reg 4: hw+0
Reg 5: ret+0
Reg 6: nr+0
Reg 7: busnr+0
Reg 11: ret+0
Variables:
  name: ret
    offset 0
      (reg/v/f:SI 5 r5 [orig:139 ret ] [139])
  name: nr
    offset 0
      (reg/v:SI 6 r6 [orig:137 nr ] [137])
  name: busnr
    offset 0
      (reg/v:SI 7 r7 [orig:138 busnr ] [138])
  name: ret
    offset 0
      (reg/v:SI 11 fp [orig:136 ret ] [136])
  name: hw
    offset 0
      (reg/v/f:SI 4 r4 [orig:147 hw ] [147])


Basic block 13:
IN:
Stack adjustment: 40
Reg 4: hw+0
Reg 5: ret+0
Reg 6: nr+0
Reg 7: busnr+0
Reg 11: ret+0
Variables:
  name: ret
    offset 0
      (reg/v/f:SI 5 r5 [orig:139 ret ] [139])
  name: nr
    offset 0
      (reg/v:SI 6 r6 [orig:137 nr ] [137])
  name: busnr
    offset 0
      (reg/v:SI 7 r7 [orig:138 busnr ] [138])
  name: ret
    offset 0
      (reg/v:SI 11 fp [orig:136 ret ] [136])
  name: hw
    offset 0
      (reg/v/f:SI 4 r4 [orig:147 hw ] [147])

OUT:
Stack adjustment: 40
Reg 4: hw+0
Reg 5: ret+0
Reg 6: nr+0
Reg 7: busnr+0
Reg 11: ret+0
Variables:
  name: ret
    offset 0
      (reg/v/f:SI 5 r5 [orig:139 ret ] [139])
  name: nr
    offset 0
      (reg/v:SI 6 r6 [orig:137 nr ] [137])
  name: busnr
    offset 0
      (reg/v:SI 7 r7 [orig:138 busnr ] [138])
  name: ret
    offset 0
      (reg/v:SI 11 fp [orig:136 ret ] [136])
  name: hw
    offset 0
      (reg/v/f:SI 4 r4 [orig:147 hw ] [147])


Basic block 14:
IN:
Stack adjustment: 40
Reg 0: hw+0
Reg 4: hw+0
Reg 5: ret+0
Reg 6: nr+0
Reg 7: busnr+0
Reg 11: ret+0
Variables:
  name: ret
    offset 0
      (reg/v/f:SI 5 r5 [orig:139 ret ] [139])
  name: nr
    offset 0
      (reg/v:SI 6 r6 [orig:137 nr ] [137])
  name: busnr
    offset 0
      (reg/v:SI 7 r7 [orig:138 busnr ] [138])
  name: ret
    offset 0
      (reg/v:SI 11 fp [orig:136 ret ] [136])
  name: hw
    offset 0
      (reg/v/f:SI 4 r4 [orig:147 hw ] [147])
      (reg/f:SI 0 r0 [orig:147 hw ] [147])

OUT:
Stack adjustment: 40
Reg 0: hw+0
Reg 4: hw+0
Reg 5: ret+0
Reg 6: nr+0
Reg 7: busnr+0
Reg 11: ret+0
Variables:
  name: ret
    offset 0
      (reg/v/f:SI 5 r5 [orig:139 ret ] [139])
  name: nr
    offset 0
      (reg/v:SI 6 r6 [orig:137 nr ] [137])
  name: busnr
    offset 0
      (reg/v:SI 7 r7 [orig:138 busnr ] [138])
  name: ret
    offset 0
      (reg/v:SI 11 fp [orig:136 ret ] [136])
  name: hw
    offset 0
      (reg/v/f:SI 4 r4 [orig:147 hw ] [147])
      (reg/f:SI 0 r0 [orig:147 hw ] [147])


Basic block 15:
IN:
Stack adjustment: 40
Reg 0: hw+0
Reg 4: hw+0
Reg 5: ret+0
Reg 6: nr+0
Reg 7: busnr+0
Reg 11: ret+0
Variables:
  name: ret
    offset 0
      (reg/v/f:SI 5 r5 [orig:139 ret ] [139])
  name: nr
    offset 0
      (reg/v:SI 6 r6 [orig:137 nr ] [137])
  name: busnr
    offset 0
      (reg/v:SI 7 r7 [orig:138 busnr ] [138])
  name: ret
    offset 0
      (reg/v:SI 11 fp [orig:136 ret ] [136])
  name: hw
    offset 0
      (reg/v/f:SI 4 r4 [orig:147 hw ] [147])
      (reg/f:SI 0 r0 [orig:147 hw ] [147])

OUT:
Stack adjustment: 40
Reg 0: hw+0
Reg 4: hw+0
Reg 5: ret+0
Reg 6: nr+0
Reg 7: busnr+0
Reg 11: ret+0
Variables:
  name: ret
    offset 0
      (reg/v/f:SI 5 r5 [orig:139 ret ] [139])
  name: nr
    offset 0
      (reg/v:SI 6 r6 [orig:137 nr ] [137])
  name: busnr
    offset 0
      (reg/v:SI 7 r7 [orig:138 busnr ] [138])
  name: ret
    offset 0
      (reg/v:SI 11 fp [orig:136 ret ] [136])
  name: hw
    offset 0
      (reg/v/f:SI 4 r4 [orig:147 hw ] [147])
      (reg/f:SI 0 r0 [orig:147 hw ] [147])


Basic block 16:
IN:
Stack adjustment: 40
Reg 0: hw+0
Reg 4: hw+0
Reg 5: ret+0
Reg 6: nr+0
Reg 7: busnr+0
Reg 11: ret+0
Variables:
  name: ret
    offset 0
      (reg/v/f:SI 5 r5 [orig:139 ret ] [139])
  name: nr
    offset 0
      (reg/v:SI 6 r6 [orig:137 nr ] [137])
  name: busnr
    offset 0
      (reg/v:SI 7 r7 [orig:138 busnr ] [138])
  name: ret
    offset 0
      (reg/v:SI 11 fp [orig:136 ret ] [136])
  name: hw
    offset 0
      (reg/v/f:SI 4 r4 [orig:147 hw ] [147])
      (reg/f:SI 0 r0 [orig:147 hw ] [147])

OUT:
Stack adjustment: 40
Reg 4: hw+0
Reg 5: ret+0
Reg 6: nr+0
Reg 7: busnr+0
Reg 11: ret+0
Variables:
  name: ret
    offset 0
      (reg/v/f:SI 5 r5 [orig:139 ret ] [139])
  name: nr
    offset 0
      (reg/v:SI 6 r6 [orig:137 nr ] [137])
  name: busnr
    offset 0
      (reg/v:SI 7 r7 [orig:138 busnr ] [138])
  name: ret
    offset 0
      (reg/v:SI 11 fp [orig:136 ret ] [136])
  name: hw
    offset 0
      (reg/v/f:SI 4 r4 [orig:147 hw ] [147])


Basic block 17:
IN:
Stack adjustment: 40
Reg 0: hw+0
Reg 4: hw+0
Reg 5: ret+0
Reg 6: nr+0
Reg 7: busnr+0
Reg 11: ret+0
Variables:
  name: ret
    offset 0
      (reg/v/f:SI 5 r5 [orig:139 ret ] [139])
  name: nr
    offset 0
      (reg/v:SI 6 r6 [orig:137 nr ] [137])
  name: busnr
    offset 0
      (reg/v:SI 7 r7 [orig:138 busnr ] [138])
  name: ret
    offset 0
      (reg/v:SI 11 fp [orig:136 ret ] [136])
  name: hw
    offset 0
      (reg/v/f:SI 4 r4 [orig:147 hw ] [147])
      (reg/f:SI 0 r0 [orig:147 hw ] [147])

OUT:
Stack adjustment: 40
Reg 4: hw+0
Reg 5: sys+0
Reg 6: nr+0
Reg 11: ret+0
Variables:
  name: sys
    offset 0
      (reg/v/f:SI 5 r5 [orig:143 sys ] [143])
  name: nr
    offset 0
      (reg/v:SI 6 r6 [orig:137 nr ] [137])
  name: ret
    offset 0
      (reg/v:SI 11 fp [orig:136 ret ] [136])
  name: hw
    offset 0
      (reg/v/f:SI 4 r4 [orig:147 hw ] [147])


Basic block 18:
IN:
Stack adjustment: 40
Reg 4: hw+0
Reg 5: sys+0
Reg 6: nr+0 bus+0
Reg 11: ret+0
Variables:
  name: sys
    offset 0
      (reg/v/f:SI 5 r5 [orig:143 sys ] [143])
  name: ret
    offset 0
      (reg/v:SI 11 fp [orig:136 ret ] [136])
  name: nr
    offset 0
      (reg/v:SI 6 r6 [orig:137 nr ] [137])
  name: hw
    offset 0
      (reg/v/f:SI 4 r4 [orig:147 hw ] [147])
  name: bus
    offset 0
      (reg/v/f:SI 6 r6 [orig:142 bus ] [142])

OUT:
Stack adjustment: 40
Reg 4: hw+0
Reg 5: sys+0
Reg 6: bus+0
Reg 11: ret+0
Variables:
  name: sys
    offset 0
      (reg/v/f:SI 5 r5 [orig:143 sys ] [143])
  name: ret
    offset 0
      (reg/v:SI 11 fp [orig:136 ret ] [136])
  name: hw
    offset 0
      (reg/v/f:SI 4 r4 [orig:147 hw ] [147])
  name: bus
    offset 0
      (reg/v/f:SI 6 r6 [orig:142 bus ] [142])


Basic block 19:
IN:
Stack adjustment: 40
Reg 4: hw+0
Reg 5: sys+0
Reg 6: bus+0
Reg 11: ret+0
Variables:
  name: sys
    offset 0
      (reg/v/f:SI 5 r5 [orig:143 sys ] [143])
  name: ret
    offset 0
      (reg/v:SI 11 fp [orig:136 ret ] [136])
  name: hw
    offset 0
      (reg/v/f:SI 4 r4 [orig:147 hw ] [147])
  name: bus
    offset 0
      (reg/v/f:SI 6 r6 [orig:142 bus ] [142])

OUT:
Stack adjustment: 40
Reg 4: hw+0
Reg 5: sys+0
Reg 6: bus+0
Reg 11: ret+0
Variables:
  name: sys
    offset 0
      (reg/v/f:SI 5 r5 [orig:143 sys ] [143])
  name: ret
    offset 0
      (reg/v:SI 11 fp [orig:136 ret ] [136])
  name: hw
    offset 0
      (reg/v/f:SI 4 r4 [orig:147 hw ] [147])
  name: bus
    offset 0
      (reg/v/f:SI 6 r6 [orig:142 bus ] [142])


Basic block 20:
IN:
Stack adjustment: 40
Reg 4: hw+0
Reg 5: sys+0
Reg 6: bus+0
Reg 11: ret+0
Variables:
  name: sys
    offset 0
      (reg/v/f:SI 5 r5 [orig:143 sys ] [143])
  name: ret
    offset 0
      (reg/v:SI 11 fp [orig:136 ret ] [136])
  name: hw
    offset 0
      (reg/v/f:SI 4 r4 [orig:147 hw ] [147])
  name: bus
    offset 0
      (reg/v/f:SI 6 r6 [orig:142 bus ] [142])

OUT:
Stack adjustment: 40
Reg 4: hw+0
Reg 5: sys+0
Reg 6: bus+0
Reg 11: ret+0
Variables:
  name: sys
    offset 0
      (reg/v/f:SI 5 r5 [orig:143 sys ] [143])
  name: ret
    offset 0
      (reg/v:SI 11 fp [orig:136 ret ] [136])
  name: hw
    offset 0
      (reg/v/f:SI 4 r4 [orig:147 hw ] [147])
  name: bus
    offset 0
      (reg/v/f:SI 6 r6 [orig:142 bus ] [142])


Basic block 21:
IN:
Stack adjustment: 40
Reg 4: hw+0
Reg 5: sys+0
Reg 6: nr+0 bus+0
Reg 11: ret+0
Variables:
  name: sys
    offset 0
      (reg/v/f:SI 5 r5 [orig:143 sys ] [143])
  name: ret
    offset 0
      (reg/v:SI 11 fp [orig:136 ret ] [136])
  name: nr
    offset 0
      (reg/v:SI 6 r6 [orig:137 nr ] [137])
  name: hw
    offset 0
      (reg/v/f:SI 4 r4 [orig:147 hw ] [147])
  name: bus
    offset 0
      (reg/v/f:SI 6 r6 [orig:142 bus ] [142])

OUT:
Stack adjustment: 40
Reg 4: hw+0
Reg 5: sys+0
Reg 6: bus+0 nr+0
Reg 11: ret+0
Variables:
  name: sys
    offset 0
      (reg/v/f:SI 5 r5 [orig:143 sys ] [143])
  name: ret
    offset 0
      (reg/v:SI 11 fp [orig:136 ret ] [136])
  name: nr
    offset 0
      (reg/v:SI 6 r6 [orig:137 nr ] [137])
  name: hw
    offset 0
      (reg/v/f:SI 4 r4 [orig:147 hw ] [147])
  name: bus
    offset 0
      (reg/v/f:SI 6 r6 [orig:142 bus ] [142])


Basic block 22:
IN:
Stack adjustment: 40
Reg 4: hw+0
Reg 5: sys+0
Reg 6: nr+0 bus+0
Reg 11: ret+0
Variables:
  name: sys
    offset 0
      (reg/v/f:SI 5 r5 [orig:143 sys ] [143])
  name: ret
    offset 0
      (reg/v:SI 11 fp [orig:136 ret ] [136])
  name: nr
    offset 0
      (reg/v:SI 6 r6 [orig:137 nr ] [137])
  name: hw
    offset 0
      (reg/v/f:SI 4 r4 [orig:147 hw ] [147])
  name: bus
    offset 0
      (reg/v/f:SI 6 r6 [orig:142 bus ] [142])

OUT:
Stack adjustment: 40
Reg 4: hw+0
Reg 5: sys+0
Reg 6: bus+0 nr+0
Reg 11: ret+0
Variables:
  name: sys
    offset 0
      (reg/v/f:SI 5 r5 [orig:143 sys ] [143])
  name: ret
    offset 0
      (reg/v:SI 11 fp [orig:136 ret ] [136])
  name: nr
    offset 0
      (reg/v:SI 6 r6 [orig:137 nr ] [137])
  name: hw
    offset 0
      (reg/v/f:SI 4 r4 [orig:147 hw ] [147])
  name: bus
    offset 0
      (reg/v/f:SI 6 r6 [orig:142 bus ] [142])


23 basic blocks, 30 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 291, probably never executed.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(7){ }d-1(8){ }d-1(9){ }d-1(10){ }d-1(11){ }d-1(13){ }d-1(14){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 291, probably never executed.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  def 	 3 [r3] 4 [r4] 13 [sp] 24 [cc]
;; live  in  	 0 [r0] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 4 [r4] 13 [sp] 24 [cc]
;; live  kill	

Successors:  3 [69.8%]  (fallthru) 4 [30.2%] 
;; lr  out 	 3 [r3] 4 [r4] 11 [fp] 13 [sp]
;; live  out 	 3 [r3] 4 [r4] 11 [fp] 13 [sp]


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 203, probably never executed.
Predecessors:  2 [69.8%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 11 [fp] 13 [sp]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 3 [r3] 4 [r4] 11 [fp] 13 [sp]
;; live  gen 	
;; live  kill	 14 [lr]

Successors:  4 [100.0%]  (fallthru)
;; lr  out 	 4 [r4] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 11 [fp] 13 [sp]


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 291, probably never executed.
Predecessors:  3 [100.0%]  (fallthru) 2 [30.2%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl]
;; live  in  	 4 [r4] 11 [fp] 13 [sp]
;; live  gen 	 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl]
;; live  kill	

Successors:  14 [100.0%] 
;; lr  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 5 , prev 4, next 6, loop_depth 1, count 0, freq 9775, probably never executed.
Predecessors:  14 [97.8%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; lr  use 	 9 [r9] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 5 [r5] 24 [cc]
;; live  kill	 14 [lr]

Successors:  6 [0.0%]  (fallthru,loop_exit) 7 [100.0%] 
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


Basic block 6 , prev 5, next 7, loop_depth 0, count 0, freq 4, probably never executed.
Predecessors:  5 [0.0%]  (fallthru,loop_exit)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	

Successors:  10 [100.0%] 
;; lr  out 	 0 [r0] 13 [sp]
;; live  out 	 0 [r0] 13 [sp]


Basic block 7 , prev 6, next 8, loop_depth 1, count 0, freq 9771, probably never executed.
Predecessors:  5 [100.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 3 [r3] 11 [fp] 24 [cc]
;; live  kill	 14 [lr]

Successors:  8 [73.0%]  (fallthru) 12 [27.0%] 
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 8 , prev 7, next 9, loop_depth 1, count 0, freq 7134, probably never executed.
Predecessors:  7 [73.0%]  (fallthru)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc]
;; live  kill	 14 [lr]

Successors:  9 [0.0%]  (fallthru,loop_exit) 11 [100.0%] 
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 9 , prev 8, next 10, loop_depth 0, count 0, freq 3, probably never executed.
Predecessors:  8 [0.0%]  (fallthru,loop_exit)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	

Successors:  10 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 13 [sp]
;; live  out 	 0 [r0] 13 [sp]


Basic block 10 , prev 9, next 11, loop_depth 0, count 0, freq 7, probably never executed.
Predecessors:  9 [100.0%]  (fallthru) 6 [100.0%] 
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 13 [sp]
;; live  gen 	
;; live  kill	 14 [lr]

Successors: 
;; lr  out 	 13 [sp]
;; live  out 	 13 [sp]


Basic block 11 , prev 10, next 12, loop_depth 1, count 0, freq 7131, probably never executed.
Predecessors:  8 [100.0%] 
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 0 [r0] 4 [r4] 5 [r5] 13 [sp]
;; lr  def 	 3 [r3] 7 [r7]
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 3 [r3] 7 [r7]
;; live  kill	

Successors:  13 [100.0%] 
;; lr  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 12 , prev 11, next 13, loop_depth 1, count 0, freq 2637, probably never executed.
Predecessors:  7 [27.0%] 
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 5 [r5] 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 24 [cc]
;; live  kill	 14 [lr]

Successors:  15 [2.2%]  (loop_exit) 13 [97.8%]  (fallthru)
;; lr  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 13 , prev 12, next 14, loop_depth 1, count 0, freq 9709, probably never executed.
Predecessors:  12 [97.8%]  (fallthru) 11 [100.0%] 
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 6 [r6] 13 [sp]
;; lr  def 	 6 [r6]
;; live  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 6 [r6]
;; live  kill	

Successors:  14 [100.0%]  (fallthru,dfs_back)
;; lr  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 14 , prev 13, next 15, loop_depth 1, count 0, freq 10000, probably never executed.
Predecessors:  13 [100.0%]  (fallthru,dfs_back) 4 [100.0%] 
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 6 [r6] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

Successors:  5 [97.8%]  15 [2.2%]  (fallthru,loop_exit)
;; lr  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 15 , prev 14, next 16, loop_depth 0, count 0, freq 284, probably never executed.
Predecessors:  14 [2.2%]  (fallthru,loop_exit) 12 [2.2%]  (loop_exit)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

Successors:  16 [69.8%]  (fallthru) 17 [30.2%] 
;; lr  out 	 3 [r3] 4 [r4] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 3 [r3] 4 [r4] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 16 , prev 15, next 17, loop_depth 0, count 0, freq 199, probably never executed.
Predecessors:  15 [69.8%]  (fallthru)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 3 [r3] 4 [r4] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	
;; live  kill	 14 [lr]

Successors:  17 [100.0%]  (fallthru)
;; lr  out 	 4 [r4] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 17 , prev 16, next 18, loop_depth 0, count 0, freq 284, probably never executed.
Predecessors:  15 [30.2%]  16 [100.0%]  (fallthru)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 7 [r7] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 5 [r5] 7 [r7]
;; live  kill	 14 [lr]

Successors:  21 [100.0%] 
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 18 , prev 17, next 19, loop_depth 1, count 0, freq 2875, probably never executed.
Predecessors:  21 [91.0%] 
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 5 [r5] 7 [r7] 13 [sp]
;; lr  def 	 3 [r3] 6 [r6] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 3 [r3] 6 [r6] 24 [cc]
;; live  kill	

Successors:  19 [29.0%]  (fallthru) 20 [71.0%] 
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 19 , prev 18, next 20, loop_depth 1, count 0, freq 834, probably never executed.
Predecessors:  18 [29.0%]  (fallthru)
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 6 [r6] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

Successors:  20 [100.0%]  (fallthru)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 20 , prev 19, next 21, loop_depth 1, count 0, freq 2875, probably never executed.
Predecessors:  18 [71.0%]  19 [100.0%]  (fallthru)
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 5 [r5] 6 [r6] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 5 [r5]
;; live  kill	 14 [lr]

Successors:  21 [100.0%]  (fallthru,dfs_back)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 21 , prev 20, next 22, loop_depth 1, count 0, freq 3159, probably never executed.
Predecessors:  20 [100.0%]  (fallthru,dfs_back) 17 [100.0%] 
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 5 [r5] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  18 [91.0%]  22 [9.0%]  (fallthru,loop_exit)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 22 , prev 21, next 1, loop_depth 0, count 0, freq 284, probably never executed.
Predecessors:  21 [9.0%]  (fallthru,loop_exit)
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	
;; live  kill	

Successors:  EXIT [100.0%] 
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 1 , prev 22, loop_depth 0, count 0, freq 284, probably never executed.
Predecessors:  22 [100.0%] 
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(4){ }u-1(5){ }u-1(6){ }u-1(7){ }u-1(8){ }u-1(9){ }u-1(10){ }u-1(11){ }u-1(13){ }u-1(14){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  def 	
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	




pci_common_init

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;;  exit block uses 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 3[r3] 4[r4] 5[r5] 6[r6] 7[r7] 8[r8] 9[r9] 10[sl] 11[fp] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={24d,21u} r1={17d,4u} r2={13d} r3={20d,11u} r4={2d,16u,2d} r5={4d,19u,1d} r6={4d,10u} r7={5d,6u,1d} r8={2d,3u} r9={2d,3u} r10={2d,3u} r11={2d,3u} r12={12d} r13={2d,35u} r14={13d,2u} r15={12d} r16={12d} r17={12d} r18={12d} r19={12d} r20={12d} r21={12d} r22={12d} r23={12d} r24={21d,9u} r27={12d} r28={12d} r29={12d} r30={12d} r31={12d} r32={12d} r33={12d} r34={12d} r35={12d} r36={12d} r37={12d} r38={12d} r39={12d} r40={12d} r41={12d} r42={12d} r43={12d} r44={12d} r45={12d} r46={12d} r47={12d} r48={12d} r49={12d} r50={12d} r51={12d} r52={12d} r53={12d} r54={12d} r55={12d} r56={12d} r57={12d} r58={12d} r59={12d} r60={12d} r61={12d} r62={12d} r63={12d} r64={12d} r65={12d} r66={12d} r67={12d} r68={12d} r69={12d} r70={12d} r71={12d} r72={12d} r73={12d} r74={12d} r75={12d} r76={12d} r77={12d} r78={12d} r79={12d} r80={12d} r81={12d} r82={12d} r83={12d} r84={12d} r85={12d} r86={12d} r87={12d} r88={12d} r89={12d} r90={12d} r91={12d} r92={12d} r93={12d} r94={12d} r95={12d} r96={12d} r97={12d} r98={12d} r99={12d} r100={12d} r101={12d} r102={12d} r103={12d} r104={12d} r105={12d} r106={12d} r107={12d} r108={12d} r109={12d} r110={12d} r111={12d} r112={12d} r113={12d} r114={12d} r115={12d} r116={12d} r117={12d} r118={12d} r119={12d} r120={12d} r121={12d} r122={12d} r123={12d} r124={12d} r125={12d} r126={12d} r127={12d} 
;;    total ref usage 1614{1465d,145u,4e} in 84{72 regular + 12 call} insns.
(note 1 0 187 NOTE_INSN_DELETED)

(note 187 1 4 2 ( hw (expr_list:REG_DEP_TRUE (reg:SI 0 r0 [ hw ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  def 	 3 [r3] 4 [r4] 13 [sp] 24 [cc]
;; live  in  	 0 [r0] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 4 [r4] 13 [sp] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 187 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 159 2 NOTE_INSN_FUNCTION_BEG)

(insn/f:TI 159 3 160 2 arch/arm/kernel/bios32.c:535 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 3 r3)
                    ] 2))
            (use (reg:SI 4 r4))
            (use (reg:SI 5 r5))
            (use (reg:SI 6 r6))
            (use (reg:SI 7 r7))
            (use (reg:SI 8 r8))
            (use (reg:SI 9 r9))
            (use (reg:SI 10 sl))
            (use (reg:SI 11 fp))
            (use (reg:SI 14 lr))
        ]) 327 {*push_multi} (expr_list:REG_DEAD (reg:SI 14 lr)
        (expr_list:REG_DEAD (reg:SI 10 sl)
            (expr_list:REG_DEAD (reg:SI 9 r9)
                (expr_list:REG_DEAD (reg:SI 8 r8)
                    (expr_list:REG_DEAD (reg:SI 7 r7)
                        (expr_list:REG_DEAD (reg:SI 6 r6)
                            (expr_list:REG_DEAD (reg:SI 5 r5)
                                (expr_list:REG_DEAD (reg:SI 4 r4)
                                    (expr_list:REG_DEAD (reg:SI 3 r3)
                                        (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                                                    (set/f (reg/f:SI 13 sp)
                                                        (plus:SI (reg/f:SI 13 sp)
                                                            (const_int -40 [0xffffffffffffffd8])))
                                                    (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                                                        (reg:SI 3 r3))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 4 [0x4])) [0 S4 A32])
                                                        (reg:SI 4 r4))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 8 [0x8])) [0 S4 A32])
                                                        (reg:SI 5 r5))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 12 [0xc])) [0 S4 A32])
                                                        (reg:SI 6 r6))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 16 [0x10])) [0 S4 A32])
                                                        (reg:SI 7 r7))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 20 [0x14])) [0 S4 A32])
                                                        (reg:SI 8 r8))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 24 [0x18])) [0 S4 A32])
                                                        (reg:SI 9 r9))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 28 [0x1c])) [0 S4 A32])
                                                        (reg:SI 10 sl))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 32 [0x20])) [0 S4 A32])
                                                        (reg:SI 11 fp))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 36 [0x24])) [0 S4 A32])
                                                        (reg:SI 14 lr))
                                                ])
                                            (nil))))))))))))

(note 160 159 9 2 NOTE_INSN_PROLOGUE_END)

(insn:TI 9 160 2 2 arch/arm/kernel/bios32.c:540 (set (reg/f:SI 3 r3 [orig:145 D.18778 ] [145])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 0 r0 [orig:147 hw ] [147])
                (const_int 20 [0x14])) [0 <variable>.preinit+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn:TI 2 9 10 2 arch/arm/kernel/bios32.c:535 (set (reg/v/f:SI 4 r4 [orig:147 hw ] [147])
        (reg:SI 0 r0 [ hw ])) 167 {*arm_movsi_insn} (nil))

(insn:TI 10 2 7 2 arch/arm/kernel/bios32.c:540 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 3 r3 [orig:145 D.18778 ] [145])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn:TI 7 10 8 2 include/linux/list.h:26 (set (mem/s/f/j:SI (reg/v/f:SI 4 r4 [orig:147 hw ] [147]) [0 <variable>.buses.next+0 S4 A32])
        (reg/f:SI 0 r0 [orig:147 hw ] [147])) 167 {*arm_movsi_insn} (nil))

(insn:TI 8 7 11 2 include/linux/list.h:27 (set (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:147 hw ] [147])
                (const_int 4 [0x4])) [0 <variable>.buses.prev+0 S4 A32])
        (reg/f:SI 0 r0 [orig:147 hw ] [147])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 0 r0 [orig:147 hw ] [147])
        (nil)))

(jump_insn 11 8 188 2 arch/arm/kernel/bios32.c:540 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 14)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3017 [0xbc9])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 3 [r3] 4 [r4] 11 [fp] 13 [sp]
;; live  out 	 3 [r3] 4 [r4] 11 [fp] 13 [sp]


;; Succ edge  3 [69.8%]  (fallthru)
;; Succ edge  4 [30.2%] 

(note 188 11 12 3 ( hw (expr_list:REG_DEP_TRUE (reg/v/f:SI 4 r4 [orig:147 hw ] [147])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 11 [fp] 13 [sp]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 3 [r3] 4 [r4] 11 [fp] 13 [sp]
;; live  gen 	
;; live  kill	 14 [lr]

;; Pred edge  2 [69.8%]  (fallthru)
(note 12 188 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(call_insn:TI 13 12 189 3 arch/arm/kernel/bios32.c:541 (parallel [
            (call (mem:SI (reg/f:SI 3 r3 [orig:145 D.18778 ] [145]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 244 {*call_reg_armv5} (expr_list:REG_DEAD (reg/f:SI 3 r3 [orig:145 D.18778 ] [145])
        (nil))
    (nil))
;; End of basic block 3 -> ( 4)
;; lr  out 	 4 [r4] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 11 [fp] 13 [sp]


;; Succ edge  4 [100.0%]  (fallthru)

(note 189 13 14 4 ( hw (expr_list:REG_DEP_TRUE (reg/v/f:SI 4 r4 [orig:147 hw ] [147])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 3 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl]
;; live  in  	 4 [r4] 11 [fp] 13 [sp]
;; live  gen 	 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl]
;; live  kill	

;; Pred edge  3 [100.0%]  (fallthru)
;; Pred edge  2 [30.2%] 
(code_label 14 189 15 4 145 "" [1 uses])

(note 15 14 16 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn:TI 16 15 190 4 arch/arm/kernel/bios32.c:541 (set (reg/v:SI 7 r7 [orig:138 busnr ] [138])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(note 190 16 22 4 ( busnr (expr_list:REG_DEP_TRUE (reg/v:SI 7 r7 [orig:138 busnr ] [138])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn 22 190 17 4 include/linux/slab_def.h:122 (set (reg/f:SI 9 r9 [165])
        (symbol_ref:SI ("malloc_sizes") [flags 0xc0] <var_decl 0x111d99c0 malloc_sizes>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("malloc_sizes") [flags 0xc0] <var_decl 0x111d99c0 malloc_sizes>)
        (nil)))

(insn:TI 17 22 191 4 arch/arm/kernel/bios32.c:541 (set (reg/v:SI 6 r6 [orig:137 nr ] [137])
        (reg/v:SI 7 r7 [orig:138 busnr ] [138])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(note 191 17 44 4 ( nr (expr_list:REG_DEP_TRUE (reg/v:SI 6 r6 [orig:137 nr ] [137])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn 44 191 46 4 arch/arm/kernel/bios32.c:512 (set (reg/f:SI 10 sl [167])
        (symbol_ref:SI ("ioport_resource") [flags 0xc0] <var_decl 0x10e6a3c0 ioport_resource>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("ioport_resource") [flags 0xc0] <var_decl 0x10e6a3c0 ioport_resource>)
        (nil)))

(insn:TI 46 44 179 4 arch/arm/kernel/bios32.c:513 (set (reg/f:SI 8 r8 [168])
        (symbol_ref:SI ("iomem_resource") [flags 0xc0] <var_decl 0x10e6a360 iomem_resource>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("iomem_resource") [flags 0xc0] <var_decl 0x10e6a360 iomem_resource>)
        (nil)))

(jump_insn 179 46 180 4 (set (pc)
        (label_ref 90)) -1 (nil))
;; End of basic block 4 -> ( 14)
;; lr  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  14 [100.0%] 

(barrier 180 179 192)

(note 192 180 193 5 ( ret (expr_list:REG_DEP_TRUE (reg/v:SI 11 fp [orig:136 ret ] [136])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 193 192 20 5 ( ret (expr_list:REG_DEP_TRUE (reg/v/f:SI 5 r5 [orig:139 ret ] [139])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 14) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; lr  use 	 9 [r9] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 5 [r5] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  14 [97.8%] 
(code_label 20 193 21 5 147 ("found") [1 uses])

(note 21 20 27 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 27 21 24 5 NOTE_INSN_DELETED)

(insn:TI 24 27 146 5 include/linux/slab_def.h:122 (set (reg:SI 0 r0)
        (mem/s/f/j:SI (plus:SI (reg/f:SI 9 r9 [165])
                (const_int 12 [0xc])) [0 <variable>.cs_cachep+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/f/j:SI (const:SI (plus:SI (symbol_ref:SI ("malloc_sizes") [flags 0xc0] <var_decl 0x111d99c0 malloc_sizes>)
                    (const_int 12 [0xc]))) [0 <variable>.cs_cachep+0 S4 A32])
        (nil)))

(insn 146 24 26 5 include/linux/slab_def.h:122 (set (reg:SI 1 r1)
        (const_int 32976 [0x80d0])) 167 {*arm_movsi_insn} (nil))

(call_insn:TI 26 146 29 5 include/linux/slab_def.h:122 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("kmem_cache_alloc") [flags 0x41] <function_decl 0x111cff00 kmem_cache_alloc>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn:TI 29 26 30 5 arch/arm/kernel/bios32.c:502 (parallel [
            (set (reg:CC 24 cc)
                (compare:CC (reg:SI 0 r0)
                    (const_int 0 [0x0])))
            (set (reg/v/f:SI 5 r5 [orig:139 ret ] [139])
                (reg:SI 0 r0))
        ]) 174 {*movsi_compare0} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(jump_insn:TI 30 29 31 5 arch/arm/kernel/bios32.c:502 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 36)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 5 -> ( 6 7)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  6 [0.0%]  (fallthru,loop_exit)
;; Succ edge  7 [100.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  5 [0.0%]  (fallthru,loop_exit)
(note 31 30 33 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn:TI 33 31 181 6 arch/arm/kernel/bios32.c:503 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC11") [flags 0x82] <string_cst 0x1144d800>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82] <string_cst 0x1144d800>)
        (nil)))

(jump_insn 181 33 182 6 (set (pc)
        (label_ref 167)) -1 (nil))
;; End of basic block 6 -> ( 10)
;; lr  out 	 0 [r0] 13 [sp]
;; live  out 	 0 [r0] 13 [sp]


;; Succ edge  10 [100.0%] 

(barrier 182 181 36)

;; Start of basic block ( 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 3 [r3] 11 [fp] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  5 [100.0%] 
(code_label 36 182 37 7 148 "" [1 uses])

(note 37 36 48 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(note 48 37 52 7 NOTE_INSN_DELETED)

(note 52 48 38 7 NOTE_INSN_DELETED)

(insn:TI 38 52 49 7 arch/arm/kernel/bios32.c:508 (set (mem/s/f/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:139 ret ] [139])
                (const_int 52 [0x34])) [0 <variable>.hw+0 S4 A32])
        (reg/v/f:SI 4 r4 [orig:147 hw ] [147])) 167 {*arm_movsi_insn} (nil))

(insn 49 38 39 7 arch/arm/kernel/bios32.c:515 (set (reg:SI 0 r0)
        (reg/v:SI 6 r6 [orig:137 nr ] [137])) 167 {*arm_movsi_insn} (nil))

(insn:TI 39 49 50 7 arch/arm/kernel/bios32.c:509 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:139 ret ] [139])
                (const_int 8 [0x8])) [0 <variable>.busnr+0 S4 A64])
        (reg/v:SI 7 r7 [orig:138 busnr ] [138])) 167 {*arm_movsi_insn} (nil))

(insn 50 39 40 7 arch/arm/kernel/bios32.c:515 (set (reg:SI 1 r1)
        (reg/v/f:SI 5 r5 [orig:139 ret ] [139])) 167 {*arm_movsi_insn} (nil))

(insn:TI 40 50 41 7 arch/arm/kernel/bios32.c:510 (set (reg/f:SI 3 r3 [orig:151 <variable>.swizzle ] [151])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:147 hw ] [147])
                (const_int 28 [0x1c])) [0 <variable>.swizzle+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:147 hw ] [147])
                (const_int 28 [0x1c])) [0 <variable>.swizzle+0 S4 A32])
        (nil)))

(insn:TI 41 40 42 7 arch/arm/kernel/bios32.c:510 (set (mem/s/f/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:139 ret ] [139])
                (const_int 44 [0x2c])) [0 <variable>.swizzle+0 S4 A32])
        (reg/f:SI 3 r3 [orig:151 <variable>.swizzle ] [151])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 3 r3 [orig:151 <variable>.swizzle ] [151])
        (nil)))

(insn:TI 42 41 45 7 arch/arm/kernel/bios32.c:511 (set (reg/f:SI 3 r3 [orig:152 <variable>.map_irq ] [152])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:147 hw ] [147])
                (const_int 32 [0x20])) [0 <variable>.map_irq+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/f/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:139 ret ] [139])
                (const_int 48 [0x30])) [0 <variable>.map_irq+0 S4 A64])
        (nil)))

(insn:TI 45 42 47 7 arch/arm/kernel/bios32.c:512 (set (mem/s/f/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:139 ret ] [139])
                (const_int 32 [0x20])) [0 <variable>.resource+0 S4 A64])
        (reg/f:SI 10 sl [167])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("ioport_resource") [flags 0xc0] <var_decl 0x10e6a3c0 ioport_resource>)
        (nil)))

(insn:TI 47 45 43 7 arch/arm/kernel/bios32.c:513 (set (mem/s/f/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:139 ret ] [139])
                (const_int 36 [0x24])) [0 <variable>.resource+4 S4 A32])
        (reg/f:SI 8 r8 [168])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("iomem_resource") [flags 0xc0] <var_decl 0x10e6a360 iomem_resource>)
        (nil)))

(insn:TI 43 47 51 7 arch/arm/kernel/bios32.c:511 (set (mem/s/f/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:139 ret ] [139])
                (const_int 48 [0x30])) [0 <variable>.map_irq+0 S4 A64])
        (reg/f:SI 3 r3 [orig:152 <variable>.map_irq ] [152])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 3 r3 [orig:152 <variable>.map_irq ] [152])
        (nil)))

(call_insn:TI 51 43 53 7 arch/arm/kernel/bios32.c:515 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:147 hw ] [147])
                                (const_int 12 [0xc])) [0 <variable>.setup+0 S4 A32]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 251 {*call_value_mem} (expr_list:REG_DEAD (reg:SI 1 r1)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn:TI 53 51 54 7 arch/arm/kernel/bios32.c:517 (parallel [
            (set (reg:CC 24 cc)
                (compare:CC (reg:SI 0 r0)
                    (const_int 0 [0x0])))
            (set (reg/v:SI 11 fp [orig:136 ret ] [136])
                (reg:SI 0 r0))
        ]) 174 {*movsi_compare0} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(jump_insn:TI 54 53 55 7 arch/arm/kernel/bios32.c:517 (set (pc)
        (if_then_else (le (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 81)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2699 [0xa8b])
            (nil))))
;; End of basic block 7 -> ( 8 12)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  8 [73.0%]  (fallthru)
;; Succ edge  12 [27.0%] 

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  7 [73.0%]  (fallthru)
(note 55 54 56 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(note 56 55 57 8 NOTE_INSN_DELETED)

(insn:TI 57 56 58 8 arch/arm/kernel/bios32.c:518 (set (reg:SI 0 r0)
        (reg/v:SI 6 r6 [orig:137 nr ] [137])) 167 {*arm_movsi_insn} (nil))

(insn 58 57 59 8 arch/arm/kernel/bios32.c:518 (set (reg:SI 1 r1)
        (reg/v/f:SI 5 r5 [orig:139 ret ] [139])) 167 {*arm_movsi_insn} (nil))

(call_insn:TI 59 58 62 8 arch/arm/kernel/bios32.c:518 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:147 hw ] [147])
                                (const_int 16 [0x10])) [0 <variable>.scan+0 S4 A32]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 251 {*call_value_mem} (expr_list:REG_DEAD (reg:SI 1 r1)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn:TI 62 59 61 8 arch/arm/kernel/bios32.c:520 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 0 r0 [orig:133 D.19246 ] [133])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn 61 62 63 8 arch/arm/kernel/bios32.c:518 (set (mem/s/f/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:139 ret ] [139])
                (const_int 28 [0x1c])) [0 <variable>.bus+0 S4 A32])
        (reg/f:SI 0 r0 [orig:133 D.19246 ] [133])) 167 {*arm_movsi_insn} (nil))

(jump_insn:TI 63 61 64 8 arch/arm/kernel/bios32.c:520 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 69)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 8 -> ( 9 11)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  9 [0.0%]  (fallthru,loop_exit)
;; Succ edge  11 [100.0%] 

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  8 [0.0%]  (fallthru,loop_exit)
(note 64 63 66 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn:TI 66 64 167 9 arch/arm/kernel/bios32.c:521 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC12") [flags 0x82] <string_cst 0x1139b940>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC12") [flags 0x82] <string_cst 0x1139b940>)
        (nil)))
;; End of basic block 9 -> ( 10)
;; lr  out 	 0 [r0] 13 [sp]
;; live  out 	 0 [r0] 13 [sp]


;; Succ edge  10 [100.0%]  (fallthru)

;; Start of basic block ( 9 6) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 13 [sp]
;; live  gen 	
;; live  kill	 14 [lr]

;; Pred edge  9 [100.0%]  (fallthru)
;; Pred edge  6 [100.0%] 
(code_label 167 66 165 10 158 "" [1 uses])

(note 165 167 67 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(call_insn:TI 67 165 68 10 arch/arm/kernel/bios32.c:521 (parallel [
            (call (mem:SI (symbol_ref:SI ("panic") [flags 0x41] <function_decl 0x10a67680 panic>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_NORETURN (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 10 -> ()
;; lr  out 	 13 [sp]
;; live  out 	 13 [sp]



(barrier 68 67 69)

;; Start of basic block ( 8) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 0 [r0] 4 [r4] 5 [r5] 13 [sp]
;; lr  def 	 3 [r3] 7 [r7]
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 3 [r3] 7 [r7]
;; live  kill	

;; Pred edge  8 [100.0%] 
(code_label 69 68 70 11 150 "" [1 uses])

(note 70 69 74 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn:TI 74 70 71 11 include/linux/list.h:62 (set (reg/f:SI 3 r3 [orig:140 D.19239 ] [140])
        (mem/s/f/j:SI (reg/v/f:SI 4 r4 [orig:147 hw ] [147]) [0 <variable>.buses.next+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn:TI 71 74 194 11 arch/arm/kernel/bios32.c:523 (set (reg:SI 7 r7 [orig:158 <variable>.subordinate ] [158])
        (zero_extend:SI (mem/s/j:QI (plus:SI (reg/f:SI 0 r0 [orig:133 D.19246 ] [133])
                    (const_int 79 [0x4f])) [0 <variable>.subordinate+0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg/f:SI 0 r0 [orig:133 D.19246 ] [133])
        (nil)))

(note 194 71 75 11 ( busnr (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 75 194 72 11 include/linux/list.h:41 (set (mem/s/f/j:SI (plus:SI (reg/f:SI 3 r3 [orig:140 D.19239 ] [140])
                (const_int 4 [0x4])) [0 <variable>.prev+0 S4 A32])
        (reg/v/f:SI 5 r5 [orig:139 ret ] [139])) 167 {*arm_movsi_insn} (nil))

(insn 72 75 195 11 arch/arm/kernel/bios32.c:523 (set (reg/v:SI 7 r7 [orig:138 busnr ] [138])
        (plus:SI (reg:SI 7 r7 [orig:158 <variable>.subordinate ] [158])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(note 195 72 76 11 ( busnr (expr_list:REG_DEP_TRUE (reg/v:SI 7 r7 [orig:138 busnr ] [138])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 76 195 77 11 include/linux/list.h:42 (set (mem/s/f/j:SI (reg/v/f:SI 5 r5 [orig:139 ret ] [139]) [0 <variable>.node.next+0 S4 A64])
        (reg/f:SI 3 r3 [orig:140 D.19239 ] [140])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 3 r3 [orig:140 D.19239 ] [140])
        (nil)))

(insn:TI 77 76 78 11 include/linux/list.h:43 (set (mem/s/f/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:139 ret ] [139])
                (const_int 4 [0x4])) [0 <variable>.node.prev+0 S4 A32])
        (reg/v/f:SI 4 r4 [orig:147 hw ] [147])) 167 {*arm_movsi_insn} (nil))

(insn:TI 78 77 183 11 include/linux/list.h:44 (set (mem/s/f/j:SI (reg/v/f:SI 4 r4 [orig:147 hw ] [147]) [0 <variable>.buses.next+0 S4 A32])
        (reg/v/f:SI 5 r5 [orig:139 ret ] [139])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 5 r5 [orig:139 ret ] [139])
        (nil)))

(jump_insn 183 78 184 11 (set (pc)
        (label_ref 87)) -1 (nil))
;; End of basic block 11 -> ( 13)
;; lr  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  13 [100.0%] 

(barrier 184 183 81)

;; Start of basic block ( 7) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 5 [r5] 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  7 [27.0%] 
(code_label 81 184 82 12 149 "" [1 uses])

(note 82 81 83 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn:TI 83 82 84 12 arch/arm/kernel/bios32.c:527 (set (reg:SI 0 r0)
        (reg/v/f:SI 5 r5 [orig:139 ret ] [139])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 5 r5 [orig:139 ret ] [139])
        (nil)))

(call_insn:TI 84 83 85 12 arch/arm/kernel/bios32.c:527 (parallel [
            (call (mem:SI (symbol_ref:SI ("kfree") [flags 0x41] <function_decl 0x10d75880 kfree>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 85 84 86 12 arch/arm/kernel/bios32.c:528 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 11 fp [orig:136 ret ] [136])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn:TI 86 85 87 12 arch/arm/kernel/bios32.c:528 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 95)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 225 [0xe1])
            (nil))))
;; End of basic block 12 -> ( 15 13)
;; lr  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  15 [2.2%]  (loop_exit)
;; Succ edge  13 [97.8%]  (fallthru)

;; Start of basic block ( 12 11) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 6 [r6] 13 [sp]
;; lr  def 	 6 [r6]
;; live  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 6 [r6]
;; live  kill	

;; Pred edge  12 [97.8%]  (fallthru)
;; Pred edge  11 [100.0%] 
(code_label 87 86 88 13 151 "" [1 uses])

(note 88 87 89 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn:TI 89 88 196 13 arch/arm/kernel/bios32.c:500 (set (reg/v:SI 6 r6 [orig:137 nr ] [137])
        (plus:SI (reg/v:SI 6 r6 [orig:137 nr ] [137])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))
;; End of basic block 13 -> ( 14)
;; lr  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  14 [100.0%]  (fallthru,dfs_back)

(note 196 89 90 14 ( hw (expr_list:REG_DEP_TRUE (reg/v/f:SI 4 r4 [orig:147 hw ] [147])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 13 4) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 6 [r6] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  13 [100.0%]  (fallthru,dfs_back)
;; Pred edge  4 [100.0%] 
(code_label 90 196 91 14 146 "" [1 uses])

(note 91 90 92 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn:TI 92 91 93 14 arch/arm/kernel/bios32.c:500 discrim 1 (set (reg:SI 3 r3 [orig:159 <variable>.nr_controllers ] [159])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:147 hw ] [147])
                (const_int 8 [0x8])) [0 <variable>.nr_controllers+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:147 hw ] [147])
                (const_int 8 [0x8])) [0 <variable>.nr_controllers+0 S4 A32])
        (nil)))

(insn:TI 93 92 94 14 arch/arm/kernel/bios32.c:500 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 6 r6 [orig:137 nr ] [137])
            (reg:SI 3 r3 [orig:159 <variable>.nr_controllers ] [159]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [orig:159 <variable>.nr_controllers ] [159])
        (nil)))

(jump_insn:TI 94 93 95 14 arch/arm/kernel/bios32.c:500 discrim 1 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 20)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9775 [0x262f])
            (nil))))
;; End of basic block 14 -> ( 5 15)
;; lr  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  5 [97.8%] 
;; Succ edge  15 [2.2%]  (fallthru,loop_exit)

;; Start of basic block ( 14 12) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  14 [2.2%]  (fallthru,loop_exit)
;; Pred edge  12 [2.2%]  (loop_exit)
(code_label 95 94 96 15 152 "" [1 uses])

(note 96 95 97 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn:TI 97 96 98 15 arch/arm/kernel/bios32.c:543 (set (reg/f:SI 3 r3 [orig:144 D.18781 ] [144])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:147 hw ] [147])
                (const_int 24 [0x18])) [0 <variable>.postinit+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn:TI 98 97 99 15 arch/arm/kernel/bios32.c:543 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 3 r3 [orig:144 D.18781 ] [144])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn:TI 99 98 100 15 arch/arm/kernel/bios32.c:543 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 102)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3017 [0xbc9])
            (nil))))
;; End of basic block 15 -> ( 16 17)
;; lr  out 	 3 [r3] 4 [r4] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 3 [r3] 4 [r4] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  16 [69.8%]  (fallthru)
;; Succ edge  17 [30.2%] 

;; Start of basic block ( 15) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 3 [r3] 4 [r4] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	
;; live  kill	 14 [lr]

;; Pred edge  15 [69.8%]  (fallthru)
(note 100 99 101 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(call_insn:TI 101 100 197 16 arch/arm/kernel/bios32.c:544 (parallel [
            (call (mem:SI (reg/f:SI 3 r3 [orig:144 D.18781 ] [144]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 244 {*call_reg_armv5} (expr_list:REG_DEAD (reg/f:SI 3 r3 [orig:144 D.18781 ] [144])
        (nil))
    (nil))
;; End of basic block 16 -> ( 17)
;; lr  out 	 4 [r4] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  17 [100.0%]  (fallthru)

(note 197 101 102 17 ( hw (expr_list:REG_DEP_TRUE (reg/v/f:SI 4 r4 [orig:147 hw ] [147])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 15 16) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 7 [r7] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 5 [r5] 7 [r7]
;; live  kill	 14 [lr]

;; Pred edge  15 [30.2%] 
;; Pred edge  16 [100.0%]  (fallthru)
(code_label 102 197 103 17 153 "" [1 uses])

(note 103 102 106 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn:TI 106 103 107 17 arch/arm/kernel/bios32.c:546 (set (reg:SI 0 r0)
        (symbol_ref:SI ("pcibios_swizzle") [flags 0x3] <function_decl 0x1126cd00 pcibios_swizzle>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("pcibios_swizzle") [flags 0x3] <function_decl 0x1126cd00 pcibios_swizzle>)
        (nil)))

(insn:TI 107 106 108 17 arch/arm/kernel/bios32.c:546 (set (reg:SI 1 r1)
        (symbol_ref:SI ("pcibios_map_irq") [flags 0x3] <function_decl 0x1126ce00 pcibios_map_irq>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("pcibios_map_irq") [flags 0x3] <function_decl 0x1126ce00 pcibios_map_irq>)
        (nil)))

(call_insn:TI 108 107 114 17 arch/arm/kernel/bios32.c:546 (parallel [
            (call (mem:SI (symbol_ref:SI ("pci_fixup_irqs") [flags 0x41] <function_decl 0x10faa900 pci_fixup_irqs>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 114 108 198 17 arch/arm/kernel/bios32.c:551 (set (reg/f:SI 7 r7 [164])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(note 198 114 109 17 ( busnr (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 109 198 199 17 arch/arm/kernel/bios32.c:548 (set (reg/v/f:SI 5 r5 [orig:143 sys ] [143])
        (mem/s/f/j:SI (reg/v/f:SI 4 r4 [orig:147 hw ] [147]) [0 <variable>.buses.next+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(note 199 109 200 17 ( sys (expr_list:REG_DEP_TRUE (reg/v/f:SI 5 r5 [orig:143 sys ] [143])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 200 199 185 17 ( ret (nil)) NOTE_INSN_VAR_LOCATION)

(jump_insn 185 200 186 17 arch/arm/kernel/bios32.c:548 (set (pc)
        (label_ref 131)) -1 (nil))
;; End of basic block 17 -> ( 21)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  21 [100.0%] 

(barrier 186 185 201)

(note 201 186 133 18 ( bus (expr_list:REG_DEP_TRUE (reg/v/f:SI 6 r6 [orig:142 bus ] [142])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 21) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 5 [r5] 7 [r7] 13 [sp]
;; lr  def 	 3 [r3] 6 [r6] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 3 [r3] 6 [r6] 24 [cc]
;; live  kill	

;; Pred edge  21 [91.0%] 
(code_label 133 201 112 18 156 "" [1 uses])

(note 112 133 115 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn:TI 115 112 113 18 arch/arm/kernel/bios32.c:551 (set (reg:SI 3 r3 [orig:163 use_firmware ] [163])
        (mem/c/i:SI (plus:SI (reg/f:SI 7 r7 [164])
                (const_int 4 [0x4])) [0 use_firmware+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/c/i:SI (plus:SI (reg/f:SI 7 r7 [164])
                (const_int 4 [0x4])) [0 use_firmware+0 S4 A32])
        (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                        (const_int 4 [0x4]))) [0 use_firmware+0 S4 A32])
            (nil))))

(insn:TI 113 115 202 18 arch/arm/kernel/bios32.c:549 (set (reg/v/f:SI 6 r6 [orig:142 bus ] [142])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:143 sys ] [143])
                (const_int 28 [0x1c])) [0 <variable>.bus+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(note 202 113 116 18 ( nr (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 116 202 117 18 arch/arm/kernel/bios32.c:551 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [orig:163 use_firmware ] [163])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [orig:163 use_firmware ] [163])
        (nil)))

(jump_insn:TI 117 116 118 18 arch/arm/kernel/bios32.c:551 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 125)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 18 -> ( 19 20)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  19 [29.0%]  (fallthru)
;; Succ edge  20 [71.0%] 

;; Start of basic block ( 18) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 6 [r6] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  18 [29.0%]  (fallthru)
(note 118 117 119 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn:TI 119 118 120 19 arch/arm/kernel/bios32.c:555 (set (reg:SI 0 r0)
        (reg/v/f:SI 6 r6 [orig:142 bus ] [142])) 167 {*arm_movsi_insn} (nil))

(call_insn:TI 120 119 121 19 arch/arm/kernel/bios32.c:555 (parallel [
            (call (mem:SI (symbol_ref:SI ("pci_bus_size_bridges") [flags 0x41] <function_decl 0x10faa580 pci_bus_size_bridges>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 121 120 122 19 arch/arm/kernel/bios32.c:560 (set (reg:SI 0 r0)
        (reg/v/f:SI 6 r6 [orig:142 bus ] [142])) 167 {*arm_movsi_insn} (nil))

(call_insn:TI 122 121 123 19 arch/arm/kernel/bios32.c:560 (parallel [
            (call (mem:SI (symbol_ref:SI ("pci_bus_assign_resources") [flags 0x41] <function_decl 0x10faa500 pci_bus_assign_resources>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 123 122 124 19 arch/arm/kernel/bios32.c:565 (set (reg:SI 0 r0)
        (reg/v/f:SI 6 r6 [orig:142 bus ] [142])) 167 {*arm_movsi_insn} (nil))

(call_insn:TI 124 123 125 19 arch/arm/kernel/bios32.c:565 (parallel [
            (call (mem:SI (symbol_ref:SI ("pci_enable_bridges") [flags 0x41] <function_decl 0x10fb1000 pci_enable_bridges>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 19 -> ( 20)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  20 [100.0%]  (fallthru)

;; Start of basic block ( 18 19) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 5 [r5] 6 [r6] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 5 [r5]
;; live  kill	 14 [lr]

;; Pred edge  18 [71.0%] 
;; Pred edge  19 [100.0%]  (fallthru)
(code_label 125 124 126 20 155 "" [1 uses])

(note 126 125 127 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn:TI 127 126 128 20 arch/arm/kernel/bios32.c:571 (set (reg:SI 0 r0)
        (reg/v/f:SI 6 r6 [orig:142 bus ] [142])) 167 {*arm_movsi_insn} (nil))

(call_insn:TI 128 127 129 20 arch/arm/kernel/bios32.c:571 (parallel [
            (call (mem:SI (symbol_ref:SI ("pci_bus_add_devices") [flags 0x41] <function_decl 0x10f8e080 pci_bus_add_devices>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 129 128 203 20 arch/arm/kernel/bios32.c:548 (set (reg/v/f:SI 5 r5 [orig:143 sys ] [143])
        (mem/s/f/j:SI (reg/v/f:SI 5 r5 [orig:143 sys ] [143]) [0 <variable>.node.next+0 S4 A64])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 20 -> ( 21)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  21 [100.0%]  (fallthru,dfs_back)

(note 203 129 131 21 ( nr (expr_list:REG_DEP_TRUE (reg/v:SI 6 r6 [orig:137 nr ] [137])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 20 17) -> 21
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 5 [r5] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  20 [100.0%]  (fallthru,dfs_back)
;; Pred edge  17 [100.0%] 
(code_label 131 203 132 21 154 "" [1 uses])

(note 132 131 134 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn:TI 134 132 135 21 arch/arm/kernel/bios32.c:548 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 5 r5 [orig:143 sys ] [143])
            (reg/v/f:SI 4 r4 [orig:147 hw ] [147]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn:TI 135 134 163 21 arch/arm/kernel/bios32.c:548 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 133)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil))))
;; End of basic block 21 -> ( 18 22)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  18 [91.0%] 
;; Succ edge  22 [9.0%]  (fallthru,loop_exit)

;; Start of basic block ( 21) -> 22
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	
;; live  kill	

;; Pred edge  21 [9.0%]  (fallthru,loop_exit)
(note 163 135 161 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(note 161 163 162 22 NOTE_INSN_EPILOGUE_BEG)

(jump_insn:TI 162 161 164 22 arch/arm/kernel/bios32.c:573 (return) 260 {return} (nil))
;; End of basic block 22 -> ( 1)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  EXIT [100.0%] 

(barrier 164 162 156)

(note 156 164 157 NOTE_INSN_DELETED)

(note 157 156 0 NOTE_INSN_DELETED)

