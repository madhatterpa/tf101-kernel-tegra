
;; Function elf_check_arch (elf_check_arch)[0:793]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 15 n_edges 22 count 28 (  1.9)
df_worklist_dataflow_doublequeue:n_basic_blocks 15 n_edges 22 count 28 (  1.9)
df_worklist_dataflow_doublequeue:n_basic_blocks 15 n_edges 22 count 28 (  1.9)


elf_check_arch

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 24[cc]
;;  ref usage 	r0={2d,3u} r1={1d} r2={1d} r3={1d} r11={1d,14u} r12={1d} r13={1d,14u} r14={1d,1u} r24={8d,8u} r25={1d,14u} r26={1d,13u} r133={1d,3u} r134={1d,2u} r135={3d,1u} r137={1d,3u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} 
;;    total ref usage 131{40d,91u,0e} in 42{42 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16
0[0,2] 1[2,1] 2[3,1] 3[4,1] 11[5,1] 12[6,1] 13[7,1] 14[8,1] 24[9,8] 25[17,1] 26[18,1] 133[19,1] 134[20,1] 135[21,3] 137[24,1] 138[25,1] 139[26,1] 140[27,1] 141[28,1] 142[29,1] 143[30,1] 144[31,1] 145[32,1] 146[33,1] 147[34,1] 148[35,1] 149[36,1] 150[37,1] 151[38,1] 152[39,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d1(0){ }d2(1){ }d3(2){ }d4(3){ }d5(11){ }d6(12){ }d7(13){ }d8(14){ }d17(25){ }d18(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
1, 2, 3, 4, 5, 6, 7, 8, 17, 18
;; rd  kill	(11)
0, 1, 2, 3, 4, 5, 6, 7, 8, 17, 18
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
1, 2, 3, 4, 5, 6, 7, 8, 17, 18

( 0 )->[2]->( 12 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d5(bb 0 insn -1) }u1(13){ d7(bb 0 insn -1) }u2(25){ d17(bb 0 insn -1) }u3(26){ d18(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 137 138
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 137 138
;; live  kill	
;; rd  in  	(10)
1, 2, 3, 4, 5, 6, 7, 8, 17, 18
;; rd  gen 	(3)
16, 24, 25
;; rd  kill	(10)
9, 10, 11, 12, 13, 14, 15, 16, 24, 25
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; rd  out 	(13)
1, 2, 3, 4, 5, 6, 7, 8, 16, 17, 18, 24, 25
;;  UD chains for artificial uses
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 25 { d17(bb 0 insn -1) }
;;   reg 26 { d18(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d1(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 6
;;      reg 137 { d24(bb 2 insn 2) }
;;   UD chains for insn luid 2 uid 7
;;      reg 138 { d25(bb 2 insn 6) }
;;   UD chains for insn luid 3 uid 8
;;      reg 24 { d16(bb 2 insn 7) }

( 2 )->[3]->( 4 6 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(11){ d5(bb 0 insn -1) }u9(13){ d7(bb 0 insn -1) }u10(25){ d17(bb 0 insn -1) }u11(26){ d18(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc] 134 139
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; live  gen 	 24 [cc] 134 139
;; live  kill	
;; rd  in  	(13)
1, 2, 3, 4, 5, 6, 7, 8, 16, 17, 18, 24, 25
;; rd  gen 	(3)
15, 20, 26
;; rd  kill	(10)
9, 10, 11, 12, 13, 14, 15, 16, 20, 26
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 137
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 137
;; rd  out 	(15)
1, 2, 3, 4, 5, 6, 7, 8, 15, 17, 18, 20, 24, 25, 26
;;  UD chains for artificial uses
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 25 { d17(bb 0 insn -1) }
;;   reg 26 { d18(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 10
;;      reg 137 { d24(bb 2 insn 2) }
;;   UD chains for insn luid 1 uid 11
;;      reg 134 { d20(bb 3 insn 10) }
;;   UD chains for insn luid 2 uid 12
;;      reg 139 { d26(bb 3 insn 11) }
;;   UD chains for insn luid 3 uid 13
;;      reg 24 { d15(bb 3 insn 12) }

( 3 )->[4]->( 5 7 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u16(11){ d5(bb 0 insn -1) }u17(13){ d7(bb 0 insn -1) }u18(25){ d17(bb 0 insn -1) }u19(26){ d18(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 140 141 142
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; live  gen 	 24 [cc] 140 141 142
;; live  kill	
;; rd  in  	(15)
1, 2, 3, 4, 5, 6, 7, 8, 15, 17, 18, 20, 24, 25, 26
;; rd  gen 	(4)
14, 27, 28, 29
;; rd  kill	(11)
9, 10, 11, 12, 13, 14, 15, 16, 27, 28, 29
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; rd  out 	(18)
1, 2, 3, 4, 5, 6, 7, 8, 14, 17, 18, 20, 24, 25, 26, 27, 28, 29
;;  UD chains for artificial uses
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 25 { d17(bb 0 insn -1) }
;;   reg 26 { d18(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 16
;;      reg 140 { d27(bb 4 insn 15) }
;;   UD chains for insn luid 2 uid 17
;;      reg 142 { d29(bb 4 insn 16) }
;;   UD chains for insn luid 3 uid 18
;;      reg 141 { d28(bb 4 insn 17) }
;;   UD chains for insn luid 4 uid 19
;;      reg 24 { d14(bb 4 insn 18) }

( 4 )->[5]->( 12 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ d5(bb 0 insn -1) }u-1(13){ d7(bb 0 insn -1) }u-1(25){ d17(bb 0 insn -1) }u-1(26){ d18(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(18)
1, 2, 3, 4, 5, 6, 7, 8, 14, 17, 18, 20, 24, 25, 26, 27, 28, 29
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(18)
1, 2, 3, 4, 5, 6, 7, 8, 14, 17, 18, 20, 24, 25, 26, 27, 28, 29
;;  UD chains for artificial uses
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 25 { d17(bb 0 insn -1) }
;;   reg 26 { d18(bb 0 insn -1) }

( 3 )->[6]->( 12 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u24(11){ d5(bb 0 insn -1) }u25(13){ d7(bb 0 insn -1) }u26(25){ d17(bb 0 insn -1) }u27(26){ d18(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 24 [cc] 143
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 137
;; live  gen 	 24 [cc] 143
;; live  kill	
;; rd  in  	(15)
1, 2, 3, 4, 5, 6, 7, 8, 15, 17, 18, 20, 24, 25, 26
;; rd  gen 	(2)
13, 30
;; rd  kill	(9)
9, 10, 11, 12, 13, 14, 15, 16, 30
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; rd  out 	(16)
1, 2, 3, 4, 5, 6, 7, 8, 13, 17, 18, 20, 24, 25, 26, 30
;;  UD chains for artificial uses
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 25 { d17(bb 0 insn -1) }
;;   reg 26 { d18(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 25
;;      reg 134 { d20(bb 3 insn 10) }
;;   UD chains for insn luid 1 uid 26
;;      reg 143 { d30(bb 6 insn 25) }
;;   UD chains for insn luid 2 uid 27
;;      reg 24 { d13(bb 6 insn 26) }

( 6 4 )->[7]->( 8 13 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u31(11){ d5(bb 0 insn -1) }u32(13){ d7(bb 0 insn -1) }u33(25){ d17(bb 0 insn -1) }u34(26){ d18(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc] 133 144
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; live  gen 	 24 [cc] 133 144
;; live  kill	
;; rd  in  	(20)
1, 2, 3, 4, 5, 6, 7, 8, 13, 14, 17, 18, 20, 24, 25, 26, 27, 28, 29, 30
;; rd  gen 	(3)
12, 19, 31
;; rd  kill	(10)
9, 10, 11, 12, 13, 14, 15, 16, 19, 31
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(21)
1, 2, 3, 4, 5, 6, 7, 8, 12, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 30, 31
;;  UD chains for artificial uses
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 25 { d17(bb 0 insn -1) }
;;   reg 26 { d18(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 30
;;      reg 137 { d24(bb 2 insn 2) }
;;   UD chains for insn luid 1 uid 31
;;      reg 133 { d19(bb 7 insn 30) }
;;   UD chains for insn luid 2 uid 32
;;      reg 144 { d31(bb 7 insn 31) }
;;   UD chains for insn luid 3 uid 33
;;      reg 24 { d12(bb 7 insn 32) }

( 7 )->[8]->( 9 10 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u39(11){ d5(bb 0 insn -1) }u40(13){ d7(bb 0 insn -1) }u41(25){ d17(bb 0 insn -1) }u42(26){ d18(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc] 145
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  gen 	 24 [cc] 145
;; live  kill	
;; rd  in  	(21)
1, 2, 3, 4, 5, 6, 7, 8, 12, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 30, 31
;; rd  gen 	(2)
11, 32
;; rd  kill	(9)
9, 10, 11, 12, 13, 14, 15, 16, 32
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(22)
1, 2, 3, 4, 5, 6, 7, 8, 11, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 30, 31, 32
;;  UD chains for artificial uses
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 25 { d17(bb 0 insn -1) }
;;   reg 26 { d18(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 35
;;      reg 133 { d19(bb 7 insn 30) }
;;   UD chains for insn luid 1 uid 36
;;      reg 145 { d32(bb 8 insn 35) }
;;   UD chains for insn luid 2 uid 37
;;      reg 24 { d11(bb 8 insn 36) }

( 8 )->[9]->( 12 10 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u46(11){ d5(bb 0 insn -1) }u47(13){ d7(bb 0 insn -1) }u48(25){ d17(bb 0 insn -1) }u49(26){ d18(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 146 147 148
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  gen 	 24 [cc] 146 147 148
;; live  kill	
;; rd  in  	(22)
1, 2, 3, 4, 5, 6, 7, 8, 11, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 30, 31, 32
;; rd  gen 	(4)
10, 33, 34, 35
;; rd  kill	(11)
9, 10, 11, 12, 13, 14, 15, 16, 33, 34, 35
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(25)
1, 2, 3, 4, 5, 6, 7, 8, 10, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35
;;  UD chains for artificial uses
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 25 { d17(bb 0 insn -1) }
;;   reg 26 { d18(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 40
;;      reg 146 { d33(bb 9 insn 39) }
;;   UD chains for insn luid 2 uid 41
;;      reg 148 { d35(bb 9 insn 40) }
;;   UD chains for insn luid 3 uid 42
;;      reg 147 { d34(bb 9 insn 41) }
;;   UD chains for insn luid 4 uid 43
;;      reg 24 { d10(bb 9 insn 42) }

( 8 9 )->[10]->( 11 13 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u54(11){ d5(bb 0 insn -1) }u55(13){ d7(bb 0 insn -1) }u56(25){ d17(bb 0 insn -1) }u57(26){ d18(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc] 149
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  gen 	 24 [cc] 149
;; live  kill	
;; rd  in  	(26)
1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35
;; rd  gen 	(2)
9, 36
;; rd  kill	(9)
9, 10, 11, 12, 13, 14, 15, 16, 36
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(26)
1, 2, 3, 4, 5, 6, 7, 8, 9, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36
;;  UD chains for artificial uses
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 25 { d17(bb 0 insn -1) }
;;   reg 26 { d18(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 46
;;      reg 133 { d19(bb 7 insn 30) }
;;   UD chains for insn luid 1 uid 47
;;      reg 149 { d36(bb 10 insn 46) }
;;   UD chains for insn luid 2 uid 48
;;      reg 24 { d9(bb 10 insn 47) }

( 10 )->[11]->( 14 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u61(11){ d5(bb 0 insn -1) }u62(13){ d7(bb 0 insn -1) }u63(25){ d17(bb 0 insn -1) }u64(26){ d18(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 135 150 151 152
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 135 150 151 152
;; live  kill	
;; rd  in  	(26)
1, 2, 3, 4, 5, 6, 7, 8, 9, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36
;; rd  gen 	(4)
21, 37, 38, 39
;; rd  kill	(6)
21, 22, 23, 37, 38, 39
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; rd  out 	(30)
1, 2, 3, 4, 5, 6, 7, 8, 9, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39
;;  UD chains for artificial uses
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 25 { d17(bb 0 insn -1) }
;;   reg 26 { d18(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 51
;;      reg 150 { d37(bb 11 insn 50) }
;;   UD chains for insn luid 2 uid 52
;;      reg 152 { d39(bb 11 insn 51) }
;;   UD chains for insn luid 3 uid 53
;;      reg 151 { d38(bb 11 insn 52) }

( 2 9 6 5 )->[12]->( 14 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u68(11){ d5(bb 0 insn -1) }u69(13){ d7(bb 0 insn -1) }u70(25){ d17(bb 0 insn -1) }u71(26){ d18(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 135
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 135
;; live  kill	
;; rd  in  	(28)
1, 2, 3, 4, 5, 6, 7, 8, 10, 13, 14, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35
;; rd  gen 	(1)
23
;; rd  kill	(3)
21, 22, 23
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; rd  out 	(29)
1, 2, 3, 4, 5, 6, 7, 8, 10, 13, 14, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35
;;  UD chains for artificial uses
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 25 { d17(bb 0 insn -1) }
;;   reg 26 { d18(bb 0 insn -1) }

( 10 7 )->[13]->( 14 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u72(11){ d5(bb 0 insn -1) }u73(13){ d7(bb 0 insn -1) }u74(25){ d17(bb 0 insn -1) }u75(26){ d18(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 135
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 135
;; live  kill	
;; rd  in  	(27)
1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36
;; rd  gen 	(1)
22
;; rd  kill	(3)
21, 22, 23
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; rd  out 	(28)
1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36
;;  UD chains for artificial uses
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 25 { d17(bb 0 insn -1) }
;;   reg 26 { d18(bb 0 insn -1) }

( 13 11 12 )->[14]->( 1 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u76(11){ d5(bb 0 insn -1) }u77(13){ d7(bb 0 insn -1) }u78(25){ d17(bb 0 insn -1) }u79(26){ d18(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(37)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39
;; rd  gen 	(1)
0
;; rd  kill	(2)
0, 1
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(37)
0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39
;;  UD chains for artificial uses
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 25 { d17(bb 0 insn -1) }
;;   reg 26 { d18(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 71
;;      reg 135 { d23(bb 12 insn 59) d22(bb 13 insn 64) d21(bb 11 insn 53) }
;;   UD chains for insn luid 1 uid 77
;;      reg 0 { d0(bb 14 insn 71) }

( 14 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u82(0){ d0(bb 14 insn 71) }u83(11){ d5(bb 0 insn -1) }u84(13){ d7(bb 0 insn -1) }u85(14){ d8(bb 0 insn -1) }u86(25){ d17(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(37)
0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(37)
0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39
;;  UD chains for artificial uses
;;   reg 0 { d0(bb 14 insn 71) }
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 14 { d8(bb 0 insn -1) }
;;   reg 25 { d17(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 8 to worklist
  Adding insn 13 to worklist
  Adding insn 19 to worklist
  Adding insn 101 to worklist
  Adding insn 27 to worklist
  Adding insn 33 to worklist
  Adding insn 37 to worklist
  Adding insn 43 to worklist
  Adding insn 48 to worklist
  Adding insn 103 to worklist
  Adding insn 105 to worklist
  Adding insn 77 to worklist
Finished finding needed instructions:
  Adding insn 71 to worklist
Processing use of (reg 135 [ D.14872 ]) in insn 71:
  Adding insn 59 to worklist
  Adding insn 64 to worklist
  Adding insn 53 to worklist
Processing use of (reg 151) in insn 53:
  Adding insn 52 to worklist
Processing use of (reg 152 [ elf_hwcap ]) in insn 52:
  Adding insn 51 to worklist
Processing use of (reg 150) in insn 51:
  Adding insn 50 to worklist
Processing use of (reg 0 r0) in insn 77:
Processing use of (reg 24 cc) in insn 48:
  Adding insn 47 to worklist
Processing use of (reg 149) in insn 47:
  Adding insn 46 to worklist
Processing use of (reg 133 [ eflags ]) in insn 46:
  Adding insn 30 to worklist
Processing use of (reg 137 [ x ]) in insn 30:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 24 cc) in insn 43:
  Adding insn 42 to worklist
Processing use of (reg 147) in insn 42:
  Adding insn 41 to worklist
Processing use of (reg 148 [ elf_hwcap ]) in insn 41:
  Adding insn 40 to worklist
Processing use of (reg 146) in insn 40:
  Adding insn 39 to worklist
Processing use of (reg 24 cc) in insn 37:
  Adding insn 36 to worklist
Processing use of (reg 145) in insn 36:
  Adding insn 35 to worklist
Processing use of (reg 133 [ eflags ]) in insn 35:
Processing use of (reg 24 cc) in insn 33:
  Adding insn 32 to worklist
Processing use of (reg 144) in insn 32:
  Adding insn 31 to worklist
Processing use of (reg 133 [ eflags ]) in insn 31:
Processing use of (reg 24 cc) in insn 27:
  Adding insn 26 to worklist
Processing use of (reg 143) in insn 26:
  Adding insn 25 to worklist
Processing use of (reg 134 [ D.14873 ]) in insn 25:
  Adding insn 10 to worklist
Processing use of (reg 137 [ x ]) in insn 10:
Processing use of (reg 24 cc) in insn 19:
  Adding insn 18 to worklist
Processing use of (reg 141) in insn 18:
  Adding insn 17 to worklist
Processing use of (reg 142 [ elf_hwcap ]) in insn 17:
  Adding insn 16 to worklist
Processing use of (reg 140) in insn 16:
  Adding insn 15 to worklist
Processing use of (reg 24 cc) in insn 13:
  Adding insn 12 to worklist
Processing use of (reg 139) in insn 12:
  Adding insn 11 to worklist
Processing use of (reg 134 [ D.14873 ]) in insn 11:
Processing use of (reg 24 cc) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 138 [ <variable>.e_machine ]) in insn 7:
  Adding insn 6 to worklist
Processing use of (reg 137 [ x ]) in insn 6:


elf_check_arch

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 24[cc]
;;  ref usage 	r0={2d,3u} r1={1d} r2={1d} r3={1d} r11={1d,14u} r12={1d} r13={1d,14u} r14={1d,1u} r24={8d,8u} r25={1d,14u} r26={1d,13u} r133={1d,3u} r134={1d,2u} r135={3d,1u} r137={1d,3u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} 
;;    total ref usage 131{40d,91u,0e} in 42{42 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16
0[0,2] 1[2,1] 2[3,1] 3[4,1] 11[5,1] 12[6,1] 13[7,1] 14[8,1] 24[9,8] 25[17,1] 26[18,1] 133[19,1] 134[20,1] 135[21,3] 137[24,1] 138[25,1] 139[26,1] 140[27,1] 141[28,1] 142[29,1] 143[30,1] 144[31,1] 145[32,1] 146[33,1] 147[34,1] 148[35,1] 149[36,1] 150[37,1] 151[38,1] 152[39,1] 
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 137 138
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 137 138
;; live  kill	
;; rd  in  	(10)
1, 2, 3, 4, 5, 6, 7, 8, 17, 18
;; rd  gen 	(3)
16, 24, 25
;; rd  kill	(10)
9, 10, 11, 12, 13, 14, 15, 16, 24, 25

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 arch/arm/kernel/elf.c:8 (set (reg/v/f:SI 137 [ x ])
        (reg:SI 0 r0 [ x ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ x ])
        (nil)))

(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 3 7 2 arch/arm/kernel/elf.c:12 (set (reg:SI 138 [ <variable>.e_machine ])
        (zero_extend:SI (mem/s/j:HI (plus:SI (reg/v/f:SI 137 [ x ])
                    (const_int 18 [0x12])) [0 <variable>.e_machine+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 7 6 8 2 arch/arm/kernel/elf.c:12 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 138 [ <variable>.e_machine ])
            (const_int 40 [0x28]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 138 [ <variable>.e_machine ])
        (nil)))

(jump_insn 8 7 9 2 arch/arm/kernel/elf.c:12 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 57)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6218 [0x184a])
            (nil))))
;; End of basic block 2 -> ( 12 3)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; rd  out 	(13)
1, 2, 3, 4, 5, 6, 7, 8, 16, 17, 18, 24, 25


;; Succ edge  12 [62.2%] 
;; Succ edge  3 [37.8%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(11){ }u9(13){ }u10(25){ }u11(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc] 134 139
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; live  gen 	 24 [cc] 134 139
;; live  kill	
;; rd  in  	(13)
1, 2, 3, 4, 5, 6, 7, 8, 16, 17, 18, 24, 25
;; rd  gen 	(3)
15, 20, 26
;; rd  kill	(10)
9, 10, 11, 12, 13, 14, 15, 16, 20, 26

;; Pred edge  2 [37.8%]  (fallthru)
(note 9 8 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 10 9 11 3 arch/arm/kernel/elf.c:16 (set (reg:SI 134 [ D.14873 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 137 [ x ])
                (const_int 24 [0x18])) [0 <variable>.e_entry+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 11 10 12 3 arch/arm/kernel/elf.c:16 (set (reg:SI 139)
        (and:SI (reg:SI 134 [ D.14873 ])
            (const_int 1 [0x1]))) 67 {*arm_andsi3_insn} (nil))

(insn 12 11 13 3 arch/arm/kernel/elf.c:16 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 139)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 139)
        (nil)))

(jump_insn 13 12 14 3 arch/arm/kernel/elf.c:16 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 23)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 3 -> ( 4 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 137
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 137
;; rd  out 	(15)
1, 2, 3, 4, 5, 6, 7, 8, 15, 17, 18, 20, 24, 25, 26


;; Succ edge  4 [50.0%]  (fallthru)
;; Succ edge  6 [50.0%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u16(11){ }u17(13){ }u18(25){ }u19(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 140 141 142
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; live  gen 	 24 [cc] 140 141 142
;; live  kill	
;; rd  in  	(15)
1, 2, 3, 4, 5, 6, 7, 8, 15, 17, 18, 20, 24, 25, 26
;; rd  gen 	(4)
14, 27, 28, 29
;; rd  kill	(11)
9, 10, 11, 12, 13, 14, 15, 16, 27, 28, 29

;; Pred edge  3 [50.0%]  (fallthru)
(note 14 13 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 15 14 16 4 arch/arm/kernel/elf.c:17 (set (reg/f:SI 140)
        (symbol_ref:SI ("elf_hwcap") [flags 0xc0] <var_decl 0x512ba240 elf_hwcap>)) 167 {*arm_movsi_insn} (nil))

(insn 16 15 17 4 arch/arm/kernel/elf.c:17 (set (reg:SI 142 [ elf_hwcap ])
        (mem/c/i:SI (reg/f:SI 140) [0 elf_hwcap+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 140)
        (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("elf_hwcap") [flags 0xc0] <var_decl 0x512ba240 elf_hwcap>) [0 elf_hwcap+0 S4 A32])
            (nil))))

(insn 17 16 18 4 arch/arm/kernel/elf.c:17 (set (reg:SI 141)
        (and:SI (reg:SI 142 [ elf_hwcap ])
            (const_int 4 [0x4]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 142 [ elf_hwcap ])
        (nil)))

(insn 18 17 19 4 arch/arm/kernel/elf.c:17 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 141)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 141)
        (nil)))

(jump_insn 19 18 100 4 arch/arm/kernel/elf.c:17 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 28)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
            (nil))))
;; End of basic block 4 -> ( 5 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; rd  out 	(18)
1, 2, 3, 4, 5, 6, 7, 8, 14, 17, 18, 20, 24, 25, 26, 27, 28, 29


;; Succ edge  5 [39.0%]  (fallthru)
;; Succ edge  7 [61.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(18)
1, 2, 3, 4, 5, 6, 7, 8, 14, 17, 18, 20, 24, 25, 26, 27, 28, 29
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  4 [39.0%]  (fallthru)
(note 100 19 101 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(jump_insn 101 100 102 5 (set (pc)
        (label_ref 57)) -1 (nil))
;; End of basic block 5 -> ( 12)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(18)
1, 2, 3, 4, 5, 6, 7, 8, 14, 17, 18, 20, 24, 25, 26, 27, 28, 29


;; Succ edge  12 [100.0%] 

(barrier 102 101 23)

;; Start of basic block ( 3) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u24(11){ }u25(13){ }u26(25){ }u27(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 24 [cc] 143
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 137
;; live  gen 	 24 [cc] 143
;; live  kill	
;; rd  in  	(15)
1, 2, 3, 4, 5, 6, 7, 8, 15, 17, 18, 20, 24, 25, 26
;; rd  gen 	(2)
13, 30
;; rd  kill	(9)
9, 10, 11, 12, 13, 14, 15, 16, 30

;; Pred edge  3 [50.0%] 
(code_label 23 102 24 6 3 "" [1 uses])

(note 24 23 25 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 25 24 26 6 arch/arm/kernel/elf.c:19 (set (reg:SI 143)
        (and:SI (reg:SI 134 [ D.14873 ])
            (const_int 3 [0x3]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 134 [ D.14873 ])
        (nil)))

(insn 26 25 27 6 arch/arm/kernel/elf.c:19 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 143)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 143)
        (nil)))

(jump_insn 27 26 28 6 arch/arm/kernel/elf.c:19 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 57)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 6 -> ( 12 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; rd  out 	(16)
1, 2, 3, 4, 5, 6, 7, 8, 13, 17, 18, 20, 24, 25, 26, 30


;; Succ edge  12 [39.0%] 
;; Succ edge  7 [61.0%]  (fallthru)

;; Start of basic block ( 6 4) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u31(11){ }u32(13){ }u33(25){ }u34(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc] 133 144
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; live  gen 	 24 [cc] 133 144
;; live  kill	
;; rd  in  	(20)
1, 2, 3, 4, 5, 6, 7, 8, 13, 14, 17, 18, 20, 24, 25, 26, 27, 28, 29, 30
;; rd  gen 	(3)
12, 19, 31
;; rd  kill	(10)
9, 10, 11, 12, 13, 14, 15, 16, 19, 31

;; Pred edge  6 [61.0%]  (fallthru)
;; Pred edge  4 [61.0%] 
(code_label 28 27 29 7 4 "" [1 uses])

(note 29 28 30 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 30 29 31 7 arch/arm/kernel/elf.c:22 (set (reg/v:SI 133 [ eflags ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 137 [ x ])
                (const_int 36 [0x24])) [0 <variable>.e_flags+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 137 [ x ])
        (nil)))

(insn 31 30 32 7 arch/arm/kernel/elf.c:23 (set (reg:SI 144)
        (and:SI (reg/v:SI 133 [ eflags ])
            (const_int -16777216 [0xffffffffff000000]))) 67 {*arm_andsi3_insn} (nil))

(insn 32 31 33 7 arch/arm/kernel/elf.c:23 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 144)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 144)
        (nil)))

(jump_insn 33 32 34 7 arch/arm/kernel/elf.c:23 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 62)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 7 -> ( 8 13)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(21)
1, 2, 3, 4, 5, 6, 7, 8, 12, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 30, 31


;; Succ edge  8 [50.0%]  (fallthru)
;; Succ edge  13 [50.0%] 

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u39(11){ }u40(13){ }u41(25){ }u42(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc] 145
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  gen 	 24 [cc] 145
;; live  kill	
;; rd  in  	(21)
1, 2, 3, 4, 5, 6, 7, 8, 12, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 30, 31
;; rd  gen 	(2)
11, 32
;; rd  kill	(9)
9, 10, 11, 12, 13, 14, 15, 16, 32

;; Pred edge  7 [50.0%]  (fallthru)
(note 34 33 35 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 35 34 36 8 arch/arm/kernel/elf.c:27 (set (reg:SI 145)
        (and:SI (reg/v:SI 133 [ eflags ])
            (const_int 8 [0x8]))) 67 {*arm_andsi3_insn} (nil))

(insn 36 35 37 8 arch/arm/kernel/elf.c:27 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 145)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 145)
        (nil)))

(jump_insn 37 36 38 8 arch/arm/kernel/elf.c:27 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 44)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 8 -> ( 9 10)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(22)
1, 2, 3, 4, 5, 6, 7, 8, 11, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 30, 31, 32


;; Succ edge  9 [50.0%]  (fallthru)
;; Succ edge  10 [50.0%] 

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u46(11){ }u47(13){ }u48(25){ }u49(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 146 147 148
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  gen 	 24 [cc] 146 147 148
;; live  kill	
;; rd  in  	(22)
1, 2, 3, 4, 5, 6, 7, 8, 11, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 30, 31, 32
;; rd  gen 	(4)
10, 33, 34, 35
;; rd  kill	(11)
9, 10, 11, 12, 13, 14, 15, 16, 33, 34, 35

;; Pred edge  8 [50.0%]  (fallthru)
(note 38 37 39 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 39 38 40 9 arch/arm/kernel/elf.c:27 discrim 1 (set (reg/f:SI 146)
        (symbol_ref:SI ("elf_hwcap") [flags 0xc0] <var_decl 0x512ba240 elf_hwcap>)) 167 {*arm_movsi_insn} (nil))

(insn 40 39 41 9 arch/arm/kernel/elf.c:27 discrim 1 (set (reg:SI 148 [ elf_hwcap ])
        (mem/c/i:SI (reg/f:SI 146) [0 elf_hwcap+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 146)
        (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("elf_hwcap") [flags 0xc0] <var_decl 0x512ba240 elf_hwcap>) [0 elf_hwcap+0 S4 A32])
            (nil))))

(insn 41 40 42 9 arch/arm/kernel/elf.c:27 discrim 1 (set (reg:SI 147)
        (and:SI (reg:SI 148 [ elf_hwcap ])
            (const_int 8 [0x8]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 148 [ elf_hwcap ])
        (nil)))

(insn 42 41 43 9 arch/arm/kernel/elf.c:27 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 147)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 147)
        (nil)))

(jump_insn 43 42 44 9 arch/arm/kernel/elf.c:27 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 57)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 9 -> ( 12 10)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(25)
1, 2, 3, 4, 5, 6, 7, 8, 10, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35


;; Succ edge  12 [39.0%] 
;; Succ edge  10 [61.0%]  (fallthru)

;; Start of basic block ( 8 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u54(11){ }u55(13){ }u56(25){ }u57(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc] 149
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  gen 	 24 [cc] 149
;; live  kill	
;; rd  in  	(26)
1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35
;; rd  gen 	(2)
9, 36
;; rd  kill	(9)
9, 10, 11, 12, 13, 14, 15, 16, 36

;; Pred edge  8 [50.0%] 
;; Pred edge  9 [61.0%]  (fallthru)
(code_label 44 43 45 10 6 "" [1 uses])

(note 45 44 46 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 46 45 47 10 arch/arm/kernel/elf.c:30 (set (reg:SI 149)
        (and:SI (reg/v:SI 133 [ eflags ])
            (const_int 1536 [0x600]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg/v:SI 133 [ eflags ])
        (nil)))

(insn 47 46 48 10 arch/arm/kernel/elf.c:30 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 149)
            (const_int 1024 [0x400]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 149)
        (nil)))

(jump_insn 48 47 49 10 arch/arm/kernel/elf.c:30 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 62)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 10 -> ( 11 13)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(26)
1, 2, 3, 4, 5, 6, 7, 8, 9, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36


;; Succ edge  11 [28.0%]  (fallthru)
;; Succ edge  13 [72.0%] 

;; Start of basic block ( 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u61(11){ }u62(13){ }u63(25){ }u64(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 135 150 151 152
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 135 150 151 152
;; live  kill	
;; rd  in  	(26)
1, 2, 3, 4, 5, 6, 7, 8, 9, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36
;; rd  gen 	(4)
21, 37, 38, 39
;; rd  kill	(6)
21, 22, 23, 37, 38, 39

;; Pred edge  10 [28.0%]  (fallthru)
(note 49 48 50 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 50 49 51 11 arch/arm/kernel/elf.c:13 (set (reg/f:SI 150)
        (symbol_ref:SI ("elf_hwcap") [flags 0xc0] <var_decl 0x512ba240 elf_hwcap>)) 167 {*arm_movsi_insn} (nil))

(insn 51 50 52 11 arch/arm/kernel/elf.c:13 (set (reg:SI 152 [ elf_hwcap ])
        (mem/c/i:SI (reg/f:SI 150) [0 elf_hwcap+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 150)
        (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("elf_hwcap") [flags 0xc0] <var_decl 0x512ba240 elf_hwcap>) [0 elf_hwcap+0 S4 A32])
            (nil))))

(insn 52 51 53 11 arch/arm/kernel/elf.c:13 (set (reg:SI 151)
        (lshiftrt:SI (reg:SI 152 [ elf_hwcap ])
            (const_int 6 [0x6]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 152 [ elf_hwcap ])
        (nil)))

(insn 53 52 103 11 arch/arm/kernel/elf.c:13 (set (reg:SI 135 [ D.14872 ])
        (and:SI (reg:SI 151)
            (const_int 1 [0x1]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 151)
        (nil)))

(jump_insn 103 53 104 11 (set (pc)
        (label_ref 65)) -1 (nil))
;; End of basic block 11 -> ( 14)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; rd  out 	(30)
1, 2, 3, 4, 5, 6, 7, 8, 9, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39


;; Succ edge  14 [100.0%] 

(barrier 104 103 57)

;; Start of basic block ( 2 9 6 5) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u68(11){ }u69(13){ }u70(25){ }u71(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 135
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 135
;; live  kill	
;; rd  in  	(28)
1, 2, 3, 4, 5, 6, 7, 8, 10, 13, 14, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35
;; rd  gen 	(1)
23
;; rd  kill	(3)
21, 22, 23

;; Pred edge  2 [62.2%] 
;; Pred edge  9 [39.0%] 
;; Pred edge  6 [39.0%] 
;; Pred edge  5 [100.0%] 
(code_label 57 104 58 12 2 "" [4 uses])

(note 58 57 59 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 59 58 105 12 arch/arm/kernel/elf.c:13 (set (reg:SI 135 [ D.14872 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(jump_insn 105 59 106 12 (set (pc)
        (label_ref 65)) -1 (nil))
;; End of basic block 12 -> ( 14)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; rd  out 	(29)
1, 2, 3, 4, 5, 6, 7, 8, 10, 13, 14, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35


;; Succ edge  14 [100.0%] 

(barrier 106 105 62)

;; Start of basic block ( 10 7) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u72(11){ }u73(13){ }u74(25){ }u75(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 135
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 135
;; live  kill	
;; rd  in  	(27)
1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36
;; rd  gen 	(1)
22
;; rd  kill	(3)
21, 22, 23

;; Pred edge  10 [72.0%] 
;; Pred edge  7 [50.0%] 
(code_label 62 106 63 13 5 "" [2 uses])

(note 63 62 64 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 64 63 65 13 arch/arm/kernel/elf.c:36 (set (reg:SI 135 [ D.14872 ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 13 -> ( 14)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; rd  out 	(28)
1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36


;; Succ edge  14 [100.0%]  (fallthru)

;; Start of basic block ( 13 11 12) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u76(11){ }u77(13){ }u78(25){ }u79(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(37)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39
;; rd  gen 	(1)
0
;; rd  kill	(2)
0, 1

;; Pred edge  13 [100.0%]  (fallthru)
;; Pred edge  11 [100.0%] 
;; Pred edge  12 [100.0%] 
(code_label 65 64 66 14 7 "" [2 uses])

(note 66 65 71 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 71 66 77 14 arch/arm/kernel/elf.c:37 (set (reg/i:SI 0 r0)
        (reg:SI 135 [ D.14872 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 135 [ D.14872 ])
        (nil)))

(insn 77 71 0 14 arch/arm/kernel/elf.c:37 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 14 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(37)
0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function arm_elf_read_implies_exec (arm_elf_read_implies_exec)[0:795]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 10 (  1.7)
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 10 (  1.7)
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 10 (  1.7)


arm_elf_read_implies_exec

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={3d,3u} r1={2d,1u} r2={2d} r3={2d} r11={1d,5u} r12={2d} r13={1d,6u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={3d,2u} r25={1d,5u} r26={1d,4u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,1u} r134={2d,1u} r137={1d,1u} 
;;    total ref usage 164{134d,30u,0e} in 11{10 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129
0[0,3] 1[3,2] 2[5,2] 3[7,2] 11[9,1] 12[10,2] 13[12,1] 14[13,2] 15[15,1] 16[16,1] 17[17,1] 18[18,1] 19[19,1] 20[20,1] 21[21,1] 22[22,1] 23[23,1] 24[24,3] 25[27,1] 26[28,1] 27[29,1] 28[30,1] 29[31,1] 30[32,1] 31[33,1] 32[34,1] 33[35,1] 34[36,1] 35[37,1] 36[38,1] 37[39,1] 38[40,1] 39[41,1] 40[42,1] 41[43,1] 42[44,1] 43[45,1] 44[46,1] 45[47,1] 46[48,1] 47[49,1] 48[50,1] 49[51,1] 50[52,1] 51[53,1] 52[54,1] 53[55,1] 54[56,1] 55[57,1] 56[58,1] 57[59,1] 58[60,1] 59[61,1] 60[62,1] 61[63,1] 62[64,1] 63[65,1] 64[66,1] 65[67,1] 66[68,1] 67[69,1] 68[70,1] 69[71,1] 70[72,1] 71[73,1] 72[74,1] 73[75,1] 74[76,1] 75[77,1] 76[78,1] 77[79,1] 78[80,1] 79[81,1] 80[82,1] 81[83,1] 82[84,1] 83[85,1] 84[86,1] 85[87,1] 86[88,1] 87[89,1] 88[90,1] 89[91,1] 90[92,1] 91[93,1] 92[94,1] 93[95,1] 94[96,1] 95[97,1] 96[98,1] 97[99,1] 98[100,1] 99[101,1] 100[102,1] 101[103,1] 102[104,1] 103[105,1] 104[106,1] 105[107,1] 106[108,1] 107[109,1] 108[110,1] 109[111,1] 110[112,1] 111[113,1] 112[114,1] 113[115,1] 114[116,1] 115[117,1] 116[118,1] 117[119,1] 118[120,1] 119[121,1] 120[122,1] 121[123,1] 122[124,1] 123[125,1] 124[126,1] 125[127,1] 126[128,1] 127[129,1] 133[130,1] 134[131,2] 137[133,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d2(0){ }d4(1){ }d6(2){ }d8(3){ }d9(11){ }d11(12){ }d12(13){ }d14(14){ }d27(25){ }d28(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
2, 4, 6, 8, 9, 11, 12, 14, 27, 28
;; rd  kill	(17)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 27, 28
;; lr  out 	 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
2, 4, 6, 8, 9, 11, 12, 14, 27, 28

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d9(bb 0 insn -1) }u1(13){ d12(bb 0 insn -1) }u2(25){ d27(bb 0 insn -1) }u3(26){ d28(bb 0 insn -1) }}
;; lr  in  	 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 137
;; live  in  	 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 137
;; live  kill	
;; rd  in  	(10)
2, 4, 6, 8, 9, 11, 12, 14, 27, 28
;; rd  gen 	(2)
26, 133
;; rd  kill	(4)
24, 25, 26, 133
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(12)
2, 4, 6, 8, 9, 11, 12, 14, 26, 27, 28, 133
;;  UD chains for artificial uses
;;   reg 11 { d9(bb 0 insn -1) }
;;   reg 13 { d12(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 3
;;      reg 1 { d4(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 7
;;      reg 137 { d133(bb 2 insn 3) }
;;   UD chains for insn luid 2 uid 8
;;      reg 24 { d26(bb 2 insn 7) }

( 2 )->[3]->( 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u7(11){ d9(bb 0 insn -1) }u8(13){ d12(bb 0 insn -1) }u9(25){ d27(bb 0 insn -1) }u10(26){ d28(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 134
;; live  kill	
;; rd  in  	(12)
2, 4, 6, 8, 9, 11, 12, 14, 26, 27, 28, 133
;; rd  gen 	(1)
132
;; rd  kill	(2)
131, 132
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; rd  out 	(13)
2, 4, 6, 8, 9, 11, 12, 14, 26, 27, 28, 132, 133
;;  UD chains for artificial uses
;;   reg 11 { d9(bb 0 insn -1) }
;;   reg 13 { d12(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }

( 2 )->[4]->( 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u11(11){ d9(bb 0 insn -1) }u12(13){ d12(bb 0 insn -1) }u13(25){ d27(bb 0 insn -1) }u14(26){ d28(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 24 [cc] 133 134
;; live  kill	 14 [lr]
;; rd  in  	(12)
2, 4, 6, 8, 9, 11, 12, 14, 26, 27, 28, 133
;; rd  gen 	(4)
1, 24, 130, 131
;; rd  kill	(11)
0, 1, 2, 13, 14, 24, 25, 26, 130, 131, 132
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; rd  out 	(13)
1, 4, 6, 8, 9, 11, 12, 24, 27, 28, 130, 131, 133
;;  UD chains for artificial uses
;;   reg 11 { d9(bb 0 insn -1) }
;;   reg 13 { d12(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 15
;;      reg 13 { d12(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 16
;;      reg 0 { d1(bb 4 insn 15) }
;;   UD chains for insn luid 2 uid 17
;;      reg 133 { d130(bb 4 insn 16) }
;;   UD chains for insn luid 3 uid 18
;;      reg 24 { d24(bb 4 insn 17) }

( 4 3 )->[5]->( 1 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u19(11){ d9(bb 0 insn -1) }u20(13){ d12(bb 0 insn -1) }u21(25){ d27(bb 0 insn -1) }u22(26){ d28(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(17)
1, 2, 4, 6, 8, 9, 11, 12, 14, 24, 26, 27, 28, 130, 131, 132, 133
;; rd  gen 	(1)
0
;; rd  kill	(3)
0, 1, 2
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(16)
0, 4, 6, 8, 9, 11, 12, 14, 24, 26, 27, 28, 130, 131, 132, 133
;;  UD chains for artificial uses
;;   reg 11 { d9(bb 0 insn -1) }
;;   reg 13 { d12(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 26
;;      reg 134 { d132(bb 3 insn 10) d131(bb 4 insn 18) }
;;   UD chains for insn luid 1 uid 32
;;      reg 0 { d0(bb 5 insn 26) }

( 5 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u25(0){ d0(bb 5 insn 26) }u26(11){ d9(bb 0 insn -1) }u27(13){ d12(bb 0 insn -1) }u28(14){ d14(bb 0 insn -1) }u29(25){ d27(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(16)
0, 4, 6, 8, 9, 11, 12, 14, 24, 26, 27, 28, 130, 131, 132, 133
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(16)
0, 4, 6, 8, 9, 11, 12, 14, 24, 26, 27, 28, 130, 131, 132, 133
;;  UD chains for artificial uses
;;   reg 0 { d0(bb 5 insn 26) }
;;   reg 11 { d9(bb 0 insn -1) }
;;   reg 13 { d12(bb 0 insn -1) }
;;   reg 14 { d14(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 8 to worklist
  Adding insn 36 to worklist
  Adding insn 15 to worklist
  Adding insn 32 to worklist
Finished finding needed instructions:
  Adding insn 26 to worklist
Processing use of (reg 134 [ D.14939 ]) in insn 26:
  Adding insn 10 to worklist
  Adding insn 18 to worklist
Processing use of (reg 24 cc) in insn 18:
  Adding insn 17 to worklist
Processing use of (reg 133 [ D.14940 ]) in insn 17:
  Adding insn 16 to worklist
Processing use of (reg 0 r0) in insn 16:
Processing use of (reg 0 r0) in insn 32:
Processing use of (reg 13 sp) in insn 15:
Processing use of (reg 24 cc) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 137 [ executable_stack ]) in insn 7:
  Adding insn 3 to worklist
Processing use of (reg 1 r1) in insn 3:


arm_elf_read_implies_exec

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={3d,3u} r1={2d,1u} r2={2d} r3={2d} r11={1d,5u} r12={2d} r13={1d,6u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={3d,2u} r25={1d,5u} r26={1d,4u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,1u} r134={2d,1u} r137={1d,1u} 
;;    total ref usage 164{134d,30u,0e} in 11{10 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129
0[0,3] 1[3,2] 2[5,2] 3[7,2] 11[9,1] 12[10,2] 13[12,1] 14[13,2] 15[15,1] 16[16,1] 17[17,1] 18[18,1] 19[19,1] 20[20,1] 21[21,1] 22[22,1] 23[23,1] 24[24,3] 25[27,1] 26[28,1] 27[29,1] 28[30,1] 29[31,1] 30[32,1] 31[33,1] 32[34,1] 33[35,1] 34[36,1] 35[37,1] 36[38,1] 37[39,1] 38[40,1] 39[41,1] 40[42,1] 41[43,1] 42[44,1] 43[45,1] 44[46,1] 45[47,1] 46[48,1] 47[49,1] 48[50,1] 49[51,1] 50[52,1] 51[53,1] 52[54,1] 53[55,1] 54[56,1] 55[57,1] 56[58,1] 57[59,1] 58[60,1] 59[61,1] 60[62,1] 61[63,1] 62[64,1] 63[65,1] 64[66,1] 65[67,1] 66[68,1] 67[69,1] 68[70,1] 69[71,1] 70[72,1] 71[73,1] 72[74,1] 73[75,1] 74[76,1] 75[77,1] 76[78,1] 77[79,1] 78[80,1] 79[81,1] 80[82,1] 81[83,1] 82[84,1] 83[85,1] 84[86,1] 85[87,1] 86[88,1] 87[89,1] 88[90,1] 89[91,1] 90[92,1] 91[93,1] 92[94,1] 93[95,1] 94[96,1] 95[97,1] 96[98,1] 97[99,1] 98[100,1] 99[101,1] 100[102,1] 101[103,1] 102[104,1] 103[105,1] 104[106,1] 105[107,1] 106[108,1] 107[109,1] 108[110,1] 109[111,1] 110[112,1] 111[113,1] 112[114,1] 113[115,1] 114[116,1] 115[117,1] 116[118,1] 117[119,1] 118[120,1] 119[121,1] 120[122,1] 121[123,1] 122[124,1] 123[125,1] 124[126,1] 125[127,1] 126[128,1] 127[129,1] 133[130,1] 134[131,2] 137[133,1] 
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 137
;; live  in  	 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 137
;; live  kill	
;; rd  in  	(10)
2, 4, 6, 8, 9, 11, 12, 14, 27, 28
;; rd  gen 	(2)
26, 133
;; rd  kill	(4)
24, 25, 26, 133

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 3 5 4 2 arch/arm/kernel/elf.c:76 (set (reg/v:SI 137 [ executable_stack ])
        (reg:SI 1 r1 [ executable_stack ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ executable_stack ])
        (nil)))

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 8 2 arch/arm/kernel/elf.c:77 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 137 [ executable_stack ])
            (const_int 1 [0x1]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 137 [ executable_stack ])
        (nil)))

(jump_insn 8 7 9 2 arch/arm/kernel/elf.c:77 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 13)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 1990 [0x7c6])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(12)
2, 4, 6, 8, 9, 11, 12, 14, 26, 27, 28, 133


;; Succ edge  3 [80.1%]  (fallthru)
;; Succ edge  4 [19.9%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u7(11){ }u8(13){ }u9(25){ }u10(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 134
;; live  kill	
;; rd  in  	(12)
2, 4, 6, 8, 9, 11, 12, 14, 26, 27, 28, 133
;; rd  gen 	(1)
132
;; rd  kill	(2)
131, 132

;; Pred edge  2 [80.1%]  (fallthru)
(note 9 8 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 10 9 36 3 arch/arm/kernel/elf.c:78 (set (reg:SI 134 [ D.14939 ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(jump_insn 36 10 37 3 (set (pc)
        (label_ref 20)) -1 (nil))
;; End of basic block 3 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; rd  out 	(13)
2, 4, 6, 8, 9, 11, 12, 14, 26, 27, 28, 132, 133


;; Succ edge  5 [100.0%] 

(barrier 37 36 13)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u11(11){ }u12(13){ }u13(25){ }u14(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 24 [cc] 133 134
;; live  kill	 14 [lr]
;; rd  in  	(12)
2, 4, 6, 8, 9, 11, 12, 14, 26, 27, 28, 133
;; rd  gen 	(4)
1, 24, 130, 131
;; rd  kill	(11)
0, 1, 2, 13, 14, 24, 25, 26, 130, 131, 132

;; Pred edge  2 [19.9%] 
(code_label 13 37 14 4 13 "" [1 uses])

(note 14 13 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(call_insn 15 14 16 4 arch/arm/kernel/elf.c:79 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("cpu_architecture") [flags 0x41] <function_decl 0x512d9700 cpu_architecture>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (nil))

(insn 16 15 17 4 arch/arm/kernel/elf.c:79 (set (reg:SI 133 [ D.14940 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 17 16 18 4 arch/arm/kernel/elf.c:78 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 133 [ D.14940 ])
            (const_int 7 [0x7]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 133 [ D.14940 ])
        (nil)))

(insn 18 17 20 4 arch/arm/kernel/elf.c:78 (set (reg:SI 134 [ D.14939 ])
        (le:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))
;; End of basic block 4 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; rd  out 	(13)
1, 4, 6, 8, 9, 11, 12, 24, 27, 28, 130, 131, 133


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u19(11){ }u20(13){ }u21(25){ }u22(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(17)
1, 2, 4, 6, 8, 9, 11, 12, 14, 24, 26, 27, 28, 130, 131, 132, 133
;; rd  gen 	(1)
0
;; rd  kill	(3)
0, 1, 2

;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%] 
(code_label 20 18 21 5 14 "" [1 uses])

(note 21 20 26 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 26 21 32 5 arch/arm/kernel/elf.c:82 (set (reg/i:SI 0 r0)
        (reg:SI 134 [ D.14939 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 134 [ D.14939 ])
        (nil)))

(insn 32 26 0 5 arch/arm/kernel/elf.c:82 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 5 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(16)
0, 4, 6, 8, 9, 11, 12, 14, 24, 26, 27, 28, 130, 131, 132, 133


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function elf_set_personality (elf_set_personality)[0:794]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 12 n_edges 16 count 21 (  1.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 12 n_edges 16 count 22 (  1.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 12 n_edges 16 count 22 (  1.8)


elf_set_personality

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={7d,4u} r1={6d,2u} r2={4d} r3={4d} r11={1d,11u} r12={4d} r13={1d,17u,3d} r14={2d,1u} r15={3d} r16={3d} r17={3d} r18={3d} r19={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={8d,5u} r25={1d,11u} r26={1d,10u} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r81={3d} r82={3d} r83={3d} r84={3d} r85={3d} r86={3d} r87={3d} r88={3d} r89={3d} r90={3d} r91={3d} r92={3d} r93={3d} r94={3d} r95={3d} r96={3d} r97={3d} r98={3d} r99={3d} r100={3d} r101={3d} r102={3d} r103={3d} r104={3d} r105={3d} r106={3d} r107={3d} r108={3d} r109={3d} r110={3d} r111={3d} r112={3d} r113={3d} r114={3d} r115={3d} r116={3d} r117={3d} r118={3d} r119={3d} r120={3d} r121={3d} r122={3d} r123={3d} r124={3d} r125={3d} r126={3d} r127={3d} r136={2d,2u} r137={1d,3u,1d} r138={1d,1u} r139={1d,2u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} 
;;    total ref usage 473{387d,82u,4e} in 37{34 regular + 3 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368
0[0,7] 1[7,6] 2[13,4] 3[17,4] 11[21,1] 12[22,4] 13[26,1] 14[27,2] 15[29,3] 16[32,3] 17[35,3] 18[38,3] 19[41,3] 20[44,3] 21[47,3] 22[50,3] 23[53,3] 24[56,8] 25[64,1] 26[65,1] 27[66,3] 28[69,3] 29[72,3] 30[75,3] 31[78,3] 32[81,3] 33[84,3] 34[87,3] 35[90,3] 36[93,3] 37[96,3] 38[99,3] 39[102,3] 40[105,3] 41[108,3] 42[111,3] 43[114,3] 44[117,3] 45[120,3] 46[123,3] 47[126,3] 48[129,3] 49[132,3] 50[135,3] 51[138,3] 52[141,3] 53[144,3] 54[147,3] 55[150,3] 56[153,3] 57[156,3] 58[159,3] 59[162,3] 60[165,3] 61[168,3] 62[171,3] 63[174,3] 64[177,3] 65[180,3] 66[183,3] 67[186,3] 68[189,3] 69[192,3] 70[195,3] 71[198,3] 72[201,3] 73[204,3] 74[207,3] 75[210,3] 76[213,3] 77[216,3] 78[219,3] 79[222,3] 80[225,3] 81[228,3] 82[231,3] 83[234,3] 84[237,3] 85[240,3] 86[243,3] 87[246,3] 88[249,3] 89[252,3] 90[255,3] 91[258,3] 92[261,3] 93[264,3] 94[267,3] 95[270,3] 96[273,3] 97[276,3] 98[279,3] 99[282,3] 100[285,3] 101[288,3] 102[291,3] 103[294,3] 104[297,3] 105[300,3] 106[303,3] 107[306,3] 108[309,3] 109[312,3] 110[315,3] 111[318,3] 112[321,3] 113[324,3] 114[327,3] 115[330,3] 116[333,3] 117[336,3] 118[339,3] 119[342,3] 120[345,3] 121[348,3] 122[351,3] 123[354,3] 124[357,3] 125[360,3] 126[363,3] 127[366,3] 136[369,2] 137[371,1] 138[372,1] 139[373,1] 140[374,1] 141[375,1] 142[376,1] 143[377,1] 144[378,1] 145[379,1] 146[380,1] 147[381,1] 148[382,1] 150[383,1] 151[384,1] 152[385,1] 153[386,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d6(0){ }d12(1){ }d16(2){ }d20(3){ }d21(11){ }d25(12){ }d26(13){ }d28(14){ }d64(25){ }d65(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
6, 12, 16, 20, 21, 25, 26, 28, 64, 65
;; rd  kill	(31)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 64, 65
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
6, 12, 16, 20, 21, 25, 26, 28, 64, 65

( 0 )->[2]->( 3 5 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d21(bb 0 insn -1) }u1(13){ d26(bb 0 insn -1) }u2(25){ d64(bb 0 insn -1) }u3(26){ d65(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 137 138 139
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 137 138 139
;; live  kill	
;; rd  in  	(10)
6, 12, 16, 20, 21, 25, 26, 28, 64, 65
;; rd  gen 	(4)
63, 371, 372, 373
;; rd  kill	(11)
56, 57, 58, 59, 60, 61, 62, 63, 371, 372, 373
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 139
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 139
;; rd  out 	(14)
6, 12, 16, 20, 21, 25, 26, 28, 63, 64, 65, 371, 372, 373
;;  UD chains for artificial uses
;;   reg 11 { d21(bb 0 insn -1) }
;;   reg 13 { d26(bb 0 insn -1) }
;;   reg 25 { d64(bb 0 insn -1) }
;;   reg 26 { d65(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d6(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 6
;;      reg 138 { d372(bb 2 insn 2) }
;;   UD chains for insn luid 2 uid 7
;;      reg 137 { d371(bb 2 insn 6) }
;;   UD chains for insn luid 3 uid 8
;;      reg 139 { d373(bb 2 insn 7) }
;;   UD chains for insn luid 4 uid 9
;;      reg 24 { d63(bb 2 insn 8) }

( 2 )->[3]->( 4 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u9(11){ d21(bb 0 insn -1) }u10(13){ d26(bb 0 insn -1) }u11(25){ d64(bb 0 insn -1) }u12(26){ d65(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc] 140
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 139
;; live  gen 	 24 [cc] 140
;; live  kill	
;; rd  in  	(14)
6, 12, 16, 20, 21, 25, 26, 28, 63, 64, 65, 371, 372, 373
;; rd  gen 	(2)
62, 374
;; rd  kill	(9)
56, 57, 58, 59, 60, 61, 62, 63, 374
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 139
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 139
;; rd  out 	(15)
6, 12, 16, 20, 21, 25, 26, 28, 62, 64, 65, 371, 372, 373, 374
;;  UD chains for artificial uses
;;   reg 11 { d21(bb 0 insn -1) }
;;   reg 13 { d26(bb 0 insn -1) }
;;   reg 25 { d64(bb 0 insn -1) }
;;   reg 26 { d65(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 11
;;      reg 137 { d371(bb 2 insn 6) }
;;   UD chains for insn luid 1 uid 12
;;      reg 140 { d374(bb 3 insn 11) }
;;   UD chains for insn luid 2 uid 13
;;      reg 24 { d62(bb 3 insn 12) }

( 3 )->[4]->( 6 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u16(11){ d21(bb 0 insn -1) }u17(13){ d26(bb 0 insn -1) }u18(25){ d64(bb 0 insn -1) }u19(26){ d65(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 136
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 139
;; live  gen 	 136
;; live  kill	
;; rd  in  	(15)
6, 12, 16, 20, 21, 25, 26, 28, 62, 64, 65, 371, 372, 373, 374
;; rd  gen 	(1)
369
;; rd  kill	(2)
369, 370
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137
;; rd  out 	(16)
6, 12, 16, 20, 21, 25, 26, 28, 62, 64, 65, 369, 371, 372, 373, 374
;;  UD chains for artificial uses
;;   reg 11 { d21(bb 0 insn -1) }
;;   reg 13 { d26(bb 0 insn -1) }
;;   reg 25 { d64(bb 0 insn -1) }
;;   reg 26 { d65(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 15
;;      reg 139 { d373(bb 2 insn 7) }

( 2 3 )->[5]->( 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u21(11){ d21(bb 0 insn -1) }u22(13){ d26(bb 0 insn -1) }u23(25){ d64(bb 0 insn -1) }u24(26){ d65(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 136
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; live  gen 	 136
;; live  kill	
;; rd  in  	(16)
6, 12, 16, 20, 21, 25, 26, 28, 62, 63, 64, 65, 371, 372, 373, 374
;; rd  gen 	(1)
370
;; rd  kill	(2)
369, 370
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137
;; rd  out 	(17)
6, 12, 16, 20, 21, 25, 26, 28, 62, 63, 64, 65, 370, 371, 372, 373, 374
;;  UD chains for artificial uses
;;   reg 11 { d21(bb 0 insn -1) }
;;   reg 13 { d26(bb 0 insn -1) }
;;   reg 25 { d64(bb 0 insn -1) }
;;   reg 26 { d65(bb 0 insn -1) }

( 5 4 )->[6]->( 7 8 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u25(11){ d21(bb 0 insn -1) }u26(13){ d26(bb 0 insn -1) }u27(25){ d64(bb 0 insn -1) }u28(26){ d65(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 24 [cc] 141 142 143 144
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137
;; live  gen 	 24 [cc] 141 142 143 144
;; live  kill	
;; rd  in  	(18)
6, 12, 16, 20, 21, 25, 26, 28, 62, 63, 64, 65, 369, 370, 371, 372, 373, 374
;; rd  gen 	(5)
61, 375, 376, 377, 378
;; rd  kill	(12)
56, 57, 58, 59, 60, 61, 62, 63, 375, 376, 377, 378
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137
;; rd  out 	(21)
6, 12, 16, 20, 21, 25, 26, 28, 61, 64, 65, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378
;;  UD chains for artificial uses
;;   reg 11 { d21(bb 0 insn -1) }
;;   reg 13 { d26(bb 0 insn -1) }
;;   reg 25 { d64(bb 0 insn -1) }
;;   reg 26 { d65(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 24
;;      reg 13 { d26(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 25
;;      reg 142 { d376(bb 6 insn 24) }
;;   eq_note reg 13 { }
;;   UD chains for insn luid 2 uid 26
;;      reg 141 { d375(bb 6 insn 25) }
;;   UD chains for insn luid 3 uid 27
;;      reg 143 { d377(bb 6 insn 26) }
;;   UD chains for insn luid 4 uid 28
;;      reg 136 { d370(bb 5 insn 20) d369(bb 4 insn 15) }
;;      reg 144 { d378(bb 6 insn 27) }
;;   UD chains for insn luid 5 uid 29
;;      reg 24 { d61(bb 6 insn 28) }

( 6 )->[7]->( 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u37(11){ d21(bb 0 insn -1) }u38(13){ d26(bb 0 insn -1) }u39(25){ d64(bb 0 insn -1) }u40(26){ d65(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]
;; rd  in  	(21)
6, 12, 16, 20, 21, 25, 26, 28, 61, 64, 65, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378
;; rd  gen 	(1)
4
;; rd  kill	(9)
0, 1, 2, 3, 4, 5, 6, 27, 28
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; rd  out 	(20)
4, 12, 16, 20, 21, 25, 26, 61, 64, 65, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378
;;  UD chains for artificial uses
;;   reg 11 { d21(bb 0 insn -1) }
;;   reg 13 { d26(bb 0 insn -1) }
;;   reg 25 { d64(bb 0 insn -1) }
;;   reg 26 { d65(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 31
;;      reg 136 { d370(bb 5 insn 20) d369(bb 4 insn 15) }
;;   UD chains for insn luid 1 uid 32
;;      reg 13 { d26(bb 0 insn -1) }
;;      reg 0 { d5(bb 7 insn 31) }

( 7 6 )->[8]->( 9 11 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u44(11){ d21(bb 0 insn -1) }u45(13){ d26(bb 0 insn -1) }u46(25){ d64(bb 0 insn -1) }u47(26){ d65(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 145 146 147
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; live  gen 	 24 [cc] 145 146 147
;; live  kill	
;; rd  in  	(22)
4, 6, 12, 16, 20, 21, 25, 26, 28, 61, 64, 65, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378
;; rd  gen 	(4)
59, 379, 380, 381
;; rd  kill	(11)
56, 57, 58, 59, 60, 61, 62, 63, 379, 380, 381
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; rd  out 	(25)
4, 6, 12, 16, 20, 21, 25, 26, 28, 59, 64, 65, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381
;;  UD chains for artificial uses
;;   reg 11 { d21(bb 0 insn -1) }
;;   reg 13 { d26(bb 0 insn -1) }
;;   reg 25 { d64(bb 0 insn -1) }
;;   reg 26 { d65(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 36
;;      reg 145 { d379(bb 8 insn 35) }
;;   UD chains for insn luid 2 uid 37
;;      reg 147 { d381(bb 8 insn 36) }
;;   UD chains for insn luid 3 uid 38
;;      reg 146 { d380(bb 8 insn 37) }
;;   UD chains for insn luid 4 uid 39
;;      reg 24 { d59(bb 8 insn 38) }

( 8 )->[9]->( 10 11 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u52(11){ d21(bb 0 insn -1) }u53(13){ d26(bb 0 insn -1) }u54(25){ d64(bb 0 insn -1) }u55(26){ d65(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc] 148
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; live  gen 	 24 [cc] 148
;; live  kill	
;; rd  in  	(25)
4, 6, 12, 16, 20, 21, 25, 26, 28, 59, 64, 65, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381
;; rd  gen 	(2)
58, 382
;; rd  kill	(9)
56, 57, 58, 59, 60, 61, 62, 63, 382
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(26)
4, 6, 12, 16, 20, 21, 25, 26, 28, 58, 64, 65, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382
;;  UD chains for artificial uses
;;   reg 11 { d21(bb 0 insn -1) }
;;   reg 13 { d26(bb 0 insn -1) }
;;   reg 25 { d64(bb 0 insn -1) }
;;   reg 26 { d65(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 42
;;      reg 137 { d371(bb 2 insn 6) }
;;   eq_note reg 137 { }
;;   UD chains for insn luid 1 uid 43
;;      reg 148 { d382(bb 9 insn 42) }
;;   UD chains for insn luid 2 uid 44
;;      reg 24 { d58(bb 9 insn 43) }

( 9 )->[10]->( 1 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u60(11){ d21(bb 0 insn -1) }u61(13){ d26(bb 0 insn -1) }u62(25){ d64(bb 0 insn -1) }u63(26){ d65(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 150 151
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 150 151
;; live  kill	
;; rd  in  	(26)
4, 6, 12, 16, 20, 21, 25, 26, 28, 58, 64, 65, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382
;; rd  gen 	(2)
383, 384
;; rd  kill	(2)
383, 384
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(28)
4, 6, 12, 16, 20, 21, 25, 26, 28, 58, 64, 65, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384
;;  UD chains for artificial uses
;;   reg 11 { d21(bb 0 insn -1) }
;;   reg 13 { d26(bb 0 insn -1) }
;;   reg 25 { d64(bb 0 insn -1) }
;;   reg 26 { d65(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 47
;;      reg 13 { d26(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 48
;;      reg 151 { d384(bb 10 insn 47) }
;;   eq_note reg 13 { }
;;   UD chains for insn luid 3 uid 50
;;      reg 150 { d383(bb 10 insn 48) }
;;   UD chains for insn luid 4 uid 51
;;      reg 13 { d26(bb 0 insn -1) }
;;      reg 0 { d3(bb 10 insn 49) }
;;      reg 1 { d10(bb 10 insn 50) }

( 9 8 )->[11]->( 1 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u71(11){ d21(bb 0 insn -1) }u72(13){ d26(bb 0 insn -1) }u73(25){ d64(bb 0 insn -1) }u74(26){ d65(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 152 153
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 152 153
;; live  kill	
;; rd  in  	(27)
4, 6, 12, 16, 20, 21, 25, 26, 28, 58, 59, 64, 65, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382
;; rd  gen 	(2)
385, 386
;; rd  kill	(2)
385, 386
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(29)
4, 6, 12, 16, 20, 21, 25, 26, 28, 58, 59, 64, 65, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 385, 386
;;  UD chains for artificial uses
;;   reg 11 { d21(bb 0 insn -1) }
;;   reg 13 { d26(bb 0 insn -1) }
;;   reg 25 { d64(bb 0 insn -1) }
;;   reg 26 { d65(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 56
;;      reg 13 { d26(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 57
;;      reg 153 { d386(bb 11 insn 56) }
;;   eq_note reg 13 { }
;;   UD chains for insn luid 3 uid 59
;;      reg 152 { d385(bb 11 insn 57) }
;;   UD chains for insn luid 4 uid 60
;;      reg 13 { d26(bb 0 insn -1) }
;;      reg 0 { d1(bb 11 insn 58) }
;;      reg 1 { d8(bb 11 insn 59) }

( 11 10 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u82(11){ d21(bb 0 insn -1) }u83(13){ d26(bb 0 insn -1) }u84(14){ d28(bb 0 insn -1) }u85(25){ d64(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(31)
4, 6, 12, 16, 20, 21, 25, 26, 28, 58, 59, 64, 65, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(31)
4, 6, 12, 16, 20, 21, 25, 26, 28, 58, 59, 64, 65, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386
;;  UD chains for artificial uses
;;   reg 11 { d21(bb 0 insn -1) }
;;   reg 13 { d26(bb 0 insn -1) }
;;   reg 14 { d28(bb 0 insn -1) }
;;   reg 25 { d64(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 9 to worklist
  Adding insn 13 to worklist
  Adding insn 70 to worklist
  Adding insn 29 to worklist
  Adding insn 32 to worklist
  Adding insn 39 to worklist
  Adding insn 44 to worklist
  Adding insn 51 to worklist
  Adding insn 60 to worklist
Finished finding needed instructions:
Processing use of (reg 13 sp) in insn 60:
Processing use of (reg 0 r0) in insn 60:
  Adding insn 58 to worklist
Processing use of (reg 1 r1) in insn 60:
  Adding insn 59 to worklist
Processing use of (reg 152) in insn 59:
  Adding insn 57 to worklist
Processing use of (reg 153) in insn 57:
  Adding insn 56 to worklist
Processing use of (reg 13 sp) in insn 56:
Processing use of (reg 13 sp) in insn 51:
Processing use of (reg 0 r0) in insn 51:
  Adding insn 49 to worklist
Processing use of (reg 1 r1) in insn 51:
  Adding insn 50 to worklist
Processing use of (reg 150) in insn 50:
  Adding insn 48 to worklist
Processing use of (reg 151) in insn 48:
  Adding insn 47 to worklist
Processing use of (reg 13 sp) in insn 47:
Processing use of (reg 24 cc) in insn 44:
  Adding insn 43 to worklist
Processing use of (reg 148) in insn 43:
  Adding insn 42 to worklist
Processing use of (reg 137 [ eflags ]) in insn 42:
  Adding insn 6 to worklist
Processing use of (reg 138 [ x ]) in insn 6:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 24 cc) in insn 39:
  Adding insn 38 to worklist
Processing use of (reg 146) in insn 38:
  Adding insn 37 to worklist
Processing use of (reg 147 [ elf_hwcap ]) in insn 37:
  Adding insn 36 to worklist
Processing use of (reg 145) in insn 36:
  Adding insn 35 to worklist
Processing use of (reg 13 sp) in insn 32:
Processing use of (reg 0 r0) in insn 32:
  Adding insn 31 to worklist
Processing use of (reg 136 [ personality ]) in insn 31:
  Adding insn 20 to worklist
  Adding insn 15 to worklist
Processing use of (reg 139) in insn 15:
  Adding insn 7 to worklist
Processing use of (reg 137 [ eflags ]) in insn 7:
Processing use of (reg 24 cc) in insn 29:
  Adding insn 28 to worklist
Processing use of (reg 136 [ personality ]) in insn 28:
Processing use of (reg 144 [ <variable>.personality ]) in insn 28:
  Adding insn 27 to worklist
Processing use of (reg 143 [ <variable>.task ]) in insn 27:
  Adding insn 26 to worklist
Processing use of (reg 141) in insn 26:
  Adding insn 25 to worklist
Processing use of (reg 142) in insn 25:
  Adding insn 24 to worklist
Processing use of (reg 13 sp) in insn 24:
Processing use of (reg 24 cc) in insn 13:
  Adding insn 12 to worklist
Processing use of (reg 140) in insn 12:
  Adding insn 11 to worklist
Processing use of (reg 137 [ eflags ]) in insn 11:
Processing use of (reg 24 cc) in insn 9:
  Adding insn 8 to worklist
Processing use of (reg 139) in insn 8:


elf_set_personality

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={7d,4u} r1={6d,2u} r2={4d} r3={4d} r11={1d,11u} r12={4d} r13={1d,17u,3d} r14={2d,1u} r15={3d} r16={3d} r17={3d} r18={3d} r19={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={8d,5u} r25={1d,11u} r26={1d,10u} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r81={3d} r82={3d} r83={3d} r84={3d} r85={3d} r86={3d} r87={3d} r88={3d} r89={3d} r90={3d} r91={3d} r92={3d} r93={3d} r94={3d} r95={3d} r96={3d} r97={3d} r98={3d} r99={3d} r100={3d} r101={3d} r102={3d} r103={3d} r104={3d} r105={3d} r106={3d} r107={3d} r108={3d} r109={3d} r110={3d} r111={3d} r112={3d} r113={3d} r114={3d} r115={3d} r116={3d} r117={3d} r118={3d} r119={3d} r120={3d} r121={3d} r122={3d} r123={3d} r124={3d} r125={3d} r126={3d} r127={3d} r136={2d,2u} r137={1d,3u,1d} r138={1d,1u} r139={1d,2u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} 
;;    total ref usage 473{387d,82u,4e} in 37{34 regular + 3 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368
0[0,7] 1[7,6] 2[13,4] 3[17,4] 11[21,1] 12[22,4] 13[26,1] 14[27,2] 15[29,3] 16[32,3] 17[35,3] 18[38,3] 19[41,3] 20[44,3] 21[47,3] 22[50,3] 23[53,3] 24[56,8] 25[64,1] 26[65,1] 27[66,3] 28[69,3] 29[72,3] 30[75,3] 31[78,3] 32[81,3] 33[84,3] 34[87,3] 35[90,3] 36[93,3] 37[96,3] 38[99,3] 39[102,3] 40[105,3] 41[108,3] 42[111,3] 43[114,3] 44[117,3] 45[120,3] 46[123,3] 47[126,3] 48[129,3] 49[132,3] 50[135,3] 51[138,3] 52[141,3] 53[144,3] 54[147,3] 55[150,3] 56[153,3] 57[156,3] 58[159,3] 59[162,3] 60[165,3] 61[168,3] 62[171,3] 63[174,3] 64[177,3] 65[180,3] 66[183,3] 67[186,3] 68[189,3] 69[192,3] 70[195,3] 71[198,3] 72[201,3] 73[204,3] 74[207,3] 75[210,3] 76[213,3] 77[216,3] 78[219,3] 79[222,3] 80[225,3] 81[228,3] 82[231,3] 83[234,3] 84[237,3] 85[240,3] 86[243,3] 87[246,3] 88[249,3] 89[252,3] 90[255,3] 91[258,3] 92[261,3] 93[264,3] 94[267,3] 95[270,3] 96[273,3] 97[276,3] 98[279,3] 99[282,3] 100[285,3] 101[288,3] 102[291,3] 103[294,3] 104[297,3] 105[300,3] 106[303,3] 107[306,3] 108[309,3] 109[312,3] 110[315,3] 111[318,3] 112[321,3] 113[324,3] 114[327,3] 115[330,3] 116[333,3] 117[336,3] 118[339,3] 119[342,3] 120[345,3] 121[348,3] 122[351,3] 123[354,3] 124[357,3] 125[360,3] 126[363,3] 127[366,3] 136[369,2] 137[371,1] 138[372,1] 139[373,1] 140[374,1] 141[375,1] 142[376,1] 143[377,1] 144[378,1] 145[379,1] 146[380,1] 147[381,1] 148[382,1] 150[383,1] 151[384,1] 152[385,1] 153[386,1] 
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 137 138 139
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 137 138 139
;; live  kill	
;; rd  in  	(10)
6, 12, 16, 20, 21, 25, 26, 28, 64, 65
;; rd  gen 	(4)
63, 371, 372, 373
;; rd  kill	(11)
56, 57, 58, 59, 60, 61, 62, 63, 371, 372, 373

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 arch/arm/kernel/elf.c:41 (set (reg/v/f:SI 138 [ x ])
        (reg:SI 0 r0 [ x ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ x ])
        (nil)))

(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 3 7 2 arch/arm/kernel/elf.c:42 (set (reg/v:SI 137 [ eflags ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 138 [ x ])
                (const_int 36 [0x24])) [0 <variable>.e_flags+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 138 [ x ])
        (nil)))

(insn 7 6 8 2 arch/arm/kernel/elf.c:48 (set (reg:SI 139)
        (and:SI (reg/v:SI 137 [ eflags ])
            (const_int -16777216 [0xffffffffff000000]))) 67 {*arm_andsi3_insn} (nil))

(insn 8 7 9 2 arch/arm/kernel/elf.c:48 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 139)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 9 8 10 2 arch/arm/kernel/elf.c:48 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 18)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 2 -> ( 3 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 139
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 139
;; rd  out 	(14)
6, 12, 16, 20, 21, 25, 26, 28, 63, 64, 65, 371, 372, 373


;; Succ edge  3 [50.0%]  (fallthru)
;; Succ edge  5 [50.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u9(11){ }u10(13){ }u11(25){ }u12(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc] 140
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 139
;; live  gen 	 24 [cc] 140
;; live  kill	
;; rd  in  	(14)
6, 12, 16, 20, 21, 25, 26, 28, 63, 64, 65, 371, 372, 373
;; rd  gen 	(2)
62, 374
;; rd  kill	(9)
56, 57, 58, 59, 60, 61, 62, 63, 374

;; Pred edge  2 [50.0%]  (fallthru)
(note 10 9 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 11 10 12 3 arch/arm/kernel/elf.c:49 (set (reg:SI 140)
        (and:SI (reg/v:SI 137 [ eflags ])
            (const_int 8 [0x8]))) 67 {*arm_andsi3_insn} (nil))

(insn 12 11 13 3 arch/arm/kernel/elf.c:49 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 140)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 140)
        (nil)))

(jump_insn 13 12 14 3 arch/arm/kernel/elf.c:49 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 18)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 3 -> ( 4 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 139
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 139
;; rd  out 	(15)
6, 12, 16, 20, 21, 25, 26, 28, 62, 64, 65, 371, 372, 373, 374


;; Succ edge  4 [50.0%]  (fallthru)
;; Succ edge  5 [50.0%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u16(11){ }u17(13){ }u18(25){ }u19(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 136
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 139
;; live  gen 	 136
;; live  kill	
;; rd  in  	(15)
6, 12, 16, 20, 21, 25, 26, 28, 62, 64, 65, 371, 372, 373, 374
;; rd  gen 	(1)
369
;; rd  kill	(2)
369, 370

;; Pred edge  3 [50.0%]  (fallthru)
(note 14 13 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 15 14 70 4 arch/arm/kernel/elf.c:50 (set (reg/v:SI 136 [ personality ])
        (reg:SI 139)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 139)
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(jump_insn 70 15 71 4 (set (pc)
        (label_ref 21)) -1 (nil))
;; End of basic block 4 -> ( 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137
;; rd  out 	(16)
6, 12, 16, 20, 21, 25, 26, 28, 62, 64, 65, 369, 371, 372, 373, 374


;; Succ edge  6 [100.0%] 

(barrier 71 70 18)

;; Start of basic block ( 2 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u21(11){ }u22(13){ }u23(25){ }u24(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 136
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; live  gen 	 136
;; live  kill	
;; rd  in  	(16)
6, 12, 16, 20, 21, 25, 26, 28, 62, 63, 64, 65, 371, 372, 373, 374
;; rd  gen 	(1)
370
;; rd  kill	(2)
369, 370

;; Pred edge  2 [50.0%] 
;; Pred edge  3 [50.0%] 
(code_label 18 71 19 5 17 "" [2 uses])

(note 19 18 20 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 20 19 21 5 arch/arm/kernel/elf.c:43 (set (reg/v:SI 136 [ personality ])
        (const_int 8388608 [0x800000])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 5 -> ( 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137
;; rd  out 	(17)
6, 12, 16, 20, 21, 25, 26, 28, 62, 63, 64, 65, 370, 371, 372, 373, 374


;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 5 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u25(11){ }u26(13){ }u27(25){ }u28(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 24 [cc] 141 142 143 144
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137
;; live  gen 	 24 [cc] 141 142 143 144
;; live  kill	
;; rd  in  	(18)
6, 12, 16, 20, 21, 25, 26, 28, 62, 63, 64, 65, 369, 370, 371, 372, 373, 374
;; rd  gen 	(5)
61, 375, 376, 377, 378
;; rd  kill	(12)
56, 57, 58, 59, 60, 61, 62, 63, 375, 376, 377, 378

;; Pred edge  5 [100.0%]  (fallthru)
;; Pred edge  4 [100.0%] 
(code_label 21 20 22 6 18 "" [1 uses])

(note 22 21 24 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 24 22 25 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 142)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 25 24 26 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 141)
        (and:SI (reg:SI 142)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 142)
        (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
                (const_int -8192 [0xffffffffffffe000]))
            (nil))))

(insn 26 25 27 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 143 [ <variable>.task ])
        (mem/s/f/j:SI (plus:SI (reg:SI 141)
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 141)
        (nil)))

(insn 27 26 28 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 144 [ <variable>.personality ])
        (mem/s/j:SI (plus:SI (reg/f:SI 143 [ <variable>.task ])
                (const_int 524 [0x20c])) [0 <variable>.personality+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 143 [ <variable>.task ])
        (nil)))

(insn 28 27 29 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 144 [ <variable>.personality ])
            (reg/v:SI 136 [ personality ]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 144 [ <variable>.personality ])
        (nil)))

(jump_insn 29 28 30 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 33)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 4877 [0x130d])
            (nil))))
;; End of basic block 6 -> ( 7 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137
;; rd  out 	(21)
6, 12, 16, 20, 21, 25, 26, 28, 61, 64, 65, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378


;; Succ edge  7 [51.2%]  (fallthru)
;; Succ edge  8 [48.8%] 

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u37(11){ }u38(13){ }u39(25){ }u40(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]
;; rd  in  	(21)
6, 12, 16, 20, 21, 25, 26, 28, 61, 64, 65, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378
;; rd  gen 	(1)
4
;; rd  kill	(9)
0, 1, 2, 3, 4, 5, 6, 27, 28

;; Pred edge  6 [51.2%]  (fallthru)
(note 30 29 31 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 31 30 32 7 arch/arm/kernel/elf.c:53 discrim 1 (set (reg:SI 0 r0)
        (reg/v:SI 136 [ personality ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 136 [ personality ])
        (nil)))

(call_insn 32 31 33 7 arch/arm/kernel/elf.c:53 discrim 1 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__set_personality") [flags 0x41] <function_decl 0x10ffbd00 __set_personality>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_UNUSED (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 7 -> ( 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; rd  out 	(20)
4, 12, 16, 20, 21, 25, 26, 61, 64, 65, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378


;; Succ edge  8 [100.0%]  (fallthru)

;; Start of basic block ( 7 6) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u44(11){ }u45(13){ }u46(25){ }u47(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 145 146 147
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; live  gen 	 24 [cc] 145 146 147
;; live  kill	
;; rd  in  	(22)
4, 6, 12, 16, 20, 21, 25, 26, 28, 61, 64, 65, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378
;; rd  gen 	(4)
59, 379, 380, 381
;; rd  kill	(11)
56, 57, 58, 59, 60, 61, 62, 63, 379, 380, 381

;; Pred edge  7 [100.0%]  (fallthru)
;; Pred edge  6 [48.8%] 
(code_label 33 32 34 8 19 "" [1 uses])

(note 34 33 35 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 35 34 36 8 arch/arm/kernel/elf.c:61 (set (reg/f:SI 145)
        (symbol_ref:SI ("elf_hwcap") [flags 0xc0] <var_decl 0x512ba240 elf_hwcap>)) 167 {*arm_movsi_insn} (nil))

(insn 36 35 37 8 arch/arm/kernel/elf.c:61 (set (reg:SI 147 [ elf_hwcap ])
        (mem/c/i:SI (reg/f:SI 145) [0 elf_hwcap+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 145)
        (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("elf_hwcap") [flags 0xc0] <var_decl 0x512ba240 elf_hwcap>) [0 elf_hwcap+0 S4 A32])
            (nil))))

(insn 37 36 38 8 arch/arm/kernel/elf.c:61 (set (reg:SI 146)
        (and:SI (reg:SI 147 [ elf_hwcap ])
            (const_int 512 [0x200]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 147 [ elf_hwcap ])
        (nil)))

(insn 38 37 39 8 arch/arm/kernel/elf.c:61 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 146)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 146)
        (nil)))

(jump_insn 39 38 40 8 arch/arm/kernel/elf.c:61 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 53)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
            (nil))))
;; End of basic block 8 -> ( 9 11)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; rd  out 	(25)
4, 6, 12, 16, 20, 21, 25, 26, 28, 59, 64, 65, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381


;; Succ edge  9 [71.0%]  (fallthru)
;; Succ edge  11 [29.0%] 

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u52(11){ }u53(13){ }u54(25){ }u55(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc] 148
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; live  gen 	 24 [cc] 148
;; live  kill	
;; rd  in  	(25)
4, 6, 12, 16, 20, 21, 25, 26, 28, 59, 64, 65, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381
;; rd  gen 	(2)
58, 382
;; rd  kill	(9)
56, 57, 58, 59, 60, 61, 62, 63, 382

;; Pred edge  8 [71.0%]  (fallthru)
(note 40 39 42 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 42 40 43 9 arch/arm/kernel/elf.c:62 (set (reg:SI 148)
        (and:SI (reg/v:SI 137 [ eflags ])
            (const_int -16776704 [0xffffffffff000200]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg/v:SI 137 [ eflags ])
        (expr_list:REG_EQUAL (and:SI (reg/v:SI 137 [ eflags ])
                (const_int -16776704 [0xffffffffff000200]))
            (nil))))

(insn 43 42 44 9 arch/arm/kernel/elf.c:62 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 148)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 148)
        (nil)))

(jump_insn 44 43 45 9 arch/arm/kernel/elf.c:62 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 53)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7929 [0x1ef9])
            (nil))))
;; End of basic block 9 -> ( 10 11)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(26)
4, 6, 12, 16, 20, 21, 25, 26, 28, 58, 64, 65, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382


;; Succ edge  10 [20.7%]  (fallthru)
;; Succ edge  11 [79.3%] 

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u60(11){ }u61(13){ }u62(25){ }u63(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 150 151
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 150 151
;; live  kill	
;; rd  in  	(26)
4, 6, 12, 16, 20, 21, 25, 26, 28, 58, 64, 65, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382
;; rd  gen 	(2)
383, 384
;; rd  kill	(2)
383, 384

;; Pred edge  9 [20.7%]  (fallthru)
(note 45 44 47 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 47 45 48 10 include/linux/thread_info.h:64 (set (reg:SI 151)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 48 47 49 10 include/linux/thread_info.h:64 (set (reg:SI 150)
        (and:SI (reg:SI 151)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 151)
        (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
                (const_int -8192 [0xffffffffffffe000]))
            (nil))))

(insn 49 48 50 10 include/linux/thread_info.h:64 (set (reg:SI 0 r0)
        (const_int 17 [0x11])) 167 {*arm_movsi_insn} (nil))

(insn 50 49 51 10 include/linux/thread_info.h:64 (set (reg:SI 1 r1)
        (reg:SI 150)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 150)
        (nil)))

(call_insn/j 51 50 52 10 include/linux/thread_info.h:64 (parallel [
            (call (mem:SI (symbol_ref:SI ("_set_bit") [flags 0x41] <function_decl 0x109c0500 _set_bit>) [0 S4 A32])
                (const_int 0 [0x0]))
            (return)
            (use (const_int 0 [0x0]))
        ]) 258 {*sibcall_insn} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 10 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(28)
4, 6, 12, 16, 20, 21, 25, 26, 28, 58, 64, 65, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 52 51 53)

;; Start of basic block ( 9 8) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u71(11){ }u72(13){ }u73(25){ }u74(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 152 153
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 152 153
;; live  kill	
;; rd  in  	(27)
4, 6, 12, 16, 20, 21, 25, 26, 28, 58, 59, 64, 65, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382
;; rd  gen 	(2)
385, 386
;; rd  kill	(2)
385, 386

;; Pred edge  9 [79.3%] 
;; Pred edge  8 [29.0%] 
(code_label 53 52 54 11 20 "" [2 uses])

(note 54 53 56 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 56 54 57 11 include/linux/thread_info.h:69 (set (reg:SI 153)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 57 56 58 11 include/linux/thread_info.h:69 (set (reg:SI 152)
        (and:SI (reg:SI 153)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 153)
        (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
                (const_int -8192 [0xffffffffffffe000]))
            (nil))))

(insn 58 57 59 11 include/linux/thread_info.h:69 (set (reg:SI 0 r0)
        (const_int 17 [0x11])) 167 {*arm_movsi_insn} (nil))

(insn 59 58 60 11 include/linux/thread_info.h:69 (set (reg:SI 1 r1)
        (reg:SI 152)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 152)
        (nil)))

(call_insn/j 60 59 61 11 include/linux/thread_info.h:69 (parallel [
            (call (mem:SI (symbol_ref:SI ("_clear_bit") [flags 0x41] <function_decl 0x109c0580 _clear_bit>) [0 S4 A32])
                (const_int 0 [0x0]))
            (return)
            (use (const_int 0 [0x0]))
        ]) 258 {*sibcall_insn} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 11 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(29)
4, 6, 12, 16, 20, 21, 25, 26, 28, 58, 59, 64, 65, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 385, 386


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 61 60 0)

starting the processing of deferred insns
ending the processing of deferred insns
