
;; Function register_pmu_driver (register_pmu_driver)[0:698] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


register_pmu_driver

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 13[sp]
;;  ref usage 	r0={3d,2u} r1={2d} r2={2d} r3={2d} r11={1d,2u} r12={2d} r13={1d,3u} r14={1d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,2u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r135={1d,1u} 
;;    total ref usage 140{128d,12u,0e} in 3{2 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126
0[0,3] 1[3,2] 2[5,2] 3[7,2] 11[9,1] 12[10,2] 13[12,1] 14[13,1] 15[14,1] 16[15,1] 17[16,1] 18[17,1] 19[18,1] 20[19,1] 21[20,1] 22[21,1] 23[22,1] 24[23,1] 25[24,1] 26[25,1] 27[26,1] 28[27,1] 29[28,1] 30[29,1] 31[30,1] 32[31,1] 33[32,1] 34[33,1] 35[34,1] 36[35,1] 37[36,1] 38[37,1] 39[38,1] 40[39,1] 41[40,1] 42[41,1] 43[42,1] 44[43,1] 45[44,1] 46[45,1] 47[46,1] 48[47,1] 49[48,1] 50[49,1] 51[50,1] 52[51,1] 53[52,1] 54[53,1] 55[54,1] 56[55,1] 57[56,1] 58[57,1] 59[58,1] 60[59,1] 61[60,1] 62[61,1] 63[62,1] 64[63,1] 65[64,1] 66[65,1] 67[66,1] 68[67,1] 69[68,1] 70[69,1] 71[70,1] 72[71,1] 73[72,1] 74[73,1] 75[74,1] 76[75,1] 77[76,1] 78[77,1] 79[78,1] 80[79,1] 81[80,1] 82[81,1] 83[82,1] 84[83,1] 85[84,1] 86[85,1] 87[86,1] 88[87,1] 89[88,1] 90[89,1] 91[90,1] 92[91,1] 93[92,1] 94[93,1] 95[94,1] 96[95,1] 97[96,1] 98[97,1] 99[98,1] 100[99,1] 101[100,1] 102[101,1] 103[102,1] 104[103,1] 105[104,1] 106[105,1] 107[106,1] 108[107,1] 109[108,1] 110[109,1] 111[110,1] 112[111,1] 113[112,1] 114[113,1] 115[114,1] 116[115,1] 117[116,1] 118[117,1] 119[118,1] 120[119,1] 121[120,1] 122[121,1] 123[122,1] 124[123,1] 125[124,1] 126[125,1] 127[126,1] 135[127,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d2(0){ }d4(1){ }d6(2){ }d8(3){ }d9(11){ }d11(12){ }d12(13){ }d13(14){ }d24(25){ }d25(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
2, 4, 6, 8, 9, 11, 12, 13, 24, 25
;; rd  kill	(16)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 24, 25
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
2, 4, 6, 8, 9, 11, 12, 13, 24, 25

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d9(bb 0 insn -1) }u1(13){ d12(bb 0 insn -1) }u2(25){ d24(bb 0 insn -1) }u3(26){ d25(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 135
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 135
;; live  kill	
;; rd  in  	(10)
2, 4, 6, 8, 9, 11, 12, 13, 24, 25
;; rd  gen 	(2)
0, 127
;; rd  kill	(4)
0, 1, 2, 127
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(11)
0, 4, 6, 8, 9, 11, 12, 13, 24, 25, 127
;;  UD chains for artificial uses
;;   reg 11 { d9(bb 0 insn -1) }
;;   reg 13 { d12(bb 0 insn -1) }
;;   reg 25 { d24(bb 0 insn -1) }
;;   reg 26 { d25(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 6
;;      reg 135 { d127(bb 2 insn 5) }
;;   UD chains for insn luid 2 uid 7
;;      reg 13 { d12(bb 0 insn -1) }
;;      reg 0 { d1(bb 2 insn 6) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u7(0){ d0(bb 2 insn 7) }u8(11){ d9(bb 0 insn -1) }u9(13){ d12(bb 0 insn -1) }u10(14){ d13(bb 0 insn -1) }u11(25){ d24(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(11)
0, 4, 6, 8, 9, 11, 12, 13, 24, 25, 127
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(11)
0, 4, 6, 8, 9, 11, 12, 13, 24, 25, 127
;;  UD chains for artificial uses
;;   reg 0 { d0(bb 2 insn 7) }
;;   reg 11 { d9(bb 0 insn -1) }
;;   reg 13 { d12(bb 0 insn -1) }
;;   reg 14 { d13(bb 0 insn -1) }
;;   reg 25 { d24(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 7 to worklist
Finished finding needed instructions:
Processing use of (reg 13 sp) in insn 7:
Processing use of (reg 0 r0) in insn 7:
  Adding insn 6 to worklist
Processing use of (reg 135) in insn 6:
  Adding insn 5 to worklist


register_pmu_driver

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 13[sp]
;;  ref usage 	r0={3d,2u} r1={2d} r2={2d} r3={2d} r11={1d,2u} r12={2d} r13={1d,3u} r14={1d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,2u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r135={1d,1u} 
;;    total ref usage 140{128d,12u,0e} in 3{2 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126
0[0,3] 1[3,2] 2[5,2] 3[7,2] 11[9,1] 12[10,2] 13[12,1] 14[13,1] 15[14,1] 16[15,1] 17[16,1] 18[17,1] 19[18,1] 20[19,1] 21[20,1] 22[21,1] 23[22,1] 24[23,1] 25[24,1] 26[25,1] 27[26,1] 28[27,1] 29[28,1] 30[29,1] 31[30,1] 32[31,1] 33[32,1] 34[33,1] 35[34,1] 36[35,1] 37[36,1] 38[37,1] 39[38,1] 40[39,1] 41[40,1] 42[41,1] 43[42,1] 44[43,1] 45[44,1] 46[45,1] 47[46,1] 48[47,1] 49[48,1] 50[49,1] 51[50,1] 52[51,1] 53[52,1] 54[53,1] 55[54,1] 56[55,1] 57[56,1] 58[57,1] 59[58,1] 60[59,1] 61[60,1] 62[61,1] 63[62,1] 64[63,1] 65[64,1] 66[65,1] 67[66,1] 68[67,1] 69[68,1] 70[69,1] 71[70,1] 72[71,1] 73[72,1] 74[73,1] 75[74,1] 76[75,1] 77[76,1] 78[77,1] 79[78,1] 80[79,1] 81[80,1] 82[81,1] 83[82,1] 84[83,1] 85[84,1] 86[85,1] 87[86,1] 88[87,1] 89[88,1] 90[89,1] 91[90,1] 92[91,1] 93[92,1] 94[93,1] 95[94,1] 96[95,1] 97[96,1] 98[97,1] 99[98,1] 100[99,1] 101[100,1] 102[101,1] 103[102,1] 104[103,1] 105[104,1] 106[105,1] 107[106,1] 108[107,1] 109[108,1] 110[109,1] 111[110,1] 112[111,1] 113[112,1] 114[113,1] 115[114,1] 116[115,1] 117[116,1] 118[117,1] 119[118,1] 120[119,1] 121[120,1] 122[121,1] 123[122,1] 124[123,1] 125[124,1] 126[125,1] 127[126,1] 135[127,1] 
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 135
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 135
;; live  kill	
;; rd  in  	(10)
2, 4, 6, 8, 9, 11, 12, 13, 24, 25
;; rd  gen 	(2)
0, 127
;; rd  kill	(4)
0, 1, 2, 127

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)

(insn 5 2 6 2 arch/arm/kernel/pmu.c:110 (set (reg/f:SI 135)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 6 5 7 2 arch/arm/kernel/pmu.c:110 (set (reg:SI 0 r0)
        (reg/f:SI 135)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 135)
        (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
            (nil))))

(call_insn/j 7 6 8 2 arch/arm/kernel/pmu.c:110 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("platform_driver_register") [flags 0x41] <function_decl 0x10f21b80 platform_driver_register>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(11)
0, 4, 6, 8, 9, 11, 12, 13, 24, 25, 127


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 8 7 0)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function init_pmu (init_pmu)[0:703]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 17 n_edges 22 count 33 (  1.9)
df_worklist_dataflow_doublequeue:n_basic_blocks 17 n_edges 22 count 34 (    2)
df_worklist_dataflow_doublequeue:n_basic_blocks 17 n_edges 22 count 34 (    2)


init_pmu

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={12d,12u} r1={12d,5u} r2={8d,1u} r3={7d} r11={1d,16u} r12={7d} r13={1d,22u} r14={7d,1u} r15={6d} r16={6d} r17={6d} r18={6d} r19={6d} r20={6d} r21={6d} r22={6d} r23={6d} r24={12d,6u} r25={1d,16u} r26={1d,15u} r27={6d} r28={6d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={6d} r38={6d} r39={6d} r40={6d} r41={6d} r42={6d} r43={6d} r44={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r76={6d} r77={6d} r78={6d} r79={6d} r80={6d} r81={6d} r82={6d} r83={6d} r84={6d} r85={6d} r86={6d} r87={6d} r88={6d} r89={6d} r90={6d} r91={6d} r92={6d} r93={6d} r94={6d} r95={6d} r96={6d} r97={6d} r98={6d} r99={6d} r100={6d} r101={6d} r102={6d} r103={6d} r104={6d} r105={6d} r106={6d} r107={6d} r108={6d} r109={6d} r110={6d} r111={6d} r112={6d} r113={6d} r114={6d} r115={6d} r116={6d} r117={6d} r118={6d} r119={6d} r120={6d} r121={6d} r122={6d} r123={6d} r124={6d} r125={6d} r126={6d} r127={6d} r135={1d,1u} r137={1d,1u} r138={2d,6u} r139={1d,2u} r140={1d,4u} r141={1d,1u} r142={4d,2u} r144={1d,3u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u,1d} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r157={1d,1u} 
;;    total ref usage 874{750d,123u,1e} in 57{51 regular + 6 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728
0[0,12] 1[12,12] 2[24,8] 3[32,7] 11[39,1] 12[40,7] 13[47,1] 14[48,7] 15[55,6] 16[61,6] 17[67,6] 18[73,6] 19[79,6] 20[85,6] 21[91,6] 22[97,6] 23[103,6] 24[109,12] 25[121,1] 26[122,1] 27[123,6] 28[129,6] 29[135,6] 30[141,6] 31[147,6] 32[153,6] 33[159,6] 34[165,6] 35[171,6] 36[177,6] 37[183,6] 38[189,6] 39[195,6] 40[201,6] 41[207,6] 42[213,6] 43[219,6] 44[225,6] 45[231,6] 46[237,6] 47[243,6] 48[249,6] 49[255,6] 50[261,6] 51[267,6] 52[273,6] 53[279,6] 54[285,6] 55[291,6] 56[297,6] 57[303,6] 58[309,6] 59[315,6] 60[321,6] 61[327,6] 62[333,6] 63[339,6] 64[345,6] 65[351,6] 66[357,6] 67[363,6] 68[369,6] 69[375,6] 70[381,6] 71[387,6] 72[393,6] 73[399,6] 74[405,6] 75[411,6] 76[417,6] 77[423,6] 78[429,6] 79[435,6] 80[441,6] 81[447,6] 82[453,6] 83[459,6] 84[465,6] 85[471,6] 86[477,6] 87[483,6] 88[489,6] 89[495,6] 90[501,6] 91[507,6] 92[513,6] 93[519,6] 94[525,6] 95[531,6] 96[537,6] 97[543,6] 98[549,6] 99[555,6] 100[561,6] 101[567,6] 102[573,6] 103[579,6] 104[585,6] 105[591,6] 106[597,6] 107[603,6] 108[609,6] 109[615,6] 110[621,6] 111[627,6] 112[633,6] 113[639,6] 114[645,6] 115[651,6] 116[657,6] 117[663,6] 118[669,6] 119[675,6] 120[681,6] 121[687,6] 122[693,6] 123[699,6] 124[705,6] 125[711,6] 126[717,6] 127[723,6] 135[729,1] 137[730,1] 138[731,2] 139[733,1] 140[734,1] 141[735,1] 142[736,4] 144[740,1] 145[741,1] 146[742,1] 147[743,1] 148[744,1] 150[745,1] 151[746,1] 152[747,1] 153[748,1] 157[749,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d11(0){ }d23(1){ }d31(2){ }d38(3){ }d39(11){ }d46(12){ }d47(13){ }d54(14){ }d121(25){ }d122(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
11, 23, 31, 38, 39, 46, 47, 54, 121, 122
;; rd  kill	(57)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 121, 122
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
11, 23, 31, 38, 39, 46, 47, 54, 121, 122

( 0 )->[2]->( 3 14 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d39(bb 0 insn -1) }u1(13){ d47(bb 0 insn -1) }u2(25){ d121(bb 0 insn -1) }u3(26){ d122(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 144
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 144
;; live  kill	
;; rd  in  	(10)
11, 23, 31, 38, 39, 46, 47, 54, 121, 122
;; rd  gen 	(2)
120, 740
;; rd  kill	(13)
109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 740
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144
;; rd  out 	(12)
11, 23, 31, 38, 39, 46, 47, 54, 120, 121, 122, 740
;;  UD chains for artificial uses
;;   reg 11 { d39(bb 0 insn -1) }
;;   reg 13 { d47(bb 0 insn -1) }
;;   reg 25 { d121(bb 0 insn -1) }
;;   reg 26 { d122(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 3
;;      reg 0 { d11(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 7
;;      reg 144 { d740(bb 2 insn 3) }
;;   UD chains for insn luid 2 uid 8
;;      reg 24 { d120(bb 2 insn 7) }

( 2 )->[3]->( 4 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u7(11){ d39(bb 0 insn -1) }u8(13){ d47(bb 0 insn -1) }u9(25){ d121(bb 0 insn -1) }u10(26){ d122(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 140 145
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144
;; live  gen 	 24 [cc] 140 145
;; live  kill	
;; rd  in  	(12)
11, 23, 31, 38, 39, 46, 47, 54, 120, 121, 122, 740
;; rd  gen 	(3)
119, 734, 741
;; rd  kill	(14)
109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 734, 741
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 144
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 144
;; rd  out 	(14)
11, 23, 31, 38, 39, 46, 47, 54, 119, 121, 122, 734, 740, 741
;;  UD chains for artificial uses
;;   reg 11 { d39(bb 0 insn -1) }
;;   reg 13 { d47(bb 0 insn -1) }
;;   reg 25 { d121(bb 0 insn -1) }
;;   reg 26 { d122(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 14
;;      reg 145 { d741(bb 3 insn 13) }
;;   UD chains for insn luid 2 uid 15
;;      reg 140 { d734(bb 3 insn 14) }
;;   UD chains for insn luid 3 uid 16
;;      reg 24 { d119(bb 3 insn 15) }

( 3 )->[4]->( 16 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u14(11){ d39(bb 0 insn -1) }u15(13){ d47(bb 0 insn -1) }u16(25){ d121(bb 0 insn -1) }u17(26){ d122(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 142
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 142
;; live  kill	
;; rd  in  	(14)
11, 23, 31, 38, 39, 46, 47, 54, 119, 121, 122, 734, 740, 741
;; rd  gen 	(1)
739
;; rd  kill	(4)
736, 737, 738, 739
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142
;; rd  out 	(15)
11, 23, 31, 38, 39, 46, 47, 54, 119, 121, 122, 734, 739, 740, 741
;;  UD chains for artificial uses
;;   reg 11 { d39(bb 0 insn -1) }
;;   reg 13 { d47(bb 0 insn -1) }
;;   reg 25 { d121(bb 0 insn -1) }
;;   reg 26 { d122(bb 0 insn -1) }

( 3 )->[5]->( 7 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u18(11){ d39(bb 0 insn -1) }u19(13){ d47(bb 0 insn -1) }u20(25){ d121(bb 0 insn -1) }u21(26){ d122(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 24 [cc] 139
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 144
;; live  gen 	 24 [cc] 139
;; live  kill	
;; rd  in  	(14)
11, 23, 31, 38, 39, 46, 47, 54, 119, 121, 122, 734, 740, 741
;; rd  gen 	(2)
118, 733
;; rd  kill	(13)
109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 733
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 144
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 144
;; rd  out 	(15)
11, 23, 31, 38, 39, 46, 47, 54, 118, 121, 122, 733, 734, 740, 741
;;  UD chains for artificial uses
;;   reg 11 { d39(bb 0 insn -1) }
;;   reg 13 { d47(bb 0 insn -1) }
;;   reg 25 { d121(bb 0 insn -1) }
;;   reg 26 { d122(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 23
;;      reg 140 { d734(bb 3 insn 14) }
;;   UD chains for insn luid 1 uid 24
;;      reg 139 { d733(bb 5 insn 23) }
;;   UD chains for insn luid 2 uid 25
;;      reg 24 { d118(bb 5 insn 24) }

( 5 7 )->[6]->( 12 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u25(11){ d39(bb 0 insn -1) }u26(13){ d47(bb 0 insn -1) }u27(25){ d121(bb 0 insn -1) }u28(26){ d122(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 138 157
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140
;; live  gen 	 138 157
;; live  kill	
;; rd  in  	(18)
8, 11, 23, 31, 38, 39, 46, 47, 54, 115, 118, 121, 122, 729, 733, 734, 740, 741
;; rd  gen 	(2)
732, 749
;; rd  kill	(3)
731, 732, 749
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 140 157
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 140 157
;; rd  out 	(20)
8, 11, 23, 31, 38, 39, 46, 47, 54, 115, 118, 121, 122, 729, 732, 733, 734, 740, 741, 749
;;  UD chains for artificial uses
;;   reg 11 { d39(bb 0 insn -1) }
;;   reg 13 { d47(bb 0 insn -1) }
;;   reg 25 { d121(bb 0 insn -1) }
;;   reg 26 { d122(bb 0 insn -1) }

( 5 )->[7]->( 8 6 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u29(11){ d39(bb 0 insn -1) }u30(13){ d47(bb 0 insn -1) }u31(25){ d121(bb 0 insn -1) }u32(26){ d122(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 144
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 135
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 144
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 135
;; live  kill	 14 [lr]
;; rd  in  	(15)
11, 23, 31, 38, 39, 46, 47, 54, 118, 121, 122, 733, 734, 740, 741
;; rd  gen 	(3)
8, 115, 729
;; rd  kill	(32)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 48, 49, 50, 51, 52, 53, 54, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 729
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140
;; rd  out 	(15)
8, 23, 31, 38, 39, 46, 47, 115, 121, 122, 729, 733, 734, 740, 741
;;  UD chains for artificial uses
;;   reg 11 { d39(bb 0 insn -1) }
;;   reg 13 { d47(bb 0 insn -1) }
;;   reg 25 { d121(bb 0 insn -1) }
;;   reg 26 { d122(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 32
;;      reg 140 { d734(bb 3 insn 14) }
;;   UD chains for insn luid 1 uid 33
;;      reg 144 { d740(bb 2 insn 3) }
;;   UD chains for insn luid 2 uid 34
;;      reg 13 { d47(bb 0 insn -1) }
;;      reg 0 { d10(bb 7 insn 32) }
;;      reg 1 { d12(bb 7 insn 33) }
;;   UD chains for insn luid 3 uid 37
;;      reg 13 { d47(bb 0 insn -1) }
;;      reg 0 { d9(bb 7 insn 34) }
;;   UD chains for insn luid 4 uid 38
;;      reg 0 { d8(bb 7 insn 37) }
;;   UD chains for insn luid 5 uid 39
;;      reg 135 { d729(bb 7 insn 38) }
;;   UD chains for insn luid 6 uid 40
;;      reg 24 { d115(bb 7 insn 39) }

( 7 )->[8]->( 15 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(11){ d39(bb 0 insn -1) }u-1(13){ d47(bb 0 insn -1) }u-1(25){ d121(bb 0 insn -1) }u-1(26){ d122(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(15)
8, 23, 31, 38, 39, 46, 47, 115, 121, 122, 729, 733, 734, 740, 741
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(15)
8, 23, 31, 38, 39, 46, 47, 115, 121, 122, 729, 733, 734, 740, 741
;;  UD chains for artificial uses
;;   reg 11 { d39(bb 0 insn -1) }
;;   reg 13 { d47(bb 0 insn -1) }
;;   reg 25 { d121(bb 0 insn -1) }
;;   reg 26 { d122(bb 0 insn -1) }

( 12 )->[9]->( 10 11 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u43(11){ d39(bb 0 insn -1) }u44(13){ d47(bb 0 insn -1) }u45(25){ d121(bb 0 insn -1) }u46(26){ d122(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140 157
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 140 157
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 137 141 142 146 147 148 150 151 152 153
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140 157
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 137 141 142 146 147 148 150 151 152 153
;; live  kill	 14 [lr]
;; rd  in  	(31)
5, 8, 11, 23, 31, 38, 39, 46, 47, 54, 110, 121, 122, 729, 730, 731, 732, 733, 734, 735, 738, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749
;; rd  gen 	(12)
5, 112, 730, 735, 738, 742, 743, 744, 745, 746, 747, 748
;; rd  kill	(44)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 48, 49, 50, 51, 52, 53, 54, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 730, 735, 736, 737, 738, 739, 742, 743, 744, 745, 746, 747, 748
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 140 142 157
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 139 140 142 157
;; rd  out 	(28)
5, 23, 31, 38, 39, 46, 47, 112, 121, 122, 729, 730, 731, 732, 733, 734, 735, 738, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749
;;  UD chains for artificial uses
;;   reg 11 { d39(bb 0 insn -1) }
;;   reg 13 { d47(bb 0 insn -1) }
;;   reg 25 { d121(bb 0 insn -1) }
;;   reg 26 { d122(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 47
;;      reg 140 { d734(bb 3 insn 14) }
;;   UD chains for insn luid 1 uid 48
;;      reg 138 { d732(bb 6 insn 27) d731(bb 11 insn 76) }
;;   UD chains for insn luid 2 uid 49
;;      reg 13 { d47(bb 0 insn -1) }
;;      reg 0 { d7(bb 9 insn 47) }
;;      reg 1 { d13(bb 9 insn 48) }
;;   UD chains for insn luid 3 uid 50
;;      reg 0 { d6(bb 9 insn 49) }
;;   UD chains for insn luid 4 uid 51
;;      reg 138 { d732(bb 6 insn 27) d731(bb 11 insn 76) }
;;   UD chains for insn luid 5 uid 52
;;      reg 146 { d742(bb 9 insn 51) }
;;   UD chains for insn luid 6 uid 53
;;      reg 147 { d743(bb 9 insn 52) }
;;   UD chains for insn luid 7 uid 55
;;      reg 148 { d744(bb 9 insn 53) }
;;      reg 157 { d749(bb 6 insn 54) }
;;   eq_note reg 148 { }
;;   UD chains for insn luid 8 uid 56
;;      reg 138 { d732(bb 6 insn 27) d731(bb 11 insn 76) }
;;   UD chains for insn luid 9 uid 57
;;      reg 150 { d745(bb 9 insn 56) }
;;   UD chains for insn luid 10 uid 58
;;      reg 151 { d746(bb 9 insn 57) }
;;   UD chains for insn luid 11 uid 59
;;      reg 141 { d735(bb 9 insn 55) }
;;      reg 152 { d747(bb 9 insn 58) }
;;   UD chains for insn luid 12 uid 61
;;      reg 153 { d748(bb 9 insn 59) }
;;   UD chains for insn luid 13 uid 62
;;      reg 13 { d47(bb 0 insn -1) }
;;      reg 0 { d6(bb 9 insn 49) }
;;      reg 1 { d19(bb 9 insn 61) }
;;   UD chains for insn luid 14 uid 63
;;      reg 0 { d5(bb 9 insn 62) }
;;   UD chains for insn luid 15 uid 64
;;      reg 142 { d738(bb 9 insn 63) }
;;   UD chains for insn luid 16 uid 65
;;      reg 24 { d112(bb 9 insn 64) }

( 9 )->[10]->( 16 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u71(11){ d39(bb 0 insn -1) }u72(13){ d47(bb 0 insn -1) }u73(25){ d121(bb 0 insn -1) }u74(26){ d122(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 142
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 142
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	 14 [lr]
;; rd  in  	(28)
5, 23, 31, 38, 39, 46, 47, 112, 121, 122, 729, 730, 731, 732, 733, 734, 735, 738, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749
;; rd  gen 	(1)
4
;; rd  kill	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 48, 49, 50, 51, 52, 53, 54
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; rd  out 	(28)
4, 23, 31, 38, 39, 46, 47, 112, 121, 122, 729, 730, 731, 732, 733, 734, 735, 738, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749
;;  UD chains for artificial uses
;;   reg 11 { d39(bb 0 insn -1) }
;;   reg 13 { d47(bb 0 insn -1) }
;;   reg 25 { d121(bb 0 insn -1) }
;;   reg 26 { d122(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 69
;;      reg 137 { d730(bb 9 insn 50) }
;;   UD chains for insn luid 2 uid 70
;;      reg 138 { d732(bb 6 insn 27) d731(bb 11 insn 76) }
;;   UD chains for insn luid 3 uid 71
;;      reg 13 { d47(bb 0 insn -1) }
;;      reg 0 { d1(bb 10 insn 68) }
;;      reg 1 { d17(bb 10 insn 69) }
;;      reg 2 { d24(bb 10 insn 70) }

( 9 )->[11]->( 12 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u81(11){ d39(bb 0 insn -1) }u82(13){ d47(bb 0 insn -1) }u83(25){ d121(bb 0 insn -1) }u84(26){ d122(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 140 157
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 138
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140 157
;; live  gen 	 138
;; live  kill	
;; rd  in  	(28)
5, 23, 31, 38, 39, 46, 47, 112, 121, 122, 729, 730, 731, 732, 733, 734, 735, 738, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749
;; rd  gen 	(1)
731
;; rd  kill	(2)
731, 732
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 140 157
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140 157
;; rd  out 	(27)
5, 23, 31, 38, 39, 46, 47, 112, 121, 122, 729, 730, 731, 733, 734, 735, 738, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749
;;  UD chains for artificial uses
;;   reg 11 { d39(bb 0 insn -1) }
;;   reg 13 { d47(bb 0 insn -1) }
;;   reg 25 { d121(bb 0 insn -1) }
;;   reg 26 { d122(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 76
;;      reg 138 { d732(bb 6 insn 27) d731(bb 11 insn 76) }

( 11 6 )->[12]->( 9 13 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u86(11){ d39(bb 0 insn -1) }u87(13){ d47(bb 0 insn -1) }u88(25){ d121(bb 0 insn -1) }u89(26){ d122(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 140 157
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 140 157
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(33)
5, 8, 11, 23, 31, 38, 39, 46, 47, 54, 112, 115, 118, 121, 122, 729, 730, 731, 732, 733, 734, 735, 738, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749
;; rd  gen 	(1)
110
;; rd  kill	(12)
109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 140 157
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 140 157
;; rd  out 	(31)
5, 8, 11, 23, 31, 38, 39, 46, 47, 54, 110, 121, 122, 729, 730, 731, 732, 733, 734, 735, 738, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749
;;  UD chains for artificial uses
;;   reg 11 { d39(bb 0 insn -1) }
;;   reg 13 { d47(bb 0 insn -1) }
;;   reg 25 { d121(bb 0 insn -1) }
;;   reg 26 { d122(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 80
;;      reg 138 { d732(bb 6 insn 27) d731(bb 11 insn 76) }
;;      reg 139 { d733(bb 5 insn 23) }
;;   UD chains for insn luid 1 uid 81
;;      reg 24 { d110(bb 12 insn 80) }

( 12 )->[13]->( 15 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(11){ d39(bb 0 insn -1) }u-1(13){ d47(bb 0 insn -1) }u-1(25){ d121(bb 0 insn -1) }u-1(26){ d122(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(31)
5, 8, 11, 23, 31, 38, 39, 46, 47, 54, 110, 121, 122, 729, 730, 731, 732, 733, 734, 735, 738, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(31)
5, 8, 11, 23, 31, 38, 39, 46, 47, 54, 110, 121, 122, 729, 730, 731, 732, 733, 734, 735, 738, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749
;;  UD chains for artificial uses
;;   reg 11 { d39(bb 0 insn -1) }
;;   reg 13 { d47(bb 0 insn -1) }
;;   reg 25 { d121(bb 0 insn -1) }
;;   reg 26 { d122(bb 0 insn -1) }

( 2 )->[14]->( 16 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u93(11){ d39(bb 0 insn -1) }u94(13){ d47(bb 0 insn -1) }u95(25){ d121(bb 0 insn -1) }u96(26){ d122(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; live  gen 	 0 [r0] 1 [r1] 142
;; live  kill	 14 [lr]
;; rd  in  	(12)
11, 23, 31, 38, 39, 46, 47, 54, 120, 121, 122, 740
;; rd  gen 	(2)
3, 737
;; rd  kill	(23)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 48, 49, 50, 51, 52, 53, 54, 736, 737, 738, 739
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; rd  out 	(12)
3, 23, 31, 38, 39, 46, 47, 120, 121, 122, 737, 740
;;  UD chains for artificial uses
;;   reg 11 { d39(bb 0 insn -1) }
;;   reg 13 { d47(bb 0 insn -1) }
;;   reg 25 { d121(bb 0 insn -1) }
;;   reg 26 { d122(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 89
;;      reg 144 { d740(bb 2 insn 3) }
;;   UD chains for insn luid 2 uid 90
;;      reg 13 { d47(bb 0 insn -1) }
;;      reg 0 { d0(bb 14 insn 88) }
;;      reg 1 { d15(bb 14 insn 89) }

( 8 13 )->[15]->( 16 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u101(11){ d39(bb 0 insn -1) }u102(13){ d47(bb 0 insn -1) }u103(25){ d121(bb 0 insn -1) }u104(26){ d122(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 142
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 142
;; live  kill	
;; rd  in  	(32)
5, 8, 11, 23, 31, 38, 39, 46, 47, 54, 110, 115, 121, 122, 729, 730, 731, 732, 733, 734, 735, 738, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749
;; rd  gen 	(1)
736
;; rd  kill	(4)
736, 737, 738, 739
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142
;; rd  out 	(32)
5, 8, 11, 23, 31, 38, 39, 46, 47, 54, 110, 115, 121, 122, 729, 730, 731, 732, 733, 734, 735, 736, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749
;;  UD chains for artificial uses
;;   reg 11 { d39(bb 0 insn -1) }
;;   reg 13 { d47(bb 0 insn -1) }
;;   reg 25 { d121(bb 0 insn -1) }
;;   reg 26 { d122(bb 0 insn -1) }

( 15 10 4 14 )->[16]->( 1 )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u105(11){ d39(bb 0 insn -1) }u106(13){ d47(bb 0 insn -1) }u107(25){ d121(bb 0 insn -1) }u108(26){ d122(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(40)
3, 4, 5, 8, 11, 23, 31, 38, 39, 46, 47, 54, 110, 112, 115, 119, 120, 121, 122, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749
;; rd  gen 	(1)
2
;; rd  kill	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(36)
2, 23, 31, 38, 39, 46, 47, 54, 110, 112, 115, 119, 120, 121, 122, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749
;;  UD chains for artificial uses
;;   reg 11 { d39(bb 0 insn -1) }
;;   reg 13 { d47(bb 0 insn -1) }
;;   reg 25 { d121(bb 0 insn -1) }
;;   reg 26 { d122(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 103
;;      reg 142 { d739(bb 4 insn 18) d738(bb 9 insn 63) d737(bb 14 insn 91) d736(bb 15 insn 96) }
;;   UD chains for insn luid 1 uid 109
;;      reg 0 { d2(bb 16 insn 103) }

( 16 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u111(0){ d2(bb 16 insn 103) }u112(11){ d39(bb 0 insn -1) }u113(13){ d47(bb 0 insn -1) }u114(14){ d54(bb 0 insn -1) }u115(25){ d121(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(36)
2, 23, 31, 38, 39, 46, 47, 54, 110, 112, 115, 119, 120, 121, 122, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(36)
2, 23, 31, 38, 39, 46, 47, 54, 110, 112, 115, 119, 120, 121, 122, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749
;;  UD chains for artificial uses
;;   reg 0 { d2(bb 16 insn 103) }
;;   reg 11 { d39(bb 0 insn -1) }
;;   reg 13 { d47(bb 0 insn -1) }
;;   reg 14 { d54(bb 0 insn -1) }
;;   reg 25 { d121(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 8 to worklist
  Adding insn 16 to worklist
  Adding insn 135 to worklist
  Adding insn 25 to worklist
  Adding insn 137 to worklist
  Adding insn 40 to worklist
  Adding insn 37 to worklist
  Adding insn 34 to worklist
  Adding insn 140 to worklist
  Adding insn 65 to worklist
  Adding insn 62 to worklist
  Adding insn 49 to worklist
  Adding insn 142 to worklist
  Adding insn 71 to worklist
  Adding insn 81 to worklist
  Adding insn 145 to worklist
  Adding insn 147 to worklist
  Adding insn 90 to worklist
  Adding insn 109 to worklist
Finished finding needed instructions:
  Adding insn 103 to worklist
Processing use of (reg 142 [ err ]) in insn 103:
  Adding insn 18 to worklist
  Adding insn 63 to worklist
  Adding insn 91 to worklist
  Adding insn 96 to worklist
Processing use of (reg 0 r0) in insn 63:
Processing use of (reg 0 r0) in insn 109:
Processing use of (reg 13 sp) in insn 90:
Processing use of (reg 0 r0) in insn 90:
  Adding insn 88 to worklist
Processing use of (reg 1 r1) in insn 90:
  Adding insn 89 to worklist
Processing use of (reg 144 [ type ]) in insn 89:
  Adding insn 3 to worklist
Processing use of (reg 0 r0) in insn 3:
Processing use of (reg 24 cc) in insn 81:
  Adding insn 80 to worklist
Processing use of (reg 138 [ i ]) in insn 80:
  Adding insn 27 to worklist
  Adding insn 76 to worklist
Processing use of (reg 139 [ irqs ]) in insn 80:
  Adding insn 23 to worklist
Processing use of (reg 140 [ pdev ]) in insn 23:
  Adding insn 14 to worklist
Processing use of (reg 145) in insn 14:
  Adding insn 13 to worklist
Processing use of (reg 138 [ i ]) in insn 76:
Processing use of (reg 13 sp) in insn 71:
Processing use of (reg 0 r0) in insn 71:
  Adding insn 68 to worklist
Processing use of (reg 1 r1) in insn 71:
  Adding insn 69 to worklist
Processing use of (reg 2 r2) in insn 71:
  Adding insn 70 to worklist
Processing use of (reg 138 [ i ]) in insn 70:
Processing use of (reg 137 [ D.13599 ]) in insn 69:
  Adding insn 50 to worklist
Processing use of (reg 0 r0) in insn 50:
Processing use of (reg 13 sp) in insn 49:
Processing use of (reg 0 r0) in insn 49:
  Adding insn 47 to worklist
Processing use of (reg 1 r1) in insn 49:
  Adding insn 48 to worklist
Processing use of (reg 138 [ i ]) in insn 48:
Processing use of (reg 140 [ pdev ]) in insn 47:
Processing use of (reg 13 sp) in insn 62:
Processing use of (reg 0 r0) in insn 62:
Processing use of (reg 1 r1) in insn 62:
  Adding insn 61 to worklist
Processing use of (reg 153) in insn 61:
  Adding insn 59 to worklist
Processing use of (reg 141 [ p ]) in insn 59:
  Adding insn 55 to worklist
Processing use of (reg 152) in insn 59:
  Adding insn 58 to worklist
Processing use of (reg 151) in insn 58:
  Adding insn 57 to worklist
Processing use of (reg 150) in insn 57:
  Adding insn 56 to worklist
Processing use of (reg 138 [ i ]) in insn 56:
Processing use of (reg 148) in insn 55:
  Adding insn 53 to worklist
Processing use of (reg 157) in insn 55:
  Adding insn 54 to worklist
Processing use of (reg 147) in insn 53:
  Adding insn 52 to worklist
Processing use of (reg 146) in insn 52:
  Adding insn 51 to worklist
Processing use of (reg 138 [ i ]) in insn 51:
Processing use of (reg 24 cc) in insn 65:
  Adding insn 64 to worklist
Processing use of (reg 142 [ err ]) in insn 64:
Processing use of (reg 13 sp) in insn 34:
Processing use of (reg 0 r0) in insn 34:
  Adding insn 32 to worklist
Processing use of (reg 1 r1) in insn 34:
  Adding insn 33 to worklist
Processing use of (reg 144 [ type ]) in insn 33:
Processing use of (reg 140 [ pdev ]) in insn 32:
Processing use of (reg 13 sp) in insn 37:
Processing use of (reg 0 r0) in insn 37:
Processing use of (reg 24 cc) in insn 40:
  Adding insn 39 to worklist
Processing use of (reg 135 [ D.13601 ]) in insn 39:
  Adding insn 38 to worklist
Processing use of (reg 0 r0) in insn 38:
Processing use of (reg 24 cc) in insn 25:
  Adding insn 24 to worklist
Processing use of (reg 139 [ irqs ]) in insn 24:
Processing use of (reg 24 cc) in insn 16:
  Adding insn 15 to worklist
Processing use of (reg 140 [ pdev ]) in insn 15:
Processing use of (reg 24 cc) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 144 [ type ]) in insn 7:


init_pmu

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={12d,12u} r1={12d,5u} r2={8d,1u} r3={7d} r11={1d,16u} r12={7d} r13={1d,22u} r14={7d,1u} r15={6d} r16={6d} r17={6d} r18={6d} r19={6d} r20={6d} r21={6d} r22={6d} r23={6d} r24={12d,6u} r25={1d,16u} r26={1d,15u} r27={6d} r28={6d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={6d} r38={6d} r39={6d} r40={6d} r41={6d} r42={6d} r43={6d} r44={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r76={6d} r77={6d} r78={6d} r79={6d} r80={6d} r81={6d} r82={6d} r83={6d} r84={6d} r85={6d} r86={6d} r87={6d} r88={6d} r89={6d} r90={6d} r91={6d} r92={6d} r93={6d} r94={6d} r95={6d} r96={6d} r97={6d} r98={6d} r99={6d} r100={6d} r101={6d} r102={6d} r103={6d} r104={6d} r105={6d} r106={6d} r107={6d} r108={6d} r109={6d} r110={6d} r111={6d} r112={6d} r113={6d} r114={6d} r115={6d} r116={6d} r117={6d} r118={6d} r119={6d} r120={6d} r121={6d} r122={6d} r123={6d} r124={6d} r125={6d} r126={6d} r127={6d} r135={1d,1u} r137={1d,1u} r138={2d,6u} r139={1d,2u} r140={1d,4u} r141={1d,1u} r142={4d,2u} r144={1d,3u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u,1d} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r157={1d,1u} 
;;    total ref usage 874{750d,123u,1e} in 57{51 regular + 6 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728
0[0,12] 1[12,12] 2[24,8] 3[32,7] 11[39,1] 12[40,7] 13[47,1] 14[48,7] 15[55,6] 16[61,6] 17[67,6] 18[73,6] 19[79,6] 20[85,6] 21[91,6] 22[97,6] 23[103,6] 24[109,12] 25[121,1] 26[122,1] 27[123,6] 28[129,6] 29[135,6] 30[141,6] 31[147,6] 32[153,6] 33[159,6] 34[165,6] 35[171,6] 36[177,6] 37[183,6] 38[189,6] 39[195,6] 40[201,6] 41[207,6] 42[213,6] 43[219,6] 44[225,6] 45[231,6] 46[237,6] 47[243,6] 48[249,6] 49[255,6] 50[261,6] 51[267,6] 52[273,6] 53[279,6] 54[285,6] 55[291,6] 56[297,6] 57[303,6] 58[309,6] 59[315,6] 60[321,6] 61[327,6] 62[333,6] 63[339,6] 64[345,6] 65[351,6] 66[357,6] 67[363,6] 68[369,6] 69[375,6] 70[381,6] 71[387,6] 72[393,6] 73[399,6] 74[405,6] 75[411,6] 76[417,6] 77[423,6] 78[429,6] 79[435,6] 80[441,6] 81[447,6] 82[453,6] 83[459,6] 84[465,6] 85[471,6] 86[477,6] 87[483,6] 88[489,6] 89[495,6] 90[501,6] 91[507,6] 92[513,6] 93[519,6] 94[525,6] 95[531,6] 96[537,6] 97[543,6] 98[549,6] 99[555,6] 100[561,6] 101[567,6] 102[573,6] 103[579,6] 104[585,6] 105[591,6] 106[597,6] 107[603,6] 108[609,6] 109[615,6] 110[621,6] 111[627,6] 112[633,6] 113[639,6] 114[645,6] 115[651,6] 116[657,6] 117[663,6] 118[669,6] 119[675,6] 120[681,6] 121[687,6] 122[693,6] 123[699,6] 124[705,6] 125[711,6] 126[717,6] 127[723,6] 135[729,1] 137[730,1] 138[731,2] 139[733,1] 140[734,1] 141[735,1] 142[736,4] 144[740,1] 145[741,1] 146[742,1] 147[743,1] 148[744,1] 150[745,1] 151[746,1] 152[747,1] 153[748,1] 157[749,1] 
(note 2 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 144
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 144
;; live  kill	
;; rd  in  	(10)
11, 23, 31, 38, 39, 46, 47, 54, 121, 122
;; rd  gen 	(2)
120, 740
;; rd  kill	(13)
109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 740

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 2 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 3 5 4 2 arch/arm/kernel/pmu.c:186 (set (reg/v:SI 144 [ type ])
        (reg:SI 0 r0 [ type ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ type ])
        (nil)))

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 8 2 arch/arm/kernel/pmu.c:189 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 144 [ type ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 8 7 11 2 arch/arm/kernel/pmu.c:189 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 134)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 2 -> ( 3 14)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144
;; rd  out 	(12)
11, 23, 31, 38, 39, 46, 47, 54, 120, 121, 122, 740


;; Succ edge  3 [50.0%]  (fallthru)
;; Succ edge  14 [50.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u7(11){ }u8(13){ }u9(25){ }u10(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 140 145
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144
;; live  gen 	 24 [cc] 140 145
;; live  kill	
;; rd  in  	(12)
11, 23, 31, 38, 39, 46, 47, 54, 120, 121, 122, 740
;; rd  gen 	(3)
119, 734, 741
;; rd  kill	(14)
109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 734, 741

;; Pred edge  2 [50.0%]  (fallthru)
(code_label 11 8 12 3 7 "" [0 uses])

(note 12 11 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 13 12 14 3 arch/arm/kernel/pmu.c:161 (set (reg/f:SI 145)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 14 13 15 3 arch/arm/kernel/pmu.c:161 (set (reg/v/f:SI 140 [ pdev ])
        (mem/s/f/j:SI (reg/f:SI 145) [0 pmu_devices+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 145)
        (expr_list:REG_EQUAL (mem/s/f/j:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182]) [0 pmu_devices+0 S4 A32])
            (nil))))

(insn 15 14 16 3 arch/arm/kernel/pmu.c:163 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 140 [ pdev ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 16 15 17 3 arch/arm/kernel/pmu.c:163 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 21)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 8986 [0x231a])
            (nil))))
;; End of basic block 3 -> ( 4 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 144
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 144
;; rd  out 	(14)
11, 23, 31, 38, 39, 46, 47, 54, 119, 121, 122, 734, 740, 741


;; Succ edge  4 [10.1%]  (fallthru)
;; Succ edge  5 [89.9%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u14(11){ }u15(13){ }u16(25){ }u17(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 142
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 142
;; live  kill	
;; rd  in  	(14)
11, 23, 31, 38, 39, 46, 47, 54, 119, 121, 122, 734, 740, 741
;; rd  gen 	(1)
739
;; rd  kill	(4)
736, 737, 738, 739

;; Pred edge  3 [10.1%]  (fallthru)
(note 17 16 18 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 18 17 135 4 arch/arm/kernel/pmu.c:164 (set (reg/v:SI 142 [ err ])
        (const_int -19 [0xffffffffffffffed])) 167 {*arm_movsi_insn} (nil))

(jump_insn 135 18 136 4 (set (pc)
        (label_ref 97)) -1 (nil))
;; End of basic block 4 -> ( 16)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142
;; rd  out 	(15)
11, 23, 31, 38, 39, 46, 47, 54, 119, 121, 122, 734, 739, 740, 741


;; Succ edge  16 [100.0%] 

(barrier 136 135 21)

;; Start of basic block ( 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u18(11){ }u19(13){ }u20(25){ }u21(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 24 [cc] 139
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 144
;; live  gen 	 24 [cc] 139
;; live  kill	
;; rd  in  	(14)
11, 23, 31, 38, 39, 46, 47, 54, 119, 121, 122, 734, 740, 741
;; rd  gen 	(2)
118, 733
;; rd  kill	(13)
109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 733

;; Pred edge  3 [89.9%] 
(code_label 21 136 22 5 8 "" [1 uses])

(note 22 21 23 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 23 22 24 5 arch/arm/kernel/pmu.c:166 (set (reg/v:SI 139 [ irqs ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 140 [ pdev ])
                (const_int 368 [0x170])) [0 <variable>.num_resources+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 24 23 25 5 arch/arm/kernel/pmu.c:172 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 139 [ irqs ])
            (const_int 1 [0x1]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 25 24 41 5 arch/arm/kernel/pmu.c:172 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 30)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 1371 [0x55b])
            (nil))))
;; End of basic block 5 -> ( 7 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 144
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 144
;; rd  out 	(15)
11, 23, 31, 38, 39, 46, 47, 54, 118, 121, 122, 733, 734, 740, 741


;; Succ edge  7 [13.7%] 
;; Succ edge  6 [86.3%]  (fallthru)

;; Start of basic block ( 5 7) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u25(11){ }u26(13){ }u27(25){ }u28(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 138 157
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140
;; live  gen 	 138 157
;; live  kill	
;; rd  in  	(18)
8, 11, 23, 31, 38, 39, 46, 47, 54, 115, 118, 121, 122, 729, 733, 734, 740, 741
;; rd  gen 	(2)
732, 749
;; rd  kill	(3)
731, 732, 749

;; Pred edge  5 [86.3%]  (fallthru)
;; Pred edge  7 [61.0%] 
(code_label 41 25 26 6 13 "" [1 uses])

(note 26 41 27 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 27 26 54 6 arch/arm/kernel/pmu.c:172 (set (reg/v:SI 138 [ i ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 54 27 137 6 include/linux/cpumask.h:738 (set (reg/f:SI 157)
        (symbol_ref:SI ("cpu_bit_bitmap") [flags 0xc0] <var_decl 0x10ac7240 cpu_bit_bitmap>)) 167 {*arm_movsi_insn} (nil))

(jump_insn 137 54 138 6 (set (pc)
        (label_ref 77)) -1 (nil))
;; End of basic block 6 -> ( 12)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 140 157
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 140 157
;; rd  out 	(20)
8, 11, 23, 31, 38, 39, 46, 47, 54, 115, 118, 121, 122, 729, 732, 733, 734, 740, 741, 749


;; Succ edge  12 [100.0%] 

(barrier 138 137 30)

;; Start of basic block ( 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u29(11){ }u30(13){ }u31(25){ }u32(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 144
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 135
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 144
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 135
;; live  kill	 14 [lr]
;; rd  in  	(15)
11, 23, 31, 38, 39, 46, 47, 54, 118, 121, 122, 733, 734, 740, 741
;; rd  gen 	(3)
8, 115, 729
;; rd  kill	(32)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 48, 49, 50, 51, 52, 53, 54, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 729

;; Pred edge  5 [13.7%] 
(code_label 30 138 31 7 10 "" [1 uses])

(note 31 30 32 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 32 31 33 7 arch/arm/kernel/pmu.c:172 discrim 1 (set (reg:SI 0 r0)
        (reg/v/f:SI 140 [ pdev ])) 167 {*arm_movsi_insn} (nil))

(insn 33 32 34 7 arch/arm/kernel/pmu.c:172 discrim 1 (set (reg:SI 1 r1)
        (reg/v:SI 144 [ type ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 144 [ type ])
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(call_insn 34 33 37 7 arch/arm/kernel/pmu.c:172 discrim 1 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("platform_get_irq") [flags 0x41] <function_decl 0x10f21400 platform_get_irq>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(call_insn 37 34 38 7 arch/arm/kernel/pmu.c:172 discrim 1 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("irq_can_set_affinity") [flags 0x41] <function_decl 0x10cfa500 irq_can_set_affinity>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 38 37 39 7 arch/arm/kernel/pmu.c:172 discrim 1 (set (reg:SI 135 [ D.13601 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 39 38 40 7 arch/arm/kernel/pmu.c:172 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 135 [ D.13601 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 135 [ D.13601 ])
        (nil)))

(jump_insn 40 39 139 7 arch/arm/kernel/pmu.c:172 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 41)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
            (nil))))
;; End of basic block 7 -> ( 8 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140
;; rd  out 	(15)
8, 23, 31, 38, 39, 46, 47, 115, 121, 122, 729, 733, 734, 740, 741


;; Succ edge  8 [39.0%]  (fallthru)
;; Succ edge  6 [61.0%] 

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(15)
8, 23, 31, 38, 39, 46, 47, 115, 121, 122, 729, 733, 734, 740, 741
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  7 [39.0%]  (fallthru)
(note 139 40 140 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(jump_insn 140 139 141 8 (set (pc)
        (label_ref 94)) -1 (nil))
;; End of basic block 8 -> ( 15)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(15)
8, 23, 31, 38, 39, 46, 47, 115, 121, 122, 729, 733, 734, 740, 741


;; Succ edge  15 [100.0%] 

(barrier 141 140 79)

;; Start of basic block ( 12) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u43(11){ }u44(13){ }u45(25){ }u46(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140 157
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 140 157
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 137 141 142 146 147 148 150 151 152 153
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140 157
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 137 141 142 146 147 148 150 151 152 153
;; live  kill	 14 [lr]
;; rd  in  	(31)
5, 8, 11, 23, 31, 38, 39, 46, 47, 54, 110, 121, 122, 729, 730, 731, 732, 733, 734, 735, 738, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749
;; rd  gen 	(12)
5, 112, 730, 735, 738, 742, 743, 744, 745, 746, 747, 748
;; rd  kill	(44)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 48, 49, 50, 51, 52, 53, 54, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 730, 735, 736, 737, 738, 739, 742, 743, 744, 745, 746, 747, 748

;; Pred edge  12 [95.5%] 
(code_label 79 141 45 9 15 "" [1 uses])

(note 45 79 47 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 47 45 48 9 arch/arm/kernel/pmu.c:176 (set (reg:SI 0 r0)
        (reg/v/f:SI 140 [ pdev ])) 167 {*arm_movsi_insn} (nil))

(insn 48 47 49 9 arch/arm/kernel/pmu.c:176 (set (reg:SI 1 r1)
        (reg/v:SI 138 [ i ])) 167 {*arm_movsi_insn} (nil))

(call_insn 49 48 50 9 arch/arm/kernel/pmu.c:176 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("platform_get_irq") [flags 0x41] <function_decl 0x10f21400 platform_get_irq>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 50 49 51 9 arch/arm/kernel/pmu.c:176 (set (reg:SI 137 [ D.13599 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 51 50 52 9 include/linux/cpumask.h:738 (set (reg:SI 146)
        (and:SI (reg/v:SI 138 [ i ])
            (const_int 31 [0x1f]))) 67 {*arm_andsi3_insn} (nil))

(insn 52 51 53 9 include/linux/cpumask.h:738 (set (reg:SI 147)
        (plus:SI (reg:SI 146)
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 146)
        (nil)))

(insn 53 52 55 9 include/linux/cpumask.h:738 (set (reg:SI 148)
        (ashift:SI (reg:SI 147)
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 147)
        (nil)))

(insn 55 53 56 9 include/linux/cpumask.h:738 (set (reg/v/f:SI 141 [ p ])
        (plus:SI (reg:SI 148)
            (reg/f:SI 157))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 148)
        (expr_list:REG_EQUAL (plus:SI (reg:SI 148)
                (symbol_ref:SI ("cpu_bit_bitmap") [flags 0xc0] <var_decl 0x10ac7240 cpu_bit_bitmap>))
            (nil))))

(insn 56 55 57 9 arch/arm/kernel/pmu.c:147 (set (reg:SI 150)
        (lshiftrt:SI (reg/v:SI 138 [ i ])
            (const_int 5 [0x5]))) 117 {*arm_shiftsi3} (nil))

(insn 57 56 58 9 arch/arm/kernel/pmu.c:147 (set (reg:SI 151)
        (ashift:SI (reg:SI 150)
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 150)
        (nil)))

(insn 58 57 59 9 arch/arm/kernel/pmu.c:147 (set (reg:SI 152)
        (neg:SI (reg:SI 151))) 127 {*arm_negsi2} (expr_list:REG_DEAD (reg:SI 151)
        (nil)))

(insn 59 58 61 9 arch/arm/kernel/pmu.c:147 (set (reg:SI 153)
        (plus:SI (reg/v/f:SI 141 [ p ])
            (reg:SI 152))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 152)
        (expr_list:REG_DEAD (reg/v/f:SI 141 [ p ])
            (nil))))

(insn 61 59 62 9 arch/arm/kernel/pmu.c:147 (set (reg:SI 1 r1)
        (reg:SI 153)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 153)
        (nil)))

(call_insn 62 61 63 9 arch/arm/kernel/pmu.c:147 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("irq_set_affinity") [flags 0x41] <function_decl 0x10cfa480 irq_set_affinity>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 63 62 64 9 arch/arm/kernel/pmu.c:147 (set (reg/v:SI 142 [ err ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 64 63 65 9 arch/arm/kernel/pmu.c:148 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 142 [ err ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 65 64 66 9 arch/arm/kernel/pmu.c:148 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 74)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 9 -> ( 10 11)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 140 142 157
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 139 140 142 157
;; rd  out 	(28)
5, 23, 31, 38, 39, 46, 47, 112, 121, 122, 729, 730, 731, 732, 733, 734, 735, 738, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749


;; Succ edge  10 [0.0%]  (fallthru,loop_exit)
;; Succ edge  11 [100.0%] 

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u71(11){ }u72(13){ }u73(25){ }u74(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 142
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 142
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	 14 [lr]
;; rd  in  	(28)
5, 23, 31, 38, 39, 46, 47, 112, 121, 122, 729, 730, 731, 732, 733, 734, 735, 738, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749
;; rd  gen 	(1)
4
;; rd  kill	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 48, 49, 50, 51, 52, 53, 54

;; Pred edge  9 [0.0%]  (fallthru,loop_exit)
(note 66 65 68 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 68 66 69 10 arch/arm/kernel/pmu.c:149 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x10f7b0a0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x10f7b0a0>)
        (nil)))

(insn 69 68 70 10 arch/arm/kernel/pmu.c:149 (set (reg:SI 1 r1)
        (reg:SI 137 [ D.13599 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 137 [ D.13599 ])
        (nil)))

(insn 70 69 71 10 arch/arm/kernel/pmu.c:149 (set (reg:SI 2 r2)
        (reg/v:SI 138 [ i ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 138 [ i ])
        (nil)))

(call_insn 71 70 142 10 arch/arm/kernel/pmu.c:149 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(jump_insn 142 71 143 10 (set (pc)
        (label_ref 97)) -1 (nil))
;; End of basic block 10 -> ( 16)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; rd  out 	(28)
4, 23, 31, 38, 39, 46, 47, 112, 121, 122, 729, 730, 731, 732, 733, 734, 735, 738, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749


;; Succ edge  16 [100.0%] 

(barrier 143 142 74)

;; Start of basic block ( 9) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u81(11){ }u82(13){ }u83(25){ }u84(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 140 157
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 138
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140 157
;; live  gen 	 138
;; live  kill	
;; rd  in  	(28)
5, 23, 31, 38, 39, 46, 47, 112, 121, 122, 729, 730, 731, 732, 733, 734, 735, 738, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749
;; rd  gen 	(1)
731
;; rd  kill	(2)
731, 732

;; Pred edge  9 [100.0%] 
(code_label 74 143 75 11 14 "" [1 uses])

(note 75 74 76 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 76 75 77 11 arch/arm/kernel/pmu.c:175 (set (reg/v:SI 138 [ i ])
        (plus:SI (reg/v:SI 138 [ i ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))
;; End of basic block 11 -> ( 12)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 140 157
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140 157
;; rd  out 	(27)
5, 23, 31, 38, 39, 46, 47, 112, 121, 122, 729, 730, 731, 733, 734, 735, 738, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749


;; Succ edge  12 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 11 6) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u86(11){ }u87(13){ }u88(25){ }u89(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 140 157
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 140 157
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(33)
5, 8, 11, 23, 31, 38, 39, 46, 47, 54, 112, 115, 118, 121, 122, 729, 730, 731, 732, 733, 734, 735, 738, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749
;; rd  gen 	(1)
110
;; rd  kill	(12)
109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120

;; Pred edge  11 [100.0%]  (fallthru,dfs_back)
;; Pred edge  6 [100.0%] 
(code_label 77 76 78 12 11 "" [1 uses])

(note 78 77 80 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 80 78 81 12 arch/arm/kernel/pmu.c:175 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 138 [ i ])
            (reg/v:SI 139 [ irqs ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 81 80 144 12 arch/arm/kernel/pmu.c:175 discrim 1 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 79)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9550 [0x254e])
            (nil))))
;; End of basic block 12 -> ( 9 13)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 140 157
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 140 157
;; rd  out 	(31)
5, 8, 11, 23, 31, 38, 39, 46, 47, 54, 110, 121, 122, 729, 730, 731, 732, 733, 734, 735, 738, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749


;; Succ edge  9 [95.5%] 
;; Succ edge  13 [4.5%]  (fallthru)

;; Start of basic block ( 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(31)
5, 8, 11, 23, 31, 38, 39, 46, 47, 54, 110, 121, 122, 729, 730, 731, 732, 733, 734, 735, 738, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  12 [4.5%]  (fallthru)
(note 144 81 145 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(jump_insn 145 144 146 13 (set (pc)
        (label_ref 94)) -1 (nil))
;; End of basic block 13 -> ( 15)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(31)
5, 8, 11, 23, 31, 38, 39, 46, 47, 54, 110, 121, 122, 729, 730, 731, 732, 733, 734, 735, 738, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749


;; Succ edge  15 [100.0%]  (loop_exit)

(barrier 146 145 134)

;; Start of basic block ( 2) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u93(11){ }u94(13){ }u95(25){ }u96(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; live  gen 	 0 [r0] 1 [r1] 142
;; live  kill	 14 [lr]
;; rd  in  	(12)
11, 23, 31, 38, 39, 46, 47, 54, 120, 121, 122, 740
;; rd  gen 	(2)
3, 737
;; rd  kill	(23)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 48, 49, 50, 51, 52, 53, 54, 736, 737, 738, 739

;; Pred edge  2 [50.0%] 
(code_label 134 146 86 14 17 "" [1 uses])

(note 86 134 88 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 88 86 89 14 arch/arm/kernel/pmu.c:194 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x10f7b0f0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x10f7b0f0>)
        (nil)))

(insn 89 88 90 14 arch/arm/kernel/pmu.c:194 (set (reg:SI 1 r1)
        (reg/v:SI 144 [ type ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 144 [ type ])
        (nil)))

(call_insn 90 89 91 14 arch/arm/kernel/pmu.c:194 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 91 90 147 14 arch/arm/kernel/pmu.c:196 (set (reg/v:SI 142 [ err ])
        (const_int -22 [0xffffffffffffffea])) 167 {*arm_movsi_insn} (nil))

(jump_insn 147 91 148 14 (set (pc)
        (label_ref 97)) -1 (nil))
;; End of basic block 14 -> ( 16)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; rd  out 	(12)
3, 23, 31, 38, 39, 46, 47, 120, 121, 122, 737, 740


;; Succ edge  16 [100.0%] 

(barrier 148 147 94)

;; Start of basic block ( 8 13) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u101(11){ }u102(13){ }u103(25){ }u104(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 142
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 142
;; live  kill	
;; rd  in  	(32)
5, 8, 11, 23, 31, 38, 39, 46, 47, 54, 110, 115, 121, 122, 729, 730, 731, 732, 733, 734, 735, 738, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749
;; rd  gen 	(1)
736
;; rd  kill	(4)
736, 737, 738, 739

;; Pred edge  8 [100.0%] 
;; Pred edge  13 [100.0%]  (loop_exit)
(code_label 94 148 95 15 12 "" [2 uses])

(note 95 94 96 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 96 95 97 15 arch/arm/kernel/pmu.c:173 (set (reg/v:SI 142 [ err ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 15 -> ( 16)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142
;; rd  out 	(32)
5, 8, 11, 23, 31, 38, 39, 46, 47, 54, 110, 115, 121, 122, 729, 730, 731, 732, 733, 734, 735, 736, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749


;; Succ edge  16 [100.0%]  (fallthru)

;; Start of basic block ( 15 10 4 14) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u105(11){ }u106(13){ }u107(25){ }u108(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(40)
3, 4, 5, 8, 11, 23, 31, 38, 39, 46, 47, 54, 110, 112, 115, 119, 120, 121, 122, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749
;; rd  gen 	(1)
2
;; rd  kill	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11

;; Pred edge  15 [100.0%]  (fallthru)
;; Pred edge  10 [100.0%] 
;; Pred edge  4 [100.0%] 
;; Pred edge  14 [100.0%] 
(code_label 97 96 98 16 9 "" [3 uses])

(note 98 97 103 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 103 98 109 16 arch/arm/kernel/pmu.c:200 (set (reg/i:SI 0 r0)
        (reg/v:SI 142 [ err ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 142 [ err ])
        (nil)))

(insn 109 103 0 16 arch/arm/kernel/pmu.c:200 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 16 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(36)
2, 23, 31, 38, 39, 46, 47, 54, 110, 112, 115, 119, 120, 121, 122, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function release_pmu (release_pmu)[0:700]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 8 (  1.3)
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 10 (  1.7)
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 10 (  1.7)


release_pmu

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={5d,5u} r1={5d,2u} r2={3d} r3={3d} r11={1d,5u} r12={3d} r13={1d,7u} r14={3d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={3d,1u} r25={1d,5u} r26={1d,4u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r133={2d,1u} r135={1d,1u,1d} r136={1d,2u} r137={1d,1u} 
;;    total ref usage 290{254d,35u,1e} in 16{14 regular + 2 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248
0[0,5] 1[5,5] 2[10,3] 3[13,3] 11[16,1] 12[17,3] 13[20,1] 14[21,3] 15[24,2] 16[26,2] 17[28,2] 18[30,2] 19[32,2] 20[34,2] 21[36,2] 22[38,2] 23[40,2] 24[42,3] 25[45,1] 26[46,1] 27[47,2] 28[49,2] 29[51,2] 30[53,2] 31[55,2] 32[57,2] 33[59,2] 34[61,2] 35[63,2] 36[65,2] 37[67,2] 38[69,2] 39[71,2] 40[73,2] 41[75,2] 42[77,2] 43[79,2] 44[81,2] 45[83,2] 46[85,2] 47[87,2] 48[89,2] 49[91,2] 50[93,2] 51[95,2] 52[97,2] 53[99,2] 54[101,2] 55[103,2] 56[105,2] 57[107,2] 58[109,2] 59[111,2] 60[113,2] 61[115,2] 62[117,2] 63[119,2] 64[121,2] 65[123,2] 66[125,2] 67[127,2] 68[129,2] 69[131,2] 70[133,2] 71[135,2] 72[137,2] 73[139,2] 74[141,2] 75[143,2] 76[145,2] 77[147,2] 78[149,2] 79[151,2] 80[153,2] 81[155,2] 82[157,2] 83[159,2] 84[161,2] 85[163,2] 86[165,2] 87[167,2] 88[169,2] 89[171,2] 90[173,2] 91[175,2] 92[177,2] 93[179,2] 94[181,2] 95[183,2] 96[185,2] 97[187,2] 98[189,2] 99[191,2] 100[193,2] 101[195,2] 102[197,2] 103[199,2] 104[201,2] 105[203,2] 106[205,2] 107[207,2] 108[209,2] 109[211,2] 110[213,2] 111[215,2] 112[217,2] 113[219,2] 114[221,2] 115[223,2] 116[225,2] 117[227,2] 118[229,2] 119[231,2] 120[233,2] 121[235,2] 122[237,2] 123[239,2] 124[241,2] 125[243,2] 126[245,2] 127[247,2] 133[249,2] 135[251,1] 136[252,1] 137[253,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d4(0){ }d9(1){ }d12(2){ }d15(3){ }d16(11){ }d19(12){ }d20(13){ }d23(14){ }d45(25){ }d46(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
4, 9, 12, 15, 16, 19, 20, 23, 45, 46
;; rd  kill	(26)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 45, 46
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(10)
4, 9, 12, 15, 16, 19, 20, 23, 45, 46

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d16(bb 0 insn -1) }u1(13){ d20(bb 0 insn -1) }u2(25){ d45(bb 0 insn -1) }u3(26){ d46(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 135 136 137
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 135 136 137
;; live  kill	
;; rd  in  	(10)
4, 9, 12, 15, 16, 19, 20, 23, 45, 46
;; rd  gen 	(4)
44, 251, 252, 253
;; rd  kill	(6)
42, 43, 44, 251, 252, 253
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; rd  out 	(14)
4, 9, 12, 15, 16, 19, 20, 23, 44, 45, 46, 251, 252, 253
;;  UD chains for artificial uses
;;   reg 11 { d16(bb 0 insn -1) }
;;   reg 13 { d20(bb 0 insn -1) }
;;   reg 25 { d45(bb 0 insn -1) }
;;   reg 26 { d46(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d4(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 7
;;      reg 135 { d251(bb 2 insn 2) }
;;      reg 136 { d252(bb 2 insn 6) }
;;   eq_note reg 135 { }
;;   UD chains for insn luid 3 uid 8
;;      reg 137 { d253(bb 2 insn 7) }
;;   UD chains for insn luid 4 uid 9
;;      reg 24 { d44(bb 2 insn 8) }

( 2 )->[3]->( 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u10(11){ d16(bb 0 insn -1) }u11(13){ d20(bb 0 insn -1) }u12(25){ d45(bb 0 insn -1) }u13(26){ d46(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 133
;; live  kill	 14 [lr]
;; rd  in  	(14)
4, 9, 12, 15, 16, 19, 20, 23, 44, 45, 46, 251, 252, 253
;; rd  gen 	(1)
250
;; rd  kill	(5)
21, 22, 23, 249, 250
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; rd  out 	(14)
4, 9, 12, 15, 16, 19, 20, 44, 45, 46, 250, 251, 252, 253
;;  UD chains for artificial uses
;;   reg 11 { d16(bb 0 insn -1) }
;;   reg 13 { d20(bb 0 insn -1) }
;;   reg 25 { d45(bb 0 insn -1) }
;;   reg 26 { d46(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 14
;;      reg 13 { d20(bb 0 insn -1) }
;;      reg 0 { d0(bb 3 insn 12) }
;;      reg 1 { d8(bb 3 insn 13) }

( 2 )->[4]->( 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u17(11){ d16(bb 0 insn -1) }u18(13){ d20(bb 0 insn -1) }u19(25){ d45(bb 0 insn -1) }u20(26){ d46(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; live  gen 	 1 [r1] 133
;; live  kill	 14 [lr]
;; rd  in  	(14)
4, 9, 12, 15, 16, 19, 20, 23, 44, 45, 46, 251, 252, 253
;; rd  gen 	(1)
249
;; rd  kill	(5)
21, 22, 23, 249, 250
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; rd  out 	(14)
4, 9, 12, 15, 16, 19, 20, 44, 45, 46, 249, 251, 252, 253
;;  UD chains for artificial uses
;;   reg 11 { d16(bb 0 insn -1) }
;;   reg 13 { d20(bb 0 insn -1) }
;;   reg 25 { d45(bb 0 insn -1) }
;;   reg 26 { d46(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 24
;;      reg 136 { d252(bb 2 insn 6) }
;;   UD chains for insn luid 2 uid 25
;;      reg 13 { d20(bb 0 insn -1) }
;;      reg 0 { d4(bb 0 insn -1) }
;;      reg 1 { d5(bb 4 insn 24) }

( 4 3 )->[5]->( 1 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u25(11){ d16(bb 0 insn -1) }u26(13){ d20(bb 0 insn -1) }u27(25){ d45(bb 0 insn -1) }u28(26){ d46(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(15)
4, 9, 12, 15, 16, 19, 20, 44, 45, 46, 249, 250, 251, 252, 253
;; rd  gen 	(1)
1
;; rd  kill	(5)
0, 1, 2, 3, 4
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(15)
1, 9, 12, 15, 16, 19, 20, 44, 45, 46, 249, 250, 251, 252, 253
;;  UD chains for artificial uses
;;   reg 11 { d16(bb 0 insn -1) }
;;   reg 13 { d20(bb 0 insn -1) }
;;   reg 25 { d45(bb 0 insn -1) }
;;   reg 26 { d46(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 33
;;      reg 133 { d250(bb 3 insn 15) d249(bb 4 insn 26) }
;;   UD chains for insn luid 1 uid 39
;;      reg 0 { d1(bb 5 insn 33) }

( 5 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u31(0){ d1(bb 5 insn 33) }u32(11){ d16(bb 0 insn -1) }u33(13){ d20(bb 0 insn -1) }u34(14){ }u35(25){ d45(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(15)
1, 9, 12, 15, 16, 19, 20, 44, 45, 46, 249, 250, 251, 252, 253
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(15)
1, 9, 12, 15, 16, 19, 20, 44, 45, 46, 249, 250, 251, 252, 253
;;  UD chains for artificial uses
;;   reg 0 { d1(bb 5 insn 33) }
;;   reg 11 { d16(bb 0 insn -1) }
;;   reg 13 { d20(bb 0 insn -1) }
;;   reg 14 { }
;;   reg 25 { d45(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 9 to worklist
  Adding insn 43 to worklist
  Adding insn 14 to worklist
  Adding insn 25 to worklist
  Adding insn 20 to worklist
  Adding insn 39 to worklist
Finished finding needed instructions:
  Adding insn 33 to worklist
Processing use of (reg 133 [ D.13490 ]) in insn 33:
  Adding insn 15 to worklist
  Adding insn 26 to worklist
Processing use of (reg 0 r0) in insn 39:
Processing use of (reg 13 sp) in insn 25:
Processing use of (reg 0 r0) in insn 25:
Processing use of (reg 1 r1) in insn 25:
  Adding insn 24 to worklist
Processing use of (reg 136) in insn 24:
  Adding insn 6 to worklist
Processing use of (reg 13 sp) in insn 14:
Processing use of (reg 0 r0) in insn 14:
  Adding insn 12 to worklist
Processing use of (reg 1 r1) in insn 14:
  Adding insn 13 to worklist
Processing use of (reg 24 cc) in insn 9:
  Adding insn 8 to worklist
Processing use of (reg 137) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 135 [ type ]) in insn 7:
  Adding insn 2 to worklist
Processing use of (reg 136) in insn 7:
Processing use of (reg 0 r0) in insn 2:


release_pmu

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={5d,5u} r1={5d,2u} r2={3d} r3={3d} r11={1d,5u} r12={3d} r13={1d,7u} r14={3d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={3d,1u} r25={1d,5u} r26={1d,4u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r133={2d,1u} r135={1d,1u,1d} r136={1d,2u} r137={1d,1u} 
;;    total ref usage 290{254d,35u,1e} in 16{14 regular + 2 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248
0[0,5] 1[5,5] 2[10,3] 3[13,3] 11[16,1] 12[17,3] 13[20,1] 14[21,3] 15[24,2] 16[26,2] 17[28,2] 18[30,2] 19[32,2] 20[34,2] 21[36,2] 22[38,2] 23[40,2] 24[42,3] 25[45,1] 26[46,1] 27[47,2] 28[49,2] 29[51,2] 30[53,2] 31[55,2] 32[57,2] 33[59,2] 34[61,2] 35[63,2] 36[65,2] 37[67,2] 38[69,2] 39[71,2] 40[73,2] 41[75,2] 42[77,2] 43[79,2] 44[81,2] 45[83,2] 46[85,2] 47[87,2] 48[89,2] 49[91,2] 50[93,2] 51[95,2] 52[97,2] 53[99,2] 54[101,2] 55[103,2] 56[105,2] 57[107,2] 58[109,2] 59[111,2] 60[113,2] 61[115,2] 62[117,2] 63[119,2] 64[121,2] 65[123,2] 66[125,2] 67[127,2] 68[129,2] 69[131,2] 70[133,2] 71[135,2] 72[137,2] 73[139,2] 74[141,2] 75[143,2] 76[145,2] 77[147,2] 78[149,2] 79[151,2] 80[153,2] 81[155,2] 82[157,2] 83[159,2] 84[161,2] 85[163,2] 86[165,2] 87[167,2] 88[169,2] 89[171,2] 90[173,2] 91[175,2] 92[177,2] 93[179,2] 94[181,2] 95[183,2] 96[185,2] 97[187,2] 98[189,2] 99[191,2] 100[193,2] 101[195,2] 102[197,2] 103[199,2] 104[201,2] 105[203,2] 106[205,2] 107[207,2] 108[209,2] 109[211,2] 110[213,2] 111[215,2] 112[217,2] 113[219,2] 114[221,2] 115[223,2] 116[225,2] 117[227,2] 118[229,2] 119[231,2] 120[233,2] 121[235,2] 122[237,2] 123[239,2] 124[241,2] 125[243,2] 126[245,2] 127[247,2] 133[249,2] 135[251,1] 136[252,1] 137[253,1] 
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 135 136 137
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 135 136 137
;; live  kill	
;; rd  in  	(10)
4, 9, 12, 15, 16, 19, 20, 23, 45, 46
;; rd  gen 	(4)
44, 251, 252, 253
;; rd  kill	(6)
42, 43, 44, 251, 252, 253

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 arch/arm/kernel/pmu.c:134 (set (reg/v:SI 135 [ type ])
        (reg:SI 0 r0 [ type ])) 167 {*arm_movsi_insn} (nil))

(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 3 7 2 arch/arm/kernel/pmu.c:135 (set (reg/f:SI 136)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 7 6 8 2 arch/arm/kernel/pmu.c:135 (set (reg/f:SI 137)
        (mem/s/f/j:SI (plus:SI (mult:SI (reg/v:SI 135 [ type ])
                    (const_int 4 [0x4]))
                (reg/f:SI 136)) [0 pmu_devices S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 135 [ type ])
        (expr_list:REG_EQUAL (mem/s/f/j:SI (plus:SI (mult:SI (reg/v:SI 135 [ type ])
                        (const_int 4 [0x4]))
                    (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) [0 pmu_devices S4 A32])
            (nil))))

(insn 8 7 9 2 arch/arm/kernel/pmu.c:135 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 137)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/f:SI 137)
        (nil)))

(jump_insn 9 8 10 2 arch/arm/kernel/pmu.c:135 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 18)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; rd  out 	(14)
4, 9, 12, 15, 16, 19, 20, 23, 44, 45, 46, 251, 252, 253


;; Succ edge  3 [0.0%]  (fallthru)
;; Succ edge  4 [100.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u10(11){ }u11(13){ }u12(25){ }u13(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 133
;; live  kill	 14 [lr]
;; rd  in  	(14)
4, 9, 12, 15, 16, 19, 20, 23, 44, 45, 46, 251, 252, 253
;; rd  gen 	(1)
250
;; rd  kill	(5)
21, 22, 23, 249, 250

;; Pred edge  2 [0.0%]  (fallthru)
(note 10 9 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 12 10 13 3 arch/arm/kernel/pmu.c:135 discrim 1 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x10f8ef00>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x10f8ef00>)
        (nil)))

(insn 13 12 14 3 arch/arm/kernel/pmu.c:135 discrim 1 (set (reg:SI 1 r1)
        (const_int 135 [0x87])) 167 {*arm_movsi_insn} (nil))

(call_insn 14 13 15 3 arch/arm/kernel/pmu.c:135 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("warn_slowpath_null") [flags 0x41] <function_decl 0x10a2ed80 warn_slowpath_null>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 15 14 43 3 arch/arm/kernel/pmu.c:136 (set (reg:SI 133 [ D.13490 ])
        (const_int -22 [0xffffffffffffffea])) 167 {*arm_movsi_insn} (nil))

(jump_insn 43 15 44 3 (set (pc)
        (label_ref 27)) -1 (nil))
;; End of basic block 3 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; rd  out 	(14)
4, 9, 12, 15, 16, 19, 20, 44, 45, 46, 250, 251, 252, 253


;; Succ edge  5 [100.0%] 

(barrier 44 43 18)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u17(11){ }u18(13){ }u19(25){ }u20(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; live  gen 	 1 [r1] 133
;; live  kill	 14 [lr]
;; rd  in  	(14)
4, 9, 12, 15, 16, 19, 20, 23, 44, 45, 46, 251, 252, 253
;; rd  gen 	(1)
249
;; rd  kill	(5)
21, 22, 23, 249, 250

;; Pred edge  2 [100.0%] 
(code_label 18 44 19 4 22 "" [1 uses])

(note 19 18 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 20 19 24 4 arch/arm/kernel/pmu.c:137 (parallel [
            (asm_operands/v ("dmb") ("") 0 []
                 [] 5334266)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 24 20 25 4 arch/arm/kernel/pmu.c:137 (set (reg:SI 1 r1)
        (plus:SI (reg/f:SI 136)
            (const_int 4 [0x4]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 136)
        (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                    (const_int 4 [0x4])))
            (nil))))

(call_insn 25 24 26 4 arch/arm/kernel/pmu.c:137 (parallel [
            (call (mem:SI (symbol_ref:SI ("_clear_bit") [flags 0x41] <function_decl 0x512e0080 _clear_bit>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 26 25 27 4 arch/arm/kernel/pmu.c:138 (set (reg:SI 133 [ D.13490 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 4 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; rd  out 	(14)
4, 9, 12, 15, 16, 19, 20, 44, 45, 46, 249, 251, 252, 253


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u25(11){ }u26(13){ }u27(25){ }u28(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(15)
4, 9, 12, 15, 16, 19, 20, 44, 45, 46, 249, 250, 251, 252, 253
;; rd  gen 	(1)
1
;; rd  kill	(5)
0, 1, 2, 3, 4

;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%] 
(code_label 27 26 28 5 23 "" [1 uses])

(note 28 27 33 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 33 28 39 5 arch/arm/kernel/pmu.c:139 (set (reg/i:SI 0 r0)
        (reg:SI 133 [ D.13490 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 133 [ D.13490 ])
        (nil)))

(insn 39 33 0 5 arch/arm/kernel/pmu.c:139 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 5 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(15)
1, 9, 12, 15, 16, 19, 20, 44, 45, 46, 249, 250, 251, 252, 253


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function reserve_pmu (reserve_pmu)[0:699]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 11 (  1.6)
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 12 (  1.7)
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 12 (  1.7)


reserve_pmu

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={5d,6u} r1={5d,2u} r2={3d} r3={3d} r11={1d,6u} r12={3d} r13={1d,8u} r14={3d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={4d,2u} r25={1d,6u} r26={1d,5u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r133={3d,2u} r134={1d,1u} r137={1d,2u,1d} r138={1d,3u} 
;;    total ref usage 301{256d,44u,1e} in 19{17 regular + 2 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249
0[0,5] 1[5,5] 2[10,3] 3[13,3] 11[16,1] 12[17,3] 13[20,1] 14[21,3] 15[24,2] 16[26,2] 17[28,2] 18[30,2] 19[32,2] 20[34,2] 21[36,2] 22[38,2] 23[40,2] 24[42,4] 25[46,1] 26[47,1] 27[48,2] 28[50,2] 29[52,2] 30[54,2] 31[56,2] 32[58,2] 33[60,2] 34[62,2] 35[64,2] 36[66,2] 37[68,2] 38[70,2] 39[72,2] 40[74,2] 41[76,2] 42[78,2] 43[80,2] 44[82,2] 45[84,2] 46[86,2] 47[88,2] 48[90,2] 49[92,2] 50[94,2] 51[96,2] 52[98,2] 53[100,2] 54[102,2] 55[104,2] 56[106,2] 57[108,2] 58[110,2] 59[112,2] 60[114,2] 61[116,2] 62[118,2] 63[120,2] 64[122,2] 65[124,2] 66[126,2] 67[128,2] 68[130,2] 69[132,2] 70[134,2] 71[136,2] 72[138,2] 73[140,2] 74[142,2] 75[144,2] 76[146,2] 77[148,2] 78[150,2] 79[152,2] 80[154,2] 81[156,2] 82[158,2] 83[160,2] 84[162,2] 85[164,2] 86[166,2] 87[168,2] 88[170,2] 89[172,2] 90[174,2] 91[176,2] 92[178,2] 93[180,2] 94[182,2] 95[184,2] 96[186,2] 97[188,2] 98[190,2] 99[192,2] 100[194,2] 101[196,2] 102[198,2] 103[200,2] 104[202,2] 105[204,2] 106[206,2] 107[208,2] 108[210,2] 109[212,2] 110[214,2] 111[216,2] 112[218,2] 113[220,2] 114[222,2] 115[224,2] 116[226,2] 117[228,2] 118[230,2] 119[232,2] 120[234,2] 121[236,2] 122[238,2] 123[240,2] 124[242,2] 125[244,2] 126[246,2] 127[248,2] 133[250,3] 134[253,1] 137[254,1] 138[255,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d4(0){ }d9(1){ }d12(2){ }d15(3){ }d16(11){ }d19(12){ }d20(13){ }d23(14){ }d46(25){ }d47(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
4, 9, 12, 15, 16, 19, 20, 23, 46, 47
;; rd  kill	(26)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 46, 47
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(10)
4, 9, 12, 15, 16, 19, 20, 23, 46, 47

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d16(bb 0 insn -1) }u1(13){ d20(bb 0 insn -1) }u2(25){ d46(bb 0 insn -1) }u3(26){ d47(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 137 138
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 134 137 138
;; live  kill	 14 [lr]
;; rd  in  	(10)
4, 9, 12, 15, 16, 19, 20, 23, 46, 47
;; rd  gen 	(5)
3, 44, 253, 254, 255
;; rd  kill	(15)
0, 1, 2, 3, 4, 21, 22, 23, 42, 43, 44, 45, 253, 254, 255
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138
;; rd  out 	(13)
3, 9, 12, 15, 16, 19, 20, 44, 46, 47, 253, 254, 255
;;  UD chains for artificial uses
;;   reg 11 { d16(bb 0 insn -1) }
;;   reg 13 { d20(bb 0 insn -1) }
;;   reg 25 { d46(bb 0 insn -1) }
;;   reg 26 { d47(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d4(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 10
;;      reg 138 { d255(bb 2 insn 7) }
;;   UD chains for insn luid 3 uid 11
;;      reg 13 { d20(bb 0 insn -1) }
;;      reg 0 { d4(bb 0 insn -1) }
;;      reg 1 { d6(bb 2 insn 10) }
;;   UD chains for insn luid 4 uid 12
;;      reg 0 { d3(bb 2 insn 11) }
;;   UD chains for insn luid 5 uid 13
;;      reg 134 { d253(bb 2 insn 12) }
;;   UD chains for insn luid 6 uid 14
;;      reg 24 { d44(bb 2 insn 13) }

( 2 )->[3]->( 6 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u12(11){ d16(bb 0 insn -1) }u13(13){ d20(bb 0 insn -1) }u14(25){ d46(bb 0 insn -1) }u15(26){ d47(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(13)
3, 9, 12, 15, 16, 19, 20, 44, 46, 47, 253, 254, 255
;; rd  gen 	(1)
252
;; rd  kill	(3)
250, 251, 252
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; rd  out 	(14)
3, 9, 12, 15, 16, 19, 20, 44, 46, 47, 252, 253, 254, 255
;;  UD chains for artificial uses
;;   reg 11 { d16(bb 0 insn -1) }
;;   reg 13 { d20(bb 0 insn -1) }
;;   reg 25 { d46(bb 0 insn -1) }
;;   reg 26 { d47(bb 0 insn -1) }

( 2 )->[4]->( 5 6 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u16(11){ d16(bb 0 insn -1) }u17(13){ d20(bb 0 insn -1) }u18(25){ d46(bb 0 insn -1) }u19(26){ d47(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138
;; lr  def 	 24 [cc] 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138
;; live  gen 	 24 [cc] 133
;; live  kill	
;; rd  in  	(13)
3, 9, 12, 15, 16, 19, 20, 44, 46, 47, 253, 254, 255
;; rd  gen 	(2)
43, 250
;; rd  kill	(7)
42, 43, 44, 45, 250, 251, 252
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137 138
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 138
;; rd  out 	(14)
3, 9, 12, 15, 16, 19, 20, 43, 46, 47, 250, 253, 254, 255
;;  UD chains for artificial uses
;;   reg 11 { d16(bb 0 insn -1) }
;;   reg 13 { d20(bb 0 insn -1) }
;;   reg 25 { d46(bb 0 insn -1) }
;;   reg 26 { d47(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 22
;;      reg 137 { d254(bb 2 insn 2) }
;;      reg 138 { d255(bb 2 insn 7) }
;;   eq_note reg 137 { }
;;   UD chains for insn luid 1 uid 23
;;      reg 133 { d250(bb 4 insn 22) }
;;   UD chains for insn luid 2 uid 24
;;      reg 24 { d43(bb 4 insn 23) }

( 4 )->[5]->( 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u25(11){ d16(bb 0 insn -1) }u26(13){ d20(bb 0 insn -1) }u27(25){ d46(bb 0 insn -1) }u28(26){ d47(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138
;; live  gen 	 0 [r0] 1 [r1] 133
;; live  kill	 14 [lr]
;; rd  in  	(14)
3, 9, 12, 15, 16, 19, 20, 43, 46, 47, 250, 253, 254, 255
;; rd  gen 	(1)
251
;; rd  kill	(6)
21, 22, 23, 250, 251, 252
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; rd  out 	(14)
3, 9, 12, 15, 16, 19, 20, 43, 46, 47, 251, 253, 254, 255
;;  UD chains for artificial uses
;;   reg 11 { d16(bb 0 insn -1) }
;;   reg 13 { d20(bb 0 insn -1) }
;;   reg 25 { d46(bb 0 insn -1) }
;;   reg 26 { d47(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 29
;;      reg 137 { d254(bb 2 insn 2) }
;;   UD chains for insn luid 2 uid 30
;;      reg 138 { d255(bb 2 insn 7) }
;;   UD chains for insn luid 3 uid 31
;;      reg 13 { d20(bb 0 insn -1) }
;;      reg 0 { d1(bb 5 insn 29) }
;;      reg 1 { d5(bb 5 insn 30) }

( 4 5 3 )->[6]->( 1 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u34(11){ d16(bb 0 insn -1) }u35(13){ d20(bb 0 insn -1) }u36(25){ d46(bb 0 insn -1) }u37(26){ d47(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(17)
3, 9, 12, 15, 16, 19, 20, 43, 44, 46, 47, 250, 251, 252, 253, 254, 255
;; rd  gen 	(1)
0
;; rd  kill	(5)
0, 1, 2, 3, 4
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(17)
0, 9, 12, 15, 16, 19, 20, 43, 44, 46, 47, 250, 251, 252, 253, 254, 255
;;  UD chains for artificial uses
;;   reg 11 { d16(bb 0 insn -1) }
;;   reg 13 { d20(bb 0 insn -1) }
;;   reg 25 { d46(bb 0 insn -1) }
;;   reg 26 { d47(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 39
;;      reg 133 { d252(bb 3 insn 16) d251(bb 5 insn 32) d250(bb 4 insn 22) }
;;   UD chains for insn luid 1 uid 45
;;      reg 0 { d0(bb 6 insn 39) }

( 6 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u40(0){ d0(bb 6 insn 39) }u41(11){ d16(bb 0 insn -1) }u42(13){ d20(bb 0 insn -1) }u43(14){ }u44(25){ d46(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(17)
0, 9, 12, 15, 16, 19, 20, 43, 44, 46, 47, 250, 251, 252, 253, 254, 255
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(17)
0, 9, 12, 15, 16, 19, 20, 43, 44, 46, 47, 250, 251, 252, 253, 254, 255
;;  UD chains for artificial uses
;;   reg 0 { d0(bb 6 insn 39) }
;;   reg 11 { d16(bb 0 insn -1) }
;;   reg 13 { d20(bb 0 insn -1) }
;;   reg 14 { }
;;   reg 25 { d46(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 14 to worklist
  Adding insn 11 to worklist
  Adding insn 49 to worklist
  Adding insn 24 to worklist
  Adding insn 31 to worklist
  Adding insn 26 to worklist
  Adding insn 45 to worklist
Finished finding needed instructions:
  Adding insn 39 to worklist
Processing use of (reg 133 [ pdev ]) in insn 39:
  Adding insn 16 to worklist
  Adding insn 32 to worklist
  Adding insn 22 to worklist
Processing use of (reg 137 [ type ]) in insn 22:
  Adding insn 2 to worklist
Processing use of (reg 138) in insn 22:
  Adding insn 7 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 0 r0) in insn 45:
Processing use of (reg 13 sp) in insn 31:
Processing use of (reg 0 r0) in insn 31:
  Adding insn 29 to worklist
Processing use of (reg 1 r1) in insn 31:
  Adding insn 30 to worklist
Processing use of (reg 138) in insn 30:
Processing use of (reg 137 [ type ]) in insn 29:
Processing use of (reg 24 cc) in insn 24:
  Adding insn 23 to worklist
Processing use of (reg 133 [ pdev ]) in insn 23:
Processing use of (reg 13 sp) in insn 11:
Processing use of (reg 0 r0) in insn 11:
Processing use of (reg 1 r1) in insn 11:
  Adding insn 10 to worklist
Processing use of (reg 138) in insn 10:
Processing use of (reg 24 cc) in insn 14:
  Adding insn 13 to worklist
Processing use of (reg 134 [ D.13461 ]) in insn 13:
  Adding insn 12 to worklist
Processing use of (reg 0 r0) in insn 12:


reserve_pmu

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={5d,6u} r1={5d,2u} r2={3d} r3={3d} r11={1d,6u} r12={3d} r13={1d,8u} r14={3d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={4d,2u} r25={1d,6u} r26={1d,5u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r133={3d,2u} r134={1d,1u} r137={1d,2u,1d} r138={1d,3u} 
;;    total ref usage 301{256d,44u,1e} in 19{17 regular + 2 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249
0[0,5] 1[5,5] 2[10,3] 3[13,3] 11[16,1] 12[17,3] 13[20,1] 14[21,3] 15[24,2] 16[26,2] 17[28,2] 18[30,2] 19[32,2] 20[34,2] 21[36,2] 22[38,2] 23[40,2] 24[42,4] 25[46,1] 26[47,1] 27[48,2] 28[50,2] 29[52,2] 30[54,2] 31[56,2] 32[58,2] 33[60,2] 34[62,2] 35[64,2] 36[66,2] 37[68,2] 38[70,2] 39[72,2] 40[74,2] 41[76,2] 42[78,2] 43[80,2] 44[82,2] 45[84,2] 46[86,2] 47[88,2] 48[90,2] 49[92,2] 50[94,2] 51[96,2] 52[98,2] 53[100,2] 54[102,2] 55[104,2] 56[106,2] 57[108,2] 58[110,2] 59[112,2] 60[114,2] 61[116,2] 62[118,2] 63[120,2] 64[122,2] 65[124,2] 66[126,2] 67[128,2] 68[130,2] 69[132,2] 70[134,2] 71[136,2] 72[138,2] 73[140,2] 74[142,2] 75[144,2] 76[146,2] 77[148,2] 78[150,2] 79[152,2] 80[154,2] 81[156,2] 82[158,2] 83[160,2] 84[162,2] 85[164,2] 86[166,2] 87[168,2] 88[170,2] 89[172,2] 90[174,2] 91[176,2] 92[178,2] 93[180,2] 94[182,2] 95[184,2] 96[186,2] 97[188,2] 98[190,2] 99[192,2] 100[194,2] 101[196,2] 102[198,2] 103[200,2] 104[202,2] 105[204,2] 106[206,2] 107[208,2] 108[210,2] 109[212,2] 110[214,2] 111[216,2] 112[218,2] 113[220,2] 114[222,2] 115[224,2] 116[226,2] 117[228,2] 118[230,2] 119[232,2] 120[234,2] 121[236,2] 122[238,2] 123[240,2] 124[242,2] 125[244,2] 126[246,2] 127[248,2] 133[250,3] 134[253,1] 137[254,1] 138[255,1] 
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 137 138
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 134 137 138
;; live  kill	 14 [lr]
;; rd  in  	(10)
4, 9, 12, 15, 16, 19, 20, 23, 46, 47
;; rd  gen 	(5)
3, 44, 253, 254, 255
;; rd  kill	(15)
0, 1, 2, 3, 4, 21, 22, 23, 42, 43, 44, 45, 253, 254, 255

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 arch/arm/kernel/pmu.c:116 (set (reg/v:SI 137 [ type ])
        (reg:SI 0 r0 [ type ])) 167 {*arm_movsi_insn} (nil))

(note 3 2 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 3 10 2 arch/arm/kernel/pmu.c:119 (set (reg/f:SI 138)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 10 7 11 2 arch/arm/kernel/pmu.c:119 (set (reg:SI 1 r1)
        (plus:SI (reg/f:SI 138)
            (const_int 4 [0x4]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                (const_int 4 [0x4])))
        (nil)))

(call_insn 11 10 12 2 arch/arm/kernel/pmu.c:119 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("_test_and_set_bit") [flags 0x41] <function_decl 0x512e0180 _test_and_set_bit>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 12 11 13 2 arch/arm/kernel/pmu.c:119 (set (reg:SI 134 [ D.13461 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 13 12 14 2 arch/arm/kernel/pmu.c:119 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 134 [ D.13461 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 134 [ D.13461 ])
        (nil)))

(jump_insn 14 13 15 2 arch/arm/kernel/pmu.c:119 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 19)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138
;; rd  out 	(13)
3, 9, 12, 15, 16, 19, 20, 44, 46, 47, 253, 254, 255


;; Succ edge  3 [39.0%]  (fallthru)
;; Succ edge  4 [61.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u12(11){ }u13(13){ }u14(25){ }u15(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(13)
3, 9, 12, 15, 16, 19, 20, 44, 46, 47, 253, 254, 255
;; rd  gen 	(1)
252
;; rd  kill	(3)
250, 251, 252

;; Pred edge  2 [39.0%]  (fallthru)
(note 15 14 16 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 16 15 49 3 arch/arm/kernel/pmu.c:120 (set (reg/v/f:SI 133 [ pdev ])
        (const_int -16 [0xfffffffffffffff0])) 167 {*arm_movsi_insn} (nil))

(jump_insn 49 16 50 3 (set (pc)
        (label_ref 33)) -1 (nil))
;; End of basic block 3 -> ( 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; rd  out 	(14)
3, 9, 12, 15, 16, 19, 20, 44, 46, 47, 252, 253, 254, 255


;; Succ edge  6 [100.0%] 

(barrier 50 49 19)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u16(11){ }u17(13){ }u18(25){ }u19(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138
;; lr  def 	 24 [cc] 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138
;; live  gen 	 24 [cc] 133
;; live  kill	
;; rd  in  	(13)
3, 9, 12, 15, 16, 19, 20, 44, 46, 47, 253, 254, 255
;; rd  gen 	(2)
43, 250
;; rd  kill	(7)
42, 43, 44, 45, 250, 251, 252

;; Pred edge  2 [61.0%] 
(code_label 19 50 20 4 28 "" [1 uses])

(note 20 19 22 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 22 20 23 4 arch/arm/kernel/pmu.c:121 (set (reg/v/f:SI 133 [ pdev ])
        (mem/s/f/j:SI (plus:SI (mult:SI (reg/v:SI 137 [ type ])
                    (const_int 4 [0x4]))
                (reg/f:SI 138)) [0 pmu_devices S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/f/j:SI (plus:SI (mult:SI (reg/v:SI 137 [ type ])
                    (const_int 4 [0x4]))
                (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) [0 pmu_devices S4 A32])
        (nil)))

(insn 23 22 24 4 arch/arm/kernel/pmu.c:121 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 133 [ pdev ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 24 23 25 4 arch/arm/kernel/pmu.c:121 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 33)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9559 [0x2557])
            (nil))))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137 138
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 138
;; rd  out 	(14)
3, 9, 12, 15, 16, 19, 20, 43, 46, 47, 250, 253, 254, 255


;; Succ edge  5 [4.4%]  (fallthru)
;; Succ edge  6 [95.6%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u25(11){ }u26(13){ }u27(25){ }u28(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138
;; live  gen 	 0 [r0] 1 [r1] 133
;; live  kill	 14 [lr]
;; rd  in  	(14)
3, 9, 12, 15, 16, 19, 20, 43, 46, 47, 250, 253, 254, 255
;; rd  gen 	(1)
251
;; rd  kill	(6)
21, 22, 23, 250, 251, 252

;; Pred edge  4 [4.4%]  (fallthru)
(note 25 24 26 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 26 25 29 5 arch/arm/kernel/pmu.c:122 (parallel [
            (asm_operands/v ("dmb") ("") 0 []
                 [] 5332347)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 29 26 30 5 arch/arm/kernel/pmu.c:122 (set (reg:SI 0 r0)
        (reg/v:SI 137 [ type ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 137 [ type ])
        (nil)))

(insn 30 29 31 5 arch/arm/kernel/pmu.c:122 (set (reg:SI 1 r1)
        (plus:SI (reg/f:SI 138)
            (const_int 4 [0x4]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 138)
        (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                    (const_int 4 [0x4])))
            (nil))))

(call_insn 31 30 32 5 arch/arm/kernel/pmu.c:122 (parallel [
            (call (mem:SI (symbol_ref:SI ("_clear_bit") [flags 0x41] <function_decl 0x512e0080 _clear_bit>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 32 31 33 5 arch/arm/kernel/pmu.c:123 (set (reg/v/f:SI 133 [ pdev ])
        (const_int -19 [0xffffffffffffffed])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 5 -> ( 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; rd  out 	(14)
3, 9, 12, 15, 16, 19, 20, 43, 46, 47, 251, 253, 254, 255


;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 4 5 3) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u34(11){ }u35(13){ }u36(25){ }u37(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(17)
3, 9, 12, 15, 16, 19, 20, 43, 44, 46, 47, 250, 251, 252, 253, 254, 255
;; rd  gen 	(1)
0
;; rd  kill	(5)
0, 1, 2, 3, 4

;; Pred edge  4 [95.6%] 
;; Pred edge  5 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%] 
(code_label 33 32 34 6 29 "" [2 uses])

(note 34 33 39 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 39 34 45 6 arch/arm/kernel/pmu.c:129 (set (reg/i:SI 0 r0)
        (reg/v/f:SI 133 [ pdev ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 133 [ pdev ])
        (nil)))

(insn 45 39 0 6 arch/arm/kernel/pmu.c:129 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 6 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(17)
0, 9, 12, 15, 16, 19, 20, 43, 44, 46, 47, 250, 251, 252, 253, 254, 255


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function armpmu_device_type (armpmu_device_type)[0:696]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 6 count 12 (  1.7)


armpmu_device_type

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={6d,5u} r1={5d,2u} r2={3d} r3={3d} r11={1d,6u} r12={3d} r13={1d,8u} r14={3d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={4d,2u} r25={1d,6u} r26={1d,5u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r133={1d,2u} r135={1d,2u} r136={1d,1u} r140={1d,1u} 
;;    total ref usage 296{255d,41u,0e} in 16{14 regular + 2 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250
0[0,6] 1[6,5] 2[11,3] 3[14,3] 11[17,1] 12[18,3] 13[21,1] 14[22,3] 15[25,2] 16[27,2] 17[29,2] 18[31,2] 19[33,2] 20[35,2] 21[37,2] 22[39,2] 23[41,2] 24[43,4] 25[47,1] 26[48,1] 27[49,2] 28[51,2] 29[53,2] 30[55,2] 31[57,2] 32[59,2] 33[61,2] 34[63,2] 35[65,2] 36[67,2] 37[69,2] 38[71,2] 39[73,2] 40[75,2] 41[77,2] 42[79,2] 43[81,2] 44[83,2] 45[85,2] 46[87,2] 47[89,2] 48[91,2] 49[93,2] 50[95,2] 51[97,2] 52[99,2] 53[101,2] 54[103,2] 55[105,2] 56[107,2] 57[109,2] 58[111,2] 59[113,2] 60[115,2] 61[117,2] 62[119,2] 63[121,2] 64[123,2] 65[125,2] 66[127,2] 67[129,2] 68[131,2] 69[133,2] 70[135,2] 71[137,2] 72[139,2] 73[141,2] 74[143,2] 75[145,2] 76[147,2] 77[149,2] 78[151,2] 79[153,2] 80[155,2] 81[157,2] 82[159,2] 83[161,2] 84[163,2] 85[165,2] 86[167,2] 87[169,2] 88[171,2] 89[173,2] 90[175,2] 91[177,2] 92[179,2] 93[181,2] 94[183,2] 95[185,2] 96[187,2] 97[189,2] 98[191,2] 99[193,2] 100[195,2] 101[197,2] 102[199,2] 103[201,2] 104[203,2] 105[205,2] 106[207,2] 107[209,2] 108[211,2] 109[213,2] 110[215,2] 111[217,2] 112[219,2] 113[221,2] 114[223,2] 115[225,2] 116[227,2] 117[229,2] 118[231,2] 119[233,2] 120[235,2] 121[237,2] 122[239,2] 123[241,2] 124[243,2] 125[245,2] 126[247,2] 127[249,2] 133[251,1] 135[252,1] 136[253,1] 140[254,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d5(0){ }d10(1){ }d13(2){ }d16(3){ }d17(11){ }d20(12){ }d21(13){ }d24(14){ }d47(25){ }d48(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
5, 10, 13, 16, 17, 20, 21, 24, 47, 48
;; rd  kill	(27)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 47, 48
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
5, 10, 13, 16, 17, 20, 21, 24, 47, 48

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d17(bb 0 insn -1) }u1(13){ d21(bb 0 insn -1) }u2(25){ d47(bb 0 insn -1) }u3(26){ d48(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 135 136
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 135 136
;; live  kill	
;; rd  in  	(10)
5, 10, 13, 16, 17, 20, 21, 24, 47, 48
;; rd  gen 	(3)
46, 252, 253
;; rd  kill	(6)
43, 44, 45, 46, 252, 253
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; rd  out 	(13)
5, 10, 13, 16, 17, 20, 21, 24, 46, 47, 48, 252, 253
;;  UD chains for artificial uses
;;   reg 11 { d17(bb 0 insn -1) }
;;   reg 13 { d21(bb 0 insn -1) }
;;   reg 25 { d47(bb 0 insn -1) }
;;   reg 26 { d48(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d5(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 6
;;      reg 135 { d252(bb 2 insn 2) }
;;   UD chains for insn luid 2 uid 7
;;      reg 136 { d253(bb 2 insn 6) }
;;   UD chains for insn luid 3 uid 8
;;      reg 24 { d46(bb 2 insn 7) }

( 2 )->[3]->( )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(11){ d17(bb 0 insn -1) }u9(13){ d21(bb 0 insn -1) }u10(25){ d47(bb 0 insn -1) }u11(26){ d48(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]
;; rd  in  	(13)
5, 10, 13, 16, 17, 20, 21, 24, 46, 47, 48, 252, 253
;; rd  gen 	(0)

;; rd  kill	(3)
22, 23, 24
;; lr  out 	 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(12)
5, 10, 13, 16, 17, 20, 21, 46, 47, 48, 252, 253
;;  UD chains for artificial uses
;;   reg 11 { d17(bb 0 insn -1) }
;;   reg 13 { d21(bb 0 insn -1) }
;;   reg 25 { d47(bb 0 insn -1) }
;;   reg 26 { d48(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 13
;;      reg 13 { d21(bb 0 insn -1) }
;;      reg 0 { d1(bb 3 insn 11) }
;;      reg 1 { d9(bb 3 insn 12) }

( 2 )->[4]->( 5 6 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u15(11){ d17(bb 0 insn -1) }u16(13){ d21(bb 0 insn -1) }u17(25){ d47(bb 0 insn -1) }u18(26){ d48(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc] 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  gen 	 24 [cc] 133
;; live  kill	
;; rd  in  	(13)
5, 10, 13, 16, 17, 20, 21, 24, 46, 47, 48, 252, 253
;; rd  gen 	(2)
44, 251
;; rd  kill	(5)
43, 44, 45, 46, 251
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(14)
5, 10, 13, 16, 17, 20, 21, 24, 44, 47, 48, 251, 252, 253
;;  UD chains for artificial uses
;;   reg 11 { d17(bb 0 insn -1) }
;;   reg 13 { d21(bb 0 insn -1) }
;;   reg 25 { d47(bb 0 insn -1) }
;;   reg 26 { d48(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 17
;;      reg 135 { d252(bb 2 insn 2) }
;;   UD chains for insn luid 1 uid 18
;;      reg 133 { d251(bb 4 insn 17) }
;;   UD chains for insn luid 2 uid 19
;;      reg 24 { d44(bb 4 insn 18) }

( 4 )->[5]->( )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u22(11){ d17(bb 0 insn -1) }u23(13){ d21(bb 0 insn -1) }u24(25){ d47(bb 0 insn -1) }u25(26){ d48(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]
;; rd  in  	(14)
5, 10, 13, 16, 17, 20, 21, 24, 44, 47, 48, 251, 252, 253
;; rd  gen 	(0)

;; rd  kill	(3)
22, 23, 24
;; lr  out 	 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(13)
5, 10, 13, 16, 17, 20, 21, 44, 47, 48, 251, 252, 253
;;  UD chains for artificial uses
;;   reg 11 { d17(bb 0 insn -1) }
;;   reg 13 { d21(bb 0 insn -1) }
;;   reg 25 { d47(bb 0 insn -1) }
;;   reg 26 { d48(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 24
;;      reg 13 { d21(bb 0 insn -1) }
;;      reg 0 { d0(bb 5 insn 22) }
;;      reg 1 { d7(bb 5 insn 23) }

( 4 )->[6]->( 1 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u29(11){ d17(bb 0 insn -1) }u30(13){ d21(bb 0 insn -1) }u31(25){ d47(bb 0 insn -1) }u32(26){ d48(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 0 [r0] 140
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  gen 	 0 [r0] 140
;; live  kill	
;; rd  in  	(14)
5, 10, 13, 16, 17, 20, 21, 24, 44, 47, 48, 251, 252, 253
;; rd  gen 	(2)
2, 254
;; rd  kill	(7)
0, 1, 2, 3, 4, 5, 254
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(15)
2, 10, 13, 16, 17, 20, 21, 24, 44, 47, 48, 251, 252, 253, 254
;;  UD chains for artificial uses
;;   reg 11 { d17(bb 0 insn -1) }
;;   reg 13 { d21(bb 0 insn -1) }
;;   reg 25 { d47(bb 0 insn -1) }
;;   reg 26 { d48(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 28
;;      reg 133 { d251(bb 4 insn 17) }
;;   UD chains for insn luid 1 uid 33
;;      reg 140 { d254(bb 6 insn 28) }
;;   UD chains for insn luid 2 uid 39
;;      reg 0 { d2(bb 6 insn 33) }

( 6 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u36(0){ d2(bb 6 insn 33) }u37(11){ d17(bb 0 insn -1) }u38(13){ d21(bb 0 insn -1) }u39(14){ d24(bb 0 insn -1) }u40(25){ d47(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(15)
2, 10, 13, 16, 17, 20, 21, 24, 44, 47, 48, 251, 252, 253, 254
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(15)
2, 10, 13, 16, 17, 20, 21, 24, 44, 47, 48, 251, 252, 253, 254
;;  UD chains for artificial uses
;;   reg 0 { d2(bb 6 insn 33) }
;;   reg 11 { d17(bb 0 insn -1) }
;;   reg 13 { d21(bb 0 insn -1) }
;;   reg 14 { d24(bb 0 insn -1) }
;;   reg 25 { d47(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 8 to worklist
  Adding insn 13 to worklist
  Adding insn 19 to worklist
  Adding insn 24 to worklist
  Adding insn 39 to worklist
Finished finding needed instructions:
  Adding insn 33 to worklist
Processing use of (reg 140 [ <variable>.driver_data ]) in insn 33:
  Adding insn 28 to worklist
Processing use of (reg 133 [ pdev_id ]) in insn 28:
  Adding insn 17 to worklist
Processing use of (reg 135 [ pdev ]) in insn 17:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 0 r0) in insn 39:
Processing use of (reg 13 sp) in insn 24:
Processing use of (reg 0 r0) in insn 24:
  Adding insn 22 to worklist
Processing use of (reg 1 r1) in insn 24:
  Adding insn 23 to worklist
Processing use of (reg 24 cc) in insn 19:
  Adding insn 18 to worklist
Processing use of (reg 133 [ pdev_id ]) in insn 18:
Processing use of (reg 13 sp) in insn 13:
Processing use of (reg 0 r0) in insn 13:
  Adding insn 11 to worklist
Processing use of (reg 1 r1) in insn 13:
  Adding insn 12 to worklist
Processing use of (reg 24 cc) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 136 [ <variable>.dev.of_node ]) in insn 7:
  Adding insn 6 to worklist
Processing use of (reg 135 [ pdev ]) in insn 6:


armpmu_device_type

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={6d,5u} r1={5d,2u} r2={3d} r3={3d} r11={1d,6u} r12={3d} r13={1d,8u} r14={3d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={4d,2u} r25={1d,6u} r26={1d,5u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r133={1d,2u} r135={1d,2u} r136={1d,1u} r140={1d,1u} 
;;    total ref usage 296{255d,41u,0e} in 16{14 regular + 2 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250
0[0,6] 1[6,5] 2[11,3] 3[14,3] 11[17,1] 12[18,3] 13[21,1] 14[22,3] 15[25,2] 16[27,2] 17[29,2] 18[31,2] 19[33,2] 20[35,2] 21[37,2] 22[39,2] 23[41,2] 24[43,4] 25[47,1] 26[48,1] 27[49,2] 28[51,2] 29[53,2] 30[55,2] 31[57,2] 32[59,2] 33[61,2] 34[63,2] 35[65,2] 36[67,2] 37[69,2] 38[71,2] 39[73,2] 40[75,2] 41[77,2] 42[79,2] 43[81,2] 44[83,2] 45[85,2] 46[87,2] 47[89,2] 48[91,2] 49[93,2] 50[95,2] 51[97,2] 52[99,2] 53[101,2] 54[103,2] 55[105,2] 56[107,2] 57[109,2] 58[111,2] 59[113,2] 60[115,2] 61[117,2] 62[119,2] 63[121,2] 64[123,2] 65[125,2] 66[127,2] 67[129,2] 68[131,2] 69[133,2] 70[135,2] 71[137,2] 72[139,2] 73[141,2] 74[143,2] 75[145,2] 76[147,2] 77[149,2] 78[151,2] 79[153,2] 80[155,2] 81[157,2] 82[159,2] 83[161,2] 84[163,2] 85[165,2] 86[167,2] 87[169,2] 88[171,2] 89[173,2] 90[175,2] 91[177,2] 92[179,2] 93[181,2] 94[183,2] 95[185,2] 96[187,2] 97[189,2] 98[191,2] 99[193,2] 100[195,2] 101[197,2] 102[199,2] 103[201,2] 104[203,2] 105[205,2] 106[207,2] 107[209,2] 108[211,2] 109[213,2] 110[215,2] 111[217,2] 112[219,2] 113[221,2] 114[223,2] 115[225,2] 116[227,2] 117[229,2] 118[231,2] 119[233,2] 120[235,2] 121[237,2] 122[239,2] 123[241,2] 124[243,2] 125[245,2] 126[247,2] 127[249,2] 133[251,1] 135[252,1] 136[253,1] 140[254,1] 
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 135 136
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 135 136
;; live  kill	
;; rd  in  	(10)
5, 10, 13, 16, 17, 20, 21, 24, 47, 48
;; rd  gen 	(3)
46, 252, 253
;; rd  kill	(6)
43, 44, 45, 46, 252, 253

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 arch/arm/kernel/pmu.c:77 (set (reg/v/f:SI 135 [ pdev ])
        (reg:SI 0 r0 [ pdev ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ pdev ])
        (nil)))

(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 3 7 2 arch/arm/kernel/pmu.c:82 (set (reg/f:SI 136 [ <variable>.dev.of_node ])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 135 [ pdev ])
                (const_int 312 [0x138])) [0 <variable>.dev.of_node+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 7 6 8 2 arch/arm/kernel/pmu.c:82 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 136 [ <variable>.dev.of_node ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/f:SI 136 [ <variable>.dev.of_node ])
        (nil)))

(jump_insn 8 7 9 2 arch/arm/kernel/pmu.c:82 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 15)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; rd  out 	(13)
5, 10, 13, 16, 17, 20, 21, 24, 46, 47, 48, 252, 253


;; Succ edge  3 [0.0%]  (fallthru)
;; Succ edge  4 [100.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(11){ }u9(13){ }u10(25){ }u11(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]
;; rd  in  	(13)
5, 10, 13, 16, 17, 20, 21, 24, 46, 47, 48, 252, 253
;; rd  gen 	(0)

;; rd  kill	(3)
22, 23, 24

;; Pred edge  2 [0.0%]  (fallthru)
(note 9 8 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 11 9 12 3 arch/arm/kernel/pmu.c:84 discrim 1 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x10f8ef00>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x10f8ef00>)
        (nil)))

(insn 12 11 13 3 arch/arm/kernel/pmu.c:84 discrim 1 (set (reg:SI 1 r1)
        (const_int 84 [0x54])) 167 {*arm_movsi_insn} (nil))

(call_insn 13 12 14 3 arch/arm/kernel/pmu.c:84 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("__bug") [flags 0x41] <function_decl 0x10a2ec00 __bug>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (expr_list:REG_NORETURN (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 3 -> ()
;; lr  out 	 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(12)
5, 10, 13, 16, 17, 20, 21, 46, 47, 48, 252, 253



(barrier 14 13 15)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u15(11){ }u16(13){ }u17(25){ }u18(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc] 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  gen 	 24 [cc] 133
;; live  kill	
;; rd  in  	(13)
5, 10, 13, 16, 17, 20, 21, 24, 46, 47, 48, 252, 253
;; rd  gen 	(2)
44, 251
;; rd  kill	(5)
43, 44, 45, 46, 251

;; Pred edge  2 [100.0%] 
(code_label 15 14 16 4 34 "" [1 uses])

(note 16 15 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 17 16 18 4 arch/arm/kernel/pmu.c:89 (set (reg/v/f:SI 133 [ pdev_id ])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 135 [ pdev ])
                (const_int 376 [0x178])) [0 <variable>.id_entry+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 135 [ pdev ])
        (nil)))

(insn 18 17 19 4 arch/arm/kernel/pmu.c:90 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 133 [ pdev_id ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 19 18 20 4 arch/arm/kernel/pmu.c:90 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 26)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(14)
5, 10, 13, 16, 17, 20, 21, 24, 44, 47, 48, 251, 252, 253


;; Succ edge  5 [0.0%]  (fallthru)
;; Succ edge  6 [100.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u22(11){ }u23(13){ }u24(25){ }u25(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]
;; rd  in  	(14)
5, 10, 13, 16, 17, 20, 21, 24, 44, 47, 48, 251, 252, 253
;; rd  gen 	(0)

;; rd  kill	(3)
22, 23, 24

;; Pred edge  4 [0.0%]  (fallthru)
(note 20 19 22 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 22 20 23 5 arch/arm/kernel/pmu.c:90 discrim 1 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x10f8ef00>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x10f8ef00>)
        (nil)))

(insn 23 22 24 5 arch/arm/kernel/pmu.c:90 discrim 1 (set (reg:SI 1 r1)
        (const_int 90 [0x5a])) 167 {*arm_movsi_insn} (nil))

(call_insn 24 23 25 5 arch/arm/kernel/pmu.c:90 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("__bug") [flags 0x41] <function_decl 0x10a2ec00 __bug>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (expr_list:REG_NORETURN (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 5 -> ()
;; lr  out 	 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(13)
5, 10, 13, 16, 17, 20, 21, 44, 47, 48, 251, 252, 253



(barrier 25 24 26)

;; Start of basic block ( 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u29(11){ }u30(13){ }u31(25){ }u32(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 0 [r0] 140
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  gen 	 0 [r0] 140
;; live  kill	
;; rd  in  	(14)
5, 10, 13, 16, 17, 20, 21, 24, 44, 47, 48, 251, 252, 253
;; rd  gen 	(2)
2, 254
;; rd  kill	(7)
0, 1, 2, 3, 4, 5, 254

;; Pred edge  4 [100.0%] 
(code_label 26 25 27 6 35 "" [1 uses])

(note 27 26 28 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 28 27 33 6 arch/arm/kernel/pmu.c:92 (set (reg:SI 140 [ <variable>.driver_data ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 133 [ pdev_id ])
                (const_int 20 [0x14])) [0 <variable>.driver_data+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 133 [ pdev_id ])
        (nil)))

(insn 33 28 39 6 arch/arm/kernel/pmu.c:92 (set (reg/i:SI 0 r0)
        (reg:SI 140 [ <variable>.driver_data ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 140 [ <variable>.driver_data ])
        (nil)))

(insn 39 33 0 6 arch/arm/kernel/pmu.c:92 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 6 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(15)
2, 10, 13, 16, 17, 20, 21, 24, 44, 47, 48, 251, 252, 253, 254


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function armpmu_device_probe (armpmu_device_probe)[0:697] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 9 count 12 (  1.5)
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 9 count 14 (  1.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 9 count 14 (  1.8)


armpmu_device_probe

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={9d,8u} r1={8d,3u} r2={5d} r3={5d} r11={1d,7u} r12={5d} r13={1d,11u} r14={5d,1u} r15={4d} r16={4d} r17={4d} r18={4d} r19={4d} r20={4d} r21={4d} r22={4d} r23={4d} r24={6d,2u} r25={1d,7u} r26={1d,6u} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r81={4d} r82={4d} r83={4d} r84={4d} r85={4d} r86={4d} r87={4d} r88={4d} r89={4d} r90={4d} r91={4d} r92={4d} r93={4d} r94={4d} r95={4d} r96={4d} r97={4d} r98={4d} r99={4d} r100={4d} r101={4d} r102={4d} r103={4d} r104={4d} r105={4d} r106={4d} r107={4d} r108={4d} r109={4d} r110={4d} r111={4d} r112={4d} r113={4d} r114={4d} r115={4d} r116={4d} r117={4d} r118={4d} r119={4d} r120={4d} r121={4d} r122={4d} r123={4d} r124={4d} r125={4d} r126={4d} r127={4d} r133={3d,1u} r134={1d,3u} r136={1d,1u} r138={1d,2u} r139={1d,3u} 
;;    total ref usage 549{494d,55u,0e} in 26{22 regular + 4 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486
0[0,9] 1[9,8] 2[17,5] 3[22,5] 11[27,1] 12[28,5] 13[33,1] 14[34,5] 15[39,4] 16[43,4] 17[47,4] 18[51,4] 19[55,4] 20[59,4] 21[63,4] 22[67,4] 23[71,4] 24[75,6] 25[81,1] 26[82,1] 27[83,4] 28[87,4] 29[91,4] 30[95,4] 31[99,4] 32[103,4] 33[107,4] 34[111,4] 35[115,4] 36[119,4] 37[123,4] 38[127,4] 39[131,4] 40[135,4] 41[139,4] 42[143,4] 43[147,4] 44[151,4] 45[155,4] 46[159,4] 47[163,4] 48[167,4] 49[171,4] 50[175,4] 51[179,4] 52[183,4] 53[187,4] 54[191,4] 55[195,4] 56[199,4] 57[203,4] 58[207,4] 59[211,4] 60[215,4] 61[219,4] 62[223,4] 63[227,4] 64[231,4] 65[235,4] 66[239,4] 67[243,4] 68[247,4] 69[251,4] 70[255,4] 71[259,4] 72[263,4] 73[267,4] 74[271,4] 75[275,4] 76[279,4] 77[283,4] 78[287,4] 79[291,4] 80[295,4] 81[299,4] 82[303,4] 83[307,4] 84[311,4] 85[315,4] 86[319,4] 87[323,4] 88[327,4] 89[331,4] 90[335,4] 91[339,4] 92[343,4] 93[347,4] 94[351,4] 95[355,4] 96[359,4] 97[363,4] 98[367,4] 99[371,4] 100[375,4] 101[379,4] 102[383,4] 103[387,4] 104[391,4] 105[395,4] 106[399,4] 107[403,4] 108[407,4] 109[411,4] 110[415,4] 111[419,4] 112[423,4] 113[427,4] 114[431,4] 115[435,4] 116[439,4] 117[443,4] 118[447,4] 119[451,4] 120[455,4] 121[459,4] 122[463,4] 123[467,4] 124[471,4] 125[475,4] 126[479,4] 127[483,4] 133[487,3] 134[490,1] 136[491,1] 138[492,1] 139[493,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d8(0){ }d16(1){ }d21(2){ }d26(3){ }d27(11){ }d32(12){ }d33(13){ }d38(14){ }d81(25){ }d82(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
8, 16, 21, 26, 27, 32, 33, 38, 81, 82
;; rd  kill	(41)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 81, 82
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(10)
8, 16, 21, 26, 27, 32, 33, 38, 81, 82

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d27(bb 0 insn -1) }u1(13){ d33(bb 0 insn -1) }u2(25){ d81(bb 0 insn -1) }u3(26){ d82(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 136
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 24 [cc] 134 136
;; live  kill	 14 [lr]
;; rd  in  	(10)
8, 16, 21, 26, 27, 32, 33, 38, 81, 82
;; rd  gen 	(4)
7, 79, 490, 491
;; rd  kill	(22)
0, 1, 2, 3, 4, 5, 6, 7, 8, 34, 35, 36, 37, 38, 75, 76, 77, 78, 79, 80, 490, 491
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136
;; rd  out 	(12)
7, 16, 21, 26, 27, 32, 33, 79, 81, 82, 490, 491
;;  UD chains for artificial uses
;;   reg 11 { d27(bb 0 insn -1) }
;;   reg 13 { d33(bb 0 insn -1) }
;;   reg 25 { d81(bb 0 insn -1) }
;;   reg 26 { d82(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d8(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 7
;;      reg 13 { d33(bb 0 insn -1) }
;;      reg 0 { d8(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 8
;;      reg 0 { d7(bb 2 insn 7) }
;;   UD chains for insn luid 3 uid 9
;;      reg 134 { d490(bb 2 insn 8) }
;;   UD chains for insn luid 4 uid 10
;;      reg 24 { d79(bb 2 insn 9) }

( 2 )->[3]->( 7 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u10(11){ d27(bb 0 insn -1) }u11(13){ d33(bb 0 insn -1) }u12(25){ d81(bb 0 insn -1) }u13(26){ d82(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; live  gen 	 0 [r0] 1 [r1] 133
;; live  kill	 14 [lr]
;; rd  in  	(12)
7, 16, 21, 26, 27, 32, 33, 79, 81, 82, 490, 491
;; rd  gen 	(2)
6, 489
;; rd  kill	(17)
0, 1, 2, 3, 4, 5, 6, 7, 8, 34, 35, 36, 37, 38, 487, 488, 489
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
6, 16, 21, 26, 27, 32, 33, 79, 81, 82, 489, 490, 491
;;  UD chains for artificial uses
;;   reg 11 { d27(bb 0 insn -1) }
;;   reg 13 { d33(bb 0 insn -1) }
;;   reg 25 { d81(bb 0 insn -1) }
;;   reg 26 { d82(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 14
;;      reg 134 { d490(bb 2 insn 8) }
;;   UD chains for insn luid 2 uid 15
;;      reg 13 { d33(bb 0 insn -1) }
;;      reg 0 { d2(bb 3 insn 13) }
;;      reg 1 { d14(bb 3 insn 14) }

( 2 )->[4]->( 5 6 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u18(11){ d27(bb 0 insn -1) }u19(13){ d33(bb 0 insn -1) }u20(25){ d81(bb 0 insn -1) }u21(26){ d82(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 138 139
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136
;; live  gen 	 24 [cc] 138 139
;; live  kill	
;; rd  in  	(12)
7, 16, 21, 26, 27, 32, 33, 79, 81, 82, 490, 491
;; rd  gen 	(3)
77, 492, 493
;; rd  kill	(8)
75, 76, 77, 78, 79, 80, 492, 493
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 138 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 138 139
;; rd  out 	(14)
7, 16, 21, 26, 27, 32, 33, 77, 81, 82, 490, 491, 492, 493
;;  UD chains for artificial uses
;;   reg 11 { d27(bb 0 insn -1) }
;;   reg 13 { d33(bb 0 insn -1) }
;;   reg 25 { d81(bb 0 insn -1) }
;;   reg 26 { d82(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 22
;;      reg 138 { d492(bb 4 insn 21) }
;;   UD chains for insn luid 2 uid 23
;;      reg 139 { d493(bb 4 insn 22) }
;;   UD chains for insn luid 3 uid 24
;;      reg 24 { d77(bb 4 insn 23) }

( 4 )->[5]->( 7 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u25(11){ d27(bb 0 insn -1) }u26(13){ d33(bb 0 insn -1) }u27(25){ d81(bb 0 insn -1) }u28(26){ d82(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; live  gen 	 0 [r0] 1 [r1] 133
;; live  kill	 14 [lr]
;; rd  in  	(14)
7, 16, 21, 26, 27, 32, 33, 77, 81, 82, 490, 491, 492, 493
;; rd  gen 	(2)
5, 488
;; rd  kill	(17)
0, 1, 2, 3, 4, 5, 6, 7, 8, 34, 35, 36, 37, 38, 487, 488, 489
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; rd  out 	(15)
5, 16, 21, 26, 27, 32, 33, 77, 81, 82, 488, 490, 491, 492, 493
;;  UD chains for artificial uses
;;   reg 11 { d27(bb 0 insn -1) }
;;   reg 13 { d33(bb 0 insn -1) }
;;   reg 25 { d81(bb 0 insn -1) }
;;   reg 26 { d82(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 28
;;      reg 134 { d490(bb 2 insn 8) }
;;   UD chains for insn luid 2 uid 29
;;      reg 13 { d33(bb 0 insn -1) }
;;      reg 0 { d1(bb 5 insn 27) }
;;      reg 1 { d9(bb 5 insn 28) }

( 4 )->[6]->( 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u33(11){ d27(bb 0 insn -1) }u34(13){ d33(bb 0 insn -1) }u35(25){ d81(bb 0 insn -1) }u36(26){ d82(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 139
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 139
;; live  gen 	 0 [r0] 1 [r1] 133
;; live  kill	 14 [lr]
;; rd  in  	(14)
7, 16, 21, 26, 27, 32, 33, 77, 81, 82, 490, 491, 492, 493
;; rd  gen 	(2)
4, 487
;; rd  kill	(17)
0, 1, 2, 3, 4, 5, 6, 7, 8, 34, 35, 36, 37, 38, 487, 488, 489
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; rd  out 	(15)
4, 16, 21, 26, 27, 32, 33, 77, 81, 82, 487, 490, 491, 492, 493
;;  UD chains for artificial uses
;;   reg 11 { d27(bb 0 insn -1) }
;;   reg 13 { d33(bb 0 insn -1) }
;;   reg 25 { d81(bb 0 insn -1) }
;;   reg 26 { d82(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 37
;;      reg 139 { d493(bb 4 insn 22) }
;;   UD chains for insn luid 2 uid 38
;;      reg 13 { d33(bb 0 insn -1) }
;;      reg 0 { d0(bb 6 insn 36) }
;;      reg 1 { d10(bb 6 insn 37) }
;;   UD chains for insn luid 3 uid 40
;;      reg 136 { d491(bb 2 insn 2) }
;;      reg 138 { d492(bb 4 insn 21) }
;;   UD chains for insn luid 4 uid 41
;;      reg 139 { d493(bb 4 insn 22) }

( 6 3 5 )->[7]->( 1 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u44(11){ d27(bb 0 insn -1) }u45(13){ d33(bb 0 insn -1) }u46(25){ d81(bb 0 insn -1) }u47(26){ d82(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(20)
4, 5, 6, 16, 21, 26, 27, 32, 33, 77, 79, 81, 82, 487, 488, 489, 490, 491, 492, 493
;; rd  gen 	(1)
3
;; rd  kill	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(18)
3, 16, 21, 26, 27, 32, 33, 77, 79, 81, 82, 487, 488, 489, 490, 491, 492, 493
;;  UD chains for artificial uses
;;   reg 11 { d27(bb 0 insn -1) }
;;   reg 13 { d33(bb 0 insn -1) }
;;   reg 25 { d81(bb 0 insn -1) }
;;   reg 26 { d82(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 48
;;      reg 133 { d489(bb 3 insn 16) d488(bb 5 insn 30) d487(bb 6 insn 41) }
;;   UD chains for insn luid 1 uid 54
;;      reg 0 { d3(bb 7 insn 48) }

( 7 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u50(0){ d3(bb 7 insn 48) }u51(11){ d27(bb 0 insn -1) }u52(13){ d33(bb 0 insn -1) }u53(14){ }u54(25){ d81(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(18)
3, 16, 21, 26, 27, 32, 33, 77, 79, 81, 82, 487, 488, 489, 490, 491, 492, 493
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(18)
3, 16, 21, 26, 27, 32, 33, 77, 79, 81, 82, 487, 488, 489, 490, 491, 492, 493
;;  UD chains for artificial uses
;;   reg 0 { d3(bb 7 insn 48) }
;;   reg 11 { d27(bb 0 insn -1) }
;;   reg 13 { d33(bb 0 insn -1) }
;;   reg 14 { }
;;   reg 25 { d81(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 10 to worklist
  Adding insn 7 to worklist
  Adding insn 58 to worklist
  Adding insn 15 to worklist
  Adding insn 24 to worklist
  Adding insn 60 to worklist
  Adding insn 29 to worklist
  Adding insn 40 to worklist
  Adding insn 38 to worklist
  Adding insn 54 to worklist
Finished finding needed instructions:
  Adding insn 48 to worklist
Processing use of (reg 133 [ D.13617 ]) in insn 48:
  Adding insn 16 to worklist
  Adding insn 30 to worklist
  Adding insn 41 to worklist
Processing use of (reg 139 [ pmu_devices ]) in insn 41:
  Adding insn 22 to worklist
Processing use of (reg 138) in insn 22:
  Adding insn 21 to worklist
Processing use of (reg 0 r0) in insn 54:
Processing use of (reg 13 sp) in insn 38:
Processing use of (reg 0 r0) in insn 38:
  Adding insn 36 to worklist
Processing use of (reg 1 r1) in insn 38:
  Adding insn 37 to worklist
Processing use of (reg 139 [ pmu_devices ]) in insn 37:
Processing use of (reg 136 [ pdev ]) in insn 40:
  Adding insn 2 to worklist
Processing use of (reg 138) in insn 40:
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 13 sp) in insn 29:
Processing use of (reg 0 r0) in insn 29:
  Adding insn 27 to worklist
Processing use of (reg 1 r1) in insn 29:
  Adding insn 28 to worklist
Processing use of (reg 134 [ D.13446 ]) in insn 28:
  Adding insn 8 to worklist
Processing use of (reg 0 r0) in insn 8:
Processing use of (reg 24 cc) in insn 24:
  Adding insn 23 to worklist
Processing use of (reg 139 [ pmu_devices ]) in insn 23:
Processing use of (reg 13 sp) in insn 15:
Processing use of (reg 0 r0) in insn 15:
  Adding insn 13 to worklist
Processing use of (reg 1 r1) in insn 15:
  Adding insn 14 to worklist
Processing use of (reg 134 [ D.13446 ]) in insn 14:
Processing use of (reg 13 sp) in insn 7:
Processing use of (reg 0 r0) in insn 7:
Processing use of (reg 24 cc) in insn 10:
  Adding insn 9 to worklist
Processing use of (reg 134 [ D.13446 ]) in insn 9:


armpmu_device_probe

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={9d,8u} r1={8d,3u} r2={5d} r3={5d} r11={1d,7u} r12={5d} r13={1d,11u} r14={5d,1u} r15={4d} r16={4d} r17={4d} r18={4d} r19={4d} r20={4d} r21={4d} r22={4d} r23={4d} r24={6d,2u} r25={1d,7u} r26={1d,6u} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r81={4d} r82={4d} r83={4d} r84={4d} r85={4d} r86={4d} r87={4d} r88={4d} r89={4d} r90={4d} r91={4d} r92={4d} r93={4d} r94={4d} r95={4d} r96={4d} r97={4d} r98={4d} r99={4d} r100={4d} r101={4d} r102={4d} r103={4d} r104={4d} r105={4d} r106={4d} r107={4d} r108={4d} r109={4d} r110={4d} r111={4d} r112={4d} r113={4d} r114={4d} r115={4d} r116={4d} r117={4d} r118={4d} r119={4d} r120={4d} r121={4d} r122={4d} r123={4d} r124={4d} r125={4d} r126={4d} r127={4d} r133={3d,1u} r134={1d,3u} r136={1d,1u} r138={1d,2u} r139={1d,3u} 
;;    total ref usage 549{494d,55u,0e} in 26{22 regular + 4 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486
0[0,9] 1[9,8] 2[17,5] 3[22,5] 11[27,1] 12[28,5] 13[33,1] 14[34,5] 15[39,4] 16[43,4] 17[47,4] 18[51,4] 19[55,4] 20[59,4] 21[63,4] 22[67,4] 23[71,4] 24[75,6] 25[81,1] 26[82,1] 27[83,4] 28[87,4] 29[91,4] 30[95,4] 31[99,4] 32[103,4] 33[107,4] 34[111,4] 35[115,4] 36[119,4] 37[123,4] 38[127,4] 39[131,4] 40[135,4] 41[139,4] 42[143,4] 43[147,4] 44[151,4] 45[155,4] 46[159,4] 47[163,4] 48[167,4] 49[171,4] 50[175,4] 51[179,4] 52[183,4] 53[187,4] 54[191,4] 55[195,4] 56[199,4] 57[203,4] 58[207,4] 59[211,4] 60[215,4] 61[219,4] 62[223,4] 63[227,4] 64[231,4] 65[235,4] 66[239,4] 67[243,4] 68[247,4] 69[251,4] 70[255,4] 71[259,4] 72[263,4] 73[267,4] 74[271,4] 75[275,4] 76[279,4] 77[283,4] 78[287,4] 79[291,4] 80[295,4] 81[299,4] 82[303,4] 83[307,4] 84[311,4] 85[315,4] 86[319,4] 87[323,4] 88[327,4] 89[331,4] 90[335,4] 91[339,4] 92[343,4] 93[347,4] 94[351,4] 95[355,4] 96[359,4] 97[363,4] 98[367,4] 99[371,4] 100[375,4] 101[379,4] 102[383,4] 103[387,4] 104[391,4] 105[395,4] 106[399,4] 107[403,4] 108[407,4] 109[411,4] 110[415,4] 111[419,4] 112[423,4] 113[427,4] 114[431,4] 115[435,4] 116[439,4] 117[443,4] 118[447,4] 119[451,4] 120[455,4] 121[459,4] 122[463,4] 123[467,4] 124[471,4] 125[475,4] 126[479,4] 127[483,4] 133[487,3] 134[490,1] 136[491,1] 138[492,1] 139[493,1] 
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 136
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 24 [cc] 134 136
;; live  kill	 14 [lr]
;; rd  in  	(10)
8, 16, 21, 26, 27, 32, 33, 38, 81, 82
;; rd  gen 	(4)
7, 79, 490, 491
;; rd  kill	(22)
0, 1, 2, 3, 4, 5, 6, 7, 8, 34, 35, 36, 37, 38, 75, 76, 77, 78, 79, 80, 490, 491

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 arch/arm/kernel/pmu.c:95 (set (reg/v/f:SI 136 [ pdev ])
        (reg:SI 0 r0 [ pdev ])) 167 {*arm_movsi_insn} (nil))

(note 3 2 7 2 NOTE_INSN_FUNCTION_BEG)

(call_insn 7 3 8 2 arch/arm/kernel/pmu.c:96 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("armpmu_device_type") [flags 0x3] <function_decl 0x10f49d00 armpmu_device_type>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 8 7 9 2 arch/arm/kernel/pmu.c:96 (set (reg:SI 134 [ D.13446 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 9 8 10 2 arch/arm/kernel/pmu.c:32 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 134 [ D.13446 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 10 9 11 2 arch/arm/kernel/pmu.c:32 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 19)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136
;; rd  out 	(12)
7, 16, 21, 26, 27, 32, 33, 79, 81, 82, 490, 491


;; Succ edge  3 [0.0%]  (fallthru)
;; Succ edge  4 [100.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u10(11){ }u11(13){ }u12(25){ }u13(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; live  gen 	 0 [r0] 1 [r1] 133
;; live  kill	 14 [lr]
;; rd  in  	(12)
7, 16, 21, 26, 27, 32, 33, 79, 81, 82, 490, 491
;; rd  gen 	(2)
6, 489
;; rd  kill	(17)
0, 1, 2, 3, 4, 5, 6, 7, 8, 34, 35, 36, 37, 38, 487, 488, 489

;; Pred edge  2 [0.0%]  (fallthru)
(note 11 10 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 13 11 14 3 arch/arm/kernel/pmu.c:33 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x10af14e0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x10af14e0>)
        (nil)))

(insn 14 13 15 3 arch/arm/kernel/pmu.c:33 (set (reg:SI 1 r1)
        (reg:SI 134 [ D.13446 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 134 [ D.13446 ])
        (nil)))

(call_insn 15 14 16 3 arch/arm/kernel/pmu.c:33 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 16 15 58 3 arch/arm/kernel/pmu.c:35 (set (reg:SI 133 [ D.13617 ])
        (const_int -22 [0xffffffffffffffea])) 167 {*arm_movsi_insn} (nil))

(jump_insn 58 16 59 3 (set (pc)
        (label_ref 42)) -1 (nil))
;; End of basic block 3 -> ( 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
6, 16, 21, 26, 27, 32, 33, 79, 81, 82, 489, 490, 491


;; Succ edge  7 [100.0%] 

(barrier 59 58 19)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u18(11){ }u19(13){ }u20(25){ }u21(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 138 139
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136
;; live  gen 	 24 [cc] 138 139
;; live  kill	
;; rd  in  	(12)
7, 16, 21, 26, 27, 32, 33, 79, 81, 82, 490, 491
;; rd  gen 	(3)
77, 492, 493
;; rd  kill	(8)
75, 76, 77, 78, 79, 80, 492, 493

;; Pred edge  2 [100.0%] 
(code_label 19 59 20 4 41 "" [1 uses])

(note 20 19 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 21 20 22 4 arch/arm/kernel/pmu.c:38 (set (reg/f:SI 138)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 22 21 23 4 arch/arm/kernel/pmu.c:38 (set (reg/f:SI 139 [ pmu_devices ])
        (mem/s/f/j:SI (reg/f:SI 138) [0 pmu_devices+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/f/j:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182]) [0 pmu_devices+0 S4 A32])
        (nil)))

(insn 23 22 24 4 arch/arm/kernel/pmu.c:38 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 139 [ pmu_devices ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 24 23 25 4 arch/arm/kernel/pmu.c:38 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 33)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 8571 [0x217b])
            (nil))))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 138 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 138 139
;; rd  out 	(14)
7, 16, 21, 26, 27, 32, 33, 77, 81, 82, 490, 491, 492, 493


;; Succ edge  5 [14.3%]  (fallthru)
;; Succ edge  6 [85.7%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u25(11){ }u26(13){ }u27(25){ }u28(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; live  gen 	 0 [r0] 1 [r1] 133
;; live  kill	 14 [lr]
;; rd  in  	(14)
7, 16, 21, 26, 27, 32, 33, 77, 81, 82, 490, 491, 492, 493
;; rd  gen 	(2)
5, 488
;; rd  kill	(17)
0, 1, 2, 3, 4, 5, 6, 7, 8, 34, 35, 36, 37, 38, 487, 488, 489

;; Pred edge  4 [14.3%]  (fallthru)
(note 25 24 27 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 27 25 28 5 arch/arm/kernel/pmu.c:39 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x10af16c0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x10af16c0>)
        (nil)))

(insn 28 27 29 5 arch/arm/kernel/pmu.c:39 (set (reg:SI 1 r1)
        (reg:SI 134 [ D.13446 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 134 [ D.13446 ])
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(call_insn 29 28 30 5 arch/arm/kernel/pmu.c:39 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 30 29 60 5 arch/arm/kernel/pmu.c:41 (set (reg:SI 133 [ D.13617 ])
        (const_int -28 [0xffffffffffffffe4])) 167 {*arm_movsi_insn} (nil))

(jump_insn 60 30 61 5 (set (pc)
        (label_ref 42)) -1 (nil))
;; End of basic block 5 -> ( 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; rd  out 	(15)
5, 16, 21, 26, 27, 32, 33, 77, 81, 82, 488, 490, 491, 492, 493


;; Succ edge  7 [100.0%] 

(barrier 61 60 33)

;; Start of basic block ( 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u33(11){ }u34(13){ }u35(25){ }u36(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 139
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 139
;; live  gen 	 0 [r0] 1 [r1] 133
;; live  kill	 14 [lr]
;; rd  in  	(14)
7, 16, 21, 26, 27, 32, 33, 77, 81, 82, 490, 491, 492, 493
;; rd  gen 	(2)
4, 487
;; rd  kill	(17)
0, 1, 2, 3, 4, 5, 6, 7, 8, 34, 35, 36, 37, 38, 487, 488, 489

;; Pred edge  4 [85.7%] 
(code_label 33 61 34 6 43 "" [1 uses])

(note 34 33 36 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 36 34 37 6 arch/arm/kernel/pmu.c:44 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC5") [flags 0x82] <string_cst 0x10f7b140>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC5") [flags 0x82] <string_cst 0x10f7b140>)
        (nil)))

(insn 37 36 38 6 arch/arm/kernel/pmu.c:44 (set (reg:SI 1 r1)
        (reg/f:SI 139 [ pmu_devices ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(call_insn 38 37 40 6 arch/arm/kernel/pmu.c:44 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 40 38 41 6 arch/arm/kernel/pmu.c:45 (set (mem/s/f/j:SI (reg/f:SI 138) [0 pmu_devices+0 S4 A32])
        (reg/v/f:SI 136 [ pdev ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 138)
        (expr_list:REG_DEAD (reg/v/f:SI 136 [ pdev ])
            (nil))))

(insn 41 40 42 6 arch/arm/kernel/pmu.c:46 (set (reg:SI 133 [ D.13617 ])
        (reg/f:SI 139 [ pmu_devices ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 139 [ pmu_devices ])
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))
;; End of basic block 6 -> ( 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; rd  out 	(15)
4, 16, 21, 26, 27, 32, 33, 77, 81, 82, 487, 490, 491, 492, 493


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 6 3 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u44(11){ }u45(13){ }u46(25){ }u47(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(20)
4, 5, 6, 16, 21, 26, 27, 32, 33, 77, 79, 81, 82, 487, 488, 489, 490, 491, 492, 493
;; rd  gen 	(1)
3
;; rd  kill	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8

;; Pred edge  6 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%] 
;; Pred edge  5 [100.0%] 
(code_label 42 41 43 7 42 "" [2 uses])

(note 43 42 48 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 48 43 54 7 arch/arm/kernel/pmu.c:97 (set (reg/i:SI 0 r0)
        (reg:SI 133 [ D.13617 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 133 [ D.13617 ])
        (nil)))

(insn 54 48 0 7 arch/arm/kernel/pmu.c:97 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 7 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(18)
3, 16, 21, 26, 27, 32, 33, 77, 79, 81, 82, 487, 488, 489, 490, 491, 492, 493


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns
