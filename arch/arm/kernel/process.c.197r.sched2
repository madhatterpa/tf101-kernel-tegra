
;; Function disable_hlt (disable_hlt)[0:1338]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 2 from 5 to 21 -- after reload
;;   ======================================================

;;	  0-->     5 r3=`*.LANCHOR0'                   :cortex_a8_load_store_1
;;	  3-->     6 r2=[r3]                           :cortex_a8_load_store_1
;;	  5-->     7 r2=r2+0x1                         :cortex_a8_default
;;	  5-->     9 [r3]=r2                           :cortex_a8_load_store_1
;;	  6-->    21 return                            :cortex_a8_load_store_1
;;	Ready list (final):  
;;   total time = 6
;;   new head = 5
;;   new tail = 21





disable_hlt

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 2[r2] 3[r3]
;;  ref usage 	r0={1d} r1={1d} r2={3d,2u} r3={2d,2u} r13={1d,2u} r14={1d,1u} 
;;    total ref usage 16{9d,7u,0e} in 5{5 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 2 [r2] 3 [r3]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 19 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 19 3 2 2 NOTE_INSN_PROLOGUE_END)

(note 2 19 5 2 NOTE_INSN_FUNCTION_BEG)

(insn:TI 5 2 6 2 arch/arm/kernel/process.c:80 (set (reg/f:SI 3 r3 [135])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn:TI 6 5 7 2 arch/arm/kernel/process.c:80 (set (reg:SI 2 r2 [orig:134 hlt_counter.325 ] [134])
        (mem/v/c/i:SI (reg/f:SI 3 r3 [135]) [0 hlt_counter+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn:TI 7 6 9 2 arch/arm/kernel/process.c:80 (set (reg:SI 2 r2 [orig:133 hlt_counter.326 ] [133])
        (plus:SI (reg:SI 2 r2 [orig:134 hlt_counter.325 ] [134])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 9 7 20 2 arch/arm/kernel/process.c:80 (set (mem/v/c/i:SI (reg/f:SI 3 r3 [135]) [0 hlt_counter+0 S4 A32])
        (reg:SI 2 r2 [orig:133 hlt_counter.326 ] [133])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 3 r3 [135])
        (expr_list:REG_DEAD (reg:SI 2 r2 [orig:133 hlt_counter.326 ] [133])
            (nil))))

(note 20 9 21 2 NOTE_INSN_EPILOGUE_BEG)

(jump_insn:TI 21 20 22 2 arch/arm/kernel/process.c:81 (return) 260 {return} (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%] 

(barrier 22 21 17)

(note 17 22 18 NOTE_INSN_DELETED)

(note 18 17 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function enable_hlt (enable_hlt)[0:1339]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 2 from 5 to 21 -- after reload
;;   ======================================================

;;	  0-->     5 r3=`*.LANCHOR0'                   :cortex_a8_load_store_1
;;	  3-->     6 r2=[r3]                           :cortex_a8_load_store_1
;;	  5-->     7 r2=r2-0x1                         :cortex_a8_default
;;	  5-->     9 [r3]=r2                           :cortex_a8_load_store_1
;;	  6-->    21 return                            :cortex_a8_load_store_1
;;	Ready list (final):  
;;   total time = 6
;;   new head = 5
;;   new tail = 21





enable_hlt

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 2[r2] 3[r3]
;;  ref usage 	r0={1d} r1={1d} r2={3d,2u} r3={2d,2u} r13={1d,2u} r14={1d,1u} 
;;    total ref usage 16{9d,7u,0e} in 5{5 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 2 [r2] 3 [r3]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 19 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 19 3 2 2 NOTE_INSN_PROLOGUE_END)

(note 2 19 5 2 NOTE_INSN_FUNCTION_BEG)

(insn:TI 5 2 6 2 arch/arm/kernel/process.c:87 (set (reg/f:SI 3 r3 [135])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn:TI 6 5 7 2 arch/arm/kernel/process.c:87 (set (reg:SI 2 r2 [orig:134 hlt_counter.327 ] [134])
        (mem/v/c/i:SI (reg/f:SI 3 r3 [135]) [0 hlt_counter+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn:TI 7 6 9 2 arch/arm/kernel/process.c:87 (set (reg:SI 2 r2 [orig:133 hlt_counter.328 ] [133])
        (plus:SI (reg:SI 2 r2 [orig:134 hlt_counter.327 ] [134])
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (nil))

(insn 9 7 20 2 arch/arm/kernel/process.c:87 (set (mem/v/c/i:SI (reg/f:SI 3 r3 [135]) [0 hlt_counter+0 S4 A32])
        (reg:SI 2 r2 [orig:133 hlt_counter.328 ] [133])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 3 r3 [135])
        (expr_list:REG_DEAD (reg:SI 2 r2 [orig:133 hlt_counter.328 ] [133])
            (nil))))

(note 20 9 21 2 NOTE_INSN_EPILOGUE_BEG)

(jump_insn:TI 21 20 22 2 arch/arm/kernel/process.c:88 (return) 260 {return} (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%] 

(barrier 22 21 17)

(note 17 22 18 NOTE_INSN_DELETED)

(note 18 17 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function nohlt_setup (nohlt_setup)[0:1340] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 2 from 7 to 28 -- after reload
;;   ======================================================

;;	  0-->    24 r2=`*.LANCHOR0'                   :cortex_a8_load_store_1
;;	  0-->     7 r3=0x1                            :cortex_a8_default
;;	  1-->    13 r0=r3                             :cortex_a8_default
;;	  3-->     8 [r2]=r3                           :cortex_a8_load_store_1
;;	  3-->    19 use r0                            :nothing
;;	  4-->    28 return                            :cortex_a8_load_store_1
;;	Ready list (final):  
;;   total time = 4
;;   new head = 7
;;   new tail = 28





nohlt_setup

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 2[r2] 3[r3]
;;  ref usage 	r0={2d,2u} r1={1d} r2={2d,1u} r3={2d,2u} r13={1d,2u} r14={1d,1u} 
;;    total ref usage 17{9d,8u,0e} in 6{6 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 2 [r2] 3 [r3]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 26 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 26 4 3 2 NOTE_INSN_PROLOGUE_END)

(note 3 26 24 2 NOTE_INSN_FUNCTION_BEG)

(insn:TI 24 3 7 2 arch/arm/kernel/process.c:94 (set (reg/f:SI 2 r2 [135])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 7 24 13 2 arch/arm/kernel/process.c:94 (set (reg:SI 3 r3 [136])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 1 [0x1])
        (nil)))

(insn:TI 13 7 8 2 arch/arm/kernel/process.c:96 (set (reg/i:SI 0 r0)
        (reg:SI 3 r3 [136])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(insn:TI 8 13 19 2 arch/arm/kernel/process.c:94 (set (mem/v/c/i:SI (reg/f:SI 2 r2 [135]) [0 hlt_counter+0 S4 A32])
        (reg:SI 3 r3 [136])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [136])
        (expr_list:REG_DEAD (reg/f:SI 2 r2 [135])
            (expr_list:REG_EQUAL (const_int 1 [0x1])
                (nil)))))

(insn 19 8 27 2 arch/arm/kernel/process.c:96 (use (reg/i:SI 0 r0)) -1 (nil))

(note 27 19 28 2 NOTE_INSN_EPILOGUE_BEG)

(jump_insn:TI 28 27 29 2 arch/arm/kernel/process.c:96 (return) 260 {return} (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%] 

(barrier 29 28 23)

(note 23 29 25 NOTE_INSN_DELETED)

(note 25 23 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function hlt_setup (hlt_setup)[0:1341] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 2 from 13 to 29 -- after reload
;;   ======================================================

;;	  0-->    25 r3=`*.LANCHOR0'                   :cortex_a8_load_store_1
;;	  0-->    24 r2=0x0                            :cortex_a8_default
;;	  1-->    13 r0=0x1                            :cortex_a8_default
;;	  3-->     8 [r3]=r2                           :cortex_a8_load_store_1
;;	  3-->    19 use r0                            :nothing
;;	  4-->    29 return                            :cortex_a8_load_store_1
;;	Ready list (final):  
;;   total time = 4
;;   new head = 13
;;   new tail = 29





hlt_setup

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 2[r2] 3[r3]
;;  ref usage 	r0={2d,2u} r1={1d} r2={2d,1u} r3={2d,1u} r13={1d,2u} r14={1d,1u} 
;;    total ref usage 16{9d,7u,0e} in 6{6 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 2 [r2] 3 [r3]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 27 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 27 4 3 2 NOTE_INSN_PROLOGUE_END)

(note 3 27 9 2 NOTE_INSN_FUNCTION_BEG)

(note 9 3 25 2 NOTE_INSN_DELETED)

(insn:TI 25 9 24 2 arch/arm/kernel/process.c:100 (set (reg/f:SI 3 r3 [135])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 24 25 13 2 arch/arm/kernel/process.c:100 (set (reg:SI 2 r2 [136])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 0 [0x0])
        (nil)))

(insn:TI 13 24 8 2 arch/arm/kernel/process.c:102 (set (reg/i:SI 0 r0)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(insn:TI 8 13 19 2 arch/arm/kernel/process.c:100 (set (mem/v/c/i:SI (reg/f:SI 3 r3 [135]) [0 hlt_counter+0 S4 A32])
        (reg:SI 2 r2 [136])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 3 r3 [135])
        (expr_list:REG_DEAD (reg:SI 2 r2 [136])
            (expr_list:REG_EQUAL (const_int 0 [0x0])
                (nil)))))

(insn 19 8 28 2 arch/arm/kernel/process.c:102 (use (reg/i:SI 0 r0)) -1 (nil))

(note 28 19 29 2 NOTE_INSN_EPILOGUE_BEG)

(jump_insn:TI 29 28 30 2 arch/arm/kernel/process.c:102 (return) 260 {return} (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%] 

(barrier 30 29 23)

(note 23 30 26 NOTE_INSN_DELETED)

(note 26 23 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function arm_machine_flush_console (arm_machine_flush_console)[0:1342]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 2 from 16 to 16 -- after reload
;;   ======================================================

;;	  0-->    16 return                            :cortex_a8_load_store_1
;;	Ready list (final):  
;;   total time = 0
;;   new head = 16
;;   new tail = 16





arm_machine_flush_console

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	
;;  ref usage 	r0={1d} r1={1d} r2={1d} r3={1d} r13={1d,2u} r14={1d,1u} 
;;    total ref usage 9{6d,3u,0e} in 1{1 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 14 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 14 3 2 2 NOTE_INSN_PROLOGUE_END)

(note 2 14 15 2 NOTE_INSN_FUNCTION_BEG)

(note 15 2 16 2 NOTE_INSN_EPILOGUE_BEG)

(jump_insn:TI 16 15 17 2 arch/arm/kernel/process.c:129 (return) 260 {return} (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%] 

(barrier 17 16 12)

(note 12 17 13 NOTE_INSN_DELETED)

(note 13 12 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function do_nothing (do_nothing)[0:1344]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 2 from 17 to 17 -- after reload
;;   ======================================================

;;	  0-->    17 return                            :cortex_a8_load_store_1
;;	Ready list (final):  
;;   total time = 0
;;   new head = 17
;;   new tail = 17





do_nothing

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	
;;  ref usage 	r0={1d} r1={1d} r2={1d} r3={1d} r13={1d,2u} r14={1d,1u} 
;;    total ref usage 9{6d,3u,0e} in 1{1 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 15 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 15 4 3 2 NOTE_INSN_PROLOGUE_END)

(note 3 15 16 2 NOTE_INSN_FUNCTION_BEG)

(note 16 3 17 2 NOTE_INSN_EPILOGUE_BEG)

(jump_insn:TI 17 16 18 2 arch/arm/kernel/process.c:175 (return) 260 {return} (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%] 

(barrier 18 17 13)

(note 13 18 14 NOTE_INSN_DELETED)

(note 14 13 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function default_idle (default_idle)[0:1346]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 2 from 21 to 24 -- after reload
;;   ======================================================

;;	  0-->    21 r2=sp                             :cortex_a8_default
;;	  1-->    17 r3=r2&0xffffffffffffe03f          :cortex_a8_default
;;	  2-->    18 r3=r3&0xffffffffffffffc0          :cortex_a8_default
;;	  4-->     8 r3=[r3]                           :cortex_a8_load_store_1
;;	  5-->     9 {asm_operands;clobber cc;clobber [:nothing
;;	  6-->    24 return                            :cortex_a8_load_store_1
;;	Ready list (final):  
;;   total time = 6
;;   new head = 21
;;   new tail = 24





default_idle

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 2[r2] 3[r3] 13[sp] 24[cc]
;;  ref usage 	r0={1d} r1={1d} r2={2d,1u} r3={4d,2u} r13={1d,3u} r14={1d,1u} r24={1d} 
;;    total ref usage 18{11d,7u,0e} in 6{6 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3]
;; live  kill	 24 [cc]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 22 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 22 3 2 2 NOTE_INSN_PROLOGUE_END)

(note 2 22 6 2 NOTE_INSN_FUNCTION_BEG)

(note 6 2 21 2 NOTE_INSN_DELETED)

(insn:TI 21 6 17 2 include/linux/thread_info.h:84 (set (reg:SI 2 r2)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn:TI 17 21 18 2 include/linux/thread_info.h:84 (set (reg/f:SI 3 r3 [orig:135 D.26267 ] [135])
        (and:SI (reg:SI 2 r2)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 2 r2)
        (nil)))

(insn:TI 18 17 8 2 include/linux/thread_info.h:84 (set (reg/f:SI 3 r3 [orig:135 D.26267 ] [135])
        (and:SI (reg/f:SI 3 r3 [orig:135 D.26267 ] [135])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn:TI 8 18 9 2 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 3 r3 [orig:134 D.26270 ] [134])
        (mem/v:SI (reg/f:SI 3 r3 [orig:135 D.26267 ] [135]) [0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_UNUSED (reg:SI 3 r3 [orig:134 D.26270 ] [134])
        (nil)))

(insn:TI 9 8 23 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/irqflags.h:26 (parallel [
            (asm_operands/v ("	cpsie i			@ arch_local_irq_enable") ("") 0 []
                 [] 1104764)
            (clobber (reg:QI 24 cc))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(note 23 9 24 2 NOTE_INSN_EPILOGUE_BEG)

(jump_insn:TI 24 23 25 2 arch/arm/kernel/process.c:202 (return) 260 {return} (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%] 

(barrier 25 24 19)

(note 19 25 20 NOTE_INSN_DELETED)

(note 20 19 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function reboot_setup (reboot_setup)[0:1348] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 2 from 7 to 28 -- after reload
;;   ======================================================

;;	  0-->     7 r2=zxn([r0])                      :cortex_a8_load_store_1
;;	  0-->    14 r0=0x1                            :cortex_a8_default
;;	  1-->     6 r3=`*.LANCHOR1'                   :cortex_a8_load_store_1
;;	  4-->     9 [r3]=r2                           :cortex_a8_load_store_1
;;	  4-->    20 use r0                            :nothing
;;	  5-->    28 return                            :cortex_a8_load_store_1
;;	Ready list (final):  
;;   total time = 5
;;   new head = 7
;;   new tail = 28





reboot_setup

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 2[r2] 3[r3]
;;  ref usage 	r0={2d,3u} r1={1d} r2={2d,1u} r3={2d,1u} r13={1d,2u} r14={1d,1u} 
;;    total ref usage 17{9d,8u,0e} in 6{6 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 2 [r2] 3 [r3]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 26 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 26 4 2 2 NOTE_INSN_PROLOGUE_END)

(note 2 26 3 2 NOTE_INSN_DELETED)

(note 3 2 10 2 NOTE_INSN_FUNCTION_BEG)

(note 10 3 7 2 NOTE_INSN_DELETED)

(insn:TI 7 10 14 2 arch/arm/kernel/process.c:260 (set (reg:SI 2 r2 [136])
        (zero_extend:SI (mem:QI (reg:SI 0 r0 [ str ]) [0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:SI 0 r0 [ str ])
        (nil)))

(insn 14 7 6 2 arch/arm/kernel/process.c:262 (set (reg/i:SI 0 r0)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(insn:TI 6 14 9 2 arch/arm/kernel/process.c:260 (set (reg/f:SI 3 r3 [135])
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn:TI 9 6 20 2 arch/arm/kernel/process.c:260 (set (mem/c/i:QI (reg/f:SI 3 r3 [135]) [0 reboot_mode+0 S1 A8])
        (reg:QI 2 r2 [136])) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg/f:SI 3 r3 [135])
        (expr_list:REG_DEAD (reg:QI 2 r2 [136])
            (nil))))

(insn 20 9 27 2 arch/arm/kernel/process.c:262 (use (reg/i:SI 0 r0)) -1 (nil))

(note 27 20 28 2 NOTE_INSN_EPILOGUE_BEG)

(jump_insn:TI 28 27 29 2 arch/arm/kernel/process.c:262 (return) 260 {return} (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%] 

(barrier 29 28 24)

(note 24 29 25 NOTE_INSN_DELETED)

(note 25 24 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function release_thread (release_thread)[0:1359]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 2 from 17 to 17 -- after reload
;;   ======================================================

;;	  0-->    17 return                            :cortex_a8_load_store_1
;;	Ready list (final):  
;;   total time = 0
;;   new head = 17
;;   new tail = 17





release_thread

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	
;;  ref usage 	r0={1d} r1={1d} r2={1d} r3={1d} r13={1d,2u} r14={1d,1u} 
;;    total ref usage 9{6d,3u,0e} in 1{1 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 15 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 15 4 3 2 NOTE_INSN_PROLOGUE_END)

(note 3 15 16 2 NOTE_INSN_FUNCTION_BEG)

(note 16 3 17 2 NOTE_INSN_EPILOGUE_BEG)

(jump_insn:TI 17 16 18 2 arch/arm/kernel/process.c:470 (return) 260 {return} (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%] 

(barrier 18 17 13)

(note 13 18 14 NOTE_INSN_DELETED)

(note 14 13 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function dump_task_regs (dump_task_regs)[0:1361]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 2 from 35 to 38 -- after reload
;;   ======================================================

;;	  0-->    35 {[--sp]=unspec[r4] 2;use lr;}     :cortex_a8_load_store_2
;;	  1-->     7 r3=[r0+0x4]                       :cortex_a8_load_store_1
;;	  2-->    12 r0=r1                             :cortex_a8_default
;;	  2-->    14 r2=0x48                           :cortex_a8_default
;;	  3-->    31 r1=r3+0x1f80                      :cortex_a8_default
;;	  4-->    32 r1=r1+0x30                        :cortex_a8_default
;;	  5-->    15 r0=call [`memcpy']                :cortex_a8_issue_branch
;;	  5-->    21 r0=0x1                            :cortex_a8_default
;;	  6-->    27 use r0                            :nothing
;;	  6-->    38 return                            :cortex_a8_load_store_1
;;	Ready list (final):  
;;   total time = 6
;;   new head = 35
;;   new tail = 38





dump_task_regs

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 13[sp] 14[lr]
;;  ref usage 	r0={4d,4u} r1={4d,3u} r2={3d,1u} r3={3d,1u} r4={1d,2u} r12={1d} r13={2d,4u} r14={2d,2u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 148{131d,17u,0e} in 10{9 regular + 1 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 4 [r4] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 5 3 2 NOTE_INSN_DELETED)

(note 3 2 4 2 NOTE_INSN_DELETED)

(note 4 3 8 2 NOTE_INSN_FUNCTION_BEG)

(note 8 4 10 2 NOTE_INSN_DELETED)

(note 10 8 11 2 NOTE_INSN_DELETED)

(note 11 10 17 2 NOTE_INSN_DELETED)

(note 17 11 35 2 NOTE_INSN_DELETED)

(insn/f:TI 35 17 36 2 arch/arm/kernel/process.c:503 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 4 r4)
                    ] 2))
            (use (reg:SI 14 lr))
        ]) 327 {*push_multi} (expr_list:REG_DEAD (reg:SI 14 lr)
        (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                    (set/f (reg/f:SI 13 sp)
                        (plus:SI (reg/f:SI 13 sp)
                            (const_int -8 [0xfffffffffffffff8])))
                    (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                        (reg:SI 4 r4))
                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                (const_int 4 [0x4])) [0 S4 A32])
                        (reg:SI 14 lr))
                ])
            (nil))))

(note 36 35 7 2 NOTE_INSN_PROLOGUE_END)

(insn:TI 7 36 12 2 include/linux/elfcore.h:112 (set (reg/f:SI 3 r3 [orig:136 <variable>.stack ] [136])
        (mem/s/f/j:SI (plus:SI (reg:SI 0 r0 [ t ])
                (const_int 4 [0x4])) [0 <variable>.stack+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ t ])
        (nil)))

(insn:TI 12 7 14 2 include/linux/elfcore.h:112 (set (reg:SI 0 r0)
        (reg:SI 1 r1 [ elfregs ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ elfregs ])
        (nil)))

(insn 14 12 31 2 include/linux/elfcore.h:112 (set (reg:SI 2 r2)
        (const_int 72 [0x48])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 72 [0x48])
        (nil)))

(insn:TI 31 14 32 2 include/linux/elfcore.h:112 (set (reg:SI 1 r1)
        (plus:SI (reg/f:SI 3 r3 [orig:136 <variable>.stack ] [136])
            (const_int 8064 [0x1f80]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 3 r3 [orig:136 <variable>.stack ] [136])
        (nil)))

(insn:TI 32 31 15 2 include/linux/elfcore.h:112 (set (reg:SI 1 r1)
        (plus:SI (reg:SI 1 r1)
            (const_int 48 [0x30]))) 4 {*arm_addsi3} (nil))

(call_insn:TI 15 32 21 2 include/linux/elfcore.h:112 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41] <function_decl 0x11573080 memcpy>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 21 15 27 2 arch/arm/kernel/process.c:506 (set (reg/i:SI 0 r0)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(insn 27 21 37 2 arch/arm/kernel/process.c:506 (use (reg/i:SI 0 r0)) -1 (nil))

(note 37 27 38 2 NOTE_INSN_EPILOGUE_BEG)

(jump_insn:TI 38 37 39 2 arch/arm/kernel/process.c:506 (return) 260 {return} (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 13 [sp]


;; Succ edge  EXIT [100.0%] 

(barrier 39 38 33)

(note 33 39 34 NOTE_INSN_DELETED)

(note 34 33 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function arch_vma_name (arch_vma_name)[0:1367]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 2 from 6 to 60 -- after reload
;;   ======================================================

;;	  0-->     6 r0=[r0+0x4]                       :cortex_a8_load_store_1
;;	  1-->    50 r3=`*.LC0'                        :cortex_a8_load_store_1
;;	  2-->    55 cc=cmp(r0,0xffffffffffff0000)     :cortex_a8_default
;;	  3-->    56 (!cc) r0=r3                       :cortex_a8_default
;;	  3-->    57 (cc) r0=0x0                       :cortex_a8_default
;;	  4-->    28 use r0                            :nothing
;;	  4-->    60 return                            :cortex_a8_load_store_1
;;	Ready list (final):  
;;   total time = 4
;;   new head = 6
;;   new tail = 60





arch_vma_name

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 3[r3] 24[cc]
;;  ref usage 	r0={4d,6u} r1={1d} r2={1d} r3={2d,1u} r13={1d,2u} r14={1d,1u} r24={1d,2u} 
;;    total ref usage 23{11d,12u,0e} in 7{7 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 3 [r3] 24 [cc]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 58 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 58 4 2 2 NOTE_INSN_PROLOGUE_END)

(note 2 58 3 2 NOTE_INSN_DELETED)

(note 3 2 7 2 NOTE_INSN_FUNCTION_BEG)

(note 7 3 52 2 NOTE_INSN_DELETED)

(note 52 7 6 2 NOTE_INSN_DELETED)

(insn:TI 6 52 50 2 arch/arm/kernel/process.c:626 (set (reg:SI 0 r0 [orig:136 <variable>.vm_start ] [136])
        (mem/s/j:SI (plus:SI (reg:SI 0 r0 [ vma ])
                (const_int 4 [0x4])) [0 <variable>.vm_start+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn:TI 50 6 55 2 arch/arm/kernel/process.c:626 discrim 2 (set (reg/f:SI 3 r3 [138])
        (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x115b6c60>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x115b6c60>)
        (nil)))

(insn:TI 55 50 56 2 arch/arm/kernel/process.c:627 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0 [orig:136 <variable>.vm_start ] [136])
            (const_int -65536 [0xffffffffffff0000]))) 219 {*arm_cmpsi_insn} (nil))

(insn:TI 56 55 57 2 arch/arm/kernel/process.c:627 (cond_exec (eq (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg/i:SI 0 r0)
            (reg/f:SI 3 r3 [138]))) 2345 {neon_vornv2di+78} (expr_list:REG_DEAD (reg/f:SI 3 r3 [138])
        (nil)))

(insn 57 56 28 2 arch/arm/kernel/process.c:627 (cond_exec (ne (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg/i:SI 0 r0)
            (const_int 0 [0x0]))) 2345 {neon_vornv2di+78} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 28 57 59 2 arch/arm/kernel/process.c:627 (use (reg/i:SI 0 r0)) -1 (nil))

(note 59 28 60 2 NOTE_INSN_EPILOGUE_BEG)

(jump_insn:TI 60 59 61 2 arch/arm/kernel/process.c:627 (return) 260 {return} (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%] 

(barrier 61 60 53)

(note 53 61 54 NOTE_INSN_DELETED)

(note 54 53 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vectors_user_mapping (vectors_user_mapping)[0:1366]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 2 from 42 to 45 -- after reload
;;   ======================================================

;;	  0-->    42 {[--sp]=unspec[r0] 2;use r1;use r2:cortex_a8_load_store_2
;;	  1-->    39 r3=sp                             :cortex_a8_default
;;	  2-->    32 r0=r3&0xffffffffffffe03f          :cortex_a8_default
;;	  2-->    37 ip=0x0                            :cortex_a8_default
;;	  3-->    33 r0=r0&0xffffffffffffffc0          :cortex_a8_default
;;	  3-->    13 r1=0xffffffffffff0000             :cortex_a8_load_store_1
;;	  4-->    14 r2=0x1000                         :cortex_a8_default
;;	  4-->    15 r3=0x4080055                      :cortex_a8_load_store_1
;;	  5-->     8 r0=[r0+0xc]                       :cortex_a8_load_store_1
;;	  6-->    11 [sp]=ip                           :cortex_a8_load_store_1
;;	  8-->    12 r0=[r0+0x1ec]                     :cortex_a8_load_store_1
;;	  9-->    16 r0=call [`install_special_mapping':cortex_a8_issue_branch
;;	  9-->    28 use r0                            :nothing
;;	  9-->    45 unspec/v{return;}                 :nothing
;;	Ready list (final):  
;;   total time = 9
;;   new head = 42
;;   new tail = 45





vectors_user_mapping

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 12[ip] 13[sp] 14[lr]
;;  ref usage 	r0={6d,7u} r1={3d,2u} r2={3d,2u} r3={4d,2u} r12={2d,1u} r13={2d,6u} r14={2d,2u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 155{133d,22u,0e} in 14{13 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 6 2 NOTE_INSN_FUNCTION_BEG)

(note 6 2 9 2 NOTE_INSN_DELETED)

(note 9 6 42 2 NOTE_INSN_DELETED)

(insn/f:TI 42 9 43 2 arch/arm/kernel/process.c:615 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 0 r0)
                    ] 2))
            (use (reg:SI 1 r1))
            (use (reg:SI 2 r2))
            (use (reg:SI 14 lr))
        ]) 327 {*push_multi} (expr_list:REG_DEAD (reg:SI 14 lr)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_DEAD (reg:SI 0 r0)
                    (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                                (set/f (reg/f:SI 13 sp)
                                    (plus:SI (reg/f:SI 13 sp)
                                        (const_int -16 [0xfffffffffffffff0])))
                                (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                                    (reg:SI 0 r0))
                                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                            (const_int 4 [0x4])) [0 S4 A32])
                                    (reg:SI 1 r1))
                                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                            (const_int 8 [0x8])) [0 S4 A32])
                                    (reg:SI 2 r2))
                                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                            (const_int 12 [0xc])) [0 S4 A32])
                                    (reg:SI 14 lr))
                            ])
                        (nil)))))))

(note 43 42 39 2 NOTE_INSN_PROLOGUE_END)

(insn:TI 39 43 32 2 arch/arm/kernel/process.c:617 (set (reg:SI 3 r3)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn:TI 32 39 37 2 arch/arm/kernel/process.c:617 (set (reg:SI 0 r0 [136])
        (and:SI (reg:SI 3 r3)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 3 r3)
        (nil)))

(insn 37 32 33 2 arch/arm/kernel/process.c:617 (set (reg:SI 12 ip [140])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 0 [0x0])
        (nil)))

(insn:TI 33 37 13 2 arch/arm/kernel/process.c:617 (set (reg:SI 0 r0 [136])
        (and:SI (reg:SI 0 r0 [136])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 13 33 14 2 arch/arm/kernel/process.c:617 (set (reg:SI 1 r1)
        (const_int -65536 [0xffffffffffff0000])) 167 {*arm_movsi_insn} (nil))

(insn:TI 14 13 15 2 arch/arm/kernel/process.c:617 (set (reg:SI 2 r2)
        (const_int 4096 [0x1000])) 167 {*arm_movsi_insn} (nil))

(insn 15 14 8 2 arch/arm/kernel/process.c:617 (set (reg:SI 3 r3)
        (const_int 67633237 [0x4080055])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 67633237 [0x4080055])
        (nil)))

(insn:TI 8 15 11 2 arch/arm/kernel/process.c:617 (set (reg/f:SI 0 r0 [orig:138 <variable>.task ] [138])
        (mem/s/f/j:SI (plus:SI (reg:SI 0 r0 [136])
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn:TI 11 8 12 2 arch/arm/kernel/process.c:617 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg:SI 12 ip [140])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 12 ip [140])
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn:TI 12 11 16 2 arch/arm/kernel/process.c:617 (set (reg:SI 0 r0)
        (mem/s/f/j:SI (plus:SI (reg/f:SI 0 r0 [orig:138 <variable>.task ] [138])
                (const_int 492 [0x1ec])) [0 <variable>.mm+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn:TI 16 12 28 2 arch/arm/kernel/process.c:617 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("install_special_mapping") [flags 0x41] <function_decl 0x11145500 install_special_mapping>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 28 16 44 2 arch/arm/kernel/process.c:622 (use (reg/i:SI 0 r0)) -1 (nil))

(note 44 28 45 2 NOTE_INSN_EPILOGUE_BEG)

(jump_insn 45 44 46 2 arch/arm/kernel/process.c:622 (unspec_volatile [
            (return)
        ] 1) 323 {*epilogue_insns} (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp]


;; Succ edge  EXIT [100.0%] 

(barrier 46 45 36)

(note 36 46 38 NOTE_INSN_DELETED)

(note 38 36 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function arch_randomize_brk (arch_randomize_brk)[0:1365]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 2 from 36 to 39 -- after reload
;;   ======================================================

;;	  0-->    36 {[--sp]=unspec[r4] 2;use lr;}     :cortex_a8_load_store_2
;;	  1-->     2 r4=r0                             :cortex_a8_default
;;	  2-->     6 r0=[r0+0x94]                      :cortex_a8_load_store_1
;;	  2-->    10 r2=0x0                            :cortex_a8_default
;;	  4-->     9 r1=r0+0x2000000                   :cortex_a8_default
;;	  5-->    11 r0=call [`randomize_range']       :cortex_a8_issue_branch
;;	 37-->    13 {cc=cmp(r0,0x0);r0=r0;}           :cortex_a8_default
;;	 39-->    16 (!cc) r0=[r4+0x94]                :cortex_a8_load_store_1
;;	 39-->    29 use r0                            :nothing
;;	 40-->    39 return                            :cortex_a8_load_store_1
;;	Ready list (final):  
;;   total time = 40
;;   new head = 36
;;   new tail = 39





arch_randomize_brk

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 4[r4] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={5d,9u} r1={3d,1u} r2={3d,1u} r3={2d} r4={2d,3u,1d} r12={1d} r13={2d,4u} r14={2d,2u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={2d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 154{132d,21u,1e} in 10{9 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 13 [sp] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 13 [sp] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 7 2 NOTE_INSN_FUNCTION_BEG)

(note 7 3 12 2 NOTE_INSN_DELETED)

(note 12 7 36 2 NOTE_INSN_DELETED)

(insn/f:TI 36 12 37 2 arch/arm/kernel/process.c:602 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 4 r4)
                    ] 2))
            (use (reg:SI 14 lr))
        ]) 327 {*push_multi} (expr_list:REG_DEAD (reg:SI 14 lr)
        (expr_list:REG_DEAD (reg:SI 4 r4)
            (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                        (set/f (reg/f:SI 13 sp)
                            (plus:SI (reg/f:SI 13 sp)
                                (const_int -8 [0xfffffffffffffff8])))
                        (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                            (reg:SI 4 r4))
                        (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                    (const_int 4 [0x4])) [0 S4 A32])
                            (reg:SI 14 lr))
                    ])
                (nil)))))

(note 37 36 2 2 NOTE_INSN_PROLOGUE_END)

(insn:TI 2 37 6 2 arch/arm/kernel/process.c:602 (set (reg/v/f:SI 4 r4 [orig:136 mm ] [136])
        (reg:SI 0 r0 [ mm ])) 167 {*arm_movsi_insn} (nil))

(insn:TI 6 2 10 2 arch/arm/kernel/process.c:603 (set (reg:SI 0 r0 [orig:134 D.26158 ] [134])
        (mem/s/j:SI (plus:SI (reg/f:SI 0 r0 [orig:136 mm ] [136])
                (const_int 148 [0x94])) [0 <variable>.brk+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:136 mm ] [136])
                (const_int 148 [0x94])) [0 <variable>.brk+0 S4 A32])
        (nil)))

(insn 10 6 9 2 arch/arm/kernel/process.c:604 (set (reg:SI 2 r2)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn:TI 9 10 11 2 arch/arm/kernel/process.c:604 (set (reg:SI 1 r1)
        (plus:SI (reg:SI 0 r0)
            (const_int 33554432 [0x2000000]))) 4 {*arm_addsi3} (nil))

(call_insn:TI 11 9 13 2 arch/arm/kernel/process.c:604 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("randomize_range") [flags 0x41] <function_decl 0x11401c80 randomize_range>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn:TI 13 11 16 2 arch/arm/kernel/process.c:604 (parallel [
            (set (reg:CC 24 cc)
                (compare:CC (reg:SI 0 r0)
                    (const_int 0 [0x0])))
            (set (reg:SI 0 r0 [orig:133 D.26161 ] [133])
                (reg:SI 0 r0))
        ]) 174 {*movsi_compare0} (nil))

(insn:TI 16 13 29 2 arch/arm/kernel/process.c:604 discrim 2 (cond_exec (eq (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 0 r0 [orig:133 D.26161 ] [133])
            (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:136 mm ] [136])
                    (const_int 148 [0x94])) [0 <variable>.brk+0 S4 A32]))) 2345 {neon_vornv2di+78} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 29 16 39 2 arch/arm/kernel/process.c:605 (use (reg/i:SI 0 r0)) -1 (nil))

(jump_insn:TI 39 29 38 2 arch/arm/kernel/process.c:605 (return) 260 {return} (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 13 [sp]


;; Succ edge  EXIT [100.0%] 

(barrier 38 39 34)

(note 34 38 35 NOTE_INSN_DELETED)

(note 35 34 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function get_wchan (get_wchan)[0:1364]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 12 n_edges 17 count 21 (  1.8)


get_wchan

Dataflow summary:
def_info->table_size = 0, use_info->table_size = 0
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={8d,11u} r1={5d,2u} r2={5d,3u} r3={9d,8u,1d} r4={3d,4u} r5={2d,2u} r12={2d} r13={3d,25u,2d} r14={3d,2u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={8d,6u} r25={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} 
;;    total ref usage 336{268d,63u,5e} in 40{38 regular + 2 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(13){ }d-1(14){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  kill	
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 13 [sp] 14 [lr]

( 0 )->[2]->( 10 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 13 [sp] 24 [cc]
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 13 [sp] 24 [cc]
;; live  kill	
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 13 [sp] 14 [lr]

( 2 )->[3]->( 10 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 24 [cc]
;; live  kill	
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 13 [sp] 14 [lr]

( 3 )->[4]->( 10 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 13 [sp] 14 [lr]

( 4 )->[5]->( 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5]
;; live  in  	 0 [r0] 13 [sp]
;; live  gen 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5]
;; live  kill	
;; lr  out 	 4 [r4] 5 [r5] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 13 [sp]

( 5 9 )->[6]->( 10 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 13 [sp]
;; live  gen 	 0 [r0] 24 [cc]
;; live  kill	 14 [lr]
;; lr  out 	 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 13 [sp]

( 6 )->[7]->( 8 9 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 13 [sp]
;; live  gen 	 0 [r0] 24 [cc]
;; live  kill	 14 [lr]
;; lr  out 	 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 13 [sp]

( 7 )->[8]->( 11 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 4 [r4] 5 [r5] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 13 [sp]

( 7 )->[9]->( 6 10 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 4 [r4] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 13 [sp]
;; live  gen 	 4 [r4] 24 [cc]
;; live  kill	
;; lr  out 	 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 13 [sp]

( 3 6 4 2 9 )->[10]->( 11 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 13 [sp] 14 [lr]

( 10 8 )->[11]->( 1 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 13 [sp] 14 [lr]

( 11 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(4){ }u-1(5){ }u-1(13){ }u-1(14){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; lr  def 	
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 8 to worklist
  Adding insn 88 to worklist
  Adding insn 15 to worklist
  Adding insn 19 to worklist
  Adding insn 17 to worklist
  Adding insn 31 to worklist
  Adding insn 26 to worklist
  Adding insn 28 to worklist
  Adding insn 23 to worklist
  Adding insn 39 to worklist
  Adding insn 36 to worklist
  Adding insn 45 to worklist
  Adding insn 42 to worklist
  Adding insn 94 to worklist
  Adding insn 53 to worklist
  Adding insn 92 to worklist
  Adding insn 74 to worklist
Finished finding needed instructions:
processing block 11 lr out =  0 [r0] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
processing block 10 lr out =  0 [r0] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
  Adding insn 61 to worklist
processing block 8 lr out =  0 [r0] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
  Adding insn 47 to worklist
processing block 9 lr out =  4 [r4] 5 [r5] 13 [sp] 14 [lr]
  Adding insn 55 to worklist
  Adding insn 52 to worklist
processing block 7 lr out =  4 [r4] 5 [r5] 13 [sp] 14 [lr]
  Adding insn 44 to worklist
  Adding insn 41 to worklist
processing block 6 lr out =  4 [r4] 5 [r5] 13 [sp] 14 [lr]
  Adding insn 38 to worklist
  Adding insn 35 to worklist
processing block 5 lr out =  4 [r4] 5 [r5] 13 [sp]
  Adding insn 30 to worklist
  Adding insn 25 to worklist
  Adding insn 22 to worklist
  Adding insn 34 to worklist
  Adding insn 32 to worklist
  Adding insn 27 to worklist
  Adding insn 21 to worklist
processing block 4 lr out =  0 [r0] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
  Adding insn 18 to worklist
processing block 3 lr out =  0 [r0] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
  Adding insn 14 to worklist
  Adding insn 13 to worklist
  Adding insn 84 to worklist
  Adding insn 83 to worklist
  Adding insn 87 to worklist
processing block 2 lr out =  0 [r0] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
  Adding insn 7 to worklist
  Adding insn 89 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 12 n_edges 17 count 25 (  2.1)
;;   ======================================================
;;   -- basic block 2 from 88 to 8 -- after reload
;;   ======================================================

;;	  0-->     7 {cc=cmp(r0,0x0);r0=r0;}           :cortex_a8_default
;;	  1-->    88 {[--sp]=unspec[r4] 2;use r5;use lr:cortex_a8_load_store_2
;;	  2-->    89 sp=sp-0x14                        :cortex_a8_default
;;	  3-->     8 pc={(cc==0x0)?L59:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 3
;;   new head = 88
;;   new tail = 8

;;   ======================================================
;;   -- basic block 3 from 87 to 15 -- after reload
;;   ======================================================

;;	  0-->    87 r2=sp                             :cortex_a8_default
;;	  1-->    83 r3=r2&0xffffffffffffe03f          :cortex_a8_default
;;	  2-->    84 r3=r3&0xffffffffffffffc0          :cortex_a8_default
;;	  4-->    13 r3=[r3+0xc]                       :cortex_a8_load_store_1
;;	  6-->    14 cc=cmp(r0,r3)                     :cortex_a8_default
;;	  8-->    15 pc={(cc==0x0)?L59:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 8
;;   new head = 87
;;   new tail = 15

;;   ======================================================
;;   -- basic block 4 from 17 to 19 -- after reload
;;   ======================================================

;;	  0-->    17 r3=[r0]                           :cortex_a8_load_store_1
;;	  2-->    18 cc=cmp(r3,0x0)                    :cortex_a8_default
;;	  4-->    19 pc={(cc==0x0)?L59:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 17
;;   new tail = 19

;;   ======================================================
;;   -- basic block 5 from 21 to 31 -- after reload
;;   ======================================================

;;	  0-->    21 r3=[r0+0x4]                       :cortex_a8_load_store_1
;;	  0-->    27 r2=0x0                            :cortex_a8_default
;;	  1-->    32 r4=r2                             :cortex_a8_default
;;	  1-->    34 r5=sp                             :cortex_a8_default
;;	  3-->    22 r1=[r3+0x38]                      :cortex_a8_load_store_1
;;	  6-->    23 [sp]=r1                           :cortex_a8_load_store_1
;;	  7-->    25 r1=[r3+0x3c]                      :cortex_a8_load_store_1
;;	  8-->    28 [sp+0x8]=r2                       :cortex_a8_load_store_1
;;	 10-->    26 [sp+0x4]=r1                       :cortex_a8_load_store_1
;;	 11-->    30 r3=[r3+0x40]                      :cortex_a8_load_store_1
;;	 14-->    31 [sp+0xc]=r3                       :cortex_a8_load_store_1
;;	Ready list (final):  
;;   total time = 14
;;   new head = 21
;;   new tail = 31

;;   ======================================================
;;   -- basic block 6 from 35 to 39 -- after reload
;;   ======================================================

;;	  0-->    35 r0=sp                             :cortex_a8_default
;;	  1-->    36 r0=call [`unwind_frame']          :cortex_a8_issue_branch
;;	 33-->    38 cc=cmp(r0,0x0)                    :cortex_a8_default
;;	 35-->    39 pc={(cc<0x0)?L59:pc}              :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 35
;;   new head = 35
;;   new tail = 39

;;   ======================================================
;;   -- basic block 7 from 41 to 45 -- after reload
;;   ======================================================

;;	  0-->    41 r0=[sp+0xc]                       :cortex_a8_load_store_1
;;	  1-->    42 r0=call [`in_sched_functions']    :cortex_a8_issue_branch
;;	 33-->    44 cc=cmp(r0,0x0)                    :cortex_a8_default
;;	 35-->    45 pc={(cc!=0x0)?L50:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 35
;;   new head = 41
;;   new tail = 45

;;   ======================================================
;;   -- basic block 8 from 47 to 94 -- after reload
;;   ======================================================

;;	  0-->    47 r0=[sp+0xc]                       :cortex_a8_load_store_1
;;	  0-->    94 pc=L62                            :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 47
;;   new tail = 94

;;   ======================================================
;;   -- basic block 9 from 52 to 53 -- after reload
;;   ======================================================

;;	  0-->    52 cc=cmp(r4,0x10)                   :cortex_a8_default
;;	  0-->    55 r4=r4+0x1                         :cortex_a8_default
;;	  2-->    53 pc={(cc!=0x0)?L56:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 52
;;   new tail = 53

;;   ======================================================
;;   -- basic block 10 from 61 to 61 -- after reload
;;   ======================================================

;;	  0-->    61 r0=0x0                            :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 61
;;   new tail = 61

;;   ======================================================
;;   -- basic block 11 from 74 to 92 -- after reload
;;   ======================================================

;;	  0-->    74 use r0                            :nothing
;;	  0-->    92 unspec/v{return;}                 :nothing
;;	Ready list (final):  
;;   total time = 0
;;   new head = 74
;;   new tail = 92





get_wchan

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={8d,11u} r1={5d,2u} r2={5d,3u} r3={9d,8u,1d} r4={3d,4u} r5={2d,2u} r12={2d} r13={3d,25u,2d} r14={3d,2u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={8d,6u} r25={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} 
;;    total ref usage 336{268d,63u,5e} in 40{38 regular + 2 call} insns.
(note 2 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 13 [sp] 24 [cc]
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 13 [sp] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 2 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 5 4 2 NOTE_INSN_DELETED)

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(insn:TI 7 4 88 2 arch/arm/kernel/process.c:584 (parallel [
            (set (reg:CC 24 cc)
                (compare:CC (reg:SI 0 r0 [ p ])
                    (const_int 0 [0x0])))
            (set (reg/v/f:SI 0 r0 [orig:141 p ] [141])
                (reg:SI 0 r0 [ p ]))
        ]) 174 {*movsi_compare0} (nil))

(insn/f:TI 88 7 89 2 arch/arm/kernel/process.c:581 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 4 r4)
                    ] 2))
            (use (reg:SI 5 r5))
            (use (reg:SI 14 lr))
        ]) 327 {*push_multi} (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                (set/f (reg/f:SI 13 sp)
                    (plus:SI (reg/f:SI 13 sp)
                        (const_int -12 [0xfffffffffffffff4])))
                (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                    (reg:SI 4 r4))
                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                            (const_int 4 [0x4])) [0 S4 A32])
                    (reg:SI 5 r5))
                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                            (const_int 8 [0x8])) [0 S4 A32])
                    (reg:SI 14 lr))
            ])
        (nil)))

(insn/f:TI 89 88 90 2 arch/arm/kernel/process.c:581 (set (reg/f:SI 13 sp)
        (plus:SI (reg/f:SI 13 sp)
            (const_int -20 [0xffffffffffffffec]))) 4 {*arm_addsi3} (nil))

(note 90 89 8 2 NOTE_INSN_PROLOGUE_END)

(jump_insn:TI 8 90 9 2 arch/arm/kernel/process.c:584 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 59)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 1014 [0x3f6])
            (nil))))
;; End of basic block 2 -> ( 10 3)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 13 [sp] 14 [lr]


;; Succ edge  10 [10.1%] 
;; Succ edge  3 [89.9%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  2 [89.9%]  (fallthru)
(note 9 8 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 11 9 87 3 NOTE_INSN_DELETED)

(insn:TI 87 11 83 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 2 r2)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn:TI 83 87 84 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 3 r3 [142])
        (and:SI (reg:SI 2 r2)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 2 r2)
        (nil)))

(insn:TI 84 83 13 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 3 r3 [142])
        (and:SI (reg:SI 3 r3 [142])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn:TI 13 84 14 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 3 r3 [orig:144 <variable>.task ] [144])
        (mem/s/f/j:SI (plus:SI (reg:SI 3 r3 [142])
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn:TI 14 13 15 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 0 r0 [orig:141 p ] [141])
            (reg/f:SI 3 r3 [orig:144 <variable>.task ] [144]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/f:SI 3 r3 [orig:144 <variable>.task ] [144])
        (nil)))

(jump_insn:TI 15 14 16 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 59)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 1014 [0x3f6])
            (nil))))
;; End of basic block 3 -> ( 10 4)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 13 [sp] 14 [lr]


;; Succ edge  10 [10.1%] 
;; Succ edge  4 [89.9%]  (fallthru)

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  3 [89.9%]  (fallthru)
(note 16 15 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn:TI 17 16 18 4 arch/arm/kernel/process.c:584 discrim 2 (set (reg:SI 3 r3 [orig:139 D.26139 ] [139])
        (mem/s/v/j:SI (reg/v/f:SI 0 r0 [orig:141 p ] [141]) [0 <variable>.state+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn:TI 18 17 19 4 arch/arm/kernel/process.c:584 discrim 2 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [orig:139 D.26139 ] [139])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [orig:139 D.26139 ] [139])
        (nil)))

(jump_insn:TI 19 18 20 4 arch/arm/kernel/process.c:584 discrim 2 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 59)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 4 -> ( 10 5)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 13 [sp] 14 [lr]


;; Succ edge  10 [39.0%] 
;; Succ edge  5 [61.0%]  (fallthru)

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5]
;; live  in  	 0 [r0] 13 [sp]
;; live  gen 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5]
;; live  kill	

;; Pred edge  4 [61.0%]  (fallthru)
(note 20 19 21 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn:TI 21 20 27 5 arch/arm/kernel/process.c:587 (set (reg/f:SI 3 r3 [orig:145 <variable>.stack ] [145])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 0 r0 [orig:141 p ] [141])
                (const_int 4 [0x4])) [0 <variable>.stack+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 0 r0 [orig:141 p ] [141])
        (nil)))

(insn 27 21 32 5 arch/arm/kernel/process.c:589 (set (reg:SI 2 r2 [149])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 0 [0x0])
        (nil)))

(insn:TI 32 27 34 5 arch/arm/kernel/process.c:583 (set (reg/v:SI 4 r4 [orig:136 count ] [136])
        (reg:SI 2 r2 [149])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 34 32 22 5 arch/arm/kernel/process.c:592 (set (reg/f:SI 5 r5 [154])
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (plus:SI (reg/f:SI 13 sp)
            (const_int 0 [0x0]))
        (nil)))

(insn:TI 22 34 23 5 arch/arm/kernel/process.c:587 (set (reg:SI 1 r1 [orig:146 <variable>.cpu_context.fp ] [146])
        (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:145 <variable>.stack ] [145])
                (const_int 56 [0x38])) [0 <variable>.cpu_context.fp+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:145 <variable>.stack ] [145])
                (const_int 56 [0x38])) [0 <variable>.cpu_context.fp+0 S4 A64])
        (nil)))

(insn:TI 23 22 25 5 arch/arm/kernel/process.c:587 (set (mem/s/j/c:SI (reg/f:SI 13 sp) [0 frame.fp+0 S4 A64])
        (reg:SI 1 r1 [orig:146 <variable>.cpu_context.fp ] [146])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [orig:146 <variable>.cpu_context.fp ] [146])
        (nil)))

(insn:TI 25 23 28 5 arch/arm/kernel/process.c:588 (set (reg:SI 1 r1 [orig:148 <variable>.cpu_context.sp ] [148])
        (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:145 <variable>.stack ] [145])
                (const_int 60 [0x3c])) [0 <variable>.cpu_context.sp+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -12 [0xfffffffffffffff4])) [0 frame.sp+0 S4 A32])
        (nil)))

(insn:TI 28 25 26 5 arch/arm/kernel/process.c:589 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [0 frame.lr+0 S4 A64])
        (reg:SI 2 r2 [149])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [149])
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn:TI 26 28 30 5 arch/arm/kernel/process.c:588 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 frame.sp+0 S4 A32])
        (reg:SI 1 r1 [orig:148 <variable>.cpu_context.sp ] [148])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [orig:148 <variable>.cpu_context.sp ] [148])
        (nil)))

(insn:TI 30 26 31 5 arch/arm/kernel/process.c:590 (set (reg:SI 3 r3 [orig:151 <variable>.cpu_context.pc ] [151])
        (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:145 <variable>.stack ] [145])
                (const_int 64 [0x40])) [0 <variable>.cpu_context.pc+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 frame.pc+0 S4 A32])
        (nil)))

(insn:TI 31 30 56 5 arch/arm/kernel/process.c:590 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 12 [0xc])) [0 frame.pc+0 S4 A32])
        (reg:SI 3 r3 [orig:151 <variable>.cpu_context.pc ] [151])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [orig:151 <variable>.cpu_context.pc ] [151])
        (nil)))
;; End of basic block 5 -> ( 6)
;; lr  out 	 4 [r4] 5 [r5] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 13 [sp]


;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 5 9) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 13 [sp]
;; live  gen 	 0 [r0] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  5 [100.0%]  (fallthru)
;; Pred edge  9 [94.1%] 
(code_label 56 31 33 6 48 "" [1 uses])

(note 33 56 37 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note 37 33 35 6 NOTE_INSN_DELETED)

(insn:TI 35 37 36 6 arch/arm/kernel/process.c:592 (set (reg:SI 0 r0)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 13 sp)
            (const_int 0 [0x0]))
        (nil)))

(call_insn:TI 36 35 38 6 arch/arm/kernel/process.c:592 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("unwind_frame") [flags 0x41] <function_decl 0x114f2100 unwind_frame>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn:TI 38 36 39 6 arch/arm/kernel/process.c:593 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(jump_insn:TI 39 38 40 6 arch/arm/kernel/process.c:593 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 59)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 300 [0x12c])
            (nil))))
;; End of basic block 6 -> ( 10 7)
;; lr  out 	 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 13 [sp]


;; Succ edge  10 [3.0%]  (loop_exit)
;; Succ edge  7 [97.0%]  (fallthru)

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 13 [sp]
;; live  gen 	 0 [r0] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  6 [97.0%]  (fallthru)
(note 40 39 43 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(note 43 40 41 7 NOTE_INSN_DELETED)

(insn:TI 41 43 42 7 arch/arm/kernel/process.c:595 (set (reg:SI 0 r0)
        (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 12 [0xc])) [0 frame.pc+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn:TI 42 41 44 7 arch/arm/kernel/process.c:595 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("in_sched_functions") [flags 0x41] <function_decl 0x10f44c00 in_sched_functions>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn:TI 44 42 45 7 arch/arm/kernel/process.c:595 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(jump_insn:TI 45 44 46 7 arch/arm/kernel/process.c:595 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 50)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9700 [0x25e4])
            (nil))))
;; End of basic block 7 -> ( 8 9)
;; lr  out 	 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 13 [sp]


;; Succ edge  8 [3.0%]  (fallthru,loop_exit)
;; Succ edge  9 [97.0%] 

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 4 [r4] 5 [r5] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  7 [3.0%]  (fallthru,loop_exit)
(note 46 45 47 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn:TI 47 46 94 8 arch/arm/kernel/process.c:596 (set (reg:SI 0 r0 [orig:138 D.26140 ] [138])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 12 [0xc])) [0 frame.pc+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(jump_insn 94 47 95 8 arch/arm/kernel/process.c:596 (set (pc)
        (label_ref 62)) 242 {*arm_jump} (nil))
;; End of basic block 8 -> ( 11)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 13 [sp]


;; Succ edge  11 [100.0%] 

(barrier 95 94 50)

;; Start of basic block ( 7) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 4 [r4] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 13 [sp]
;; live  gen 	 4 [r4] 24 [cc]
;; live  kill	

;; Pred edge  7 [97.0%] 
(code_label 50 95 51 9 46 "" [1 uses])

(note 51 50 52 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn:TI 52 51 55 9 arch/arm/kernel/process.c:597 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 4 r4 [orig:136 count ] [136])
            (const_int 16 [0x10]))) 219 {*arm_cmpsi_insn} (nil))

(insn 55 52 53 9 arch/arm/kernel/process.c:597 (set (reg/v:SI 4 r4 [orig:136 count ] [136])
        (plus:SI (reg/v:SI 4 r4 [orig:136 count ] [136])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(jump_insn:TI 53 55 59 9 arch/arm/kernel/process.c:597 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 56)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9412 [0x24c4])
            (nil))))
;; End of basic block 9 -> ( 6 10)
;; lr  out 	 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 13 [sp]


;; Succ edge  6 [94.1%] 
;; Succ edge  10 [5.9%]  (fallthru,loop_exit)

;; Start of basic block ( 3 6 4 2 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  3 [10.1%] 
;; Pred edge  6 [3.0%]  (loop_exit)
;; Pred edge  4 [39.0%] 
;; Pred edge  2 [10.1%] 
;; Pred edge  9 [5.9%]  (fallthru,loop_exit)
(code_label 59 53 60 10 45 "" [4 uses])

(note 60 59 61 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn:TI 61 60 62 10 arch/arm/kernel/process.c:585 (set (reg:SI 0 r0 [orig:138 D.26140 ] [138])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 10 -> ( 11)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 13 [sp] 14 [lr]


;; Succ edge  11 [100.0%]  (fallthru)

;; Start of basic block ( 10 8) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  10 [100.0%]  (fallthru)
;; Pred edge  8 [100.0%] 
(code_label 62 61 63 11 47 "" [1 uses])

(note 63 62 74 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 74 63 91 11 arch/arm/kernel/process.c:599 (use (reg/i:SI 0 r0)) -1 (nil))

(note 91 74 92 11 NOTE_INSN_EPILOGUE_BEG)

(jump_insn:TI 92 91 93 11 arch/arm/kernel/process.c:599 (unspec_volatile [
            (return)
        ] 1) 323 {*epilogue_insns} (nil))
;; End of basic block 11 -> ( 1)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%] 

(barrier 93 92 85)

(note 85 93 86 NOTE_INSN_DELETED)

(note 86 85 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function kernel_thread (kernel_thread)[0:1363]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 2 from 55 to 59 -- after reload
;;   ======================================================

;;	  0-->    55 {[--sp]=unspec[r4] 2;use r5;use r6:cortex_a8_load_store_2
;;	  1-->    56 sp=sp-0x54                        :cortex_a8_default
;;	  2-->     8 r6=sp+0x8                         :cortex_a8_default
;;	  2-->     2 r4=r0                             :cortex_a8_default
;;	  3-->     3 r5=r1                             :cortex_a8_default
;;	  3-->     9 r0=r6                             :cortex_a8_default
;;	  4-->    10 r1=0x48                           :cortex_a8_default
;;	  4-->     4 r7=r2                             :cortex_a8_default
;;	  5-->    11 call [`__memzero']                :cortex_a8_issue_branch
;;	  5-->    53 lr=`kernel_thread_exit'           :cortex_a8_load_store_1
;;	  6-->    25 ip=0x0                            :cortex_a8_default
;;	  6-->    22 r0=r7|0x800000                    :cortex_a8_default
;;	  7-->    30 r1=ip                             :cortex_a8_default
;;	  7-->    31 r2=r6                             :cortex_a8_default
;;	  8-->    15 [sp+0x20]=lr                      :cortex_a8_load_store_1
;;	  8-->    52 lr=0x13                           :cortex_a8_default
;;	  9-->    17 [sp+0x24]=lr                      :cortex_a8_load_store_1
;;	  9-->    32 r3=ip                             :cortex_a8_default
;;	 10-->    51 lr=`kernel_thread_helper'         :cortex_a8_load_store_1
;;	 10-->    29 r0=r0|0x100                       :cortex_a8_default
;;	 11-->    12 [sp+0x18]=r5                      :cortex_a8_load_store_1
;;	 12-->    13 [sp+0x1c]=r4                      :cortex_a8_load_store_1
;;	 13-->    19 [sp+0x44]=lr                      :cortex_a8_load_store_1
;;	 13-->    50 lr=0x93                           :cortex_a8_default
;;	 14-->    26 [sp]=ip                           :cortex_a8_load_store_1
;;	 15-->    21 [sp+0x48]=lr                      :cortex_a8_load_store_1
;;	 16-->    28 [sp+0x4]=ip                       :cortex_a8_load_store_1
;;	 16-->    33 r0=call [`do_fork']               :cortex_a8_issue_branch
;;	 17-->    45 use r0                            :nothing
;;	 17-->    59 unspec/v{return;}                 :nothing
;;	Ready list (final):  
;;   total time = 17
;;   new head = 55
;;   new tail = 59





kernel_thread

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 7[r7] 12[ip] 13[sp] 14[lr]
;;  ref usage 	r0={6d,6u} r1={5d,3u} r2={4d,2u} r3={4d,1u} r4={2d,3u} r5={2d,3u} r6={2d,4u} r7={2d,3u} r12={3d,4u} r13={3d,16u,1d} r14={7d,6u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} 
;;    total ref usage 316{262d,51u,3e} in 30{28 regular + 2 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 12 [ip] 13 [sp] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 12 [ip] 13 [sp] 14 [lr]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 1 5 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 5 6 23 2 NOTE_INSN_FUNCTION_BEG)

(note 23 5 55 2 NOTE_INSN_DELETED)

(insn/f:TI 55 23 56 2 arch/arm/kernel/process.c:564 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 4 r4)
                    ] 2))
            (use (reg:SI 5 r5))
            (use (reg:SI 6 r6))
            (use (reg:SI 7 r7))
            (use (reg:SI 14 lr))
        ]) 327 {*push_multi} (expr_list:REG_DEAD (reg:SI 14 lr)
        (expr_list:REG_DEAD (reg:SI 7 r7)
            (expr_list:REG_DEAD (reg:SI 6 r6)
                (expr_list:REG_DEAD (reg:SI 5 r5)
                    (expr_list:REG_DEAD (reg:SI 4 r4)
                        (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                                    (set/f (reg/f:SI 13 sp)
                                        (plus:SI (reg/f:SI 13 sp)
                                            (const_int -20 [0xffffffffffffffec])))
                                    (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                                        (reg:SI 4 r4))
                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                (const_int 4 [0x4])) [0 S4 A32])
                                        (reg:SI 5 r5))
                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                (const_int 8 [0x8])) [0 S4 A32])
                                        (reg:SI 6 r6))
                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                (const_int 12 [0xc])) [0 S4 A32])
                                        (reg:SI 7 r7))
                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                (const_int 16 [0x10])) [0 S4 A32])
                                        (reg:SI 14 lr))
                                ])
                            (nil))))))))

(insn/f:TI 56 55 57 2 arch/arm/kernel/process.c:564 (set (reg/f:SI 13 sp)
        (plus:SI (reg/f:SI 13 sp)
            (const_int -84 [0xffffffffffffffac]))) 4 {*arm_addsi3} (nil))

(note 57 56 8 2 NOTE_INSN_PROLOGUE_END)

(insn:TI 8 57 2 2 arch/arm/kernel/process.c:567 discrim 1 (set (reg/f:SI 6 r6 [138])
        (plus:SI (reg/f:SI 13 sp)
            (const_int 8 [0x8]))) 4 {*arm_addsi3} (expr_list:REG_EQUIV (plus:SI (reg/f:SI 13 sp)
            (const_int 8 [0x8]))
        (nil)))

(insn 2 8 3 2 arch/arm/kernel/process.c:564 (set (reg/v/f:SI 4 r4 [orig:135 fn ] [135])
        (reg:SI 0 r0 [ fn ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ fn ])
        (nil)))

(insn:TI 3 2 9 2 arch/arm/kernel/process.c:564 (set (reg/v/f:SI 5 r5 [orig:136 arg ] [136])
        (reg:SI 1 r1 [ arg ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ arg ])
        (nil)))

(insn 9 3 10 2 arch/arm/kernel/process.c:567 discrim 1 (set (reg:SI 0 r0)
        (reg/f:SI 6 r6 [138])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -72 [0xffffffffffffffb8]))
        (nil)))

(insn:TI 10 9 4 2 arch/arm/kernel/process.c:567 discrim 1 (set (reg:SI 1 r1)
        (const_int 72 [0x48])) 167 {*arm_movsi_insn} (nil))

(insn 4 10 11 2 arch/arm/kernel/process.c:564 (set (reg/v:SI 7 r7 [orig:137 flags ] [137])
        (reg:SI 2 r2 [ flags ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ flags ])
        (nil)))

(call_insn:TI 11 4 53 2 arch/arm/kernel/process.c:567 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("__memzero") [flags 0x41] <function_decl 0x10bb1200 __memzero>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 53 11 25 2 arch/arm/kernel/process.c:571 (set (reg/f:SI 14 lr [139])
        (symbol_ref:SI ("kernel_thread_exit") [flags 0x41] <function_decl 0x11544100 kernel_thread_exit>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("kernel_thread_exit") [flags 0x41] <function_decl 0x11544100 kernel_thread_exit>)
        (nil)))

(insn:TI 25 53 22 2 arch/arm/kernel/process.c:576 (set (reg:SI 12 ip [146])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 0 [0x0])
        (nil)))

(insn 22 25 30 2 arch/arm/kernel/process.c:576 (set (reg:SI 0 r0 [144])
        (ior:SI (reg/v:SI 7 r7 [orig:137 flags ] [137])
            (const_int 8388608 [0x800000]))) 89 {*arm_iorsi3} (nil))

(insn:TI 30 22 31 2 arch/arm/kernel/process.c:576 (set (reg:SI 1 r1)
        (reg:SI 12 ip [146])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 31 30 15 2 arch/arm/kernel/process.c:576 (set (reg:SI 2 r2)
        (reg/f:SI 6 r6 [138])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -72 [0xffffffffffffffb8]))
        (nil)))

(insn:TI 15 31 52 2 arch/arm/kernel/process.c:571 (set (mem/s/j:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 32 [0x20])) [0 regs.uregs+24 S4 A64])
        (reg/f:SI 14 lr [139])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 14 lr [139])
        (expr_list:REG_EQUAL (symbol_ref:SI ("kernel_thread_exit") [flags 0x41] <function_decl 0x11544100 kernel_thread_exit>)
            (nil))))

(insn 52 15 17 2 arch/arm/kernel/process.c:572 (set (reg:SI 14 lr [140])
        (const_int 19 [0x13])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 19 [0x13])
        (nil)))

(insn:TI 17 52 32 2 arch/arm/kernel/process.c:572 (set (mem/s/j:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 36 [0x24])) [0 regs.uregs+28 S4 A32])
        (reg:SI 14 lr [140])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 14 lr [140])
        (expr_list:REG_EQUAL (const_int 19 [0x13])
            (nil))))

(insn 32 17 51 2 arch/arm/kernel/process.c:576 (set (reg:SI 3 r3)
        (reg:SI 12 ip [1])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn:TI 51 32 29 2 arch/arm/kernel/process.c:573 (set (reg/f:SI 14 lr [141])
        (symbol_ref:SI ("kernel_thread_helper") [flags 0x41] <function_decl 0x11544080 kernel_thread_helper>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("kernel_thread_helper") [flags 0x41] <function_decl 0x11544080 kernel_thread_helper>)
        (nil)))

(insn 29 51 12 2 arch/arm/kernel/process.c:576 (set (reg:SI 0 r0)
        (ior:SI (reg:SI 0 r0 [144])
            (const_int 256 [0x100]))) 89 {*arm_iorsi3} (nil))

(insn:TI 12 29 13 2 arch/arm/kernel/process.c:569 (set (mem/s/j:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 24 [0x18])) [0 regs.uregs+16 S4 A64])
        (reg/v/f:SI 5 r5 [orig:136 arg ] [136])) 167 {*arm_movsi_insn} (nil))

(insn:TI 13 12 19 2 arch/arm/kernel/process.c:570 (set (mem/s/j:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 28 [0x1c])) [0 regs.uregs+20 S4 A32])
        (reg/v/f:SI 4 r4 [orig:135 fn ] [135])) 167 {*arm_movsi_insn} (nil))

(insn:TI 19 13 50 2 arch/arm/kernel/process.c:573 (set (mem/s/j:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 68 [0x44])) [0 regs.uregs+60 S4 A32])
        (reg/f:SI 14 lr [141])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 14 lr [141])
        (expr_list:REG_EQUAL (symbol_ref:SI ("kernel_thread_helper") [flags 0x41] <function_decl 0x11544080 kernel_thread_helper>)
            (nil))))

(insn 50 19 26 2 arch/arm/kernel/process.c:574 (set (reg:SI 14 lr [142])
        (const_int 147 [0x93])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 147 [0x93])
        (nil)))

(insn:TI 26 50 21 2 arch/arm/kernel/process.c:576 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg:SI 12 ip [146])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn:TI 21 26 28 2 arch/arm/kernel/process.c:574 (set (mem/s/j:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 72 [0x48])) [0 regs.uregs+64 S4 A64])
        (reg:SI 14 lr [142])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 14 lr [142])
        (expr_list:REG_EQUAL (const_int 147 [0x93])
            (nil))))

(insn:TI 28 21 33 2 arch/arm/kernel/process.c:576 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 12 ip [146])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 12 ip [146])
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(call_insn 33 28 45 2 arch/arm/kernel/process.c:576 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("do_fork") [flags 0x41] <function_decl 0x10fdc100 do_fork>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 45 33 58 2 arch/arm/kernel/process.c:577 (use (reg/i:SI 0 r0)) -1 (nil))

(note 58 45 59 2 NOTE_INSN_EPILOGUE_BEG)

(jump_insn:TI 59 58 60 2 arch/arm/kernel/process.c:577 (unspec_volatile [
            (return)
        ] 1) 323 {*epilogue_insns} (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%] 

(barrier 60 59 49)

(note 49 60 54 NOTE_INSN_DELETED)

(note 54 49 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function dump_fpu (dump_fpu)[0:1362]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 2 from 51 to 17 -- after reload
;;   ======================================================

;;	  0-->    51 {[--sp]=unspec[r4] 2;use lr;}     :cortex_a8_load_store_2
;;	  1-->    50 r2=sp                             :cortex_a8_default
;;	  2-->    46 r3=r2&0xffffffffffffe03f          :cortex_a8_default
;;	  3-->    47 r3=r3&0xffffffffffffffc0          :cortex_a8_default
;;	  5-->    10 r4=zxn([r3+0x52])                 :cortex_a8_load_store_1
;;	  6-->    12 r2=zxn([r3+0x51])                 :cortex_a8_load_store_1
;;	  8-->    16 {cc=cmp(r4|r2,0x0);r4=r4|r2;}     :cortex_a8_default
;;	 10-->    17 pc={(cc==0x0)?L28:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 10
;;   new head = 51
;;   new tail = 17

;;   ======================================================
;;   -- basic block 3 from 23 to 26 -- after reload
;;   ======================================================

;;	  0-->    23 r0=r1                             :cortex_a8_default
;;	  0-->    25 r2=0x74                           :cortex_a8_default
;;	  1-->    24 r1=r3+0x120                       :cortex_a8_default
;;	  2-->    26 r0=call [`memcpy']                :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 23
;;   new tail = 26

;;   ======================================================
;;   -- basic block 4 from 36 to 54 -- after reload
;;   ======================================================

;;	  0-->    36 {r0=r4!=0x0;clobber cc;}          :cortex_a8_default
;;	  0-->    42 use r0                            :nothing
;;	  0-->    54 return                            :cortex_a8_load_store_1
;;	Ready list (final):  
;;   total time = 0
;;   new head = 36
;;   new tail = 54





dump_fpu

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={4d,3u} r1={3d,2u} r2={5d,4u} r3={4d,4u} r4={3d,5u} r12={1d} r13={2d,7u} r14={2d,2u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={3d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 165{137d,28u,0e} in 15{14 regular + 1 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp] 14 [lr]
;; lr  def 	 2 [r2] 3 [r3] 4 [r4] 13 [sp] 24 [cc]
;; live  in  	 1 [r1] 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 4 [r4] 13 [sp] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 4 5 8 2 NOTE_INSN_FUNCTION_BEG)

(note 8 4 14 2 NOTE_INSN_DELETED)

(note 14 8 15 2 NOTE_INSN_DELETED)

(note 15 14 51 2 NOTE_INSN_DELETED)

(insn/f:TI 51 15 52 2 arch/arm/kernel/process.c:512 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 4 r4)
                    ] 2))
            (use (reg:SI 14 lr))
        ]) 327 {*push_multi} (expr_list:REG_DEAD (reg:SI 4 r4)
        (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                    (set/f (reg/f:SI 13 sp)
                        (plus:SI (reg/f:SI 13 sp)
                            (const_int -8 [0xfffffffffffffff8])))
                    (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                        (reg:SI 4 r4))
                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                (const_int 4 [0x4])) [0 S4 A32])
                        (reg:SI 14 lr))
                ])
            (nil))))

(note 52 51 50 2 NOTE_INSN_PROLOGUE_END)

(insn:TI 50 52 46 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 2 r2)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn:TI 46 50 47 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/v/f:SI 3 r3 [orig:135 thread ] [135])
        (and:SI (reg:SI 2 r2)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 2 r2)
        (nil)))

(insn:TI 47 46 10 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/v/f:SI 3 r3 [orig:135 thread ] [135])
        (and:SI (reg/v/f:SI 3 r3 [orig:135 thread ] [135])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn:TI 10 47 12 2 arch/arm/kernel/process.c:514 (set (reg:SI 4 r4 [orig:141 <variable>.used_cp+2 ] [141])
        (zero_extend:SI (mem/s/j:QI (plus:SI (reg/v/f:SI 3 r3 [orig:135 thread ] [135])
                    (const_int 82 [0x52])) [0 <variable>.used_cp+2 S1 A16]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn:TI 12 10 16 2 arch/arm/kernel/process.c:514 (set (reg:SI 2 r2 [orig:143 <variable>.used_cp+1 ] [143])
        (zero_extend:SI (mem/s/j:QI (plus:SI (reg/v/f:SI 3 r3 [orig:135 thread ] [135])
                    (const_int 81 [0x51])) [0 <variable>.used_cp+1 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn:TI 16 12 17 2 arch/arm/kernel/process.c:516 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (ior:SI (reg:SI 4 r4 [orig:141 <variable>.used_cp+2 ] [141])
                        (reg:SI 2 r2 [orig:143 <variable>.used_cp+1 ] [143]))
                    (const_int 0 [0x0])))
            (set (reg/v:SI 4 r4 [orig:134 used_math ] [134])
                (ior:SI (reg:SI 4 r4 [orig:141 <variable>.used_cp+2 ] [141])
                    (reg:SI 2 r2 [orig:143 <variable>.used_cp+1 ] [143])))
        ]) 91 {*iorsi3_compare0} (expr_list:REG_DEAD (reg:SI 2 r2 [orig:143 <variable>.used_cp+1 ] [143])
        (nil)))

(jump_insn:TI 17 16 18 2 arch/arm/kernel/process.c:516 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 28)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 6102 [0x17d6])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 1 [r1] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 3 [r3] 4 [r4] 13 [sp] 14 [lr]


;; Succ edge  3 [39.0%]  (fallthru)
;; Succ edge  4 [61.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 3 [r3] 4 [r4] 13 [sp]
;; lr  use 	 1 [r1] 3 [r3] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 1 [r1] 3 [r3] 4 [r4] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	 14 [lr]

;; Pred edge  2 [39.0%]  (fallthru)
(note 18 17 19 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 19 18 23 3 NOTE_INSN_DELETED)

(insn:TI 23 19 25 3 arch/arm/kernel/process.c:517 (set (reg:SI 0 r0)
        (reg/v/f:SI 1 r1 [orig:138 fp ] [138])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 1 r1 [orig:138 fp ] [138])
        (nil)))

(insn 25 23 24 3 arch/arm/kernel/process.c:517 (set (reg:SI 2 r2)
        (const_int 116 [0x74])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 116 [0x74])
        (nil)))

(insn:TI 24 25 26 3 arch/arm/kernel/process.c:517 (set (reg:SI 1 r1)
        (plus:SI (reg/v/f:SI 3 r3 [orig:135 thread ] [135])
            (const_int 288 [0x120]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/v/f:SI 3 r3 [orig:135 thread ] [135])
        (nil)))

(call_insn:TI 26 24 28 3 arch/arm/kernel/process.c:517 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41] <function_decl 0x11573080 memcpy>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))
;; End of basic block 3 -> ( 4)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 24 [cc]
;; live  in  	 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	 24 [cc]

;; Pred edge  2 [61.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 28 26 29 4 56 "" [1 uses])

(note 29 28 30 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 30 29 31 4 NOTE_INSN_DELETED)

(note 31 30 36 4 NOTE_INSN_DELETED)

(insn:TI 36 31 42 4 arch/arm/kernel/process.c:520 (parallel [
            (set (reg/i:SI 0 r0)
                (ne:SI (reg/v:SI 4 r4 [orig:134 used_math ] [134])
                    (const_int 0 [0x0])))
            (clobber (reg:CC 24 cc))
        ]) 278 {*compare_scc} (expr_list:REG_UNUSED (reg:CC 24 cc)
        (nil)))

(insn 42 36 53 4 arch/arm/kernel/process.c:520 (use (reg/i:SI 0 r0)) -1 (nil))

(note 53 42 54 4 NOTE_INSN_EPILOGUE_BEG)

(jump_insn 54 53 55 4 arch/arm/kernel/process.c:520 (return) 260 {return} (nil))
;; End of basic block 4 -> ( 1)
;; lr  out 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%] 

(barrier 55 54 48)

(note 48 55 49 NOTE_INSN_DELETED)

(note 49 48 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function copy_thread (copy_thread)[0:1360]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 2 from 65 to 68 -- after reload
;;   ======================================================

;;	  0-->    65 {[--sp]=unspec[r4] 2;use r5;use r6:cortex_a8_load_store_2
;;	  1-->    10 r4=[r3+0x4]                       :cortex_a8_load_store_1
;;	  2-->     6 r6=[sp+0x20]                      :cortex_a8_load_store_1
;;	  2-->    19 r2=0x48                           :cortex_a8_default
;;	  3-->    12 r8=r4+0x1f80                      :cortex_a8_default
;;	  3-->     2 r9=r0                             :cortex_a8_default
;;	  4-->    13 r5=r8+0x30                        :cortex_a8_default
;;	  4-->     3 sl=r1                             :cortex_a8_default
;;	  5-->    17 r0=r5                             :cortex_a8_default
;;	  5-->    18 r1=r6                             :cortex_a8_default
;;	  6-->     5 r7=r3                             :cortex_a8_default
;;	  6-->    20 r0=call [`memcpy']                :cortex_a8_issue_branch
;;	  7-->    26 r0=r4+0x1c                        :cortex_a8_default
;;	  7-->    27 r1=0x30                           :cortex_a8_default
;;	  8-->    22 r3=0x0                            :cortex_a8_default
;;	  8-->    23 [r8+0x30]=r3                      :cortex_a8_load_store_1
;;	  9-->    24 [r5+0x34]=sl                      :cortex_a8_load_store_1
;;	 10-->    28 call [`__memzero']                :cortex_a8_issue_branch
;;	 10-->    63 r3=`*ret_from_fork'               :cortex_a8_load_store_1
;;	 11-->    32 r0=r7                             :cortex_a8_default
;;	 11-->    29 [r4+0x3c]=r5                      :cortex_a8_load_store_1
;;	 13-->    31 [r4+0x40]=r3                      :cortex_a8_load_store_1
;;	 14-->    33 call [`clear_ptrace_hw_breakpoint':cortex_a8_issue_branch
;;	 14-->    35 cc=cmp(zxt(r9,0x1,0x13),0x0)      :cortex_a8_default
;;	 15-->    46 r2=r4                             :cortex_a8_default
;;	 15-->    45 r1=0x3                            :cortex_a8_default
;;	 16-->    38 (cc) r3=[r6+0xc]                  :cortex_a8_load_store_1
;;	 17-->    44 r0=const(`*.LANCHOR0'+0x4)        :cortex_a8_load_store_1
;;	 46-->    39 (cc) [r4+0x60]=r3                 :cortex_a8_load_store_1
;;	 47-->    47 r0=call [`atomic_notifier_call_cha:cortex_a8_issue_branch
;;	 47-->    52 r0=0x0                            :cortex_a8_default
;;	 48-->    58 use r0                            :nothing
;;	 48-->    68 return                            :cortex_a8_load_store_1
;;	Ready list (final):  
;;   total time = 48
;;   new head = 65
;;   new tail = 68





copy_thread

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 7[r7] 8[r8] 9[r9] 10[sl] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={10d,7u} r1={8d,4u} r2={7d,2u} r3={8d,6u} r4={2d,8u,2d} r5={2d,5u} r6={2d,4u} r7={2d,3u} r8={2d,4u} r9={2d,3u} r10={2d,3u} r12={4d} r13={2d,8u,1d} r14={5d,2u} r15={4d} r16={4d} r17={4d} r18={4d} r19={4d} r20={4d} r21={4d} r22={4d} r23={4d} r24={5d,2u} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r81={4d} r82={4d} r83={4d} r84={4d} r85={4d} r86={4d} r87={4d} r88={4d} r89={4d} r90={4d} r91={4d} r92={4d} r93={4d} r94={4d} r95={4d} r96={4d} r97={4d} r98={4d} r99={4d} r100={4d} r101={4d} r102={4d} r103={4d} r104={4d} r105={4d} r106={4d} r107={4d} r108={4d} r109={4d} r110={4d} r111={4d} r112={4d} r113={4d} r114={4d} r115={4d} r116={4d} r117={4d} r118={4d} r119={4d} r120={4d} r121={4d} r122={4d} r123={4d} r124={4d} r125={4d} r126={4d} r127={4d} 
;;    total ref usage 567{503d,61u,3e} in 33{29 regular + 4 call} insns.
(note 1 0 8 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 8 1 7 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 7 8 25 2 NOTE_INSN_FUNCTION_BEG)

(note 25 7 34 2 NOTE_INSN_DELETED)

(note 34 25 65 2 NOTE_INSN_DELETED)

(insn/f:TI 65 34 66 2 arch/arm/kernel/process.c:477 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 4 r4)
                    ] 2))
            (use (reg:SI 5 r5))
            (use (reg:SI 6 r6))
            (use (reg:SI 7 r7))
            (use (reg:SI 8 r8))
            (use (reg:SI 9 r9))
            (use (reg:SI 10 sl))
            (use (reg:SI 14 lr))
        ]) 327 {*push_multi} (expr_list:REG_DEAD (reg:SI 14 lr)
        (expr_list:REG_DEAD (reg:SI 10 sl)
            (expr_list:REG_DEAD (reg:SI 9 r9)
                (expr_list:REG_DEAD (reg:SI 8 r8)
                    (expr_list:REG_DEAD (reg:SI 7 r7)
                        (expr_list:REG_DEAD (reg:SI 6 r6)
                            (expr_list:REG_DEAD (reg:SI 5 r5)
                                (expr_list:REG_DEAD (reg:SI 4 r4)
                                    (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                                                (set/f (reg/f:SI 13 sp)
                                                    (plus:SI (reg/f:SI 13 sp)
                                                        (const_int -32 [0xffffffffffffffe0])))
                                                (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                                                    (reg:SI 4 r4))
                                                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                            (const_int 4 [0x4])) [0 S4 A32])
                                                    (reg:SI 5 r5))
                                                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                            (const_int 8 [0x8])) [0 S4 A32])
                                                    (reg:SI 6 r6))
                                                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                            (const_int 12 [0xc])) [0 S4 A32])
                                                    (reg:SI 7 r7))
                                                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                            (const_int 16 [0x10])) [0 S4 A32])
                                                    (reg:SI 8 r8))
                                                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                            (const_int 20 [0x14])) [0 S4 A32])
                                                    (reg:SI 9 r9))
                                                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                            (const_int 24 [0x18])) [0 S4 A32])
                                                    (reg:SI 10 sl))
                                                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                            (const_int 28 [0x1c])) [0 S4 A32])
                                                    (reg:SI 14 lr))
                                            ])
                                        (nil)))))))))))

(note 66 65 10 2 NOTE_INSN_PROLOGUE_END)

(insn:TI 10 66 6 2 arch/arm/kernel/process.c:478 (set (reg/v/f:SI 4 r4 [orig:134 thread ] [134])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 3 r3 [orig:140 p ] [140])
                (const_int 4 [0x4])) [0 <variable>.stack+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 3 r3 [orig:140 p ] [140])
        (nil)))

(insn:TI 6 10 19 2 arch/arm/kernel/process.c:477 (set (reg/v/f:SI 6 r6 [orig:141 regs ] [141])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 32 [0x20])) [0 regs+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/f/c/i:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 32 [0x20])) [0 regs+0 S4 A32])
        (nil)))

(insn 19 6 12 2 arch/arm/kernel/process.c:481 (set (reg:SI 2 r2)
        (const_int 72 [0x48])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 72 [0x48])
        (nil)))

(insn:TI 12 19 2 2 arch/arm/kernel/process.c:479 (set (reg/f:SI 8 r8 [142])
        (plus:SI (reg/v/f:SI 4 r4 [orig:134 thread ] [134])
            (const_int 8064 [0x1f80]))) 4 {*arm_addsi3} (nil))

(insn 2 12 13 2 arch/arm/kernel/process.c:477 (set (reg/v:SI 9 r9 [orig:137 clone_flags ] [137])
        (reg:SI 0 r0 [ clone_flags ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ clone_flags ])
        (nil)))

(insn:TI 13 2 3 2 arch/arm/kernel/process.c:479 (set (reg/v/f:SI 5 r5 [orig:133 childregs ] [133])
        (plus:SI (reg/f:SI 8 r8 [142])
            (const_int 48 [0x30]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (plus:SI (reg/v/f:SI 4 r4 [orig:134 thread ] [134])
            (const_int 8112 [0x1fb0]))
        (nil)))

(insn 3 13 17 2 arch/arm/kernel/process.c:477 (set (reg/v:SI 10 sl [orig:138 stack_start ] [138])
        (reg:SI 1 r1 [ stack_start ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ stack_start ])
        (nil)))

(insn:TI 17 3 18 2 arch/arm/kernel/process.c:481 (set (reg:SI 0 r0)
        (reg/v/f:SI 5 r5 [orig:133 childregs ] [133])) 167 {*arm_movsi_insn} (nil))

(insn 18 17 5 2 arch/arm/kernel/process.c:481 (set (reg:SI 1 r1)
        (reg/v/f:SI 6 r6 [orig:141 regs ] [141])) 167 {*arm_movsi_insn} (nil))

(insn:TI 5 18 20 2 arch/arm/kernel/process.c:477 (set (reg/v/f:SI 7 r7 [orig:140 p ] [140])
        (reg:SI 3 r3 [ p ])) 167 {*arm_movsi_insn} (nil))

(call_insn 20 5 26 2 arch/arm/kernel/process.c:481 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41] <function_decl 0x11573080 memcpy>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn:TI 26 20 27 2 arch/arm/kernel/process.c:485 discrim 1 (set (reg:SI 0 r0)
        (plus:SI (reg/v/f:SI 4 r4 [orig:134 thread ] [134])
            (const_int 28 [0x1c]))) 4 {*arm_addsi3} (nil))

(insn 27 26 22 2 arch/arm/kernel/process.c:485 discrim 1 (set (reg:SI 1 r1)
        (const_int 48 [0x30])) 167 {*arm_movsi_insn} (nil))

(insn:TI 22 27 23 2 arch/arm/kernel/process.c:482 (set (reg:SI 3 r3 [147])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 0 [0x0])
        (nil)))

(insn 23 22 24 2 arch/arm/kernel/process.c:482 (set (mem/s/j:SI (plus:SI (reg/f:SI 8 r8 [142])
                (const_int 48 [0x30])) [0 <variable>.uregs+0 S4 A32])
        (reg:SI 3 r3 [147])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [147])
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn:TI 24 23 28 2 arch/arm/kernel/process.c:483 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:133 childregs ] [133])
                (const_int 52 [0x34])) [0 <variable>.uregs+52 S4 A32])
        (reg/v:SI 10 sl [orig:138 stack_start ] [138])) 167 {*arm_movsi_insn} (nil))

(call_insn:TI 28 24 63 2 arch/arm/kernel/process.c:485 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("__memzero") [flags 0x41] <function_decl 0x10bb1200 __memzero>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 63 28 32 2 arch/arm/kernel/process.c:487 (set (reg/f:SI 3 r3 [149])
        (symbol_ref:SI ("*ret_from_fork") [flags 0x41] <function_decl 0x1150cd00 ret_from_fork>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*ret_from_fork") [flags 0x41] <function_decl 0x1150cd00 ret_from_fork>)
        (nil)))

(insn:TI 32 63 29 2 arch/arm/kernel/process.c:489 (set (reg:SI 0 r0)
        (reg/v/f:SI 7 r7 [orig:140 p ] [140])) 167 {*arm_movsi_insn} (nil))

(insn 29 32 31 2 arch/arm/kernel/process.c:486 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:134 thread ] [134])
                (const_int 60 [0x3c])) [0 <variable>.cpu_context.sp+0 S4 A32])
        (reg/v/f:SI 5 r5 [orig:133 childregs ] [133])) 167 {*arm_movsi_insn} (nil))

(insn:TI 31 29 33 2 arch/arm/kernel/process.c:487 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:134 thread ] [134])
                (const_int 64 [0x40])) [0 <variable>.cpu_context.pc+0 S4 A64])
        (reg/f:SI 3 r3 [149])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 3 r3 [149])
        (expr_list:REG_EQUAL (symbol_ref:SI ("*ret_from_fork") [flags 0x41] <function_decl 0x1150cd00 ret_from_fork>)
            (nil))))

(call_insn:TI 33 31 35 2 arch/arm/kernel/process.c:489 (parallel [
            (call (mem:SI (symbol_ref:SI ("clear_ptrace_hw_breakpoint") [flags 0x41] <function_decl 0x10ab8580 clear_ptrace_hw_breakpoint>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 35 33 46 2 arch/arm/kernel/process.c:491 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 9 r9 [orig:137 clone_flags ] [137])
                (const_int 1 [0x1])
                (const_int 19 [0x13]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(insn:TI 46 35 45 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_notify.h:35 (set (reg:SI 2 r2)
        (reg/v/f:SI 4 r4 [orig:134 thread ] [134])) 167 {*arm_movsi_insn} (nil))

(insn 45 46 38 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_notify.h:35 (set (reg:SI 1 r1)
        (const_int 3 [0x3])) 167 {*arm_movsi_insn} (nil))

(insn:TI 38 45 44 2 arch/arm/kernel/process.c:492 (cond_exec (ne (reg:CC_NOOV 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 3 r3 [orig:151 <variable>.uregs+12 ] [151])
            (mem/s/j:SI (plus:SI (reg/v/f:SI 6 r6 [orig:141 regs ] [141])
                    (const_int 12 [0xc])) [0 <variable>.uregs+12 S4 A32]))) 2345 {neon_vornv2di+78} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:134 thread ] [134])
                (const_int 96 [0x60])) [0 <variable>.tp_value+0 S4 A64])
        (nil)))

(insn:TI 44 38 39 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_notify.h:35 (set (reg:SI 0 r0)
        (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 4 [0x4])))) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 4 [0x4])))
        (nil)))

(insn:TI 39 44 47 2 arch/arm/kernel/process.c:492 (cond_exec (ne (reg:CC_NOOV 24 cc)
            (const_int 0 [0x0]))
        (set (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:134 thread ] [134])
                    (const_int 96 [0x60])) [0 <variable>.tp_value+0 S4 A64])
            (reg:SI 3 r3 [orig:151 <variable>.uregs+12 ] [151]))) 2345 {neon_vornv2di+78} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_DEAD (reg:SI 3 r3 [orig:151 <variable>.uregs+12 ] [151])
            (nil))))

(call_insn:TI 47 39 52 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_notify.h:35 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("atomic_notifier_call_chain") [flags 0x41] <function_decl 0x10c43c80 atomic_notifier_call_chain>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 52 47 58 2 arch/arm/kernel/process.c:497 (set (reg/i:SI 0 r0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 58 52 67 2 arch/arm/kernel/process.c:497 (use (reg/i:SI 0 r0)) -1 (nil))

(note 67 58 68 2 NOTE_INSN_EPILOGUE_BEG)

(jump_insn:TI 68 67 69 2 arch/arm/kernel/process.c:497 (return) 260 {return} (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  EXIT [100.0%] 

(barrier 69 68 62)

(note 62 69 64 NOTE_INSN_DELETED)

(note 64 62 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function exit_thread (exit_thread)[0:1357]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 2 from 25 to 13 -- after reload
;;   ======================================================

;;	  0-->    25 r3=sp                             :cortex_a8_default
;;	  0-->    10 r0=const(`*.LANCHOR0'+0x4)        :cortex_a8_load_store_1
;;	  1-->    22 r2=r3&0xffffffffffffe03f          :cortex_a8_default
;;	  1-->    11 r1=0x1                            :cortex_a8_default
;;	  2-->    23 r2=r2&0xffffffffffffffc0          :cortex_a8_default
;;	  2-->    28 {unspec{lr;};unspec/v{return;};}  :nothing
;;	  3-->    13 r0=call [`atomic_notifier_call_cha:cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 3
;;   new head = 25
;;   new tail = 13





exit_thread

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr]
;;  ref usage 	r0={3d,1u} r1={3d,1u} r2={4d,2u} r3={3d,1u} r12={1d} r13={1d,4u} r14={1d,2u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 138{127d,11u,0e} in 7{6 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 26 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 26 3 2 2 NOTE_INSN_PROLOGUE_END)

(note 2 26 6 2 NOTE_INSN_FUNCTION_BEG)

(note 6 2 7 2 NOTE_INSN_DELETED)

(note 7 6 8 2 NOTE_INSN_DELETED)

(note 8 7 9 2 NOTE_INSN_DELETED)

(note 9 8 25 2 NOTE_INSN_DELETED)

(insn:TI 25 9 10 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_notify.h:35 (set (reg:SI 3 r3)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn 10 25 22 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_notify.h:35 (set (reg:SI 0 r0)
        (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 4 [0x4])))) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 4 [0x4])))
        (nil)))

(insn:TI 22 10 11 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_notify.h:35 (set (reg:SI 2 r2)
        (and:SI (reg:SI 3 r3)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 3 r3)
        (nil)))

(insn 11 22 23 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_notify.h:35 (set (reg:SI 1 r1)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn:TI 23 11 27 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_notify.h:35 (set (reg:SI 2 r2)
        (and:SI (reg:SI 2 r2)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(note 27 23 28 2 NOTE_INSN_EPILOGUE_BEG)

(insn 28 27 13 2 arch/arm/kernel/process.c:452 (parallel [
            (unspec:SI [
                    (reg:SI 14 lr)
                ] 6)
            (unspec_volatile [
                    (return)
                ] 1)
        ]) 322 {sibcall_epilogue} (nil))

(call_insn/j:TI 13 28 14 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_notify.h:35 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("atomic_notifier_call_chain") [flags 0x41] <function_decl 0x10c43c80 atomic_notifier_call_chain>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 14 13 24)

(note 24 14 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function flush_thread (flush_thread)[0:1358]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 2 from 44 to 31 -- after reload
;;   ======================================================

;;	  0-->    44 {[--sp]=unspec[r4] 2;use r5;use r6:cortex_a8_load_store_2
;;	  1-->    43 r3=sp                             :cortex_a8_default
;;	  2-->    40 r4=r3&0xffffffffffffe03f          :cortex_a8_default
;;	  3-->    41 r4=r4&0xffffffffffffffc0          :cortex_a8_default
;;	  5-->    11 r5=[r4+0xc]                       :cortex_a8_load_store_1
;;	  7-->    12 r0=r5                             :cortex_a8_default
;;	  8-->    13 call [`flush_ptrace_hw_breakpoint':cortex_a8_issue_branch
;;	  8-->    15 r0=r4+0x50                        :cortex_a8_default
;;	  9-->    16 r1=0x10                           :cortex_a8_default
;;	 10-->    17 call [`__memzero']                :cortex_a8_issue_branch
;;	 10-->    19 r0=r5+0x31c                       :cortex_a8_default
;;	 11-->    20 r1=0x80                           :cortex_a8_default
;;	 12-->    21 call [`__memzero']                :cortex_a8_issue_branch
;;	 12-->    23 r0=r4+0x120                       :cortex_a8_default
;;	 13-->    24 r1=0x8c                           :cortex_a8_default
;;	 14-->    25 call [`__memzero']                :cortex_a8_issue_branch
;;	 14-->    30 r2=r4                             :cortex_a8_default
;;	 15-->    28 r0=const(`*.LANCHOR0'+0x4)        :cortex_a8_load_store_1
;;	 15-->    29 r1=0x0                            :cortex_a8_default
;;	 46-->    47 {unspec{lr;};unspec/v{return;};}  :nothing
;;	 47-->    31 r0=call [`atomic_notifier_call_cha:cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 47
;;   new head = 44
;;   new tail = 31





flush_thread

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;;  exit block uses 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 13[sp] 14[lr]
;;  ref usage 	r0={11d,5u} r1={10d,4u} r2={7d,1u} r3={7d,1u} r4={3d,7u} r5={2d,4u} r6={1d,2u} r12={5d} r13={2d,9u} r14={5d,3u} r15={5d} r16={5d} r17={5d} r18={5d} r19={5d} r20={5d} r21={5d} r22={5d} r23={5d} r24={5d} r27={5d} r28={5d} r29={5d} r30={5d} r31={5d} r32={5d} r33={5d} r34={5d} r35={5d} r36={5d} r37={5d} r38={5d} r39={5d} r40={5d} r41={5d} r42={5d} r43={5d} r44={5d} r45={5d} r46={5d} r47={5d} r48={5d} r49={5d} r50={5d} r51={5d} r52={5d} r53={5d} r54={5d} r55={5d} r56={5d} r57={5d} r58={5d} r59={5d} r60={5d} r61={5d} r62={5d} r63={5d} r64={5d} r65={5d} r66={5d} r67={5d} r68={5d} r69={5d} r70={5d} r71={5d} r72={5d} r73={5d} r74={5d} r75={5d} r76={5d} r77={5d} r78={5d} r79={5d} r80={5d} r81={5d} r82={5d} r83={5d} r84={5d} r85={5d} r86={5d} r87={5d} r88={5d} r89={5d} r90={5d} r91={5d} r92={5d} r93={5d} r94={5d} r95={5d} r96={5d} r97={5d} r98={5d} r99={5d} r100={5d} r101={5d} r102={5d} r103={5d} r104={5d} r105={5d} r106={5d} r107={5d} r108={5d} r109={5d} r110={5d} r111={5d} r112={5d} r113={5d} r114={5d} r115={5d} r116={5d} r117={5d} r118={5d} r119={5d} r120={5d} r121={5d} r122={5d} r123={5d} r124={5d} r125={5d} r126={5d} r127={5d} 
;;    total ref usage 644{608d,36u,0e} in 21{16 regular + 5 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 12 [ip] 13 [sp] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 6 2 NOTE_INSN_FUNCTION_BEG)

(note 6 2 14 2 NOTE_INSN_DELETED)

(note 14 6 18 2 NOTE_INSN_DELETED)

(note 18 14 22 2 NOTE_INSN_DELETED)

(note 22 18 26 2 NOTE_INSN_DELETED)

(note 26 22 27 2 NOTE_INSN_DELETED)

(note 27 26 44 2 NOTE_INSN_DELETED)

(insn/f:TI 44 27 45 2 arch/arm/kernel/process.c:455 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 4 r4)
                    ] 2))
            (use (reg:SI 5 r5))
            (use (reg:SI 6 r6))
            (use (reg:SI 14 lr))
        ]) 327 {*push_multi} (expr_list:REG_DEAD (reg:SI 14 lr)
        (expr_list:REG_DEAD (reg:SI 5 r5)
            (expr_list:REG_DEAD (reg:SI 4 r4)
                (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                            (set/f (reg/f:SI 13 sp)
                                (plus:SI (reg/f:SI 13 sp)
                                    (const_int -16 [0xfffffffffffffff0])))
                            (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                                (reg:SI 4 r4))
                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                        (const_int 4 [0x4])) [0 S4 A32])
                                (reg:SI 5 r5))
                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                        (const_int 8 [0x8])) [0 S4 A32])
                                (reg:SI 6 r6))
                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                        (const_int 12 [0xc])) [0 S4 A32])
                                (reg:SI 14 lr))
                        ])
                    (nil))))))

(note 45 44 43 2 NOTE_INSN_PROLOGUE_END)

(insn:TI 43 45 40 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 3 r3)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn:TI 40 43 41 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/v/f:SI 4 r4 [orig:136 thread ] [136])
        (and:SI (reg:SI 3 r3)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 3 r3)
        (nil)))

(insn:TI 41 40 11 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/v/f:SI 4 r4 [orig:136 thread ] [136])
        (and:SI (reg/v/f:SI 4 r4 [orig:136 thread ] [136])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn:TI 11 41 12 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/current.h:10 (set (reg/v/f:SI 5 r5 [orig:135 tsk ] [135])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:136 thread ] [136])
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn:TI 12 11 13 2 arch/arm/kernel/process.c:459 (set (reg:SI 0 r0)
        (reg/v/f:SI 5 r5 [orig:135 tsk ] [135])) 167 {*arm_movsi_insn} (nil))

(call_insn:TI 13 12 15 2 arch/arm/kernel/process.c:459 (parallel [
            (call (mem:SI (symbol_ref:SI ("flush_ptrace_hw_breakpoint") [flags 0x41] <function_decl 0x114b5e00 flush_ptrace_hw_breakpoint>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 15 13 16 2 arch/arm/kernel/process.c:461 discrim 1 (set (reg:SI 0 r0)
        (plus:SI (reg/v/f:SI 4 r4 [orig:136 thread ] [136])
            (const_int 80 [0x50]))) 4 {*arm_addsi3} (nil))

(insn:TI 16 15 17 2 arch/arm/kernel/process.c:461 discrim 1 (set (reg:SI 1 r1)
        (const_int 16 [0x10])) 167 {*arm_movsi_insn} (nil))

(call_insn:TI 17 16 19 2 arch/arm/kernel/process.c:461 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("__memzero") [flags 0x41] <function_decl 0x10bb1200 __memzero>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 19 17 20 2 arch/arm/kernel/process.c:462 discrim 1 (set (reg:SI 0 r0)
        (plus:SI (reg/v/f:SI 5 r5 [orig:135 tsk ] [135])
            (const_int 796 [0x31c]))) 4 {*arm_addsi3} (nil))

(insn:TI 20 19 21 2 arch/arm/kernel/process.c:462 discrim 1 (set (reg:SI 1 r1)
        (const_int 128 [0x80])) 167 {*arm_movsi_insn} (nil))

(call_insn:TI 21 20 23 2 arch/arm/kernel/process.c:462 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("__memzero") [flags 0x41] <function_decl 0x10bb1200 __memzero>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 23 21 24 2 arch/arm/kernel/process.c:463 discrim 1 (set (reg:SI 0 r0)
        (plus:SI (reg/v/f:SI 4 r4 [orig:136 thread ] [136])
            (const_int 288 [0x120]))) 4 {*arm_addsi3} (nil))

(insn:TI 24 23 25 2 arch/arm/kernel/process.c:463 discrim 1 (set (reg:SI 1 r1)
        (const_int 140 [0x8c])) 167 {*arm_movsi_insn} (nil))

(call_insn:TI 25 24 30 2 arch/arm/kernel/process.c:463 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("__memzero") [flags 0x41] <function_decl 0x10bb1200 __memzero>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 30 25 28 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_notify.h:35 (set (reg:SI 2 r2)
        (reg/v/f:SI 4 r4 [orig:136 thread ] [136])) 167 {*arm_movsi_insn} (nil))

(insn:TI 28 30 29 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_notify.h:35 (set (reg:SI 0 r0)
        (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 4 [0x4])))) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 4 [0x4])))
        (nil)))

(insn 29 28 46 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_notify.h:35 (set (reg:SI 1 r1)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(note 46 29 47 2 NOTE_INSN_EPILOGUE_BEG)

(insn:TI 47 46 31 2 arch/arm/kernel/process.c:466 (parallel [
            (unspec:SI [
                    (reg:SI 14 lr)
                ] 6)
            (unspec_volatile [
                    (return)
                ] 1)
        ]) 322 {sibcall_epilogue} (expr_list:REG_DEAD (reg:SI 14 lr)
        (nil)))

(call_insn/j:TI 31 47 32 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_notify.h:35 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("atomic_notifier_call_chain") [flags 0x41] <function_decl 0x10c43c80 atomic_notifier_call_chain>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 32 31 42)

(note 42 32 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function machine_shutdown (machine_shutdown)[0:1349]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 2 from 17 to 5 -- after reload
;;   ======================================================

;;	  0-->    17 {unspec{lr;};unspec/v{return;};}  :nothing
;;	  1-->     5 call [`smp_send_stop']            :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 1
;;   new head = 17
;;   new tail = 5





machine_shutdown

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 13[sp] 14[lr]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r3={2d} r12={1d} r13={1d,3u} r14={1d,2u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 127{122d,5u,0e} in 2{1 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 15 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 15 3 2 2 NOTE_INSN_PROLOGUE_END)

(note 2 15 16 2 NOTE_INSN_FUNCTION_BEG)

(note 16 2 17 2 NOTE_INSN_EPILOGUE_BEG)

(insn:TI 17 16 5 2 arch/arm/kernel/process.c:271 (parallel [
            (unspec:SI [
                    (reg:SI 14 lr)
                ] 6)
            (unspec_volatile [
                    (return)
                ] 1)
        ]) 322 {sibcall_epilogue} (nil))

(call_insn/j:TI 5 17 6 2 arch/arm/kernel/process.c:269 (parallel [
            (call (mem:SI (symbol_ref:SI ("smp_send_stop") [flags 0x41] <function_decl 0x10c9f800 smp_send_stop>) [0 S4 A32])
                (const_int 0 [0x0]))
            (return)
            (use (const_int 0 [0x0]))
        ]) 258 {*sibcall_insn} (nil)
    (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 6 5 14)

(note 14 6 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function machine_restart (machine_restart)[0:1352]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 2 from 25 to 28 -- after reload
;;   ======================================================

;;	  0-->    25 {[--sp]=unspec[r4] 2;use lr;}     :cortex_a8_load_store_2
;;	  1-->     2 r4=r0                             :cortex_a8_default
;;	  2-->     6 {asm_operands;clobber cc;clobber [:nothing
;;	  3-->     7 {asm_operands;clobber cc;clobber [:nothing
;;	  4-->     8 call [`machine_shutdown']         :cortex_a8_issue_branch
;;	  4-->     9 r3=`*.LANCHOR1'                   :cortex_a8_load_store_1
;;	  5-->    14 r1=r4                             :cortex_a8_default
;;	  7-->    13 r0=zxn([r3])                      :cortex_a8_load_store_1
;;	  8-->    15 call [[r3+0x4]]                   :cortex_a8_issue_branch
;;	  8-->    28 return                            :cortex_a8_load_store_1
;;	Ready list (final):  
;;   total time = 8
;;   new head = 25
;;   new tail = 28





machine_restart

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;;  exit block uses 	 4 [r4] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 3[r3] 4[r4] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={4d,2u} r1={4d,1u} r2={3d} r3={4d,2u} r4={2d,3u} r12={2d} r13={2d,5u} r14={3d,2u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={4d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} 
;;    total ref usage 263{248d,15u,0e} in 10{8 regular + 2 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 13 [sp] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 13 [sp]
;; live  kill	 14 [lr] 24 [cc]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 11 2 NOTE_INSN_FUNCTION_BEG)

(note 11 3 12 2 NOTE_INSN_DELETED)

(note 12 11 25 2 NOTE_INSN_DELETED)

(insn/f:TI 25 12 26 2 arch/arm/kernel/process.c:287 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 4 r4)
                    ] 2))
            (use (reg:SI 14 lr))
        ]) 327 {*push_multi} (expr_list:REG_DEAD (reg:SI 14 lr)
        (expr_list:REG_DEAD (reg:SI 4 r4)
            (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                        (set/f (reg/f:SI 13 sp)
                            (plus:SI (reg/f:SI 13 sp)
                                (const_int -8 [0xfffffffffffffff8])))
                        (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                            (reg:SI 4 r4))
                        (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                    (const_int 4 [0x4])) [0 S4 A32])
                            (reg:SI 14 lr))
                    ])
                (nil)))))

(note 26 25 2 2 NOTE_INSN_PROLOGUE_END)

(insn:TI 2 26 6 2 arch/arm/kernel/process.c:287 (set (reg/v/f:SI 4 r4 [orig:133 cmd ] [133])
        (reg:SI 0 r0 [ cmd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ cmd ])
        (nil)))

(insn:TI 6 2 7 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/irqflags.h:35 (parallel [
            (asm_operands/v ("	cpsid i			@ arch_local_irq_disable") ("") 0 []
                 [] 1105916)
            (clobber (reg:QI 24 cc))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(insn:TI 7 6 8 2 arch/arm/kernel/process.c:294 (parallel [
            (asm_operands/v ("cpsid f	@ __clf") ("") 0 []
                 [] 8827068)
            (clobber (reg:QI 24 cc))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(call_insn:TI 8 7 9 2 arch/arm/kernel/process.c:296 (parallel [
            (call (mem:SI (symbol_ref:SI ("machine_shutdown") [flags 0x3] <function_decl 0x11153e00 machine_shutdown>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))

(insn 9 8 14 2 arch/arm/kernel/process.c:297 (set (reg/f:SI 3 r3 [134])
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn:TI 14 9 13 2 arch/arm/kernel/process.c:297 (set (reg:SI 1 r1)
        (reg/v/f:SI 4 r4 [orig:133 cmd ] [133])) 167 {*arm_movsi_insn} (nil))

(insn:TI 13 14 15 2 arch/arm/kernel/process.c:297 (set (reg:SI 0 r0)
        (zero_extend:SI (mem/c/i:QI (reg/f:SI 3 r3 [134]) [0 reboot_mode+0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(call_insn:TI 15 13 27 2 arch/arm/kernel/process.c:297 (parallel [
            (call (mem:SI (mem/f/c/i:SI (plus:SI (reg/f:SI 3 r3 [134])
                            (const_int 4 [0x4])) [0 arm_pm_restart+0 S4 A32]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 246 {*call_mem} (expr_list:REG_DEAD (reg/f:SI 3 r3 [134])
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_DEAD (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(note 27 15 28 2 NOTE_INSN_EPILOGUE_BEG)

(jump_insn 28 27 29 2 arch/arm/kernel/process.c:298 (return) 260 {return} (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  EXIT [100.0%] 

(barrier 29 28 23)

(note 23 29 24 NOTE_INSN_DELETED)

(note 24 23 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function machine_power_off (machine_power_off)[0:1351]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 2 from 23 to 9 -- after reload
;;   ======================================================

;;	  0-->    23 {[--sp]=unspec[r4] 2;use lr;}     :cortex_a8_load_store_2
;;	  1-->     5 call [`machine_shutdown']         :cortex_a8_issue_branch
;;	  1-->     6 r3=`*.LANCHOR0'                   :cortex_a8_load_store_1
;;	  4-->     7 r3=[r3+0x10]                      :cortex_a8_load_store_1
;;	  6-->     8 cc=cmp(r3,0x0)                    :cortex_a8_default
;;	  8-->     9 pc={(cc==0x0)?return:pc}          :cortex_a8_load_store_1
;;	Ready list (final):  
;;   total time = 8
;;   new head = 23
;;   new tail = 9

;;   ======================================================
;;   -- basic block 3 from 11 to 26 -- after reload
;;   ======================================================

;;	  0-->    11 call [r3]                         :cortex_a8_issue_branch
;;	  0-->    26 return                            :cortex_a8_load_store_1
;;	Ready list (final):  
;;   total time = 0
;;   new head = 11
;;   new tail = 26





machine_power_off

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;;  exit block uses 	 4 [r4] 13 [sp] 14 [lr]
;;  regs ever live 	 3[r3] 4[r4] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={3d} r1={3d} r2={3d} r3={5d,3u} r4={1d,2u} r12={2d} r13={2d,6u} r14={3d,2u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={3d,1u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} 
;;    total ref usage 259{245d,14u,0e} in 8{6 regular + 2 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 13 [sp] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 23 2 NOTE_INSN_FUNCTION_BEG)

(insn/f:TI 23 2 24 2 arch/arm/kernel/process.c:280 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 4 r4)
                    ] 2))
            (use (reg:SI 14 lr))
        ]) 327 {*push_multi} (expr_list:REG_DEAD (reg:SI 14 lr)
        (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                    (set/f (reg/f:SI 13 sp)
                        (plus:SI (reg/f:SI 13 sp)
                            (const_int -8 [0xfffffffffffffff8])))
                    (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                        (reg:SI 4 r4))
                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                (const_int 4 [0x4])) [0 S4 A32])
                        (reg:SI 14 lr))
                ])
            (nil))))

(note 24 23 5 2 NOTE_INSN_PROLOGUE_END)

(call_insn:TI 5 24 6 2 arch/arm/kernel/process.c:281 (parallel [
            (call (mem:SI (symbol_ref:SI ("machine_shutdown") [flags 0x3] <function_decl 0x11153e00 machine_shutdown>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))

(insn 6 5 7 2 arch/arm/kernel/process.c:282 (set (reg/f:SI 3 r3 [134])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn:TI 7 6 8 2 arch/arm/kernel/process.c:282 (set (reg/f:SI 3 r3 [orig:133 pm_power_off.335 ] [133])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 3 r3 [134])
                (const_int 16 [0x10])) [0 pm_power_off+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 16 [0x10]))) [0 pm_power_off+0 S4 A32])
        (nil)))

(insn:TI 8 7 9 2 arch/arm/kernel/process.c:282 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 3 r3 [orig:133 pm_power_off.335 ] [133])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn:TI 9 8 10 2 arch/arm/kernel/process.c:282 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (return)
            (pc))) 261 {*cond_return} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2165 [0x875])
            (nil))))
;; End of basic block 2 -> ( 3 1)
;; lr  out 	 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 4 [r4] 13 [sp]


;; Succ edge  3 [78.3%]  (fallthru)
;; Succ edge  EXIT [21.6%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 13 [sp]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 3 [r3] 4 [r4] 13 [sp]
;; live  gen 	
;; live  kill	 14 [lr]

;; Pred edge  2 [78.3%]  (fallthru)
(note 10 9 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(call_insn:TI 11 10 26 3 arch/arm/kernel/process.c:283 (parallel [
            (call (mem:SI (reg/f:SI 3 r3 [orig:133 pm_power_off.335 ] [133]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 244 {*call_reg_armv5} (expr_list:REG_DEAD (reg/f:SI 3 r3 [orig:133 pm_power_off.335 ] [133])
        (nil))
    (nil))

(jump_insn 26 11 25 3 (return) 260 {return} (nil))
;; End of basic block 3 -> ( 1)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  EXIT [100.0%] 

(barrier 25 26 21)

(note 21 25 22 NOTE_INSN_DELETED)

(note 22 21 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function machine_halt (machine_halt)[0:1350]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 4 n_edges 3 count 4 (    1)


machine_halt

Dataflow summary:
def_info->table_size = 0, use_info->table_size = 0
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;;  exit block uses 	 4 [r4] 13 [sp] 14 [lr]
;;  regs ever live 	 4[r4] 13[sp] 14[lr]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r3={2d} r4={1d,2u} r12={1d} r13={2d,5u} r14={2d,2u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 134{125d,9u,0e} in 3{2 regular + 1 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(13){ }d-1(14){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  kill	
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp] 14 [lr]

( 0 )->[2]->( 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 13 [sp]
;; live  kill	 14 [lr]
;; lr  out 	 13 [sp]
;; live  out 	 13 [sp]

( 2 3 )->[3]->( 3 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp]
;; live  gen 	
;; live  kill	
;; lr  out 	 13 [sp]
;; live  out 	 13 [sp]

( )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(4){ }u-1(13){ }u-1(14){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp] 14 [lr]
;; lr  def 	
;; live  in  	
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 5 to worklist
  Adding insn 21 to worklist
  Adding insn 23 to worklist
Finished finding needed instructions:
processing block 3 lr out =  13 [sp]
processing block 2 lr out =  13 [sp]
df_worklist_dataflow_doublequeue:n_basic_blocks 4 n_edges 3 count 5 (  1.2)
;;   ======================================================
;;   -- basic block 2 from 21 to 5 -- after reload
;;   ======================================================

;;	  0-->    21 {[--sp]=unspec[r4] 2;use lr;}     :cortex_a8_load_store_2
;;	  1-->     5 call [`machine_shutdown']         :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 1
;;   new head = 21
;;   new tail = 5

;;   ======================================================
;;   -- basic block 3 from 23 to 23 -- after reload
;;   ======================================================

;;	  0-->    23 pc=L7                             :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 23
;;   new tail = 23





machine_halt

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;;  exit block uses 	 4 [r4] 13 [sp] 14 [lr]
;;  regs ever live 	 4[r4] 13[sp] 14[lr]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r3={2d} r4={1d,2u} r12={1d} r13={2d,5u} r14={2d,2u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 134{125d,9u,0e} in 3{2 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 13 [sp]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 21 2 NOTE_INSN_FUNCTION_BEG)

(insn/f:TI 21 2 22 2 arch/arm/kernel/process.c:274 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 4 r4)
                    ] 2))
            (use (reg:SI 14 lr))
        ]) 327 {*push_multi} (expr_list:REG_DEAD (reg:SI 14 lr)
        (expr_list:REG_DEAD (reg:SI 4 r4)
            (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                        (set/f (reg/f:SI 13 sp)
                            (plus:SI (reg/f:SI 13 sp)
                                (const_int -8 [0xfffffffffffffff8])))
                        (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                            (reg:SI 4 r4))
                        (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                    (const_int 4 [0x4])) [0 S4 A32])
                            (reg:SI 14 lr))
                    ])
                (nil)))))

(note 22 21 5 2 NOTE_INSN_PROLOGUE_END)

(call_insn:TI 5 22 7 2 arch/arm/kernel/process.c:275 (parallel [
            (call (mem:SI (symbol_ref:SI ("machine_shutdown") [flags 0x3] <function_decl 0x11153e00 machine_shutdown>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))
;; End of basic block 2 -> ( 3)
;; lr  out 	 13 [sp]
;; live  out 	 13 [sp]


;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp]
;; live  gen 	
;; live  kill	

;; Pred edge  2 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%] 
(code_label 7 5 6 3 83 "" [1 uses])

(note 6 7 23 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(jump_insn:TI 23 6 24 3 (set (pc)
        (label_ref 7)) 242 {*arm_jump} (nil))
;; End of basic block 3 -> ( 3)
;; lr  out 	 13 [sp]
;; live  out 	 13 [sp]


;; Succ edge  3 [100.0%] 

(barrier 24 23 20)

(note 20 24 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function cpu_idle (cpu_idle)[0:1347]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 17 n_edges 22 count 42 (  2.5)


cpu_idle

Dataflow summary:
def_info->table_size = 0, use_info->table_size = 0
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;;  exit block uses 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 7[r7] 8[r8] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={16d,6u} r1={13d,2u} r2={12d,1u} r3={25d,18u,1d} r4={3d,9u,5d} r5={2d,3u} r6={2d,3u} r7={2d,3u} r8={2d,3u} r12={10d} r13={2d,28u} r14={11d,2u} r15={10d} r16={10d} r17={10d} r18={10d} r19={10d} r20={10d} r21={10d} r22={10d} r23={10d} r24={22d,7u} r27={10d} r28={10d} r29={10d} r30={10d} r31={10d} r32={10d} r33={10d} r34={10d} r35={10d} r36={10d} r37={10d} r38={10d} r39={10d} r40={10d} r41={10d} r42={10d} r43={10d} r44={10d} r45={10d} r46={10d} r47={10d} r48={10d} r49={10d} r50={10d} r51={10d} r52={10d} r53={10d} r54={10d} r55={10d} r56={10d} r57={10d} r58={10d} r59={10d} r60={10d} r61={10d} r62={10d} r63={10d} r64={10d} r65={10d} r66={10d} r67={10d} r68={10d} r69={10d} r70={10d} r71={10d} r72={10d} r73={10d} r74={10d} r75={10d} r76={10d} r77={10d} r78={10d} r79={10d} r80={10d} r81={10d} r82={10d} r83={10d} r84={10d} r85={10d} r86={10d} r87={10d} r88={10d} r89={10d} r90={10d} r91={10d} r92={10d} r93={10d} r94={10d} r95={10d} r96={10d} r97={10d} r98={10d} r99={10d} r100={10d} r101={10d} r102={10d} r103={10d} r104={10d} r105={10d} r106={10d} r107={10d} r108={10d} r109={10d} r110={10d} r111={10d} r112={10d} r113={10d} r114={10d} r115={10d} r116={10d} r117={10d} r118={10d} r119={10d} r120={10d} r121={10d} r122={10d} r123={10d} r124={10d} r125={10d} r126={10d} r127={10d} 
;;    total ref usage 1313{1222d,85u,6e} in 65{55 regular + 10 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(7){ }d-1(8){ }d-1(13){ }d-1(14){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  kill	
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]

( 0 )->[2]->( 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  def 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  kill	 24 [cc]
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]

( 2 16 )->[3]->( 15 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]

( 15 )->[4]->( 5 6 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 4 [r4] 8 [r8] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc]
;; live  kill	
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]

( 4 )->[5]->( 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	
;; live  kill	 14 [lr]
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]

( 5 4 )->[6]->( 7 8 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 7 [r7] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	 24 [cc]
;; lr  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]

( 6 )->[7]->( 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	
;; live  kill	 14 [lr]
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]

( 7 6 )->[8]->( 9 10 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 6 [r6] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]

( 8 )->[9]->( 15 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	
;; live  kill	 24 [cc]
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]

( 8 )->[10]->( 11 12 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 0 [r0] 24 [cc]
;; live  kill	 14 [lr]
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]

( 10 )->[11]->( 12 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	
;; live  kill	 14 [lr]
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]

( 10 11 )->[12]->( 13 14 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	 24 [cc]
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]

( 12 )->[13]->( 14 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]

( 12 13 )->[14]->( 15 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	
;; live  kill	 24 [cc]
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]

( 14 3 9 )->[15]->( 4 16 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]

( 15 )->[16]->( 3 )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 0 [r0] 3 [r3]
;; live  kill	 14 [lr]
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]

( )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(4){ }u-1(5){ }u-1(6){ }u-1(7){ }u-1(8){ }u-1(13){ }u-1(14){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  def 	
;; live  in  	
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 5 to worklist
  Adding insn 150 to worklist
  Adding insn 152 to worklist
  Adding insn 22 to worklist
  Adding insn 20 to worklist
  Adding insn 41 to worklist
  Adding insn 36 to worklist
  Adding insn 43 to worklist
  Adding insn 51 to worklist
  Adding insn 47 to worklist
  Adding insn 46 to worklist
  Adding insn 53 to worklist
  Adding insn 59 to worklist
  Adding insn 57 to worklist
  Adding insn 154 to worklist
  Adding insn 62 to worklist
  Adding insn 61 to worklist
  Adding insn 70 to worklist
  Adding insn 67 to worklist
  Adding insn 74 to worklist
  Adding insn 80 to worklist
  Adding insn 77 to worklist
  Adding insn 85 to worklist
  Adding insn 88 to worklist
  Adding insn 95 to worklist
  Adding insn 91 to worklist
  Adding insn 156 to worklist
  Adding insn 108 to worklist
  Adding insn 107 to worklist
  Adding insn 104 to worklist
  Adding insn 103 to worklist
  Adding insn 100 to worklist
  Adding insn 99 to worklist
  Adding insn 97 to worklist
Finished finding needed instructions:
processing block 9 lr out =  4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
processing block 14 lr out =  4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
processing block 13 lr out =  4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
  Adding insn 125 to worklist
  Adding insn 124 to worklist
processing block 12 lr out =  4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
  Adding insn 79 to worklist
processing block 11 lr out =  4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
processing block 10 lr out =  4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
  Adding insn 69 to worklist
processing block 8 lr out =  4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
  Adding insn 58 to worklist
processing block 7 lr out =  4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
processing block 6 lr out =  3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
  Adding insn 50 to worklist
  Adding insn 49 to worklist
processing block 5 lr out =  4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
processing block 4 lr out =  4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
  Adding insn 40 to worklist
  Adding insn 38 to worklist
  Adding insn 32 to worklist
  Adding insn 149 to worklist
  Adding insn 148 to worklist
  Adding insn 37 to worklist
  Adding insn 29 to worklist
  Adding insn 34 to worklist
  Adding insn 26 to worklist
processing block 16 lr out =  4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
  Adding insn 106 to worklist
  Adding insn 105 to worklist
  Adding insn 102 to worklist
  Adding insn 101 to worklist
  Adding insn 98 to worklist
processing block 15 lr out =  4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
  Adding insn 94 to worklist
processing block 3 lr out =  4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
  Adding insn 21 to worklist
  Adding insn 19 to worklist
processing block 2 lr out =  4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
  Adding insn 72 to worklist
  Adding insn 56 to worklist
  Adding insn 145 to worklist
  Adding insn 48 to worklist
  Adding insn 144 to worklist
  Adding insn 147 to worklist
  Adding insn 27 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 17 n_edges 22 count 35 (  2.1)
;;   ======================================================
;;   -- basic block 2 from 150 to 72 -- after reload
;;   ======================================================

;;	  0-->   150 {[--sp]=unspec[r4] 2;use r5;use r6:cortex_a8_load_store_2
;;	  1-->     5 {asm_operands;clobber cc;clobber [:nothing
;;	  2-->   147 r3=sp                             :cortex_a8_default
;;	  2-->    27 r8=`cpu_online_mask'              :cortex_a8_load_store_1
;;	  3-->   144 r4=r3&0xffffffffffffe03f          :cortex_a8_default
;;	  3-->    48 r7=`outer_cache'                  :cortex_a8_load_store_1
;;	  4-->    56 r6=`*.LANCHOR0'                   :cortex_a8_load_store_1
;;	  4-->   145 r4=r4&0xffffffffffffffc0          :cortex_a8_default
;;	  5-->    72 r5=`*.LANCHOR1'                   :cortex_a8_load_store_1
;;	Ready list (final):  
;;   total time = 5
;;   new head = 150
;;   new tail = 72

;;   ======================================================
;;   -- basic block 3 from 19 to 152 -- after reload
;;   ======================================================

;;	  0-->    19 r0=0x1                            :cortex_a8_default
;;	  1-->    20 call [`idle_notifier_call_chain'] :cortex_a8_issue_branch
;;	  1-->    21 r0=0x1                            :cortex_a8_default
;;	  2-->    22 call [`tick_nohz_stop_sched_tick']:cortex_a8_issue_branch
;;	  2-->   152 pc=L137                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 2
;;   new head = 19
;;   new tail = 152

;;   ======================================================
;;   -- basic block 4 from 26 to 41 -- after reload
;;   ======================================================

;;	  0-->    26 r3=[r4+0x14]                      :cortex_a8_load_store_1
;;	  1-->    34 r1=[r8]                           :cortex_a8_load_store_1
;;	  2-->   148 cc=cmp(r3,0x0)                    :cortex_a8_default
;;	  2-->    29 r0=r3+0x1f                        :cortex_a8_default
;;	  3-->    37 r2=r3&0x1f                        :cortex_a8_default
;;	  3-->   149 (cc<0x0) r3=r0                    :cortex_a8_default
;;	  5-->    32 r3=r3>>0x5                        :cortex_a8_default
;;	  7-->    36 r3=[r3*0x4+r1]                    :cortex_a8_load_store_1
;;	 10-->    38 r3=r3 0>>r2                       :cortex_a8_default
;;	 11-->    40 cc=cmp(zxt(r3,0x1,0x0),0x0)       :cortex_a8_default
;;	 13-->    41 pc={(cc!=0x0)?L44:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 13
;;   new head = 26
;;   new tail = 41

;;   ======================================================
;;   -- basic block 5 from 43 to 43 -- after reload
;;   ======================================================

;;	  0-->    43 call [`cpu_die']                  :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 0
;;   new head = 43
;;   new tail = 43

;;   ======================================================
;;   -- basic block 6 from 46 to 51 -- after reload
;;   ======================================================

;;	  0-->    46 {asm_operands;clobber cc;clobber [:nothing
;;	  1-->    47 {asm_operands;clobber [scratch];} :nothing
;;	  2-->    49 r3=[r7+0x18]                      :cortex_a8_load_store_1
;;	  4-->    50 cc=cmp(r3,0x0)                    :cortex_a8_default
;;	  6-->    51 pc={(cc==0x0)?L54:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 6
;;   new head = 46
;;   new tail = 51

;;   ======================================================
;;   -- basic block 7 from 53 to 53 -- after reload
;;   ======================================================

;;	  0-->    53 call [r3]                         :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 0
;;   new head = 53
;;   new tail = 53

;;   ======================================================
;;   -- basic block 8 from 57 to 59 -- after reload
;;   ======================================================

;;	  0-->    57 r3=[r6]                           :cortex_a8_load_store_1
;;	  2-->    58 cc=cmp(r3,0x0)                    :cortex_a8_default
;;	  4-->    59 pc={(cc==0x0)?L65:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 57
;;   new tail = 59

;;   ======================================================
;;   -- basic block 9 from 61 to 154 -- after reload
;;   ======================================================

;;	  0-->    61 {asm_operands;clobber cc;clobber [:nothing
;;	  1-->    62 {asm_operands;clobber [scratch];} :nothing
;;	  2-->   154 pc=L137                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 2
;;   new head = 61
;;   new tail = 154

;;   ======================================================
;;   -- basic block 10 from 67 to 70 -- after reload
;;   ======================================================

;;	  0-->    67 r0=call [`cpuidle_idle_call']     :cortex_a8_issue_branch
;;	 32-->    69 cc=cmp(r0,0x0)                    :cortex_a8_default
;;	 34-->    70 pc={(cc==0x0)?L75:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 34
;;   new head = 67
;;   new tail = 70

;;   ======================================================
;;   -- basic block 11 from 74 to 74 -- after reload
;;   ======================================================

;;	  0-->    74 call [[r5+0x8]]                   :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 0
;;   new head = 74
;;   new tail = 74

;;   ======================================================
;;   -- basic block 12 from 77 to 80 -- after reload
;;   ======================================================

;;	  0-->    77 {r3=asm_operands;clobber cc;clobbe:nothing
;;	  1-->    79 cc=cmp(zxt(r3,0x1,0x7),0x0)       :cortex_a8_default
;;	  3-->    80 pc={(cc==0x0)?L86:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 3
;;   new head = 77
;;   new tail = 80

;;   ======================================================
;;   -- basic block 13 from 124 to 85 -- after reload
;;   ======================================================

;;	  0-->   124 r0=`*.LC1'                        :cortex_a8_load_store_1
;;	  0-->   125 r1=0xf4                           :cortex_a8_default
;;	  1-->    85 call [`warn_slowpath_null']       :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 1
;;   new head = 124
;;   new tail = 85

;;   ======================================================
;;   -- basic block 14 from 88 to 88 -- after reload
;;   ======================================================

;;	  0-->    88 {asm_operands;clobber cc;clobber [:nothing
;;	Ready list (final):  
;;   total time = 0
;;   new head = 88
;;   new tail = 88

;;   ======================================================
;;   -- basic block 15 from 91 to 95 -- after reload
;;   ======================================================

;;	  0-->    91 r3=[r4]                           :cortex_a8_load_store_1
;;	  2-->    94 cc=cmp(zxt(r3,0x1,0x1),0x0)       :cortex_a8_default
;;	  4-->    95 pc={(cc==0x0)?L92:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 91
;;   new tail = 95

;;   ======================================================
;;   -- basic block 16 from 97 to 156 -- after reload
;;   ======================================================

;;	  0-->    97 call [`tick_nohz_restart_sched_tic:cortex_a8_issue_branch
;;	  0-->    98 r0=0x2                            :cortex_a8_default
;;	  1-->    99 call [`idle_notifier_call_chain'] :cortex_a8_issue_branch
;;	  2-->   100 {asm_operands;clobber [scratch];} :nothing
;;	  3-->   101 r3=[r4+0x4]                       :cortex_a8_load_store_1
;;	  5-->   102 r3=r3-0x1                         :cortex_a8_default
;;	  5-->   103 [r4+0x4]=r3                       :cortex_a8_load_store_1
;;	  6-->   104 call [`schedule']                 :cortex_a8_issue_branch
;;	  6-->   105 r3=[r4+0x4]                       :cortex_a8_load_store_1
;;	  8-->   106 r3=r3+0x1                         :cortex_a8_default
;;	  8-->   107 [r4+0x4]=r3                       :cortex_a8_load_store_1
;;	  9-->   108 {asm_operands;clobber [scratch];} :nothing
;;	 10-->   156 pc=L109                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 10
;;   new head = 97
;;   new tail = 156





cpu_idle

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;;  exit block uses 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 7[r7] 8[r8] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={16d,6u} r1={13d,2u} r2={12d,1u} r3={25d,18u,1d} r4={3d,9u,5d} r5={2d,3u} r6={2d,3u} r7={2d,3u} r8={2d,3u} r12={10d} r13={2d,28u} r14={11d,2u} r15={10d} r16={10d} r17={10d} r18={10d} r19={10d} r20={10d} r21={10d} r22={10d} r23={10d} r24={22d,7u} r27={10d} r28={10d} r29={10d} r30={10d} r31={10d} r32={10d} r33={10d} r34={10d} r35={10d} r36={10d} r37={10d} r38={10d} r39={10d} r40={10d} r41={10d} r42={10d} r43={10d} r44={10d} r45={10d} r46={10d} r47={10d} r48={10d} r49={10d} r50={10d} r51={10d} r52={10d} r53={10d} r54={10d} r55={10d} r56={10d} r57={10d} r58={10d} r59={10d} r60={10d} r61={10d} r62={10d} r63={10d} r64={10d} r65={10d} r66={10d} r67={10d} r68={10d} r69={10d} r70={10d} r71={10d} r72={10d} r73={10d} r74={10d} r75={10d} r76={10d} r77={10d} r78={10d} r79={10d} r80={10d} r81={10d} r82={10d} r83={10d} r84={10d} r85={10d} r86={10d} r87={10d} r88={10d} r89={10d} r90={10d} r91={10d} r92={10d} r93={10d} r94={10d} r95={10d} r96={10d} r97={10d} r98={10d} r99={10d} r100={10d} r101={10d} r102={10d} r103={10d} r104={10d} r105={10d} r106={10d} r107={10d} r108={10d} r109={10d} r110={10d} r111={10d} r112={10d} r113={10d} r114={10d} r115={10d} r116={10d} r117={10d} r118={10d} r119={10d} r120={10d} r121={10d} r122={10d} r123={10d} r124={10d} r125={10d} r126={10d} r127={10d} 
;;    total ref usage 1313{1222d,85u,6e} in 65{55 regular + 10 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  def 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  kill	 24 [cc]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 7 2 NOTE_INSN_FUNCTION_BEG)

(note 7 2 150 2 NOTE_INSN_DELETED)

(insn/f:TI 150 7 151 2 arch/arm/kernel/process.c:214 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 4 r4)
                    ] 2))
            (use (reg:SI 5 r5))
            (use (reg:SI 6 r6))
            (use (reg:SI 7 r7))
            (use (reg:SI 8 r8))
            (use (reg:SI 14 lr))
        ]) 327 {*push_multi} (expr_list:REG_DEAD (reg:SI 14 lr)
        (expr_list:REG_DEAD (reg:SI 8 r8)
            (expr_list:REG_DEAD (reg:SI 7 r7)
                (expr_list:REG_DEAD (reg:SI 6 r6)
                    (expr_list:REG_DEAD (reg:SI 5 r5)
                        (expr_list:REG_DEAD (reg:SI 4 r4)
                            (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                                        (set/f (reg/f:SI 13 sp)
                                            (plus:SI (reg/f:SI 13 sp)
                                                (const_int -24 [0xffffffffffffffe8])))
                                        (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                                            (reg:SI 4 r4))
                                        (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                    (const_int 4 [0x4])) [0 S4 A32])
                                            (reg:SI 5 r5))
                                        (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                    (const_int 8 [0x8])) [0 S4 A32])
                                            (reg:SI 6 r6))
                                        (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                    (const_int 12 [0xc])) [0 S4 A32])
                                            (reg:SI 7 r7))
                                        (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                    (const_int 16 [0x10])) [0 S4 A32])
                                            (reg:SI 8 r8))
                                        (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                    (const_int 20 [0x14])) [0 S4 A32])
                                            (reg:SI 14 lr))
                                    ])
                                (nil)))))))))

(note 151 150 5 2 NOTE_INSN_PROLOGUE_END)

(insn:TI 5 151 147 2 arch/arm/kernel/process.c:215 (parallel [
            (asm_operands/v ("cpsie f	@ __stf") ("") 0 []
                 [] 8816956)
            (clobber (reg:QI 24 cc))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(insn:TI 147 5 27 2 include/linux/thread_info.h:84 (set (reg:SI 3 r3)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn 27 147 144 2 include/asm-generic/bitops/non-atomic.h:105 (set (reg/f:SI 8 r8 [180])
        (symbol_ref:SI ("cpu_online_mask") [flags 0xc0] <var_decl 0x10c5bf60 cpu_online_mask>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("cpu_online_mask") [flags 0xc0] <var_decl 0x10c5bf60 cpu_online_mask>)
        (nil)))

(insn:TI 144 27 48 2 include/linux/thread_info.h:84 (set (reg/f:SI 4 r4 [orig:139 D.26530 ] [139])
        (and:SI (reg:SI 3 r3)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 3 r3)
        (nil)))

(insn 48 144 56 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:94 (set (reg/f:SI 7 r7 [181])
        (symbol_ref:SI ("outer_cache") [flags 0xc0] <var_decl 0x512cf6c0 outer_cache>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("outer_cache") [flags 0xc0] <var_decl 0x512cf6c0 outer_cache>)
        (nil)))

(insn:TI 56 48 145 2 arch/arm/kernel/process.c:231 (set (reg/f:SI 6 r6 [182])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 145 56 72 2 include/linux/thread_info.h:84 (set (reg/f:SI 4 r4 [orig:139 D.26530 ] [139])
        (and:SI (reg/f:SI 4 r4 [orig:139 D.26530 ] [139])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn:TI 72 145 109 2 arch/arm/kernel/process.c:237 (set (reg/f:SI 5 r5 [184])
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
        (nil)))
;; End of basic block 2 -> ( 3)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2 16) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  2 [100.0%]  (fallthru)
;; Pred edge  16 [100.0%] 
(code_label 109 72 18 3 93 "" [1 uses])

(note 18 109 19 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn:TI 19 18 20 3 arch/arm/kernel/process.c:219 (set (reg:SI 0 r0)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(call_insn:TI 20 19 21 3 arch/arm/kernel/process.c:219 (parallel [
            (call (mem:SI (symbol_ref:SI ("idle_notifier_call_chain") [flags 0x41] <function_decl 0x111e7780 idle_notifier_call_chain>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 21 20 22 3 arch/arm/kernel/process.c:220 (set (reg:SI 0 r0)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(call_insn:TI 22 21 152 3 arch/arm/kernel/process.c:220 (parallel [
            (call (mem:SI (symbol_ref:SI ("tick_nohz_stop_sched_tick") [flags 0x41] <function_decl 0x113e3680 tick_nohz_stop_sched_tick>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(jump_insn 152 22 153 3 arch/arm/kernel/process.c:221 (set (pc)
        (label_ref 137)) 242 {*arm_jump} (nil))
;; End of basic block 3 -> ( 15)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  15 [100.0%] 

(barrier 153 152 92)

;; Start of basic block ( 15) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 4 [r4] 8 [r8] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  15 [100.0%] 
(code_label 92 153 25 4 92 "" [1 uses])

(note 25 92 30 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 30 25 39 4 NOTE_INSN_DELETED)

(note 39 30 26 4 NOTE_INSN_DELETED)

(insn:TI 26 39 34 4 arch/arm/kernel/process.c:223 (set (reg:SI 3 r3 [orig:148 D.25786 ] [148])
        (mem/s/j:SI (plus:SI (reg/f:SI 4 r4 [orig:139 D.26530 ] [139])
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/f:SI 4 r4 [orig:139 D.26530 ] [139])
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])
        (nil)))

(insn:TI 34 26 148 4 include/asm-generic/bitops/non-atomic.h:105 (set (reg/f:SI 1 r1 [orig:159 cpu_online_mask ] [159])
        (mem/u/f/c/i:SI (reg/f:SI 8 r8 [180]) [0 cpu_online_mask+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/u/f/c/i:SI (symbol_ref:SI ("cpu_online_mask") [flags 0xc0] <var_decl 0x10c5bf60 cpu_online_mask>) [0 cpu_online_mask+0 S4 A32])
        (nil)))

(insn:TI 148 34 29 4 include/asm-generic/bitops/non-atomic.h:105 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [orig:148 D.25786 ] [148])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn 29 148 37 4 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 0 r0 [156])
        (plus:SI (reg:SI 3 r3 [orig:148 D.25786 ] [148])
            (const_int 31 [0x1f]))) 4 {*arm_addsi3} (nil))

(insn:TI 37 29 149 4 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 2 r2 [160])
        (and:SI (reg:SI 3 r3 [orig:148 D.25786 ] [148])
            (const_int 31 [0x1f]))) 67 {*arm_andsi3_insn} (nil))

(insn 149 37 32 4 include/asm-generic/bitops/non-atomic.h:105 (cond_exec (lt (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 3 r3 [orig:155 D.25786 ] [155])
            (reg:SI 0 r0 [156]))) 2345 {neon_vornv2di+78} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_DEAD (reg:SI 0 r0 [156])
            (nil))))

(insn:TI 32 149 36 4 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 3 r3 [157])
        (ashiftrt:SI (reg:SI 3 r3 [orig:155 D.25786 ] [155])
            (const_int 5 [0x5]))) 117 {*arm_shiftsi3} (expr_list:REG_EQUAL (div:SI (reg:SI 3 r3 [orig:148 D.25786 ] [148])
            (const_int 32 [0x20]))
        (nil)))

(insn:TI 36 32 38 4 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 3 r3 [orig:142 D.26511 ] [142])
        (mem/v:SI (plus:SI (mult:SI (reg:SI 3 r3 [157])
                    (const_int 4 [0x4]))
                (reg/f:SI 1 r1 [orig:159 cpu_online_mask ] [159])) [0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 1 r1 [orig:159 cpu_online_mask ] [159])
        (nil)))

(insn:TI 38 36 40 4 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 3 r3 [161])
        (lshiftrt:SI (reg:SI 3 r3 [orig:142 D.26511 ] [142])
            (reg:SI 2 r2 [160]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 2 r2 [160])
        (nil)))

(insn:TI 40 38 41 4 include/asm-generic/bitops/non-atomic.h:105 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 3 r3 [161])
                (const_int 1 [0x1])
                (const_int 0 [0x0]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg:SI 3 r3 [161])
        (nil)))

(jump_insn:TI 41 40 42 4 include/asm-generic/bitops/non-atomic.h:105 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 44)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  5 [0.0%]  (fallthru)
;; Succ edge  6 [100.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	
;; live  kill	 14 [lr]

;; Pred edge  4 [0.0%]  (fallthru)
(note 42 41 43 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(call_insn:TI 43 42 44 5 arch/arm/kernel/process.c:224 (parallel [
            (call (mem:SI (symbol_ref:SI ("cpu_die") [flags 0x41] <function_decl 0x10c9f400 cpu_die>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))
;; End of basic block 5 -> ( 6)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 5 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 7 [r7] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	 24 [cc]

;; Pred edge  5 [100.0%]  (fallthru)
;; Pred edge  4 [100.0%] 
(code_label 44 43 45 6 87 "" [1 uses])

(note 45 44 46 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn:TI 46 45 47 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/irqflags.h:35 (parallel [
            (asm_operands/v ("	cpsid i			@ arch_local_irq_disable") ("") 0 []
                 [] 1105916)
            (clobber (reg:QI 24 cc))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(insn:TI 47 46 49 6 arch/arm/kernel/process.c:229 (parallel [
            (asm_operands/v ("dsb") ("") 0 []
                 [] 8818750)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn:TI 49 47 50 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:94 (set (reg/f:SI 3 r3 [orig:140 D.26517 ] [140])
        (mem/s/f/j/c:SI (plus:SI (reg/f:SI 7 r7 [181])
                (const_int 24 [0x18])) [0 outer_cache.sync+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/f/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("outer_cache") [flags 0xc0] <var_decl 0x512cf6c0 outer_cache>)
                    (const_int 24 [0x18]))) [0 outer_cache.sync+0 S4 A32])
        (nil)))

(insn:TI 50 49 51 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:94 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 3 r3 [orig:140 D.26517 ] [140])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn:TI 51 50 52 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:94 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 54)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3017 [0xbc9])
            (nil))))
;; End of basic block 6 -> ( 7 8)
;; lr  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  7 [69.8%]  (fallthru)
;; Succ edge  8 [30.2%] 

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	
;; live  kill	 14 [lr]

;; Pred edge  6 [69.8%]  (fallthru)
(note 52 51 53 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(call_insn:TI 53 52 54 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:95 (parallel [
            (call (mem:SI (reg/f:SI 3 r3 [orig:140 D.26517 ] [140]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 244 {*call_reg_armv5} (expr_list:REG_DEAD (reg/f:SI 3 r3 [orig:140 D.26517 ] [140])
        (nil))
    (nil))
;; End of basic block 7 -> ( 8)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  8 [100.0%]  (fallthru)

;; Start of basic block ( 7 6) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 6 [r6] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  7 [100.0%]  (fallthru)
;; Pred edge  6 [30.2%] 
(code_label 54 53 55 8 88 "" [1 uses])

(note 55 54 57 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn:TI 57 55 58 8 arch/arm/kernel/process.c:231 (set (reg:SI 3 r3 [orig:147 hlt_counter.331 ] [147])
        (mem/v/c/i:SI (reg/f:SI 6 r6 [182]) [0 hlt_counter+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/v/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 hlt_counter+0 S4 A32])
        (nil)))

(insn:TI 58 57 59 8 arch/arm/kernel/process.c:231 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [orig:147 hlt_counter.331 ] [147])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [orig:147 hlt_counter.331 ] [147])
        (nil)))

(jump_insn:TI 59 58 60 8 arch/arm/kernel/process.c:231 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 65)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
            (nil))))
;; End of basic block 8 -> ( 9 10)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  9 [71.0%]  (fallthru)
;; Succ edge  10 [29.0%] 

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	
;; live  kill	 24 [cc]

;; Pred edge  8 [71.0%]  (fallthru)
(note 60 59 61 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn:TI 61 60 62 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/irqflags.h:26 (parallel [
            (asm_operands/v ("	cpsie i			@ arch_local_irq_enable") ("") 0 []
                 [] 1104764)
            (clobber (reg:QI 24 cc))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(insn:TI 62 61 154 9 arch/arm/kernel/process.c:233 (parallel [
            (asm_operands/v ("dmb") ("") 0 []
                 [] 8819263)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(jump_insn:TI 154 62 155 9 (set (pc)
        (label_ref 137)) 242 {*arm_jump} (nil))
;; End of basic block 9 -> ( 15)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  15 [100.0%] 

(barrier 155 154 65)

;; Start of basic block ( 8) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 0 [r0] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  8 [29.0%] 
(code_label 65 155 66 10 89 "" [1 uses])

(note 66 65 68 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(note 68 66 67 10 NOTE_INSN_DELETED)

(call_insn:TI 67 68 69 10 arch/arm/kernel/process.c:236 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("cpuidle_idle_call") [flags 0x41] <function_decl 0x114be300 cpuidle_idle_call>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (nil))

(insn:TI 69 67 70 10 arch/arm/kernel/process.c:236 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(jump_insn:TI 70 69 71 10 arch/arm/kernel/process.c:236 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 75)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 10 -> ( 11 12)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  11 [29.0%]  (fallthru)
;; Succ edge  12 [71.0%] 

;; Start of basic block ( 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	
;; live  kill	 14 [lr]

;; Pred edge  10 [29.0%]  (fallthru)
(note 71 70 73 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(note 73 71 74 11 NOTE_INSN_DELETED)

(call_insn:TI 74 73 75 11 arch/arm/kernel/process.c:237 (parallel [
            (call (mem:SI (mem/f/c/i:SI (plus:SI (reg/f:SI 5 r5 [184])
                            (const_int 8 [0x8])) [0 pm_idle+0 S4 A32]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 246 {*call_mem} (nil)
    (nil))
;; End of basic block 11 -> ( 12)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  12 [100.0%]  (fallthru)

;; Start of basic block ( 10 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	 24 [cc]

;; Pred edge  10 [71.0%] 
;; Pred edge  11 [100.0%]  (fallthru)
(code_label 75 74 76 12 90 "" [1 uses])

(note 76 75 78 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(note 78 76 77 12 NOTE_INSN_DELETED)

(insn:TI 77 78 79 12 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/irqflags.h:131 (parallel [
            (set (reg/v:SI 3 r3 [orig:145 _flags ] [145])
                (asm_operands/v:SI ("	mrs	%0, cpsr	@ local_save_flags") ("=r") 0 []
                     [] 1118204))
            (clobber (reg:QI 24 cc))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(insn:TI 79 77 80 12 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/irqflags.h:151 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 3 r3 [orig:145 _flags ] [145])
                (const_int 1 [0x1])
                (const_int 7 [0x7]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg/v:SI 3 r3 [orig:145 _flags ] [145])
        (nil)))

(jump_insn:TI 80 79 81 12 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/irqflags.h:151 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 86)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 12 -> ( 13 14)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  13 [0.0%]  (fallthru)
;; Succ edge  14 [100.0%] 

;; Start of basic block ( 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]

;; Pred edge  12 [0.0%]  (fallthru)
(note 81 80 124 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn:TI 124 81 125 13 arch/arm/kernel/process.c:244 discrim 1 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x11640640>)) 167 {*arm_movsi_insn} (nil))

(insn 125 124 85 13 arch/arm/kernel/process.c:244 discrim 1 (set (reg:SI 1 r1)
        (const_int 244 [0xf4])) 167 {*arm_movsi_insn} (nil))

(call_insn:TI 85 125 86 13 arch/arm/kernel/process.c:244 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("warn_slowpath_null") [flags 0x41] <function_decl 0x10a67280 warn_slowpath_null>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 13 -> ( 14)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  14 [100.0%]  (fallthru)

;; Start of basic block ( 12 13) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	
;; live  kill	 24 [cc]

;; Pred edge  12 [100.0%] 
;; Pred edge  13 [100.0%]  (fallthru)
(code_label 86 85 87 14 91 "" [1 uses])

(note 87 86 88 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn:TI 88 87 137 14 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/irqflags.h:26 (parallel [
            (asm_operands/v ("	cpsie i			@ arch_local_irq_enable") ("") 0 []
                 [] 1104764)
            (clobber (reg:QI 24 cc))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))
;; End of basic block 14 -> ( 15)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  15 [100.0%]  (fallthru)

;; Start of basic block ( 14 3 9) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  14 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%] 
;; Pred edge  9 [100.0%] 
(code_label 137 88 136 15 95 "" [2 uses])

(note 136 137 93 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(note 93 136 91 15 NOTE_INSN_DELETED)

(insn:TI 91 93 94 15 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 3 r3 [orig:138 D.26533 ] [138])
        (mem/v:SI (reg/f:SI 4 r4 [orig:139 D.26530 ] [139]) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn:TI 94 91 95 15 include/asm-generic/bitops/non-atomic.h:105 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 3 r3 [orig:138 D.26533 ] [138])
                (const_int 1 [0x1])
                (const_int 1 [0x1]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg:SI 3 r3 [orig:138 D.26533 ] [138])
        (nil)))

(jump_insn:TI 95 94 96 15 include/asm-generic/bitops/non-atomic.h:105 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 92)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 15 -> ( 4 16)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  4 [100.0%] 
;; Succ edge  16 [0.0%]  (fallthru,loop_exit)

;; Start of basic block ( 15) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 0 [r0] 3 [r3]
;; live  kill	 14 [lr]

;; Pred edge  15 [0.0%]  (fallthru,loop_exit)
(note 96 95 97 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(call_insn:TI 97 96 98 16 arch/arm/kernel/process.c:248 (parallel [
            (call (mem:SI (symbol_ref:SI ("tick_nohz_restart_sched_tick") [flags 0x41] <function_decl 0x113e3700 tick_nohz_restart_sched_tick>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(insn 98 97 99 16 arch/arm/kernel/process.c:249 (set (reg:SI 0 r0)
        (const_int 2 [0x2])) 167 {*arm_movsi_insn} (nil))

(call_insn:TI 99 98 100 16 arch/arm/kernel/process.c:249 (parallel [
            (call (mem:SI (symbol_ref:SI ("idle_notifier_call_chain") [flags 0x41] <function_decl 0x111e7780 idle_notifier_call_chain>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn:TI 100 99 101 16 arch/arm/kernel/process.c:250 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 8821437)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn:TI 101 100 102 16 arch/arm/kernel/process.c:250 (set (reg:SI 3 r3 [orig:170 <variable>.preempt_count ] [170])
        (mem/s/j:SI (plus:SI (reg/f:SI 4 r4 [orig:139 D.26530 ] [139])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/f:SI 4 r4 [orig:139 D.26530 ] [139])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (nil)))

(insn:TI 102 101 103 16 arch/arm/kernel/process.c:250 (set (reg:SI 3 r3 [171])
        (plus:SI (reg:SI 3 r3 [orig:170 <variable>.preempt_count ] [170])
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/f:SI 4 r4 [orig:139 D.26530 ] [139])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (nil)))

(insn 103 102 104 16 arch/arm/kernel/process.c:250 (set (mem/s/j:SI (plus:SI (reg/f:SI 4 r4 [orig:139 D.26530 ] [139])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (reg:SI 3 r3 [171])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [171])
        (nil)))

(call_insn:TI 104 103 105 16 arch/arm/kernel/process.c:251 (parallel [
            (call (mem:SI (symbol_ref:SI ("schedule") [flags 0x41] <function_decl 0x10f44e80 schedule>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(insn 105 104 106 16 arch/arm/kernel/process.c:252 (set (reg:SI 3 r3 [orig:172 <variable>.preempt_count ] [172])
        (mem/s/j:SI (plus:SI (reg/f:SI 4 r4 [orig:139 D.26530 ] [139])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/f:SI 4 r4 [orig:139 D.26530 ] [139])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (nil)))

(insn:TI 106 105 107 16 arch/arm/kernel/process.c:252 (set (reg:SI 3 r3 [173])
        (plus:SI (reg:SI 3 r3 [orig:172 <variable>.preempt_count ] [172])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/f:SI 4 r4 [orig:139 D.26530 ] [139])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (nil)))

(insn 107 106 108 16 arch/arm/kernel/process.c:252 (set (mem/s/j:SI (plus:SI (reg/f:SI 4 r4 [orig:139 D.26530 ] [139])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (reg:SI 3 r3 [173])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [173])
        (nil)))

(insn:TI 108 107 156 16 arch/arm/kernel/process.c:252 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 8821693)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(jump_insn:TI 156 108 157 16 arch/arm/kernel/process.c:253 (set (pc)
        (label_ref 109)) 242 {*arm_jump} (nil))
;; End of basic block 16 -> ( 3)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  3 [100.0%] 

(barrier 157 156 146)

(note 146 157 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function cpu_idle_wait (cpu_idle_wait)[0:1345]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 2 from 5 to 10 -- after reload
;;   ======================================================

;;	  0-->     5 {asm_operands;clobber [scratch];} :nothing
;;	  1-->     7 r0=`do_nothing'                   :cortex_a8_load_store_1
;;	  1-->     8 r1=0x0                            :cortex_a8_default
;;	  2-->     9 r2=0x1                            :cortex_a8_default
;;	  2-->    22 {unspec{lr;};unspec/v{return;};}  :nothing
;;	  3-->    10 r0=call [`smp_call_function']     :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 3
;;   new head = 5
;;   new tail = 10





cpu_idle_wait

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr]
;;  ref usage 	r0={3d,1u} r1={3d,1u} r2={3d,1u} r3={2d} r12={1d} r13={1d,3u} r14={1d,2u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 133{125d,8u,0e} in 6{5 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 20 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 20 3 2 2 NOTE_INSN_PROLOGUE_END)

(note 2 20 6 2 NOTE_INSN_FUNCTION_BEG)

(note 6 2 5 2 NOTE_INSN_DELETED)

(insn:TI 5 6 7 2 arch/arm/kernel/process.c:187 (parallel [
            (asm_operands/v ("dmb") ("") 0 []
                 [] 8813372)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn:TI 7 5 8 2 arch/arm/kernel/process.c:189 (set (reg:SI 0 r0)
        (symbol_ref:SI ("do_nothing") [flags 0x3] <function_decl 0x114f2c80 do_nothing>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("do_nothing") [flags 0x3] <function_decl 0x114f2c80 do_nothing>)
        (nil)))

(insn 8 7 9 2 arch/arm/kernel/process.c:189 (set (reg:SI 1 r1)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn:TI 9 8 21 2 arch/arm/kernel/process.c:189 (set (reg:SI 2 r2)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(note 21 9 22 2 NOTE_INSN_EPILOGUE_BEG)

(insn 22 21 10 2 arch/arm/kernel/process.c:190 (parallel [
            (unspec:SI [
                    (reg:SI 14 lr)
                ] 6)
            (unspec_volatile [
                    (return)
                ] 1)
        ]) 322 {sibcall_epilogue} (nil))

(call_insn/j:TI 10 22 11 2 arch/arm/kernel/process.c:189 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("smp_call_function") [flags 0x41] <function_decl 0x10c9fa80 smp_call_function>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 11 10 19)

(note 19 11 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function arm_machine_restart (arm_machine_restart)[0:1343]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 7 count 8 (  1.1)


arm_machine_restart

Dataflow summary:
def_info->table_size = 0, use_info->table_size = 0
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;;  exit block uses 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 3[r3] 4[r4] 5[r5] 6[r6] 7[r7] 8[r8] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={11d,5u} r1={9d,2u} r2={8d} r3={9d,1u} r4={3d,4u} r5={2d,4u} r6={2d,3u} r7={2d,3u} r8={1d,2u} r12={7d} r13={2d,14u} r14={8d,2u} r15={7d} r16={7d} r17={7d} r18={7d} r19={7d} r20={7d} r21={7d} r22={7d} r23={7d} r24={8d,1u} r27={7d} r28={7d} r29={7d} r30={7d} r31={7d} r32={7d} r33={7d} r34={7d} r35={7d} r36={7d} r37={7d} r38={7d} r39={7d} r40={7d} r41={7d} r42={7d} r43={7d} r44={7d} r45={7d} r46={7d} r47={7d} r48={7d} r49={7d} r50={7d} r51={7d} r52={7d} r53={7d} r54={7d} r55={7d} r56={7d} r57={7d} r58={7d} r59={7d} r60={7d} r61={7d} r62={7d} r63={7d} r64={7d} r65={7d} r66={7d} r67={7d} r68={7d} r69={7d} r70={7d} r71={7d} r72={7d} r73={7d} r74={7d} r75={7d} r76={7d} r77={7d} r78={7d} r79={7d} r80={7d} r81={7d} r82={7d} r83={7d} r84={7d} r85={7d} r86={7d} r87={7d} r88={7d} r89={7d} r90={7d} r91={7d} r92={7d} r93={7d} r94={7d} r95={7d} r96={7d} r97={7d} r98={7d} r99={7d} r100={7d} r101={7d} r102={7d} r103={7d} r104={7d} r105={7d} r106={7d} r107={7d} r108={7d} r109={7d} r110={7d} r111={7d} r112={7d} r113={7d} r114={7d} r115={7d} r116={7d} r117={7d} r118={7d} r119={7d} r120={7d} r121={7d} r122={7d} r123={7d} r124={7d} r125={7d} r126={7d} r127={7d} 
;;    total ref usage 883{842d,41u,0e} in 21{14 regular + 7 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(7){ }d-1(8){ }d-1(13){ }d-1(14){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  kill	
;; lr  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]

( 0 )->[2]->( 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 12 [ip] 13 [sp] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  kill	 14 [lr]
;; lr  out 	 4 [r4] 13 [sp]
;; live  out 	 4 [r4] 13 [sp]

( 4 )->[3]->( 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 13 [sp]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 4 [r4] 13 [sp]
;; live  gen 	
;; live  kill	 14 [lr]
;; lr  out 	 4 [r4] 13 [sp]
;; live  out 	 4 [r4] 13 [sp]

( 3 2 )->[4]->( 3 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 4 [r4] 24 [cc]
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	 0 [r0] 4 [r4] 24 [cc]
;; live  kill	
;; lr  out 	 0 [r0] 4 [r4] 13 [sp]
;; live  out 	 0 [r0] 4 [r4] 13 [sp]

( 4 )->[5]->( 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]
;; lr  out 	 13 [sp]
;; live  out 	 13 [sp]

( 5 6 )->[6]->( 6 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp]
;; live  gen 	
;; live  kill	
;; lr  out 	 13 [sp]
;; live  out 	 13 [sp]

( )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(4){ }u-1(5){ }u-1(6){ }u-1(7){ }u-1(8){ }u-1(13){ }u-1(14){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  def 	
;; live  in  	
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 59 to worklist
  Adding insn 20 to worklist
  Adding insn 15 to worklist
  Adding insn 12 to worklist
  Adding insn 11 to worklist
  Adding insn 8 to worklist
  Adding insn 55 to worklist
  Adding insn 26 to worklist
  Adding insn 58 to worklist
  Adding insn 36 to worklist
  Adding insn 61 to worklist
Finished finding needed instructions:
processing block 3 lr out =  4 [r4] 13 [sp]
processing block 6 lr out =  13 [sp]
processing block 5 lr out =  13 [sp]
  Adding insn 35 to worklist
processing block 4 lr out =  0 [r0] 4 [r4] 13 [sp]
  Adding insn 57 to worklist
  Adding insn 49 to worklist
processing block 2 lr out =  4 [r4] 13 [sp]
  Adding insn 16 to worklist
  Adding insn 19 to worklist
  Adding insn 18 to worklist
  Adding insn 21 to worklist
  Adding insn 9 to worklist
  Adding insn 2 to worklist
  Adding insn 3 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 7 count 11 (  1.6)
;;   ======================================================
;;   -- basic block 2 from 55 to 59 -- after reload
;;   ======================================================

;;	  0-->    55 {[--sp]=unspec[r4] 2;use r5;use r6:cortex_a8_load_store_2
;;	  1-->     3 r6=r1                             :cortex_a8_default
;;	  2-->     2 r7=r0                             :cortex_a8_default
;;	  2-->     9 r5=`cpu_cache'                    :cortex_a8_load_store_1
;;	  3-->     8 call [`setup_mm_for_reboot']      :cortex_a8_issue_branch
;;	  3-->    21 r4=0x3e8                          :cortex_a8_default
;;	  4-->    11 call [[r5+0x4]]                   :cortex_a8_issue_branch
;;	  5-->    12 call [`cpu_v7_proc_fin']          :cortex_a8_issue_branch
;;	  6-->    15 call [[r5+0x4]]                   :cortex_a8_issue_branch
;;	  6-->    18 r0=r7                             :cortex_a8_default
;;	  7-->    19 r1=r6                             :cortex_a8_default
;;	  7-->    16 r3=`arch_reset'                   :cortex_a8_load_store_1
;;	  8-->    20 call [[r3]]                       :cortex_a8_issue_branch
;;	  8-->    59 pc=L27                            :cortex_a8_default
;;	Ready list (final):  
;;   total time = 8
;;   new head = 55
;;   new tail = 59

;;   ======================================================
;;   -- basic block 3 from 26 to 26 -- after reload
;;   ======================================================

;;	  0-->    26 call [`__udelay']                 :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 0
;;   new head = 26
;;   new tail = 26

;;   ======================================================
;;   -- basic block 4 from 49 to 58 -- after reload
;;   ======================================================

;;	  0-->    57 {cc=cmp(r4,0x1);r4=r4-0x1;}       :cortex_a8_default
;;	  0-->    49 r0=0x3e8                          :cortex_a8_default
;;	  2-->    58 pc={(geu(cc,0x0))?L30:pc}         :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 49
;;   new tail = 58

;;   ======================================================
;;   -- basic block 5 from 35 to 36 -- after reload
;;   ======================================================

;;	  0-->    35 r0=`*.LC2'                        :cortex_a8_load_store_1
;;	  1-->    36 r0=call [`printk']                :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 1
;;   new head = 35
;;   new tail = 36

;;   ======================================================
;;   -- basic block 6 from 61 to 61 -- after reload
;;   ======================================================

;;	  0-->    61 pc=L38                            :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 61
;;   new tail = 61





arm_machine_restart

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;;  exit block uses 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 3[r3] 4[r4] 5[r5] 6[r6] 7[r7] 8[r8] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={11d,5u} r1={9d,2u} r2={8d} r3={9d,1u} r4={3d,4u} r5={2d,4u} r6={2d,3u} r7={2d,3u} r8={1d,2u} r12={7d} r13={2d,14u} r14={8d,2u} r15={7d} r16={7d} r17={7d} r18={7d} r19={7d} r20={7d} r21={7d} r22={7d} r23={7d} r24={8d,1u} r27={7d} r28={7d} r29={7d} r30={7d} r31={7d} r32={7d} r33={7d} r34={7d} r35={7d} r36={7d} r37={7d} r38={7d} r39={7d} r40={7d} r41={7d} r42={7d} r43={7d} r44={7d} r45={7d} r46={7d} r47={7d} r48={7d} r49={7d} r50={7d} r51={7d} r52={7d} r53={7d} r54={7d} r55={7d} r56={7d} r57={7d} r58={7d} r59={7d} r60={7d} r61={7d} r62={7d} r63={7d} r64={7d} r65={7d} r66={7d} r67={7d} r68={7d} r69={7d} r70={7d} r71={7d} r72={7d} r73={7d} r74={7d} r75={7d} r76={7d} r77={7d} r78={7d} r79={7d} r80={7d} r81={7d} r82={7d} r83={7d} r84={7d} r85={7d} r86={7d} r87={7d} r88={7d} r89={7d} r90={7d} r91={7d} r92={7d} r93={7d} r94={7d} r95={7d} r96={7d} r97={7d} r98={7d} r99={7d} r100={7d} r101={7d} r102={7d} r103={7d} r104={7d} r105={7d} r106={7d} r107={7d} r108={7d} r109={7d} r110={7d} r111={7d} r112={7d} r113={7d} r114={7d} r115={7d} r116={7d} r117={7d} r118={7d} r119={7d} r120={7d} r121={7d} r122={7d} r123={7d} r124={7d} r125={7d} r126={7d} r127={7d} 
;;    total ref usage 883{842d,41u,0e} in 21{14 regular + 7 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 12 [ip] 13 [sp] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 4 5 10 2 NOTE_INSN_FUNCTION_BEG)

(note 10 4 14 2 NOTE_INSN_DELETED)

(note 14 10 17 2 NOTE_INSN_DELETED)

(note 17 14 55 2 NOTE_INSN_DELETED)

(insn/f:TI 55 17 56 2 arch/arm/kernel/process.c:133 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 4 r4)
                    ] 2))
            (use (reg:SI 5 r5))
            (use (reg:SI 6 r6))
            (use (reg:SI 7 r7))
            (use (reg:SI 8 r8))
            (use (reg:SI 14 lr))
        ]) 327 {*push_multi} (expr_list:REG_DEAD (reg:SI 14 lr)
        (expr_list:REG_DEAD (reg:SI 8 r8)
            (expr_list:REG_DEAD (reg:SI 7 r7)
                (expr_list:REG_DEAD (reg:SI 6 r6)
                    (expr_list:REG_DEAD (reg:SI 5 r5)
                        (expr_list:REG_DEAD (reg:SI 4 r4)
                            (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                                        (set/f (reg/f:SI 13 sp)
                                            (plus:SI (reg/f:SI 13 sp)
                                                (const_int -24 [0xffffffffffffffe8])))
                                        (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                                            (reg:SI 4 r4))
                                        (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                    (const_int 4 [0x4])) [0 S4 A32])
                                            (reg:SI 5 r5))
                                        (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                    (const_int 8 [0x8])) [0 S4 A32])
                                            (reg:SI 6 r6))
                                        (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                    (const_int 12 [0xc])) [0 S4 A32])
                                            (reg:SI 7 r7))
                                        (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                    (const_int 16 [0x10])) [0 S4 A32])
                                            (reg:SI 8 r8))
                                        (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                    (const_int 20 [0x14])) [0 S4 A32])
                                            (reg:SI 14 lr))
                                    ])
                                (nil)))))))))

(note 56 55 3 2 NOTE_INSN_PROLOGUE_END)

(insn:TI 3 56 2 2 arch/arm/kernel/process.c:133 (set (reg/v/f:SI 6 r6 [orig:135 cmd ] [135])
        (reg:SI 1 r1 [ cmd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ cmd ])
        (nil)))

(insn:TI 2 3 9 2 arch/arm/kernel/process.c:133 (set (reg/v:SI 7 r7 [orig:134 mode ] [134])
        (reg:SI 0 r0 [ mode ])) 167 {*arm_movsi_insn} (nil))

(insn 9 2 8 2 arch/arm/kernel/process.c:142 (set (reg/f:SI 5 r5 [136])
        (symbol_ref:SI ("cpu_cache") [flags 0xc0] <var_decl 0x114d5600 cpu_cache>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("cpu_cache") [flags 0xc0] <var_decl 0x114d5600 cpu_cache>)
        (nil)))

(call_insn:TI 8 9 21 2 arch/arm/kernel/process.c:139 (parallel [
            (call (mem:SI (symbol_ref:SI ("setup_mm_for_reboot") [flags 0x41] <function_decl 0x114f2280 setup_mm_for_reboot>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 21 8 11 2 arch/arm/kernel/process.c:159 (set (reg/v:SI 4 r4 [orig:133 __ms ] [133])
        (const_int 1000 [0x3e8])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 1000 [0x3e8])
        (nil)))

(call_insn:TI 11 21 12 2 arch/arm/kernel/process.c:142 (parallel [
            (call (mem:SI (mem/s/f/j/c:SI (plus:SI (reg/f:SI 5 r5 [136])
                            (const_int 4 [0x4])) [0 cpu_cache.flush_kern_all+0 S4 A32]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 246 {*call_mem} (nil)
    (nil))

(call_insn:TI 12 11 15 2 arch/arm/kernel/process.c:145 (parallel [
            (call (mem:SI (symbol_ref:SI ("cpu_v7_proc_fin") [flags 0x41] <function_decl 0x11004c00 cpu_v7_proc_fin>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(call_insn:TI 15 12 18 2 arch/arm/kernel/process.c:148 (parallel [
            (call (mem:SI (mem/s/f/j/c:SI (plus:SI (reg/f:SI 5 r5 [136])
                            (const_int 4 [0x4])) [0 cpu_cache.flush_kern_all+0 S4 A32]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 246 {*call_mem} (expr_list:REG_DEAD (reg/f:SI 5 r5 [136])
        (nil))
    (nil))

(insn 18 15 19 2 arch/arm/kernel/process.c:153 (set (reg:SI 0 r0)
        (reg/v:SI 7 r7 [orig:134 mode ] [134])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 7 r7 [orig:134 mode ] [134])
        (nil)))

(insn:TI 19 18 16 2 arch/arm/kernel/process.c:153 (set (reg:SI 1 r1)
        (reg/v/f:SI 6 r6 [orig:135 cmd ] [135])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 6 r6 [orig:135 cmd ] [135])
        (nil)))

(insn 16 19 20 2 arch/arm/kernel/process.c:153 (set (reg/f:SI 3 r3 [140])
        (symbol_ref:SI ("arch_reset") [flags 0xc0] <var_decl 0x114eccc0 arch_reset>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("arch_reset") [flags 0xc0] <var_decl 0x114eccc0 arch_reset>)
        (nil)))

(call_insn:TI 20 16 59 2 arch/arm/kernel/process.c:153 (parallel [
            (call (mem:SI (mem/f/c/i:SI (reg/f:SI 3 r3 [140]) [0 arch_reset+0 S4 A32]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 246 {*call_mem} (expr_list:REG_DEAD (reg/f:SI 3 r3 [140])
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_DEAD (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(jump_insn 59 20 60 2 arch/arm/kernel/process.c:159 (set (pc)
        (label_ref 27)) 242 {*arm_jump} (nil))
;; End of basic block 2 -> ( 4)
;; lr  out 	 4 [r4] 13 [sp]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  4 [100.0%] 

(barrier 60 59 30)

;; Start of basic block ( 4) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 13 [sp]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 4 [r4] 13 [sp]
;; live  gen 	
;; live  kill	 14 [lr]

;; Pred edge  4 [99.0%] 
(code_label 30 60 24 3 104 "" [1 uses])

(note 24 30 26 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(call_insn:TI 26 24 27 3 arch/arm/kernel/process.c:159 discrim 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("__udelay") [flags 0x41] <function_decl 0x11153600 __udelay>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 3 -> ( 4)
;; lr  out 	 4 [r4] 13 [sp]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  4 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 3 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 4 [r4] 24 [cc]
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	 0 [r0] 4 [r4] 24 [cc]
;; live  kill	

;; Pred edge  3 [100.0%]  (fallthru,dfs_back)
;; Pred edge  2 [100.0%] 
(code_label 27 26 28 4 103 "" [1 uses])

(note 28 27 57 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn:TI 57 28 49 4 arch/arm/kernel/process.c:159 discrim 1 (parallel [
            (set (reg:CC 24 cc)
                (compare:CC (reg/v:SI 4 r4 [orig:133 __ms ] [133])
                    (const_int 1 [0x1])))
            (set (reg/v:SI 4 r4 [orig:133 __ms ] [133])
                (plus:SI (reg/v:SI 4 r4 [orig:133 __ms ] [133])
                    (const_int -1 [0xffffffffffffffff])))
        ]) 9 {*cmpsi2_addneg} (nil))

(insn 49 57 58 4 arch/arm/kernel/process.c:159 discrim 2 (set (reg:SI 0 r0)
        (const_int 1000 [0x3e8])) 167 {*arm_movsi_insn} (nil))

(jump_insn:TI 58 49 33 4 arch/arm/kernel/process.c:159 discrim 1 (set (pc)
        (if_then_else (geu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 30)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))
;; End of basic block 4 -> ( 3 5)
;; lr  out 	 0 [r0] 4 [r4] 13 [sp]
;; live  out 	 0 [r0] 4 [r4] 13 [sp]


;; Succ edge  3 [99.0%] 
;; Succ edge  5 [1.0%]  (fallthru,loop_exit)

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  4 [1.0%]  (fallthru,loop_exit)
(note 33 58 35 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn:TI 35 33 36 5 arch/arm/kernel/process.c:160 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x1164c780>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x1164c780>)
        (nil)))

(call_insn:TI 36 35 38 5 arch/arm/kernel/process.c:160 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_UNUSED (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 5 -> ( 6)
;; lr  out 	 13 [sp]
;; live  out 	 13 [sp]


;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 5 6) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp]
;; live  gen 	
;; live  kill	

;; Pred edge  5 [100.0%]  (fallthru)
;; Pred edge  6 [100.0%] 
(code_label 38 36 37 6 105 "" [1 uses])

(note 37 38 61 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(jump_insn:TI 61 37 62 6 (set (pc)
        (label_ref 38)) 242 {*arm_jump} (nil))
;; End of basic block 6 -> ( 6)
;; lr  out 	 13 [sp]
;; live  out 	 13 [sp]


;; Succ edge  6 [100.0%] 

(barrier 62 61 54)

(note 54 62 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function arch_trigger_all_cpu_backtrace (arch_trigger_all_cpu_backtrace)[0:1337]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 2 from 17 to 5 -- after reload
;;   ======================================================

;;	  0-->    17 {unspec{lr;};unspec/v{return;};}  :nothing
;;	  1-->     5 call [`smp_send_all_cpu_backtrace':cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 1
;;   new head = 17
;;   new tail = 5





arch_trigger_all_cpu_backtrace

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 13[sp] 14[lr]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r3={2d} r12={1d} r13={1d,3u} r14={1d,2u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 127{122d,5u,0e} in 2{1 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 15 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 15 3 2 2 NOTE_INSN_PROLOGUE_END)

(note 2 15 16 2 NOTE_INSN_FUNCTION_BEG)

(note 16 2 17 2 NOTE_INSN_EPILOGUE_BEG)

(insn:TI 17 16 5 2 arch/arm/kernel/process.c:70 (parallel [
            (unspec:SI [
                    (reg:SI 14 lr)
                ] 6)
            (unspec_volatile [
                    (return)
                ] 1)
        ]) 322 {sibcall_epilogue} (nil))

(call_insn/j:TI 5 17 6 2 arch/arm/kernel/process.c:69 (parallel [
            (call (mem:SI (symbol_ref:SI ("smp_send_all_cpu_backtrace") [flags 0x41] <function_decl 0x10c9f780 smp_send_all_cpu_backtrace>) [0 S4 A32])
                (const_int 0 [0x0]))
            (return)
            (use (const_int 0 [0x0]))
        ]) 258 {*sibcall_insn} (nil)
    (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 6 5 14)

(note 14 6 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function show_data.clone.0 (show_data.clone.0)[0:1368]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 13 n_edges 17 count 24 (  1.8)


show_data.clone.0

Dataflow summary:
def_info->table_size = 0, use_info->table_size = 0
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;;  exit block uses 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 7[r7] 8[r8] 9[r9] 10[sl] 11[fp] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={14d,10u} r1={11d,4u} r2={14d,6u,1d} r3={14d,5u} r4={3d,11u,4d} r5={3d,5u} r6={4d,8u} r7={3d,5u} r8={5d,6u} r9={2d,3u} r10={2d,3u} r11={2d,3u} r12={7d} r13={3d,27u,1d} r14={8d,2u} r15={7d} r16={7d} r17={7d} r18={7d} r19={7d} r20={7d} r21={7d} r22={7d} r23={7d} r24={12d,5u} r27={7d} r28={7d} r29={7d} r30={7d} r31={7d} r32={7d} r33={7d} r34={7d} r35={7d} r36={7d} r37={7d} r38={7d} r39={7d} r40={7d} r41={7d} r42={7d} r43={7d} r44={7d} r45={7d} r46={7d} r47={7d} r48={7d} r49={7d} r50={7d} r51={7d} r52={7d} r53={7d} r54={7d} r55={7d} r56={7d} r57={7d} r58={7d} r59={7d} r60={7d} r61={7d} r62={7d} r63={7d} r64={7d} r65={7d} r66={7d} r67={7d} r68={7d} r69={7d} r70={7d} r71={7d} r72={7d} r73={7d} r74={7d} r75={7d} r76={7d} r77={7d} r78={7d} r79={7d} r80={7d} r81={7d} r82={7d} r83={7d} r84={7d} r85={7d} r86={7d} r87={7d} r88={7d} r89={7d} r90={7d} r91={7d} r92={7d} r93={7d} r94={7d} r95={7d} r96={7d} r97={7d} r98={7d} r99={7d} r100={7d} r101={7d} r102={7d} r103={7d} r104={7d} r105={7d} r106={7d} r107={7d} r108={7d} r109={7d} r110={7d} r111={7d} r112={7d} r113={7d} r114={7d} r115={7d} r116={7d} r117={7d} r118={7d} r119={7d} r120={7d} r121={7d} r122={7d} r123={7d} r124={7d} r125={7d} r126={7d} r127={7d} 
;;    total ref usage 986{877d,103u,6e} in 66{59 regular + 7 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(7){ }d-1(8){ }d-1(9){ }d-1(10){ }d-1(11){ }d-1(13){ }d-1(14){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  kill	
;; lr  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]

( 0 )->[2]->( 12 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  def 	 2 [r2] 3 [r3] 6 [r6] 13 [sp] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 6 [r6] 13 [sp] 24 [cc]
;; live  kill	
;; lr  out 	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]

( 2 )->[3]->( 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 6 [r6] 13 [sp]
;; lr  use 	 1 [r1] 6 [r6] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 11 [fp] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 1 [r1] 6 [r6] 13 [sp]
;; live  gen 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 11 [fp]
;; live  kill	 14 [lr]
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 11 [fp] 13 [sp]

( 11 3 )->[4]->( 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 6 [r6] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 7 [r7]
;; live  kill	 14 [lr]
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 13 [sp]

( 10 4 )->[5]->( 6 7 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 6 [r6] 7 [r7] 9 [r9] 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 10 [sl] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 10 [sl] 24 [cc]
;; live  kill	 14 [lr]
;; lr  out 	 0 [r0] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]

( 5 )->[6]->( 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 3 [r3]
;; live  kill	 14 [lr]
;; lr  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]

( 5 6 )->[7]->( 8 9 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 3 [r3] 4 [r4] 10 [sl] 13 [sp]
;; lr  def 	 0 [r0] 24 [cc]
;; live  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 24 [cc]
;; live  kill	
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]

( 7 )->[8]->( 10 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]

( 7 )->[9]->( 10 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]

( 9 8 )->[10]->( 5 11 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 7 [r7] 13 [sp]
;; lr  def 	 7 [r7] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 7 [r7] 24 [cc]
;; live  kill	
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]

( 10 )->[11]->( 4 12 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 5 [r5] 6 [r6] 8 [r8] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 5 [r5] 6 [r6] 24 [cc]
;; live  kill	 14 [lr]
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]

( 11 2 )->[12]->( 1 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]

( 12 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(4){ }u-1(5){ }u-1(6){ }u-1(7){ }u-1(8){ }u-1(9){ }u-1(10){ }u-1(11){ }u-1(13){ }u-1(14){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  def 	
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 12 to worklist
  Adding insn 151 to worklist
  Adding insn 18 to worklist
  Adding insn 50 to worklist
  Adding insn 75 to worklist
  Adding insn 72 to worklist
  Adding insn 71 to worklist
  Adding insn 70 to worklist
  Adding insn 67 to worklist
  Adding insn 65 to worklist
  Adding insn 59 to worklist
  Adding insn 55 to worklist
  Adding insn 58 to worklist
  Adding insn 77 to worklist
  Adding insn 147 to worklist
  Adding insn 82 to worklist
  Adding insn 80 to worklist
  Adding insn 157 to worklist
  Adding insn 86 to worklist
  Adding insn 94 to worklist
  Adding insn 100 to worklist
  Adding insn 109 to worklist
  Adding insn 105 to worklist
  Adding insn 155 to worklist
Finished finding needed instructions:
processing block 12 lr out =  4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
processing block 11 lr out =  4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
  Adding insn 102 to worklist
  Adding insn 108 to worklist
  Adding insn 138 to worklist
  Adding insn 106 to worklist
processing block 10 lr out =  4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
  Adding insn 99 to worklist
  Adding insn 97 to worklist
processing block 8 lr out =  4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
  Adding insn 127 to worklist
processing block 9 lr out =  4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
  Adding insn 93 to worklist
processing block 7 lr out =  0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
  Adding insn 81 to worklist
  Adding insn 126 to worklist
processing block 6 lr out =  3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
  Adding insn 148 to worklist
processing block 5 lr out =  0 [r0] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
  Adding insn 74 to worklist
  Adding insn 69 to worklist
  Adding insn 68 to worklist
  Adding insn 66 to worklist
  Adding insn 63 to worklist
  Adding insn 137 to worklist
  Adding insn 125 to worklist
  Adding insn 57 to worklist
  Adding insn 53 to worklist
  Adding insn 56 to worklist
processing block 4 lr out =  4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 13 [sp]
  Adding insn 129 to worklist
  Adding insn 49 to worklist
  Adding insn 128 to worklist
processing block 3 lr out =  4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 11 [fp] 13 [sp]
  Adding insn 60 to worklist
  Adding insn 51 to worklist
  Adding insn 23 to worklist
  Adding insn 19 to worklist
  Adding insn 142 to worklist
  Adding insn 42 to worklist
  Adding insn 22 to worklist
  Adding insn 141 to worklist
  Adding insn 149 to worklist
  Adding insn 21 to worklist
  Adding insn 20 to worklist
  Adding insn 17 to worklist
  Adding insn 15 to worklist
processing block 2 lr out =  1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
  Adding insn 11 to worklist
  Adding insn 145 to worklist
  Adding insn 9 to worklist
  Adding insn 4 to worklist
  Adding insn 152 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 13 n_edges 17 count 24 (  1.8)
;;   ======================================================
;;   -- basic block 2 from 151 to 12 -- after reload
;;   ======================================================

;;	  0-->   145 r3=0x3fffff00                     :cortex_a8_load_store_1
;;	  0-->     9 r2=r0+0x40000000                  :cortex_a8_default
;;	  1-->   151 {[--sp]=unspec[r4] 2;use r5;use r6:cortex_a8_load_store_2
;;	  2-->    11 cc=cmp(r2,r3)                     :cortex_a8_default
;;	  3-->   152 sp=sp-0x14                        :cortex_a8_default
;;	  3-->     4 r6=r0                             :cortex_a8_default
;;	  4-->    12 pc={(gtu(cc,0x0))?L115:pc}        :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 151
;;   new tail = 12

;;   ======================================================
;;   -- basic block 3 from 15 to 60 -- after reload
;;   ======================================================

;;	  0-->    20 r8=r6&0x3                         :cortex_a8_default
;;	  0-->    17 r2=r6                             :cortex_a8_default
;;	  1-->    15 r0=`*.LC3'                        :cortex_a8_load_store_1
;;	  1-->    21 r8=r8+0x100                       :cortex_a8_default
;;	  2-->    18 r0=call [`printk']                :cortex_a8_issue_branch
;;	  2-->    22 r8=r8+0x1f                        :cortex_a8_default
;;	  3-->   149 r3=sp                             :cortex_a8_default
;;	  3-->    42 r5=0x0                            :cortex_a8_default
;;	  4-->   141 r4=r3&0xffffffffffffe03f          :cortex_a8_default
;;	  4-->    19 r6=r6&0xfffffffffffffffc          :cortex_a8_default
;;	  5-->   142 r4=r4&0xffffffffffffffc0          :cortex_a8_default
;;	  5-->    23 r8=r8>>0x5                        :cortex_a8_default
;;	  6-->    51 r9=r5                             :cortex_a8_default
;;	  6-->    60 fp=sp+0xc                         :cortex_a8_default
;;	Ready list (final):  
;;   total time = 6
;;   new head = 15
;;   new tail = 60

;;   ======================================================
;;   -- basic block 4 from 128 to 129 -- after reload
;;   ======================================================

;;	  0-->   128 r0=`*.LC4'                        :cortex_a8_load_store_1
;;	  0-->    49 r1=zxn(r6)                        :cortex_a8_default
;;	  1-->    50 r0=call [`printk']                :cortex_a8_issue_branch
;;	  1-->   129 r7=0x0                            :cortex_a8_default
;;	Ready list (final):  
;;   total time = 1
;;   new head = 128
;;   new tail = 129

;;   ======================================================
;;   -- basic block 5 from 56 to 75 -- after reload
;;   ======================================================

;;	  0-->    56 r3=[r4+0x4]                       :cortex_a8_load_store_1
;;	  1-->    53 sl=[r4+0x8]                       :cortex_a8_load_store_1
;;	  2-->    57 r3=r3+0x1                         :cortex_a8_default
;;	  2-->    55 [r4+0x8]=r9                       :cortex_a8_load_store_1
;;	  3-->    58 [r4+0x4]=r3                       :cortex_a8_load_store_1
;;	  4-->    59 {asm_operands;clobber [scratch];} :nothing
;;	  5-->   125 r2=0x4                            :cortex_a8_default
;;	  5-->   137 r0=fp                             :cortex_a8_default
;;	  6-->    63 r1=r6+r7                          :cortex_a8_default
;;	  7-->    65 r0=call [`__copy_from_user']      :cortex_a8_issue_branch
;;	 39-->    66 r3=r0                             :cortex_a8_default
;;	 40-->    67 {asm_operands;clobber [scratch];} :nothing
;;	 41-->    68 r2=[r4+0x4]                       :cortex_a8_load_store_1
;;	 43-->    69 r2=r2-0x1                         :cortex_a8_default
;;	 43-->    70 [r4+0x4]=r2                       :cortex_a8_load_store_1
;;	 44-->    71 {asm_operands;clobber [scratch];} :nothing
;;	 45-->    72 r2=[r4]                           :cortex_a8_load_store_1
;;	 47-->    74 cc=cmp(zxt(r2,0x1,0x1),0x0)       :cortex_a8_default
;;	 49-->    75 pc={(cc==0x0)?L78:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 49
;;   new head = 56
;;   new tail = 75

;;   ======================================================
;;   -- basic block 6 from 147 to 148 -- after reload
;;   ======================================================

;;	  0-->   147 [sp+0x4]=r0                       :cortex_a8_load_store_1
;;	  0-->    77 call [`preempt_schedule']         :cortex_a8_issue_branch
;;	  1-->   148 r3=[sp+0x4]                       :cortex_a8_load_store_1
;;	Ready list (final):  
;;   total time = 1
;;   new head = 147
;;   new tail = 148

;;   ======================================================
;;   -- basic block 7 from 126 to 82 -- after reload
;;   ======================================================

;;	  0-->    81 cc=cmp(r3,0x0)                    :cortex_a8_default
;;	  0-->   126 r0=`*.LC6'                        :cortex_a8_load_store_1
;;	  1-->    80 [r4+0x8]=sl                       :cortex_a8_load_store_1
;;	  2-->    82 pc={(cc==0x0)?L89:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 126
;;   new tail = 82

;;   ======================================================
;;   -- basic block 8 from 127 to 157 -- after reload
;;   ======================================================

;;	  0-->   127 r0=`*.LC5'                        :cortex_a8_load_store_1
;;	  1-->    86 r0=call [`printk']                :cortex_a8_issue_branch
;;	  1-->   157 pc=L95                            :cortex_a8_default
;;	Ready list (final):  
;;   total time = 1
;;   new head = 127
;;   new tail = 157

;;   ======================================================
;;   -- basic block 9 from 93 to 94 -- after reload
;;   ======================================================

;;	  0-->    93 r1=[sp+0xc]                       :cortex_a8_load_store_1
;;	  1-->    94 r0=call [`printk']                :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 1
;;   new head = 93
;;   new tail = 94

;;   ======================================================
;;   -- basic block 10 from 97 to 100 -- after reload
;;   ======================================================

;;	  0-->    97 r7=r7+0x4                         :cortex_a8_default
;;	  1-->    99 cc=cmp(r7,0x20)                   :cortex_a8_default
;;	  3-->   100 pc={(cc!=0x0)?L98:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 3
;;   new head = 97
;;   new tail = 100

;;   ======================================================
;;   -- basic block 11 from 106 to 109 -- after reload
;;   ======================================================

;;	  0-->   106 r5=r5+0x1                         :cortex_a8_default
;;	  0-->   138 r0=`*.LC7'                        :cortex_a8_load_store_1
;;	  1-->   105 r0=call [`printk']                :cortex_a8_issue_branch
;;	  1-->   108 cc=cmp(r5,r8)                     :cortex_a8_default
;;	  2-->   102 r6=r6+0x20                        :cortex_a8_default
;;	  3-->   109 pc={(cc<0x0)?L107:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 3
;;   new head = 106
;;   new tail = 109

;;   ======================================================
;;   -- basic block 12 from 155 to 155 -- after reload
;;   ======================================================

;;	  0-->   155 unspec/v{return;}                 :nothing
;;	Ready list (final):  
;;   total time = 0
;;   new head = 155
;;   new tail = 155





show_data.clone.0

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;;  exit block uses 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 7[r7] 8[r8] 9[r9] 10[sl] 11[fp] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={14d,10u} r1={11d,4u} r2={14d,6u,1d} r3={14d,5u} r4={3d,11u,4d} r5={3d,5u} r6={4d,8u} r7={3d,5u} r8={5d,6u} r9={2d,3u} r10={2d,3u} r11={2d,3u} r12={7d} r13={3d,27u,1d} r14={8d,2u} r15={7d} r16={7d} r17={7d} r18={7d} r19={7d} r20={7d} r21={7d} r22={7d} r23={7d} r24={12d,5u} r27={7d} r28={7d} r29={7d} r30={7d} r31={7d} r32={7d} r33={7d} r34={7d} r35={7d} r36={7d} r37={7d} r38={7d} r39={7d} r40={7d} r41={7d} r42={7d} r43={7d} r44={7d} r45={7d} r46={7d} r47={7d} r48={7d} r49={7d} r50={7d} r51={7d} r52={7d} r53={7d} r54={7d} r55={7d} r56={7d} r57={7d} r58={7d} r59={7d} r60={7d} r61={7d} r62={7d} r63={7d} r64={7d} r65={7d} r66={7d} r67={7d} r68={7d} r69={7d} r70={7d} r71={7d} r72={7d} r73={7d} r74={7d} r75={7d} r76={7d} r77={7d} r78={7d} r79={7d} r80={7d} r81={7d} r82={7d} r83={7d} r84={7d} r85={7d} r86={7d} r87={7d} r88={7d} r89={7d} r90={7d} r91={7d} r92={7d} r93={7d} r94={7d} r95={7d} r96={7d} r97={7d} r98={7d} r99={7d} r100={7d} r101={7d} r102={7d} r103={7d} r104={7d} r105={7d} r106={7d} r107={7d} r108={7d} r109={7d} r110={7d} r111={7d} r112={7d} r113={7d} r114={7d} r115={7d} r116={7d} r117={7d} r118={7d} r119={7d} r120={7d} r121={7d} r122={7d} r123={7d} r124={7d} r125={7d} r126={7d} r127={7d} 
;;    total ref usage 986{877d,103u,6e} in 66{59 regular + 7 call} insns.
(note 3 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  def 	 2 [r2] 3 [r3] 6 [r6] 13 [sp] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 6 [r6] 13 [sp] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 3 6 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 6 7 145 2 NOTE_INSN_FUNCTION_BEG)

(insn:TI 145 6 9 2 arch/arm/kernel/process.c:313 (set (reg:SI 3 r3 [158])
        (const_int 1073741568 [0x3fffff00])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 1073741568 [0x3fffff00])
        (nil)))

(insn 9 145 151 2 arch/arm/kernel/process.c:313 (set (reg:SI 2 r2 [157])
        (plus:SI (reg:SI 0 r0 [orig:155 addr ] [155])
            (const_int 1073741824 [0x40000000]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 0 r0 [orig:155 addr ] [155])
        (nil)))

(insn/f:TI 151 9 11 2 arch/arm/kernel/process.c:303 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 4 r4)
                    ] 2))
            (use (reg:SI 5 r5))
            (use (reg:SI 6 r6))
            (use (reg:SI 7 r7))
            (use (reg:SI 8 r8))
            (use (reg:SI 9 r9))
            (use (reg:SI 10 sl))
            (use (reg:SI 11 fp))
            (use (reg:SI 14 lr))
        ]) 327 {*push_multi} (expr_list:REG_DEAD (reg:SI 6 r6)
        (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                    (set/f (reg/f:SI 13 sp)
                        (plus:SI (reg/f:SI 13 sp)
                            (const_int -36 [0xffffffffffffffdc])))
                    (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                        (reg:SI 4 r4))
                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                (const_int 4 [0x4])) [0 S4 A32])
                        (reg:SI 5 r5))
                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                (const_int 8 [0x8])) [0 S4 A32])
                        (reg:SI 6 r6))
                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                (const_int 12 [0xc])) [0 S4 A32])
                        (reg:SI 7 r7))
                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                (const_int 16 [0x10])) [0 S4 A32])
                        (reg:SI 8 r8))
                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                (const_int 20 [0x14])) [0 S4 A32])
                        (reg:SI 9 r9))
                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                (const_int 24 [0x18])) [0 S4 A32])
                        (reg:SI 10 sl))
                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                (const_int 28 [0x1c])) [0 S4 A32])
                        (reg:SI 11 fp))
                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                (const_int 32 [0x20])) [0 S4 A32])
                        (reg:SI 14 lr))
                ])
            (nil))))

(insn:TI 11 151 152 2 arch/arm/kernel/process.c:313 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2 r2 [157])
            (reg:SI 3 r3 [158]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [158])
        (expr_list:REG_DEAD (reg:SI 2 r2 [157])
            (expr_list:REG_EQUAL (compare:CC (reg:SI 2 r2 [157])
                    (const_int 1073741568 [0x3fffff00]))
                (nil)))))

(insn/f:TI 152 11 153 2 arch/arm/kernel/process.c:303 (set (reg/f:SI 13 sp)
        (plus:SI (reg/f:SI 13 sp)
            (const_int -20 [0xffffffffffffffec]))) 4 {*arm_addsi3} (nil))

(note 153 152 4 2 NOTE_INSN_PROLOGUE_END)

(insn 4 153 12 2 arch/arm/kernel/process.c:303 (set (reg/v:SI 6 r6 [orig:155 addr ] [155])
        (reg:SI 0 r0 [ addr ])) 167 {*arm_movsi_insn} (nil))

(jump_insn:TI 12 4 13 2 arch/arm/kernel/process.c:313 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 115)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))
;; End of basic block 2 -> ( 12 3)
;; lr  out 	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]


;; Succ edge  12 [100.0%] 
;; Succ edge  3 [0.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 6 [r6] 13 [sp]
;; lr  use 	 1 [r1] 6 [r6] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 11 [fp] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 1 [r1] 6 [r6] 13 [sp]
;; live  gen 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 11 [fp]
;; live  kill	 14 [lr]

;; Pred edge  2 [0.0%]  (fallthru)
(note 13 12 25 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 25 13 20 3 NOTE_INSN_DELETED)

(insn:TI 20 25 17 3 arch/arm/kernel/process.c:324 (set (reg:SI 8 r8 [160])
        (and:SI (reg/v:SI 6 r6 [orig:155 addr ] [155])
            (const_int 3 [0x3]))) 67 {*arm_andsi3_insn} (nil))

(insn 17 20 15 3 arch/arm/kernel/process.c:316 (set (reg:SI 2 r2)
        (reg/v:SI 6 r6 [orig:155 addr ] [155])) 167 {*arm_movsi_insn} (nil))

(insn:TI 15 17 21 3 arch/arm/kernel/process.c:316 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x1159e8a0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x1159e8a0>)
        (nil)))

(insn 21 15 18 3 arch/arm/kernel/process.c:324 (set (reg:SI 8 r8 [161])
        (plus:SI (reg:SI 8 r8 [160])
            (const_int 256 [0x100]))) 4 {*arm_addsi3} (nil))

(call_insn:TI 18 21 22 3 arch/arm/kernel/process.c:316 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 22 18 149 3 arch/arm/kernel/process.c:324 (set (reg:SI 8 r8 [162])
        (plus:SI (reg:SI 8 r8 [161])
            (const_int 31 [0x1f]))) 4 {*arm_addsi3} (nil))

(insn:TI 149 22 42 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 3 r3)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn 42 149 141 3 arch/arm/kernel/process.c:327 (set (reg/v:SI 5 r5 [orig:138 i ] [138])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn:TI 141 42 19 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 4 r4 [orig:142 D.26609 ] [142])
        (and:SI (reg:SI 3 r3)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 3 r3)
        (nil)))

(insn 19 141 142 3 arch/arm/kernel/process.c:322 (set (reg/v/f:SI 6 r6 [orig:140 p ] [140])
        (and:SI (reg/v:SI 6 r6 [orig:155 addr ] [155])
            (const_int -4 [0xfffffffffffffffc]))) 67 {*arm_andsi3_insn} (nil))

(insn:TI 142 19 23 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 4 r4 [orig:142 D.26609 ] [142])
        (and:SI (reg/f:SI 4 r4 [orig:142 D.26609 ] [142])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 23 142 51 3 arch/arm/kernel/process.c:324 (set (reg/v:SI 8 r8 [orig:139 nlines ] [139])
        (ashiftrt:SI (reg:SI 8 r8 [162])
            (const_int 5 [0x5]))) 117 {*arm_shiftsi3} (nil))

(insn:TI 51 23 60 3 arch/arm/kernel/process.c:332 (set (reg:SI 9 r9 [orig:189 ivtmp.1032 ] [189])
        (reg/v:SI 5 r5 [orig:138 i ] [138])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 0 [0x0])
        (nil)))

(insn 60 51 107 3 arch/arm/kernel/process.c:335 (set (reg/f:SI 11 fp [190])
        (plus:SI (reg/f:SI 13 sp)
            (const_int 12 [0xc]))) 4 {*arm_addsi3} (expr_list:REG_EQUIV (plus:SI (reg/f:SI 13 sp)
            (const_int 12 [0xc]))
        (nil)))
;; End of basic block 3 -> ( 4)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 11 [fp] 13 [sp]


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 11 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 6 [r6] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 7 [r7]
;; live  kill	 14 [lr]

;; Pred edge  11 (dfs_back)
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 107 60 43 4 117 "" [1 uses])

(note 43 107 46 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 46 43 47 4 NOTE_INSN_DELETED)

(note 47 46 128 4 NOTE_INSN_DELETED)

(insn:TI 128 47 49 4 arch/arm/kernel/process.c:332 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x1164ff80>)) 167 {*arm_movsi_insn} (nil))

(insn 49 128 50 4 arch/arm/kernel/process.c:332 (set (reg:SI 1 r1)
        (zero_extend:SI (reg:HI 6 r6 [orig:140 p ] [140]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(call_insn:TI 50 49 129 4 arch/arm/kernel/process.c:332 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 129 50 98 4 arch/arm/kernel/process.c:332 (set (reg:SI 7 r7 [orig:135 ivtmp.1032 ] [135])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))
;; End of basic block 4 -> ( 5)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 13 [sp]


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 10 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 6 [r6] 7 [r7] 9 [r9] 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 10 [sl] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 10 [sl] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  10 [88.9%]  (dfs_back)
;; Pred edge  4 [100.0%]  (fallthru)
(code_label 98 129 52 5 116 "" [1 uses])

(note 52 98 61 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 61 52 73 5 NOTE_INSN_DELETED)

(note 73 61 56 5 NOTE_INSN_DELETED)

(insn:TI 56 73 53 5 include/linux/uaccess.h:18 (set (reg:SI 3 r3 [orig:173 <variable>.preempt_count ] [173])
        (mem/s/j:SI (plus:SI (reg/f:SI 4 r4 [orig:142 D.26609 ] [142])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/f:SI 4 r4 [orig:142 D.26609 ] [142])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (nil)))

(insn:TI 53 56 57 5 arch/arm/kernel/process.c:335 (set (reg/v:SI 10 sl [orig:141 old_fs ] [141])
        (mem/s/j:SI (plus:SI (reg/f:SI 4 r4 [orig:142 D.26609 ] [142])
                (const_int 8 [0x8])) [0 <variable>.addr_limit+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn:TI 57 53 55 5 include/linux/uaccess.h:18 (set (reg:SI 3 r3 [174])
        (plus:SI (reg:SI 3 r3 [orig:173 <variable>.preempt_count ] [173])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/f:SI 4 r4 [orig:142 D.26609 ] [142])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (nil)))

(insn 55 57 58 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/uaccess.h:65 (set (mem/s/j:SI (plus:SI (reg/f:SI 4 r4 [orig:142 D.26609 ] [142])
                (const_int 8 [0x8])) [0 <variable>.addr_limit+0 S4 A64])
        (reg:SI 9 r9 [orig:189 ivtmp.1032 ] [189])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn:TI 58 55 59 5 include/linux/uaccess.h:18 (set (mem/s/j:SI (plus:SI (reg/f:SI 4 r4 [orig:142 D.26609 ] [142])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (reg:SI 3 r3 [174])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [174])
        (nil)))

(insn:TI 59 58 125 5 include/linux/uaccess.h:23 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 8095453)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn:TI 125 59 137 5 arch/arm/kernel/process.c:335 (set (reg:SI 2 r2)
        (const_int 4 [0x4])) 167 {*arm_movsi_insn} (nil))

(insn 137 125 63 5 arch/arm/kernel/process.c:335 (set (reg:SI 0 r0)
        (reg/f:SI 11 fp [190])) 167 {*arm_movsi_insn} (nil))

(insn:TI 63 137 65 5 arch/arm/kernel/process.c:335 (set (reg:SI 1 r1)
        (plus:SI (reg/v/f:SI 6 r6 [orig:140 p ] [140])
            (reg:SI 7 r7 [orig:135 ivtmp.1032 ] [135]))) 4 {*arm_addsi3} (nil))

(call_insn:TI 65 63 66 5 arch/arm/kernel/process.c:335 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__copy_from_user") [flags 0x41] <function_decl 0x113eda00 __copy_from_user>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn:TI 66 65 67 5 arch/arm/kernel/process.c:335 (set (reg:SI 3 r3 [orig:137 D.26611 ] [137])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn:TI 67 66 68 5 include/linux/uaccess.h:32 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 8096605)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn:TI 68 67 69 5 include/linux/uaccess.h:33 (set (reg:SI 2 r2 [orig:177 <variable>.preempt_count ] [177])
        (mem/s/j:SI (plus:SI (reg/f:SI 4 r4 [orig:142 D.26609 ] [142])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/f:SI 4 r4 [orig:142 D.26609 ] [142])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (nil)))

(insn:TI 69 68 70 5 include/linux/uaccess.h:33 (set (reg:SI 2 r2 [178])
        (plus:SI (reg:SI 2 r2 [orig:177 <variable>.preempt_count ] [177])
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/f:SI 4 r4 [orig:142 D.26609 ] [142])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (nil)))

(insn 70 69 71 5 include/linux/uaccess.h:33 (set (mem/s/j:SI (plus:SI (reg/f:SI 4 r4 [orig:142 D.26609 ] [142])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (reg:SI 2 r2 [178])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [178])
        (nil)))

(insn:TI 71 70 72 5 include/linux/uaccess.h:37 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 8097245)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn:TI 72 71 74 5 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 2 r2 [orig:149 D.26594 ] [149])
        (mem/v:SI (reg/f:SI 4 r4 [orig:142 D.26609 ] [142]) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn:TI 74 72 75 5 include/asm-generic/bitops/non-atomic.h:105 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 2 r2 [orig:149 D.26594 ] [149])
                (const_int 1 [0x1])
                (const_int 1 [0x1]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg:SI 2 r2 [orig:149 D.26594 ] [149])
        (nil)))

(jump_insn:TI 75 74 76 5 include/asm-generic/bitops/non-atomic.h:105 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 78)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (nil)))
;; End of basic block 5 -> ( 6 7)
;; lr  out 	 0 [r0] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  6 [0.0%]  (fallthru)
;; Succ edge  7 [100.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 3 [r3]
;; live  kill	 14 [lr]

;; Pred edge  5 [0.0%]  (fallthru)
(note 76 75 147 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn:TI 147 76 77 6 include/linux/uaccess.h:38 discrim 1 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 0 r0 [3])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [3])
        (nil)))

(call_insn 77 147 148 6 include/linux/uaccess.h:38 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("preempt_schedule") [flags 0x41] <function_decl 0x10aa7a00 preempt_schedule>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(insn:TI 148 77 78 6 include/linux/uaccess.h:38 discrim 1 (set (reg:SI 3 r3)
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 6 -> ( 7)
;; lr  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 5 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 3 [r3] 4 [r4] 10 [sl] 13 [sp]
;; lr  def 	 0 [r0] 24 [cc]
;; live  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 24 [cc]
;; live  kill	

;; Pred edge  5 [100.0%] 
;; Pred edge  6 [100.0%]  (fallthru)
(code_label 78 148 79 7 113 "" [1 uses])

(note 79 78 81 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn:TI 81 79 126 7 arch/arm/kernel/process.c:335 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [orig:137 D.26611 ] [137])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [orig:137 D.26611 ] [137])
        (nil)))

(insn 126 81 80 7 arch/arm/kernel/process.c:338 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC6") [flags 0x82] <string_cst 0x1165cdc0>)) 167 {*arm_movsi_insn} (nil))

(insn:TI 80 126 82 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/uaccess.h:65 (set (mem/s/j:SI (plus:SI (reg/f:SI 4 r4 [orig:142 D.26609 ] [142])
                (const_int 8 [0x8])) [0 <variable>.addr_limit+0 S4 A64])
        (reg/v:SI 10 sl [orig:141 old_fs ] [141])) 167 {*arm_movsi_insn} (nil))

(jump_insn:TI 82 80 83 7 arch/arm/kernel/process.c:335 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 89)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))
;; End of basic block 7 -> ( 8 9)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  8 [50.0%]  (fallthru)
;; Succ edge  9 [50.0%] 

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  7 [50.0%]  (fallthru)
(note 83 82 127 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn:TI 127 83 86 8 arch/arm/kernel/process.c:336 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC5") [flags 0x82] <string_cst 0x1165f7b0>)) 167 {*arm_movsi_insn} (nil))

(call_insn:TI 86 127 157 8 arch/arm/kernel/process.c:336 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_UNUSED (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(jump_insn 157 86 158 8 (set (pc)
        (label_ref 95)) 242 {*arm_jump} (nil))
;; End of basic block 8 -> ( 10)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  10 [100.0%] 

(barrier 158 157 89)

;; Start of basic block ( 7) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]

;; Pred edge  7 [50.0%] 
(code_label 89 158 90 9 114 "" [1 uses])

(note 90 89 93 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn:TI 93 90 94 9 arch/arm/kernel/process.c:338 (set (reg:SI 1 r1)
        (mem/c/i:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 12 [0xc])) [0 data+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn:TI 94 93 95 9 arch/arm/kernel/process.c:338 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 9 -> ( 10)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  10 [100.0%]  (fallthru)

;; Start of basic block ( 9 8) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 7 [r7] 13 [sp]
;; lr  def 	 7 [r7] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 7 [r7] 24 [cc]
;; live  kill	

;; Pred edge  9 [100.0%]  (fallthru)
;; Pred edge  8 [100.0%] 
(code_label 95 94 96 10 115 "" [1 uses])

(note 96 95 97 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn:TI 97 96 99 10 arch/arm/kernel/process.c:338 (set (reg:SI 7 r7 [orig:135 ivtmp.1032 ] [135])
        (plus:SI (reg:SI 7 r7 [orig:135 ivtmp.1032 ] [135])
            (const_int 4 [0x4]))) 4 {*arm_addsi3} (nil))

(insn:TI 99 97 100 10 arch/arm/kernel/process.c:333 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 7 r7 [orig:135 ivtmp.1032 ] [135])
            (const_int 32 [0x20]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn:TI 100 99 101 10 arch/arm/kernel/process.c:333 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 98)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))
;; End of basic block 10 -> ( 5 11)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  5 [88.9%]  (dfs_back)
;; Succ edge  11 [11.1%]  (fallthru,loop_exit)

;; Start of basic block ( 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 5 [r5] 6 [r6] 8 [r8] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 5 [r5] 6 [r6] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  10 [11.1%]  (fallthru,loop_exit)
(note 101 100 106 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn:TI 106 101 138 11 arch/arm/kernel/process.c:327 (set (reg/v:SI 5 r5 [orig:138 i ] [138])
        (plus:SI (reg/v:SI 5 r5 [orig:138 i ] [138])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 138 106 105 11 arch/arm/kernel/process.c:342 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC7") [flags 0x82] <string_cst 0x1165cfc0>)) 167 {*arm_movsi_insn} (nil))

(call_insn:TI 105 138 108 11 arch/arm/kernel/process.c:342 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_UNUSED (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 108 105 102 11 arch/arm/kernel/process.c:327 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 5 r5 [orig:138 i ] [138])
            (reg/v:SI 8 r8 [orig:139 nlines ] [139]))) 219 {*arm_cmpsi_insn} (nil))

(insn:TI 102 108 109 11 arch/arm/kernel/process.c:333 discrim 1 (set (reg/v/f:SI 6 r6 [orig:140 p ] [140])
        (plus:SI (reg/v/f:SI 6 r6 [orig:140 p ] [140])
            (const_int 32 [0x20]))) 4 {*arm_addsi3} (nil))

(jump_insn:TI 109 102 115 11 arch/arm/kernel/process.c:327 discrim 1 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 107)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))
;; End of basic block 11 -> ( 4 12)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  4 (dfs_back)
;; Succ edge  12 [100.0%]  (fallthru,loop_exit)

;; Start of basic block ( 11 2) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  11 [100.0%]  (fallthru,loop_exit)
;; Pred edge  2 [100.0%] 
(code_label 115 109 118 12 118 "" [1 uses])

(note 118 115 154 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(note 154 118 155 12 NOTE_INSN_EPILOGUE_BEG)

(jump_insn:TI 155 154 156 12 arch/arm/kernel/process.c:344 (unspec_volatile [
            (return)
        ] 1) 323 {*epilogue_insns} (nil))
;; End of basic block 12 -> ( 1)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%] 

(barrier 156 155 144)

(note 144 156 146 NOTE_INSN_DELETED)

(note 146 144 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function __show_regs (__show_regs)[0:1355]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 2 from 376 to 380 -- after reload
;;   ======================================================

;;	  0-->   376 {[--sp]=unspec[r4] 2;use r5;use r6:cortex_a8_load_store_2
;;	  1-->   377 sp=sp-0x64                        :cortex_a8_default
;;	  2-->   363 r3=sp                             :cortex_a8_default
;;	  2-->     2 r4=r0                             :cortex_a8_default
;;	  3-->   357 r5=r3&0xffffffffffffe03f          :cortex_a8_default
;;	  3-->    12 r8=const(`init_uts_ns'+0xc7)      :cortex_a8_load_store_1
;;	  4-->   358 r5=r5&0xffffffffffffffc0          :cortex_a8_default
;;	  4-->   135 r6=0x0                            :cortex_a8_default
;;	  5-->   193 r7=sp+0x20                        :cortex_a8_default
;;	  6-->     9 sl=[r5+0x14]                      :cortex_a8_load_store_1
;;	  6-->    10 r0=call [`print_tainted']         :cortex_a8_issue_branch
;;	  7-->    15 r1=`*.LC8'                        :cortex_a8_load_store_1
;;	 38-->    11 r9=r0                             :cortex_a8_default
;;	 38-->    14 r0=r8                             :cortex_a8_default
;;	 39-->    16 r0=call [`strcspn']               :cortex_a8_issue_branch
;;	 39-->    26 r2=r9                             :cortex_a8_default
;;	 40-->    25 r1=sl                             :cortex_a8_default
;;	 40-->    27 r3=const(`init_uts_ns'+0x86)      :cortex_a8_load_store_1
;;	 41-->    23 [sp+0x4]=r8                       :cortex_a8_load_store_1
;;	 71-->    21 [sp]=r0                           :cortex_a8_load_store_1
;;	 72-->    24 r0=`*.LC9'                        :cortex_a8_load_store_1
;;	 73-->    28 r0=call [`printk']                :cortex_a8_issue_branch
;;	 73-->    29 r3=[r4+0x3c]                      :cortex_a8_load_store_1
;;	 74-->    34 r0=`*.LC10'                       :cortex_a8_load_store_1
;;	 75-->    35 r1=r3                             :cortex_a8_default
;;	 76-->    36 call [`__print_symbol']           :cortex_a8_issue_branch
;;	 76-->    37 r3=[r4+0x38]                      :cortex_a8_load_store_1
;;	 77-->    42 r0=`*.LC11'                       :cortex_a8_load_store_1
;;	 78-->    43 r1=r3                             :cortex_a8_default
;;	 79-->    44 call [`__print_symbol']           :cortex_a8_issue_branch
;;	 79-->    46 r8=[r4+0x34]                      :cortex_a8_load_store_1
;;	 80-->    48 lr=[r4+0x30]                      :cortex_a8_load_store_1
;;	 81-->    50 ip=[r4+0x2c]                      :cortex_a8_load_store_1
;;	 82-->    53 r1=[r4+0x3c]                      :cortex_a8_load_store_1
;;	 83-->    54 r2=[r4+0x38]                      :cortex_a8_load_store_1
;;	 84-->    55 r3=[r4+0x40]                      :cortex_a8_load_store_1
;;	 85-->    52 r0=`*.LC12'                       :cortex_a8_load_store_1
;;	 86-->    49 [sp+0x4]=lr                       :cortex_a8_load_store_1
;;	 87-->    47 [sp]=r8                           :cortex_a8_load_store_1
;;	 88-->    51 [sp+0x8]=ip                       :cortex_a8_load_store_1
;;	 88-->    56 r0=call [`printk']                :cortex_a8_issue_branch
;;	 89-->    59 r1=[r4+0x28]                      :cortex_a8_load_store_1
;;	 90-->    60 r2=[r4+0x24]                      :cortex_a8_load_store_1
;;	 91-->    61 r3=[r4+0x20]                      :cortex_a8_load_store_1
;;	 92-->    58 r0=`*.LC13'                       :cortex_a8_load_store_1
;;	 93-->    62 r0=call [`printk']                :cortex_a8_issue_branch
;;	 93-->    64 ip=[r4+0x10]                      :cortex_a8_load_store_1
;;	 94-->    67 r1=[r4+0x1c]                      :cortex_a8_load_store_1
;;	 95-->    68 r2=[r4+0x18]                      :cortex_a8_load_store_1
;;	 96-->    69 r3=[r4+0x14]                      :cortex_a8_load_store_1
;;	 97-->    66 r0=`*.LC14'                       :cortex_a8_load_store_1
;;	 98-->    65 [sp]=ip                           :cortex_a8_load_store_1
;;	 98-->    70 r0=call [`printk']                :cortex_a8_issue_branch
;;	 99-->    72 ip=[r4]                           :cortex_a8_load_store_1
;;	100-->    75 r1=[r4+0xc]                       :cortex_a8_load_store_1
;;	101-->    76 r2=[r4+0x8]                       :cortex_a8_load_store_1
;;	102-->    77 r3=[r4+0x4]                       :cortex_a8_load_store_1
;;	103-->    74 r0=`*.LC15'                       :cortex_a8_load_store_1
;;	104-->    73 [sp]=ip                           :cortex_a8_load_store_1
;;	104-->    78 r0=call [`printk']                :cortex_a8_issue_branch
;;	105-->    79 r0=[r4+0x40]                      :cortex_a8_load_store_1
;;	105-->   198 r1=r7                             :cortex_a8_default
;;	106-->   163 lr=`*.LANCHOR2'                   :cortex_a8_load_store_1
;;	107-->   169 r2=r0&0x1000000                   :cortex_a8_default
;;	107-->   371 cc=cmp(r0,r6)                     :cortex_a8_default
;;	108-->   168 r3=zxt(r0,0x1,0x5)                :cortex_a8_default
;;	108-->   372 (cc<0x0) r8=0x4e                  :cortex_a8_default
;;	109-->   373 (cc>=0x0) r8=0x6e                 :cortex_a8_default
;;	109-->   171 r2=r2 0>>0x17|r3                  :cortex_a8_default
;;	110-->    94 cc=cmp(zxt(r0,0x1,0x1e),0x0)      :cortex_a8_default
;;	110-->   341 ip=`*.LC17'                       :cortex_a8_load_store_1
;;	111-->   350 sl={(cc!=0x0)?0x5a:0x7a}          :cortex_a8_default
;;	111-->   108 cc=cmp(zxt(r0,0x1,0x1d),0x0)      :cortex_a8_default
;;	112-->   174 r2=r2*0x4+lr                      :cortex_a8_default
;;	112-->   340 fp={(cc!=0x0)?0x43:0x63}          :cortex_a8_default
;;	113-->   342 r3=`*.LC16'                       :cortex_a8_load_store_1
;;	113-->   122 cc=cmp(zxt(r0,0x1,0x1c),0x0)      :cortex_a8_default
;;	114-->   164 r9=r0&0x1f                        :cortex_a8_default
;;	114-->   364 [sp+0x14]=r8                      :cortex_a8_load_store_1
;;	115-->   365 [sp+0x1c]=fp                      :cortex_a8_load_store_1
;;	115-->   356 r8={(cc!=0x0)?0x56:0x76}          :cortex_a8_default
;;	116-->   140 cc=cmp(zxt(r0,0x1,0x7),0x0)       :cortex_a8_default
;;	116-->   366 [sp+0x18]=r8                      :cortex_a8_load_store_1
;;	117-->   367 r8=[r5+0x8]                       :cortex_a8_load_store_1
;;	118-->   176 fp=[r2+0x80]                      :cortex_a8_load_store_1
;;	118-->   344 r2={(cc!=0x0)?ip:r3}              :cortex_a8_default
;;	119-->   165 r9=[r9*0x4+lr]                    :cortex_a8_load_store_1
;;	119-->   152 cc=cmp(zxt(r0,0x1,0x6),0x0)       :cortex_a8_default
;;	120-->   361 lr=`*.LC19'                       :cortex_a8_load_store_1
;;	120-->   354 r3={(cc!=0x0)?ip:r3}              :cortex_a8_default
;;	121-->   374 cc=cmp(r8,r6)                     :cortex_a8_default
;;	121-->   360 ip=`*.LC18'                       :cortex_a8_load_store_1
;;	122-->   375 (!cc) ip=lr                       :cortex_a8_default
;;	122-->   368 lr=[sp+0x14]                      :cortex_a8_load_store_1
;;	123-->   369 r8=[sp+0x1c]                      :cortex_a8_load_store_1
;;	124-->   197 r0=`*.LC20'                       :cortex_a8_load_store_1
;;	125-->    92 [sp+0x20]=lr                      :cortex_a8_load_store_1
;;	126-->   370 lr=[sp+0x18]                      :cortex_a8_load_store_1
;;	127-->   196 [sp+0x8]=ip                       :cortex_a8_load_store_1
;;	128-->   106 [sp+0x21]=sl                      :cortex_a8_load_store_1
;;	129-->   134 [sp+0x23]=lr                      :cortex_a8_load_store_1
;;	130-->   120 [sp+0x22]=r8                      :cortex_a8_load_store_1
;;	131-->   194 [sp]=r9                           :cortex_a8_load_store_1
;;	132-->   195 [sp+0x4]=fp                       :cortex_a8_load_store_1
;;	133-->   137 [sp+0x24]=r6                      :cortex_a8_load_store_1
;;	133-->   201 r0=call [`printk']                :cortex_a8_issue_branch
;;	134-->   205 {r3=asm_operands;ip=asm_operands;}:nothing
;;	135-->   210 r1=0x40                           :cortex_a8_default
;;	135-->   211 r2=`*.LC21'                       :cortex_a8_load_store_1
;;	136-->   209 r0=r7                             :cortex_a8_default
;;	136-->   208 [sp]=ip                           :cortex_a8_load_store_1
;;	137-->   204 [sp+0x20]=r6                      :cortex_a8_load_store_1
;;	137-->   213 r0=call [`snprintf']              :cortex_a8_issue_branch
;;	138-->   219 r2=r7                             :cortex_a8_default
;;	138-->   217 r0=`*.LC22'                       :cortex_a8_load_store_1
;;	139-->   214 r1=asm_operands                   :nothing
;;	140-->   220 r0=call [`printk']                :cortex_a8_issue_branch
;;	140-->   230 r0=[r4+0x3c]                      :cortex_a8_load_store_1
;;	141-->   224 r7=[r5+0x8]                       :cortex_a8_load_store_1
;;	142-->   234 r1=`*.LC23'                       :cortex_a8_load_store_1
;;	142-->   233 r0=r0-0x80                        :cortex_a8_default
;;	143-->   229 [r5+0x8]=r6                       :cortex_a8_load_store_1
;;	144-->   235 call [`show_data.clone.0']        :cortex_a8_issue_branch
;;	144-->   236 r0=[r4+0x38]                      :cortex_a8_load_store_1
;;	145-->   240 r1=`*.LC24'                       :cortex_a8_load_store_1
;;	146-->   239 r0=r0-0x80                        :cortex_a8_default
;;	147-->   241 call [`show_data.clone.0']        :cortex_a8_issue_branch
;;	147-->   242 r0=[r4+0x34]                      :cortex_a8_load_store_1
;;	148-->   246 r1=`*.LC25'                       :cortex_a8_load_store_1
;;	149-->   245 r0=r0-0x80                        :cortex_a8_default
;;	150-->   247 call [`show_data.clone.0']        :cortex_a8_issue_branch
;;	150-->   248 r0=[r4+0x30]                      :cortex_a8_load_store_1
;;	151-->   252 r1=`*.LC26'                       :cortex_a8_load_store_1
;;	152-->   251 r0=r0-0x80                        :cortex_a8_default
;;	153-->   253 call [`show_data.clone.0']        :cortex_a8_issue_branch
;;	153-->   254 r0=[r4+0x2c]                      :cortex_a8_load_store_1
;;	154-->   258 r1=`*.LC27'                       :cortex_a8_load_store_1
;;	155-->   257 r0=r0-0x80                        :cortex_a8_default
;;	156-->   259 call [`show_data.clone.0']        :cortex_a8_issue_branch
;;	156-->   260 r0=[r4]                           :cortex_a8_load_store_1
;;	157-->   264 r1=`*.LC28'                       :cortex_a8_load_store_1
;;	158-->   263 r0=r0-0x80                        :cortex_a8_default
;;	159-->   265 call [`show_data.clone.0']        :cortex_a8_issue_branch
;;	159-->   266 r0=[r4+0x4]                       :cortex_a8_load_store_1
;;	160-->   270 r1=`*.LC29'                       :cortex_a8_load_store_1
;;	161-->   269 r0=r0-0x80                        :cortex_a8_default
;;	162-->   271 call [`show_data.clone.0']        :cortex_a8_issue_branch
;;	162-->   272 r0=[r4+0x8]                       :cortex_a8_load_store_1
;;	163-->   276 r1=`*.LC30'                       :cortex_a8_load_store_1
;;	164-->   275 r0=r0-0x80                        :cortex_a8_default
;;	165-->   277 call [`show_data.clone.0']        :cortex_a8_issue_branch
;;	165-->   278 r0=[r4+0xc]                       :cortex_a8_load_store_1
;;	166-->   282 r1=`*.LC31'                       :cortex_a8_load_store_1
;;	167-->   281 r0=r0-0x80                        :cortex_a8_default
;;	168-->   283 call [`show_data.clone.0']        :cortex_a8_issue_branch
;;	168-->   284 r0=[r4+0x10]                      :cortex_a8_load_store_1
;;	169-->   288 r1=`*.LC32'                       :cortex_a8_load_store_1
;;	170-->   287 r0=r0-0x80                        :cortex_a8_default
;;	171-->   289 call [`show_data.clone.0']        :cortex_a8_issue_branch
;;	171-->   290 r0=[r4+0x14]                      :cortex_a8_load_store_1
;;	172-->   294 r1=`*.LC33'                       :cortex_a8_load_store_1
;;	173-->   293 r0=r0-0x80                        :cortex_a8_default
;;	174-->   295 call [`show_data.clone.0']        :cortex_a8_issue_branch
;;	174-->   296 r0=[r4+0x18]                      :cortex_a8_load_store_1
;;	175-->   300 r1=`*.LC34'                       :cortex_a8_load_store_1
;;	176-->   299 r0=r0-0x80                        :cortex_a8_default
;;	177-->   301 call [`show_data.clone.0']        :cortex_a8_issue_branch
;;	177-->   302 r0=[r4+0x1c]                      :cortex_a8_load_store_1
;;	178-->   306 r1=`*.LC35'                       :cortex_a8_load_store_1
;;	179-->   305 r0=r0-0x80                        :cortex_a8_default
;;	180-->   307 call [`show_data.clone.0']        :cortex_a8_issue_branch
;;	180-->   308 r0=[r4+0x20]                      :cortex_a8_load_store_1
;;	181-->   312 r1=`*.LC36'                       :cortex_a8_load_store_1
;;	182-->   311 r0=r0-0x80                        :cortex_a8_default
;;	183-->   313 call [`show_data.clone.0']        :cortex_a8_issue_branch
;;	183-->   314 r0=[r4+0x24]                      :cortex_a8_load_store_1
;;	184-->   318 r1=`*.LC37'                       :cortex_a8_load_store_1
;;	185-->   317 r0=r0-0x80                        :cortex_a8_default
;;	186-->   319 call [`show_data.clone.0']        :cortex_a8_issue_branch
;;	186-->   320 r0=[r4+0x28]                      :cortex_a8_load_store_1
;;	187-->   324 r1=`*.LC38'                       :cortex_a8_load_store_1
;;	188-->   323 r0=r0-0x80                        :cortex_a8_default
;;	189-->   325 call [`show_data.clone.0']        :cortex_a8_issue_branch
;;	189-->   329 [r5+0x8]=r7                       :cortex_a8_load_store_1
;;	190-->   380 unspec/v{return;}                 :nothing
;;	Ready list (final):  
;;   total time = 190
;;   new head = 376
;;   new tail = 380





__show_regs

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;;  exit block uses 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 7[r7] 8[r8] 9[r9] 10[sl] 11[fp] 12[ip] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={73d,55u} r1={56d,27u} r2={40d,11u} r3={41d,13u} r4={2d,38u,21d} r5={3d,8u} r6={2d,7u} r7={3d,6u} r8={8d,11u} r9={4d,5u,1d} r10={3d,4u} r11={3d,4u} r12={35d,8u} r13={3d,58u,1d} r14={34d,8u} r15={28d} r16={28d} r17={28d} r18={28d} r19={28d} r20={28d} r21={28d} r22={28d} r23={28d} r24={35d,8u} r25={3d} r27={28d} r28={28d} r29={28d} r30={28d} r31={28d} r32={28d} r33={28d} r34={28d} r35={28d} r36={28d} r37={28d} r38={28d} r39={28d} r40={28d} r41={28d} r42={28d} r43={28d} r44={28d} r45={28d} r46={28d} r47={28d} r48={28d} r49={28d} r50={28d} r51={28d} r52={28d} r53={28d} r54={28d} r55={28d} r56={28d} r57={28d} r58={28d} r59={28d} r60={28d} r61={28d} r62={28d} r63={28d} r64={28d} r65={28d} r66={28d} r67={28d} r68={28d} r69={28d} r70={28d} r71={28d} r72={28d} r73={28d} r74={28d} r75={28d} r76={28d} r77={28d} r78={28d} r79={28d} r80={28d} r81={28d} r82={28d} r83={28d} r84={28d} r85={28d} r86={28d} r87={28d} r88={28d} r89={28d} r90={28d} r91={28d} r92={28d} r93={28d} r94={28d} r95={28d} r96={28d} r97={28d} r98={28d} r99={28d} r100={28d} r101={28d} r102={28d} r103={28d} r104={28d} r105={28d} r106={28d} r107={28d} r108={28d} r109={28d} r110={28d} r111={28d} r112={28d} r113={28d} r114={28d} r115={28d} r116={28d} r117={28d} r118={28d} r119={28d} r120={28d} r121={28d} r122={28d} r123={28d} r124={28d} r125={28d} r126={28d} r127={28d} 
;;    total ref usage 3722{3425d,271u,26e} in 185{157 regular + 28 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 7 2 NOTE_INSN_FUNCTION_BEG)

(note 7 3 17 2 NOTE_INSN_DELETED)

(note 17 7 80 2 NOTE_INSN_DELETED)

(note 80 17 93 2 NOTE_INSN_DELETED)

(note 93 80 107 2 NOTE_INSN_DELETED)

(note 107 93 121 2 NOTE_INSN_DELETED)

(note 121 107 139 2 NOTE_INSN_DELETED)

(note 139 121 151 2 NOTE_INSN_DELETED)

(note 151 139 167 2 NOTE_INSN_DELETED)

(note 167 151 170 2 NOTE_INSN_DELETED)

(note 170 167 173 2 NOTE_INSN_DELETED)

(note 173 170 181 2 NOTE_INSN_DELETED)

(note 181 173 231 2 NOTE_INSN_DELETED)

(note 231 181 237 2 NOTE_INSN_DELETED)

(note 237 231 243 2 NOTE_INSN_DELETED)

(note 243 237 249 2 NOTE_INSN_DELETED)

(note 249 243 255 2 NOTE_INSN_DELETED)

(note 255 249 261 2 NOTE_INSN_DELETED)

(note 261 255 267 2 NOTE_INSN_DELETED)

(note 267 261 273 2 NOTE_INSN_DELETED)

(note 273 267 279 2 NOTE_INSN_DELETED)

(note 279 273 285 2 NOTE_INSN_DELETED)

(note 285 279 291 2 NOTE_INSN_DELETED)

(note 291 285 297 2 NOTE_INSN_DELETED)

(note 297 291 303 2 NOTE_INSN_DELETED)

(note 303 297 309 2 NOTE_INSN_DELETED)

(note 309 303 315 2 NOTE_INSN_DELETED)

(note 315 309 321 2 NOTE_INSN_DELETED)

(note 321 315 180 2 NOTE_INSN_DELETED)

(note 180 321 376 2 NOTE_INSN_DELETED)

(insn/f:TI 376 180 377 2 arch/arm/kernel/process.c:372 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 4 r4)
                    ] 2))
            (use (reg:SI 5 r5))
            (use (reg:SI 6 r6))
            (use (reg:SI 7 r7))
            (use (reg:SI 8 r8))
            (use (reg:SI 9 r9))
            (use (reg:SI 10 sl))
            (use (reg:SI 11 fp))
            (use (reg:SI 14 lr))
        ]) 327 {*push_multi} (expr_list:REG_DEAD (reg:SI 14 lr)
        (expr_list:REG_DEAD (reg:SI 11 fp)
            (expr_list:REG_DEAD (reg:SI 10 sl)
                (expr_list:REG_DEAD (reg:SI 9 r9)
                    (expr_list:REG_DEAD (reg:SI 8 r8)
                        (expr_list:REG_DEAD (reg:SI 7 r7)
                            (expr_list:REG_DEAD (reg:SI 6 r6)
                                (expr_list:REG_DEAD (reg:SI 5 r5)
                                    (expr_list:REG_DEAD (reg:SI 4 r4)
                                        (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                                                    (set/f (reg/f:SI 13 sp)
                                                        (plus:SI (reg/f:SI 13 sp)
                                                            (const_int -36 [0xffffffffffffffdc])))
                                                    (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                                                        (reg:SI 4 r4))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 4 [0x4])) [0 S4 A32])
                                                        (reg:SI 5 r5))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 8 [0x8])) [0 S4 A32])
                                                        (reg:SI 6 r6))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 12 [0xc])) [0 S4 A32])
                                                        (reg:SI 7 r7))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 16 [0x10])) [0 S4 A32])
                                                        (reg:SI 8 r8))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 20 [0x14])) [0 S4 A32])
                                                        (reg:SI 9 r9))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 24 [0x18])) [0 S4 A32])
                                                        (reg:SI 10 sl))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 28 [0x1c])) [0 S4 A32])
                                                        (reg:SI 11 fp))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 32 [0x20])) [0 S4 A32])
                                                        (reg:SI 14 lr))
                                                ])
                                            (nil))))))))))))

(insn/f:TI 377 376 378 2 arch/arm/kernel/process.c:372 (set (reg/f:SI 13 sp)
        (plus:SI (reg/f:SI 13 sp)
            (const_int -100 [0xffffffffffffff9c]))) 4 {*arm_addsi3} (nil))

(note 378 377 363 2 NOTE_INSN_PROLOGUE_END)

(insn:TI 363 378 2 2 arch/arm/kernel/process.c:376 (set (reg:SI 3 r3)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn 2 363 357 2 arch/arm/kernel/process.c:372 (set (reg/v/f:SI 4 r4 [orig:158 regs ] [158])
        (reg:SI 0 r0 [ regs ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ regs ])
        (nil)))

(insn:TI 357 2 12 2 arch/arm/kernel/process.c:376 (set (reg:SI 5 r5 [159])
        (and:SI (reg:SI 3 r3)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 3 r3)
        (nil)))

(insn 12 357 358 2 arch/arm/kernel/process.c:376 (set (reg/f:SI 8 r8 [161])
        (const:SI (plus:SI (symbol_ref:SI ("init_uts_ns") [flags 0xc0] <var_decl 0x113e66c0 init_uts_ns>)
                (const_int 199 [0xc7])))) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("init_uts_ns") [flags 0xc0] <var_decl 0x113e66c0 init_uts_ns>)
                (const_int 199 [0xc7])))
        (nil)))

(insn:TI 358 12 135 2 arch/arm/kernel/process.c:376 (set (reg:SI 5 r5 [159])
        (and:SI (reg:SI 5 r5 [159])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 135 358 193 2 arch/arm/kernel/process.c:402 (set (reg:SI 6 r6 [189])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 0 [0x0])
        (nil)))

(insn:TI 193 135 9 2 arch/arm/kernel/process.c:404 discrim 9 (set (reg/f:SI 7 r7 [209])
        (plus:SI (reg/f:SI 13 sp)
            (const_int 32 [0x20]))) 4 {*arm_addsi3} (expr_list:REG_EQUIV (plus:SI (reg/f:SI 13 sp)
            (const_int 32 [0x20]))
        (nil)))

(insn:TI 9 193 10 2 arch/arm/kernel/process.c:376 (set (reg:SI 10 sl [orig:157 D.25923 ] [157])
        (mem/s/j:SI (plus:SI (reg:SI 5 r5 [159])
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn 10 9 15 2 arch/arm/kernel/process.c:376 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("print_tainted") [flags 0x41] <function_decl 0x10a82b00 print_tainted>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (nil))

(insn:TI 15 10 11 2 arch/arm/kernel/process.c:376 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC8") [flags 0x82] <string_cst 0x11556fa0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC8") [flags 0x82] <string_cst 0x11556fa0>)
        (nil)))

(insn:TI 11 15 14 2 arch/arm/kernel/process.c:376 (set (reg/f:SI 9 r9 [orig:156 D.25924 ] [156])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 14 11 16 2 arch/arm/kernel/process.c:376 (set (reg:SI 0 r0)
        (reg/f:SI 8 r8 [161])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("init_uts_ns") [flags 0xc0] <var_decl 0x113e66c0 init_uts_ns>)
                (const_int 199 [0xc7])))
        (nil)))

(call_insn/i:TI 16 14 26 2 arch/arm/kernel/process.c:376 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcspn") [flags 0x41] <function_decl 0x51157880 strcspn>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 26 16 25 2 arch/arm/kernel/process.c:376 (set (reg:SI 2 r2)
        (reg/f:SI 9 r9 [orig:156 D.25924 ] [156])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 9 r9 [orig:156 D.25924 ] [156])
        (nil)))

(insn:TI 25 26 27 2 arch/arm/kernel/process.c:376 (set (reg:SI 1 r1)
        (reg:SI 10 sl [orig:157 D.25923 ] [157])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 10 sl [orig:157 D.25923 ] [157])
        (nil)))

(insn 27 25 23 2 arch/arm/kernel/process.c:376 (set (reg:SI 3 r3)
        (const:SI (plus:SI (symbol_ref:SI ("init_uts_ns") [flags 0xc0] <var_decl 0x113e66c0 init_uts_ns>)
                (const_int 134 [0x86])))) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("init_uts_ns") [flags 0xc0] <var_decl 0x113e66c0 init_uts_ns>)
                (const_int 134 [0x86])))
        (nil)))

(insn:TI 23 27 21 2 arch/arm/kernel/process.c:376 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 8 r8 [161])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 8 r8 [161])
        (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("init_uts_ns") [flags 0xc0] <var_decl 0x113e66c0 init_uts_ns>)
                    (const_int 199 [0xc7])))
            (nil))))

(insn:TI 21 23 24 2 arch/arm/kernel/process.c:376 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn:TI 24 21 28 2 arch/arm/kernel/process.c:376 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC9") [flags 0x82] <string_cst 0x1158d840>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC9") [flags 0x82] <string_cst 0x1158d840>)
        (nil)))

(call_insn:TI 28 24 29 2 arch/arm/kernel/process.c:376 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_UNUSED (reg:SI 0 r0)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 29 28 34 2 include/linux/kallsyms.h:113 (set (reg:SI 3 r3 [orig:167 <variable>.uregs+60 ] [167])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:158 regs ] [158])
                (const_int 60 [0x3c])) [0 <variable>.uregs+60 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:158 regs ] [158])
                (const_int 60 [0x3c])) [0 <variable>.uregs+60 S4 A32])
        (nil)))

(insn:TI 34 29 35 2 include/linux/kallsyms.h:113 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC10") [flags 0x82] <string_cst 0x1158bf90>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC10") [flags 0x82] <string_cst 0x1158bf90>)
        (nil)))

(insn:TI 35 34 36 2 include/linux/kallsyms.h:113 (set (reg:SI 1 r1)
        (reg:SI 3 r3 [orig:167 <variable>.uregs+60 ] [167])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [orig:167 <variable>.uregs+60 ] [167])
        (nil)))

(call_insn:TI 36 35 37 2 include/linux/kallsyms.h:113 (parallel [
            (call (mem:SI (symbol_ref:SI ("__print_symbol") [flags 0x41] <function_decl 0x111b7680 __print_symbol>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 37 36 42 2 include/linux/kallsyms.h:113 (set (reg:SI 3 r3 [orig:170 <variable>.uregs+56 ] [170])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:158 regs ] [158])
                (const_int 56 [0x38])) [0 <variable>.uregs+56 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:158 regs ] [158])
                (const_int 56 [0x38])) [0 <variable>.uregs+56 S4 A32])
        (nil)))

(insn:TI 42 37 43 2 include/linux/kallsyms.h:113 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC11") [flags 0x82] <string_cst 0x115940f0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82] <string_cst 0x115940f0>)
        (nil)))

(insn:TI 43 42 44 2 include/linux/kallsyms.h:113 (set (reg:SI 1 r1)
        (reg:SI 3 r3 [orig:170 <variable>.uregs+56 ] [170])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [orig:170 <variable>.uregs+56 ] [170])
        (nil)))

(call_insn:TI 44 43 46 2 include/linux/kallsyms.h:113 (parallel [
            (call (mem:SI (symbol_ref:SI ("__print_symbol") [flags 0x41] <function_decl 0x111b7680 __print_symbol>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 46 44 48 2 arch/arm/kernel/process.c:383 (set (reg:SI 8 r8 [orig:174 <variable>.uregs+52 ] [174])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:158 regs ] [158])
                (const_int 52 [0x34])) [0 <variable>.uregs+52 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:158 regs ] [158])
                (const_int 52 [0x34])) [0 <variable>.uregs+52 S4 A32])
        (nil)))

(insn:TI 48 46 50 2 arch/arm/kernel/process.c:383 (set (reg:SI 14 lr [orig:175 <variable>.uregs+48 ] [175])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:158 regs ] [158])
                (const_int 48 [0x30])) [0 <variable>.uregs+48 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn:TI 50 48 53 2 arch/arm/kernel/process.c:383 (set (reg:SI 12 ip [orig:176 <variable>.uregs+44 ] [176])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:158 regs ] [158])
                (const_int 44 [0x2c])) [0 <variable>.uregs+44 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn:TI 53 50 54 2 arch/arm/kernel/process.c:383 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:158 regs ] [158])
                (const_int 60 [0x3c])) [0 <variable>.uregs+60 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn:TI 54 53 55 2 arch/arm/kernel/process.c:383 (set (reg:SI 2 r2)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:158 regs ] [158])
                (const_int 56 [0x38])) [0 <variable>.uregs+56 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn:TI 55 54 52 2 arch/arm/kernel/process.c:383 (set (reg:SI 3 r3)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:158 regs ] [158])
                (const_int 64 [0x40])) [0 <variable>.uregs+64 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn:TI 52 55 49 2 arch/arm/kernel/process.c:383 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC12") [flags 0x82] <string_cst 0x11659ee0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC12") [flags 0x82] <string_cst 0x11659ee0>)
        (nil)))

(insn:TI 49 52 47 2 arch/arm/kernel/process.c:383 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 14 lr [orig:175 <variable>.uregs+48 ] [175])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 14 lr [orig:175 <variable>.uregs+48 ] [175])
        (nil)))

(insn:TI 47 49 51 2 arch/arm/kernel/process.c:383 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg:SI 8 r8 [orig:174 <variable>.uregs+52 ] [174])) 167 {*arm_movsi_insn} (nil))

(insn:TI 51 47 56 2 arch/arm/kernel/process.c:383 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg:SI 12 ip [orig:176 <variable>.uregs+44 ] [176])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 12 ip [orig:176 <variable>.uregs+44 ] [176])
        (nil)))

(call_insn 56 51 59 2 arch/arm/kernel/process.c:383 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 16 [0x10])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_UNUSED (reg:SI 0 r0)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn:TI 59 56 60 2 arch/arm/kernel/process.c:387 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:158 regs ] [158])
                (const_int 40 [0x28])) [0 <variable>.uregs+40 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn:TI 60 59 61 2 arch/arm/kernel/process.c:387 (set (reg:SI 2 r2)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:158 regs ] [158])
                (const_int 36 [0x24])) [0 <variable>.uregs+36 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn:TI 61 60 58 2 arch/arm/kernel/process.c:387 (set (reg:SI 3 r3)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:158 regs ] [158])
                (const_int 32 [0x20])) [0 <variable>.uregs+32 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn:TI 58 61 62 2 arch/arm/kernel/process.c:387 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC13") [flags 0x82] <string_cst 0x1156d200>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC13") [flags 0x82] <string_cst 0x1156d200>)
        (nil)))

(call_insn:TI 62 58 64 2 arch/arm/kernel/process.c:387 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_UNUSED (reg:SI 0 r0)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 64 62 67 2 arch/arm/kernel/process.c:390 (set (reg:SI 12 ip [orig:179 <variable>.uregs+16 ] [179])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:158 regs ] [158])
                (const_int 16 [0x10])) [0 <variable>.uregs+16 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:158 regs ] [158])
                (const_int 16 [0x10])) [0 <variable>.uregs+16 S4 A32])
        (nil)))

(insn:TI 67 64 68 2 arch/arm/kernel/process.c:390 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:158 regs ] [158])
                (const_int 28 [0x1c])) [0 <variable>.uregs+28 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn:TI 68 67 69 2 arch/arm/kernel/process.c:390 (set (reg:SI 2 r2)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:158 regs ] [158])
                (const_int 24 [0x18])) [0 <variable>.uregs+24 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn:TI 69 68 66 2 arch/arm/kernel/process.c:390 (set (reg:SI 3 r3)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:158 regs ] [158])
                (const_int 20 [0x14])) [0 <variable>.uregs+20 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn:TI 66 69 65 2 arch/arm/kernel/process.c:390 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC14") [flags 0x82] <string_cst 0x115a7aa0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC14") [flags 0x82] <string_cst 0x115a7aa0>)
        (nil)))

(insn:TI 65 66 70 2 arch/arm/kernel/process.c:390 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg:SI 12 ip [orig:179 <variable>.uregs+16 ] [179])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 12 ip [orig:179 <variable>.uregs+16 ] [179])
        (nil)))

(call_insn 70 65 72 2 arch/arm/kernel/process.c:390 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_UNUSED (reg:SI 0 r0)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn:TI 72 70 75 2 arch/arm/kernel/process.c:393 (set (reg:SI 12 ip [orig:181 <variable>.uregs ] [181])
        (mem/s/j:SI (reg/v/f:SI 4 r4 [orig:158 regs ] [158]) [0 <variable>.uregs+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (reg/v/f:SI 4 r4 [orig:158 regs ] [158]) [0 <variable>.uregs+0 S4 A32])
        (nil)))

(insn:TI 75 72 76 2 arch/arm/kernel/process.c:393 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:158 regs ] [158])
                (const_int 12 [0xc])) [0 <variable>.uregs+12 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn:TI 76 75 77 2 arch/arm/kernel/process.c:393 (set (reg:SI 2 r2)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:158 regs ] [158])
                (const_int 8 [0x8])) [0 <variable>.uregs+8 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn:TI 77 76 74 2 arch/arm/kernel/process.c:393 (set (reg:SI 3 r3)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:158 regs ] [158])
                (const_int 4 [0x4])) [0 <variable>.uregs+4 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn:TI 74 77 73 2 arch/arm/kernel/process.c:393 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC15") [flags 0x82] <string_cst 0x115a7af0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC15") [flags 0x82] <string_cst 0x115a7af0>)
        (nil)))

(insn:TI 73 74 78 2 arch/arm/kernel/process.c:393 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg:SI 12 ip [orig:181 <variable>.uregs ] [181])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 12 ip [orig:181 <variable>.uregs ] [181])
        (nil)))

(call_insn 78 73 79 2 arch/arm/kernel/process.c:393 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_UNUSED (reg:SI 0 r0)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn:TI 79 78 198 2 arch/arm/kernel/process.c:397 (set (reg/v:SI 0 r0 [orig:145 flags ] [145])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:158 regs ] [158])
                (const_int 64 [0x40])) [0 <variable>.uregs+64 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:158 regs ] [158])
                (const_int 64 [0x40])) [0 <variable>.uregs+64 S4 A32])
        (nil)))

(insn 198 79 163 2 arch/arm/kernel/process.c:404 discrim 9 (set (reg:SI 1 r1)
        (reg/f:SI 7 r7 [209])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -64 [0xffffffffffffffc0]))
        (nil)))

(insn:TI 163 198 169 2 arch/arm/kernel/process.c:404 discrim 6 (set (reg/f:SI 14 lr [193])
        (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])
        (nil)))

(insn:TI 169 163 371 2 arch/arm/kernel/process.c:404 discrim 6 (set (reg:SI 2 r2 [198])
        (and:SI (reg/v:SI 0 r0 [orig:145 flags ] [145])
            (const_int 16777216 [0x1000000]))) 67 {*arm_andsi3_insn} (nil))

(insn 371 169 168 2 arch/arm/kernel/process.c:398 discrim 2 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 0 r0 [orig:145 flags ] [145])
            (reg:SI 6 r6))) 219 {*arm_cmpsi_insn} (nil))

(insn:TI 168 371 372 2 arch/arm/kernel/process.c:404 discrim 6 (set (reg:SI 3 r3 [197])
        (zero_extract:SI (reg/v:SI 0 r0 [orig:145 flags ] [145])
            (const_int 1 [0x1])
            (const_int 5 [0x5]))) 124 {extzv_t2} (nil))

(insn 372 168 373 2 arch/arm/kernel/process.c:398 discrim 2 (cond_exec (lt (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 8 r8)
            (const_int 78 [0x4e]))) 2345 {neon_vornv2di+78} (nil))

(insn:TI 373 372 171 2 arch/arm/kernel/process.c:398 discrim 2 (cond_exec (ge (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 8 r8)
            (const_int 110 [0x6e]))) 2345 {neon_vornv2di+78} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 171 373 94 2 arch/arm/kernel/process.c:404 discrim 6 (set (reg:SI 2 r2 [200])
        (ior:SI (lshiftrt:SI (reg:SI 2 r2 [198])
                (const_int 23 [0x17]))
            (reg:SI 3 r3 [197]))) 270 {*arith_shiftsi} (expr_list:REG_DEAD (reg:SI 3 r3 [197])
        (nil)))

(insn:TI 94 171 341 2 arch/arm/kernel/process.c:399 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 0 r0 [orig:145 flags ] [145])
                (const_int 1 [0x1])
                (const_int 30 [0x1e]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(insn 341 94 350 2 arch/arm/kernel/process.c:404 discrim 1 (set (reg/f:SI 12 ip [271])
        (symbol_ref/v/f:SI ("*.LC17") [flags 0x82] <string_cst 0x116772a0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref/v/f:SI ("*.LC17") [flags 0x82] <string_cst 0x116772a0>)
        (nil)))

(insn:TI 350 341 108 2 arch/arm/kernel/process.c:399 discrim 2 (set (reg:SI 10 sl [orig:153 iftmp.344 ] [153])
        (if_then_else:SI (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (const_int 90 [0x5a])
            (const_int 122 [0x7a]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (nil)))

(insn 108 350 174 2 arch/arm/kernel/process.c:400 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 0 r0 [orig:145 flags ] [145])
                (const_int 1 [0x1])
                (const_int 29 [0x1d]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(insn:TI 174 108 340 2 arch/arm/kernel/process.c:404 discrim 6 (set (reg:SI 2 r2 [203])
        (plus:SI (mult:SI (reg:SI 2 r2 [200])
                (const_int 4 [0x4]))
            (reg/f:SI 14 lr [193]))) 270 {*arith_shiftsi} (nil))

(insn 340 174 342 2 arch/arm/kernel/process.c:400 discrim 2 (set (reg:SI 11 fp)
        (if_then_else:SI (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (const_int 67 [0x43])
            (const_int 99 [0x63]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (nil)))

(insn:TI 342 340 122 2 arch/arm/kernel/process.c:404 discrim 1 (set (reg/f:SI 3 r3 [272])
        (symbol_ref/v/f:SI ("*.LC16") [flags 0x82] <string_cst 0x116771c0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref/v/f:SI ("*.LC16") [flags 0x82] <string_cst 0x116771c0>)
        (nil)))

(insn 122 342 164 2 arch/arm/kernel/process.c:401 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 0 r0 [orig:145 flags ] [145])
                (const_int 1 [0x1])
                (const_int 28 [0x1c]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(insn:TI 164 122 364 2 arch/arm/kernel/process.c:404 discrim 6 (set (reg:SI 9 r9 [194])
        (and:SI (reg/v:SI 0 r0 [orig:145 flags ] [145])
            (const_int 31 [0x1f]))) 67 {*arm_andsi3_insn} (nil))

(insn 364 164 365 2 arch/arm/kernel/process.c:398 discrim 2 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 20 [0x14])) [0 %sfp+-76 S4 A32])
        (reg:SI 8 r8)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 8 r8)
        (nil)))

(insn:TI 365 364 356 2 arch/arm/kernel/process.c:400 discrim 2 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 28 [0x1c])) [0 %sfp+-68 S4 A32])
        (reg:SI 11 fp)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 11 fp)
        (nil)))

(insn 356 365 140 2 arch/arm/kernel/process.c:401 discrim 2 (set (reg:SI 8 r8)
        (if_then_else:SI (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (const_int 86 [0x56])
            (const_int 118 [0x76]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (nil)))

(insn:TI 140 356 366 2 arch/arm/kernel/process.c:404 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 0 r0 [orig:145 flags ] [145])
                (const_int 1 [0x1])
                (const_int 7 [0x7]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(insn 366 140 367 2 arch/arm/kernel/process.c:401 discrim 2 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 24 [0x18])) [0 %sfp+-72 S4 A32])
        (reg:SI 8 r8)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 8 r8)
        (nil)))

(insn:TI 367 366 176 2 arch/arm/kernel/process.c:404 discrim 8 (set (reg:SI 8 r8)
        (mem/s/j/c:SI (plus:SI (reg:SI 5 r5 [159])
                (const_int 8 [0x8])) [0 <variable>.addr_limit+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn:TI 176 367 344 2 arch/arm/kernel/process.c:404 discrim 6 (set (reg/f:SI 11 fp [orig:147 D.25990 ] [147])
        (mem/s/u/f/j:SI (plus:SI (reg:SI 2 r2 [203])
                (const_int 128 [0x80])) [0 isa_modes S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [203])
        (nil)))

(insn 344 176 165 2 arch/arm/kernel/process.c:404 discrim 1 (set (reg/f:SI 2 r2 [orig:150 iftmp.347 ] [150])
        (if_then_else:SI (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (reg/f:SI 12 ip [271])
            (reg/f:SI 3 r3 [272]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (nil)))

(insn:TI 165 344 152 2 arch/arm/kernel/process.c:404 discrim 6 (set (reg/f:SI 9 r9 [orig:148 D.25984 ] [148])
        (mem/s/u/f/j:SI (plus:SI (mult:SI (reg:SI 9 r9 [194])
                    (const_int 4 [0x4]))
                (reg/f:SI 14 lr [193])) [0 processor_modes S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 14 lr [193])
        (expr_list:REG_EQUAL (mem/s/u/f/j:SI (plus:SI (mult:SI (reg:SI 9 r9 [194])
                        (const_int 4 [0x4]))
                    (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])) [0 processor_modes S4 A32])
            (nil))))

(insn 152 165 361 2 arch/arm/kernel/process.c:406 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 0 r0 [orig:145 flags ] [145])
                (const_int 1 [0x1])
                (const_int 6 [0x6]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg/v:SI 0 r0 [orig:145 flags ] [145])
        (nil)))

(insn:TI 361 152 354 2 arch/arm/kernel/process.c:404 discrim 8 (set (reg/f:SI 14 lr [273])
        (symbol_ref/v/f:SI ("*.LC19") [flags 0x82] <string_cst 0x11677a00>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref/v/f:SI ("*.LC19") [flags 0x82] <string_cst 0x11677a00>)
        (nil)))

(insn 354 361 374 2 arch/arm/kernel/process.c:404 discrim 4 (set (reg/f:SI 3 r3 [orig:149 iftmp.348 ] [149])
        (if_then_else:SI (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (reg/f:SI 12 ip [271])
            (reg/f:SI 3 r3 [272]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_DEAD (reg/f:SI 12 ip [271])
            (nil))))

(insn:TI 374 354 360 2 arch/arm/kernel/process.c:404 discrim 8 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 8 r8)
            (reg:SI 6 r6))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 8 r8)
        (nil)))

(insn 360 374 375 2 arch/arm/kernel/process.c:404 discrim 8 (set (reg/f:SI 12 ip [274])
        (symbol_ref/v/f:SI ("*.LC18") [flags 0x82] <string_cst 0x11677900>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref/v/f:SI ("*.LC18") [flags 0x82] <string_cst 0x11677900>)
        (nil)))

(insn:TI 375 360 368 2 arch/arm/kernel/process.c:404 discrim 8 (cond_exec (eq (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg/f:SI 12 ip [orig:146 iftmp.349 ] [146])
            (reg/f:SI 14 lr [273]))) 2345 {neon_vornv2di+78} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_DEAD (reg/f:SI 14 lr [273])
            (nil))))

(insn 368 375 369 2 arch/arm/kernel/process.c:398 discrim 3 (set (reg:SI 14 lr)
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 20 [0x14])) [0 %sfp+-76 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn:TI 369 368 197 2 arch/arm/kernel/process.c:400 discrim 3 (set (reg:SI 8 r8)
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 28 [0x1c])) [0 %sfp+-68 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn:TI 197 369 92 2 arch/arm/kernel/process.c:404 discrim 9 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC20") [flags 0x82] <string_cst 0x112506c0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC20") [flags 0x82] <string_cst 0x112506c0>)
        (nil)))

(insn:TI 92 197 370 2 arch/arm/kernel/process.c:398 discrim 3 (set (mem/s/j:QI (plus:SI (reg/f:SI 13 sp)
                (const_int 32 [0x20])) [0 buf+0 S1 A64])
        (reg:QI 14 lr)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:QI 14 lr)
        (nil)))

(insn:TI 370 92 196 2 arch/arm/kernel/process.c:401 discrim 3 (set (reg:SI 14 lr)
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 24 [0x18])) [0 %sfp+-72 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn:TI 196 370 106 2 arch/arm/kernel/process.c:404 discrim 9 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 12 ip [orig:146 iftmp.349 ] [146])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 12 ip [orig:146 iftmp.349 ] [146])
        (nil)))

(insn:TI 106 196 134 2 arch/arm/kernel/process.c:399 discrim 3 (set (mem/s/j:QI (plus:SI (reg/f:SI 13 sp)
                (const_int 33 [0x21])) [0 buf+1 S1 A8])
        (reg:QI 10 sl [orig:153 iftmp.344 ] [153])) 178 {*arm_movqi_insn} (nil))

(insn:TI 134 106 120 2 arch/arm/kernel/process.c:401 discrim 3 (set (mem/s/j:QI (plus:SI (reg/f:SI 13 sp)
                (const_int 35 [0x23])) [0 buf+3 S1 A8])
        (reg:QI 14 lr)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:QI 14 lr)
        (nil)))

(insn:TI 120 134 194 2 arch/arm/kernel/process.c:400 discrim 3 (set (mem/s/j:QI (plus:SI (reg/f:SI 13 sp)
                (const_int 34 [0x22])) [0 buf+2 S1 A16])
        (reg:QI 8 r8)) 178 {*arm_movqi_insn} (nil))

(insn:TI 194 120 195 2 arch/arm/kernel/process.c:404 discrim 9 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg/f:SI 9 r9 [orig:148 D.25984 ] [148])) 167 {*arm_movsi_insn} (nil))

(insn:TI 195 194 137 2 arch/arm/kernel/process.c:404 discrim 9 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 11 fp [orig:147 D.25990 ] [147])) 167 {*arm_movsi_insn} (nil))

(insn:TI 137 195 201 2 arch/arm/kernel/process.c:402 (set (mem/s/j:QI (plus:SI (reg/f:SI 13 sp)
                (const_int 36 [0x24])) [0 buf+4 S1 A32])
        (reg:QI 6 r6 [189])) 178 {*arm_movqi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(call_insn 201 137 205 2 arch/arm/kernel/process.c:404 discrim 9 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 16 [0x10])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_UNUSED (reg:SI 0 r0)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn:TI 205 201 210 2 arch/arm/kernel/process.c:418 (parallel [
            (set (reg/v:SI 3 r3 [orig:143 transbase ] [143])
                (asm_operands:SI ("mrc p15, 0, %0, c2, c0
	mrc p15, 0, %1, c3, c0
") ("=r") 0 []
                     [] 8842942))
            (set (reg/v:SI 12 ip [orig:142 dac ] [142])
                (asm_operands:SI ("mrc p15, 0, %0, c2, c0
	mrc p15, 0, %1, c3, c0
") ("=r") 1 []
                     [] 8842942))
        ]) -1 (nil))

(insn:TI 210 205 211 2 arch/arm/kernel/process.c:421 (set (reg:SI 1 r1)
        (const_int 64 [0x40])) 167 {*arm_movsi_insn} (nil))

(insn 211 210 209 2 arch/arm/kernel/process.c:421 (set (reg:SI 2 r2)
        (symbol_ref/v/f:SI ("*.LC21") [flags 0x82] <string_cst 0x11673e00>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC21") [flags 0x82] <string_cst 0x11673e00>)
        (nil)))

(insn:TI 209 211 208 2 arch/arm/kernel/process.c:421 (set (reg:SI 0 r0)
        (reg/f:SI 7 r7 [209])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -64 [0xffffffffffffffc0]))
        (nil)))

(insn 208 209 204 2 arch/arm/kernel/process.c:421 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg/v:SI 12 ip [orig:142 dac ] [142])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 12 ip [orig:142 dac ] [142])
        (nil)))

(insn:TI 204 208 213 2 arch/arm/kernel/process.c:414 (set (mem/s/j:QI (plus:SI (reg/f:SI 13 sp)
                (const_int 32 [0x20])) [0 buf+0 S1 A64])
        (reg:QI 6 r6 [189])) 178 {*arm_movqi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(call_insn 213 204 219 2 arch/arm/kernel/process.c:421 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("snprintf") [flags 0x41] <function_decl 0x5115e680 snprintf>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_UNUSED (reg:SI 0 r0)
                    (expr_list:REG_EH_REGION (const_int 0 [0x0])
                        (nil))))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn:TI 219 213 217 2 arch/arm/kernel/process.c:427 (set (reg:SI 2 r2)
        (reg/f:SI 7 r7 [209])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 7 r7 [209])
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -64 [0xffffffffffffffc0]))
            (nil))))

(insn 217 219 214 2 arch/arm/kernel/process.c:427 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC22") [flags 0x82] <string_cst 0x11679960>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC22") [flags 0x82] <string_cst 0x11679960>)
        (nil)))

(insn:TI 214 217 220 2 arch/arm/kernel/process.c:425 (set (reg/v:SI 1 r1 [orig:144 ctrl ] [144])
        (asm_operands:SI ("mrc p15, 0, %0, c1, c0
") ("=r") 0 []
             [] 8843837)) -1 (nil))

(call_insn:TI 220 214 230 2 arch/arm/kernel/process.c:427 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 230 220 224 2 arch/arm/kernel/process.c:352 (set (reg:SI 0 r0 [orig:222 <variable>.uregs+60 ] [222])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:158 regs ] [158])
                (const_int 60 [0x3c])) [0 <variable>.uregs+60 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:158 regs ] [158])
                (const_int 60 [0x3c])) [0 <variable>.uregs+60 S4 A32])
        (nil)))

(insn:TI 224 230 234 2 arch/arm/kernel/process.c:350 (set (reg/v:SI 7 r7 [orig:134 fs ] [134])
        (mem/s/j:SI (plus:SI (reg:SI 5 r5 [159])
                (const_int 8 [0x8])) [0 <variable>.addr_limit+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn:TI 234 224 233 2 arch/arm/kernel/process.c:352 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC23") [flags 0x82] <string_cst 0x11677080>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC23") [flags 0x82] <string_cst 0x11677080>)
        (nil)))

(insn 233 234 229 2 arch/arm/kernel/process.c:352 (set (reg:SI 0 r0)
        (plus:SI (reg:SI 0 r0 [orig:222 <variable>.uregs+60 ] [222])
            (const_int -128 [0xffffffffffffff80]))) 4 {*arm_addsi3} (nil))

(insn:TI 229 233 235 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/uaccess.h:65 (set (mem/s/j:SI (plus:SI (reg:SI 5 r5 [159])
                (const_int 8 [0x8])) [0 <variable>.addr_limit+0 S4 A64])
        (reg:SI 6 r6 [189])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(call_insn:TI 235 229 236 2 arch/arm/kernel/process.c:352 (parallel [
            (call (mem:SI (symbol_ref:SI ("show_data.clone.0") [flags 0x3] <function_decl 0x1156b000 show_data.clone.0>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 236 235 240 2 arch/arm/kernel/process.c:353 (set (reg:SI 0 r0 [orig:225 <variable>.uregs+56 ] [225])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:158 regs ] [158])
                (const_int 56 [0x38])) [0 <variable>.uregs+56 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:158 regs ] [158])
                (const_int 56 [0x38])) [0 <variable>.uregs+56 S4 A32])
        (nil)))

(insn:TI 240 236 239 2 arch/arm/kernel/process.c:353 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC24") [flags 0x82] <string_cst 0x11677140>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC24") [flags 0x82] <string_cst 0x11677140>)
        (nil)))

(insn:TI 239 240 241 2 arch/arm/kernel/process.c:353 (set (reg:SI 0 r0)
        (plus:SI (reg:SI 0 r0 [orig:225 <variable>.uregs+56 ] [225])
            (const_int -128 [0xffffffffffffff80]))) 4 {*arm_addsi3} (nil))

(call_insn:TI 241 239 242 2 arch/arm/kernel/process.c:353 (parallel [
            (call (mem:SI (symbol_ref:SI ("show_data.clone.0") [flags 0x3] <function_decl 0x1156b000 show_data.clone.0>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 242 241 246 2 arch/arm/kernel/process.c:354 (set (reg:SI 0 r0 [orig:228 <variable>.uregs+52 ] [228])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:158 regs ] [158])
                (const_int 52 [0x34])) [0 <variable>.uregs+52 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:158 regs ] [158])
                (const_int 52 [0x34])) [0 <variable>.uregs+52 S4 A32])
        (nil)))

(insn:TI 246 242 245 2 arch/arm/kernel/process.c:354 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC25") [flags 0x82] <string_cst 0x11677120>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC25") [flags 0x82] <string_cst 0x11677120>)
        (nil)))

(insn:TI 245 246 247 2 arch/arm/kernel/process.c:354 (set (reg:SI 0 r0)
        (plus:SI (reg:SI 0 r0 [orig:228 <variable>.uregs+52 ] [228])
            (const_int -128 [0xffffffffffffff80]))) 4 {*arm_addsi3} (nil))

(call_insn:TI 247 245 248 2 arch/arm/kernel/process.c:354 (parallel [
            (call (mem:SI (symbol_ref:SI ("show_data.clone.0") [flags 0x3] <function_decl 0x1156b000 show_data.clone.0>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 248 247 252 2 arch/arm/kernel/process.c:355 (set (reg:SI 0 r0 [orig:231 <variable>.uregs+48 ] [231])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:158 regs ] [158])
                (const_int 48 [0x30])) [0 <variable>.uregs+48 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:158 regs ] [158])
                (const_int 48 [0x30])) [0 <variable>.uregs+48 S4 A32])
        (nil)))

(insn:TI 252 248 251 2 arch/arm/kernel/process.c:355 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC26") [flags 0x82] <string_cst 0x11677100>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC26") [flags 0x82] <string_cst 0x11677100>)
        (nil)))

(insn:TI 251 252 253 2 arch/arm/kernel/process.c:355 (set (reg:SI 0 r0)
        (plus:SI (reg:SI 0 r0 [orig:231 <variable>.uregs+48 ] [231])
            (const_int -128 [0xffffffffffffff80]))) 4 {*arm_addsi3} (nil))

(call_insn:TI 253 251 254 2 arch/arm/kernel/process.c:355 (parallel [
            (call (mem:SI (symbol_ref:SI ("show_data.clone.0") [flags 0x3] <function_decl 0x1156b000 show_data.clone.0>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 254 253 258 2 arch/arm/kernel/process.c:356 (set (reg:SI 0 r0 [orig:234 <variable>.uregs+44 ] [234])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:158 regs ] [158])
                (const_int 44 [0x2c])) [0 <variable>.uregs+44 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:158 regs ] [158])
                (const_int 44 [0x2c])) [0 <variable>.uregs+44 S4 A32])
        (nil)))

(insn:TI 258 254 257 2 arch/arm/kernel/process.c:356 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC27") [flags 0x82] <string_cst 0x11677220>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC27") [flags 0x82] <string_cst 0x11677220>)
        (nil)))

(insn:TI 257 258 259 2 arch/arm/kernel/process.c:356 (set (reg:SI 0 r0)
        (plus:SI (reg:SI 0 r0 [orig:234 <variable>.uregs+44 ] [234])
            (const_int -128 [0xffffffffffffff80]))) 4 {*arm_addsi3} (nil))

(call_insn:TI 259 257 260 2 arch/arm/kernel/process.c:356 (parallel [
            (call (mem:SI (symbol_ref:SI ("show_data.clone.0") [flags 0x3] <function_decl 0x1156b000 show_data.clone.0>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 260 259 264 2 arch/arm/kernel/process.c:357 (set (reg:SI 0 r0 [orig:237 <variable>.uregs ] [237])
        (mem/s/j:SI (reg/v/f:SI 4 r4 [orig:158 regs ] [158]) [0 <variable>.uregs+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (reg/v/f:SI 4 r4 [orig:158 regs ] [158]) [0 <variable>.uregs+0 S4 A32])
        (nil)))

(insn:TI 264 260 263 2 arch/arm/kernel/process.c:357 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC28") [flags 0x82] <string_cst 0x116770e0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC28") [flags 0x82] <string_cst 0x116770e0>)
        (nil)))

(insn:TI 263 264 265 2 arch/arm/kernel/process.c:357 (set (reg:SI 0 r0)
        (plus:SI (reg:SI 0 r0 [orig:237 <variable>.uregs ] [237])
            (const_int -128 [0xffffffffffffff80]))) 4 {*arm_addsi3} (nil))

(call_insn:TI 265 263 266 2 arch/arm/kernel/process.c:357 (parallel [
            (call (mem:SI (symbol_ref:SI ("show_data.clone.0") [flags 0x3] <function_decl 0x1156b000 show_data.clone.0>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 266 265 270 2 arch/arm/kernel/process.c:358 (set (reg:SI 0 r0 [orig:240 <variable>.uregs+4 ] [240])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:158 regs ] [158])
                (const_int 4 [0x4])) [0 <variable>.uregs+4 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:158 regs ] [158])
                (const_int 4 [0x4])) [0 <variable>.uregs+4 S4 A32])
        (nil)))

(insn:TI 270 266 269 2 arch/arm/kernel/process.c:358 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC29") [flags 0x82] <string_cst 0x11677340>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC29") [flags 0x82] <string_cst 0x11677340>)
        (nil)))

(insn:TI 269 270 271 2 arch/arm/kernel/process.c:358 (set (reg:SI 0 r0)
        (plus:SI (reg:SI 0 r0 [orig:240 <variable>.uregs+4 ] [240])
            (const_int -128 [0xffffffffffffff80]))) 4 {*arm_addsi3} (nil))

(call_insn:TI 271 269 272 2 arch/arm/kernel/process.c:358 (parallel [
            (call (mem:SI (symbol_ref:SI ("show_data.clone.0") [flags 0x3] <function_decl 0x1156b000 show_data.clone.0>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 272 271 276 2 arch/arm/kernel/process.c:359 (set (reg:SI 0 r0 [orig:243 <variable>.uregs+8 ] [243])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:158 regs ] [158])
                (const_int 8 [0x8])) [0 <variable>.uregs+8 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:158 regs ] [158])
                (const_int 8 [0x8])) [0 <variable>.uregs+8 S4 A32])
        (nil)))

(insn:TI 276 272 275 2 arch/arm/kernel/process.c:359 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC30") [flags 0x82] <string_cst 0x11677400>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC30") [flags 0x82] <string_cst 0x11677400>)
        (nil)))

(insn:TI 275 276 277 2 arch/arm/kernel/process.c:359 (set (reg:SI 0 r0)
        (plus:SI (reg:SI 0 r0 [orig:243 <variable>.uregs+8 ] [243])
            (const_int -128 [0xffffffffffffff80]))) 4 {*arm_addsi3} (nil))

(call_insn:TI 277 275 278 2 arch/arm/kernel/process.c:359 (parallel [
            (call (mem:SI (symbol_ref:SI ("show_data.clone.0") [flags 0x3] <function_decl 0x1156b000 show_data.clone.0>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 278 277 282 2 arch/arm/kernel/process.c:360 (set (reg:SI 0 r0 [orig:246 <variable>.uregs+12 ] [246])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:158 regs ] [158])
                (const_int 12 [0xc])) [0 <variable>.uregs+12 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:158 regs ] [158])
                (const_int 12 [0xc])) [0 <variable>.uregs+12 S4 A32])
        (nil)))

(insn:TI 282 278 281 2 arch/arm/kernel/process.c:360 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC31") [flags 0x82] <string_cst 0x11677320>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC31") [flags 0x82] <string_cst 0x11677320>)
        (nil)))

(insn:TI 281 282 283 2 arch/arm/kernel/process.c:360 (set (reg:SI 0 r0)
        (plus:SI (reg:SI 0 r0 [orig:246 <variable>.uregs+12 ] [246])
            (const_int -128 [0xffffffffffffff80]))) 4 {*arm_addsi3} (nil))

(call_insn:TI 283 281 284 2 arch/arm/kernel/process.c:360 (parallel [
            (call (mem:SI (symbol_ref:SI ("show_data.clone.0") [flags 0x3] <function_decl 0x1156b000 show_data.clone.0>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 284 283 288 2 arch/arm/kernel/process.c:361 (set (reg:SI 0 r0 [orig:249 <variable>.uregs+16 ] [249])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:158 regs ] [158])
                (const_int 16 [0x10])) [0 <variable>.uregs+16 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:158 regs ] [158])
                (const_int 16 [0x10])) [0 <variable>.uregs+16 S4 A32])
        (nil)))

(insn:TI 288 284 287 2 arch/arm/kernel/process.c:361 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC32") [flags 0x82] <string_cst 0x116774c0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC32") [flags 0x82] <string_cst 0x116774c0>)
        (nil)))

(insn:TI 287 288 289 2 arch/arm/kernel/process.c:361 (set (reg:SI 0 r0)
        (plus:SI (reg:SI 0 r0 [orig:249 <variable>.uregs+16 ] [249])
            (const_int -128 [0xffffffffffffff80]))) 4 {*arm_addsi3} (nil))

(call_insn:TI 289 287 290 2 arch/arm/kernel/process.c:361 (parallel [
            (call (mem:SI (symbol_ref:SI ("show_data.clone.0") [flags 0x3] <function_decl 0x1156b000 show_data.clone.0>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 290 289 294 2 arch/arm/kernel/process.c:362 (set (reg:SI 0 r0 [orig:252 <variable>.uregs+20 ] [252])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:158 regs ] [158])
                (const_int 20 [0x14])) [0 <variable>.uregs+20 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:158 regs ] [158])
                (const_int 20 [0x14])) [0 <variable>.uregs+20 S4 A32])
        (nil)))

(insn:TI 294 290 293 2 arch/arm/kernel/process.c:362 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC33") [flags 0x82] <string_cst 0x116776c0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC33") [flags 0x82] <string_cst 0x116776c0>)
        (nil)))

(insn:TI 293 294 295 2 arch/arm/kernel/process.c:362 (set (reg:SI 0 r0)
        (plus:SI (reg:SI 0 r0 [orig:252 <variable>.uregs+20 ] [252])
            (const_int -128 [0xffffffffffffff80]))) 4 {*arm_addsi3} (nil))

(call_insn:TI 295 293 296 2 arch/arm/kernel/process.c:362 (parallel [
            (call (mem:SI (symbol_ref:SI ("show_data.clone.0") [flags 0x3] <function_decl 0x1156b000 show_data.clone.0>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 296 295 300 2 arch/arm/kernel/process.c:363 (set (reg:SI 0 r0 [orig:255 <variable>.uregs+24 ] [255])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:158 regs ] [158])
                (const_int 24 [0x18])) [0 <variable>.uregs+24 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:158 regs ] [158])
                (const_int 24 [0x18])) [0 <variable>.uregs+24 S4 A32])
        (nil)))

(insn:TI 300 296 299 2 arch/arm/kernel/process.c:363 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC34") [flags 0x82] <string_cst 0x11677860>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC34") [flags 0x82] <string_cst 0x11677860>)
        (nil)))

(insn:TI 299 300 301 2 arch/arm/kernel/process.c:363 (set (reg:SI 0 r0)
        (plus:SI (reg:SI 0 r0 [orig:255 <variable>.uregs+24 ] [255])
            (const_int -128 [0xffffffffffffff80]))) 4 {*arm_addsi3} (nil))

(call_insn:TI 301 299 302 2 arch/arm/kernel/process.c:363 (parallel [
            (call (mem:SI (symbol_ref:SI ("show_data.clone.0") [flags 0x3] <function_decl 0x1156b000 show_data.clone.0>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 302 301 306 2 arch/arm/kernel/process.c:364 (set (reg:SI 0 r0 [orig:258 <variable>.uregs+28 ] [258])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:158 regs ] [158])
                (const_int 28 [0x1c])) [0 <variable>.uregs+28 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:158 regs ] [158])
                (const_int 28 [0x1c])) [0 <variable>.uregs+28 S4 A32])
        (nil)))

(insn:TI 306 302 305 2 arch/arm/kernel/process.c:364 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC35") [flags 0x82] <string_cst 0x11677820>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC35") [flags 0x82] <string_cst 0x11677820>)
        (nil)))

(insn:TI 305 306 307 2 arch/arm/kernel/process.c:364 (set (reg:SI 0 r0)
        (plus:SI (reg:SI 0 r0 [orig:258 <variable>.uregs+28 ] [258])
            (const_int -128 [0xffffffffffffff80]))) 4 {*arm_addsi3} (nil))

(call_insn:TI 307 305 308 2 arch/arm/kernel/process.c:364 (parallel [
            (call (mem:SI (symbol_ref:SI ("show_data.clone.0") [flags 0x3] <function_decl 0x1156b000 show_data.clone.0>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 308 307 312 2 arch/arm/kernel/process.c:365 (set (reg:SI 0 r0 [orig:261 <variable>.uregs+32 ] [261])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:158 regs ] [158])
                (const_int 32 [0x20])) [0 <variable>.uregs+32 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:158 regs ] [158])
                (const_int 32 [0x20])) [0 <variable>.uregs+32 S4 A32])
        (nil)))

(insn:TI 312 308 311 2 arch/arm/kernel/process.c:365 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC36") [flags 0x82] <string_cst 0x11677800>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC36") [flags 0x82] <string_cst 0x11677800>)
        (nil)))

(insn:TI 311 312 313 2 arch/arm/kernel/process.c:365 (set (reg:SI 0 r0)
        (plus:SI (reg:SI 0 r0 [orig:261 <variable>.uregs+32 ] [261])
            (const_int -128 [0xffffffffffffff80]))) 4 {*arm_addsi3} (nil))

(call_insn:TI 313 311 314 2 arch/arm/kernel/process.c:365 (parallel [
            (call (mem:SI (symbol_ref:SI ("show_data.clone.0") [flags 0x3] <function_decl 0x1156b000 show_data.clone.0>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 314 313 318 2 arch/arm/kernel/process.c:366 (set (reg:SI 0 r0 [orig:264 <variable>.uregs+36 ] [264])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:158 regs ] [158])
                (const_int 36 [0x24])) [0 <variable>.uregs+36 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:158 regs ] [158])
                (const_int 36 [0x24])) [0 <variable>.uregs+36 S4 A32])
        (nil)))

(insn:TI 318 314 317 2 arch/arm/kernel/process.c:366 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC37") [flags 0x82] <string_cst 0x116774a0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC37") [flags 0x82] <string_cst 0x116774a0>)
        (nil)))

(insn:TI 317 318 319 2 arch/arm/kernel/process.c:366 (set (reg:SI 0 r0)
        (plus:SI (reg:SI 0 r0 [orig:264 <variable>.uregs+36 ] [264])
            (const_int -128 [0xffffffffffffff80]))) 4 {*arm_addsi3} (nil))

(call_insn:TI 319 317 320 2 arch/arm/kernel/process.c:366 (parallel [
            (call (mem:SI (symbol_ref:SI ("show_data.clone.0") [flags 0x3] <function_decl 0x1156b000 show_data.clone.0>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 320 319 324 2 arch/arm/kernel/process.c:367 (set (reg:SI 0 r0 [orig:267 <variable>.uregs+40 ] [267])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:158 regs ] [158])
                (const_int 40 [0x28])) [0 <variable>.uregs+40 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn:TI 324 320 323 2 arch/arm/kernel/process.c:367 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC38") [flags 0x82] <string_cst 0x116779a0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC38") [flags 0x82] <string_cst 0x116779a0>)
        (nil)))

(insn:TI 323 324 325 2 arch/arm/kernel/process.c:367 (set (reg:SI 0 r0)
        (plus:SI (reg:SI 0 r0 [orig:267 <variable>.uregs+40 ] [267])
            (const_int -128 [0xffffffffffffff80]))) 4 {*arm_addsi3} (nil))

(call_insn:TI 325 323 329 2 arch/arm/kernel/process.c:367 (parallel [
            (call (mem:SI (symbol_ref:SI ("show_data.clone.0") [flags 0x3] <function_decl 0x1156b000 show_data.clone.0>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 329 325 379 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/uaccess.h:65 (set (mem/s/j:SI (plus:SI (reg:SI 5 r5 [159])
                (const_int 8 [0x8])) [0 <variable>.addr_limit+0 S4 A64])
        (reg/v:SI 7 r7 [orig:134 fs ] [134])) 167 {*arm_movsi_insn} (nil))

(note 379 329 380 2 NOTE_INSN_EPILOGUE_BEG)

(jump_insn:TI 380 379 381 2 arch/arm/kernel/process.c:432 (unspec_volatile [
            (return)
        ] 1) 323 {*epilogue_insns} (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%] 

(barrier 381 380 359)

(note 359 381 362 NOTE_INSN_DELETED)

(note 362 359 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function show_regs (show_regs)[0:1356]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 2 from 38 to 25 -- after reload
;;   ======================================================

;;	  0-->    38 {[--sp]=unspec[r4] 2;use lr;}     :cortex_a8_load_store_2
;;	  1-->     2 r4=r0                             :cortex_a8_default
;;	  2-->     7 r0=`*.LC7'                        :cortex_a8_load_store_1
;;	  3-->     8 r0=call [`printk']                :cortex_a8_issue_branch
;;	  3-->    37 r2=sp                             :cortex_a8_default
;;	  4-->    34 r3=r2&0xffffffffffffe03f          :cortex_a8_default
;;	  4-->    19 r0=`*.LC39'                       :cortex_a8_load_store_1
;;	  5-->    35 r3=r3&0xffffffffffffffc0          :cortex_a8_default
;;	  7-->    14 r3=[r3+0xc]                       :cortex_a8_load_store_1
;;	  9-->    21 r2=r3+0x2f4                       :cortex_a8_default
;;	 10-->    20 r1=[r3+0x214]                     :cortex_a8_load_store_1
;;	 11-->    22 r0=call [`printk']                :cortex_a8_issue_branch
;;	 11-->    23 r0=r4                             :cortex_a8_default
;;	 12-->    24 call [`__show_regs']              :cortex_a8_issue_branch
;;	 44-->    41 {unspec{lr;};unspec/v{return;};}  :nothing
;;	 45-->    25 call [`__backtrace']              :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 45
;;   new head = 38
;;   new tail = 25





show_regs

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;;  exit block uses 	 4 [r4] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 13[sp] 14[lr]
;;  ref usage 	r0={8d,4u} r1={6d,1u} r2={7d,2u} r3={8d,4u} r4={2d,3u} r12={4d} r13={2d,8u} r14={4d,3u} r15={4d} r16={4d} r17={4d} r18={4d} r19={4d} r20={4d} r21={4d} r22={4d} r23={4d} r24={4d} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r81={4d} r82={4d} r83={4d} r84={4d} r85={4d} r86={4d} r87={4d} r88={4d} r89={4d} r90={4d} r91={4d} r92={4d} r93={4d} r94={4d} r95={4d} r96={4d} r97={4d} r98={4d} r99={4d} r100={4d} r101={4d} r102={4d} r103={4d} r104={4d} r105={4d} r106={4d} r107={4d} r108={4d} r109={4d} r110={4d} r111={4d} r112={4d} r113={4d} r114={4d} r115={4d} r116={4d} r117={4d} r118={4d} r119={4d} r120={4d} r121={4d} r122={4d} r123={4d} r124={4d} r125={4d} r126={4d} r127={4d} 
;;    total ref usage 510{485d,25u,0e} in 16{12 regular + 4 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 13 [sp] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 6 2 NOTE_INSN_FUNCTION_BEG)

(note 6 3 11 2 NOTE_INSN_DELETED)

(note 11 6 12 2 NOTE_INSN_DELETED)

(note 12 11 18 2 NOTE_INSN_DELETED)

(note 18 12 38 2 NOTE_INSN_DELETED)

(insn/f:TI 38 18 39 2 arch/arm/kernel/process.c:435 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 4 r4)
                    ] 2))
            (use (reg:SI 14 lr))
        ]) 327 {*push_multi} (expr_list:REG_DEAD (reg:SI 14 lr)
        (expr_list:REG_DEAD (reg:SI 4 r4)
            (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                        (set/f (reg/f:SI 13 sp)
                            (plus:SI (reg/f:SI 13 sp)
                                (const_int -8 [0xfffffffffffffff8])))
                        (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                            (reg:SI 4 r4))
                        (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                    (const_int 4 [0x4])) [0 S4 A32])
                            (reg:SI 14 lr))
                    ])
                (nil)))))

(note 39 38 2 2 NOTE_INSN_PROLOGUE_END)

(insn:TI 2 39 7 2 arch/arm/kernel/process.c:435 (set (reg/v/f:SI 4 r4 [orig:135 regs ] [135])
        (reg:SI 0 r0 [ regs ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ regs ])
        (nil)))

(insn:TI 7 2 8 2 arch/arm/kernel/process.c:436 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC7") [flags 0x82] <string_cst 0x1165cfc0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC7") [flags 0x82] <string_cst 0x1165cfc0>)
        (nil)))

(call_insn:TI 8 7 37 2 arch/arm/kernel/process.c:436 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_UNUSED (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 37 8 34 2 arch/arm/kernel/process.c:437 (set (reg:SI 2 r2)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn:TI 34 37 19 2 arch/arm/kernel/process.c:437 (set (reg:SI 3 r3 [138])
        (and:SI (reg:SI 2 r2)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 2 r2)
        (nil)))

(insn 19 34 35 2 arch/arm/kernel/process.c:437 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC39") [flags 0x82] <string_cst 0x115524b0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC39") [flags 0x82] <string_cst 0x115524b0>)
        (nil)))

(insn:TI 35 19 14 2 arch/arm/kernel/process.c:437 (set (reg:SI 3 r3 [138])
        (and:SI (reg:SI 3 r3 [138])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn:TI 14 35 21 2 arch/arm/kernel/process.c:437 (set (reg/f:SI 3 r3 [orig:140 <variable>.task ] [140])
        (mem/s/f/j:SI (plus:SI (reg:SI 3 r3 [138])
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn:TI 21 14 20 2 arch/arm/kernel/process.c:437 (set (reg:SI 2 r2)
        (plus:SI (reg/f:SI 3 r3 [orig:140 <variable>.task ] [140])
            (const_int 756 [0x2f4]))) 4 {*arm_addsi3} (nil))

(insn:TI 20 21 22 2 arch/arm/kernel/process.c:437 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:140 <variable>.task ] [140])
                (const_int 532 [0x214])) [0 <variable>.pid+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 3 r3 [orig:140 <variable>.task ] [140])
        (nil)))

(call_insn:TI 22 20 23 2 arch/arm/kernel/process.c:437 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 23 22 24 2 arch/arm/kernel/process.c:438 (set (reg:SI 0 r0)
        (reg/v/f:SI 4 r4 [orig:135 regs ] [135])) 167 {*arm_movsi_insn} (nil))

(call_insn:TI 24 23 40 2 arch/arm/kernel/process.c:438 (parallel [
            (call (mem:SI (symbol_ref:SI ("__show_regs") [flags 0x3] <function_decl 0x512d9680 __show_regs>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(note 40 24 41 2 NOTE_INSN_EPILOGUE_BEG)

(insn:TI 41 40 25 2 arch/arm/kernel/process.c:440 (parallel [
            (unspec:SI [
                    (reg:SI 14 lr)
                ] 6)
            (unspec_volatile [
                    (return)
                ] 1)
        ]) 322 {sibcall_epilogue} (expr_list:REG_DEAD (reg:SI 14 lr)
        (nil)))

(call_insn/j:TI 25 41 26 2 arch/arm/kernel/process.c:439 (parallel [
            (call (mem:SI (symbol_ref:SI ("__backtrace") [flags 0x41] <function_decl 0x512d9500 __backtrace>) [0 S4 A32])
                (const_int 0 [0x0]))
            (return)
            (use (const_int 0 [0x0]))
        ]) 258 {*sibcall_insn} (nil)
    (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 26 25 36)

(note 36 26 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns
