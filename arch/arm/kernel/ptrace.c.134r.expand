
;; Function regs_query_register_name (regs_query_register_name)[0:1537]


;; Generating RTL for gimple basic block 2

;; ivtmp.457 = 0;

(insn 35 34 0 arch/arm/kernel/ptrace.c:111 (set (reg:SI 162 [ ivtmp.457 ])
        (const_int 0 [0x0])) -1 (nil))

;; Generating RTL for gimple basic block 3

;; D.26791 = (unsigned int) MEM[base: &regoffset_table + ivtmp.457, offset: 4];

(insn 39 38 40 arch/arm/kernel/ptrace.c:114 (set (reg/f:SI 167)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) -1 (nil))

(insn 40 39 41 arch/arm/kernel/ptrace.c:114 (set (reg:SI 168)
        (plus:SI (reg/f:SI 167)
            (reg:SI 162 [ ivtmp.457 ]))) -1 (nil))

(insn 41 40 0 arch/arm/kernel/ptrace.c:114 (set (reg:SI 164 [ D.26791 ])
        (mem/s/j:SI (plus:SI (reg:SI 168)
                (const_int 4 [0x4])) [0 <variable>.offset+0 S4 A32])) -1 (nil))

;; ivtmp.457 = ivtmp.457 + 8;

(insn 42 41 0 arch/arm/kernel/ptrace.c:114 (set (reg:SI 162 [ ivtmp.457 ])
        (plus:SI (reg:SI 162 [ ivtmp.457 ])
            (const_int 8 [0x8]))) -1 (nil))

;; if (D.26791 == offset)

(insn 43 42 44 arch/arm/kernel/ptrace.c:114 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 164 [ D.26791 ])
            (reg/v:SI 166 [ offset ]))) -1 (nil))

(jump_insn 44 43 0 arch/arm/kernel/ptrace.c:114 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 450 [0x1c2])
        (nil)))

;; Generating RTL for gimple basic block 4

;; 

(code_label 45 44 46 2 "" [0 uses])

(note 46 45 0 NOTE_INSN_BASIC_BLOCK)

;; D.26794 = MEM[base: &regoffset_table, index: ivtmp.457];

(insn 47 46 48 arch/arm/kernel/ptrace.c:113 discrim 1 (set (reg/f:SI 169)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) -1 (nil))

(insn 48 47 0 arch/arm/kernel/ptrace.c:113 discrim 1 (set (reg/f:SI 163 [ D.26794 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 169)
                (reg:SI 162 [ ivtmp.457 ])) [0 <variable>.name+0 S4 A32])) -1 (nil))

;; if (D.26794 != 0B)

(insn 50 48 51 arch/arm/kernel/ptrace.c:113 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 163 [ D.26794 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 51 50 0 arch/arm/kernel/ptrace.c:113 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 49)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 9550 [0x254e])
        (nil)))

;; Generating RTL for gimple basic block 5

;; 

(code_label 52 51 53 3 "" [0 uses])

(note 53 52 0 NOTE_INSN_BASIC_BLOCK)

;; return D.26794;

(insn 54 53 55 arch/arm/kernel/ptrace.c:117 (set (reg:SI 165 [ <result> ])
        (reg/f:SI 163 [ D.26794 ])) -1 (nil))

(jump_insn 55 54 56 arch/arm/kernel/ptrace.c:117 (set (pc)
        (label_ref 0)) -1 (nil))

(barrier 56 55 0)


;;
;; Full RTL generated for this function:
;;
(note 30 0 33 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 33 30 31 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 31 33 32 2 arch/arm/kernel/ptrace.c:111 (set (reg/v:SI 166 [ offset ])
        (reg:SI 0 r0 [ offset ])) -1 (nil))

(note 32 31 34 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 3)

;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [100.0%]  (fallthru)
(note 34 32 35 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 35 34 36 3 arch/arm/kernel/ptrace.c:111 (set (reg:SI 162 [ ivtmp.457 ])
        (const_int 0 [0x0])) -1 (nil))

(jump_insn 36 35 37 3 arch/arm/kernel/ptrace.c:113 (set (pc)
        (label_ref 45)) -1 (nil))
;; End of basic block 3 -> ( 5)

;; Succ edge  5 [100.0%] 

(barrier 37 36 49)

;; Start of basic block ( 5) -> 4
;; Pred edge  5 [95.5%] 
(code_label 49 37 38 4 4 "" [1 uses])

(note 38 49 39 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 39 38 40 4 arch/arm/kernel/ptrace.c:114 (set (reg/f:SI 167)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) -1 (nil))

(insn 40 39 41 4 arch/arm/kernel/ptrace.c:114 (set (reg:SI 168)
        (plus:SI (reg/f:SI 167)
            (reg:SI 162 [ ivtmp.457 ]))) -1 (nil))

(insn 41 40 42 4 arch/arm/kernel/ptrace.c:114 (set (reg:SI 164 [ D.26791 ])
        (mem/s/j:SI (plus:SI (reg:SI 168)
                (const_int 4 [0x4])) [0 <variable>.offset+0 S4 A32])) -1 (nil))

(insn 42 41 43 4 arch/arm/kernel/ptrace.c:114 (set (reg:SI 162 [ ivtmp.457 ])
        (plus:SI (reg:SI 162 [ ivtmp.457 ])
            (const_int 8 [0x8]))) -1 (nil))

(insn 43 42 44 4 arch/arm/kernel/ptrace.c:114 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 164 [ D.26791 ])
            (reg/v:SI 166 [ offset ]))) -1 (nil))

(jump_insn 44 43 45 4 arch/arm/kernel/ptrace.c:114 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 52)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 450 [0x1c2])
        (nil)))
;; End of basic block 4 -> ( 6 5)

;; Succ edge  6 [4.5%] 
;; Succ edge  5 [95.5%]  (fallthru,dfs_back)

;; Start of basic block ( 3 4) -> 5
;; Pred edge  3 [100.0%] 
;; Pred edge  4 [95.5%]  (fallthru,dfs_back)
(code_label 45 44 46 5 2 "" [1 uses])

(note 46 45 47 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 47 46 48 5 arch/arm/kernel/ptrace.c:113 discrim 1 (set (reg/f:SI 169)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) -1 (nil))

(insn 48 47 50 5 arch/arm/kernel/ptrace.c:113 discrim 1 (set (reg/f:SI 163 [ D.26794 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 169)
                (reg:SI 162 [ ivtmp.457 ])) [0 <variable>.name+0 S4 A32])) -1 (nil))

(insn 50 48 51 5 arch/arm/kernel/ptrace.c:113 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 163 [ D.26794 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 51 50 52 5 arch/arm/kernel/ptrace.c:113 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 49)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 9550 [0x254e])
        (nil)))
;; End of basic block 5 -> ( 4 6)

;; Succ edge  4 [95.5%] 
;; Succ edge  6 [4.5%]  (fallthru)

;; Start of basic block ( 4 5) -> 6
;; Pred edge  4 [4.5%] 
;; Pred edge  5 [4.5%]  (fallthru)
(code_label 52 51 53 6 3 "" [1 uses])

(note 53 52 54 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 54 53 55 6 arch/arm/kernel/ptrace.c:117 (set (reg:SI 165 [ <result> ])
        (reg/f:SI 163 [ D.26794 ])) -1 (nil))

(jump_insn 55 54 56 6 arch/arm/kernel/ptrace.c:117 (set (pc)
        (label_ref 57)) -1 (nil))
;; End of basic block 6 -> ( 8)

;; Succ edge  8 [100.0%] 

(barrier 56 55 65)

;; Start of basic block () -> 7
(note 65 56 59 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 59 65 60 7 arch/arm/kernel/ptrace.c:117 (clobber (reg/i:SI 0 r0)) -1 (nil))

(insn 60 59 61 7 arch/arm/kernel/ptrace.c:117 (clobber (reg:SI 165 [ <result> ])) -1 (nil))

(jump_insn 61 60 62 7 arch/arm/kernel/ptrace.c:117 (set (pc)
        (label_ref 63)) -1 (nil))
;; End of basic block 7 -> ( 9)

;; Succ edge  9 [100.0%] 

(barrier 62 61 57)

;; Start of basic block ( 6) -> 8
;; Pred edge  6 [100.0%] 
(code_label 57 62 66 8 1 "" [1 uses])

(note 66 57 58 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 58 66 63 8 arch/arm/kernel/ptrace.c:117 (set (reg/i:SI 0 r0)
        (reg:SI 165 [ <result> ])) -1 (nil))
;; End of basic block 8 -> ( 9)

;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 7 8) -> 9
;; Pred edge  7 [100.0%] 
;; Pred edge  8 [100.0%]  (fallthru)
(code_label 63 58 67 9 5 "" [1 uses])

(note 67 63 64 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 64 67 0 9 arch/arm/kernel/ptrace.c:117 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 9 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function regs_within_kernel_stack (regs_within_kernel_stack)[0:1538]


;; Generating RTL for gimple basic block 2

;; return ((addr ^ regs->uregs[13]) & 4294959104) == 0;

(insn 7 6 8 arch/arm/kernel/ptrace.c:131 (set (reg:SI 138)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 134 [ regs ])
                (const_int 52 [0x34])) [0 <variable>.uregs+52 S4 A32])) -1 (nil))

(insn 8 7 9 arch/arm/kernel/ptrace.c:131 (set (reg:SI 137)
        (xor:SI (reg/v:SI 135 [ addr ])
            (reg:SI 138))) -1 (nil))

(insn 9 8 10 arch/arm/kernel/ptrace.c:131 (set (reg:SI 140)
        (and:SI (reg:SI 137)
            (const_int -8129 [0xffffffffffffe03f]))) -1 (nil))

(insn 10 9 11 arch/arm/kernel/ptrace.c:131 (set (reg:SI 139)
        (and:SI (reg:SI 140)
            (const_int -64 [0xffffffffffffffc0]))) -1 (expr_list:REG_EQUAL (and:SI (reg:SI 137)
            (const_int -8192 [0xffffffffffffe000]))
        (nil)))

(insn 11 10 12 arch/arm/kernel/ptrace.c:131 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 139)
            (const_int 0 [0x0]))) -1 (nil))

(insn 12 11 13 arch/arm/kernel/ptrace.c:131 (set (reg:SI 141)
        (eq:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) -1 (nil))

(insn 13 12 14 arch/arm/kernel/ptrace.c:131 (set (reg:QI 136)
        (subreg:QI (reg:SI 141) 0)) -1 (nil))

(insn 14 13 15 arch/arm/kernel/ptrace.c:131 (set (reg:SI 142)
        (zero_extend:SI (reg:QI 136))) -1 (nil))

(insn 15 14 16 arch/arm/kernel/ptrace.c:131 (set (reg:SI 133 [ <result> ])
        (reg:SI 142)) -1 (nil))

(jump_insn 16 15 17 arch/arm/kernel/ptrace.c:131 (set (pc)
        (label_ref 0)) -1 (nil))

(barrier 17 16 0)


;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 5 3 2 arch/arm/kernel/ptrace.c:128 (set (reg/v/f:SI 134 [ regs ])
        (reg:SI 0 r0 [ regs ])) -1 (nil))

(insn 3 2 4 2 arch/arm/kernel/ptrace.c:128 (set (reg/v:SI 135 [ addr ])
        (reg:SI 1 r1 [ addr ])) -1 (nil))

(note 4 3 6 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 3)

;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [100.0%]  (fallthru)
(note 6 4 7 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 7 6 8 3 arch/arm/kernel/ptrace.c:131 (set (reg:SI 138)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 134 [ regs ])
                (const_int 52 [0x34])) [0 <variable>.uregs+52 S4 A32])) -1 (nil))

(insn 8 7 9 3 arch/arm/kernel/ptrace.c:131 (set (reg:SI 137)
        (xor:SI (reg/v:SI 135 [ addr ])
            (reg:SI 138))) -1 (nil))

(insn 9 8 10 3 arch/arm/kernel/ptrace.c:131 (set (reg:SI 140)
        (and:SI (reg:SI 137)
            (const_int -8129 [0xffffffffffffe03f]))) -1 (nil))

(insn 10 9 11 3 arch/arm/kernel/ptrace.c:131 (set (reg:SI 139)
        (and:SI (reg:SI 140)
            (const_int -64 [0xffffffffffffffc0]))) -1 (expr_list:REG_EQUAL (and:SI (reg:SI 137)
            (const_int -8192 [0xffffffffffffe000]))
        (nil)))

(insn 11 10 12 3 arch/arm/kernel/ptrace.c:131 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 139)
            (const_int 0 [0x0]))) -1 (nil))

(insn 12 11 13 3 arch/arm/kernel/ptrace.c:131 (set (reg:SI 141)
        (eq:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) -1 (nil))

(insn 13 12 14 3 arch/arm/kernel/ptrace.c:131 (set (reg:QI 136)
        (subreg:QI (reg:SI 141) 0)) -1 (nil))

(insn 14 13 15 3 arch/arm/kernel/ptrace.c:131 (set (reg:SI 142)
        (zero_extend:SI (reg:QI 136))) -1 (nil))

(insn 15 14 16 3 arch/arm/kernel/ptrace.c:131 (set (reg:SI 133 [ <result> ])
        (reg:SI 142)) -1 (nil))

(jump_insn 16 15 17 3 arch/arm/kernel/ptrace.c:131 (set (pc)
        (label_ref 18)) -1 (nil))
;; End of basic block 3 -> ( 5)

;; Succ edge  5 [100.0%] 

(barrier 17 16 26)

;; Start of basic block () -> 4
(note 26 17 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 20 26 21 4 arch/arm/kernel/ptrace.c:131 (clobber (reg/i:SI 0 r0)) -1 (nil))

(insn 21 20 22 4 arch/arm/kernel/ptrace.c:131 (clobber (reg:SI 133 [ <result> ])) -1 (nil))

(jump_insn 22 21 23 4 arch/arm/kernel/ptrace.c:131 (set (pc)
        (label_ref 24)) -1 (nil))
;; End of basic block 4 -> ( 6)

;; Succ edge  6 [100.0%] 

(barrier 23 22 18)

;; Start of basic block ( 3) -> 5
;; Pred edge  3 [100.0%] 
(code_label 18 23 27 5 9 "" [1 uses])

(note 27 18 19 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 19 27 24 5 arch/arm/kernel/ptrace.c:131 (set (reg/i:SI 0 r0)
        (reg:SI 133 [ <result> ])) -1 (nil))
;; End of basic block 5 -> ( 6)

;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 4 5) -> 6
;; Pred edge  4 [100.0%] 
;; Pred edge  5 [100.0%]  (fallthru)
(code_label 24 19 28 6 10 "" [1 uses])

(note 28 24 25 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 25 28 0 6 arch/arm/kernel/ptrace.c:131 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 6 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function regs_get_kernel_stack_nth (regs_get_kernel_stack_nth)[0:1539]


;; Generating RTL for gimple basic block 2

;; D.27412 = regs->uregs[13];

(insn 7 6 0 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:244 (set (reg:SI 134 [ D.27412 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 138 [ regs ])
                (const_int 52 [0x34])) [0 <variable>.uregs+52 S4 A32])) -1 (nil))

;; addr = (long unsigned int *) D.27412;

(insn 8 7 0 arch/arm/kernel/ptrace.c:144 (set (reg/v/f:SI 135 [ addr ])
        (reg:SI 134 [ D.27412 ])) -1 (nil))

;; addr.512 = addr + n * 4;

(insn 9 8 10 arch/arm/kernel/ptrace.c:145 (set (reg:SI 140)
        (ashift:SI (reg/v:SI 139 [ n ])
            (const_int 2 [0x2]))) -1 (nil))

(insn 10 9 0 arch/arm/kernel/ptrace.c:145 (set (reg/v/f:SI 133 [ addr.512 ])
        (plus:SI (reg/v/f:SI 135 [ addr ])
            (reg:SI 140))) -1 (nil))

;; if (((long unsigned int) addr.512 ^ D.27412) & 4294959104 == 0)

(insn 11 10 12 arch/arm/kernel/ptrace.c:146 (set (reg:SI 141)
        (xor:SI (reg/v/f:SI 133 [ addr.512 ])
            (reg:SI 134 [ D.27412 ]))) -1 (nil))

(insn 12 11 13 arch/arm/kernel/ptrace.c:146 (set (reg:SI 143)
        (and:SI (reg:SI 141)
            (const_int -8129 [0xffffffffffffe03f]))) -1 (nil))

(insn 13 12 14 arch/arm/kernel/ptrace.c:146 (set (reg:SI 142)
        (and:SI (reg:SI 143)
            (const_int -64 [0xffffffffffffffc0]))) -1 (expr_list:REG_EQUAL (and:SI (reg:SI 141)
            (const_int -8192 [0xffffffffffffe000]))
        (nil)))

(insn 14 13 15 arch/arm/kernel/ptrace.c:146 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 142)
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 15 14 0 arch/arm/kernel/ptrace.c:146 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
        (nil)))

;; Generating RTL for gimple basic block 3

;; D.26815 = 0;

(insn 17 16 0 arch/arm/kernel/ptrace.c:149 (set (reg:SI 136 [ D.26815 ])
        (const_int 0 [0x0])) -1 (nil))

;; Generating RTL for gimple basic block 4

;; 

(code_label 20 19 21 12 "" [0 uses])

(note 21 20 0 NOTE_INSN_BASIC_BLOCK)

;; D.26815 = *addr.512;

(insn 22 21 0 arch/arm/kernel/ptrace.c:147 (set (reg:SI 136 [ D.26815 ])
        (mem:SI (reg/v/f:SI 133 [ addr.512 ]) [0 S4 A32])) -1 (nil))

;; Generating RTL for gimple basic block 5

;; 

(code_label 23 22 24 13 "" [0 uses])

(note 24 23 0 NOTE_INSN_BASIC_BLOCK)

;; return D.26815;

(insn 25 24 26 arch/arm/kernel/ptrace.c:150 (set (reg:SI 137 [ <result> ])
        (reg:SI 136 [ D.26815 ])) -1 (nil))

(jump_insn 26 25 27 arch/arm/kernel/ptrace.c:150 (set (pc)
        (label_ref 0)) -1 (nil))

(barrier 27 26 0)


;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 5 3 2 arch/arm/kernel/ptrace.c:143 (set (reg/v/f:SI 138 [ regs ])
        (reg:SI 0 r0 [ regs ])) -1 (nil))

(insn 3 2 4 2 arch/arm/kernel/ptrace.c:143 (set (reg/v:SI 139 [ n ])
        (reg:SI 1 r1 [ n ])) -1 (nil))

(note 4 3 6 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 3)

;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [100.0%]  (fallthru)
(note 6 4 7 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 7 6 8 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:244 (set (reg:SI 134 [ D.27412 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 138 [ regs ])
                (const_int 52 [0x34])) [0 <variable>.uregs+52 S4 A32])) -1 (nil))

(insn 8 7 9 3 arch/arm/kernel/ptrace.c:144 (set (reg/v/f:SI 135 [ addr ])
        (reg:SI 134 [ D.27412 ])) -1 (nil))

(insn 9 8 10 3 arch/arm/kernel/ptrace.c:145 (set (reg:SI 140)
        (ashift:SI (reg/v:SI 139 [ n ])
            (const_int 2 [0x2]))) -1 (nil))

(insn 10 9 11 3 arch/arm/kernel/ptrace.c:145 (set (reg/v/f:SI 133 [ addr.512 ])
        (plus:SI (reg/v/f:SI 135 [ addr ])
            (reg:SI 140))) -1 (nil))

(insn 11 10 12 3 arch/arm/kernel/ptrace.c:146 (set (reg:SI 141)
        (xor:SI (reg/v/f:SI 133 [ addr.512 ])
            (reg:SI 134 [ D.27412 ]))) -1 (nil))

(insn 12 11 13 3 arch/arm/kernel/ptrace.c:146 (set (reg:SI 143)
        (and:SI (reg:SI 141)
            (const_int -8129 [0xffffffffffffe03f]))) -1 (nil))

(insn 13 12 14 3 arch/arm/kernel/ptrace.c:146 (set (reg:SI 142)
        (and:SI (reg:SI 143)
            (const_int -64 [0xffffffffffffffc0]))) -1 (expr_list:REG_EQUAL (and:SI (reg:SI 141)
            (const_int -8192 [0xffffffffffffe000]))
        (nil)))

(insn 14 13 15 3 arch/arm/kernel/ptrace.c:146 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 142)
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 15 14 16 3 arch/arm/kernel/ptrace.c:146 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 20)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
        (nil)))
;; End of basic block 3 -> ( 5 4)

;; Succ edge  5 [61.0%] 
;; Succ edge  4 [39.0%]  (fallthru)

;; Start of basic block ( 3) -> 4
;; Pred edge  3 [39.0%]  (fallthru)
(note 16 15 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 17 16 18 4 arch/arm/kernel/ptrace.c:149 (set (reg:SI 136 [ D.26815 ])
        (const_int 0 [0x0])) -1 (nil))

(jump_insn 18 17 19 4 arch/arm/kernel/ptrace.c:149 (set (pc)
        (label_ref 23)) -1 (nil))
;; End of basic block 4 -> ( 6)

;; Succ edge  6 [100.0%] 

(barrier 19 18 20)

;; Start of basic block ( 3) -> 5
;; Pred edge  3 [61.0%] 
(code_label 20 19 21 5 12 "" [1 uses])

(note 21 20 22 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 22 21 23 5 arch/arm/kernel/ptrace.c:147 (set (reg:SI 136 [ D.26815 ])
        (mem:SI (reg/v/f:SI 133 [ addr.512 ]) [0 S4 A32])) -1 (nil))
;; End of basic block 5 -> ( 6)

;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 5 4) -> 6
;; Pred edge  5 [100.0%]  (fallthru)
;; Pred edge  4 [100.0%] 
(code_label 23 22 24 6 13 "" [1 uses])

(note 24 23 25 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 25 24 26 6 arch/arm/kernel/ptrace.c:150 (set (reg:SI 137 [ <result> ])
        (reg:SI 136 [ D.26815 ])) -1 (nil))

(jump_insn 26 25 27 6 arch/arm/kernel/ptrace.c:150 (set (pc)
        (label_ref 28)) -1 (nil))
;; End of basic block 6 -> ( 8)

;; Succ edge  8 [100.0%] 

(barrier 27 26 36)

;; Start of basic block () -> 7
(note 36 27 30 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 30 36 31 7 arch/arm/kernel/ptrace.c:150 (clobber (reg/i:SI 0 r0)) -1 (nil))

(insn 31 30 32 7 arch/arm/kernel/ptrace.c:150 (clobber (reg:SI 137 [ <result> ])) -1 (nil))

(jump_insn 32 31 33 7 arch/arm/kernel/ptrace.c:150 (set (pc)
        (label_ref 34)) -1 (nil))
;; End of basic block 7 -> ( 9)

;; Succ edge  9 [100.0%] 

(barrier 33 32 28)

;; Start of basic block ( 6) -> 8
;; Pred edge  6 [100.0%] 
(code_label 28 33 37 8 11 "" [1 uses])

(note 37 28 29 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 29 37 34 8 arch/arm/kernel/ptrace.c:150 (set (reg/i:SI 0 r0)
        (reg:SI 137 [ <result> ])) -1 (nil))
;; End of basic block 8 -> ( 9)

;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 7 8) -> 9
;; Pred edge  7 [100.0%] 
;; Pred edge  8 [100.0%]  (fallthru)
(code_label 34 29 38 9 14 "" [1 uses])

(note 38 34 35 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 35 38 0 9 arch/arm/kernel/ptrace.c:150 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 9 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function ptrace_disable (ptrace_disable)[0:1542]


;; Generating RTL for gimple basic block 2


;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 arch/arm/kernel/ptrace.c:190 (set (reg/v/f:SI 133 [ child ])
        (reg:SI 0 r0 [ child ])) -1 (nil))

(note 3 2 5 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 3)

;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [100.0%]  (fallthru)
(note 5 3 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 3 -> ( 4)

;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 3) -> 4
;; Pred edge  3 [100.0%]  (fallthru)
(note 10 5 7 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(jump_insn 7 10 8 4 arch/arm/kernel/ptrace.c:192 (set (pc)
        (label_ref 9)) -1 (nil))
;; End of basic block 4 -> ( 6)

;; Succ edge  6 [100.0%] 

(barrier 8 7 6)

;; Start of basic block () -> 5
(code_label 6 8 11 5 15 "" [0 uses])

(note 11 6 9 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 5 -> ( 6)

;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 4 5) -> 6
;; Pred edge  4 [100.0%] 
;; Pred edge  5 [100.0%]  (fallthru)
(code_label 9 11 12 6 16 "" [1 uses])

(note 12 9 0 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 6 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function ptrace_write_user (ptrace_write_user)[0:1547]

Partition 0: size 72 align 4
	newregs, offset 0

;; Generating RTL for gimple basic block 2

;; if ((off & 3) != 0 | off > 295 != 0)

(insn 8 7 9 arch/arm/kernel/ptrace.c:281 (set (reg:SI 142)
        (and:SI (reg/v:SI 140 [ off ])
            (const_int 3 [0x3]))) -1 (nil))

(insn 9 8 10 arch/arm/kernel/ptrace.c:281 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 142)
            (const_int 0 [0x0]))) -1 (nil))

(insn 10 9 11 arch/arm/kernel/ptrace.c:281 (set (reg:SI 144)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) -1 (nil))

(insn 11 10 12 arch/arm/kernel/ptrace.c:281 (set (reg:QI 143)
        (subreg:QI (reg:SI 144) 0)) -1 (nil))

(insn 12 11 13 arch/arm/kernel/ptrace.c:281 (set (reg:SI 146)
        (const_int 295 [0x127])) -1 (nil))

(insn 13 12 14 arch/arm/kernel/ptrace.c:281 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 140 [ off ])
            (reg:SI 146))) -1 (nil))

(insn 14 13 15 arch/arm/kernel/ptrace.c:281 (set (reg:SI 147)
        (gtu:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) -1 (nil))

(insn 15 14 16 arch/arm/kernel/ptrace.c:281 (set (reg:QI 145)
        (subreg:QI (reg:SI 147) 0)) -1 (nil))

(insn 16 15 17 arch/arm/kernel/ptrace.c:281 (set (reg:SI 148)
        (ior:SI (subreg:SI (reg:QI 143) 0)
            (subreg:SI (reg:QI 145) 0))) -1 (nil))

(insn 17 16 18 arch/arm/kernel/ptrace.c:281 (set (reg:QI 149)
        (subreg:QI (reg:SI 148) 0)) -1 (nil))

(insn 18 17 19 arch/arm/kernel/ptrace.c:281 (set (reg:SI 150)
        (zero_extend:SI (reg:QI 149))) -1 (nil))

(insn 19 18 20 arch/arm/kernel/ptrace.c:281 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 150)
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 20 19 0 arch/arm/kernel/ptrace.c:281 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
        (nil)))

;; Generating RTL for gimple basic block 3

;; ret = -5;

(insn 22 21 0 arch/arm/kernel/ptrace.c:282 (set (reg/v:SI 134 [ ret ])
        (const_int -5 [0xfffffffffffffffb])) -1 (nil))

;; Generating RTL for gimple basic block 4

;; 

(code_label 25 24 26 18 "" [0 uses])

(note 26 25 0 NOTE_INSN_BASIC_BLOCK)

;; if (off > 71)

(insn 27 26 28 arch/arm/kernel/ptrace.c:284 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 140 [ off ])
            (const_int 71 [0x47]))) -1 (nil))

(jump_insn 28 27 0 arch/arm/kernel/ptrace.c:284 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
        (nil)))

;; Generating RTL for gimple basic block 5

;; ret = 0;

(insn 30 29 0 arch/arm/kernel/ptrace.c:285 (set (reg/v:SI 134 [ ret ])
        (const_int 0 [0x0])) -1 (nil))

;; Generating RTL for gimple basic block 6

;; 

(code_label 33 32 34 20 "" [0 uses])

(note 34 33 0 NOTE_INSN_BASIC_BLOCK)

;; D.26920 = (int) (off >> 2);

(insn 35 34 0 arch/arm/kernel/ptrace.c:287 (set (reg:SI 137 [ D.26920 ])
        (lshiftrt:SI (reg/v:SI 140 [ off ])
            (const_int 2 [0x2]))) -1 (nil))

;; regs = (struct pt_regs *) tsk->stack + 8112;

(insn 36 35 37 arch/arm/kernel/ptrace.c:172 (set (reg:SI 151)
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 139 [ tsk ])
                (const_int 4 [0x4])) [0 <variable>.stack+0 S4 A32])) -1 (nil))

(insn 37 36 38 arch/arm/kernel/ptrace.c:172 (set (reg:SI 152)
        (plus:SI (reg:SI 151)
            (const_int 8064 [0x1f80]))) -1 (nil))

(insn 38 37 0 arch/arm/kernel/ptrace.c:172 (set (reg/v/f:SI 133 [ regs ])
        (plus:SI (reg:SI 152)
            (const_int 48 [0x30]))) -1 (expr_list:REG_EQUAL (plus:SI (reg:SI 151)
            (const_int 8112 [0x1fb0]))
        (nil)))

;; newregs = *regs;

(insn 39 38 40 arch/arm/kernel/ptrace.c:175 (set (reg:SI 153)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -72 [0xffffffffffffffb8]))) -1 (nil))

(insn 40 39 41 arch/arm/kernel/ptrace.c:175 (set (reg:SI 154)
        (reg/v/f:SI 133 [ regs ])) -1 (nil))

(insn 41 40 42 arch/arm/kernel/ptrace.c:175 (set (reg:SI 155)
        (const_int 72 [0x48])) -1 (nil))

(insn 42 41 43 arch/arm/kernel/ptrace.c:175 (set (reg:SI 0 r0)
        (reg:SI 153)) -1 (nil))

(insn 43 42 44 arch/arm/kernel/ptrace.c:175 (set (reg:SI 1 r1)
        (reg:SI 154)) -1 (nil))

(insn 44 43 45 arch/arm/kernel/ptrace.c:175 (set (reg:SI 2 r2)
        (reg:SI 155)) -1 (nil))

(call_insn 45 44 46 arch/arm/kernel/ptrace.c:175 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41] <function_decl 0x115c3d80 memcpy>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 46 45 0 arch/arm/kernel/ptrace.c:175 (set (reg:SI 156)
        (reg:SI 0 r0)) -1 (nil))

;; newregs.uregs[D.26920] = val;

(insn 47 46 48 arch/arm/kernel/ptrace.c:176 (set (reg:SI 157)
        (const_int -72 [0xffffffffffffffb8])) -1 (nil))

(insn 48 47 49 arch/arm/kernel/ptrace.c:176 (set (reg:SI 158)
        (ashift:SI (reg:SI 137 [ D.26920 ])
            (const_int 2 [0x2]))) -1 (nil))

(insn 49 48 50 arch/arm/kernel/ptrace.c:176 (set (reg:SI 159)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (reg:SI 158))) -1 (nil))

(insn 50 49 51 arch/arm/kernel/ptrace.c:176 (set (reg/f:SI 160)
        (plus:SI (reg:SI 159)
            (reg:SI 157))) -1 (nil))

(insn 51 50 0 arch/arm/kernel/ptrace.c:176 (set (mem/s/j:SI (reg/f:SI 160) [0 newregs.uregs S4 A32])
        (reg/v:SI 141 [ val ])) -1 (nil))

;; D.27452 = newregs.uregs[16];

(insn 52 51 0 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:168 (set (reg:SI 136 [ D.27452 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 newregs.uregs+64 S4 A64])) -1 (nil))

;; if (D.27452 & 128 == 0)

(insn 53 52 54 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:175 (set (reg:SI 161)
        (and:SI (reg:SI 136 [ D.27452 ])
            (const_int 128 [0x80]))) -1 (nil))

(insn 54 53 55 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:175 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 161)
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 55 54 0 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:175 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

;; Generating RTL for gimple basic block 7

;; mode = D.27452 & 31;

(insn 57 56 0 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:168 (set (reg/v:SI 135 [ mode ])
        (and:SI (reg:SI 136 [ D.27452 ])
            (const_int 31 [0x1f]))) -1 (nil))

;; if (mode == 16)

(insn 58 57 59 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:176 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 135 [ mode ])
            (const_int 16 [0x10]))) -1 (nil))

(jump_insn 59 58 0 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:176 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 2800 [0xaf0])
        (nil)))

;; Generating RTL for gimple basic block 8

;; if (mode == 0 & (elf_hwcap & 8) != 0 != 0)

(insn 61 60 62 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 135 [ mode ])
            (const_int 0 [0x0]))) -1 (nil))

(insn 62 61 63 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg:SI 163)
        (eq:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) -1 (nil))

(insn 63 62 64 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg:QI 162)
        (subreg:QI (reg:SI 163) 0)) -1 (nil))

(insn 64 63 65 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg/f:SI 164)
        (symbol_ref:SI ("elf_hwcap") [flags 0xc0] <var_decl 0x5128fb40 elf_hwcap>)) -1 (nil))

(insn 65 64 66 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg:SI 166)
        (mem/c/i:SI (reg/f:SI 164) [0 elf_hwcap+0 S4 A32])) -1 (nil))

(insn 66 65 67 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg:SI 165)
        (lshiftrt:SI (reg:SI 166)
            (const_int 3 [0x3]))) -1 (nil))

(insn 67 66 68 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg:QI 167)
        (subreg:QI (reg:SI 165) 0)) -1 (nil))

(insn 68 67 69 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg:SI 168)
        (and:SI (subreg:SI (reg:QI 167) 0)
            (const_int 1 [0x1]))) -1 (nil))

(insn 69 68 70 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg:QI 169)
        (subreg:QI (reg:SI 168) 0)) -1 (nil))

(insn 70 69 71 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg:SI 170)
        (and:SI (subreg:SI (reg:QI 162) 0)
            (subreg:SI (reg:QI 169) 0))) -1 (nil))

(insn 71 70 72 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg:QI 171)
        (subreg:QI (reg:SI 170) 0)) -1 (nil))

(insn 72 71 73 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg:SI 172)
        (zero_extend:SI (reg:QI 171))) -1 (nil))

(insn 73 72 74 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 172)
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 74 73 0 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

;; Generating RTL for gimple basic block 9

;; 

(code_label 75 74 76 22 "" [0 uses])

(note 76 75 0 NOTE_INSN_BASIC_BLOCK)

;; regs->uregs[D.26920] = val;

(insn 77 76 0 arch/arm/kernel/ptrace.c:179 (set (mem/s/j:SI (plus:SI (mult:SI (reg:SI 137 [ D.26920 ])
                    (const_int 4 [0x4]))
                (reg/v/f:SI 133 [ regs ])) [0 <variable>.uregs S4 A32])
        (reg/v:SI 141 [ val ])) -1 (nil))

;; ret = 0;

(insn 78 77 0 arch/arm/kernel/ptrace.c:180 (set (reg/v:SI 134 [ ret ])
        (const_int 0 [0x0])) -1 (nil))

;; Generating RTL for gimple basic block 10

;; 

(code_label 81 80 82 21 "" [0 uses])

(note 82 81 0 NOTE_INSN_BASIC_BLOCK)

;; ret = -22;

(insn 83 82 0 arch/arm/kernel/ptrace.c:173 (set (reg/v:SI 134 [ ret ])
        (const_int -22 [0xffffffffffffffea])) -1 (nil))

;; Generating RTL for gimple basic block 11

;; 

(code_label 84 83 85 19 "" [0 uses])

(note 85 84 0 NOTE_INSN_BASIC_BLOCK)

;; return ret;

(insn 86 85 87 arch/arm/kernel/ptrace.c:288 (set (reg:SI 138 [ <result> ])
        (reg/v:SI 134 [ ret ])) -1 (nil))

(jump_insn 87 86 88 arch/arm/kernel/ptrace.c:288 (set (pc)
        (label_ref 0)) -1 (nil))

(barrier 88 87 0)


;;
;; Full RTL generated for this function:
;;
(note 1 0 6 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 6 3 2 arch/arm/kernel/ptrace.c:280 (set (reg/v/f:SI 139 [ tsk ])
        (reg:SI 0 r0 [ tsk ])) -1 (nil))

(insn 3 2 4 2 arch/arm/kernel/ptrace.c:280 (set (reg/v:SI 140 [ off ])
        (reg:SI 1 r1 [ off ])) -1 (nil))

(insn 4 3 5 2 arch/arm/kernel/ptrace.c:280 (set (reg/v:SI 141 [ val ])
        (reg:SI 2 r2 [ val ])) -1 (nil))

(note 5 4 7 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 3)

;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [100.0%]  (fallthru)
(note 7 5 8 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 8 7 9 3 arch/arm/kernel/ptrace.c:281 (set (reg:SI 142)
        (and:SI (reg/v:SI 140 [ off ])
            (const_int 3 [0x3]))) -1 (nil))

(insn 9 8 10 3 arch/arm/kernel/ptrace.c:281 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 142)
            (const_int 0 [0x0]))) -1 (nil))

(insn 10 9 11 3 arch/arm/kernel/ptrace.c:281 (set (reg:SI 144)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) -1 (nil))

(insn 11 10 12 3 arch/arm/kernel/ptrace.c:281 (set (reg:QI 143)
        (subreg:QI (reg:SI 144) 0)) -1 (nil))

(insn 12 11 13 3 arch/arm/kernel/ptrace.c:281 (set (reg:SI 146)
        (const_int 295 [0x127])) -1 (nil))

(insn 13 12 14 3 arch/arm/kernel/ptrace.c:281 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 140 [ off ])
            (reg:SI 146))) -1 (nil))

(insn 14 13 15 3 arch/arm/kernel/ptrace.c:281 (set (reg:SI 147)
        (gtu:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) -1 (nil))

(insn 15 14 16 3 arch/arm/kernel/ptrace.c:281 (set (reg:QI 145)
        (subreg:QI (reg:SI 147) 0)) -1 (nil))

(insn 16 15 17 3 arch/arm/kernel/ptrace.c:281 (set (reg:SI 148)
        (ior:SI (subreg:SI (reg:QI 143) 0)
            (subreg:SI (reg:QI 145) 0))) -1 (nil))

(insn 17 16 18 3 arch/arm/kernel/ptrace.c:281 (set (reg:QI 149)
        (subreg:QI (reg:SI 148) 0)) -1 (nil))

(insn 18 17 19 3 arch/arm/kernel/ptrace.c:281 (set (reg:SI 150)
        (zero_extend:SI (reg:QI 149))) -1 (nil))

(insn 19 18 20 3 arch/arm/kernel/ptrace.c:281 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 150)
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 20 19 21 3 arch/arm/kernel/ptrace.c:281 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 25)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
        (nil)))
;; End of basic block 3 -> ( 4 5)

;; Succ edge  4 [39.0%]  (fallthru)
;; Succ edge  5 [61.0%] 

;; Start of basic block ( 3) -> 4
;; Pred edge  3 [39.0%]  (fallthru)
(note 21 20 22 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 22 21 23 4 arch/arm/kernel/ptrace.c:282 (set (reg/v:SI 134 [ ret ])
        (const_int -5 [0xfffffffffffffffb])) -1 (nil))

(jump_insn 23 22 24 4 arch/arm/kernel/ptrace.c:282 (set (pc)
        (label_ref 84)) -1 (nil))
;; End of basic block 4 -> ( 12)

;; Succ edge  12 [100.0%] 

(barrier 24 23 25)

;; Start of basic block ( 3) -> 5
;; Pred edge  3 [61.0%] 
(code_label 25 24 26 5 18 "" [1 uses])

(note 26 25 27 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 27 26 28 5 arch/arm/kernel/ptrace.c:284 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 140 [ off ])
            (const_int 71 [0x47]))) -1 (nil))

(jump_insn 28 27 29 5 arch/arm/kernel/ptrace.c:284 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 33)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
        (nil)))
;; End of basic block 5 -> ( 6 7)

;; Succ edge  6 [39.0%]  (fallthru)
;; Succ edge  7 [61.0%] 

;; Start of basic block ( 5) -> 6
;; Pred edge  5 [39.0%]  (fallthru)
(note 29 28 30 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 30 29 31 6 arch/arm/kernel/ptrace.c:285 (set (reg/v:SI 134 [ ret ])
        (const_int 0 [0x0])) -1 (nil))

(jump_insn 31 30 32 6 arch/arm/kernel/ptrace.c:285 (set (pc)
        (label_ref 84)) -1 (nil))
;; End of basic block 6 -> ( 12)

;; Succ edge  12 [100.0%] 

(barrier 32 31 33)

;; Start of basic block ( 5) -> 7
;; Pred edge  5 [61.0%] 
(code_label 33 32 34 7 20 "" [1 uses])

(note 34 33 35 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 35 34 36 7 arch/arm/kernel/ptrace.c:287 (set (reg:SI 137 [ D.26920 ])
        (lshiftrt:SI (reg/v:SI 140 [ off ])
            (const_int 2 [0x2]))) -1 (nil))

(insn 36 35 37 7 arch/arm/kernel/ptrace.c:172 (set (reg:SI 151)
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 139 [ tsk ])
                (const_int 4 [0x4])) [0 <variable>.stack+0 S4 A32])) -1 (nil))

(insn 37 36 38 7 arch/arm/kernel/ptrace.c:172 (set (reg:SI 152)
        (plus:SI (reg:SI 151)
            (const_int 8064 [0x1f80]))) -1 (nil))

(insn 38 37 39 7 arch/arm/kernel/ptrace.c:172 (set (reg/v/f:SI 133 [ regs ])
        (plus:SI (reg:SI 152)
            (const_int 48 [0x30]))) -1 (expr_list:REG_EQUAL (plus:SI (reg:SI 151)
            (const_int 8112 [0x1fb0]))
        (nil)))

(insn 39 38 40 7 arch/arm/kernel/ptrace.c:175 (set (reg:SI 153)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -72 [0xffffffffffffffb8]))) -1 (nil))

(insn 40 39 41 7 arch/arm/kernel/ptrace.c:175 (set (reg:SI 154)
        (reg/v/f:SI 133 [ regs ])) -1 (nil))

(insn 41 40 42 7 arch/arm/kernel/ptrace.c:175 (set (reg:SI 155)
        (const_int 72 [0x48])) -1 (nil))

(insn 42 41 43 7 arch/arm/kernel/ptrace.c:175 (set (reg:SI 0 r0)
        (reg:SI 153)) -1 (nil))

(insn 43 42 44 7 arch/arm/kernel/ptrace.c:175 (set (reg:SI 1 r1)
        (reg:SI 154)) -1 (nil))

(insn 44 43 45 7 arch/arm/kernel/ptrace.c:175 (set (reg:SI 2 r2)
        (reg:SI 155)) -1 (nil))

(call_insn 45 44 46 7 arch/arm/kernel/ptrace.c:175 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41] <function_decl 0x115c3d80 memcpy>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 46 45 47 7 arch/arm/kernel/ptrace.c:175 (set (reg:SI 156)
        (reg:SI 0 r0)) -1 (nil))

(insn 47 46 48 7 arch/arm/kernel/ptrace.c:176 (set (reg:SI 157)
        (const_int -72 [0xffffffffffffffb8])) -1 (nil))

(insn 48 47 49 7 arch/arm/kernel/ptrace.c:176 (set (reg:SI 158)
        (ashift:SI (reg:SI 137 [ D.26920 ])
            (const_int 2 [0x2]))) -1 (nil))

(insn 49 48 50 7 arch/arm/kernel/ptrace.c:176 (set (reg:SI 159)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (reg:SI 158))) -1 (nil))

(insn 50 49 51 7 arch/arm/kernel/ptrace.c:176 (set (reg/f:SI 160)
        (plus:SI (reg:SI 159)
            (reg:SI 157))) -1 (nil))

(insn 51 50 52 7 arch/arm/kernel/ptrace.c:176 (set (mem/s/j:SI (reg/f:SI 160) [0 newregs.uregs S4 A32])
        (reg/v:SI 141 [ val ])) -1 (nil))

(insn 52 51 53 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:168 (set (reg:SI 136 [ D.27452 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 newregs.uregs+64 S4 A64])) -1 (nil))

(insn 53 52 54 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:175 (set (reg:SI 161)
        (and:SI (reg:SI 136 [ D.27452 ])
            (const_int 128 [0x80]))) -1 (nil))

(insn 54 53 55 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:175 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 161)
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 55 54 56 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:175 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 81)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 7 -> ( 8 11)

;; Succ edge  8 [50.0%]  (fallthru)
;; Succ edge  11 [50.0%] 

;; Start of basic block ( 7) -> 8
;; Pred edge  7 [50.0%]  (fallthru)
(note 56 55 57 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 57 56 58 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:168 (set (reg/v:SI 135 [ mode ])
        (and:SI (reg:SI 136 [ D.27452 ])
            (const_int 31 [0x1f]))) -1 (nil))

(insn 58 57 59 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:176 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 135 [ mode ])
            (const_int 16 [0x10]))) -1 (nil))

(jump_insn 59 58 60 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:176 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 75)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 2800 [0xaf0])
        (nil)))
;; End of basic block 8 -> ( 10 9)

;; Succ edge  10 [28.0%] 
;; Succ edge  9 [72.0%]  (fallthru)

;; Start of basic block ( 8) -> 9
;; Pred edge  8 [72.0%]  (fallthru)
(note 60 59 61 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 61 60 62 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 135 [ mode ])
            (const_int 0 [0x0]))) -1 (nil))

(insn 62 61 63 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg:SI 163)
        (eq:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) -1 (nil))

(insn 63 62 64 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg:QI 162)
        (subreg:QI (reg:SI 163) 0)) -1 (nil))

(insn 64 63 65 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg/f:SI 164)
        (symbol_ref:SI ("elf_hwcap") [flags 0xc0] <var_decl 0x5128fb40 elf_hwcap>)) -1 (nil))

(insn 65 64 66 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg:SI 166)
        (mem/c/i:SI (reg/f:SI 164) [0 elf_hwcap+0 S4 A32])) -1 (nil))

(insn 66 65 67 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg:SI 165)
        (lshiftrt:SI (reg:SI 166)
            (const_int 3 [0x3]))) -1 (nil))

(insn 67 66 68 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg:QI 167)
        (subreg:QI (reg:SI 165) 0)) -1 (nil))

(insn 68 67 69 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg:SI 168)
        (and:SI (subreg:SI (reg:QI 167) 0)
            (const_int 1 [0x1]))) -1 (nil))

(insn 69 68 70 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg:QI 169)
        (subreg:QI (reg:SI 168) 0)) -1 (nil))

(insn 70 69 71 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg:SI 170)
        (and:SI (subreg:SI (reg:QI 162) 0)
            (subreg:SI (reg:QI 169) 0))) -1 (nil))

(insn 71 70 72 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg:QI 171)
        (subreg:QI (reg:SI 170) 0)) -1 (nil))

(insn 72 71 73 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg:SI 172)
        (zero_extend:SI (reg:QI 171))) -1 (nil))

(insn 73 72 74 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 172)
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 74 73 75 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 81)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 9 -> ( 10 11)

;; Succ edge  10 [50.0%]  (fallthru)
;; Succ edge  11 [50.0%] 

;; Start of basic block ( 8 9) -> 10
;; Pred edge  8 [28.0%] 
;; Pred edge  9 [50.0%]  (fallthru)
(code_label 75 74 76 10 22 "" [1 uses])

(note 76 75 77 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 77 76 78 10 arch/arm/kernel/ptrace.c:179 (set (mem/s/j:SI (plus:SI (mult:SI (reg:SI 137 [ D.26920 ])
                    (const_int 4 [0x4]))
                (reg/v/f:SI 133 [ regs ])) [0 <variable>.uregs S4 A32])
        (reg/v:SI 141 [ val ])) -1 (nil))

(insn 78 77 79 10 arch/arm/kernel/ptrace.c:180 (set (reg/v:SI 134 [ ret ])
        (const_int 0 [0x0])) -1 (nil))

(jump_insn 79 78 80 10 arch/arm/kernel/ptrace.c:180 (set (pc)
        (label_ref 84)) -1 (nil))
;; End of basic block 10 -> ( 12)

;; Succ edge  12 [100.0%] 

(barrier 80 79 81)

;; Start of basic block ( 7 9) -> 11
;; Pred edge  7 [50.0%] 
;; Pred edge  9 [50.0%] 
(code_label 81 80 82 11 21 "" [2 uses])

(note 82 81 83 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 83 82 84 11 arch/arm/kernel/ptrace.c:173 (set (reg/v:SI 134 [ ret ])
        (const_int -22 [0xffffffffffffffea])) -1 (nil))
;; End of basic block 11 -> ( 12)

;; Succ edge  12 [100.0%]  (fallthru)

;; Start of basic block ( 11 4 6 10) -> 12
;; Pred edge  11 [100.0%]  (fallthru)
;; Pred edge  4 [100.0%] 
;; Pred edge  6 [100.0%] 
;; Pred edge  10 [100.0%] 
(code_label 84 83 85 12 19 "" [3 uses])

(note 85 84 86 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 86 85 87 12 arch/arm/kernel/ptrace.c:288 (set (reg:SI 138 [ <result> ])
        (reg/v:SI 134 [ ret ])) -1 (nil))

(jump_insn 87 86 88 12 arch/arm/kernel/ptrace.c:288 (set (pc)
        (label_ref 89)) -1 (nil))
;; End of basic block 12 -> ( 14)

;; Succ edge  14 [100.0%] 

(barrier 88 87 97)

;; Start of basic block () -> 13
(note 97 88 91 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 91 97 92 13 arch/arm/kernel/ptrace.c:288 (clobber (reg/i:SI 0 r0)) -1 (nil))

(insn 92 91 93 13 arch/arm/kernel/ptrace.c:288 (clobber (reg:SI 138 [ <result> ])) -1 (nil))

(jump_insn 93 92 94 13 arch/arm/kernel/ptrace.c:288 (set (pc)
        (label_ref 95)) -1 (nil))
;; End of basic block 13 -> ( 15)

;; Succ edge  15 [100.0%] 

(barrier 94 93 89)

;; Start of basic block ( 12) -> 14
;; Pred edge  12 [100.0%] 
(code_label 89 94 98 14 17 "" [1 uses])

(note 98 89 90 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 90 98 95 14 arch/arm/kernel/ptrace.c:288 (set (reg/i:SI 0 r0)
        (reg:SI 138 [ <result> ])) -1 (nil))
;; End of basic block 14 -> ( 15)

;; Succ edge  15 [100.0%]  (fallthru)

;; Start of basic block ( 13 14) -> 15
;; Pred edge  13 [100.0%] 
;; Pred edge  14 [100.0%]  (fallthru)
(code_label 95 90 99 15 23 "" [1 uses])

(note 99 95 96 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 96 99 0 15 arch/arm/kernel/ptrace.c:288 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 15 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function task_user_regset_view (task_user_regset_view)[0:1563]


;; Generating RTL for gimple basic block 2

;; return &user_arm_view;

(insn 6 5 7 arch/arm/kernel/ptrace.c:786 (set (reg/f:SI 136)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) -1 (nil))

(insn 7 6 8 arch/arm/kernel/ptrace.c:786 (set (reg:SI 135)
        (plus:SI (reg/f:SI 136)
            (const_int 152 [0x98]))) -1 (nil))

(insn 8 7 9 arch/arm/kernel/ptrace.c:786 (set (reg:SI 133 [ <result> ])
        (reg:SI 135)) -1 (nil))

(jump_insn 9 8 10 arch/arm/kernel/ptrace.c:786 (set (pc)
        (label_ref 0)) -1 (nil))

(barrier 10 9 0)


;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 arch/arm/kernel/ptrace.c:784 (set (reg/v/f:SI 134 [ task ])
        (reg:SI 0 r0 [ task ])) -1 (nil))

(note 3 2 5 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 3)

;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [100.0%]  (fallthru)
(note 5 3 6 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 6 5 7 3 arch/arm/kernel/ptrace.c:786 (set (reg/f:SI 136)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) -1 (nil))

(insn 7 6 8 3 arch/arm/kernel/ptrace.c:786 (set (reg:SI 135)
        (plus:SI (reg/f:SI 136)
            (const_int 152 [0x98]))) -1 (nil))

(insn 8 7 9 3 arch/arm/kernel/ptrace.c:786 (set (reg:SI 133 [ <result> ])
        (reg:SI 135)) -1 (nil))

(jump_insn 9 8 10 3 arch/arm/kernel/ptrace.c:786 (set (pc)
        (label_ref 11)) -1 (nil))
;; End of basic block 3 -> ( 5)

;; Succ edge  5 [100.0%] 

(barrier 10 9 19)

;; Start of basic block () -> 4
(note 19 10 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 13 19 14 4 arch/arm/kernel/ptrace.c:786 (clobber (reg/i:SI 0 r0)) -1 (nil))

(insn 14 13 15 4 arch/arm/kernel/ptrace.c:786 (clobber (reg:SI 133 [ <result> ])) -1 (nil))

(jump_insn 15 14 16 4 arch/arm/kernel/ptrace.c:786 (set (pc)
        (label_ref 17)) -1 (nil))
;; End of basic block 4 -> ( 6)

;; Succ edge  6 [100.0%] 

(barrier 16 15 11)

;; Start of basic block ( 3) -> 5
;; Pred edge  3 [100.0%] 
(code_label 11 16 20 5 26 "" [1 uses])

(note 20 11 12 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 12 20 17 5 arch/arm/kernel/ptrace.c:786 (set (reg/i:SI 0 r0)
        (reg:SI 133 [ <result> ])) -1 (nil))
;; End of basic block 5 -> ( 6)

;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 4 5) -> 6
;; Pred edge  4 [100.0%] 
;; Pred edge  5 [100.0%]  (fallthru)
(code_label 17 12 21 6 27 "" [1 uses])

(note 21 17 18 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 18 21 0 6 arch/arm/kernel/ptrace.c:786 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 6 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function ptrace_break_init (ptrace_break_init)[0:1545] (unlikely executed)


;; Generating RTL for gimple basic block 2

;; register_undef_hook (&arm_break_hook);

(insn 5 4 6 arch/arm/kernel/ptrace.c:241 (set (reg/f:SI 134)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) -1 (nil))

(insn 6 5 7 arch/arm/kernel/ptrace.c:241 (set (reg:SI 0 r0)
        (reg/f:SI 134)) -1 (nil))

(call_insn 7 6 0 arch/arm/kernel/ptrace.c:241 (parallel [
            (call (mem:SI (symbol_ref:SI ("register_undef_hook") [flags 0x41] <function_decl 0x11539500 register_undef_hook>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

;; register_undef_hook (&thumb_break_hook);

(insn 8 7 9 arch/arm/kernel/ptrace.c:242 (set (reg/f:SI 135)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) -1 (nil))

(insn 9 8 10 arch/arm/kernel/ptrace.c:242 (set (reg:SI 136)
        (plus:SI (reg/f:SI 135)
            (const_int 28 [0x1c]))) -1 (nil))

(insn 10 9 11 arch/arm/kernel/ptrace.c:242 (set (reg:SI 0 r0)
        (reg:SI 136)) -1 (nil))

(call_insn 11 10 0 arch/arm/kernel/ptrace.c:242 (parallel [
            (call (mem:SI (symbol_ref:SI ("register_undef_hook") [flags 0x41] <function_decl 0x11539500 register_undef_hook>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

;; register_undef_hook (&thumb2_break_hook);

(insn 12 11 13 arch/arm/kernel/ptrace.c:243 (set (reg/f:SI 137)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) -1 (nil))

(insn 13 12 14 arch/arm/kernel/ptrace.c:243 (set (reg:SI 138)
        (plus:SI (reg/f:SI 137)
            (const_int 56 [0x38]))) -1 (nil))

(insn 14 13 15 arch/arm/kernel/ptrace.c:243 (set (reg:SI 0 r0)
        (reg:SI 138)) -1 (nil))

(call_insn 15 14 0 arch/arm/kernel/ptrace.c:243 (parallel [
            (call (mem:SI (symbol_ref:SI ("register_undef_hook") [flags 0x41] <function_decl 0x11539500 register_undef_hook>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

;; return 0;

(insn 16 15 17 arch/arm/kernel/ptrace.c:245 (set (reg:SI 133 [ <result> ])
        (const_int 0 [0x0])) -1 (nil))

(jump_insn 17 16 18 arch/arm/kernel/ptrace.c:245 (set (pc)
        (label_ref 0)) -1 (nil))

(barrier 18 17 0)


;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 4 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 3)

;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [100.0%]  (fallthru)
(note 4 2 5 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 5 4 6 3 arch/arm/kernel/ptrace.c:241 (set (reg/f:SI 134)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) -1 (nil))

(insn 6 5 7 3 arch/arm/kernel/ptrace.c:241 (set (reg:SI 0 r0)
        (reg/f:SI 134)) -1 (nil))

(call_insn 7 6 8 3 arch/arm/kernel/ptrace.c:241 (parallel [
            (call (mem:SI (symbol_ref:SI ("register_undef_hook") [flags 0x41] <function_decl 0x11539500 register_undef_hook>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 8 7 9 3 arch/arm/kernel/ptrace.c:242 (set (reg/f:SI 135)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) -1 (nil))

(insn 9 8 10 3 arch/arm/kernel/ptrace.c:242 (set (reg:SI 136)
        (plus:SI (reg/f:SI 135)
            (const_int 28 [0x1c]))) -1 (nil))

(insn 10 9 11 3 arch/arm/kernel/ptrace.c:242 (set (reg:SI 0 r0)
        (reg:SI 136)) -1 (nil))

(call_insn 11 10 12 3 arch/arm/kernel/ptrace.c:242 (parallel [
            (call (mem:SI (symbol_ref:SI ("register_undef_hook") [flags 0x41] <function_decl 0x11539500 register_undef_hook>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 12 11 13 3 arch/arm/kernel/ptrace.c:243 (set (reg/f:SI 137)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) -1 (nil))

(insn 13 12 14 3 arch/arm/kernel/ptrace.c:243 (set (reg:SI 138)
        (plus:SI (reg/f:SI 137)
            (const_int 56 [0x38]))) -1 (nil))

(insn 14 13 15 3 arch/arm/kernel/ptrace.c:243 (set (reg:SI 0 r0)
        (reg:SI 138)) -1 (nil))

(call_insn 15 14 16 3 arch/arm/kernel/ptrace.c:243 (parallel [
            (call (mem:SI (symbol_ref:SI ("register_undef_hook") [flags 0x41] <function_decl 0x11539500 register_undef_hook>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 16 15 17 3 arch/arm/kernel/ptrace.c:245 (set (reg:SI 133 [ <result> ])
        (const_int 0 [0x0])) -1 (nil))

(jump_insn 17 16 18 3 arch/arm/kernel/ptrace.c:245 (set (pc)
        (label_ref 19)) -1 (nil))
;; End of basic block 3 -> ( 5)

;; Succ edge  5 [100.0%] 

(barrier 18 17 27)

;; Start of basic block () -> 4
(note 27 18 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 21 27 22 4 arch/arm/kernel/ptrace.c:245 (clobber (reg/i:SI 0 r0)) -1 (nil))

(insn 22 21 23 4 arch/arm/kernel/ptrace.c:245 (clobber (reg:SI 133 [ <result> ])) -1 (nil))

(jump_insn 23 22 24 4 arch/arm/kernel/ptrace.c:245 (set (pc)
        (label_ref 25)) -1 (nil))
;; End of basic block 4 -> ( 6)

;; Succ edge  6 [100.0%] 

(barrier 24 23 19)

;; Start of basic block ( 3) -> 5
;; Pred edge  3 [100.0%] 
(code_label 19 24 28 5 30 "" [1 uses])

(note 28 19 20 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 20 28 25 5 arch/arm/kernel/ptrace.c:245 (set (reg/i:SI 0 r0)
        (reg:SI 133 [ <result> ])) -1 (nil))
;; End of basic block 5 -> ( 6)

;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 4 5) -> 6
;; Pred edge  4 [100.0%] 
;; Pred edge  5 [100.0%]  (fallthru)
(code_label 25 20 29 6 31 "" [1 uses])

(note 29 25 26 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 26 29 0 6 arch/arm/kernel/ptrace.c:245 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 6 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function syscall_trace (syscall_trace)[0:1565]


;; Generating RTL for gimple basic block 2

;; sp.87 = sp;

(insn 8 7 0 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 143 [ sp.87 ])
        (reg/v:SI 13 sp [ sp ])) -1 (nil))

;; D.27485 = (const long unsigned int *) &((struct thread_info *) (sp.87 & 4294959104))->flags;

(insn 9 8 10 include/linux/thread_info.h:84 (set (reg:SI 150)
        (and:SI (reg:SI 143 [ sp.87 ])
            (const_int -8129 [0xffffffffffffe03f]))) -1 (nil))

(insn 10 9 0 include/linux/thread_info.h:84 (set (reg/f:SI 141 [ D.27485 ])
        (and:SI (reg:SI 150)
            (const_int -64 [0xffffffffffffffc0]))) -1 (expr_list:REG_EQUAL (and:SI (reg:SI 143 [ sp.87 ])
            (const_int -8192 [0xffffffffffffe000]))
        (nil)))

;; D.27480 ={v} *D.27485;

(insn 11 10 0 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 142 [ D.27480 ])
        (mem/v:SI (reg/f:SI 141 [ D.27485 ]) [0 S4 A32])) -1 (nil))

;; if ((int) (D.27480 >> 8) & 1 == 0)

(insn 12 11 13 arch/arm/kernel/ptrace.c:908 (set (reg:SI 151)
        (and:SI (reg:SI 142 [ D.27480 ])
            (const_int 256 [0x100]))) -1 (nil))

(insn 13 12 14 arch/arm/kernel/ptrace.c:908 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 151)
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 14 13 0 arch/arm/kernel/ptrace.c:908 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))

;; Generating RTL for gimple basic block 3

;; sp.87 = sp;

(insn 16 15 0 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 140 [ sp.87 ])
        (reg/v:SI 13 sp [ sp ])) -1 (nil))

;; if ((int) ((struct thread_info *) (sp.87 & 4294959104))->task->ptrace & 1 == 0)

(insn 17 16 18 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 153)
        (and:SI (reg:SI 140 [ sp.87 ])
            (const_int -8129 [0xffffffffffffe03f]))) -1 (nil))

(insn 18 17 19 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 152)
        (and:SI (reg:SI 153)
            (const_int -64 [0xffffffffffffffc0]))) -1 (expr_list:REG_EQUAL (and:SI (reg:SI 140 [ sp.87 ])
            (const_int -8192 [0xffffffffffffe000]))
        (nil)))

(insn 19 18 20 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 154)
        (mem/s/f/j:SI (plus:SI (reg:SI 152)
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) -1 (nil))

(insn 20 19 21 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 156)
        (mem/s/j:SI (plus:SI (reg/f:SI 154)
                (const_int 16 [0x10])) [0 <variable>.ptrace+0 S4 A64])) -1 (nil))

(insn 21 20 22 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 155)
        (and:SI (reg:SI 156)
            (const_int 1 [0x1]))) -1 (nil))

(insn 22 21 23 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 155)
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 23 22 0 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))

;; Generating RTL for gimple basic block 4

;; ip = regs->uregs[12];

(insn 25 24 0 arch/arm/kernel/ptrace.c:917 (set (reg/v:SI 144 [ ip ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 148 [ regs ])
                (const_int 48 [0x30])) [0 <variable>.uregs+48 S4 A32])) -1 (nil))

;; regs->uregs[12] = (long unsigned int) (long unsigned int) why;

(insn 26 25 0 arch/arm/kernel/ptrace.c:918 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 148 [ regs ])
                (const_int 48 [0x30])) [0 <variable>.uregs+48 S4 A32])
        (reg/v:SI 147 [ why ])) -1 (nil))

;; sp.87 = sp;

(insn 27 26 0 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 139 [ sp.87 ])
        (reg/v:SI 13 sp [ sp ])) -1 (nil))

;; ((struct thread_info *) (sp.87 & 4294959104))->syscall = (__u32) (__u32) scno;

(insn 28 27 29 arch/arm/kernel/ptrace.c:920 (set (reg:SI 158)
        (and:SI (reg:SI 139 [ sp.87 ])
            (const_int -8129 [0xffffffffffffe03f]))) -1 (nil))

(insn 29 28 30 arch/arm/kernel/ptrace.c:920 (set (reg:SI 157)
        (and:SI (reg:SI 158)
            (const_int -64 [0xffffffffffffffc0]))) -1 (expr_list:REG_EQUAL (and:SI (reg:SI 139 [ sp.87 ])
            (const_int -8192 [0xffffffffffffe000]))
        (nil)))

(insn 30 29 0 arch/arm/kernel/ptrace.c:920 (set (mem/s/j:SI (plus:SI (reg:SI 157)
                (const_int 76 [0x4c])) [0 <variable>.syscall+0 S4 A32])
        (reg/v:SI 149 [ scno ])) -1 (nil))

;; sp.87 = sp;

(insn 31 30 0 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 138 [ sp.87 ])
        (reg/v:SI 13 sp [ sp ])) -1 (nil))

;; if (((struct thread_info *) (sp.87 & 4294959104))->task->ptrace & 4 != 0)

(insn 32 31 33 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 160)
        (and:SI (reg:SI 138 [ sp.87 ])
            (const_int -8129 [0xffffffffffffe03f]))) -1 (nil))

(insn 33 32 34 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 159)
        (and:SI (reg:SI 160)
            (const_int -64 [0xffffffffffffffc0]))) -1 (expr_list:REG_EQUAL (and:SI (reg:SI 138 [ sp.87 ])
            (const_int -8192 [0xffffffffffffe000]))
        (nil)))

(insn 34 33 35 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 161)
        (mem/s/f/j:SI (plus:SI (reg:SI 159)
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) -1 (nil))

(insn 35 34 36 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 163)
        (mem/s/j:SI (plus:SI (reg/f:SI 161)
                (const_int 16 [0x10])) [0 <variable>.ptrace+0 S4 A64])) -1 (nil))

(insn 36 35 37 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 162)
        (and:SI (reg:SI 163)
            (const_int 4 [0x4]))) -1 (nil))

(insn 37 36 38 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 162)
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 38 37 0 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

;; Generating RTL for gimple basic block 5

;; iftmp.405 = 5;

(insn 40 39 0 arch/arm/kernel/ptrace.c:924 discrim 2 (set (reg:SI 145 [ iftmp.405 ])
        (const_int 5 [0x5])) -1 (nil))

;; Generating RTL for gimple basic block 6

;; 

(code_label 43 42 44 36 "" [0 uses])

(note 44 43 0 NOTE_INSN_BASIC_BLOCK)

;; iftmp.405 = 133;

(insn 45 44 0 arch/arm/kernel/ptrace.c:924 discrim 1 (set (reg:SI 145 [ iftmp.405 ])
        (const_int 133 [0x85])) -1 (nil))

;; Generating RTL for gimple basic block 7

;; 

(code_label 46 45 47 37 "" [0 uses])

(note 47 46 0 NOTE_INSN_BASIC_BLOCK)

;; ptrace_notify (iftmp.405);

(insn 48 47 49 arch/arm/kernel/ptrace.c:924 discrim 3 (set (reg:SI 0 r0)
        (reg:SI 145 [ iftmp.405 ])) -1 (nil))

(call_insn 49 48 0 arch/arm/kernel/ptrace.c:924 discrim 3 (parallel [
            (call (mem:SI (symbol_ref:SI ("ptrace_notify") [flags 0x41] <function_decl 0x1109c700 ptrace_notify>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

;; sp.87 = sp;

(insn 50 49 0 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 137 [ sp.87 ])
        (reg/v:SI 13 sp [ sp ])) -1 (nil))

;; if (((struct thread_info *) (sp.87 & 4294959104))->task->exit_code != 0)

(insn 51 50 52 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 165)
        (and:SI (reg:SI 137 [ sp.87 ])
            (const_int -8129 [0xffffffffffffe03f]))) -1 (nil))

(insn 52 51 53 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 164)
        (and:SI (reg:SI 165)
            (const_int -64 [0xffffffffffffffc0]))) -1 (expr_list:REG_EQUAL (and:SI (reg:SI 137 [ sp.87 ])
            (const_int -8192 [0xffffffffffffe000]))
        (nil)))

(insn 53 52 54 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 166)
        (mem/s/f/j:SI (plus:SI (reg:SI 164)
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) -1 (nil))

(insn 54 53 55 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 167)
        (mem/s/j:SI (plus:SI (reg/f:SI 166)
                (const_int 508 [0x1fc])) [0 <variable>.exit_code+0 S4 A32])) -1 (nil))

(insn 55 54 56 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 167)
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 56 55 0 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))

;; Generating RTL for gimple basic block 8

;; sp.87 = sp;

(insn 58 57 0 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 136 [ sp.87 ])
        (reg/v:SI 13 sp [ sp ])) -1 (nil))

;; sp.87 = sp;

(insn 59 58 0 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 135 [ sp.87 ])
        (reg/v:SI 13 sp [ sp ])) -1 (nil))

;; send_sig (((struct thread_info *) (sp.87 & 4294959104))->task->exit_code, ((struct thread_info *) (sp.87 & 4294959104))->task, 1);

(insn 60 59 61 arch/arm/kernel/ptrace.c:932 (set (reg:SI 169)
        (and:SI (reg:SI 136 [ sp.87 ])
            (const_int -8129 [0xffffffffffffe03f]))) -1 (nil))

(insn 61 60 62 arch/arm/kernel/ptrace.c:932 (set (reg:SI 168)
        (and:SI (reg:SI 169)
            (const_int -64 [0xffffffffffffffc0]))) -1 (expr_list:REG_EQUAL (and:SI (reg:SI 136 [ sp.87 ])
            (const_int -8192 [0xffffffffffffe000]))
        (nil)))

(insn 62 61 63 arch/arm/kernel/ptrace.c:932 (set (reg/f:SI 170)
        (mem/s/f/j:SI (plus:SI (reg:SI 168)
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) -1 (nil))

(insn 63 62 64 arch/arm/kernel/ptrace.c:932 (set (reg:SI 172)
        (and:SI (reg:SI 135 [ sp.87 ])
            (const_int -8129 [0xffffffffffffe03f]))) -1 (nil))

(insn 64 63 65 arch/arm/kernel/ptrace.c:932 (set (reg:SI 171)
        (and:SI (reg:SI 172)
            (const_int -64 [0xffffffffffffffc0]))) -1 (expr_list:REG_EQUAL (and:SI (reg:SI 135 [ sp.87 ])
            (const_int -8192 [0xffffffffffffe000]))
        (nil)))

(insn 65 64 66 arch/arm/kernel/ptrace.c:932 (set (reg:SI 0 r0)
        (mem/s/j:SI (plus:SI (reg/f:SI 170)
                (const_int 508 [0x1fc])) [0 <variable>.exit_code+0 S4 A32])) -1 (nil))

(insn 66 65 67 arch/arm/kernel/ptrace.c:932 (set (reg:SI 1 r1)
        (mem/s/f/j:SI (plus:SI (reg:SI 171)
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) -1 (nil))

(insn 67 66 68 arch/arm/kernel/ptrace.c:932 (set (reg:SI 2 r2)
        (const_int 1 [0x1])) -1 (nil))

(call_insn 68 67 0 arch/arm/kernel/ptrace.c:932 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("send_sig") [flags 0x41] <function_decl 0x10f01b80 send_sig>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

;; sp.87 = sp;

(insn 69 68 0 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 134 [ sp.87 ])
        (reg/v:SI 13 sp [ sp ])) -1 (nil))

;; ((struct thread_info *) (sp.87 & 4294959104))->task->exit_code = 0;

(insn 70 69 71 arch/arm/kernel/ptrace.c:933 (set (reg:SI 174)
        (and:SI (reg:SI 134 [ sp.87 ])
            (const_int -8129 [0xffffffffffffe03f]))) -1 (nil))

(insn 71 70 72 arch/arm/kernel/ptrace.c:933 (set (reg:SI 173)
        (and:SI (reg:SI 174)
            (const_int -64 [0xffffffffffffffc0]))) -1 (expr_list:REG_EQUAL (and:SI (reg:SI 134 [ sp.87 ])
            (const_int -8192 [0xffffffffffffe000]))
        (nil)))

(insn 72 71 73 arch/arm/kernel/ptrace.c:933 (set (reg/f:SI 175)
        (mem/s/f/j:SI (plus:SI (reg:SI 173)
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) -1 (nil))

(insn 73 72 74 arch/arm/kernel/ptrace.c:933 (set (reg:SI 176)
        (const_int 0 [0x0])) -1 (nil))

(insn 74 73 0 arch/arm/kernel/ptrace.c:933 (set (mem/s/j:SI (plus:SI (reg/f:SI 175)
                (const_int 508 [0x1fc])) [0 <variable>.exit_code+0 S4 A32])
        (reg:SI 176)) -1 (nil))

;; Generating RTL for gimple basic block 9

;; 

(code_label 75 74 76 38 "" [0 uses])

(note 76 75 0 NOTE_INSN_BASIC_BLOCK)

;; regs->uregs[12] = ip;

(insn 77 76 0 arch/arm/kernel/ptrace.c:935 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 148 [ regs ])
                (const_int 48 [0x30])) [0 <variable>.uregs+48 S4 A32])
        (reg/v:SI 144 [ ip ])) -1 (nil))

;; sp.87 = sp;

(insn 78 77 0 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 133 [ sp.87 ])
        (reg/v:SI 13 sp [ sp ])) -1 (nil))

;; scno = (int) ((struct thread_info *) (sp.87 & 4294959104))->syscall;

(insn 79 78 80 arch/arm/kernel/ptrace.c:937 (set (reg:SI 178)
        (and:SI (reg:SI 133 [ sp.87 ])
            (const_int -8129 [0xffffffffffffe03f]))) -1 (nil))

(insn 80 79 81 arch/arm/kernel/ptrace.c:937 (set (reg:SI 177)
        (and:SI (reg:SI 178)
            (const_int -64 [0xffffffffffffffc0]))) -1 (expr_list:REG_EQUAL (and:SI (reg:SI 133 [ sp.87 ])
            (const_int -8192 [0xffffffffffffe000]))
        (nil)))

(insn 81 80 0 arch/arm/kernel/ptrace.c:937 (set (reg/v:SI 149 [ scno ])
        (mem/s/j:SI (plus:SI (reg:SI 177)
                (const_int 76 [0x4c])) [0 <variable>.syscall+0 S4 A32])) -1 (nil))

;; Generating RTL for gimple basic block 10

;; 

(code_label 82 81 83 35 "" [0 uses])

(note 83 82 0 NOTE_INSN_BASIC_BLOCK)

;; return scno;

(insn 84 83 85 arch/arm/kernel/ptrace.c:938 (set (reg:SI 146 [ <result> ])
        (reg/v:SI 149 [ scno ])) -1 (nil))

(jump_insn 85 84 86 arch/arm/kernel/ptrace.c:938 (set (pc)
        (label_ref 0)) -1 (nil))

(barrier 86 85 0)


;;
;; Full RTL generated for this function:
;;
(note 1 0 6 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 6 3 2 arch/arm/kernel/ptrace.c:905 (set (reg/v:SI 147 [ why ])
        (reg:SI 0 r0 [ why ])) -1 (nil))

(insn 3 2 4 2 arch/arm/kernel/ptrace.c:905 (set (reg/v/f:SI 148 [ regs ])
        (reg:SI 1 r1 [ regs ])) -1 (nil))

(insn 4 3 5 2 arch/arm/kernel/ptrace.c:905 (set (reg/v:SI 149 [ scno ])
        (reg:SI 2 r2 [ scno ])) -1 (nil))

(note 5 4 7 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 3)

;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [100.0%]  (fallthru)
(note 7 5 8 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 8 7 9 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 143 [ sp.87 ])
        (reg/v:SI 13 sp [ sp ])) -1 (nil))

(insn 9 8 10 3 include/linux/thread_info.h:84 (set (reg:SI 150)
        (and:SI (reg:SI 143 [ sp.87 ])
            (const_int -8129 [0xffffffffffffe03f]))) -1 (nil))

(insn 10 9 11 3 include/linux/thread_info.h:84 (set (reg/f:SI 141 [ D.27485 ])
        (and:SI (reg:SI 150)
            (const_int -64 [0xffffffffffffffc0]))) -1 (expr_list:REG_EQUAL (and:SI (reg:SI 143 [ sp.87 ])
            (const_int -8192 [0xffffffffffffe000]))
        (nil)))

(insn 11 10 12 3 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 142 [ D.27480 ])
        (mem/v:SI (reg/f:SI 141 [ D.27485 ]) [0 S4 A32])) -1 (nil))

(insn 12 11 13 3 arch/arm/kernel/ptrace.c:908 (set (reg:SI 151)
        (and:SI (reg:SI 142 [ D.27480 ])
            (const_int 256 [0x100]))) -1 (nil))

(insn 13 12 14 3 arch/arm/kernel/ptrace.c:908 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 151)
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 14 13 15 3 arch/arm/kernel/ptrace.c:908 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 82)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))
;; End of basic block 3 -> ( 11 4)

;; Succ edge  11 [39.0%] 
;; Succ edge  4 [61.0%]  (fallthru)

;; Start of basic block ( 3) -> 4
;; Pred edge  3 [61.0%]  (fallthru)
(note 15 14 16 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 16 15 17 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 140 [ sp.87 ])
        (reg/v:SI 13 sp [ sp ])) -1 (nil))

(insn 17 16 18 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 153)
        (and:SI (reg:SI 140 [ sp.87 ])
            (const_int -8129 [0xffffffffffffe03f]))) -1 (nil))

(insn 18 17 19 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 152)
        (and:SI (reg:SI 153)
            (const_int -64 [0xffffffffffffffc0]))) -1 (expr_list:REG_EQUAL (and:SI (reg:SI 140 [ sp.87 ])
            (const_int -8192 [0xffffffffffffe000]))
        (nil)))

(insn 19 18 20 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 154)
        (mem/s/f/j:SI (plus:SI (reg:SI 152)
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) -1 (nil))

(insn 20 19 21 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 156)
        (mem/s/j:SI (plus:SI (reg/f:SI 154)
                (const_int 16 [0x10])) [0 <variable>.ptrace+0 S4 A64])) -1 (nil))

(insn 21 20 22 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 155)
        (and:SI (reg:SI 156)
            (const_int 1 [0x1]))) -1 (nil))

(insn 22 21 23 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 155)
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 23 22 24 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 82)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))
;; End of basic block 4 -> ( 11 5)

;; Succ edge  11 [39.0%] 
;; Succ edge  5 [61.0%]  (fallthru)

;; Start of basic block ( 4) -> 5
;; Pred edge  4 [61.0%]  (fallthru)
(note 24 23 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 25 24 26 5 arch/arm/kernel/ptrace.c:917 (set (reg/v:SI 144 [ ip ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 148 [ regs ])
                (const_int 48 [0x30])) [0 <variable>.uregs+48 S4 A32])) -1 (nil))

(insn 26 25 27 5 arch/arm/kernel/ptrace.c:918 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 148 [ regs ])
                (const_int 48 [0x30])) [0 <variable>.uregs+48 S4 A32])
        (reg/v:SI 147 [ why ])) -1 (nil))

(insn 27 26 28 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 139 [ sp.87 ])
        (reg/v:SI 13 sp [ sp ])) -1 (nil))

(insn 28 27 29 5 arch/arm/kernel/ptrace.c:920 (set (reg:SI 158)
        (and:SI (reg:SI 139 [ sp.87 ])
            (const_int -8129 [0xffffffffffffe03f]))) -1 (nil))

(insn 29 28 30 5 arch/arm/kernel/ptrace.c:920 (set (reg:SI 157)
        (and:SI (reg:SI 158)
            (const_int -64 [0xffffffffffffffc0]))) -1 (expr_list:REG_EQUAL (and:SI (reg:SI 139 [ sp.87 ])
            (const_int -8192 [0xffffffffffffe000]))
        (nil)))

(insn 30 29 31 5 arch/arm/kernel/ptrace.c:920 (set (mem/s/j:SI (plus:SI (reg:SI 157)
                (const_int 76 [0x4c])) [0 <variable>.syscall+0 S4 A32])
        (reg/v:SI 149 [ scno ])) -1 (nil))

(insn 31 30 32 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 138 [ sp.87 ])
        (reg/v:SI 13 sp [ sp ])) -1 (nil))

(insn 32 31 33 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 160)
        (and:SI (reg:SI 138 [ sp.87 ])
            (const_int -8129 [0xffffffffffffe03f]))) -1 (nil))

(insn 33 32 34 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 159)
        (and:SI (reg:SI 160)
            (const_int -64 [0xffffffffffffffc0]))) -1 (expr_list:REG_EQUAL (and:SI (reg:SI 138 [ sp.87 ])
            (const_int -8192 [0xffffffffffffe000]))
        (nil)))

(insn 34 33 35 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 161)
        (mem/s/f/j:SI (plus:SI (reg:SI 159)
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) -1 (nil))

(insn 35 34 36 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 163)
        (mem/s/j:SI (plus:SI (reg/f:SI 161)
                (const_int 16 [0x10])) [0 <variable>.ptrace+0 S4 A64])) -1 (nil))

(insn 36 35 37 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 162)
        (and:SI (reg:SI 163)
            (const_int 4 [0x4]))) -1 (nil))

(insn 37 36 38 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 162)
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 38 37 39 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 43)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 5 -> ( 7 6)

;; Succ edge  7 [50.0%] 
;; Succ edge  6 [50.0%]  (fallthru)

;; Start of basic block ( 5) -> 6
;; Pred edge  5 [50.0%]  (fallthru)
(note 39 38 40 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 40 39 41 6 arch/arm/kernel/ptrace.c:924 discrim 2 (set (reg:SI 145 [ iftmp.405 ])
        (const_int 5 [0x5])) -1 (nil))

(jump_insn 41 40 42 6 arch/arm/kernel/ptrace.c:924 discrim 2 (set (pc)
        (label_ref 46)) -1 (nil))
;; End of basic block 6 -> ( 8)

;; Succ edge  8 [100.0%] 

(barrier 42 41 43)

;; Start of basic block ( 5) -> 7
;; Pred edge  5 [50.0%] 
(code_label 43 42 44 7 36 "" [1 uses])

(note 44 43 45 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 45 44 46 7 arch/arm/kernel/ptrace.c:924 discrim 1 (set (reg:SI 145 [ iftmp.405 ])
        (const_int 133 [0x85])) -1 (nil))
;; End of basic block 7 -> ( 8)

;; Succ edge  8 [100.0%]  (fallthru)

;; Start of basic block ( 7 6) -> 8
;; Pred edge  7 [100.0%]  (fallthru)
;; Pred edge  6 [100.0%] 
(code_label 46 45 47 8 37 "" [1 uses])

(note 47 46 48 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 48 47 49 8 arch/arm/kernel/ptrace.c:924 discrim 3 (set (reg:SI 0 r0)
        (reg:SI 145 [ iftmp.405 ])) -1 (nil))

(call_insn 49 48 50 8 arch/arm/kernel/ptrace.c:924 discrim 3 (parallel [
            (call (mem:SI (symbol_ref:SI ("ptrace_notify") [flags 0x41] <function_decl 0x1109c700 ptrace_notify>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 50 49 51 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 137 [ sp.87 ])
        (reg/v:SI 13 sp [ sp ])) -1 (nil))

(insn 51 50 52 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 165)
        (and:SI (reg:SI 137 [ sp.87 ])
            (const_int -8129 [0xffffffffffffe03f]))) -1 (nil))

(insn 52 51 53 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 164)
        (and:SI (reg:SI 165)
            (const_int -64 [0xffffffffffffffc0]))) -1 (expr_list:REG_EQUAL (and:SI (reg:SI 137 [ sp.87 ])
            (const_int -8192 [0xffffffffffffe000]))
        (nil)))

(insn 53 52 54 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 166)
        (mem/s/f/j:SI (plus:SI (reg:SI 164)
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) -1 (nil))

(insn 54 53 55 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 167)
        (mem/s/j:SI (plus:SI (reg/f:SI 166)
                (const_int 508 [0x1fc])) [0 <variable>.exit_code+0 S4 A32])) -1 (nil))

(insn 55 54 56 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 167)
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 56 55 57 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 75)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))
;; End of basic block 8 -> ( 9 10)

;; Succ edge  9 [29.0%]  (fallthru)
;; Succ edge  10 [71.0%] 

;; Start of basic block ( 8) -> 9
;; Pred edge  8 [29.0%]  (fallthru)
(note 57 56 58 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 58 57 59 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 136 [ sp.87 ])
        (reg/v:SI 13 sp [ sp ])) -1 (nil))

(insn 59 58 60 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 135 [ sp.87 ])
        (reg/v:SI 13 sp [ sp ])) -1 (nil))

(insn 60 59 61 9 arch/arm/kernel/ptrace.c:932 (set (reg:SI 169)
        (and:SI (reg:SI 136 [ sp.87 ])
            (const_int -8129 [0xffffffffffffe03f]))) -1 (nil))

(insn 61 60 62 9 arch/arm/kernel/ptrace.c:932 (set (reg:SI 168)
        (and:SI (reg:SI 169)
            (const_int -64 [0xffffffffffffffc0]))) -1 (expr_list:REG_EQUAL (and:SI (reg:SI 136 [ sp.87 ])
            (const_int -8192 [0xffffffffffffe000]))
        (nil)))

(insn 62 61 63 9 arch/arm/kernel/ptrace.c:932 (set (reg/f:SI 170)
        (mem/s/f/j:SI (plus:SI (reg:SI 168)
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) -1 (nil))

(insn 63 62 64 9 arch/arm/kernel/ptrace.c:932 (set (reg:SI 172)
        (and:SI (reg:SI 135 [ sp.87 ])
            (const_int -8129 [0xffffffffffffe03f]))) -1 (nil))

(insn 64 63 65 9 arch/arm/kernel/ptrace.c:932 (set (reg:SI 171)
        (and:SI (reg:SI 172)
            (const_int -64 [0xffffffffffffffc0]))) -1 (expr_list:REG_EQUAL (and:SI (reg:SI 135 [ sp.87 ])
            (const_int -8192 [0xffffffffffffe000]))
        (nil)))

(insn 65 64 66 9 arch/arm/kernel/ptrace.c:932 (set (reg:SI 0 r0)
        (mem/s/j:SI (plus:SI (reg/f:SI 170)
                (const_int 508 [0x1fc])) [0 <variable>.exit_code+0 S4 A32])) -1 (nil))

(insn 66 65 67 9 arch/arm/kernel/ptrace.c:932 (set (reg:SI 1 r1)
        (mem/s/f/j:SI (plus:SI (reg:SI 171)
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) -1 (nil))

(insn 67 66 68 9 arch/arm/kernel/ptrace.c:932 (set (reg:SI 2 r2)
        (const_int 1 [0x1])) -1 (nil))

(call_insn 68 67 69 9 arch/arm/kernel/ptrace.c:932 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("send_sig") [flags 0x41] <function_decl 0x10f01b80 send_sig>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 69 68 70 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 134 [ sp.87 ])
        (reg/v:SI 13 sp [ sp ])) -1 (nil))

(insn 70 69 71 9 arch/arm/kernel/ptrace.c:933 (set (reg:SI 174)
        (and:SI (reg:SI 134 [ sp.87 ])
            (const_int -8129 [0xffffffffffffe03f]))) -1 (nil))

(insn 71 70 72 9 arch/arm/kernel/ptrace.c:933 (set (reg:SI 173)
        (and:SI (reg:SI 174)
            (const_int -64 [0xffffffffffffffc0]))) -1 (expr_list:REG_EQUAL (and:SI (reg:SI 134 [ sp.87 ])
            (const_int -8192 [0xffffffffffffe000]))
        (nil)))

(insn 72 71 73 9 arch/arm/kernel/ptrace.c:933 (set (reg/f:SI 175)
        (mem/s/f/j:SI (plus:SI (reg:SI 173)
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) -1 (nil))

(insn 73 72 74 9 arch/arm/kernel/ptrace.c:933 (set (reg:SI 176)
        (const_int 0 [0x0])) -1 (nil))

(insn 74 73 75 9 arch/arm/kernel/ptrace.c:933 (set (mem/s/j:SI (plus:SI (reg/f:SI 175)
                (const_int 508 [0x1fc])) [0 <variable>.exit_code+0 S4 A32])
        (reg:SI 176)) -1 (nil))
;; End of basic block 9 -> ( 10)

;; Succ edge  10 [100.0%]  (fallthru)

;; Start of basic block ( 8 9) -> 10
;; Pred edge  8 [71.0%] 
;; Pred edge  9 [100.0%]  (fallthru)
(code_label 75 74 76 10 38 "" [1 uses])

(note 76 75 77 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 77 76 78 10 arch/arm/kernel/ptrace.c:935 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 148 [ regs ])
                (const_int 48 [0x30])) [0 <variable>.uregs+48 S4 A32])
        (reg/v:SI 144 [ ip ])) -1 (nil))

(insn 78 77 79 10 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 133 [ sp.87 ])
        (reg/v:SI 13 sp [ sp ])) -1 (nil))

(insn 79 78 80 10 arch/arm/kernel/ptrace.c:937 (set (reg:SI 178)
        (and:SI (reg:SI 133 [ sp.87 ])
            (const_int -8129 [0xffffffffffffe03f]))) -1 (nil))

(insn 80 79 81 10 arch/arm/kernel/ptrace.c:937 (set (reg:SI 177)
        (and:SI (reg:SI 178)
            (const_int -64 [0xffffffffffffffc0]))) -1 (expr_list:REG_EQUAL (and:SI (reg:SI 133 [ sp.87 ])
            (const_int -8192 [0xffffffffffffe000]))
        (nil)))

(insn 81 80 82 10 arch/arm/kernel/ptrace.c:937 (set (reg/v:SI 149 [ scno ])
        (mem/s/j:SI (plus:SI (reg:SI 177)
                (const_int 76 [0x4c])) [0 <variable>.syscall+0 S4 A32])) -1 (nil))
;; End of basic block 10 -> ( 11)

;; Succ edge  11 [100.0%]  (fallthru)

;; Start of basic block ( 3 4 10) -> 11
;; Pred edge  3 [39.0%] 
;; Pred edge  4 [39.0%] 
;; Pred edge  10 [100.0%]  (fallthru)
(code_label 82 81 83 11 35 "" [2 uses])

(note 83 82 84 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 84 83 85 11 arch/arm/kernel/ptrace.c:938 (set (reg:SI 146 [ <result> ])
        (reg/v:SI 149 [ scno ])) -1 (nil))

(jump_insn 85 84 86 11 arch/arm/kernel/ptrace.c:938 (set (pc)
        (label_ref 87)) -1 (nil))
;; End of basic block 11 -> ( 13)

;; Succ edge  13 [100.0%] 

(barrier 86 85 95)

;; Start of basic block () -> 12
(note 95 86 89 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 89 95 90 12 arch/arm/kernel/ptrace.c:938 (clobber (reg/i:SI 0 r0)) -1 (nil))

(insn 90 89 91 12 arch/arm/kernel/ptrace.c:938 (clobber (reg:SI 146 [ <result> ])) -1 (nil))

(jump_insn 91 90 92 12 arch/arm/kernel/ptrace.c:938 (set (pc)
        (label_ref 93)) -1 (nil))
;; End of basic block 12 -> ( 14)

;; Succ edge  14 [100.0%] 

(barrier 92 91 87)

;; Start of basic block ( 11) -> 13
;; Pred edge  11 [100.0%] 
(code_label 87 92 96 13 34 "" [1 uses])

(note 96 87 88 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 88 96 93 13 arch/arm/kernel/ptrace.c:938 (set (reg/i:SI 0 r0)
        (reg:SI 146 [ <result> ])) -1 (nil))
;; End of basic block 13 -> ( 14)

;; Succ edge  14 [100.0%]  (fallthru)

;; Start of basic block ( 12 13) -> 14
;; Pred edge  12 [100.0%] 
;; Pred edge  13 [100.0%]  (fallthru)
(code_label 93 88 97 14 39 "" [1 uses])

(note 97 93 94 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 94 97 0 14 arch/arm/kernel/ptrace.c:938 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 14 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function vfp_set (vfp_set)[0:1562]

Partition 0: size 280 align 8
	new_vfp, offset 0

;; Generating RTL for gimple basic block 2

;; thread = (struct thread_info *) target->stack;

(insn 11 10 0 arch/arm/kernel/ptrace.c:700 (set (reg/v/f:SI 139 [ thread ])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 142 [ target ])
                (const_int 4 [0x4])) [0 <variable>.stack+0 S4 A32])) -1 (nil))

;; new_vfp = thread->vfpstate.hard;

(insn 12 11 13 arch/arm/kernel/ptrace.c:701 (set (reg:SI 148)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -280 [0xfffffffffffffee8]))) -1 (nil))

(insn 13 12 14 arch/arm/kernel/ptrace.c:701 (set (reg:SI 149)
        (plus:SI (reg/v/f:SI 139 [ thread ])
            (const_int 432 [0x1b0]))) -1 (nil))

(insn 14 13 15 arch/arm/kernel/ptrace.c:701 (set (reg:SI 150)
        (const_int 280 [0x118])) -1 (nil))

(insn 15 14 16 arch/arm/kernel/ptrace.c:701 (set (reg:SI 0 r0)
        (reg:SI 148)) -1 (nil))

(insn 16 15 17 arch/arm/kernel/ptrace.c:701 (set (reg:SI 1 r1)
        (reg:SI 149)) -1 (nil))

(insn 17 16 18 arch/arm/kernel/ptrace.c:701 (set (reg:SI 2 r2)
        (reg:SI 150)) -1 (nil))

(call_insn 18 17 19 arch/arm/kernel/ptrace.c:701 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41] <function_decl 0x115c3d80 memcpy>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 19 18 0 arch/arm/kernel/ptrace.c:701 (set (reg:SI 151)
        (reg:SI 0 r0)) -1 (nil))

;; if (count == 0)

(insn 20 19 21 include/linux/regset.h:249 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 145 [ count ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 21 20 0 include/linux/regset.h:249 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

;; Generating RTL for gimple basic block 3

;; if (pos <= 255)

(insn 23 22 24 include/linux/regset.h:252 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 144 [ pos ])
            (const_int 255 [0xff]))) -1 (nil))

(jump_insn 24 23 0 include/linux/regset.h:252 discrim 1 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

;; Generating RTL for gimple basic block 4

;; copy = MIN_EXPR <256 - pos, count>;

(insn 26 25 27 include/linux/regset.h:254 (set (reg/v:SI 137 [ copy ])
        (minus:SI (const_int 256 [0x100])
            (reg/v:SI 144 [ pos ]))) -1 (nil))

(insn 27 26 0 include/linux/regset.h:254 (parallel [
            (set (reg/v:SI 137 [ copy ])
                (umin:SI (reg/v:SI 137 [ copy ])
                    (reg/v:SI 145 [ count ])))
            (clobber (reg:CC 24 cc))
        ]) -1 (nil))

;; data = &new_vfp.fpregs + pos;

(insn 28 27 29 include/linux/regset.h:255 (set (reg:SI 152)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -280 [0xfffffffffffffee8]))) -1 (nil))

(insn 29 28 0 include/linux/regset.h:255 (set (reg/v/f:SI 138 [ data ])
        (plus:SI (reg:SI 152)
            (reg/v:SI 144 [ pos ]))) -1 (nil))

;; if (kbuf != 0B)

(insn 30 29 31 include/linux/regset.h:256 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 146 [ kbuf ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 31 30 0 include/linux/regset.h:256 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 1499 [0x5db])
        (nil)))

;; Generating RTL for gimple basic block 5

;; memcpy (data, kbuf, copy);

(insn 33 32 34 include/linux/regset.h:257 (set (reg:SI 153)
        (reg/v/f:SI 138 [ data ])) -1 (nil))

(insn 34 33 35 include/linux/regset.h:257 (set (reg:SI 154)
        (reg/v/f:SI 146 [ kbuf ])) -1 (nil))

(insn 35 34 36 include/linux/regset.h:257 (set (reg:SI 155)
        (reg/v:SI 137 [ copy ])) -1 (nil))

(insn 36 35 37 include/linux/regset.h:257 (set (reg:SI 0 r0)
        (reg:SI 153)) -1 (nil))

(insn 37 36 38 include/linux/regset.h:257 (set (reg:SI 1 r1)
        (reg:SI 154)) -1 (nil))

(insn 38 37 39 include/linux/regset.h:257 (set (reg:SI 2 r2)
        (reg:SI 155)) -1 (nil))

(call_insn 39 38 40 include/linux/regset.h:257 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41] <function_decl 0x115c3d80 memcpy>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 40 39 0 include/linux/regset.h:257 (set (reg:SI 156)
        (reg:SI 0 r0)) -1 (nil))

;; kbuf = kbuf + copy;

(insn 41 40 0 include/linux/regset.h:258 (set (reg/v/f:SI 146 [ kbuf ])
        (plus:SI (reg/v/f:SI 146 [ kbuf ])
            (reg/v:SI 137 [ copy ]))) -1 (nil))

;; Generating RTL for gimple basic block 6

;; 

(code_label 44 43 45 43 "" [0 uses])

(note 45 44 0 NOTE_INSN_BASIC_BLOCK)

;; D.27545 = __copy_from_user (data, ubuf, copy);

(insn 46 45 47 include/linux/regset.h:259 (set (reg:SI 0 r0)
        (reg/v/f:SI 138 [ data ])) -1 (nil))

(insn 47 46 48 include/linux/regset.h:259 (set (reg:SI 1 r1)
        (reg/v/f:SI 147 [ ubuf ])) -1 (nil))

(insn 48 47 49 include/linux/regset.h:259 (set (reg:SI 2 r2)
        (reg/v:SI 137 [ copy ])) -1 (nil))

(call_insn 49 48 50 include/linux/regset.h:259 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__copy_from_user") [flags 0x41] <function_decl 0x113a2f80 __copy_from_user>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 50 49 0 include/linux/regset.h:259 (set (reg:SI 136 [ D.27545 ])
        (reg:SI 0 r0)) -1 (nil))

;; if (D.27545 != 0)

(insn 51 50 52 include/linux/regset.h:259 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 136 [ D.27545 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 52 51 0 include/linux/regset.h:259 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

;; Generating RTL for gimple basic block 7

;; ubuf = ubuf + copy;

(insn 54 53 0 include/linux/regset.h:262 (set (reg/v/f:SI 147 [ ubuf ])
        (plus:SI (reg/v/f:SI 147 [ ubuf ])
            (reg/v:SI 137 [ copy ]))) -1 (nil))

;; Generating RTL for gimple basic block 8

;; 

(code_label 55 54 56 44 "" [0 uses])

(note 56 55 0 NOTE_INSN_BASIC_BLOCK)

;; count = count - copy;

(insn 57 56 0 include/linux/regset.h:264 (set (reg/v:SI 145 [ count ])
        (minus:SI (reg/v:SI 145 [ count ])
            (reg/v:SI 137 [ copy ]))) -1 (nil))

;; if (count == 0)

(insn 58 57 59 include/linux/regset.h:305 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 145 [ count ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 59 58 0 include/linux/regset.h:305 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 0 [0x0])
        (nil)))

;; Generating RTL for gimple basic block 9

;; pos = copy + pos;

(insn 61 60 0 include/linux/regset.h:263 (set (reg/v:SI 144 [ pos ])
        (plus:SI (reg/v:SI 144 [ pos ])
            (reg/v:SI 137 [ copy ]))) -1 (nil))

;; if (pos <= 255)

(insn 62 61 63 include/linux/regset.h:307 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 144 [ pos ])
            (const_int 255 [0xff]))) -1 (nil))

(jump_insn 63 62 0 include/linux/regset.h:307 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 9978 [0x26fa])
        (nil)))

;; Generating RTL for gimple basic block 10

;; __bug (&"include/linux/regset.h"[0], 307);

(insn 65 64 66 include/linux/regset.h:307 discrim 1 (set (reg:SI 157)
        (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x116b8180>)) -1 (nil))

(insn 66 65 67 include/linux/regset.h:307 discrim 1 (set (reg:SI 158)
        (const_int 307 [0x133])) -1 (nil))

(insn 67 66 68 include/linux/regset.h:307 discrim 1 (set (reg:SI 0 r0)
        (reg:SI 157)) -1 (nil))

(insn 68 67 69 include/linux/regset.h:307 discrim 1 (set (reg:SI 1 r1)
        (reg:SI 158)) -1 (nil))

(call_insn 69 68 70 include/linux/regset.h:307 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("__bug") [flags 0x41] <function_decl 0x10a2ec00 __bug>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (expr_list:REG_NORETURN (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(barrier 70 69 0)

;; Generating RTL for gimple basic block 11

;; copy = MIN_EXPR <260 - pos, count>;

(insn 72 71 73 include/linux/regset.h:254 (set (reg/v:SI 134 [ copy ])
        (minus:SI (const_int 260 [0x104])
            (reg/v:SI 144 [ pos ]))) -1 (nil))

(insn 73 72 0 include/linux/regset.h:254 (parallel [
            (set (reg/v:SI 134 [ copy ])
                (umin:SI (reg/v:SI 134 [ copy ])
                    (reg/v:SI 145 [ count ])))
            (clobber (reg:CC 24 cc))
        ]) -1 (nil))

;; data = &new_vfp.fpscr + (pos + 4294967040);

(insn 74 73 75 include/linux/regset.h:255 (set (reg:SI 159)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -280 [0xfffffffffffffee8]))) -1 (nil))

(insn 75 74 76 include/linux/regset.h:255 (set (reg:SI 160)
        (plus:SI (reg:SI 159)
            (const_int 260 [0x104]))) -1 (nil))

(insn 76 75 77 include/linux/regset.h:255 (set (reg:SI 161)
        (plus:SI (reg/v:SI 144 [ pos ])
            (const_int -256 [0xffffffffffffff00]))) -1 (nil))

(insn 77 76 0 include/linux/regset.h:255 (set (reg/v/f:SI 135 [ data ])
        (plus:SI (reg:SI 160)
            (reg:SI 161))) -1 (nil))

;; if (kbuf != 0B)

(insn 78 77 79 include/linux/regset.h:256 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 146 [ kbuf ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 79 78 0 include/linux/regset.h:256 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 1499 [0x5db])
        (nil)))

;; Generating RTL for gimple basic block 12

;; memcpy (data, kbuf, copy);

(insn 81 80 82 include/linux/regset.h:257 (set (reg:SI 162)
        (reg/v/f:SI 135 [ data ])) -1 (nil))

(insn 82 81 83 include/linux/regset.h:257 (set (reg:SI 163)
        (reg/v/f:SI 146 [ kbuf ])) -1 (nil))

(insn 83 82 84 include/linux/regset.h:257 (set (reg:SI 164)
        (reg/v:SI 134 [ copy ])) -1 (nil))

(insn 84 83 85 include/linux/regset.h:257 (set (reg:SI 0 r0)
        (reg:SI 162)) -1 (nil))

(insn 85 84 86 include/linux/regset.h:257 (set (reg:SI 1 r1)
        (reg:SI 163)) -1 (nil))

(insn 86 85 87 include/linux/regset.h:257 (set (reg:SI 2 r2)
        (reg:SI 164)) -1 (nil))

(call_insn 87 86 88 include/linux/regset.h:257 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41] <function_decl 0x115c3d80 memcpy>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 88 87 0 include/linux/regset.h:257 (set (reg:SI 165)
        (reg:SI 0 r0)) -1 (nil))

;; Generating RTL for gimple basic block 13

;; 

(code_label 91 90 92 46 "" [0 uses])

(note 92 91 0 NOTE_INSN_BASIC_BLOCK)

;; D.27591 = __copy_from_user (data, ubuf, copy);

(insn 93 92 94 include/linux/regset.h:259 (set (reg:SI 0 r0)
        (reg/v/f:SI 135 [ data ])) -1 (nil))

(insn 94 93 95 include/linux/regset.h:259 (set (reg:SI 1 r1)
        (reg/v/f:SI 147 [ ubuf ])) -1 (nil))

(insn 95 94 96 include/linux/regset.h:259 (set (reg:SI 2 r2)
        (reg/v:SI 134 [ copy ])) -1 (nil))

(call_insn 96 95 97 include/linux/regset.h:259 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__copy_from_user") [flags 0x41] <function_decl 0x113a2f80 __copy_from_user>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 97 96 0 include/linux/regset.h:259 (set (reg:SI 133 [ D.27591 ])
        (reg:SI 0 r0)) -1 (nil))

;; if (D.27591 != 0)

(insn 98 97 99 include/linux/regset.h:259 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 133 [ D.27591 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 99 98 0 include/linux/regset.h:259 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

;; Generating RTL for gimple basic block 14

;; 

(code_label 100 99 101 41 "" [0 uses])

(note 101 100 0 NOTE_INSN_BASIC_BLOCK)

;; vfp_sync_hwstate (thread);

(insn 102 101 103 arch/arm/kernel/ptrace.c:725 (set (reg:SI 0 r0)
        (reg/v/f:SI 139 [ thread ])) -1 (nil))

(call_insn 103 102 0 arch/arm/kernel/ptrace.c:725 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_sync_hwstate") [flags 0x41] <function_decl 0x10a83b00 vfp_sync_hwstate>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

;; thread->vfpstate.hard = new_vfp;

(insn 104 103 105 arch/arm/kernel/ptrace.c:726 (set (reg:SI 166)
        (plus:SI (reg/v/f:SI 139 [ thread ])
            (const_int 432 [0x1b0]))) -1 (nil))

(insn 105 104 106 arch/arm/kernel/ptrace.c:726 (set (reg:SI 167)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -280 [0xfffffffffffffee8]))) -1 (nil))

(insn 106 105 107 arch/arm/kernel/ptrace.c:726 (set (reg:SI 168)
        (const_int 280 [0x118])) -1 (nil))

(insn 107 106 108 arch/arm/kernel/ptrace.c:726 (set (reg:SI 0 r0)
        (reg:SI 166)) -1 (nil))

(insn 108 107 109 arch/arm/kernel/ptrace.c:726 (set (reg:SI 1 r1)
        (reg:SI 167)) -1 (nil))

(insn 109 108 110 arch/arm/kernel/ptrace.c:726 (set (reg:SI 2 r2)
        (reg:SI 168)) -1 (nil))

(call_insn 110 109 111 arch/arm/kernel/ptrace.c:726 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41] <function_decl 0x115c3d80 memcpy>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 111 110 0 arch/arm/kernel/ptrace.c:726 (set (reg:SI 169)
        (reg:SI 0 r0)) -1 (nil))

;; vfp_flush_hwstate (thread);

(insn 112 111 113 arch/arm/kernel/ptrace.c:727 (set (reg:SI 0 r0)
        (reg/v/f:SI 139 [ thread ])) -1 (nil))

(call_insn 113 112 0 arch/arm/kernel/ptrace.c:727 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_flush_hwstate") [flags 0x41] <function_decl 0x10a83b80 vfp_flush_hwstate>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

;; ret = 0;

(insn 114 113 0 arch/arm/kernel/ptrace.c:729 (set (reg/v:SI 140 [ ret ])
        (const_int 0 [0x0])) -1 (nil))

;; Generating RTL for gimple basic block 15

;; 

(code_label 117 116 118 45 "" [0 uses])

(note 118 117 0 NOTE_INSN_BASIC_BLOCK)

;; ret = -14;

(insn 119 118 0 include/linux/regset.h:260 (set (reg/v:SI 140 [ ret ])
        (const_int -14 [0xfffffffffffffff2])) -1 (nil))

;; Generating RTL for gimple basic block 16

;; 

(code_label 120 119 121 47 "" [0 uses])

(note 121 120 0 NOTE_INSN_BASIC_BLOCK)

;; return ret;

(insn 122 121 123 arch/arm/kernel/ptrace.c:730 (set (reg:SI 141 [ <result> ])
        (reg/v:SI 140 [ ret ])) -1 (nil))

(jump_insn 123 122 124 arch/arm/kernel/ptrace.c:730 (set (pc)
        (label_ref 0)) -1 (nil))

(barrier 124 123 0)

;; Generating RTL for gimple basic block 17

;; 

(code_label 125 124 126 42 "" [0 uses])

(note 126 125 0 NOTE_INSN_BASIC_BLOCK)

;; if (pos <= 259)

(insn 128 126 129 17 include/linux/regset.h:252 discrim 1 (set (reg:SI 171)
        (const_int 259 [0x103])) -1 (nil))

(insn 129 128 130 17 include/linux/regset.h:252 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 144 [ pos ])
            (reg:SI 171))) -1 (nil))

(jump_insn 130 129 133 17 include/linux/regset.h:252 discrim 1 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 127)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

(note 133 130 131 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(jump_insn 131 133 132 19 include/linux/regset.h:252 discrim 1 (set (pc)
        (label_ref 100)) -1 (nil))

(barrier 132 131 0)


;;
;; Full RTL generated for this function:
;;
(note 1 0 9 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 9 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 9 3 2 arch/arm/kernel/ptrace.c:698 (set (reg/v/f:SI 142 [ target ])
        (reg:SI 0 r0 [ target ])) -1 (nil))

(insn 3 2 4 2 arch/arm/kernel/ptrace.c:698 (set (reg/v/f:SI 143 [ regset ])
        (reg:SI 1 r1 [ regset ])) -1 (nil))

(insn 4 3 5 2 arch/arm/kernel/ptrace.c:698 (set (reg/v:SI 144 [ pos ])
        (reg:SI 2 r2 [ pos ])) -1 (nil))

(insn 5 4 6 2 arch/arm/kernel/ptrace.c:698 (set (reg/v:SI 145 [ count ])
        (reg:SI 3 r3 [ count ])) -1 (nil))

(insn 6 5 7 2 arch/arm/kernel/ptrace.c:698 (set (reg/v/f:SI 146 [ kbuf ])
        (mem/f/c/i:SI (reg/f:SI 128 virtual-incoming-args) [0 kbuf+0 S4 A32])) -1 (expr_list:REG_EQUIV (mem/f/c/i:SI (reg/f:SI 128 virtual-incoming-args) [0 kbuf+0 S4 A32])
        (nil)))

(insn 7 6 8 2 arch/arm/kernel/ptrace.c:698 (set (reg/v/f:SI 147 [ ubuf ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 128 virtual-incoming-args)
                (const_int 4 [0x4])) [0 ubuf+0 S4 A32])) -1 (expr_list:REG_EQUIV (mem/f/c/i:SI (plus:SI (reg/f:SI 128 virtual-incoming-args)
                (const_int 4 [0x4])) [0 ubuf+0 S4 A32])
        (nil)))

(note 8 7 10 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 3)

;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [100.0%]  (fallthru)
(note 10 8 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 11 10 12 3 arch/arm/kernel/ptrace.c:700 (set (reg/v/f:SI 139 [ thread ])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 142 [ target ])
                (const_int 4 [0x4])) [0 <variable>.stack+0 S4 A32])) -1 (nil))

(insn 12 11 13 3 arch/arm/kernel/ptrace.c:701 (set (reg:SI 148)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -280 [0xfffffffffffffee8]))) -1 (nil))

(insn 13 12 14 3 arch/arm/kernel/ptrace.c:701 (set (reg:SI 149)
        (plus:SI (reg/v/f:SI 139 [ thread ])
            (const_int 432 [0x1b0]))) -1 (nil))

(insn 14 13 15 3 arch/arm/kernel/ptrace.c:701 (set (reg:SI 150)
        (const_int 280 [0x118])) -1 (nil))

(insn 15 14 16 3 arch/arm/kernel/ptrace.c:701 (set (reg:SI 0 r0)
        (reg:SI 148)) -1 (nil))

(insn 16 15 17 3 arch/arm/kernel/ptrace.c:701 (set (reg:SI 1 r1)
        (reg:SI 149)) -1 (nil))

(insn 17 16 18 3 arch/arm/kernel/ptrace.c:701 (set (reg:SI 2 r2)
        (reg:SI 150)) -1 (nil))

(call_insn 18 17 19 3 arch/arm/kernel/ptrace.c:701 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41] <function_decl 0x115c3d80 memcpy>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 19 18 20 3 arch/arm/kernel/ptrace.c:701 (set (reg:SI 151)
        (reg:SI 0 r0)) -1 (nil))

(insn 20 19 21 3 include/linux/regset.h:249 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 145 [ count ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 21 20 22 3 include/linux/regset.h:249 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 100)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 3 -> ( 15 4)

;; Succ edge  15 [50.0%] 
;; Succ edge  4 [50.0%]  (fallthru)

;; Start of basic block ( 3) -> 4
;; Pred edge  3 [50.0%]  (fallthru)
(note 22 21 23 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 23 22 24 4 include/linux/regset.h:252 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 144 [ pos ])
            (const_int 255 [0xff]))) -1 (nil))

(jump_insn 24 23 25 4 include/linux/regset.h:252 discrim 1 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 125)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 4 -> ( 5 18)

;; Succ edge  5 [50.0%]  (fallthru)
;; Succ edge  18 [50.0%] 

;; Start of basic block ( 4) -> 5
;; Pred edge  4 [50.0%]  (fallthru)
(note 25 24 26 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 26 25 27 5 include/linux/regset.h:254 (set (reg/v:SI 137 [ copy ])
        (minus:SI (const_int 256 [0x100])
            (reg/v:SI 144 [ pos ]))) -1 (nil))

(insn 27 26 28 5 include/linux/regset.h:254 (parallel [
            (set (reg/v:SI 137 [ copy ])
                (umin:SI (reg/v:SI 137 [ copy ])
                    (reg/v:SI 145 [ count ])))
            (clobber (reg:CC 24 cc))
        ]) -1 (nil))

(insn 28 27 29 5 include/linux/regset.h:255 (set (reg:SI 152)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -280 [0xfffffffffffffee8]))) -1 (nil))

(insn 29 28 30 5 include/linux/regset.h:255 (set (reg/v/f:SI 138 [ data ])
        (plus:SI (reg:SI 152)
            (reg/v:SI 144 [ pos ]))) -1 (nil))

(insn 30 29 31 5 include/linux/regset.h:256 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 146 [ kbuf ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 31 30 32 5 include/linux/regset.h:256 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 44)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 1499 [0x5db])
        (nil)))
;; End of basic block 5 -> ( 6 7)

;; Succ edge  6 [85.0%]  (fallthru)
;; Succ edge  7 [15.0%] 

;; Start of basic block ( 5) -> 6
;; Pred edge  5 [85.0%]  (fallthru)
(note 32 31 33 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 33 32 34 6 include/linux/regset.h:257 (set (reg:SI 153)
        (reg/v/f:SI 138 [ data ])) -1 (nil))

(insn 34 33 35 6 include/linux/regset.h:257 (set (reg:SI 154)
        (reg/v/f:SI 146 [ kbuf ])) -1 (nil))

(insn 35 34 36 6 include/linux/regset.h:257 (set (reg:SI 155)
        (reg/v:SI 137 [ copy ])) -1 (nil))

(insn 36 35 37 6 include/linux/regset.h:257 (set (reg:SI 0 r0)
        (reg:SI 153)) -1 (nil))

(insn 37 36 38 6 include/linux/regset.h:257 (set (reg:SI 1 r1)
        (reg:SI 154)) -1 (nil))

(insn 38 37 39 6 include/linux/regset.h:257 (set (reg:SI 2 r2)
        (reg:SI 155)) -1 (nil))

(call_insn 39 38 40 6 include/linux/regset.h:257 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41] <function_decl 0x115c3d80 memcpy>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 40 39 41 6 include/linux/regset.h:257 (set (reg:SI 156)
        (reg:SI 0 r0)) -1 (nil))

(insn 41 40 42 6 include/linux/regset.h:258 (set (reg/v/f:SI 146 [ kbuf ])
        (plus:SI (reg/v/f:SI 146 [ kbuf ])
            (reg/v:SI 137 [ copy ]))) -1 (nil))

(jump_insn 42 41 43 6 include/linux/regset.h:258 (set (pc)
        (label_ref 55)) -1 (nil))
;; End of basic block 6 -> ( 9)

;; Succ edge  9 [100.0%] 

(barrier 43 42 44)

;; Start of basic block ( 5) -> 7
;; Pred edge  5 [15.0%] 
(code_label 44 43 45 7 43 "" [1 uses])

(note 45 44 46 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 46 45 47 7 include/linux/regset.h:259 (set (reg:SI 0 r0)
        (reg/v/f:SI 138 [ data ])) -1 (nil))

(insn 47 46 48 7 include/linux/regset.h:259 (set (reg:SI 1 r1)
        (reg/v/f:SI 147 [ ubuf ])) -1 (nil))

(insn 48 47 49 7 include/linux/regset.h:259 (set (reg:SI 2 r2)
        (reg/v:SI 137 [ copy ])) -1 (nil))

(call_insn 49 48 50 7 include/linux/regset.h:259 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__copy_from_user") [flags 0x41] <function_decl 0x113a2f80 __copy_from_user>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 50 49 51 7 include/linux/regset.h:259 (set (reg:SI 136 [ D.27545 ])
        (reg:SI 0 r0)) -1 (nil))

(insn 51 50 52 7 include/linux/regset.h:259 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 136 [ D.27545 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 52 51 53 7 include/linux/regset.h:259 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 117)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 7 -> ( 16 8)

;; Succ edge  16 [50.0%] 
;; Succ edge  8 [50.0%]  (fallthru)

;; Start of basic block ( 7) -> 8
;; Pred edge  7 [50.0%]  (fallthru)
(note 53 52 54 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 54 53 55 8 include/linux/regset.h:262 (set (reg/v/f:SI 147 [ ubuf ])
        (plus:SI (reg/v/f:SI 147 [ ubuf ])
            (reg/v:SI 137 [ copy ]))) -1 (nil))
;; End of basic block 8 -> ( 9)

;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 6 8) -> 9
;; Pred edge  6 [100.0%] 
;; Pred edge  8 [100.0%]  (fallthru)
(code_label 55 54 56 9 44 "" [1 uses])

(note 56 55 57 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 57 56 58 9 include/linux/regset.h:264 (set (reg/v:SI 145 [ count ])
        (minus:SI (reg/v:SI 145 [ count ])
            (reg/v:SI 137 [ copy ]))) -1 (nil))

(insn 58 57 59 9 include/linux/regset.h:305 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 145 [ count ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 59 58 60 9 include/linux/regset.h:305 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 100)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 0 [0x0])
        (nil)))
;; End of basic block 9 -> ( 15 10)

;; Succ edge  15
;; Succ edge  10 [100.0%]  (fallthru)

;; Start of basic block ( 9) -> 10
;; Pred edge  9 [100.0%]  (fallthru)
(note 60 59 61 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 61 60 62 10 include/linux/regset.h:263 (set (reg/v:SI 144 [ pos ])
        (plus:SI (reg/v:SI 144 [ pos ])
            (reg/v:SI 137 [ copy ]))) -1 (nil))

(insn 62 61 63 10 include/linux/regset.h:307 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 144 [ pos ])
            (const_int 255 [0xff]))) -1 (nil))

(jump_insn 63 62 64 10 include/linux/regset.h:307 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 125)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 9978 [0x26fa])
        (nil)))
;; End of basic block 10 -> ( 11 18)

;; Succ edge  11 [0.2%]  (fallthru)
;; Succ edge  18 [99.8%] 

;; Start of basic block ( 10) -> 11
;; Pred edge  10 [0.2%]  (fallthru)
(note 64 63 65 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 65 64 66 11 include/linux/regset.h:307 discrim 1 (set (reg:SI 157)
        (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x116b8180>)) -1 (nil))

(insn 66 65 67 11 include/linux/regset.h:307 discrim 1 (set (reg:SI 158)
        (const_int 307 [0x133])) -1 (nil))

(insn 67 66 68 11 include/linux/regset.h:307 discrim 1 (set (reg:SI 0 r0)
        (reg:SI 157)) -1 (nil))

(insn 68 67 69 11 include/linux/regset.h:307 discrim 1 (set (reg:SI 1 r1)
        (reg:SI 158)) -1 (nil))

(call_insn 69 68 70 11 include/linux/regset.h:307 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("__bug") [flags 0x41] <function_decl 0x10a2ec00 __bug>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (expr_list:REG_NORETURN (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 11 -> ()


(barrier 70 69 127)

;; Start of basic block ( 18) -> 12
;; Pred edge  18 [50.0%] 
(code_label 127 70 71 12 48 "" [1 uses])

(note 71 127 72 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 72 71 73 12 include/linux/regset.h:254 (set (reg/v:SI 134 [ copy ])
        (minus:SI (const_int 260 [0x104])
            (reg/v:SI 144 [ pos ]))) -1 (nil))

(insn 73 72 74 12 include/linux/regset.h:254 (parallel [
            (set (reg/v:SI 134 [ copy ])
                (umin:SI (reg/v:SI 134 [ copy ])
                    (reg/v:SI 145 [ count ])))
            (clobber (reg:CC 24 cc))
        ]) -1 (nil))

(insn 74 73 75 12 include/linux/regset.h:255 (set (reg:SI 159)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -280 [0xfffffffffffffee8]))) -1 (nil))

(insn 75 74 76 12 include/linux/regset.h:255 (set (reg:SI 160)
        (plus:SI (reg:SI 159)
            (const_int 260 [0x104]))) -1 (nil))

(insn 76 75 77 12 include/linux/regset.h:255 (set (reg:SI 161)
        (plus:SI (reg/v:SI 144 [ pos ])
            (const_int -256 [0xffffffffffffff00]))) -1 (nil))

(insn 77 76 78 12 include/linux/regset.h:255 (set (reg/v/f:SI 135 [ data ])
        (plus:SI (reg:SI 160)
            (reg:SI 161))) -1 (nil))

(insn 78 77 79 12 include/linux/regset.h:256 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 146 [ kbuf ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 79 78 80 12 include/linux/regset.h:256 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 91)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 1499 [0x5db])
        (nil)))
;; End of basic block 12 -> ( 13 14)

;; Succ edge  13 [85.0%]  (fallthru)
;; Succ edge  14 [15.0%] 

;; Start of basic block ( 12) -> 13
;; Pred edge  12 [85.0%]  (fallthru)
(note 80 79 81 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 81 80 82 13 include/linux/regset.h:257 (set (reg:SI 162)
        (reg/v/f:SI 135 [ data ])) -1 (nil))

(insn 82 81 83 13 include/linux/regset.h:257 (set (reg:SI 163)
        (reg/v/f:SI 146 [ kbuf ])) -1 (nil))

(insn 83 82 84 13 include/linux/regset.h:257 (set (reg:SI 164)
        (reg/v:SI 134 [ copy ])) -1 (nil))

(insn 84 83 85 13 include/linux/regset.h:257 (set (reg:SI 0 r0)
        (reg:SI 162)) -1 (nil))

(insn 85 84 86 13 include/linux/regset.h:257 (set (reg:SI 1 r1)
        (reg:SI 163)) -1 (nil))

(insn 86 85 87 13 include/linux/regset.h:257 (set (reg:SI 2 r2)
        (reg:SI 164)) -1 (nil))

(call_insn 87 86 88 13 include/linux/regset.h:257 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41] <function_decl 0x115c3d80 memcpy>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 88 87 89 13 include/linux/regset.h:257 (set (reg:SI 165)
        (reg:SI 0 r0)) -1 (nil))

(jump_insn 89 88 90 13 include/linux/regset.h:257 (set (pc)
        (label_ref 100)) -1 (nil))
;; End of basic block 13 -> ( 15)

;; Succ edge  15 [100.0%] 

(barrier 90 89 91)

;; Start of basic block ( 12) -> 14
;; Pred edge  12 [15.0%] 
(code_label 91 90 92 14 46 "" [1 uses])

(note 92 91 93 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 93 92 94 14 include/linux/regset.h:259 (set (reg:SI 0 r0)
        (reg/v/f:SI 135 [ data ])) -1 (nil))

(insn 94 93 95 14 include/linux/regset.h:259 (set (reg:SI 1 r1)
        (reg/v/f:SI 147 [ ubuf ])) -1 (nil))

(insn 95 94 96 14 include/linux/regset.h:259 (set (reg:SI 2 r2)
        (reg/v:SI 134 [ copy ])) -1 (nil))

(call_insn 96 95 97 14 include/linux/regset.h:259 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__copy_from_user") [flags 0x41] <function_decl 0x113a2f80 __copy_from_user>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 97 96 98 14 include/linux/regset.h:259 (set (reg:SI 133 [ D.27591 ])
        (reg:SI 0 r0)) -1 (nil))

(insn 98 97 99 14 include/linux/regset.h:259 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 133 [ D.27591 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 99 98 100 14 include/linux/regset.h:259 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 117)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 14 -> ( 16 15)

;; Succ edge  16 [50.0%] 
;; Succ edge  15 [50.0%]  (fallthru)

;; Start of basic block ( 13 3 9 14 19) -> 15
;; Pred edge  13 [100.0%] 
;; Pred edge  3 [50.0%] 
;; Pred edge  9
;; Pred edge  14 [50.0%]  (fallthru)
;; Pred edge  19 [100.0%] 
(code_label 100 99 101 15 41 "" [4 uses])

(note 101 100 102 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 102 101 103 15 arch/arm/kernel/ptrace.c:725 (set (reg:SI 0 r0)
        (reg/v/f:SI 139 [ thread ])) -1 (nil))

(call_insn 103 102 104 15 arch/arm/kernel/ptrace.c:725 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_sync_hwstate") [flags 0x41] <function_decl 0x10a83b00 vfp_sync_hwstate>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 104 103 105 15 arch/arm/kernel/ptrace.c:726 (set (reg:SI 166)
        (plus:SI (reg/v/f:SI 139 [ thread ])
            (const_int 432 [0x1b0]))) -1 (nil))

(insn 105 104 106 15 arch/arm/kernel/ptrace.c:726 (set (reg:SI 167)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -280 [0xfffffffffffffee8]))) -1 (nil))

(insn 106 105 107 15 arch/arm/kernel/ptrace.c:726 (set (reg:SI 168)
        (const_int 280 [0x118])) -1 (nil))

(insn 107 106 108 15 arch/arm/kernel/ptrace.c:726 (set (reg:SI 0 r0)
        (reg:SI 166)) -1 (nil))

(insn 108 107 109 15 arch/arm/kernel/ptrace.c:726 (set (reg:SI 1 r1)
        (reg:SI 167)) -1 (nil))

(insn 109 108 110 15 arch/arm/kernel/ptrace.c:726 (set (reg:SI 2 r2)
        (reg:SI 168)) -1 (nil))

(call_insn 110 109 111 15 arch/arm/kernel/ptrace.c:726 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41] <function_decl 0x115c3d80 memcpy>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 111 110 112 15 arch/arm/kernel/ptrace.c:726 (set (reg:SI 169)
        (reg:SI 0 r0)) -1 (nil))

(insn 112 111 113 15 arch/arm/kernel/ptrace.c:727 (set (reg:SI 0 r0)
        (reg/v/f:SI 139 [ thread ])) -1 (nil))

(call_insn 113 112 114 15 arch/arm/kernel/ptrace.c:727 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_flush_hwstate") [flags 0x41] <function_decl 0x10a83b80 vfp_flush_hwstate>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 114 113 115 15 arch/arm/kernel/ptrace.c:729 (set (reg/v:SI 140 [ ret ])
        (const_int 0 [0x0])) -1 (nil))

(jump_insn 115 114 116 15 arch/arm/kernel/ptrace.c:729 (set (pc)
        (label_ref 120)) -1 (nil))
;; End of basic block 15 -> ( 17)

;; Succ edge  17 [100.0%] 

(barrier 116 115 117)

;; Start of basic block ( 7 14) -> 16
;; Pred edge  7 [50.0%] 
;; Pred edge  14 [50.0%] 
(code_label 117 116 118 16 45 "" [2 uses])

(note 118 117 119 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 119 118 120 16 include/linux/regset.h:260 (set (reg/v:SI 140 [ ret ])
        (const_int -14 [0xfffffffffffffff2])) -1 (nil))
;; End of basic block 16 -> ( 17)

;; Succ edge  17 [100.0%]  (fallthru)

;; Start of basic block ( 16 15) -> 17
;; Pred edge  16 [100.0%]  (fallthru)
;; Pred edge  15 [100.0%] 
(code_label 120 119 121 17 47 "" [1 uses])

(note 121 120 122 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 122 121 123 17 arch/arm/kernel/ptrace.c:730 (set (reg:SI 141 [ <result> ])
        (reg/v:SI 140 [ ret ])) -1 (nil))

(jump_insn 123 122 124 17 arch/arm/kernel/ptrace.c:730 (set (pc)
        (label_ref 134)) -1 (nil))
;; End of basic block 17 -> ( 21)

;; Succ edge  21 [100.0%] 

(barrier 124 123 125)

;; Start of basic block ( 4 10) -> 18
;; Pred edge  4 [50.0%] 
;; Pred edge  10 [99.8%] 
(code_label 125 124 126 18 42 "" [2 uses])

(note 126 125 128 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 128 126 129 18 include/linux/regset.h:252 discrim 1 (set (reg:SI 171)
        (const_int 259 [0x103])) -1 (nil))

(insn 129 128 130 18 include/linux/regset.h:252 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 144 [ pos ])
            (reg:SI 171))) -1 (nil))

(jump_insn 130 129 133 18 include/linux/regset.h:252 discrim 1 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 127)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 18 -> ( 12 19)

;; Succ edge  12 [50.0%] 
;; Succ edge  19 [50.0%]  (fallthru)

;; Start of basic block ( 18) -> 19
;; Pred edge  18 [50.0%]  (fallthru)
(note 133 130 131 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(jump_insn 131 133 132 19 include/linux/regset.h:252 discrim 1 (set (pc)
        (label_ref 100)) -1 (nil))
;; End of basic block 19 -> ( 15)

;; Succ edge  15 [100.0%] 

(barrier 132 131 142)

;; Start of basic block () -> 20
(note 142 132 136 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn 136 142 137 20 arch/arm/kernel/ptrace.c:730 (clobber (reg/i:SI 0 r0)) -1 (nil))

(insn 137 136 138 20 arch/arm/kernel/ptrace.c:730 (clobber (reg:SI 141 [ <result> ])) -1 (nil))

(jump_insn 138 137 139 20 arch/arm/kernel/ptrace.c:730 (set (pc)
        (label_ref 140)) -1 (nil))
;; End of basic block 20 -> ( 22)

;; Succ edge  22 [100.0%] 

(barrier 139 138 134)

;; Start of basic block ( 17) -> 21
;; Pred edge  17 [100.0%] 
(code_label 134 139 143 21 40 "" [1 uses])

(note 143 134 135 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn 135 143 140 21 arch/arm/kernel/ptrace.c:730 (set (reg/i:SI 0 r0)
        (reg:SI 141 [ <result> ])) -1 (nil))
;; End of basic block 21 -> ( 22)

;; Succ edge  22 [100.0%]  (fallthru)

;; Start of basic block ( 20 21) -> 22
;; Pred edge  20 [100.0%] 
;; Pred edge  21 [100.0%]  (fallthru)
(code_label 140 135 144 22 49 "" [1 uses])

(note 144 140 141 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(insn 141 144 0 22 arch/arm/kernel/ptrace.c:730 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 22 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function fpa_set (fpa_set)[0:1560]


;; Generating RTL for gimple basic block 2

;; thread = (struct thread_info *) target->stack;

(insn 11 10 0 arch/arm/kernel/ptrace.c:625 (set (reg/v/f:SI 137 [ thread ])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 139 [ target ])
                (const_int 4 [0x4])) [0 <variable>.stack+0 S4 A32])) -1 (nil))

;; thread->used_cp[2] = 1;

(insn 12 11 13 arch/arm/kernel/ptrace.c:627 (set (reg:SI 145)
        (const_int 1 [0x1])) -1 (nil))

(insn 13 12 14 arch/arm/kernel/ptrace.c:627 (set (reg:QI 146)
        (subreg:QI (reg:SI 145) 0)) -1 (nil))

(insn 14 13 0 arch/arm/kernel/ptrace.c:627 (set (mem/s/j:QI (plus:SI (reg/v/f:SI 137 [ thread ])
                (const_int 82 [0x52])) [0 <variable>.used_cp+2 S1 A16])
        (reg:QI 146)) -1 (nil))

;; thread->used_cp[1] = 1;

(insn 15 14 16 arch/arm/kernel/ptrace.c:627 (set (reg:SI 147)
        (const_int 1 [0x1])) -1 (nil))

(insn 16 15 17 arch/arm/kernel/ptrace.c:627 (set (reg:QI 148)
        (subreg:QI (reg:SI 147) 0)) -1 (nil))

(insn 17 16 0 arch/arm/kernel/ptrace.c:627 (set (mem/s/j:QI (plus:SI (reg/v/f:SI 137 [ thread ])
                (const_int 81 [0x51])) [0 <variable>.used_cp+1 S1 A8])
        (reg:QI 148)) -1 (nil))

;; if (count == 0)

(insn 18 17 19 include/linux/regset.h:249 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 142 [ count ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 19 18 0 include/linux/regset.h:249 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))

;; Generating RTL for gimple basic block 3

;; if (pos <= 115)

(insn 21 20 22 include/linux/regset.h:252 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 141 [ pos ])
            (const_int 115 [0x73]))) -1 (nil))

(jump_insn 22 21 0 include/linux/regset.h:252 discrim 1 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))

;; Generating RTL for gimple basic block 4

;; copy = MIN_EXPR <116 - pos, count>;

(insn 24 23 25 include/linux/regset.h:254 (set (reg/v:SI 134 [ copy ])
        (minus:SI (const_int 116 [0x74])
            (reg/v:SI 141 [ pos ]))) -1 (nil))

(insn 25 24 0 include/linux/regset.h:254 (parallel [
            (set (reg/v:SI 134 [ copy ])
                (umin:SI (reg/v:SI 134 [ copy ])
                    (reg/v:SI 142 [ count ])))
            (clobber (reg:CC 24 cc))
        ]) -1 (nil))

;; data = &thread->fpstate + pos;

(insn 26 25 27 include/linux/regset.h:255 (set (reg:SI 149)
        (plus:SI (reg/v/f:SI 137 [ thread ])
            (const_int 288 [0x120]))) -1 (nil))

(insn 27 26 0 include/linux/regset.h:255 (set (reg/v/f:SI 136 [ data ])
        (plus:SI (reg:SI 149)
            (reg/v:SI 141 [ pos ]))) -1 (nil))

;; if (kbuf != 0B)

(insn 28 27 29 include/linux/regset.h:256 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 143 [ kbuf ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 29 28 0 include/linux/regset.h:256 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 73 [0x49])
        (nil)))

;; Generating RTL for gimple basic block 5

;; memcpy (data, kbuf, copy);

(insn 31 30 32 include/linux/regset.h:257 (set (reg:SI 150)
        (reg/v/f:SI 136 [ data ])) -1 (nil))

(insn 32 31 33 include/linux/regset.h:257 (set (reg:SI 151)
        (reg/v/f:SI 143 [ kbuf ])) -1 (nil))

(insn 33 32 34 include/linux/regset.h:257 (set (reg:SI 152)
        (reg/v:SI 134 [ copy ])) -1 (nil))

(insn 34 33 35 include/linux/regset.h:257 (set (reg:SI 0 r0)
        (reg:SI 150)) -1 (nil))

(insn 35 34 36 include/linux/regset.h:257 (set (reg:SI 1 r1)
        (reg:SI 151)) -1 (nil))

(insn 36 35 37 include/linux/regset.h:257 (set (reg:SI 2 r2)
        (reg:SI 152)) -1 (nil))

(call_insn 37 36 38 include/linux/regset.h:257 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41] <function_decl 0x115c3d80 memcpy>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 38 37 0 include/linux/regset.h:257 (set (reg:SI 153)
        (reg:SI 0 r0)) -1 (nil))

;; D.27612 = 0;

(insn 39 38 0 include/linux/regset.h:266 (set (reg:SI 135 [ D.27612 ])
        (const_int 0 [0x0])) -1 (nil))

;; Generating RTL for gimple basic block 6

;; 

(code_label 42 41 43 54 "" [0 uses])

(note 43 42 0 NOTE_INSN_BASIC_BLOCK)

;; D.27616 = __copy_from_user (data, ubuf, copy);

(insn 44 43 45 include/linux/regset.h:259 (set (reg:SI 0 r0)
        (reg/v/f:SI 136 [ data ])) -1 (nil))

(insn 45 44 46 include/linux/regset.h:259 (set (reg:SI 1 r1)
        (reg/v/f:SI 144 [ ubuf ])) -1 (nil))

(insn 46 45 47 include/linux/regset.h:259 (set (reg:SI 2 r2)
        (reg/v:SI 134 [ copy ])) -1 (nil))

(call_insn 47 46 48 include/linux/regset.h:259 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__copy_from_user") [flags 0x41] <function_decl 0x113a2f80 __copy_from_user>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 48 47 0 include/linux/regset.h:259 (set (reg:SI 133 [ D.27616 ])
        (reg:SI 0 r0)) -1 (nil))

;; if (D.27616 != 0)

(insn 49 48 50 include/linux/regset.h:259 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 133 [ D.27616 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 50 49 0 include/linux/regset.h:259 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
        (nil)))

;; Generating RTL for gimple basic block 7

;; D.27612 = -14;

(insn 52 51 0 include/linux/regset.h:260 (set (reg:SI 135 [ D.27612 ])
        (const_int -14 [0xfffffffffffffff2])) -1 (nil))

;; Generating RTL for gimple basic block 8

;; 

(code_label 55 54 56 53 "" [0 uses])

(note 56 55 0 NOTE_INSN_BASIC_BLOCK)

;; D.27612 = 0;

(insn 57 56 0 include/linux/regset.h:250 (set (reg:SI 135 [ D.27612 ])
        (const_int 0 [0x0])) -1 (nil))

;; Generating RTL for gimple basic block 9

;; 

(code_label 58 57 59 55 "" [0 uses])

(note 59 58 0 NOTE_INSN_BASIC_BLOCK)

;; return D.27612;

(insn 60 59 61 arch/arm/kernel/ptrace.c:632 (set (reg:SI 138 [ <result> ])
        (reg:SI 135 [ D.27612 ])) -1 (nil))

(jump_insn 61 60 62 arch/arm/kernel/ptrace.c:632 (set (pc)
        (label_ref 0)) -1 (nil))

(barrier 62 61 0)


;;
;; Full RTL generated for this function:
;;
(note 1 0 9 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 9 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 9 3 2 arch/arm/kernel/ptrace.c:624 (set (reg/v/f:SI 139 [ target ])
        (reg:SI 0 r0 [ target ])) -1 (nil))

(insn 3 2 4 2 arch/arm/kernel/ptrace.c:624 (set (reg/v/f:SI 140 [ regset ])
        (reg:SI 1 r1 [ regset ])) -1 (nil))

(insn 4 3 5 2 arch/arm/kernel/ptrace.c:624 (set (reg/v:SI 141 [ pos ])
        (reg:SI 2 r2 [ pos ])) -1 (nil))

(insn 5 4 6 2 arch/arm/kernel/ptrace.c:624 (set (reg/v:SI 142 [ count ])
        (reg:SI 3 r3 [ count ])) -1 (nil))

(insn 6 5 7 2 arch/arm/kernel/ptrace.c:624 (set (reg/v/f:SI 143 [ kbuf ])
        (mem/f/c/i:SI (reg/f:SI 128 virtual-incoming-args) [0 kbuf+0 S4 A32])) -1 (expr_list:REG_EQUIV (mem/f/c/i:SI (reg/f:SI 128 virtual-incoming-args) [0 kbuf+0 S4 A32])
        (nil)))

(insn 7 6 8 2 arch/arm/kernel/ptrace.c:624 (set (reg/v/f:SI 144 [ ubuf ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 128 virtual-incoming-args)
                (const_int 4 [0x4])) [0 ubuf+0 S4 A32])) -1 (expr_list:REG_EQUIV (mem/f/c/i:SI (plus:SI (reg/f:SI 128 virtual-incoming-args)
                (const_int 4 [0x4])) [0 ubuf+0 S4 A32])
        (nil)))

(note 8 7 10 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 3)

;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [100.0%]  (fallthru)
(note 10 8 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 11 10 12 3 arch/arm/kernel/ptrace.c:625 (set (reg/v/f:SI 137 [ thread ])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 139 [ target ])
                (const_int 4 [0x4])) [0 <variable>.stack+0 S4 A32])) -1 (nil))

(insn 12 11 13 3 arch/arm/kernel/ptrace.c:627 (set (reg:SI 145)
        (const_int 1 [0x1])) -1 (nil))

(insn 13 12 14 3 arch/arm/kernel/ptrace.c:627 (set (reg:QI 146)
        (subreg:QI (reg:SI 145) 0)) -1 (nil))

(insn 14 13 15 3 arch/arm/kernel/ptrace.c:627 (set (mem/s/j:QI (plus:SI (reg/v/f:SI 137 [ thread ])
                (const_int 82 [0x52])) [0 <variable>.used_cp+2 S1 A16])
        (reg:QI 146)) -1 (nil))

(insn 15 14 16 3 arch/arm/kernel/ptrace.c:627 (set (reg:SI 147)
        (const_int 1 [0x1])) -1 (nil))

(insn 16 15 17 3 arch/arm/kernel/ptrace.c:627 (set (reg:QI 148)
        (subreg:QI (reg:SI 147) 0)) -1 (nil))

(insn 17 16 18 3 arch/arm/kernel/ptrace.c:627 (set (mem/s/j:QI (plus:SI (reg/v/f:SI 137 [ thread ])
                (const_int 81 [0x51])) [0 <variable>.used_cp+1 S1 A8])
        (reg:QI 148)) -1 (nil))

(insn 18 17 19 3 include/linux/regset.h:249 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 142 [ count ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 19 18 20 3 include/linux/regset.h:249 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 55)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))
;; End of basic block 3 -> ( 9 4)

;; Succ edge  9 [39.0%] 
;; Succ edge  4 [61.0%]  (fallthru)

;; Start of basic block ( 3) -> 4
;; Pred edge  3 [61.0%]  (fallthru)
(note 20 19 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 21 20 22 4 include/linux/regset.h:252 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 141 [ pos ])
            (const_int 115 [0x73]))) -1 (nil))

(jump_insn 22 21 23 4 include/linux/regset.h:252 discrim 1 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 55)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))
;; End of basic block 4 -> ( 5 9)

;; Succ edge  5 [61.0%]  (fallthru)
;; Succ edge  9 [39.0%] 

;; Start of basic block ( 4) -> 5
;; Pred edge  4 [61.0%]  (fallthru)
(note 23 22 24 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 24 23 25 5 include/linux/regset.h:254 (set (reg/v:SI 134 [ copy ])
        (minus:SI (const_int 116 [0x74])
            (reg/v:SI 141 [ pos ]))) -1 (nil))

(insn 25 24 26 5 include/linux/regset.h:254 (parallel [
            (set (reg/v:SI 134 [ copy ])
                (umin:SI (reg/v:SI 134 [ copy ])
                    (reg/v:SI 142 [ count ])))
            (clobber (reg:CC 24 cc))
        ]) -1 (nil))

(insn 26 25 27 5 include/linux/regset.h:255 (set (reg:SI 149)
        (plus:SI (reg/v/f:SI 137 [ thread ])
            (const_int 288 [0x120]))) -1 (nil))

(insn 27 26 28 5 include/linux/regset.h:255 (set (reg/v/f:SI 136 [ data ])
        (plus:SI (reg:SI 149)
            (reg/v:SI 141 [ pos ]))) -1 (nil))

(insn 28 27 29 5 include/linux/regset.h:256 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 143 [ kbuf ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 29 28 30 5 include/linux/regset.h:256 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 42)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 73 [0x49])
        (nil)))
;; End of basic block 5 -> ( 6 7)

;; Succ edge  6 [99.3%]  (fallthru)
;; Succ edge  7 [0.7%] 

;; Start of basic block ( 5) -> 6
;; Pred edge  5 [99.3%]  (fallthru)
(note 30 29 31 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 31 30 32 6 include/linux/regset.h:257 (set (reg:SI 150)
        (reg/v/f:SI 136 [ data ])) -1 (nil))

(insn 32 31 33 6 include/linux/regset.h:257 (set (reg:SI 151)
        (reg/v/f:SI 143 [ kbuf ])) -1 (nil))

(insn 33 32 34 6 include/linux/regset.h:257 (set (reg:SI 152)
        (reg/v:SI 134 [ copy ])) -1 (nil))

(insn 34 33 35 6 include/linux/regset.h:257 (set (reg:SI 0 r0)
        (reg:SI 150)) -1 (nil))

(insn 35 34 36 6 include/linux/regset.h:257 (set (reg:SI 1 r1)
        (reg:SI 151)) -1 (nil))

(insn 36 35 37 6 include/linux/regset.h:257 (set (reg:SI 2 r2)
        (reg:SI 152)) -1 (nil))

(call_insn 37 36 38 6 include/linux/regset.h:257 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41] <function_decl 0x115c3d80 memcpy>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 38 37 39 6 include/linux/regset.h:257 (set (reg:SI 153)
        (reg:SI 0 r0)) -1 (nil))

(insn 39 38 40 6 include/linux/regset.h:266 (set (reg:SI 135 [ D.27612 ])
        (const_int 0 [0x0])) -1 (nil))

(jump_insn 40 39 41 6 include/linux/regset.h:266 (set (pc)
        (label_ref 58)) -1 (nil))
;; End of basic block 6 -> ( 10)

;; Succ edge  10 [100.0%] 

(barrier 41 40 42)

;; Start of basic block ( 5) -> 7
;; Pred edge  5 [0.7%] 
(code_label 42 41 43 7 54 "" [1 uses])

(note 43 42 44 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 44 43 45 7 include/linux/regset.h:259 (set (reg:SI 0 r0)
        (reg/v/f:SI 136 [ data ])) -1 (nil))

(insn 45 44 46 7 include/linux/regset.h:259 (set (reg:SI 1 r1)
        (reg/v/f:SI 144 [ ubuf ])) -1 (nil))

(insn 46 45 47 7 include/linux/regset.h:259 (set (reg:SI 2 r2)
        (reg/v:SI 134 [ copy ])) -1 (nil))

(call_insn 47 46 48 7 include/linux/regset.h:259 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__copy_from_user") [flags 0x41] <function_decl 0x113a2f80 __copy_from_user>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 48 47 49 7 include/linux/regset.h:259 (set (reg:SI 133 [ D.27616 ])
        (reg:SI 0 r0)) -1 (nil))

(insn 49 48 50 7 include/linux/regset.h:259 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 133 [ D.27616 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 50 49 51 7 include/linux/regset.h:259 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 55)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
        (nil)))
;; End of basic block 7 -> ( 8 9)

;; Succ edge  8 [39.0%]  (fallthru)
;; Succ edge  9 [61.0%] 

;; Start of basic block ( 7) -> 8
;; Pred edge  7 [39.0%]  (fallthru)
(note 51 50 52 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 52 51 53 8 include/linux/regset.h:260 (set (reg:SI 135 [ D.27612 ])
        (const_int -14 [0xfffffffffffffff2])) -1 (nil))

(jump_insn 53 52 54 8 include/linux/regset.h:260 (set (pc)
        (label_ref 58)) -1 (nil))
;; End of basic block 8 -> ( 10)

;; Succ edge  10 [100.0%] 

(barrier 54 53 55)

;; Start of basic block ( 3 4 7) -> 9
;; Pred edge  3 [39.0%] 
;; Pred edge  4 [39.0%] 
;; Pred edge  7 [61.0%] 
(code_label 55 54 56 9 53 "" [3 uses])

(note 56 55 57 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 57 56 58 9 include/linux/regset.h:250 (set (reg:SI 135 [ D.27612 ])
        (const_int 0 [0x0])) -1 (nil))
;; End of basic block 9 -> ( 10)

;; Succ edge  10 [100.0%]  (fallthru)

;; Start of basic block ( 9 8 6) -> 10
;; Pred edge  9 [100.0%]  (fallthru)
;; Pred edge  8 [100.0%] 
;; Pred edge  6 [100.0%] 
(code_label 58 57 59 10 55 "" [2 uses])

(note 59 58 60 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 60 59 61 10 arch/arm/kernel/ptrace.c:632 (set (reg:SI 138 [ <result> ])
        (reg:SI 135 [ D.27612 ])) -1 (nil))

(jump_insn 61 60 62 10 arch/arm/kernel/ptrace.c:632 (set (pc)
        (label_ref 63)) -1 (nil))
;; End of basic block 10 -> ( 12)

;; Succ edge  12 [100.0%] 

(barrier 62 61 71)

;; Start of basic block () -> 11
(note 71 62 65 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 65 71 66 11 arch/arm/kernel/ptrace.c:632 (clobber (reg/i:SI 0 r0)) -1 (nil))

(insn 66 65 67 11 arch/arm/kernel/ptrace.c:632 (clobber (reg:SI 138 [ <result> ])) -1 (nil))

(jump_insn 67 66 68 11 arch/arm/kernel/ptrace.c:632 (set (pc)
        (label_ref 69)) -1 (nil))
;; End of basic block 11 -> ( 13)

;; Succ edge  13 [100.0%] 

(barrier 68 67 63)

;; Start of basic block ( 10) -> 12
;; Pred edge  10 [100.0%] 
(code_label 63 68 72 12 52 "" [1 uses])

(note 72 63 64 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 64 72 69 12 arch/arm/kernel/ptrace.c:632 (set (reg/i:SI 0 r0)
        (reg:SI 138 [ <result> ])) -1 (nil))
;; End of basic block 12 -> ( 13)

;; Succ edge  13 [100.0%]  (fallthru)

;; Start of basic block ( 11 12) -> 13
;; Pred edge  11 [100.0%] 
;; Pred edge  12 [100.0%]  (fallthru)
(code_label 69 64 73 13 56 "" [1 uses])

(note 73 69 70 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 70 73 0 13 arch/arm/kernel/ptrace.c:632 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 13 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function gpr_set (gpr_set)[0:1558]

Partition 0: size 72 align 4
	newregs, offset 0

;; Generating RTL for gimple basic block 2

;; if (count == 0)

(insn 11 10 12 include/linux/regset.h:249 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 144 [ count ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 12 11 0 include/linux/regset.h:249 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

;; Generating RTL for gimple basic block 3

;; if (pos <= 71)

(insn 14 13 15 include/linux/regset.h:252 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 143 [ pos ])
            (const_int 71 [0x47]))) -1 (nil))

(jump_insn 15 14 0 include/linux/regset.h:252 discrim 1 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

;; Generating RTL for gimple basic block 4

;; copy = MIN_EXPR <72 - pos, count>;

(insn 17 16 18 include/linux/regset.h:254 (set (reg/v:SI 137 [ copy ])
        (minus:SI (const_int 72 [0x48])
            (reg/v:SI 143 [ pos ]))) -1 (nil))

(insn 18 17 0 include/linux/regset.h:254 (parallel [
            (set (reg/v:SI 137 [ copy ])
                (umin:SI (reg/v:SI 137 [ copy ])
                    (reg/v:SI 144 [ count ])))
            (clobber (reg:CC 24 cc))
        ]) -1 (nil))

;; data = &newregs + pos;

(insn 19 18 20 include/linux/regset.h:255 (set (reg:SI 147)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -72 [0xffffffffffffffb8]))) -1 (nil))

(insn 20 19 0 include/linux/regset.h:255 (set (reg/v/f:SI 138 [ data ])
        (plus:SI (reg:SI 147)
            (reg/v:SI 143 [ pos ]))) -1 (nil))

;; if (kbuf != 0B)

(insn 21 20 22 include/linux/regset.h:256 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 145 [ kbuf ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 22 21 0 include/linux/regset.h:256 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 1499 [0x5db])
        (nil)))

;; Generating RTL for gimple basic block 5

;; memcpy (data, kbuf, copy);

(insn 24 23 25 include/linux/regset.h:257 (set (reg:SI 148)
        (reg/v/f:SI 138 [ data ])) -1 (nil))

(insn 25 24 26 include/linux/regset.h:257 (set (reg:SI 149)
        (reg/v/f:SI 145 [ kbuf ])) -1 (nil))

(insn 26 25 27 include/linux/regset.h:257 (set (reg:SI 150)
        (reg/v:SI 137 [ copy ])) -1 (nil))

(insn 27 26 28 include/linux/regset.h:257 (set (reg:SI 0 r0)
        (reg:SI 148)) -1 (nil))

(insn 28 27 29 include/linux/regset.h:257 (set (reg:SI 1 r1)
        (reg:SI 149)) -1 (nil))

(insn 29 28 30 include/linux/regset.h:257 (set (reg:SI 2 r2)
        (reg:SI 150)) -1 (nil))

(call_insn 30 29 31 include/linux/regset.h:257 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41] <function_decl 0x115c3d80 memcpy>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 31 30 0 include/linux/regset.h:257 (set (reg:SI 151)
        (reg:SI 0 r0)) -1 (nil))

;; Generating RTL for gimple basic block 6

;; 

(code_label 34 33 35 59 "" [0 uses])

(note 35 34 0 NOTE_INSN_BASIC_BLOCK)

;; D.27641 = __copy_from_user (data, ubuf, copy);

(insn 36 35 37 include/linux/regset.h:259 (set (reg:SI 0 r0)
        (reg/v/f:SI 138 [ data ])) -1 (nil))

(insn 37 36 38 include/linux/regset.h:259 (set (reg:SI 1 r1)
        (reg/v/f:SI 146 [ ubuf ])) -1 (nil))

(insn 38 37 39 include/linux/regset.h:259 (set (reg:SI 2 r2)
        (reg/v:SI 137 [ copy ])) -1 (nil))

(call_insn 39 38 40 include/linux/regset.h:259 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__copy_from_user") [flags 0x41] <function_decl 0x113a2f80 __copy_from_user>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 40 39 0 include/linux/regset.h:259 (set (reg:SI 136 [ D.27641 ])
        (reg:SI 0 r0)) -1 (nil))

;; if (D.27641 != 0)

(insn 41 40 42 include/linux/regset.h:259 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 136 [ D.27641 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 42 41 0 include/linux/regset.h:259 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

;; Generating RTL for gimple basic block 7

;; ret = -14;

(insn 44 43 0 include/linux/regset.h:260 (set (reg/v:SI 139 [ ret ])
        (const_int -14 [0xfffffffffffffff2])) -1 (nil))

;; Generating RTL for gimple basic block 8

;; 

(code_label 47 46 48 58 "" [0 uses])

(note 48 47 0 NOTE_INSN_BASIC_BLOCK)

;; D.27667 = newregs.uregs[16];

(insn 49 48 0 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:168 (set (reg:SI 133 [ D.27667 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 newregs.uregs+64 S4 A64])) -1 (nil))

;; D.27666 = D.27667 & 4294966975;

(insn 50 49 0 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:173 (set (reg:SI 134 [ D.27666 ])
        (and:SI (reg:SI 133 [ D.27667 ])
            (const_int -321 [0xfffffffffffffebf]))) -1 (nil))

;; if (D.27666 & 128 == 0)

(insn 51 50 52 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:175 (set (reg:SI 152)
        (and:SI (reg:SI 134 [ D.27666 ])
            (const_int 128 [0x80]))) -1 (nil))

(insn 52 51 53 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:175 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 152)
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 53 52 0 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:175 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

;; Generating RTL for gimple basic block 9

;; mode = D.27667 & 31;

(insn 55 54 0 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:168 (set (reg/v:SI 135 [ mode ])
        (and:SI (reg:SI 133 [ D.27667 ])
            (const_int 31 [0x1f]))) -1 (nil))

;; if (mode == 16)

(insn 56 55 57 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:176 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 135 [ mode ])
            (const_int 16 [0x10]))) -1 (nil))

(jump_insn 57 56 0 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:176 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 2800 [0xaf0])
        (nil)))

;; Generating RTL for gimple basic block 10

;; if (mode == 0 & (elf_hwcap & 8) != 0 != 0)

(insn 59 58 60 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 135 [ mode ])
            (const_int 0 [0x0]))) -1 (nil))

(insn 60 59 61 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg:SI 154)
        (eq:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) -1 (nil))

(insn 61 60 62 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg:QI 153)
        (subreg:QI (reg:SI 154) 0)) -1 (nil))

(insn 62 61 63 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg/f:SI 155)
        (symbol_ref:SI ("elf_hwcap") [flags 0xc0] <var_decl 0x5128fb40 elf_hwcap>)) -1 (nil))

(insn 63 62 64 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg:SI 157)
        (mem/c/i:SI (reg/f:SI 155) [0 elf_hwcap+0 S4 A32])) -1 (nil))

(insn 64 63 65 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg:SI 156)
        (lshiftrt:SI (reg:SI 157)
            (const_int 3 [0x3]))) -1 (nil))

(insn 65 64 66 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg:QI 158)
        (subreg:QI (reg:SI 156) 0)) -1 (nil))

(insn 66 65 67 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg:SI 159)
        (and:SI (subreg:SI (reg:QI 158) 0)
            (const_int 1 [0x1]))) -1 (nil))

(insn 67 66 68 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg:QI 160)
        (subreg:QI (reg:SI 159) 0)) -1 (nil))

(insn 68 67 69 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg:SI 161)
        (and:SI (subreg:SI (reg:QI 153) 0)
            (subreg:SI (reg:QI 160) 0))) -1 (nil))

(insn 69 68 70 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg:QI 162)
        (subreg:QI (reg:SI 161) 0)) -1 (nil))

(insn 70 69 71 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg:SI 163)
        (zero_extend:SI (reg:QI 162))) -1 (nil))

(insn 71 70 72 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 163)
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 72 71 0 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

;; Generating RTL for gimple basic block 11

;; 

(code_label 73 72 74 62 "" [0 uses])

(note 74 73 0 NOTE_INSN_BASIC_BLOCK)

;; newregs.uregs[16] = D.27666;

(insn 75 74 0 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:173 (set (mem/s/j:SI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 newregs.uregs+64 S4 A64])
        (reg:SI 134 [ D.27666 ])) -1 (nil))

;; *((struct pt_regs *) target->stack + 8112) = newregs;

(insn 76 75 77 arch/arm/kernel/ptrace.c:606 (set (reg/f:SI 164)
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 141 [ target ])
                (const_int 4 [0x4])) [0 <variable>.stack+0 S4 A32])) -1 (nil))

(insn 77 76 78 arch/arm/kernel/ptrace.c:606 (set (reg:SI 165)
        (const_int 8112 [0x1fb0])) -1 (nil))

(insn 78 77 79 arch/arm/kernel/ptrace.c:606 (set (reg:SI 166)
        (plus:SI (reg/f:SI 164)
            (reg:SI 165))) -1 (nil))

(insn 79 78 80 arch/arm/kernel/ptrace.c:606 (set (reg:SI 167)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -72 [0xffffffffffffffb8]))) -1 (nil))

(insn 80 79 81 arch/arm/kernel/ptrace.c:606 (set (reg:SI 168)
        (const_int 72 [0x48])) -1 (nil))

(insn 81 80 82 arch/arm/kernel/ptrace.c:606 (set (reg:SI 0 r0)
        (reg:SI 166)) -1 (nil))

(insn 82 81 83 arch/arm/kernel/ptrace.c:606 (set (reg:SI 1 r1)
        (reg:SI 167)) -1 (nil))

(insn 83 82 84 arch/arm/kernel/ptrace.c:606 (set (reg:SI 2 r2)
        (reg:SI 168)) -1 (nil))

(call_insn 84 83 85 arch/arm/kernel/ptrace.c:606 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41] <function_decl 0x115c3d80 memcpy>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 85 84 0 arch/arm/kernel/ptrace.c:606 (set (reg:SI 169)
        (reg:SI 0 r0)) -1 (nil))

;; ret = 0;

(insn 86 85 0 arch/arm/kernel/ptrace.c:607 (set (reg/v:SI 139 [ ret ])
        (const_int 0 [0x0])) -1 (nil))

;; Generating RTL for gimple basic block 12

;; 

(code_label 89 88 90 61 "" [0 uses])

(note 90 89 0 NOTE_INSN_BASIC_BLOCK)

;; ret = -22;

(insn 91 90 0 arch/arm/kernel/ptrace.c:604 (set (reg/v:SI 139 [ ret ])
        (const_int -22 [0xffffffffffffffea])) -1 (nil))

;; Generating RTL for gimple basic block 13

;; 

(code_label 92 91 93 60 "" [0 uses])

(note 93 92 0 NOTE_INSN_BASIC_BLOCK)

;; return ret;

(insn 94 93 95 arch/arm/kernel/ptrace.c:608 (set (reg:SI 140 [ <result> ])
        (reg/v:SI 139 [ ret ])) -1 (nil))

(jump_insn 95 94 96 arch/arm/kernel/ptrace.c:608 (set (pc)
        (label_ref 0)) -1 (nil))

(barrier 96 95 0)


;;
;; Full RTL generated for this function:
;;
(note 1 0 9 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 9 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 9 3 2 arch/arm/kernel/ptrace.c:593 (set (reg/v/f:SI 141 [ target ])
        (reg:SI 0 r0 [ target ])) -1 (nil))

(insn 3 2 4 2 arch/arm/kernel/ptrace.c:593 (set (reg/v/f:SI 142 [ regset ])
        (reg:SI 1 r1 [ regset ])) -1 (nil))

(insn 4 3 5 2 arch/arm/kernel/ptrace.c:593 (set (reg/v:SI 143 [ pos ])
        (reg:SI 2 r2 [ pos ])) -1 (nil))

(insn 5 4 6 2 arch/arm/kernel/ptrace.c:593 (set (reg/v:SI 144 [ count ])
        (reg:SI 3 r3 [ count ])) -1 (nil))

(insn 6 5 7 2 arch/arm/kernel/ptrace.c:593 (set (reg/v/f:SI 145 [ kbuf ])
        (mem/f/c/i:SI (reg/f:SI 128 virtual-incoming-args) [0 kbuf+0 S4 A32])) -1 (expr_list:REG_EQUIV (mem/f/c/i:SI (reg/f:SI 128 virtual-incoming-args) [0 kbuf+0 S4 A32])
        (nil)))

(insn 7 6 8 2 arch/arm/kernel/ptrace.c:593 (set (reg/v/f:SI 146 [ ubuf ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 128 virtual-incoming-args)
                (const_int 4 [0x4])) [0 ubuf+0 S4 A32])) -1 (expr_list:REG_EQUIV (mem/f/c/i:SI (plus:SI (reg/f:SI 128 virtual-incoming-args)
                (const_int 4 [0x4])) [0 ubuf+0 S4 A32])
        (nil)))

(note 8 7 10 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 3)

;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [100.0%]  (fallthru)
(note 10 8 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 11 10 12 3 include/linux/regset.h:249 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 144 [ count ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 12 11 13 3 include/linux/regset.h:249 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 47)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 3 -> ( 9 4)

;; Succ edge  9 [50.0%] 
;; Succ edge  4 [50.0%]  (fallthru)

;; Start of basic block ( 3) -> 4
;; Pred edge  3 [50.0%]  (fallthru)
(note 13 12 14 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 14 13 15 4 include/linux/regset.h:252 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 143 [ pos ])
            (const_int 71 [0x47]))) -1 (nil))

(jump_insn 15 14 16 4 include/linux/regset.h:252 discrim 1 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 47)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 4 -> ( 5 9)

;; Succ edge  5 [50.0%]  (fallthru)
;; Succ edge  9 [50.0%] 

;; Start of basic block ( 4) -> 5
;; Pred edge  4 [50.0%]  (fallthru)
(note 16 15 17 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 17 16 18 5 include/linux/regset.h:254 (set (reg/v:SI 137 [ copy ])
        (minus:SI (const_int 72 [0x48])
            (reg/v:SI 143 [ pos ]))) -1 (nil))

(insn 18 17 19 5 include/linux/regset.h:254 (parallel [
            (set (reg/v:SI 137 [ copy ])
                (umin:SI (reg/v:SI 137 [ copy ])
                    (reg/v:SI 144 [ count ])))
            (clobber (reg:CC 24 cc))
        ]) -1 (nil))

(insn 19 18 20 5 include/linux/regset.h:255 (set (reg:SI 147)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -72 [0xffffffffffffffb8]))) -1 (nil))

(insn 20 19 21 5 include/linux/regset.h:255 (set (reg/v/f:SI 138 [ data ])
        (plus:SI (reg:SI 147)
            (reg/v:SI 143 [ pos ]))) -1 (nil))

(insn 21 20 22 5 include/linux/regset.h:256 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 145 [ kbuf ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 22 21 23 5 include/linux/regset.h:256 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 34)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 1499 [0x5db])
        (nil)))
;; End of basic block 5 -> ( 6 7)

;; Succ edge  6 [85.0%]  (fallthru)
;; Succ edge  7 [15.0%] 

;; Start of basic block ( 5) -> 6
;; Pred edge  5 [85.0%]  (fallthru)
(note 23 22 24 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 24 23 25 6 include/linux/regset.h:257 (set (reg:SI 148)
        (reg/v/f:SI 138 [ data ])) -1 (nil))

(insn 25 24 26 6 include/linux/regset.h:257 (set (reg:SI 149)
        (reg/v/f:SI 145 [ kbuf ])) -1 (nil))

(insn 26 25 27 6 include/linux/regset.h:257 (set (reg:SI 150)
        (reg/v:SI 137 [ copy ])) -1 (nil))

(insn 27 26 28 6 include/linux/regset.h:257 (set (reg:SI 0 r0)
        (reg:SI 148)) -1 (nil))

(insn 28 27 29 6 include/linux/regset.h:257 (set (reg:SI 1 r1)
        (reg:SI 149)) -1 (nil))

(insn 29 28 30 6 include/linux/regset.h:257 (set (reg:SI 2 r2)
        (reg:SI 150)) -1 (nil))

(call_insn 30 29 31 6 include/linux/regset.h:257 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41] <function_decl 0x115c3d80 memcpy>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 31 30 32 6 include/linux/regset.h:257 (set (reg:SI 151)
        (reg:SI 0 r0)) -1 (nil))

(jump_insn 32 31 33 6 include/linux/regset.h:257 (set (pc)
        (label_ref 47)) -1 (nil))
;; End of basic block 6 -> ( 9)

;; Succ edge  9 [100.0%] 

(barrier 33 32 34)

;; Start of basic block ( 5) -> 7
;; Pred edge  5 [15.0%] 
(code_label 34 33 35 7 59 "" [1 uses])

(note 35 34 36 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 36 35 37 7 include/linux/regset.h:259 (set (reg:SI 0 r0)
        (reg/v/f:SI 138 [ data ])) -1 (nil))

(insn 37 36 38 7 include/linux/regset.h:259 (set (reg:SI 1 r1)
        (reg/v/f:SI 146 [ ubuf ])) -1 (nil))

(insn 38 37 39 7 include/linux/regset.h:259 (set (reg:SI 2 r2)
        (reg/v:SI 137 [ copy ])) -1 (nil))

(call_insn 39 38 40 7 include/linux/regset.h:259 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__copy_from_user") [flags 0x41] <function_decl 0x113a2f80 __copy_from_user>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 40 39 41 7 include/linux/regset.h:259 (set (reg:SI 136 [ D.27641 ])
        (reg:SI 0 r0)) -1 (nil))

(insn 41 40 42 7 include/linux/regset.h:259 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 136 [ D.27641 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 42 41 43 7 include/linux/regset.h:259 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 47)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 7 -> ( 8 9)

;; Succ edge  8 [50.0%]  (fallthru)
;; Succ edge  9 [50.0%] 

;; Start of basic block ( 7) -> 8
;; Pred edge  7 [50.0%]  (fallthru)
(note 43 42 44 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 44 43 45 8 include/linux/regset.h:260 (set (reg/v:SI 139 [ ret ])
        (const_int -14 [0xfffffffffffffff2])) -1 (nil))

(jump_insn 45 44 46 8 include/linux/regset.h:260 (set (pc)
        (label_ref 92)) -1 (nil))
;; End of basic block 8 -> ( 14)

;; Succ edge  14 [100.0%] 

(barrier 46 45 47)

;; Start of basic block ( 3 4 6 7) -> 9
;; Pred edge  3 [50.0%] 
;; Pred edge  4 [50.0%] 
;; Pred edge  6 [100.0%] 
;; Pred edge  7 [50.0%] 
(code_label 47 46 48 9 58 "" [4 uses])

(note 48 47 49 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 49 48 50 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:168 (set (reg:SI 133 [ D.27667 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 newregs.uregs+64 S4 A64])) -1 (nil))

(insn 50 49 51 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:173 (set (reg:SI 134 [ D.27666 ])
        (and:SI (reg:SI 133 [ D.27667 ])
            (const_int -321 [0xfffffffffffffebf]))) -1 (nil))

(insn 51 50 52 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:175 (set (reg:SI 152)
        (and:SI (reg:SI 134 [ D.27666 ])
            (const_int 128 [0x80]))) -1 (nil))

(insn 52 51 53 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:175 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 152)
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 53 52 54 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:175 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 89)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 9 -> ( 10 13)

;; Succ edge  10 [50.0%]  (fallthru)
;; Succ edge  13 [50.0%] 

;; Start of basic block ( 9) -> 10
;; Pred edge  9 [50.0%]  (fallthru)
(note 54 53 55 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 55 54 56 10 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:168 (set (reg/v:SI 135 [ mode ])
        (and:SI (reg:SI 133 [ D.27667 ])
            (const_int 31 [0x1f]))) -1 (nil))

(insn 56 55 57 10 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:176 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 135 [ mode ])
            (const_int 16 [0x10]))) -1 (nil))

(jump_insn 57 56 58 10 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:176 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 73)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 2800 [0xaf0])
        (nil)))
;; End of basic block 10 -> ( 12 11)

;; Succ edge  12 [28.0%] 
;; Succ edge  11 [72.0%]  (fallthru)

;; Start of basic block ( 10) -> 11
;; Pred edge  10 [72.0%]  (fallthru)
(note 58 57 59 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 59 58 60 11 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 135 [ mode ])
            (const_int 0 [0x0]))) -1 (nil))

(insn 60 59 61 11 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg:SI 154)
        (eq:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) -1 (nil))

(insn 61 60 62 11 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg:QI 153)
        (subreg:QI (reg:SI 154) 0)) -1 (nil))

(insn 62 61 63 11 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg/f:SI 155)
        (symbol_ref:SI ("elf_hwcap") [flags 0xc0] <var_decl 0x5128fb40 elf_hwcap>)) -1 (nil))

(insn 63 62 64 11 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg:SI 157)
        (mem/c/i:SI (reg/f:SI 155) [0 elf_hwcap+0 S4 A32])) -1 (nil))

(insn 64 63 65 11 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg:SI 156)
        (lshiftrt:SI (reg:SI 157)
            (const_int 3 [0x3]))) -1 (nil))

(insn 65 64 66 11 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg:QI 158)
        (subreg:QI (reg:SI 156) 0)) -1 (nil))

(insn 66 65 67 11 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg:SI 159)
        (and:SI (subreg:SI (reg:QI 158) 0)
            (const_int 1 [0x1]))) -1 (nil))

(insn 67 66 68 11 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg:QI 160)
        (subreg:QI (reg:SI 159) 0)) -1 (nil))

(insn 68 67 69 11 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg:SI 161)
        (and:SI (subreg:SI (reg:QI 153) 0)
            (subreg:SI (reg:QI 160) 0))) -1 (nil))

(insn 69 68 70 11 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg:QI 162)
        (subreg:QI (reg:SI 161) 0)) -1 (nil))

(insn 70 69 71 11 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg:SI 163)
        (zero_extend:SI (reg:QI 162))) -1 (nil))

(insn 71 70 72 11 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 163)
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 72 71 73 11 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 89)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 11 -> ( 12 13)

;; Succ edge  12 [50.0%]  (fallthru)
;; Succ edge  13 [50.0%] 

;; Start of basic block ( 10 11) -> 12
;; Pred edge  10 [28.0%] 
;; Pred edge  11 [50.0%]  (fallthru)
(code_label 73 72 74 12 62 "" [1 uses])

(note 74 73 75 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 75 74 76 12 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:173 (set (mem/s/j:SI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 newregs.uregs+64 S4 A64])
        (reg:SI 134 [ D.27666 ])) -1 (nil))

(insn 76 75 77 12 arch/arm/kernel/ptrace.c:606 (set (reg/f:SI 164)
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 141 [ target ])
                (const_int 4 [0x4])) [0 <variable>.stack+0 S4 A32])) -1 (nil))

(insn 77 76 78 12 arch/arm/kernel/ptrace.c:606 (set (reg:SI 165)
        (const_int 8112 [0x1fb0])) -1 (nil))

(insn 78 77 79 12 arch/arm/kernel/ptrace.c:606 (set (reg:SI 166)
        (plus:SI (reg/f:SI 164)
            (reg:SI 165))) -1 (nil))

(insn 79 78 80 12 arch/arm/kernel/ptrace.c:606 (set (reg:SI 167)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -72 [0xffffffffffffffb8]))) -1 (nil))

(insn 80 79 81 12 arch/arm/kernel/ptrace.c:606 (set (reg:SI 168)
        (const_int 72 [0x48])) -1 (nil))

(insn 81 80 82 12 arch/arm/kernel/ptrace.c:606 (set (reg:SI 0 r0)
        (reg:SI 166)) -1 (nil))

(insn 82 81 83 12 arch/arm/kernel/ptrace.c:606 (set (reg:SI 1 r1)
        (reg:SI 167)) -1 (nil))

(insn 83 82 84 12 arch/arm/kernel/ptrace.c:606 (set (reg:SI 2 r2)
        (reg:SI 168)) -1 (nil))

(call_insn 84 83 85 12 arch/arm/kernel/ptrace.c:606 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41] <function_decl 0x115c3d80 memcpy>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 85 84 86 12 arch/arm/kernel/ptrace.c:606 (set (reg:SI 169)
        (reg:SI 0 r0)) -1 (nil))

(insn 86 85 87 12 arch/arm/kernel/ptrace.c:607 (set (reg/v:SI 139 [ ret ])
        (const_int 0 [0x0])) -1 (nil))

(jump_insn 87 86 88 12 arch/arm/kernel/ptrace.c:607 (set (pc)
        (label_ref 92)) -1 (nil))
;; End of basic block 12 -> ( 14)

;; Succ edge  14 [100.0%] 

(barrier 88 87 89)

;; Start of basic block ( 9 11) -> 13
;; Pred edge  9 [50.0%] 
;; Pred edge  11 [50.0%] 
(code_label 89 88 90 13 61 "" [2 uses])

(note 90 89 91 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 91 90 92 13 arch/arm/kernel/ptrace.c:604 (set (reg/v:SI 139 [ ret ])
        (const_int -22 [0xffffffffffffffea])) -1 (nil))
;; End of basic block 13 -> ( 14)

;; Succ edge  14 [100.0%]  (fallthru)

;; Start of basic block ( 13 8 12) -> 14
;; Pred edge  13 [100.0%]  (fallthru)
;; Pred edge  8 [100.0%] 
;; Pred edge  12 [100.0%] 
(code_label 92 91 93 14 60 "" [2 uses])

(note 93 92 94 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 94 93 95 14 arch/arm/kernel/ptrace.c:608 (set (reg:SI 140 [ <result> ])
        (reg/v:SI 139 [ ret ])) -1 (nil))

(jump_insn 95 94 96 14 arch/arm/kernel/ptrace.c:608 (set (pc)
        (label_ref 97)) -1 (nil))
;; End of basic block 14 -> ( 16)

;; Succ edge  16 [100.0%] 

(barrier 96 95 105)

;; Start of basic block () -> 15
(note 105 96 99 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 99 105 100 15 arch/arm/kernel/ptrace.c:608 (clobber (reg/i:SI 0 r0)) -1 (nil))

(insn 100 99 101 15 arch/arm/kernel/ptrace.c:608 (clobber (reg:SI 140 [ <result> ])) -1 (nil))

(jump_insn 101 100 102 15 arch/arm/kernel/ptrace.c:608 (set (pc)
        (label_ref 103)) -1 (nil))
;; End of basic block 15 -> ( 17)

;; Succ edge  17 [100.0%] 

(barrier 102 101 97)

;; Start of basic block ( 14) -> 16
;; Pred edge  14 [100.0%] 
(code_label 97 102 106 16 57 "" [1 uses])

(note 106 97 98 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 98 106 103 16 arch/arm/kernel/ptrace.c:608 (set (reg/i:SI 0 r0)
        (reg:SI 140 [ <result> ])) -1 (nil))
;; End of basic block 16 -> ( 17)

;; Succ edge  17 [100.0%]  (fallthru)

;; Start of basic block ( 15 16) -> 17
;; Pred edge  15 [100.0%] 
;; Pred edge  16 [100.0%]  (fallthru)
(code_label 103 98 107 17 63 "" [1 uses])

(note 107 103 104 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 104 107 0 17 arch/arm/kernel/ptrace.c:608 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 17 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function clear_ptrace_hw_breakpoint (clear_ptrace_hw_breakpoint)[0:1551]


;; Generating RTL for gimple basic block 2

;; __memzero (&tsk->thread.debug.hbp, 128); [tail call]

(insn 6 5 7 2 arch/arm/kernel/ptrace.c:407 discrim 1 (set (reg:SI 134)
        (plus:SI (reg/v/f:SI 133 [ tsk ])
            (const_int 796 [0x31c]))) -1 (nil))

(insn 7 6 8 2 arch/arm/kernel/ptrace.c:407 discrim 1 (set (reg:SI 0 r0)
        (reg:SI 134)) -1 (nil))

(insn 8 7 9 2 arch/arm/kernel/ptrace.c:407 discrim 1 (set (reg:SI 1 r1)
        (const_int 128 [0x80])) -1 (nil))

(call_insn/j 9 8 10 2 arch/arm/kernel/ptrace.c:407 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("__memzero") [flags 0x41] <function_decl 0x10bba080 __memzero>) [0 S4 A32])
                (const_int 0 [0x0]))
            (return)
            (use (const_int 0 [0x0]))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(barrier 10 9 0)


;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 arch/arm/kernel/ptrace.c:406 (set (reg/v/f:SI 133 [ tsk ])
        (reg:SI 0 r0 [ tsk ])) -1 (nil))

(note 3 2 5 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 3)

;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [100.0%]  (fallthru)
(note 5 3 6 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 6 5 7 3 arch/arm/kernel/ptrace.c:407 discrim 1 (set (reg:SI 134)
        (plus:SI (reg/v/f:SI 133 [ tsk ])
            (const_int 796 [0x31c]))) -1 (nil))

(insn 7 6 8 3 arch/arm/kernel/ptrace.c:407 discrim 1 (set (reg:SI 0 r0)
        (reg:SI 134)) -1 (nil))

(insn 8 7 9 3 arch/arm/kernel/ptrace.c:407 discrim 1 (set (reg:SI 1 r1)
        (const_int 128 [0x80])) -1 (nil))

(call_insn/j 9 8 10 3 arch/arm/kernel/ptrace.c:407 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("__memzero") [flags 0x41] <function_decl 0x10bba080 __memzero>) [0 S4 A32])
                (const_int 0 [0x0]))
            (return)
            (use (const_int 0 [0x0]))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 3 -> ( 1)

;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 10 9 15)

;; Start of basic block () -> 4
(note 15 10 12 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(jump_insn 12 15 13 4 arch/arm/kernel/ptrace.c:408 (set (pc)
        (label_ref 14)) -1 (nil))
;; End of basic block 4 -> ( 6)

;; Succ edge  6 [100.0%] 

(barrier 13 12 11)

;; Start of basic block () -> 5
(code_label 11 13 16 5 66 "" [0 uses])

(note 16 11 14 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 5 -> ( 6)

;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 4 5) -> 6
;; Pred edge  4 [100.0%] 
;; Pred edge  5 [100.0%]  (fallthru)
(code_label 14 16 17 6 67 "" [1 uses])

(note 17 14 0 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 6 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function vfp_get (vfp_get)[0:1561]


;; Generating RTL for gimple basic block 2

;; thread = (struct thread_info *) target->stack;

(insn 11 10 0 arch/arm/kernel/ptrace.c:663 (set (reg/v/f:SI 139 [ thread ])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 142 [ target ])
                (const_int 4 [0x4])) [0 <variable>.stack+0 S4 A32])) -1 (nil))

;; vfp_sync_hwstate (thread);

(insn 12 11 13 arch/arm/kernel/ptrace.c:668 (set (reg:SI 0 r0)
        (reg/v/f:SI 139 [ thread ])) -1 (nil))

(call_insn 13 12 0 arch/arm/kernel/ptrace.c:668 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_sync_hwstate") [flags 0x41] <function_decl 0x10a83b00 vfp_sync_hwstate>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

;; if (count == 0)

(insn 14 13 15 include/linux/regset.h:224 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 145 [ count ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 15 14 0 include/linux/regset.h:224 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

;; Generating RTL for gimple basic block 3

;; if (pos <= 255)

(insn 17 16 18 include/linux/regset.h:227 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 144 [ pos ])
            (const_int 255 [0xff]))) -1 (nil))

(jump_insn 18 17 0 include/linux/regset.h:227 discrim 1 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

;; Generating RTL for gimple basic block 4

;; copy = MIN_EXPR <256 - pos, count>;

(insn 20 19 21 include/linux/regset.h:229 (set (reg/v:SI 137 [ copy ])
        (minus:SI (const_int 256 [0x100])
            (reg/v:SI 144 [ pos ]))) -1 (nil))

(insn 21 20 0 include/linux/regset.h:229 (parallel [
            (set (reg/v:SI 137 [ copy ])
                (umin:SI (reg/v:SI 137 [ copy ])
                    (reg/v:SI 145 [ count ])))
            (clobber (reg:CC 24 cc))
        ]) -1 (nil))

;; data = &thread->vfpstate.hard.fpregs + pos;

(insn 22 21 23 include/linux/regset.h:230 (set (reg:SI 148)
        (plus:SI (reg/v/f:SI 139 [ thread ])
            (const_int 432 [0x1b0]))) -1 (nil))

(insn 23 22 0 include/linux/regset.h:230 (set (reg/v/f:SI 138 [ data ])
        (plus:SI (reg:SI 148)
            (reg/v:SI 144 [ pos ]))) -1 (nil))

;; if (kbuf != 0B)

(insn 24 23 25 include/linux/regset.h:231 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 146 [ kbuf ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 25 24 0 include/linux/regset.h:231 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 1499 [0x5db])
        (nil)))

;; Generating RTL for gimple basic block 5

;; memcpy (kbuf, data, copy);

(insn 27 26 28 include/linux/regset.h:232 (set (reg:SI 149)
        (reg/v/f:SI 146 [ kbuf ])) -1 (nil))

(insn 28 27 29 include/linux/regset.h:232 (set (reg:SI 150)
        (reg/v/f:SI 138 [ data ])) -1 (nil))

(insn 29 28 30 include/linux/regset.h:232 (set (reg:SI 151)
        (reg/v:SI 137 [ copy ])) -1 (nil))

(insn 30 29 31 include/linux/regset.h:232 (set (reg:SI 0 r0)
        (reg:SI 149)) -1 (nil))

(insn 31 30 32 include/linux/regset.h:232 (set (reg:SI 1 r1)
        (reg:SI 150)) -1 (nil))

(insn 32 31 33 include/linux/regset.h:232 (set (reg:SI 2 r2)
        (reg:SI 151)) -1 (nil))

(call_insn 33 32 34 include/linux/regset.h:232 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41] <function_decl 0x115c3d80 memcpy>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 34 33 0 include/linux/regset.h:232 (set (reg:SI 152)
        (reg:SI 0 r0)) -1 (nil))

;; kbuf = kbuf + copy;

(insn 35 34 0 include/linux/regset.h:233 (set (reg/v/f:SI 146 [ kbuf ])
        (plus:SI (reg/v/f:SI 146 [ kbuf ])
            (reg/v:SI 137 [ copy ]))) -1 (nil))

;; Generating RTL for gimple basic block 6

;; 

(code_label 38 37 39 71 "" [0 uses])

(note 39 38 0 NOTE_INSN_BASIC_BLOCK)

;; D.27683 = __copy_to_user (ubuf, data, copy);

(insn 40 39 41 include/linux/regset.h:234 (set (reg:SI 0 r0)
        (reg/v/f:SI 147 [ ubuf ])) -1 (nil))

(insn 41 40 42 include/linux/regset.h:234 (set (reg:SI 1 r1)
        (reg/v/f:SI 138 [ data ])) -1 (nil))

(insn 42 41 43 include/linux/regset.h:234 (set (reg:SI 2 r2)
        (reg/v:SI 137 [ copy ])) -1 (nil))

(call_insn 43 42 44 include/linux/regset.h:234 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__copy_to_user") [flags 0x41] <function_decl 0x113b1000 __copy_to_user>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 44 43 0 include/linux/regset.h:234 (set (reg:SI 136 [ D.27683 ])
        (reg:SI 0 r0)) -1 (nil))

;; if (D.27683 != 0)

(insn 45 44 46 include/linux/regset.h:234 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 136 [ D.27683 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 46 45 0 include/linux/regset.h:234 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

;; Generating RTL for gimple basic block 7

;; ubuf = ubuf + copy;

(insn 48 47 0 include/linux/regset.h:237 (set (reg/v/f:SI 147 [ ubuf ])
        (plus:SI (reg/v/f:SI 147 [ ubuf ])
            (reg/v:SI 137 [ copy ]))) -1 (nil))

;; Generating RTL for gimple basic block 8

;; 

(code_label 49 48 50 72 "" [0 uses])

(note 50 49 0 NOTE_INSN_BASIC_BLOCK)

;; pos = copy + pos;

(insn 51 50 0 include/linux/regset.h:238 (set (reg/v:SI 144 [ pos ])
        (plus:SI (reg/v:SI 144 [ pos ])
            (reg/v:SI 137 [ copy ]))) -1 (nil))

;; count = count - copy;

(insn 52 51 0 include/linux/regset.h:239 (set (reg/v:SI 145 [ count ])
        (minus:SI (reg/v:SI 145 [ count ])
            (reg/v:SI 137 [ copy ]))) -1 (nil))

;; if (count == 0)

(insn 53 52 54 include/linux/regset.h:279 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 145 [ count ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 54 53 0 include/linux/regset.h:279 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 0 [0x0])
        (nil)))

;; Generating RTL for gimple basic block 9

;; if (pos <= 255)

(insn 56 55 57 include/linux/regset.h:281 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 144 [ pos ])
            (const_int 255 [0xff]))) -1 (nil))

(jump_insn 57 56 0 include/linux/regset.h:281 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 9978 [0x26fa])
        (nil)))

;; Generating RTL for gimple basic block 10

;; __bug (&"include/linux/regset.h"[0], 281);

(insn 59 58 60 include/linux/regset.h:281 discrim 1 (set (reg:SI 153)
        (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x116b8180>)) -1 (nil))

(insn 60 59 61 include/linux/regset.h:281 discrim 1 (set (reg:SI 154)
        (const_int 281 [0x119])) -1 (nil))

(insn 61 60 62 include/linux/regset.h:281 discrim 1 (set (reg:SI 0 r0)
        (reg:SI 153)) -1 (nil))

(insn 62 61 63 include/linux/regset.h:281 discrim 1 (set (reg:SI 1 r1)
        (reg:SI 154)) -1 (nil))

(call_insn 63 62 64 include/linux/regset.h:281 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("__bug") [flags 0x41] <function_decl 0x10a2ec00 __bug>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (expr_list:REG_NORETURN (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(barrier 64 63 0)

;; Generating RTL for gimple basic block 11

;; copy = MIN_EXPR <260 - pos, count>;

(insn 66 65 67 include/linux/regset.h:229 (set (reg/v:SI 134 [ copy ])
        (minus:SI (const_int 260 [0x104])
            (reg/v:SI 144 [ pos ]))) -1 (nil))

(insn 67 66 0 include/linux/regset.h:229 (parallel [
            (set (reg/v:SI 134 [ copy ])
                (umin:SI (reg/v:SI 134 [ copy ])
                    (reg/v:SI 145 [ count ])))
            (clobber (reg:CC 24 cc))
        ]) -1 (nil))

;; data = &thread->vfpstate.hard.fpscr + (pos + 4294967040);

(insn 68 67 69 include/linux/regset.h:230 (set (reg:SI 155)
        (plus:SI (reg/v/f:SI 139 [ thread ])
            (const_int 692 [0x2b4]))) -1 (nil))

(insn 69 68 70 include/linux/regset.h:230 (set (reg:SI 156)
        (plus:SI (reg/v:SI 144 [ pos ])
            (const_int -256 [0xffffffffffffff00]))) -1 (nil))

(insn 70 69 0 include/linux/regset.h:230 (set (reg/v/f:SI 135 [ data ])
        (plus:SI (reg:SI 155)
            (reg:SI 156))) -1 (nil))

;; if (kbuf != 0B)

(insn 71 70 72 include/linux/regset.h:231 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 146 [ kbuf ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 72 71 0 include/linux/regset.h:231 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 1499 [0x5db])
        (nil)))

;; Generating RTL for gimple basic block 12

;; memcpy (kbuf, data, copy);

(insn 74 73 75 include/linux/regset.h:232 (set (reg:SI 157)
        (reg/v/f:SI 146 [ kbuf ])) -1 (nil))

(insn 75 74 76 include/linux/regset.h:232 (set (reg:SI 158)
        (reg/v/f:SI 135 [ data ])) -1 (nil))

(insn 76 75 77 include/linux/regset.h:232 (set (reg:SI 159)
        (reg/v:SI 134 [ copy ])) -1 (nil))

(insn 77 76 78 include/linux/regset.h:232 (set (reg:SI 0 r0)
        (reg:SI 157)) -1 (nil))

(insn 78 77 79 include/linux/regset.h:232 (set (reg:SI 1 r1)
        (reg:SI 158)) -1 (nil))

(insn 79 78 80 include/linux/regset.h:232 (set (reg:SI 2 r2)
        (reg:SI 159)) -1 (nil))

(call_insn 80 79 81 include/linux/regset.h:232 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41] <function_decl 0x115c3d80 memcpy>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 81 80 0 include/linux/regset.h:232 (set (reg:SI 160)
        (reg:SI 0 r0)) -1 (nil))

;; ret = 0;

(insn 82 81 0 include/linux/regset.h:241 (set (reg/v:SI 140 [ ret ])
        (const_int 0 [0x0])) -1 (nil))

;; Generating RTL for gimple basic block 13

;; 

(code_label 85 84 86 74 "" [0 uses])

(note 86 85 0 NOTE_INSN_BASIC_BLOCK)

;; D.27733 = __copy_to_user (ubuf, data, copy);

(insn 87 86 88 include/linux/regset.h:234 (set (reg:SI 0 r0)
        (reg/v/f:SI 147 [ ubuf ])) -1 (nil))

(insn 88 87 89 include/linux/regset.h:234 (set (reg:SI 1 r1)
        (reg/v/f:SI 135 [ data ])) -1 (nil))

(insn 89 88 90 include/linux/regset.h:234 (set (reg:SI 2 r2)
        (reg/v:SI 134 [ copy ])) -1 (nil))

(call_insn 90 89 91 include/linux/regset.h:234 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__copy_to_user") [flags 0x41] <function_decl 0x113b1000 __copy_to_user>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 91 90 0 include/linux/regset.h:234 (set (reg:SI 133 [ D.27733 ])
        (reg:SI 0 r0)) -1 (nil))

;; if (D.27733 != 0)

(insn 92 91 93 include/linux/regset.h:234 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 133 [ D.27733 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 93 92 0 include/linux/regset.h:234 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

;; Generating RTL for gimple basic block 14

;; 

(code_label 94 93 95 73 "" [0 uses])

(note 95 94 0 NOTE_INSN_BASIC_BLOCK)

;; ret = -14;

(insn 96 95 0 include/linux/regset.h:235 (set (reg/v:SI 140 [ ret ])
        (const_int -14 [0xfffffffffffffff2])) -1 (nil))

;; Generating RTL for gimple basic block 15

;; 

(code_label 99 98 100 69 "" [0 uses])

(note 100 99 0 NOTE_INSN_BASIC_BLOCK)

;; ret = 0;

(insn 101 100 0 include/linux/regset.h:241 (set (reg/v:SI 140 [ ret ])
        (const_int 0 [0x0])) -1 (nil))

;; Generating RTL for gimple basic block 16

;; 

(code_label 102 101 103 75 "" [0 uses])

(note 103 102 0 NOTE_INSN_BASIC_BLOCK)

;; return ret;

(insn 104 103 105 arch/arm/kernel/ptrace.c:687 (set (reg:SI 141 [ <result> ])
        (reg/v:SI 140 [ ret ])) -1 (nil))

(jump_insn 105 104 106 arch/arm/kernel/ptrace.c:687 (set (pc)
        (label_ref 0)) -1 (nil))

(barrier 106 105 0)

;; Generating RTL for gimple basic block 17

;; 

(code_label 107 106 108 70 "" [0 uses])

(note 108 107 0 NOTE_INSN_BASIC_BLOCK)

;; if (pos <= 259)

(insn 110 108 111 17 include/linux/regset.h:227 discrim 1 (set (reg:SI 162)
        (const_int 259 [0x103])) -1 (nil))

(insn 111 110 112 17 include/linux/regset.h:227 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 144 [ pos ])
            (reg:SI 162))) -1 (nil))

(jump_insn 112 111 115 17 include/linux/regset.h:227 discrim 1 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 109)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

(note 115 112 113 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(jump_insn 113 115 114 19 include/linux/regset.h:227 discrim 1 (set (pc)
        (label_ref 99)) -1 (nil))

(barrier 114 113 0)


;;
;; Full RTL generated for this function:
;;
(note 1 0 9 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 9 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 9 3 2 arch/arm/kernel/ptrace.c:661 (set (reg/v/f:SI 142 [ target ])
        (reg:SI 0 r0 [ target ])) -1 (nil))

(insn 3 2 4 2 arch/arm/kernel/ptrace.c:661 (set (reg/v/f:SI 143 [ regset ])
        (reg:SI 1 r1 [ regset ])) -1 (nil))

(insn 4 3 5 2 arch/arm/kernel/ptrace.c:661 (set (reg/v:SI 144 [ pos ])
        (reg:SI 2 r2 [ pos ])) -1 (nil))

(insn 5 4 6 2 arch/arm/kernel/ptrace.c:661 (set (reg/v:SI 145 [ count ])
        (reg:SI 3 r3 [ count ])) -1 (nil))

(insn 6 5 7 2 arch/arm/kernel/ptrace.c:661 (set (reg/v/f:SI 146 [ kbuf ])
        (mem/f/c/i:SI (reg/f:SI 128 virtual-incoming-args) [0 kbuf+0 S4 A32])) -1 (expr_list:REG_EQUIV (mem/f/c/i:SI (reg/f:SI 128 virtual-incoming-args) [0 kbuf+0 S4 A32])
        (nil)))

(insn 7 6 8 2 arch/arm/kernel/ptrace.c:661 (set (reg/v/f:SI 147 [ ubuf ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 128 virtual-incoming-args)
                (const_int 4 [0x4])) [0 ubuf+0 S4 A32])) -1 (expr_list:REG_EQUIV (mem/f/c/i:SI (plus:SI (reg/f:SI 128 virtual-incoming-args)
                (const_int 4 [0x4])) [0 ubuf+0 S4 A32])
        (nil)))

(note 8 7 10 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 3)

;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [100.0%]  (fallthru)
(note 10 8 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 11 10 12 3 arch/arm/kernel/ptrace.c:663 (set (reg/v/f:SI 139 [ thread ])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 142 [ target ])
                (const_int 4 [0x4])) [0 <variable>.stack+0 S4 A32])) -1 (nil))

(insn 12 11 13 3 arch/arm/kernel/ptrace.c:668 (set (reg:SI 0 r0)
        (reg/v/f:SI 139 [ thread ])) -1 (nil))

(call_insn 13 12 14 3 arch/arm/kernel/ptrace.c:668 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_sync_hwstate") [flags 0x41] <function_decl 0x10a83b00 vfp_sync_hwstate>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 14 13 15 3 include/linux/regset.h:224 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 145 [ count ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 15 14 16 3 include/linux/regset.h:224 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 99)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 3 -> ( 16 4)

;; Succ edge  16 [50.0%] 
;; Succ edge  4 [50.0%]  (fallthru)

;; Start of basic block ( 3) -> 4
;; Pred edge  3 [50.0%]  (fallthru)
(note 16 15 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 17 16 18 4 include/linux/regset.h:227 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 144 [ pos ])
            (const_int 255 [0xff]))) -1 (nil))

(jump_insn 18 17 19 4 include/linux/regset.h:227 discrim 1 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 107)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 4 -> ( 5 18)

;; Succ edge  5 [50.0%]  (fallthru)
;; Succ edge  18 [50.0%] 

;; Start of basic block ( 4) -> 5
;; Pred edge  4 [50.0%]  (fallthru)
(note 19 18 20 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 20 19 21 5 include/linux/regset.h:229 (set (reg/v:SI 137 [ copy ])
        (minus:SI (const_int 256 [0x100])
            (reg/v:SI 144 [ pos ]))) -1 (nil))

(insn 21 20 22 5 include/linux/regset.h:229 (parallel [
            (set (reg/v:SI 137 [ copy ])
                (umin:SI (reg/v:SI 137 [ copy ])
                    (reg/v:SI 145 [ count ])))
            (clobber (reg:CC 24 cc))
        ]) -1 (nil))

(insn 22 21 23 5 include/linux/regset.h:230 (set (reg:SI 148)
        (plus:SI (reg/v/f:SI 139 [ thread ])
            (const_int 432 [0x1b0]))) -1 (nil))

(insn 23 22 24 5 include/linux/regset.h:230 (set (reg/v/f:SI 138 [ data ])
        (plus:SI (reg:SI 148)
            (reg/v:SI 144 [ pos ]))) -1 (nil))

(insn 24 23 25 5 include/linux/regset.h:231 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 146 [ kbuf ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 25 24 26 5 include/linux/regset.h:231 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 38)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 1499 [0x5db])
        (nil)))
;; End of basic block 5 -> ( 6 7)

;; Succ edge  6 [85.0%]  (fallthru)
;; Succ edge  7 [15.0%] 

;; Start of basic block ( 5) -> 6
;; Pred edge  5 [85.0%]  (fallthru)
(note 26 25 27 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 27 26 28 6 include/linux/regset.h:232 (set (reg:SI 149)
        (reg/v/f:SI 146 [ kbuf ])) -1 (nil))

(insn 28 27 29 6 include/linux/regset.h:232 (set (reg:SI 150)
        (reg/v/f:SI 138 [ data ])) -1 (nil))

(insn 29 28 30 6 include/linux/regset.h:232 (set (reg:SI 151)
        (reg/v:SI 137 [ copy ])) -1 (nil))

(insn 30 29 31 6 include/linux/regset.h:232 (set (reg:SI 0 r0)
        (reg:SI 149)) -1 (nil))

(insn 31 30 32 6 include/linux/regset.h:232 (set (reg:SI 1 r1)
        (reg:SI 150)) -1 (nil))

(insn 32 31 33 6 include/linux/regset.h:232 (set (reg:SI 2 r2)
        (reg:SI 151)) -1 (nil))

(call_insn 33 32 34 6 include/linux/regset.h:232 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41] <function_decl 0x115c3d80 memcpy>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 34 33 35 6 include/linux/regset.h:232 (set (reg:SI 152)
        (reg:SI 0 r0)) -1 (nil))

(insn 35 34 36 6 include/linux/regset.h:233 (set (reg/v/f:SI 146 [ kbuf ])
        (plus:SI (reg/v/f:SI 146 [ kbuf ])
            (reg/v:SI 137 [ copy ]))) -1 (nil))

(jump_insn 36 35 37 6 include/linux/regset.h:233 (set (pc)
        (label_ref 49)) -1 (nil))
;; End of basic block 6 -> ( 9)

;; Succ edge  9 [100.0%] 

(barrier 37 36 38)

;; Start of basic block ( 5) -> 7
;; Pred edge  5 [15.0%] 
(code_label 38 37 39 7 71 "" [1 uses])

(note 39 38 40 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 40 39 41 7 include/linux/regset.h:234 (set (reg:SI 0 r0)
        (reg/v/f:SI 147 [ ubuf ])) -1 (nil))

(insn 41 40 42 7 include/linux/regset.h:234 (set (reg:SI 1 r1)
        (reg/v/f:SI 138 [ data ])) -1 (nil))

(insn 42 41 43 7 include/linux/regset.h:234 (set (reg:SI 2 r2)
        (reg/v:SI 137 [ copy ])) -1 (nil))

(call_insn 43 42 44 7 include/linux/regset.h:234 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__copy_to_user") [flags 0x41] <function_decl 0x113b1000 __copy_to_user>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 44 43 45 7 include/linux/regset.h:234 (set (reg:SI 136 [ D.27683 ])
        (reg:SI 0 r0)) -1 (nil))

(insn 45 44 46 7 include/linux/regset.h:234 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 136 [ D.27683 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 46 45 47 7 include/linux/regset.h:234 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 94)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 7 -> ( 15 8)

;; Succ edge  15 [50.0%] 
;; Succ edge  8 [50.0%]  (fallthru)

;; Start of basic block ( 7) -> 8
;; Pred edge  7 [50.0%]  (fallthru)
(note 47 46 48 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 48 47 49 8 include/linux/regset.h:237 (set (reg/v/f:SI 147 [ ubuf ])
        (plus:SI (reg/v/f:SI 147 [ ubuf ])
            (reg/v:SI 137 [ copy ]))) -1 (nil))
;; End of basic block 8 -> ( 9)

;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 6 8) -> 9
;; Pred edge  6 [100.0%] 
;; Pred edge  8 [100.0%]  (fallthru)
(code_label 49 48 50 9 72 "" [1 uses])

(note 50 49 51 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 51 50 52 9 include/linux/regset.h:238 (set (reg/v:SI 144 [ pos ])
        (plus:SI (reg/v:SI 144 [ pos ])
            (reg/v:SI 137 [ copy ]))) -1 (nil))

(insn 52 51 53 9 include/linux/regset.h:239 (set (reg/v:SI 145 [ count ])
        (minus:SI (reg/v:SI 145 [ count ])
            (reg/v:SI 137 [ copy ]))) -1 (nil))

(insn 53 52 54 9 include/linux/regset.h:279 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 145 [ count ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 54 53 55 9 include/linux/regset.h:279 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 99)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 0 [0x0])
        (nil)))
;; End of basic block 9 -> ( 16 10)

;; Succ edge  16
;; Succ edge  10 [100.0%]  (fallthru)

;; Start of basic block ( 9) -> 10
;; Pred edge  9 [100.0%]  (fallthru)
(note 55 54 56 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 56 55 57 10 include/linux/regset.h:281 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 144 [ pos ])
            (const_int 255 [0xff]))) -1 (nil))

(jump_insn 57 56 58 10 include/linux/regset.h:281 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 107)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 9978 [0x26fa])
        (nil)))
;; End of basic block 10 -> ( 11 18)

;; Succ edge  11 [0.2%]  (fallthru)
;; Succ edge  18 [99.8%] 

;; Start of basic block ( 10) -> 11
;; Pred edge  10 [0.2%]  (fallthru)
(note 58 57 59 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 59 58 60 11 include/linux/regset.h:281 discrim 1 (set (reg:SI 153)
        (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x116b8180>)) -1 (nil))

(insn 60 59 61 11 include/linux/regset.h:281 discrim 1 (set (reg:SI 154)
        (const_int 281 [0x119])) -1 (nil))

(insn 61 60 62 11 include/linux/regset.h:281 discrim 1 (set (reg:SI 0 r0)
        (reg:SI 153)) -1 (nil))

(insn 62 61 63 11 include/linux/regset.h:281 discrim 1 (set (reg:SI 1 r1)
        (reg:SI 154)) -1 (nil))

(call_insn 63 62 64 11 include/linux/regset.h:281 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("__bug") [flags 0x41] <function_decl 0x10a2ec00 __bug>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (expr_list:REG_NORETURN (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 11 -> ()


(barrier 64 63 109)

;; Start of basic block ( 18) -> 12
;; Pred edge  18 [50.0%] 
(code_label 109 64 65 12 76 "" [1 uses])

(note 65 109 66 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 66 65 67 12 include/linux/regset.h:229 (set (reg/v:SI 134 [ copy ])
        (minus:SI (const_int 260 [0x104])
            (reg/v:SI 144 [ pos ]))) -1 (nil))

(insn 67 66 68 12 include/linux/regset.h:229 (parallel [
            (set (reg/v:SI 134 [ copy ])
                (umin:SI (reg/v:SI 134 [ copy ])
                    (reg/v:SI 145 [ count ])))
            (clobber (reg:CC 24 cc))
        ]) -1 (nil))

(insn 68 67 69 12 include/linux/regset.h:230 (set (reg:SI 155)
        (plus:SI (reg/v/f:SI 139 [ thread ])
            (const_int 692 [0x2b4]))) -1 (nil))

(insn 69 68 70 12 include/linux/regset.h:230 (set (reg:SI 156)
        (plus:SI (reg/v:SI 144 [ pos ])
            (const_int -256 [0xffffffffffffff00]))) -1 (nil))

(insn 70 69 71 12 include/linux/regset.h:230 (set (reg/v/f:SI 135 [ data ])
        (plus:SI (reg:SI 155)
            (reg:SI 156))) -1 (nil))

(insn 71 70 72 12 include/linux/regset.h:231 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 146 [ kbuf ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 72 71 73 12 include/linux/regset.h:231 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 85)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 1499 [0x5db])
        (nil)))
;; End of basic block 12 -> ( 13 14)

;; Succ edge  13 [85.0%]  (fallthru)
;; Succ edge  14 [15.0%] 

;; Start of basic block ( 12) -> 13
;; Pred edge  12 [85.0%]  (fallthru)
(note 73 72 74 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 74 73 75 13 include/linux/regset.h:232 (set (reg:SI 157)
        (reg/v/f:SI 146 [ kbuf ])) -1 (nil))

(insn 75 74 76 13 include/linux/regset.h:232 (set (reg:SI 158)
        (reg/v/f:SI 135 [ data ])) -1 (nil))

(insn 76 75 77 13 include/linux/regset.h:232 (set (reg:SI 159)
        (reg/v:SI 134 [ copy ])) -1 (nil))

(insn 77 76 78 13 include/linux/regset.h:232 (set (reg:SI 0 r0)
        (reg:SI 157)) -1 (nil))

(insn 78 77 79 13 include/linux/regset.h:232 (set (reg:SI 1 r1)
        (reg:SI 158)) -1 (nil))

(insn 79 78 80 13 include/linux/regset.h:232 (set (reg:SI 2 r2)
        (reg:SI 159)) -1 (nil))

(call_insn 80 79 81 13 include/linux/regset.h:232 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41] <function_decl 0x115c3d80 memcpy>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 81 80 82 13 include/linux/regset.h:232 (set (reg:SI 160)
        (reg:SI 0 r0)) -1 (nil))

(insn 82 81 83 13 include/linux/regset.h:241 (set (reg/v:SI 140 [ ret ])
        (const_int 0 [0x0])) -1 (nil))

(jump_insn 83 82 84 13 include/linux/regset.h:241 (set (pc)
        (label_ref 102)) -1 (nil))
;; End of basic block 13 -> ( 17)

;; Succ edge  17 [100.0%] 

(barrier 84 83 85)

;; Start of basic block ( 12) -> 14
;; Pred edge  12 [15.0%] 
(code_label 85 84 86 14 74 "" [1 uses])

(note 86 85 87 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 87 86 88 14 include/linux/regset.h:234 (set (reg:SI 0 r0)
        (reg/v/f:SI 147 [ ubuf ])) -1 (nil))

(insn 88 87 89 14 include/linux/regset.h:234 (set (reg:SI 1 r1)
        (reg/v/f:SI 135 [ data ])) -1 (nil))

(insn 89 88 90 14 include/linux/regset.h:234 (set (reg:SI 2 r2)
        (reg/v:SI 134 [ copy ])) -1 (nil))

(call_insn 90 89 91 14 include/linux/regset.h:234 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__copy_to_user") [flags 0x41] <function_decl 0x113b1000 __copy_to_user>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 91 90 92 14 include/linux/regset.h:234 (set (reg:SI 133 [ D.27733 ])
        (reg:SI 0 r0)) -1 (nil))

(insn 92 91 93 14 include/linux/regset.h:234 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 133 [ D.27733 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 93 92 94 14 include/linux/regset.h:234 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 99)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 14 -> ( 15 16)

;; Succ edge  15 [50.0%]  (fallthru)
;; Succ edge  16 [50.0%] 

;; Start of basic block ( 7 14) -> 15
;; Pred edge  7 [50.0%] 
;; Pred edge  14 [50.0%]  (fallthru)
(code_label 94 93 95 15 73 "" [1 uses])

(note 95 94 96 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 96 95 97 15 include/linux/regset.h:235 (set (reg/v:SI 140 [ ret ])
        (const_int -14 [0xfffffffffffffff2])) -1 (nil))

(jump_insn 97 96 98 15 include/linux/regset.h:235 (set (pc)
        (label_ref 102)) -1 (nil))
;; End of basic block 15 -> ( 17)

;; Succ edge  17 [100.0%] 

(barrier 98 97 99)

;; Start of basic block ( 3 14 9 19) -> 16
;; Pred edge  3 [50.0%] 
;; Pred edge  14 [50.0%] 
;; Pred edge  9
;; Pred edge  19 [100.0%] 
(code_label 99 98 100 16 69 "" [4 uses])

(note 100 99 101 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 101 100 102 16 include/linux/regset.h:241 (set (reg/v:SI 140 [ ret ])
        (const_int 0 [0x0])) -1 (nil))
;; End of basic block 16 -> ( 17)

;; Succ edge  17 [100.0%]  (fallthru)

;; Start of basic block ( 16 15 13) -> 17
;; Pred edge  16 [100.0%]  (fallthru)
;; Pred edge  15 [100.0%] 
;; Pred edge  13 [100.0%] 
(code_label 102 101 103 17 75 "" [2 uses])

(note 103 102 104 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 104 103 105 17 arch/arm/kernel/ptrace.c:687 (set (reg:SI 141 [ <result> ])
        (reg/v:SI 140 [ ret ])) -1 (nil))

(jump_insn 105 104 106 17 arch/arm/kernel/ptrace.c:687 (set (pc)
        (label_ref 116)) -1 (nil))
;; End of basic block 17 -> ( 21)

;; Succ edge  21 [100.0%] 

(barrier 106 105 107)

;; Start of basic block ( 4 10) -> 18
;; Pred edge  4 [50.0%] 
;; Pred edge  10 [99.8%] 
(code_label 107 106 108 18 70 "" [2 uses])

(note 108 107 110 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 110 108 111 18 include/linux/regset.h:227 discrim 1 (set (reg:SI 162)
        (const_int 259 [0x103])) -1 (nil))

(insn 111 110 112 18 include/linux/regset.h:227 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 144 [ pos ])
            (reg:SI 162))) -1 (nil))

(jump_insn 112 111 115 18 include/linux/regset.h:227 discrim 1 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 109)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 18 -> ( 12 19)

;; Succ edge  12 [50.0%] 
;; Succ edge  19 [50.0%]  (fallthru)

;; Start of basic block ( 18) -> 19
;; Pred edge  18 [50.0%]  (fallthru)
(note 115 112 113 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(jump_insn 113 115 114 19 include/linux/regset.h:227 discrim 1 (set (pc)
        (label_ref 99)) -1 (nil))
;; End of basic block 19 -> ( 16)

;; Succ edge  16 [100.0%] 

(barrier 114 113 124)

;; Start of basic block () -> 20
(note 124 114 118 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn 118 124 119 20 arch/arm/kernel/ptrace.c:687 (clobber (reg/i:SI 0 r0)) -1 (nil))

(insn 119 118 120 20 arch/arm/kernel/ptrace.c:687 (clobber (reg:SI 141 [ <result> ])) -1 (nil))

(jump_insn 120 119 121 20 arch/arm/kernel/ptrace.c:687 (set (pc)
        (label_ref 122)) -1 (nil))
;; End of basic block 20 -> ( 22)

;; Succ edge  22 [100.0%] 

(barrier 121 120 116)

;; Start of basic block ( 17) -> 21
;; Pred edge  17 [100.0%] 
(code_label 116 121 125 21 68 "" [1 uses])

(note 125 116 117 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn 117 125 122 21 arch/arm/kernel/ptrace.c:687 (set (reg/i:SI 0 r0)
        (reg:SI 141 [ <result> ])) -1 (nil))
;; End of basic block 21 -> ( 22)

;; Succ edge  22 [100.0%]  (fallthru)

;; Start of basic block ( 20 21) -> 22
;; Pred edge  20 [100.0%] 
;; Pred edge  21 [100.0%]  (fallthru)
(code_label 122 117 126 22 77 "" [1 uses])

(note 126 122 123 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(insn 123 126 0 22 arch/arm/kernel/ptrace.c:687 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 22 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function fpa_get (fpa_get)[0:1559]


;; Generating RTL for gimple basic block 2

;; D.27170 = target->stack;

(insn 11 10 0 arch/arm/kernel/ptrace.c:616 (set (reg/f:SI 137 [ D.27170 ])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 139 [ target ])
                (const_int 4 [0x4])) [0 <variable>.stack+0 S4 A32])) -1 (nil))

;; if (count == 0)

(insn 12 11 13 include/linux/regset.h:224 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 142 [ count ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 13 12 0 include/linux/regset.h:224 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))

;; Generating RTL for gimple basic block 3

;; if (pos <= 115)

(insn 15 14 16 include/linux/regset.h:227 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 141 [ pos ])
            (const_int 115 [0x73]))) -1 (nil))

(jump_insn 16 15 0 include/linux/regset.h:227 discrim 1 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))

;; Generating RTL for gimple basic block 4

;; copy = MIN_EXPR <116 - pos, count>;

(insn 18 17 19 include/linux/regset.h:229 (set (reg/v:SI 134 [ copy ])
        (minus:SI (const_int 116 [0x74])
            (reg/v:SI 141 [ pos ]))) -1 (nil))

(insn 19 18 0 include/linux/regset.h:229 (parallel [
            (set (reg/v:SI 134 [ copy ])
                (umin:SI (reg/v:SI 134 [ copy ])
                    (reg/v:SI 142 [ count ])))
            (clobber (reg:CC 24 cc))
        ]) -1 (nil))

;; data = &((struct thread_info *) D.27170)->fpstate + pos;

(insn 20 19 21 include/linux/regset.h:230 (set (reg:SI 145)
        (plus:SI (reg/f:SI 137 [ D.27170 ])
            (const_int 288 [0x120]))) -1 (nil))

(insn 21 20 0 include/linux/regset.h:230 (set (reg/v/f:SI 136 [ data ])
        (plus:SI (reg:SI 145)
            (reg/v:SI 141 [ pos ]))) -1 (nil))

;; if (kbuf != 0B)

(insn 22 21 23 include/linux/regset.h:231 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 143 [ kbuf ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 23 22 0 include/linux/regset.h:231 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 73 [0x49])
        (nil)))

;; Generating RTL for gimple basic block 5

;; memcpy (kbuf, data, copy);

(insn 25 24 26 include/linux/regset.h:232 (set (reg:SI 146)
        (reg/v/f:SI 143 [ kbuf ])) -1 (nil))

(insn 26 25 27 include/linux/regset.h:232 (set (reg:SI 147)
        (reg/v/f:SI 136 [ data ])) -1 (nil))

(insn 27 26 28 include/linux/regset.h:232 (set (reg:SI 148)
        (reg/v:SI 134 [ copy ])) -1 (nil))

(insn 28 27 29 include/linux/regset.h:232 (set (reg:SI 0 r0)
        (reg:SI 146)) -1 (nil))

(insn 29 28 30 include/linux/regset.h:232 (set (reg:SI 1 r1)
        (reg:SI 147)) -1 (nil))

(insn 30 29 31 include/linux/regset.h:232 (set (reg:SI 2 r2)
        (reg:SI 148)) -1 (nil))

(call_insn 31 30 32 include/linux/regset.h:232 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41] <function_decl 0x115c3d80 memcpy>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 32 31 0 include/linux/regset.h:232 (set (reg:SI 149)
        (reg:SI 0 r0)) -1 (nil))

;; D.27754 = 0;

(insn 33 32 0 include/linux/regset.h:241 (set (reg:SI 135 [ D.27754 ])
        (const_int 0 [0x0])) -1 (nil))

;; Generating RTL for gimple basic block 6

;; 

(code_label 36 35 37 82 "" [0 uses])

(note 37 36 0 NOTE_INSN_BASIC_BLOCK)

;; D.27758 = __copy_to_user (ubuf, data, copy);

(insn 38 37 39 include/linux/regset.h:234 (set (reg:SI 0 r0)
        (reg/v/f:SI 144 [ ubuf ])) -1 (nil))

(insn 39 38 40 include/linux/regset.h:234 (set (reg:SI 1 r1)
        (reg/v/f:SI 136 [ data ])) -1 (nil))

(insn 40 39 41 include/linux/regset.h:234 (set (reg:SI 2 r2)
        (reg/v:SI 134 [ copy ])) -1 (nil))

(call_insn 41 40 42 include/linux/regset.h:234 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__copy_to_user") [flags 0x41] <function_decl 0x113b1000 __copy_to_user>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 42 41 0 include/linux/regset.h:234 (set (reg:SI 133 [ D.27758 ])
        (reg:SI 0 r0)) -1 (nil))

;; if (D.27758 != 0)

(insn 43 42 44 include/linux/regset.h:234 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 133 [ D.27758 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 44 43 0 include/linux/regset.h:234 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
        (nil)))

;; Generating RTL for gimple basic block 7

;; D.27754 = -14;

(insn 46 45 0 include/linux/regset.h:235 (set (reg:SI 135 [ D.27754 ])
        (const_int -14 [0xfffffffffffffff2])) -1 (nil))

;; Generating RTL for gimple basic block 8

;; 

(code_label 49 48 50 81 "" [0 uses])

(note 50 49 0 NOTE_INSN_BASIC_BLOCK)

;; D.27754 = 0;

(insn 51 50 0 include/linux/regset.h:225 (set (reg:SI 135 [ D.27754 ])
        (const_int 0 [0x0])) -1 (nil))

;; Generating RTL for gimple basic block 9

;; 

(code_label 52 51 53 83 "" [0 uses])

(note 53 52 0 NOTE_INSN_BASIC_BLOCK)

;; return D.27754;

(insn 54 53 55 arch/arm/kernel/ptrace.c:618 (set (reg:SI 138 [ <result> ])
        (reg:SI 135 [ D.27754 ])) -1 (nil))

(jump_insn 55 54 56 arch/arm/kernel/ptrace.c:618 (set (pc)
        (label_ref 0)) -1 (nil))

(barrier 56 55 0)


;;
;; Full RTL generated for this function:
;;
(note 1 0 9 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 9 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 9 3 2 arch/arm/kernel/ptrace.c:614 (set (reg/v/f:SI 139 [ target ])
        (reg:SI 0 r0 [ target ])) -1 (nil))

(insn 3 2 4 2 arch/arm/kernel/ptrace.c:614 (set (reg/v/f:SI 140 [ regset ])
        (reg:SI 1 r1 [ regset ])) -1 (nil))

(insn 4 3 5 2 arch/arm/kernel/ptrace.c:614 (set (reg/v:SI 141 [ pos ])
        (reg:SI 2 r2 [ pos ])) -1 (nil))

(insn 5 4 6 2 arch/arm/kernel/ptrace.c:614 (set (reg/v:SI 142 [ count ])
        (reg:SI 3 r3 [ count ])) -1 (nil))

(insn 6 5 7 2 arch/arm/kernel/ptrace.c:614 (set (reg/v/f:SI 143 [ kbuf ])
        (mem/f/c/i:SI (reg/f:SI 128 virtual-incoming-args) [0 kbuf+0 S4 A32])) -1 (expr_list:REG_EQUIV (mem/f/c/i:SI (reg/f:SI 128 virtual-incoming-args) [0 kbuf+0 S4 A32])
        (nil)))

(insn 7 6 8 2 arch/arm/kernel/ptrace.c:614 (set (reg/v/f:SI 144 [ ubuf ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 128 virtual-incoming-args)
                (const_int 4 [0x4])) [0 ubuf+0 S4 A32])) -1 (expr_list:REG_EQUIV (mem/f/c/i:SI (plus:SI (reg/f:SI 128 virtual-incoming-args)
                (const_int 4 [0x4])) [0 ubuf+0 S4 A32])
        (nil)))

(note 8 7 10 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 3)

;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [100.0%]  (fallthru)
(note 10 8 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 11 10 12 3 arch/arm/kernel/ptrace.c:616 (set (reg/f:SI 137 [ D.27170 ])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 139 [ target ])
                (const_int 4 [0x4])) [0 <variable>.stack+0 S4 A32])) -1 (nil))

(insn 12 11 13 3 include/linux/regset.h:224 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 142 [ count ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 13 12 14 3 include/linux/regset.h:224 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 49)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))
;; End of basic block 3 -> ( 9 4)

;; Succ edge  9 [39.0%] 
;; Succ edge  4 [61.0%]  (fallthru)

;; Start of basic block ( 3) -> 4
;; Pred edge  3 [61.0%]  (fallthru)
(note 14 13 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 15 14 16 4 include/linux/regset.h:227 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 141 [ pos ])
            (const_int 115 [0x73]))) -1 (nil))

(jump_insn 16 15 17 4 include/linux/regset.h:227 discrim 1 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 49)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))
;; End of basic block 4 -> ( 5 9)

;; Succ edge  5 [61.0%]  (fallthru)
;; Succ edge  9 [39.0%] 

;; Start of basic block ( 4) -> 5
;; Pred edge  4 [61.0%]  (fallthru)
(note 17 16 18 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 18 17 19 5 include/linux/regset.h:229 (set (reg/v:SI 134 [ copy ])
        (minus:SI (const_int 116 [0x74])
            (reg/v:SI 141 [ pos ]))) -1 (nil))

(insn 19 18 20 5 include/linux/regset.h:229 (parallel [
            (set (reg/v:SI 134 [ copy ])
                (umin:SI (reg/v:SI 134 [ copy ])
                    (reg/v:SI 142 [ count ])))
            (clobber (reg:CC 24 cc))
        ]) -1 (nil))

(insn 20 19 21 5 include/linux/regset.h:230 (set (reg:SI 145)
        (plus:SI (reg/f:SI 137 [ D.27170 ])
            (const_int 288 [0x120]))) -1 (nil))

(insn 21 20 22 5 include/linux/regset.h:230 (set (reg/v/f:SI 136 [ data ])
        (plus:SI (reg:SI 145)
            (reg/v:SI 141 [ pos ]))) -1 (nil))

(insn 22 21 23 5 include/linux/regset.h:231 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 143 [ kbuf ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 23 22 24 5 include/linux/regset.h:231 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 36)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 73 [0x49])
        (nil)))
;; End of basic block 5 -> ( 6 7)

;; Succ edge  6 [99.3%]  (fallthru)
;; Succ edge  7 [0.7%] 

;; Start of basic block ( 5) -> 6
;; Pred edge  5 [99.3%]  (fallthru)
(note 24 23 25 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 25 24 26 6 include/linux/regset.h:232 (set (reg:SI 146)
        (reg/v/f:SI 143 [ kbuf ])) -1 (nil))

(insn 26 25 27 6 include/linux/regset.h:232 (set (reg:SI 147)
        (reg/v/f:SI 136 [ data ])) -1 (nil))

(insn 27 26 28 6 include/linux/regset.h:232 (set (reg:SI 148)
        (reg/v:SI 134 [ copy ])) -1 (nil))

(insn 28 27 29 6 include/linux/regset.h:232 (set (reg:SI 0 r0)
        (reg:SI 146)) -1 (nil))

(insn 29 28 30 6 include/linux/regset.h:232 (set (reg:SI 1 r1)
        (reg:SI 147)) -1 (nil))

(insn 30 29 31 6 include/linux/regset.h:232 (set (reg:SI 2 r2)
        (reg:SI 148)) -1 (nil))

(call_insn 31 30 32 6 include/linux/regset.h:232 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41] <function_decl 0x115c3d80 memcpy>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 32 31 33 6 include/linux/regset.h:232 (set (reg:SI 149)
        (reg:SI 0 r0)) -1 (nil))

(insn 33 32 34 6 include/linux/regset.h:241 (set (reg:SI 135 [ D.27754 ])
        (const_int 0 [0x0])) -1 (nil))

(jump_insn 34 33 35 6 include/linux/regset.h:241 (set (pc)
        (label_ref 52)) -1 (nil))
;; End of basic block 6 -> ( 10)

;; Succ edge  10 [100.0%] 

(barrier 35 34 36)

;; Start of basic block ( 5) -> 7
;; Pred edge  5 [0.7%] 
(code_label 36 35 37 7 82 "" [1 uses])

(note 37 36 38 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 38 37 39 7 include/linux/regset.h:234 (set (reg:SI 0 r0)
        (reg/v/f:SI 144 [ ubuf ])) -1 (nil))

(insn 39 38 40 7 include/linux/regset.h:234 (set (reg:SI 1 r1)
        (reg/v/f:SI 136 [ data ])) -1 (nil))

(insn 40 39 41 7 include/linux/regset.h:234 (set (reg:SI 2 r2)
        (reg/v:SI 134 [ copy ])) -1 (nil))

(call_insn 41 40 42 7 include/linux/regset.h:234 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__copy_to_user") [flags 0x41] <function_decl 0x113b1000 __copy_to_user>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 42 41 43 7 include/linux/regset.h:234 (set (reg:SI 133 [ D.27758 ])
        (reg:SI 0 r0)) -1 (nil))

(insn 43 42 44 7 include/linux/regset.h:234 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 133 [ D.27758 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 44 43 45 7 include/linux/regset.h:234 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 49)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
        (nil)))
;; End of basic block 7 -> ( 8 9)

;; Succ edge  8 [39.0%]  (fallthru)
;; Succ edge  9 [61.0%] 

;; Start of basic block ( 7) -> 8
;; Pred edge  7 [39.0%]  (fallthru)
(note 45 44 46 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 46 45 47 8 include/linux/regset.h:235 (set (reg:SI 135 [ D.27754 ])
        (const_int -14 [0xfffffffffffffff2])) -1 (nil))

(jump_insn 47 46 48 8 include/linux/regset.h:235 (set (pc)
        (label_ref 52)) -1 (nil))
;; End of basic block 8 -> ( 10)

;; Succ edge  10 [100.0%] 

(barrier 48 47 49)

;; Start of basic block ( 3 4 7) -> 9
;; Pred edge  3 [39.0%] 
;; Pred edge  4 [39.0%] 
;; Pred edge  7 [61.0%] 
(code_label 49 48 50 9 81 "" [3 uses])

(note 50 49 51 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 51 50 52 9 include/linux/regset.h:225 (set (reg:SI 135 [ D.27754 ])
        (const_int 0 [0x0])) -1 (nil))
;; End of basic block 9 -> ( 10)

;; Succ edge  10 [100.0%]  (fallthru)

;; Start of basic block ( 9 8 6) -> 10
;; Pred edge  9 [100.0%]  (fallthru)
;; Pred edge  8 [100.0%] 
;; Pred edge  6 [100.0%] 
(code_label 52 51 53 10 83 "" [2 uses])

(note 53 52 54 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 54 53 55 10 arch/arm/kernel/ptrace.c:618 (set (reg:SI 138 [ <result> ])
        (reg:SI 135 [ D.27754 ])) -1 (nil))

(jump_insn 55 54 56 10 arch/arm/kernel/ptrace.c:618 (set (pc)
        (label_ref 57)) -1 (nil))
;; End of basic block 10 -> ( 12)

;; Succ edge  12 [100.0%] 

(barrier 56 55 65)

;; Start of basic block () -> 11
(note 65 56 59 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 59 65 60 11 arch/arm/kernel/ptrace.c:618 (clobber (reg/i:SI 0 r0)) -1 (nil))

(insn 60 59 61 11 arch/arm/kernel/ptrace.c:618 (clobber (reg:SI 138 [ <result> ])) -1 (nil))

(jump_insn 61 60 62 11 arch/arm/kernel/ptrace.c:618 (set (pc)
        (label_ref 63)) -1 (nil))
;; End of basic block 11 -> ( 13)

;; Succ edge  13 [100.0%] 

(barrier 62 61 57)

;; Start of basic block ( 10) -> 12
;; Pred edge  10 [100.0%] 
(code_label 57 62 66 12 80 "" [1 uses])

(note 66 57 58 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 58 66 63 12 arch/arm/kernel/ptrace.c:618 (set (reg/i:SI 0 r0)
        (reg:SI 138 [ <result> ])) -1 (nil))
;; End of basic block 12 -> ( 13)

;; Succ edge  13 [100.0%]  (fallthru)

;; Start of basic block ( 11 12) -> 13
;; Pred edge  11 [100.0%] 
;; Pred edge  12 [100.0%]  (fallthru)
(code_label 63 58 67 13 84 "" [1 uses])

(note 67 63 64 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 64 67 0 13 arch/arm/kernel/ptrace.c:618 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 13 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function gpr_get (gpr_get)[0:1557]


;; Generating RTL for gimple basic block 2

;; D.27137 = target->stack;

(insn 11 10 0 arch/arm/kernel/ptrace.c:582 (set (reg/f:SI 137 [ D.27137 ])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 139 [ target ])
                (const_int 4 [0x4])) [0 <variable>.stack+0 S4 A32])) -1 (nil))

;; if (count == 0)

(insn 12 11 13 include/linux/regset.h:224 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 142 [ count ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 13 12 0 include/linux/regset.h:224 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))

;; Generating RTL for gimple basic block 3

;; if (pos <= 71)

(insn 15 14 16 include/linux/regset.h:227 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 141 [ pos ])
            (const_int 71 [0x47]))) -1 (nil))

(jump_insn 16 15 0 include/linux/regset.h:227 discrim 1 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))

;; Generating RTL for gimple basic block 4

;; copy = MIN_EXPR <72 - pos, count>;

(insn 18 17 19 include/linux/regset.h:229 (set (reg/v:SI 134 [ copy ])
        (minus:SI (const_int 72 [0x48])
            (reg/v:SI 141 [ pos ]))) -1 (nil))

(insn 19 18 0 include/linux/regset.h:229 (parallel [
            (set (reg/v:SI 134 [ copy ])
                (umin:SI (reg/v:SI 134 [ copy ])
                    (reg/v:SI 142 [ count ])))
            (clobber (reg:CC 24 cc))
        ]) -1 (nil))

;; data = ((struct pt_regs *) D.27137 + 8112) + pos;

(insn 20 19 21 include/linux/regset.h:230 (set (reg:SI 146)
        (plus:SI (reg/f:SI 137 [ D.27137 ])
            (const_int 8064 [0x1f80]))) -1 (nil))

(insn 21 20 22 include/linux/regset.h:230 (set (reg:SI 145)
        (plus:SI (reg:SI 146)
            (const_int 48 [0x30]))) -1 (expr_list:REG_EQUAL (plus:SI (reg/f:SI 137 [ D.27137 ])
            (const_int 8112 [0x1fb0]))
        (nil)))

(insn 22 21 0 include/linux/regset.h:230 (set (reg/v/f:SI 136 [ data ])
        (plus:SI (reg:SI 145)
            (reg/v:SI 141 [ pos ]))) -1 (nil))

;; if (kbuf != 0B)

(insn 23 22 24 include/linux/regset.h:231 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 143 [ kbuf ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 24 23 0 include/linux/regset.h:231 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 73 [0x49])
        (nil)))

;; Generating RTL for gimple basic block 5

;; memcpy (kbuf, data, copy);

(insn 26 25 27 include/linux/regset.h:232 (set (reg:SI 147)
        (reg/v/f:SI 143 [ kbuf ])) -1 (nil))

(insn 27 26 28 include/linux/regset.h:232 (set (reg:SI 148)
        (reg/v/f:SI 136 [ data ])) -1 (nil))

(insn 28 27 29 include/linux/regset.h:232 (set (reg:SI 149)
        (reg/v:SI 134 [ copy ])) -1 (nil))

(insn 29 28 30 include/linux/regset.h:232 (set (reg:SI 0 r0)
        (reg:SI 147)) -1 (nil))

(insn 30 29 31 include/linux/regset.h:232 (set (reg:SI 1 r1)
        (reg:SI 148)) -1 (nil))

(insn 31 30 32 include/linux/regset.h:232 (set (reg:SI 2 r2)
        (reg:SI 149)) -1 (nil))

(call_insn 32 31 33 include/linux/regset.h:232 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41] <function_decl 0x115c3d80 memcpy>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 33 32 0 include/linux/regset.h:232 (set (reg:SI 150)
        (reg:SI 0 r0)) -1 (nil))

;; D.27779 = 0;

(insn 34 33 0 include/linux/regset.h:241 (set (reg:SI 135 [ D.27779 ])
        (const_int 0 [0x0])) -1 (nil))

;; Generating RTL for gimple basic block 6

;; 

(code_label 37 36 38 87 "" [0 uses])

(note 38 37 0 NOTE_INSN_BASIC_BLOCK)

;; D.27783 = __copy_to_user (ubuf, data, copy);

(insn 39 38 40 include/linux/regset.h:234 (set (reg:SI 0 r0)
        (reg/v/f:SI 144 [ ubuf ])) -1 (nil))

(insn 40 39 41 include/linux/regset.h:234 (set (reg:SI 1 r1)
        (reg/v/f:SI 136 [ data ])) -1 (nil))

(insn 41 40 42 include/linux/regset.h:234 (set (reg:SI 2 r2)
        (reg/v:SI 134 [ copy ])) -1 (nil))

(call_insn 42 41 43 include/linux/regset.h:234 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__copy_to_user") [flags 0x41] <function_decl 0x113b1000 __copy_to_user>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 43 42 0 include/linux/regset.h:234 (set (reg:SI 133 [ D.27783 ])
        (reg:SI 0 r0)) -1 (nil))

;; if (D.27783 != 0)

(insn 44 43 45 include/linux/regset.h:234 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 133 [ D.27783 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 45 44 0 include/linux/regset.h:234 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
        (nil)))

;; Generating RTL for gimple basic block 7

;; D.27779 = -14;

(insn 47 46 0 include/linux/regset.h:235 (set (reg:SI 135 [ D.27779 ])
        (const_int -14 [0xfffffffffffffff2])) -1 (nil))

;; Generating RTL for gimple basic block 8

;; 

(code_label 50 49 51 86 "" [0 uses])

(note 51 50 0 NOTE_INSN_BASIC_BLOCK)

;; D.27779 = 0;

(insn 52 51 0 include/linux/regset.h:225 (set (reg:SI 135 [ D.27779 ])
        (const_int 0 [0x0])) -1 (nil))

;; Generating RTL for gimple basic block 9

;; 

(code_label 53 52 54 88 "" [0 uses])

(note 54 53 0 NOTE_INSN_BASIC_BLOCK)

;; return D.27779;

(insn 55 54 56 arch/arm/kernel/ptrace.c:587 (set (reg:SI 138 [ <result> ])
        (reg:SI 135 [ D.27779 ])) -1 (nil))

(jump_insn 56 55 57 arch/arm/kernel/ptrace.c:587 (set (pc)
        (label_ref 0)) -1 (nil))

(barrier 57 56 0)


;;
;; Full RTL generated for this function:
;;
(note 1 0 9 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 9 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 9 3 2 arch/arm/kernel/ptrace.c:581 (set (reg/v/f:SI 139 [ target ])
        (reg:SI 0 r0 [ target ])) -1 (nil))

(insn 3 2 4 2 arch/arm/kernel/ptrace.c:581 (set (reg/v/f:SI 140 [ regset ])
        (reg:SI 1 r1 [ regset ])) -1 (nil))

(insn 4 3 5 2 arch/arm/kernel/ptrace.c:581 (set (reg/v:SI 141 [ pos ])
        (reg:SI 2 r2 [ pos ])) -1 (nil))

(insn 5 4 6 2 arch/arm/kernel/ptrace.c:581 (set (reg/v:SI 142 [ count ])
        (reg:SI 3 r3 [ count ])) -1 (nil))

(insn 6 5 7 2 arch/arm/kernel/ptrace.c:581 (set (reg/v/f:SI 143 [ kbuf ])
        (mem/f/c/i:SI (reg/f:SI 128 virtual-incoming-args) [0 kbuf+0 S4 A32])) -1 (expr_list:REG_EQUIV (mem/f/c/i:SI (reg/f:SI 128 virtual-incoming-args) [0 kbuf+0 S4 A32])
        (nil)))

(insn 7 6 8 2 arch/arm/kernel/ptrace.c:581 (set (reg/v/f:SI 144 [ ubuf ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 128 virtual-incoming-args)
                (const_int 4 [0x4])) [0 ubuf+0 S4 A32])) -1 (expr_list:REG_EQUIV (mem/f/c/i:SI (plus:SI (reg/f:SI 128 virtual-incoming-args)
                (const_int 4 [0x4])) [0 ubuf+0 S4 A32])
        (nil)))

(note 8 7 10 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 3)

;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [100.0%]  (fallthru)
(note 10 8 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 11 10 12 3 arch/arm/kernel/ptrace.c:582 (set (reg/f:SI 137 [ D.27137 ])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 139 [ target ])
                (const_int 4 [0x4])) [0 <variable>.stack+0 S4 A32])) -1 (nil))

(insn 12 11 13 3 include/linux/regset.h:224 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 142 [ count ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 13 12 14 3 include/linux/regset.h:224 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 50)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))
;; End of basic block 3 -> ( 9 4)

;; Succ edge  9 [39.0%] 
;; Succ edge  4 [61.0%]  (fallthru)

;; Start of basic block ( 3) -> 4
;; Pred edge  3 [61.0%]  (fallthru)
(note 14 13 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 15 14 16 4 include/linux/regset.h:227 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 141 [ pos ])
            (const_int 71 [0x47]))) -1 (nil))

(jump_insn 16 15 17 4 include/linux/regset.h:227 discrim 1 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 50)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))
;; End of basic block 4 -> ( 5 9)

;; Succ edge  5 [61.0%]  (fallthru)
;; Succ edge  9 [39.0%] 

;; Start of basic block ( 4) -> 5
;; Pred edge  4 [61.0%]  (fallthru)
(note 17 16 18 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 18 17 19 5 include/linux/regset.h:229 (set (reg/v:SI 134 [ copy ])
        (minus:SI (const_int 72 [0x48])
            (reg/v:SI 141 [ pos ]))) -1 (nil))

(insn 19 18 20 5 include/linux/regset.h:229 (parallel [
            (set (reg/v:SI 134 [ copy ])
                (umin:SI (reg/v:SI 134 [ copy ])
                    (reg/v:SI 142 [ count ])))
            (clobber (reg:CC 24 cc))
        ]) -1 (nil))

(insn 20 19 21 5 include/linux/regset.h:230 (set (reg:SI 146)
        (plus:SI (reg/f:SI 137 [ D.27137 ])
            (const_int 8064 [0x1f80]))) -1 (nil))

(insn 21 20 22 5 include/linux/regset.h:230 (set (reg:SI 145)
        (plus:SI (reg:SI 146)
            (const_int 48 [0x30]))) -1 (expr_list:REG_EQUAL (plus:SI (reg/f:SI 137 [ D.27137 ])
            (const_int 8112 [0x1fb0]))
        (nil)))

(insn 22 21 23 5 include/linux/regset.h:230 (set (reg/v/f:SI 136 [ data ])
        (plus:SI (reg:SI 145)
            (reg/v:SI 141 [ pos ]))) -1 (nil))

(insn 23 22 24 5 include/linux/regset.h:231 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 143 [ kbuf ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 24 23 25 5 include/linux/regset.h:231 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 37)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 73 [0x49])
        (nil)))
;; End of basic block 5 -> ( 6 7)

;; Succ edge  6 [99.3%]  (fallthru)
;; Succ edge  7 [0.7%] 

;; Start of basic block ( 5) -> 6
;; Pred edge  5 [99.3%]  (fallthru)
(note 25 24 26 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 26 25 27 6 include/linux/regset.h:232 (set (reg:SI 147)
        (reg/v/f:SI 143 [ kbuf ])) -1 (nil))

(insn 27 26 28 6 include/linux/regset.h:232 (set (reg:SI 148)
        (reg/v/f:SI 136 [ data ])) -1 (nil))

(insn 28 27 29 6 include/linux/regset.h:232 (set (reg:SI 149)
        (reg/v:SI 134 [ copy ])) -1 (nil))

(insn 29 28 30 6 include/linux/regset.h:232 (set (reg:SI 0 r0)
        (reg:SI 147)) -1 (nil))

(insn 30 29 31 6 include/linux/regset.h:232 (set (reg:SI 1 r1)
        (reg:SI 148)) -1 (nil))

(insn 31 30 32 6 include/linux/regset.h:232 (set (reg:SI 2 r2)
        (reg:SI 149)) -1 (nil))

(call_insn 32 31 33 6 include/linux/regset.h:232 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41] <function_decl 0x115c3d80 memcpy>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 33 32 34 6 include/linux/regset.h:232 (set (reg:SI 150)
        (reg:SI 0 r0)) -1 (nil))

(insn 34 33 35 6 include/linux/regset.h:241 (set (reg:SI 135 [ D.27779 ])
        (const_int 0 [0x0])) -1 (nil))

(jump_insn 35 34 36 6 include/linux/regset.h:241 (set (pc)
        (label_ref 53)) -1 (nil))
;; End of basic block 6 -> ( 10)

;; Succ edge  10 [100.0%] 

(barrier 36 35 37)

;; Start of basic block ( 5) -> 7
;; Pred edge  5 [0.7%] 
(code_label 37 36 38 7 87 "" [1 uses])

(note 38 37 39 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 39 38 40 7 include/linux/regset.h:234 (set (reg:SI 0 r0)
        (reg/v/f:SI 144 [ ubuf ])) -1 (nil))

(insn 40 39 41 7 include/linux/regset.h:234 (set (reg:SI 1 r1)
        (reg/v/f:SI 136 [ data ])) -1 (nil))

(insn 41 40 42 7 include/linux/regset.h:234 (set (reg:SI 2 r2)
        (reg/v:SI 134 [ copy ])) -1 (nil))

(call_insn 42 41 43 7 include/linux/regset.h:234 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__copy_to_user") [flags 0x41] <function_decl 0x113b1000 __copy_to_user>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 43 42 44 7 include/linux/regset.h:234 (set (reg:SI 133 [ D.27783 ])
        (reg:SI 0 r0)) -1 (nil))

(insn 44 43 45 7 include/linux/regset.h:234 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 133 [ D.27783 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 45 44 46 7 include/linux/regset.h:234 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 50)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
        (nil)))
;; End of basic block 7 -> ( 8 9)

;; Succ edge  8 [39.0%]  (fallthru)
;; Succ edge  9 [61.0%] 

;; Start of basic block ( 7) -> 8
;; Pred edge  7 [39.0%]  (fallthru)
(note 46 45 47 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 47 46 48 8 include/linux/regset.h:235 (set (reg:SI 135 [ D.27779 ])
        (const_int -14 [0xfffffffffffffff2])) -1 (nil))

(jump_insn 48 47 49 8 include/linux/regset.h:235 (set (pc)
        (label_ref 53)) -1 (nil))
;; End of basic block 8 -> ( 10)

;; Succ edge  10 [100.0%] 

(barrier 49 48 50)

;; Start of basic block ( 3 4 7) -> 9
;; Pred edge  3 [39.0%] 
;; Pred edge  4 [39.0%] 
;; Pred edge  7 [61.0%] 
(code_label 50 49 51 9 86 "" [3 uses])

(note 51 50 52 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 52 51 53 9 include/linux/regset.h:225 (set (reg:SI 135 [ D.27779 ])
        (const_int 0 [0x0])) -1 (nil))
;; End of basic block 9 -> ( 10)

;; Succ edge  10 [100.0%]  (fallthru)

;; Start of basic block ( 9 8 6) -> 10
;; Pred edge  9 [100.0%]  (fallthru)
;; Pred edge  8 [100.0%] 
;; Pred edge  6 [100.0%] 
(code_label 53 52 54 10 88 "" [2 uses])

(note 54 53 55 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 55 54 56 10 arch/arm/kernel/ptrace.c:587 (set (reg:SI 138 [ <result> ])
        (reg:SI 135 [ D.27779 ])) -1 (nil))

(jump_insn 56 55 57 10 arch/arm/kernel/ptrace.c:587 (set (pc)
        (label_ref 58)) -1 (nil))
;; End of basic block 10 -> ( 12)

;; Succ edge  12 [100.0%] 

(barrier 57 56 66)

;; Start of basic block () -> 11
(note 66 57 60 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 60 66 61 11 arch/arm/kernel/ptrace.c:587 (clobber (reg/i:SI 0 r0)) -1 (nil))

(insn 61 60 62 11 arch/arm/kernel/ptrace.c:587 (clobber (reg:SI 138 [ <result> ])) -1 (nil))

(jump_insn 62 61 63 11 arch/arm/kernel/ptrace.c:587 (set (pc)
        (label_ref 64)) -1 (nil))
;; End of basic block 11 -> ( 13)

;; Succ edge  13 [100.0%] 

(barrier 63 62 58)

;; Start of basic block ( 10) -> 12
;; Pred edge  10 [100.0%] 
(code_label 58 63 67 12 85 "" [1 uses])

(note 67 58 59 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 59 67 64 12 arch/arm/kernel/ptrace.c:587 (set (reg/i:SI 0 r0)
        (reg:SI 138 [ <result> ])) -1 (nil))
;; End of basic block 12 -> ( 13)

;; Succ edge  13 [100.0%]  (fallthru)

;; Start of basic block ( 11 12) -> 13
;; Pred edge  11 [100.0%] 
;; Pred edge  12 [100.0%]  (fallthru)
(code_label 64 59 68 13 89 "" [1 uses])

(note 68 64 65 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 65 68 0 13 arch/arm/kernel/ptrace.c:587 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 13 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function ptrace_hbp_create (ptrace_hbp_create)[0:1554]

Partition 0: size 72 align 8
	attr, offset 0

;; Generating RTL for gimple basic block 2

;; __memzero (&attr, 72);

(insn 7 6 8 include/linux/hw_breakpoint.h:40 discrim 1 (set (reg:SI 137)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -72 [0xffffffffffffffb8]))) -1 (nil))

(insn 8 7 9 include/linux/hw_breakpoint.h:40 discrim 1 (set (reg:SI 0 r0)
        (reg:SI 137)) -1 (nil))

(insn 9 8 10 include/linux/hw_breakpoint.h:40 discrim 1 (set (reg:SI 1 r1)
        (const_int 72 [0x48])) -1 (nil))

(call_insn 10 9 0 include/linux/hw_breakpoint.h:40 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("__memzero") [flags 0x41] <function_decl 0x10bba080 __memzero>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

;; attr.type = 5;

(insn 11 10 12 include/linux/hw_breakpoint.h:42 (set (reg:SI 138)
        (const_int 5 [0x5])) -1 (nil))

(insn 12 11 0 include/linux/hw_breakpoint.h:42 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [0 attr.type+0 S4 A64])
        (reg:SI 138)) -1 (nil))

;; attr.size = 72;

(insn 13 12 14 include/linux/hw_breakpoint.h:43 (set (reg:SI 139)
        (const_int 72 [0x48])) -1 (nil))

(insn 14 13 0 include/linux/hw_breakpoint.h:43 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                (const_int -68 [0xffffffffffffffbc])) [0 attr.size+0 S4 A32])
        (reg:SI 139)) -1 (nil))

;; attr.pinned = 1;

(insn 15 14 16 include/linux/hw_breakpoint.h:48 (set (reg:SI 141)
        (zero_extend:SI (mem/s/j/c:QI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])) [0+40 S1 A64]))) -1 (nil))

(insn 16 15 17 include/linux/hw_breakpoint.h:48 (set (reg:QI 140)
        (subreg:QI (reg:SI 141) 0)) -1 (nil))

(insn 17 16 18 include/linux/hw_breakpoint.h:48 (set (reg:SI 143)
        (subreg:SI (reg:QI 140) 0)) -1 (nil))

(insn 18 17 19 include/linux/hw_breakpoint.h:48 (set (reg:SI 142)
        (ior:SI (reg:SI 143)
            (const_int 4 [0x4]))) -1 (nil))

(insn 19 18 20 include/linux/hw_breakpoint.h:48 (set (reg:QI 140)
        (subreg:QI (reg:SI 142) 0)) -1 (nil))

(insn 20 19 0 include/linux/hw_breakpoint.h:48 (set (mem/s/j/c:QI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0+40 S1 A64])
        (reg:QI 140)) -1 (nil))

;; attr.D.23422.sample_period = 1;

(insn 21 20 22 include/linux/hw_breakpoint.h:49 (set (reg:DI 144)
        (const_int 1 [0x1])) -1 (nil))

(insn 22 21 0 include/linux/hw_breakpoint.h:49 (set (mem/s/j/c:DI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 attr.D.23422.sample_period+0 S8 A64])
        (reg:DI 144)) -1 (nil))

;; attr.exclude_kernel = 1;

(insn 23 22 24 include/linux/hw_breakpoint.h:55 (set (reg:SI 146)
        (zero_extend:SI (mem/s/j/c:QI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])) [0+40 S1 A64]))) -1 (nil))

(insn 24 23 25 include/linux/hw_breakpoint.h:55 (set (reg:QI 145)
        (subreg:QI (reg:SI 146) 0)) -1 (nil))

(insn 25 24 26 include/linux/hw_breakpoint.h:55 (set (reg:SI 148)
        (subreg:SI (reg:QI 145) 0)) -1 (nil))

(insn 26 25 27 include/linux/hw_breakpoint.h:55 (set (reg:SI 147)
        (ior:SI (reg:SI 148)
            (const_int 32 [0x20]))) -1 (nil))

(insn 27 26 28 include/linux/hw_breakpoint.h:55 (set (reg:QI 145)
        (subreg:QI (reg:SI 147) 0)) -1 (nil))

(insn 28 27 0 include/linux/hw_breakpoint.h:55 (set (mem/s/j/c:QI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0+40 S1 A64])
        (reg:QI 145)) -1 (nil))

;; attr.D.23452.bp_addr = 0;

(insn 29 28 30 arch/arm/kernel/ptrace.c:455 (set (reg:DI 149)
        (const_int 0 [0x0])) -1 (nil))

(insn 30 29 0 arch/arm/kernel/ptrace.c:455 (set (mem/s/j/c:DI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 attr.D.23452.bp_addr+0 S8 A64])
        (reg:DI 149)) -1 (nil))

;; attr.D.23456.bp_len = 4;

(insn 31 30 32 arch/arm/kernel/ptrace.c:456 (set (reg:DI 150)
        (const_int 4 [0x4])) -1 (nil))

(insn 32 31 0 arch/arm/kernel/ptrace.c:456 (set (mem/s/j/c:DI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 attr.D.23456.bp_len+0 S8 A64])
        (reg:DI 150)) -1 (nil))

;; attr.bp_type = (__u32) (__u32) type;

(insn 33 32 0 arch/arm/kernel/ptrace.c:457 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 attr.bp_type+0 S4 A32])
        (reg/v:SI 136 [ type ])) -1 (nil))

;; attr.disabled = 1;

(insn 34 33 35 arch/arm/kernel/ptrace.c:458 (set (reg:SI 152)
        (zero_extend:SI (mem/s/j/c:QI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])) [0+40 S1 A64]))) -1 (nil))

(insn 35 34 36 arch/arm/kernel/ptrace.c:458 (set (reg:QI 151)
        (subreg:QI (reg:SI 152) 0)) -1 (nil))

(insn 36 35 37 arch/arm/kernel/ptrace.c:458 (set (reg:SI 154)
        (subreg:SI (reg:QI 151) 0)) -1 (nil))

(insn 37 36 38 arch/arm/kernel/ptrace.c:458 (set (reg:SI 153)
        (ior:SI (reg:SI 154)
            (const_int 1 [0x1]))) -1 (nil))

(insn 38 37 39 arch/arm/kernel/ptrace.c:458 (set (reg:QI 151)
        (subreg:QI (reg:SI 153) 0)) -1 (nil))

(insn 39 38 0 arch/arm/kernel/ptrace.c:458 (set (mem/s/j/c:QI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0+40 S1 A64])
        (reg:QI 151)) -1 (nil))

;; D.27011 = register_user_hw_breakpoint (&attr, ptrace_hbptriggered, 0B, tsk);

(insn 40 39 41 arch/arm/kernel/ptrace.c:460 (set (reg:SI 155)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -72 [0xffffffffffffffb8]))) -1 (nil))

(insn 41 40 42 arch/arm/kernel/ptrace.c:460 (set (reg:SI 156)
        (symbol_ref:SI ("ptrace_hbptriggered") [flags 0x3] <function_decl 0x1155b780 ptrace_hbptriggered>)) -1 (nil))

(insn 42 41 43 arch/arm/kernel/ptrace.c:460 (set (reg:SI 0 r0)
        (reg:SI 155)) -1 (nil))

(insn 43 42 44 arch/arm/kernel/ptrace.c:460 (set (reg:SI 1 r1)
        (reg:SI 156)) -1 (nil))

(insn 44 43 45 arch/arm/kernel/ptrace.c:460 (set (reg:SI 2 r2)
        (const_int 0 [0x0])) -1 (nil))

(insn 45 44 46 arch/arm/kernel/ptrace.c:460 (set (reg:SI 3 r3)
        (reg/v/f:SI 135 [ tsk ])) -1 (nil))

(call_insn 46 45 47 arch/arm/kernel/ptrace.c:460 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("register_user_hw_breakpoint") [flags 0x41] <function_decl 0x11524700 register_user_hw_breakpoint>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 47 46 0 arch/arm/kernel/ptrace.c:460 (set (reg/f:SI 133 [ D.27011 ])
        (reg:SI 0 r0)) -1 (nil))

;; return D.27011;

(insn 48 47 49 arch/arm/kernel/ptrace.c:462 (set (reg:SI 134 [ <result> ])
        (reg/f:SI 133 [ D.27011 ])) -1 (nil))

(jump_insn 49 48 50 arch/arm/kernel/ptrace.c:462 (set (pc)
        (label_ref 0)) -1 (nil))

(barrier 50 49 0)


;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 5 3 2 arch/arm/kernel/ptrace.c:449 (set (reg/v/f:SI 135 [ tsk ])
        (reg:SI 0 r0 [ tsk ])) -1 (nil))

(insn 3 2 4 2 arch/arm/kernel/ptrace.c:449 (set (reg/v:SI 136 [ type ])
        (reg:SI 1 r1 [ type ])) -1 (nil))

(note 4 3 6 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 3)

;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [100.0%]  (fallthru)
(note 6 4 7 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 7 6 8 3 include/linux/hw_breakpoint.h:40 discrim 1 (set (reg:SI 137)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -72 [0xffffffffffffffb8]))) -1 (nil))

(insn 8 7 9 3 include/linux/hw_breakpoint.h:40 discrim 1 (set (reg:SI 0 r0)
        (reg:SI 137)) -1 (nil))

(insn 9 8 10 3 include/linux/hw_breakpoint.h:40 discrim 1 (set (reg:SI 1 r1)
        (const_int 72 [0x48])) -1 (nil))

(call_insn 10 9 11 3 include/linux/hw_breakpoint.h:40 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("__memzero") [flags 0x41] <function_decl 0x10bba080 __memzero>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 11 10 12 3 include/linux/hw_breakpoint.h:42 (set (reg:SI 138)
        (const_int 5 [0x5])) -1 (nil))

(insn 12 11 13 3 include/linux/hw_breakpoint.h:42 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [0 attr.type+0 S4 A64])
        (reg:SI 138)) -1 (nil))

(insn 13 12 14 3 include/linux/hw_breakpoint.h:43 (set (reg:SI 139)
        (const_int 72 [0x48])) -1 (nil))

(insn 14 13 15 3 include/linux/hw_breakpoint.h:43 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                (const_int -68 [0xffffffffffffffbc])) [0 attr.size+0 S4 A32])
        (reg:SI 139)) -1 (nil))

(insn 15 14 16 3 include/linux/hw_breakpoint.h:48 (set (reg:SI 141)
        (zero_extend:SI (mem/s/j/c:QI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])) [0+40 S1 A64]))) -1 (nil))

(insn 16 15 17 3 include/linux/hw_breakpoint.h:48 (set (reg:QI 140)
        (subreg:QI (reg:SI 141) 0)) -1 (nil))

(insn 17 16 18 3 include/linux/hw_breakpoint.h:48 (set (reg:SI 143)
        (subreg:SI (reg:QI 140) 0)) -1 (nil))

(insn 18 17 19 3 include/linux/hw_breakpoint.h:48 (set (reg:SI 142)
        (ior:SI (reg:SI 143)
            (const_int 4 [0x4]))) -1 (nil))

(insn 19 18 20 3 include/linux/hw_breakpoint.h:48 (set (reg:QI 140)
        (subreg:QI (reg:SI 142) 0)) -1 (nil))

(insn 20 19 21 3 include/linux/hw_breakpoint.h:48 (set (mem/s/j/c:QI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0+40 S1 A64])
        (reg:QI 140)) -1 (nil))

(insn 21 20 22 3 include/linux/hw_breakpoint.h:49 (set (reg:DI 144)
        (const_int 1 [0x1])) -1 (nil))

(insn 22 21 23 3 include/linux/hw_breakpoint.h:49 (set (mem/s/j/c:DI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 attr.D.23422.sample_period+0 S8 A64])
        (reg:DI 144)) -1 (nil))

(insn 23 22 24 3 include/linux/hw_breakpoint.h:55 (set (reg:SI 146)
        (zero_extend:SI (mem/s/j/c:QI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])) [0+40 S1 A64]))) -1 (nil))

(insn 24 23 25 3 include/linux/hw_breakpoint.h:55 (set (reg:QI 145)
        (subreg:QI (reg:SI 146) 0)) -1 (nil))

(insn 25 24 26 3 include/linux/hw_breakpoint.h:55 (set (reg:SI 148)
        (subreg:SI (reg:QI 145) 0)) -1 (nil))

(insn 26 25 27 3 include/linux/hw_breakpoint.h:55 (set (reg:SI 147)
        (ior:SI (reg:SI 148)
            (const_int 32 [0x20]))) -1 (nil))

(insn 27 26 28 3 include/linux/hw_breakpoint.h:55 (set (reg:QI 145)
        (subreg:QI (reg:SI 147) 0)) -1 (nil))

(insn 28 27 29 3 include/linux/hw_breakpoint.h:55 (set (mem/s/j/c:QI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0+40 S1 A64])
        (reg:QI 145)) -1 (nil))

(insn 29 28 30 3 arch/arm/kernel/ptrace.c:455 (set (reg:DI 149)
        (const_int 0 [0x0])) -1 (nil))

(insn 30 29 31 3 arch/arm/kernel/ptrace.c:455 (set (mem/s/j/c:DI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 attr.D.23452.bp_addr+0 S8 A64])
        (reg:DI 149)) -1 (nil))

(insn 31 30 32 3 arch/arm/kernel/ptrace.c:456 (set (reg:DI 150)
        (const_int 4 [0x4])) -1 (nil))

(insn 32 31 33 3 arch/arm/kernel/ptrace.c:456 (set (mem/s/j/c:DI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 attr.D.23456.bp_len+0 S8 A64])
        (reg:DI 150)) -1 (nil))

(insn 33 32 34 3 arch/arm/kernel/ptrace.c:457 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 attr.bp_type+0 S4 A32])
        (reg/v:SI 136 [ type ])) -1 (nil))

(insn 34 33 35 3 arch/arm/kernel/ptrace.c:458 (set (reg:SI 152)
        (zero_extend:SI (mem/s/j/c:QI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])) [0+40 S1 A64]))) -1 (nil))

(insn 35 34 36 3 arch/arm/kernel/ptrace.c:458 (set (reg:QI 151)
        (subreg:QI (reg:SI 152) 0)) -1 (nil))

(insn 36 35 37 3 arch/arm/kernel/ptrace.c:458 (set (reg:SI 154)
        (subreg:SI (reg:QI 151) 0)) -1 (nil))

(insn 37 36 38 3 arch/arm/kernel/ptrace.c:458 (set (reg:SI 153)
        (ior:SI (reg:SI 154)
            (const_int 1 [0x1]))) -1 (nil))

(insn 38 37 39 3 arch/arm/kernel/ptrace.c:458 (set (reg:QI 151)
        (subreg:QI (reg:SI 153) 0)) -1 (nil))

(insn 39 38 40 3 arch/arm/kernel/ptrace.c:458 (set (mem/s/j/c:QI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0+40 S1 A64])
        (reg:QI 151)) -1 (nil))

(insn 40 39 41 3 arch/arm/kernel/ptrace.c:460 (set (reg:SI 155)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -72 [0xffffffffffffffb8]))) -1 (nil))

(insn 41 40 42 3 arch/arm/kernel/ptrace.c:460 (set (reg:SI 156)
        (symbol_ref:SI ("ptrace_hbptriggered") [flags 0x3] <function_decl 0x1155b780 ptrace_hbptriggered>)) -1 (nil))

(insn 42 41 43 3 arch/arm/kernel/ptrace.c:460 (set (reg:SI 0 r0)
        (reg:SI 155)) -1 (nil))

(insn 43 42 44 3 arch/arm/kernel/ptrace.c:460 (set (reg:SI 1 r1)
        (reg:SI 156)) -1 (nil))

(insn 44 43 45 3 arch/arm/kernel/ptrace.c:460 (set (reg:SI 2 r2)
        (const_int 0 [0x0])) -1 (nil))

(insn 45 44 46 3 arch/arm/kernel/ptrace.c:460 (set (reg:SI 3 r3)
        (reg/v/f:SI 135 [ tsk ])) -1 (nil))

(call_insn 46 45 47 3 arch/arm/kernel/ptrace.c:460 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("register_user_hw_breakpoint") [flags 0x41] <function_decl 0x11524700 register_user_hw_breakpoint>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 47 46 48 3 arch/arm/kernel/ptrace.c:460 (set (reg/f:SI 133 [ D.27011 ])
        (reg:SI 0 r0)) -1 (nil))

(insn 48 47 49 3 arch/arm/kernel/ptrace.c:462 (set (reg:SI 134 [ <result> ])
        (reg/f:SI 133 [ D.27011 ])) -1 (nil))

(jump_insn 49 48 50 3 arch/arm/kernel/ptrace.c:462 (set (pc)
        (label_ref 51)) -1 (nil))
;; End of basic block 3 -> ( 5)

;; Succ edge  5 [100.0%] 

(barrier 50 49 59)

;; Start of basic block () -> 4
(note 59 50 53 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 53 59 54 4 arch/arm/kernel/ptrace.c:462 (clobber (reg/i:SI 0 r0)) -1 (nil))

(insn 54 53 55 4 arch/arm/kernel/ptrace.c:462 (clobber (reg:SI 134 [ <result> ])) -1 (nil))

(jump_insn 55 54 56 4 arch/arm/kernel/ptrace.c:462 (set (pc)
        (label_ref 57)) -1 (nil))
;; End of basic block 4 -> ( 6)

;; Succ edge  6 [100.0%] 

(barrier 56 55 51)

;; Start of basic block ( 3) -> 5
;; Pred edge  3 [100.0%] 
(code_label 51 56 60 5 90 "" [1 uses])

(note 60 51 52 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 52 60 57 5 arch/arm/kernel/ptrace.c:462 (set (reg/i:SI 0 r0)
        (reg:SI 134 [ <result> ])) -1 (nil))
;; End of basic block 5 -> ( 6)

;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 4 5) -> 6
;; Pred edge  4 [100.0%] 
;; Pred edge  5 [100.0%]  (fallthru)
(code_label 57 52 61 6 91 "" [1 uses])

(note 61 57 58 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 58 61 0 6 arch/arm/kernel/ptrace.c:462 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 6 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function arch_ptrace (arch_ptrace)[0:1564]

Partition 0: size 4 align 4
	gen_len, offset 0
Partition 1: size 4 align 4
	gen_type, offset 0
Partition 2: size 72 align 8
	attr, offset 0

;; Generating RTL for gimple basic block 2

;; datap = (long unsigned int *) data;

(insn 9 8 0 arch/arm/kernel/ptrace.c:792 (set (reg/v/f:SI 180 [ datap ])
        (reg/v:SI 191 [ data ])) -1 (nil))

;; switch (request) <default: <L22>, case 3: <L28>, case 6: <L1>, case 12: <L29>, case 13: <L30>, case 14: <L31>, case 15: <L32>, case 22: <L6>, case 23: <L13>, case 27: <L33>, case 28: <L34>, case 29: <L16>, case 30: <L19>>

(insn 10 9 11 arch/arm/kernel/ptrace.c:794 (set (reg:SI 192)
        (plus:SI (reg/v:SI 189 [ request ])
            (const_int -3 [0xfffffffffffffffd]))) -1 (nil))

(jump_insn 11 10 12 arch/arm/kernel/ptrace.c:794 (parallel [
            (set (pc)
                (if_then_else (leu (reg:SI 192)
                        (const_int 27 [0x1b]))
                    (mem:SI (plus:SI (mult:SI (reg:SI 192)
                                (const_int 4 [0x4]))
                            (label_ref 12)) [0 S4 A32])
                    (label_ref 0)))
            (clobber (reg:CC 24 cc))
            (use (label_ref 12))
        ]) -1 (nil))

(code_label 12 11 13 108 "" [0 uses])

(jump_insn 13 12 14 arch/arm/kernel/ptrace.c:794 (addr_vec:SI [
            (label_ref:SI 0)
            (label_ref:SI 0)
            (label_ref:SI 0)
            (label_ref:SI 0)
            (label_ref:SI 0)
            (label_ref:SI 0)
            (label_ref:SI 0)
            (label_ref:SI 0)
            (label_ref:SI 0)
            (label_ref:SI 0)
            (label_ref:SI 0)
            (label_ref:SI 0)
            (label_ref:SI 0)
            (label_ref:SI 0)
            (label_ref:SI 0)
            (label_ref:SI 0)
            (label_ref:SI 0)
            (label_ref:SI 0)
            (label_ref:SI 0)
            (label_ref:SI 0)
            (label_ref:SI 0)
            (label_ref:SI 0)
            (label_ref:SI 0)
            (label_ref:SI 0)
            (label_ref:SI 0)
            (label_ref:SI 0)
            (label_ref:SI 0)
            (label_ref:SI 0)
        ]) -1 (nil))

(barrier 14 13 0)

;; Generating RTL for gimple basic block 3

;; <L28>:

(code_label 15 14 16 96 "" [0 uses])

(note 16 15 0 NOTE_INSN_BASIC_BLOCK)

;; if ((addr & 3) != 0 | addr > 295 != 0)

(insn 17 16 18 arch/arm/kernel/ptrace.c:258 (set (reg:SI 193)
        (and:SI (reg/v:SI 190 [ addr ])
            (const_int 3 [0x3]))) -1 (nil))

(insn 18 17 19 arch/arm/kernel/ptrace.c:258 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 193)
            (const_int 0 [0x0]))) -1 (nil))

(insn 19 18 20 arch/arm/kernel/ptrace.c:258 (set (reg:SI 195)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) -1 (nil))

(insn 20 19 21 arch/arm/kernel/ptrace.c:258 (set (reg:QI 194)
        (subreg:QI (reg:SI 195) 0)) -1 (nil))

(insn 21 20 22 arch/arm/kernel/ptrace.c:258 (set (reg:SI 197)
        (const_int 295 [0x127])) -1 (nil))

(insn 22 21 23 arch/arm/kernel/ptrace.c:258 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 190 [ addr ])
            (reg:SI 197))) -1 (nil))

(insn 23 22 24 arch/arm/kernel/ptrace.c:258 (set (reg:SI 198)
        (gtu:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) -1 (nil))

(insn 24 23 25 arch/arm/kernel/ptrace.c:258 (set (reg:QI 196)
        (subreg:QI (reg:SI 198) 0)) -1 (nil))

(insn 25 24 26 arch/arm/kernel/ptrace.c:258 (set (reg:SI 199)
        (ior:SI (subreg:SI (reg:QI 194) 0)
            (subreg:SI (reg:QI 196) 0))) -1 (nil))

(insn 26 25 27 arch/arm/kernel/ptrace.c:258 (set (reg:QI 200)
        (subreg:QI (reg:SI 199) 0)) -1 (nil))

(insn 27 26 28 arch/arm/kernel/ptrace.c:258 (set (reg:SI 201)
        (zero_extend:SI (reg:QI 200))) -1 (nil))

(insn 28 27 29 arch/arm/kernel/ptrace.c:258 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 201)
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 29 28 0 arch/arm/kernel/ptrace.c:258 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

;; Generating RTL for gimple basic block 4

;; if (addr <= 71)

(insn 31 30 32 arch/arm/kernel/ptrace.c:268 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 190 [ addr ])
            (const_int 71 [0x47]))) -1 (nil))

(jump_insn 32 31 0 arch/arm/kernel/ptrace.c:268 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

;; Generating RTL for gimple basic block 5

;; tmp = 0;

(insn 34 33 0 arch/arm/kernel/ptrace.c:261 (set (reg/v:SI 179 [ tmp ])
        (const_int 0 [0x0])) -1 (nil))

;; Generating RTL for gimple basic block 6

;; 

(code_label 37 36 38 110 "" [0 uses])

(note 38 37 0 NOTE_INSN_BASIC_BLOCK)

;; tmp = ((struct pt_regs *) child->stack + 8112)->uregs[(int) (addr >> 2)];

(insn 39 38 40 arch/arm/kernel/ptrace.c:160 (set (reg/f:SI 202)
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 188 [ child ])
                (const_int 4 [0x4])) [0 <variable>.stack+0 S4 A32])) -1 (nil))

(insn 40 39 41 arch/arm/kernel/ptrace.c:160 (set (reg:SI 203)
        (const_int 8112 [0x1fb0])) -1 (nil))

(insn 41 40 42 arch/arm/kernel/ptrace.c:160 (set (reg:SI 204)
        (lshiftrt:SI (reg/v:SI 190 [ addr ])
            (const_int 2 [0x2]))) -1 (nil))

(insn 42 41 43 arch/arm/kernel/ptrace.c:160 (set (reg:SI 205)
        (ashift:SI (reg:SI 204)
            (const_int 2 [0x2]))) -1 (nil))

(insn 43 42 44 arch/arm/kernel/ptrace.c:160 (set (reg:SI 206)
        (plus:SI (reg/f:SI 202)
            (reg:SI 205))) -1 (nil))

(insn 44 43 45 arch/arm/kernel/ptrace.c:160 (set (reg/f:SI 207)
        (plus:SI (reg:SI 206)
            (reg:SI 203))) -1 (nil))

(insn 45 44 0 arch/arm/kernel/ptrace.c:160 (set (reg/v:SI 179 [ tmp ])
        (mem/s/j:SI (reg/f:SI 207) [0 <variable>.uregs S4 A32])) -1 (nil))

;; Generating RTL for gimple basic block 7

;; 

(code_label 46 45 47 111 "" [0 uses])

(note 47 46 0 NOTE_INSN_BASIC_BLOCK)

;; __r2 = tmp;

(insn 48 47 0 arch/arm/kernel/ptrace.c:271 (set (reg/v:SI 2 r2 [ __r2 ])
        (reg/v:SI 179 [ tmp ])) -1 (nil))

;; __p = datap;

(insn 49 48 0 arch/arm/kernel/ptrace.c:271 (set (reg/v:SI 0 r0 [ __p ])
        (reg/v/f:SI 180 [ datap ])) -1 (nil))

;; __asm__ __volatile__(".ifnc %0,r0 ; .err ; .endif
	.ifnc %2,r2 ; .err ; .endif
	bl	__put_user_4" : "=&r" __e : "0" __p, "r" __r2 : "r" __r2 : "cc", "lr", "ip", "lr", "ip", "ip");

(insn 50 49 0 arch/arm/kernel/ptrace.c:271 discrim 4 (parallel [
            (set (reg/v:SI 0 r0 [ __e ])
                (asm_operands/v:SI (".ifnc %0,r0 ; .err ; .endif
	.ifnc %2,r2 ; .err ; .endif
	bl	__put_user_4") ("=&r") 0 [
                        (reg/v:SI 0 r0 [ __p ])
                        (reg/v:SI 2 r2 [ __r2 ])
                    ]
                     [
                        (asm_input:SI ("0") 0)
                        (asm_input:SI ("r") 0)
                    ] 9592343))
            (clobber (reg:QI 24 cc))
            (clobber (reg:QI 14 lr))
            (clobber (reg:QI 12 ip))
        ]) -1 (nil))

;; ret = __e;

(insn 51 50 0 arch/arm/kernel/ptrace.c:271 discrim 6 (set (reg/v:SI 181 [ ret ])
        (reg/v:SI 0 r0 [ __e ])) -1 (nil))

;; Generating RTL for gimple basic block 8

;; <L1>:

(code_label 54 53 55 97 "" [0 uses])

(note 55 54 0 NOTE_INSN_BASIC_BLOCK)

;; ret = ptrace_write_user (child, addr, data);

(insn 56 55 57 arch/arm/kernel/ptrace.c:800 (set (reg:SI 0 r0)
        (reg/v/f:SI 188 [ child ])) -1 (nil))

(insn 57 56 58 arch/arm/kernel/ptrace.c:800 (set (reg:SI 1 r1)
        (reg/v:SI 190 [ addr ])) -1 (nil))

(insn 58 57 59 arch/arm/kernel/ptrace.c:800 (set (reg:SI 2 r2)
        (reg/v:SI 191 [ data ])) -1 (nil))

(call_insn 59 58 60 arch/arm/kernel/ptrace.c:800 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("ptrace_write_user") [flags 0x3] <function_decl 0x1155b480 ptrace_write_user>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 60 59 0 arch/arm/kernel/ptrace.c:800 (set (reg/v:SI 181 [ ret ])
        (reg:SI 0 r0)) -1 (nil))

;; Generating RTL for gimple basic block 9

;; <L29>:

(code_label 63 62 64 98 "" [0 uses])

(note 64 63 0 NOTE_INSN_BASIC_BLOCK)

;; sp.87 = sp;

(insn 65 64 0 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 178 [ sp.87 ])
        (reg/v:SI 13 sp [ sp ])) -1 (nil))

;; __asm__("adds %1, %2, %3; sbcccs %1, %1, %0; movcc %0, #0" : "=&r" flag, "=&r" roksum, "=&r" roksum : "r" datap, "Ir" 72, "0" ((struct thread_info *) (sp.87 & 4294959104))->addr_limit : "Ir" 72, "0" ((struct thread_info *) (sp.87 & 4294959104))->addr_limit : "0" ((struct thread_info *) (sp.87 & 4294959104))->addr_limit : "cc");

(insn 66 65 67 include/linux/regset.h:338 (set (reg:SI 209)
        (and:SI (reg:SI 178 [ sp.87 ])
            (const_int -8129 [0xffffffffffffe03f]))) -1 (nil))

(insn 67 66 68 include/linux/regset.h:338 (set (reg:SI 208)
        (and:SI (reg:SI 209)
            (const_int -64 [0xffffffffffffffc0]))) -1 (expr_list:REG_EQUAL (and:SI (reg:SI 178 [ sp.87 ])
            (const_int -8192 [0xffffffffffffe000]))
        (nil)))

(insn 68 67 69 include/linux/regset.h:338 (set (reg:SI 210)
        (mem/s/j:SI (plus:SI (reg:SI 208)
                (const_int 8 [0x8])) [0 <variable>.addr_limit+0 S4 A64])) -1 (nil))

(insn 69 68 0 include/linux/regset.h:338 (parallel [
            (set (reg/v:SI 176 [ flag ])
                (asm_operands:SI ("adds %1, %2, %3; sbcccs %1, %1, %0; movcc %0, #0") ("=&r") 0 [
                        (reg/v/f:SI 180 [ datap ])
                        (const_int 72 [0x48])
                        (reg:SI 210)
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("Ir") 0)
                        (asm_input:SI ("0") 0)
                    ] 9464662))
            (set (reg/v:SI 177 [ roksum ])
                (asm_operands:SI ("adds %1, %2, %3; sbcccs %1, %1, %0; movcc %0, #0") ("=&r") 1 [
                        (reg/v/f:SI 180 [ datap ])
                        (const_int 72 [0x48])
                        (reg:SI 210)
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("Ir") 0)
                        (asm_input:SI ("0") 0)
                    ] 9464662))
            (clobber (reg:QI 24 cc))
        ]) -1 (nil))

;; if (flag != 0)

(insn 70 69 71 include/linux/regset.h:338 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 176 [ flag ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 71 70 0 include/linux/regset.h:338 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))

;; Generating RTL for gimple basic block 10

;; ret = gpr_get (child, &arm_regsets[0], 0, 72, 0B, datap);

(insn 73 72 74 include/linux/regset.h:341 (set (reg/f:SI 211)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) -1 (nil))

(insn 74 73 75 include/linux/regset.h:341 (set (reg:SI 212)
        (plus:SI (reg/f:SI 211)
            (const_int 172 [0xac]))) -1 (nil))

(insn 75 74 76 include/linux/regset.h:341 (set (reg:SI 213)
        (const_int 0 [0x0])) -1 (nil))

(insn 76 75 77 include/linux/regset.h:341 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg:SI 213)) -1 (nil))

(insn 77 76 78 include/linux/regset.h:341 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/v/f:SI 180 [ datap ])) -1 (nil))

(insn 78 77 79 include/linux/regset.h:341 (set (reg:SI 0 r0)
        (reg/v/f:SI 188 [ child ])) -1 (nil))

(insn 79 78 80 include/linux/regset.h:341 (set (reg:SI 1 r1)
        (reg:SI 212)) -1 (nil))

(insn 80 79 81 include/linux/regset.h:341 (set (reg:SI 2 r2)
        (const_int 0 [0x0])) -1 (nil))

(insn 81 80 82 include/linux/regset.h:341 (set (reg:SI 3 r3)
        (const_int 72 [0x48])) -1 (nil))

(call_insn 82 81 83 include/linux/regset.h:341 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("gpr_get") [flags 0x3] <function_decl 0x1155be80 gpr_get>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 83 82 0 include/linux/regset.h:341 (set (reg/v:SI 181 [ ret ])
        (reg:SI 0 r0)) -1 (nil))

;; Generating RTL for gimple basic block 11

;; <L30>:

(code_label 86 85 87 99 "" [0 uses])

(note 87 86 0 NOTE_INSN_BASIC_BLOCK)

;; sp.87 = sp;

(insn 88 87 0 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 175 [ sp.87 ])
        (reg/v:SI 13 sp [ sp ])) -1 (nil))

;; __asm__("adds %1, %2, %3; sbcccs %1, %1, %0; movcc %0, #0" : "=&r" flag, "=&r" roksum, "=&r" roksum : "r" datap, "Ir" 72, "0" ((struct thread_info *) (sp.87 & 4294959104))->addr_limit : "Ir" 72, "0" ((struct thread_info *) (sp.87 & 4294959104))->addr_limit : "0" ((struct thread_info *) (sp.87 & 4294959104))->addr_limit : "cc");

(insn 89 88 90 include/linux/regset.h:361 (set (reg:SI 215)
        (and:SI (reg:SI 175 [ sp.87 ])
            (const_int -8129 [0xffffffffffffe03f]))) -1 (nil))

(insn 90 89 91 include/linux/regset.h:361 (set (reg:SI 214)
        (and:SI (reg:SI 215)
            (const_int -64 [0xffffffffffffffc0]))) -1 (expr_list:REG_EQUAL (and:SI (reg:SI 175 [ sp.87 ])
            (const_int -8192 [0xffffffffffffe000]))
        (nil)))

(insn 91 90 92 include/linux/regset.h:361 (set (reg:SI 216)
        (mem/s/j:SI (plus:SI (reg:SI 214)
                (const_int 8 [0x8])) [0 <variable>.addr_limit+0 S4 A64])) -1 (nil))

(insn 92 91 0 include/linux/regset.h:361 (parallel [
            (set (reg/v:SI 173 [ flag ])
                (asm_operands:SI ("adds %1, %2, %3; sbcccs %1, %1, %0; movcc %0, #0") ("=&r") 0 [
                        (reg/v/f:SI 180 [ datap ])
                        (const_int 72 [0x48])
                        (reg:SI 216)
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("Ir") 0)
                        (asm_input:SI ("0") 0)
                    ] 9467606))
            (set (reg/v:SI 174 [ roksum ])
                (asm_operands:SI ("adds %1, %2, %3; sbcccs %1, %1, %0; movcc %0, #0") ("=&r") 1 [
                        (reg/v/f:SI 180 [ datap ])
                        (const_int 72 [0x48])
                        (reg:SI 216)
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("Ir") 0)
                        (asm_input:SI ("0") 0)
                    ] 9467606))
            (clobber (reg:QI 24 cc))
        ]) -1 (nil))

;; if (flag != 0)

(insn 93 92 94 include/linux/regset.h:361 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 173 [ flag ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 94 93 0 include/linux/regset.h:361 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))

;; Generating RTL for gimple basic block 12

;; ret = gpr_set (child, &arm_regsets[0], 0, 72, 0B, datap);

(insn 96 95 97 include/linux/regset.h:364 (set (reg/f:SI 217)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) -1 (nil))

(insn 97 96 98 include/linux/regset.h:364 (set (reg:SI 218)
        (plus:SI (reg/f:SI 217)
            (const_int 172 [0xac]))) -1 (nil))

(insn 98 97 99 include/linux/regset.h:364 (set (reg:SI 219)
        (const_int 0 [0x0])) -1 (nil))

(insn 99 98 100 include/linux/regset.h:364 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg:SI 219)) -1 (nil))

(insn 100 99 101 include/linux/regset.h:364 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/v/f:SI 180 [ datap ])) -1 (nil))

(insn 101 100 102 include/linux/regset.h:364 (set (reg:SI 0 r0)
        (reg/v/f:SI 188 [ child ])) -1 (nil))

(insn 102 101 103 include/linux/regset.h:364 (set (reg:SI 1 r1)
        (reg:SI 218)) -1 (nil))

(insn 103 102 104 include/linux/regset.h:364 (set (reg:SI 2 r2)
        (const_int 0 [0x0])) -1 (nil))

(insn 104 103 105 include/linux/regset.h:364 (set (reg:SI 3 r3)
        (const_int 72 [0x48])) -1 (nil))

(call_insn 105 104 106 include/linux/regset.h:364 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("gpr_set") [flags 0x3] <function_decl 0x1155bf80 gpr_set>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 106 105 0 include/linux/regset.h:364 (set (reg/v:SI 181 [ ret ])
        (reg:SI 0 r0)) -1 (nil))

;; Generating RTL for gimple basic block 13

;; <L31>:

(code_label 109 108 110 100 "" [0 uses])

(note 110 109 0 NOTE_INSN_BASIC_BLOCK)

;; sp.87 = sp;

(insn 111 110 0 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 172 [ sp.87 ])
        (reg/v:SI 13 sp [ sp ])) -1 (nil))

;; __asm__("adds %1, %2, %3; sbcccs %1, %1, %0; movcc %0, #0" : "=&r" flag, "=&r" roksum, "=&r" roksum : "r" datap, "Ir" 140, "0" ((struct thread_info *) (sp.87 & 4294959104))->addr_limit : "Ir" 140, "0" ((struct thread_info *) (sp.87 & 4294959104))->addr_limit : "0" ((struct thread_info *) (sp.87 & 4294959104))->addr_limit : "cc");

(insn 112 111 113 include/linux/regset.h:338 (set (reg:SI 221)
        (and:SI (reg:SI 172 [ sp.87 ])
            (const_int -8129 [0xffffffffffffe03f]))) -1 (nil))

(insn 113 112 114 include/linux/regset.h:338 (set (reg:SI 220)
        (and:SI (reg:SI 221)
            (const_int -64 [0xffffffffffffffc0]))) -1 (expr_list:REG_EQUAL (and:SI (reg:SI 172 [ sp.87 ])
            (const_int -8192 [0xffffffffffffe000]))
        (nil)))

(insn 114 113 115 include/linux/regset.h:338 (set (reg:SI 222)
        (mem/s/j:SI (plus:SI (reg:SI 220)
                (const_int 8 [0x8])) [0 <variable>.addr_limit+0 S4 A64])) -1 (nil))

(insn 115 114 0 include/linux/regset.h:338 (parallel [
            (set (reg/v:SI 170 [ flag ])
                (asm_operands:SI ("adds %1, %2, %3; sbcccs %1, %1, %0; movcc %0, #0") ("=&r") 0 [
                        (reg/v/f:SI 180 [ datap ])
                        (const_int 140 [0x8c])
                        (reg:SI 222)
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("Ir") 0)
                        (asm_input:SI ("0") 0)
                    ] 9464662))
            (set (reg/v:SI 171 [ roksum ])
                (asm_operands:SI ("adds %1, %2, %3; sbcccs %1, %1, %0; movcc %0, #0") ("=&r") 1 [
                        (reg/v/f:SI 180 [ datap ])
                        (const_int 140 [0x8c])
                        (reg:SI 222)
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("Ir") 0)
                        (asm_input:SI ("0") 0)
                    ] 9464662))
            (clobber (reg:QI 24 cc))
        ]) -1 (nil))

;; if (flag != 0)

(insn 116 115 117 include/linux/regset.h:338 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 170 [ flag ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 117 116 0 include/linux/regset.h:338 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))

;; Generating RTL for gimple basic block 14

;; ret = fpa_get (child, &arm_regsets[1], 0, 140, 0B, datap);

(insn 119 118 120 include/linux/regset.h:341 (set (reg/f:SI 223)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) -1 (nil))

(insn 120 119 121 include/linux/regset.h:341 (set (reg:SI 224)
        (plus:SI (reg/f:SI 223)
            (const_int 172 [0xac]))) -1 (nil))

(insn 121 120 122 include/linux/regset.h:341 (set (reg:SI 225)
        (plus:SI (reg:SI 224)
            (const_int 36 [0x24]))) -1 (nil))

(insn 122 121 123 include/linux/regset.h:341 (set (reg:SI 226)
        (const_int 0 [0x0])) -1 (nil))

(insn 123 122 124 include/linux/regset.h:341 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg:SI 226)) -1 (nil))

(insn 124 123 125 include/linux/regset.h:341 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/v/f:SI 180 [ datap ])) -1 (nil))

(insn 125 124 126 include/linux/regset.h:341 (set (reg:SI 0 r0)
        (reg/v/f:SI 188 [ child ])) -1 (nil))

(insn 126 125 127 include/linux/regset.h:341 (set (reg:SI 1 r1)
        (reg:SI 225)) -1 (nil))

(insn 127 126 128 include/linux/regset.h:341 (set (reg:SI 2 r2)
        (const_int 0 [0x0])) -1 (nil))

(insn 128 127 129 include/linux/regset.h:341 (set (reg:SI 3 r3)
        (const_int 140 [0x8c])) -1 (nil))

(call_insn 129 128 130 include/linux/regset.h:341 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("fpa_get") [flags 0x3] <function_decl 0x11582080 fpa_get>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 130 129 0 include/linux/regset.h:341 (set (reg/v:SI 181 [ ret ])
        (reg:SI 0 r0)) -1 (nil))

;; Generating RTL for gimple basic block 15

;; <L32>:

(code_label 133 132 134 101 "" [0 uses])

(note 134 133 0 NOTE_INSN_BASIC_BLOCK)

;; sp.87 = sp;

(insn 135 134 0 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 169 [ sp.87 ])
        (reg/v:SI 13 sp [ sp ])) -1 (nil))

;; __asm__("adds %1, %2, %3; sbcccs %1, %1, %0; movcc %0, #0" : "=&r" flag, "=&r" roksum, "=&r" roksum : "r" datap, "Ir" 140, "0" ((struct thread_info *) (sp.87 & 4294959104))->addr_limit : "Ir" 140, "0" ((struct thread_info *) (sp.87 & 4294959104))->addr_limit : "0" ((struct thread_info *) (sp.87 & 4294959104))->addr_limit : "cc");

(insn 136 135 137 include/linux/regset.h:361 (set (reg:SI 228)
        (and:SI (reg:SI 169 [ sp.87 ])
            (const_int -8129 [0xffffffffffffe03f]))) -1 (nil))

(insn 137 136 138 include/linux/regset.h:361 (set (reg:SI 227)
        (and:SI (reg:SI 228)
            (const_int -64 [0xffffffffffffffc0]))) -1 (expr_list:REG_EQUAL (and:SI (reg:SI 169 [ sp.87 ])
            (const_int -8192 [0xffffffffffffe000]))
        (nil)))

(insn 138 137 139 include/linux/regset.h:361 (set (reg:SI 229)
        (mem/s/j:SI (plus:SI (reg:SI 227)
                (const_int 8 [0x8])) [0 <variable>.addr_limit+0 S4 A64])) -1 (nil))

(insn 139 138 0 include/linux/regset.h:361 (parallel [
            (set (reg/v:SI 167 [ flag ])
                (asm_operands:SI ("adds %1, %2, %3; sbcccs %1, %1, %0; movcc %0, #0") ("=&r") 0 [
                        (reg/v/f:SI 180 [ datap ])
                        (const_int 140 [0x8c])
                        (reg:SI 229)
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("Ir") 0)
                        (asm_input:SI ("0") 0)
                    ] 9467606))
            (set (reg/v:SI 168 [ roksum ])
                (asm_operands:SI ("adds %1, %2, %3; sbcccs %1, %1, %0; movcc %0, #0") ("=&r") 1 [
                        (reg/v/f:SI 180 [ datap ])
                        (const_int 140 [0x8c])
                        (reg:SI 229)
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("Ir") 0)
                        (asm_input:SI ("0") 0)
                    ] 9467606))
            (clobber (reg:QI 24 cc))
        ]) -1 (nil))

;; if (flag != 0)

(insn 140 139 141 include/linux/regset.h:361 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 167 [ flag ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 141 140 0 include/linux/regset.h:361 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))

;; Generating RTL for gimple basic block 16

;; ret = fpa_set (child, &arm_regsets[1], 0, 140, 0B, datap);

(insn 143 142 144 include/linux/regset.h:364 (set (reg/f:SI 230)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) -1 (nil))

(insn 144 143 145 include/linux/regset.h:364 (set (reg:SI 231)
        (plus:SI (reg/f:SI 230)
            (const_int 172 [0xac]))) -1 (nil))

(insn 145 144 146 include/linux/regset.h:364 (set (reg:SI 232)
        (plus:SI (reg:SI 231)
            (const_int 36 [0x24]))) -1 (nil))

(insn 146 145 147 include/linux/regset.h:364 (set (reg:SI 233)
        (const_int 0 [0x0])) -1 (nil))

(insn 147 146 148 include/linux/regset.h:364 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg:SI 233)) -1 (nil))

(insn 148 147 149 include/linux/regset.h:364 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/v/f:SI 180 [ datap ])) -1 (nil))

(insn 149 148 150 include/linux/regset.h:364 (set (reg:SI 0 r0)
        (reg/v/f:SI 188 [ child ])) -1 (nil))

(insn 150 149 151 include/linux/regset.h:364 (set (reg:SI 1 r1)
        (reg:SI 232)) -1 (nil))

(insn 151 150 152 include/linux/regset.h:364 (set (reg:SI 2 r2)
        (const_int 0 [0x0])) -1 (nil))

(insn 152 151 153 include/linux/regset.h:364 (set (reg:SI 3 r3)
        (const_int 140 [0x8c])) -1 (nil))

(call_insn 153 152 154 include/linux/regset.h:364 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("fpa_set") [flags 0x3] <function_decl 0x11582180 fpa_set>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 154 153 0 include/linux/regset.h:364 (set (reg/v:SI 181 [ ret ])
        (reg:SI 0 r0)) -1 (nil))

;; Generating RTL for gimple basic block 17

;; <L6>:

(code_label 157 156 158 102 "" [0 uses])

(note 158 157 0 NOTE_INSN_BASIC_BLOCK)

;; __r2 = ((struct thread_info *) child->stack)->tp_value;

(insn 159 158 160 arch/arm/kernel/ptrace.c:842 (set (reg/f:SI 234)
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 188 [ child ])
                (const_int 4 [0x4])) [0 <variable>.stack+0 S4 A32])) -1 (nil))

(insn 160 159 0 arch/arm/kernel/ptrace.c:842 (set (reg/v:SI 2 r2 [ __r2 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 234)
                (const_int 96 [0x60])) [0 <variable>.tp_value+0 S4 A64])) -1 (nil))

;; __p = datap;

(insn 161 160 0 arch/arm/kernel/ptrace.c:842 (set (reg/v:SI 0 r0 [ __p ])
        (reg/v/f:SI 180 [ datap ])) -1 (nil))

;; __asm__ __volatile__(".ifnc %0,r0 ; .err ; .endif
	.ifnc %2,r2 ; .err ; .endif
	bl	__put_user_4" : "=&r" __e : "0" __p, "r" __r2 : "r" __r2 : "cc", "lr", "ip", "lr", "ip", "ip");

(insn 162 161 0 arch/arm/kernel/ptrace.c:842 discrim 4 (parallel [
            (set (reg/v:SI 0 r0 [ __e ])
                (asm_operands/v:SI (".ifnc %0,r0 ; .err ; .endif
	.ifnc %2,r2 ; .err ; .endif
	bl	__put_user_4") ("=&r") 0 [
                        (reg/v:SI 0 r0 [ __p ])
                        (reg/v:SI 2 r2 [ __r2 ])
                    ]
                     [
                        (asm_input:SI ("0") 0)
                        (asm_input:SI ("r") 0)
                    ] 9592319))
            (clobber (reg:QI 24 cc))
            (clobber (reg:QI 14 lr))
            (clobber (reg:QI 12 ip))
        ]) -1 (nil))

;; ret = __e;

(insn 163 162 0 arch/arm/kernel/ptrace.c:842 discrim 6 (set (reg/v:SI 181 [ ret ])
        (reg/v:SI 0 r0 [ __e ])) -1 (nil))

;; Generating RTL for gimple basic block 18

;; <L13>:

(code_label 166 165 167 103 "" [0 uses])

(note 167 166 0 NOTE_INSN_BASIC_BLOCK)

;; ((struct thread_info *) child->stack)->syscall = data;

(insn 168 167 169 arch/arm/kernel/ptrace.c:847 (set (reg/f:SI 235)
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 188 [ child ])
                (const_int 4 [0x4])) [0 <variable>.stack+0 S4 A32])) -1 (nil))

(insn 169 168 0 arch/arm/kernel/ptrace.c:847 (set (mem/s/j:SI (plus:SI (reg/f:SI 235)
                (const_int 76 [0x4c])) [0 <variable>.syscall+0 S4 A32])
        (reg/v:SI 191 [ data ])) -1 (nil))

;; ret = 0;

(insn 170 169 0 arch/arm/kernel/ptrace.c:848 (set (reg/v:SI 181 [ ret ])
        (const_int 0 [0x0])) -1 (nil))

;; Generating RTL for gimple basic block 19

;; <L33>:

(code_label 173 172 174 104 "" [0 uses])

(note 174 173 0 NOTE_INSN_BASIC_BLOCK)

;; sp.87 = sp;

(insn 175 174 0 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 166 [ sp.87 ])
        (reg/v:SI 13 sp [ sp ])) -1 (nil))

;; __asm__("adds %1, %2, %3; sbcccs %1, %1, %0; movcc %0, #0" : "=&r" flag, "=&r" roksum, "=&r" roksum : "r" datap, "Ir" 260, "0" ((struct thread_info *) (sp.87 & 4294959104))->addr_limit : "Ir" 260, "0" ((struct thread_info *) (sp.87 & 4294959104))->addr_limit : "0" ((struct thread_info *) (sp.87 & 4294959104))->addr_limit : "cc");

(insn 176 175 177 include/linux/regset.h:338 (set (reg:SI 237)
        (and:SI (reg:SI 166 [ sp.87 ])
            (const_int -8129 [0xffffffffffffe03f]))) -1 (nil))

(insn 177 176 178 include/linux/regset.h:338 (set (reg:SI 236)
        (and:SI (reg:SI 237)
            (const_int -64 [0xffffffffffffffc0]))) -1 (expr_list:REG_EQUAL (and:SI (reg:SI 166 [ sp.87 ])
            (const_int -8192 [0xffffffffffffe000]))
        (nil)))

(insn 178 177 179 include/linux/regset.h:338 (set (reg:SI 238)
        (mem/s/j:SI (plus:SI (reg:SI 236)
                (const_int 8 [0x8])) [0 <variable>.addr_limit+0 S4 A64])) -1 (nil))

(insn 179 178 0 include/linux/regset.h:338 (parallel [
            (set (reg/v:SI 164 [ flag ])
                (asm_operands:SI ("adds %1, %2, %3; sbcccs %1, %1, %0; movcc %0, #0") ("=&r") 0 [
                        (reg/v/f:SI 180 [ datap ])
                        (const_int 260 [0x104])
                        (reg:SI 238)
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("Ir") 0)
                        (asm_input:SI ("0") 0)
                    ] 9464662))
            (set (reg/v:SI 165 [ roksum ])
                (asm_operands:SI ("adds %1, %2, %3; sbcccs %1, %1, %0; movcc %0, #0") ("=&r") 1 [
                        (reg/v/f:SI 180 [ datap ])
                        (const_int 260 [0x104])
                        (reg:SI 238)
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("Ir") 0)
                        (asm_input:SI ("0") 0)
                    ] 9464662))
            (clobber (reg:QI 24 cc))
        ]) -1 (nil))

;; if (flag != 0)

(insn 180 179 181 include/linux/regset.h:338 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 164 [ flag ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 181 180 0 include/linux/regset.h:338 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))

;; Generating RTL for gimple basic block 20

;; ret = vfp_get (child, &arm_regsets[2], 0, 260, 0B, datap);

(insn 183 182 184 include/linux/regset.h:341 (set (reg/f:SI 239)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) -1 (nil))

(insn 184 183 185 include/linux/regset.h:341 (set (reg:SI 240)
        (plus:SI (reg/f:SI 239)
            (const_int 172 [0xac]))) -1 (nil))

(insn 185 184 186 include/linux/regset.h:341 (set (reg:SI 241)
        (plus:SI (reg:SI 240)
            (const_int 72 [0x48]))) -1 (nil))

(insn 186 185 187 include/linux/regset.h:341 (set (reg:SI 242)
        (const_int 0 [0x0])) -1 (nil))

(insn 187 186 188 include/linux/regset.h:341 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg:SI 242)) -1 (nil))

(insn 188 187 189 include/linux/regset.h:341 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/v/f:SI 180 [ datap ])) -1 (nil))

(insn 189 188 190 include/linux/regset.h:341 (set (reg:SI 0 r0)
        (reg/v/f:SI 188 [ child ])) -1 (nil))

(insn 190 189 191 include/linux/regset.h:341 (set (reg:SI 1 r1)
        (reg:SI 241)) -1 (nil))

(insn 191 190 192 include/linux/regset.h:341 (set (reg:SI 2 r2)
        (const_int 0 [0x0])) -1 (nil))

(insn 192 191 193 include/linux/regset.h:341 (set (reg:SI 3 r3)
        (const_int 260 [0x104])) -1 (nil))

(call_insn 193 192 194 include/linux/regset.h:341 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_get") [flags 0x3] <function_decl 0x11582280 vfp_get>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 194 193 0 include/linux/regset.h:341 (set (reg/v:SI 181 [ ret ])
        (reg:SI 0 r0)) -1 (nil))

;; Generating RTL for gimple basic block 21

;; <L34>:

(code_label 197 196 198 105 "" [0 uses])

(note 198 197 0 NOTE_INSN_BASIC_BLOCK)

;; sp.87 = sp;

(insn 199 198 0 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 163 [ sp.87 ])
        (reg/v:SI 13 sp [ sp ])) -1 (nil))

;; __asm__("adds %1, %2, %3; sbcccs %1, %1, %0; movcc %0, #0" : "=&r" flag, "=&r" roksum, "=&r" roksum : "r" datap, "Ir" 260, "0" ((struct thread_info *) (sp.87 & 4294959104))->addr_limit : "Ir" 260, "0" ((struct thread_info *) (sp.87 & 4294959104))->addr_limit : "0" ((struct thread_info *) (sp.87 & 4294959104))->addr_limit : "cc");

(insn 200 199 201 include/linux/regset.h:361 (set (reg:SI 244)
        (and:SI (reg:SI 163 [ sp.87 ])
            (const_int -8129 [0xffffffffffffe03f]))) -1 (nil))

(insn 201 200 202 include/linux/regset.h:361 (set (reg:SI 243)
        (and:SI (reg:SI 244)
            (const_int -64 [0xffffffffffffffc0]))) -1 (expr_list:REG_EQUAL (and:SI (reg:SI 163 [ sp.87 ])
            (const_int -8192 [0xffffffffffffe000]))
        (nil)))

(insn 202 201 203 include/linux/regset.h:361 (set (reg:SI 245)
        (mem/s/j:SI (plus:SI (reg:SI 243)
                (const_int 8 [0x8])) [0 <variable>.addr_limit+0 S4 A64])) -1 (nil))

(insn 203 202 0 include/linux/regset.h:361 (parallel [
            (set (reg/v:SI 161 [ flag ])
                (asm_operands:SI ("adds %1, %2, %3; sbcccs %1, %1, %0; movcc %0, #0") ("=&r") 0 [
                        (reg/v/f:SI 180 [ datap ])
                        (const_int 260 [0x104])
                        (reg:SI 245)
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("Ir") 0)
                        (asm_input:SI ("0") 0)
                    ] 9467606))
            (set (reg/v:SI 162 [ roksum ])
                (asm_operands:SI ("adds %1, %2, %3; sbcccs %1, %1, %0; movcc %0, #0") ("=&r") 1 [
                        (reg/v/f:SI 180 [ datap ])
                        (const_int 260 [0x104])
                        (reg:SI 245)
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("Ir") 0)
                        (asm_input:SI ("0") 0)
                    ] 9467606))
            (clobber (reg:QI 24 cc))
        ]) -1 (nil))

;; if (flag != 0)

(insn 204 203 205 include/linux/regset.h:361 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 161 [ flag ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 205 204 0 include/linux/regset.h:361 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))

;; Generating RTL for gimple basic block 22

;; ret = vfp_set (child, &arm_regsets[2], 0, 260, 0B, datap);

(insn 207 206 208 include/linux/regset.h:364 (set (reg/f:SI 246)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) -1 (nil))

(insn 208 207 209 include/linux/regset.h:364 (set (reg:SI 247)
        (plus:SI (reg/f:SI 246)
            (const_int 172 [0xac]))) -1 (nil))

(insn 209 208 210 include/linux/regset.h:364 (set (reg:SI 248)
        (plus:SI (reg:SI 247)
            (const_int 72 [0x48]))) -1 (nil))

(insn 210 209 211 include/linux/regset.h:364 (set (reg:SI 249)
        (const_int 0 [0x0])) -1 (nil))

(insn 211 210 212 include/linux/regset.h:364 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg:SI 249)) -1 (nil))

(insn 212 211 213 include/linux/regset.h:364 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/v/f:SI 180 [ datap ])) -1 (nil))

(insn 213 212 214 include/linux/regset.h:364 (set (reg:SI 0 r0)
        (reg/v/f:SI 188 [ child ])) -1 (nil))

(insn 214 213 215 include/linux/regset.h:364 (set (reg:SI 1 r1)
        (reg:SI 248)) -1 (nil))

(insn 215 214 216 include/linux/regset.h:364 (set (reg:SI 2 r2)
        (const_int 0 [0x0])) -1 (nil))

(insn 216 215 217 include/linux/regset.h:364 (set (reg:SI 3 r3)
        (const_int 260 [0x104])) -1 (nil))

(call_insn 217 216 218 include/linux/regset.h:364 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_set") [flags 0x3] <function_decl 0x11582380 vfp_set>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 218 217 0 include/linux/regset.h:364 (set (reg/v:SI 181 [ ret ])
        (reg:SI 0 r0)) -1 (nil))

;; Generating RTL for gimple basic block 23

;; <L16>:

(code_label 221 220 222 106 "" [0 uses])

(note 222 221 0 NOTE_INSN_BASIC_BLOCK)

;; D.27292 = ptrace_get_breakpoints (child);

(insn 223 222 224 arch/arm/kernel/ptrace.c:879 (set (reg:SI 0 r0)
        (reg/v/f:SI 188 [ child ])) -1 (nil))

(call_insn 224 223 225 arch/arm/kernel/ptrace.c:879 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("ptrace_get_breakpoints") [flags 0x41] <function_decl 0x110a8680 ptrace_get_breakpoints>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 225 224 0 arch/arm/kernel/ptrace.c:879 (set (reg:SI 183 [ D.27292 ])
        (reg:SI 0 r0)) -1 (nil))

;; if (D.27292 < 0)

(insn 226 225 227 arch/arm/kernel/ptrace.c:879 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 183 [ D.27292 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 227 226 0 arch/arm/kernel/ptrace.c:879 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 1912 [0x778])
        (nil)))

;; Generating RTL for gimple basic block 24

;; num = (long int) addr;

(insn 229 228 0 arch/arm/kernel/ptrace.c:882 (set (reg/v:SI 160 [ num ])
        (reg/v:SI 190 [ addr ])) -1 (nil))

;; if (num == 0)

(insn 230 229 231 arch/arm/kernel/ptrace.c:472 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 160 [ num ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 231 230 0 arch/arm/kernel/ptrace.c:472 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))

;; Generating RTL for gimple basic block 25

;; D.28052 = hw_breakpoint_slots (0);

(insn 233 232 234 arch/arm/kernel/ptrace.c:432 (set (reg:SI 0 r0)
        (const_int 0 [0x0])) -1 (nil))

(call_insn 234 233 235 arch/arm/kernel/ptrace.c:432 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("hw_breakpoint_slots") [flags 0x41] <function_decl 0x10ad9700 hw_breakpoint_slots>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 235 234 0 arch/arm/kernel/ptrace.c:432 (set (reg:SI 159 [ D.28052 ])
        (reg:SI 0 r0)) -1 (nil))

;; D.28053 = hw_breakpoint_slots (1);

(insn 236 235 237 arch/arm/kernel/ptrace.c:433 (set (reg:SI 0 r0)
        (const_int 1 [0x1])) -1 (nil))

(call_insn 237 236 238 arch/arm/kernel/ptrace.c:433 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("hw_breakpoint_slots") [flags 0x41] <function_decl 0x10ad9700 hw_breakpoint_slots>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 238 237 0 arch/arm/kernel/ptrace.c:433 (set (reg:SI 158 [ D.28053 ])
        (reg:SI 0 r0)) -1 (nil))

;; debug_arch = arch_get_debug_arch ();

(call_insn 239 238 240 arch/arm/kernel/ptrace.c:434 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("arch_get_debug_arch") [flags 0x41] <function_decl 0x10ad9400 arch_get_debug_arch>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (nil))

(insn 240 239 241 arch/arm/kernel/ptrace.c:434 (set (reg:SI 250)
        (reg:SI 0 r0)) -1 (nil))

(insn 241 240 0 arch/arm/kernel/ptrace.c:434 (set (reg/v:SI 157 [ debug_arch ])
        (reg:SI 250)) -1 (nil))

;; wp_len = arch_get_max_wp_len ();

(call_insn 242 241 243 arch/arm/kernel/ptrace.c:435 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("arch_get_max_wp_len") [flags 0x41] <function_decl 0x10ad9480 arch_get_max_wp_len>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (nil))

(insn 243 242 244 arch/arm/kernel/ptrace.c:435 (set (reg:SI 251)
        (reg:SI 0 r0)) -1 (nil))

(insn 244 243 0 arch/arm/kernel/ptrace.c:435 (set (reg/v:SI 156 [ wp_len ])
        (reg:SI 251)) -1 (nil))

;; reg = (u32) debug_arch << 8;

(insn 245 244 0 arch/arm/kernel/ptrace.c:438 (set (reg/v:SI 155 [ reg ])
        (ashift:SI (reg/v:SI 157 [ debug_arch ])
            (const_int 8 [0x8]))) -1 (nil))

;; reg.860 = reg | (u32) wp_len;

(insn 246 245 0 arch/arm/kernel/ptrace.c:439 (set (reg/v:SI 139 [ reg.860 ])
        (ior:SI (reg/v:SI 155 [ reg ])
            (reg/v:SI 156 [ wp_len ]))) -1 (nil))

;; reg.861 = reg.860 << 8;

(insn 247 246 0 arch/arm/kernel/ptrace.c:440 (set (reg/v:SI 138 [ reg.861 ])
        (ashift:SI (reg/v:SI 139 [ reg.860 ])
            (const_int 8 [0x8]))) -1 (nil))

;; reg.862 = reg.861 | (u32) (u8) D.28053;

(insn 248 247 249 arch/arm/kernel/ptrace.c:441 (set (reg:SI 252)
        (zero_extend:SI (subreg:QI (reg:SI 158 [ D.28053 ]) 0))) -1 (nil))

(insn 249 248 0 arch/arm/kernel/ptrace.c:441 (set (reg/v:SI 137 [ reg.862 ])
        (ior:SI (reg/v:SI 138 [ reg.861 ])
            (reg:SI 252))) -1 (nil))

;; reg = reg.862 << 8 | (u32) (u8) D.28052;

(insn 250 249 251 arch/arm/kernel/ptrace.c:443 (set (reg:SI 253)
        (ashift:SI (reg/v:SI 137 [ reg.862 ])
            (const_int 8 [0x8]))) -1 (nil))

(insn 251 250 252 arch/arm/kernel/ptrace.c:443 (set (reg:SI 254)
        (zero_extend:SI (subreg:QI (reg:SI 159 [ D.28052 ]) 0))) -1 (nil))

(insn 252 251 0 arch/arm/kernel/ptrace.c:443 (set (reg/v:SI 152 [ reg ])
        (ior:SI (reg:SI 253)
            (reg:SI 254))) -1 (nil))

;; Generating RTL for gimple basic block 26

;; 

(code_label 255 254 256 114 "" [0 uses])

(note 256 255 0 NOTE_INSN_BASIC_BLOCK)

;; if (num < 0)

(insn 257 256 258 arch/arm/kernel/ptrace.c:358 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 160 [ num ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 258 257 0 arch/arm/kernel/ptrace.c:358 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 2700 [0xa8c])
        (nil)))

;; Generating RTL for gimple basic block 27

;; num.864 = num;

(insn 260 259 0 arch/arm/kernel/ptrace.c:358 (set (reg/v:SI 136 [ num.864 ])
        (reg/v:SI 160 [ num ])) -1 (nil))

;; Generating RTL for gimple basic block 28

;; 

(code_label 263 262 264 116 "" [0 uses])

(note 264 263 0 NOTE_INSN_BASIC_BLOCK)

;; num.864 = 32 - num;

(insn 265 264 0 arch/arm/kernel/ptrace.c:359 (set (reg/v:SI 136 [ num.864 ])
        (minus:SI (const_int 32 [0x20])
            (reg/v:SI 160 [ num ]))) -1 (nil))

;; Generating RTL for gimple basic block 29

;; 

(code_label 266 265 267 117 "" [0 uses])

(note 267 266 0 NOTE_INSN_BASIC_BLOCK)

;; idx = num.864 + -1 >> 1;

(insn 268 267 269 arch/arm/kernel/ptrace.c:360 (set (reg:SI 255)
        (plus:SI (reg/v:SI 136 [ num.864 ])
            (const_int -1 [0xffffffffffffffff]))) -1 (nil))

(insn 269 268 0 arch/arm/kernel/ptrace.c:360 (set (reg/v:SI 153 [ idx ])
        (ashiftrt:SI (reg:SI 255)
            (const_int 1 [0x1]))) -1 (nil))

;; if ((unsigned int) idx > 31)

(insn 270 269 271 arch/arm/kernel/ptrace.c:476 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 153 [ idx ])
            (const_int 31 [0x1f]))) -1 (nil))

(jump_insn 271 270 0 arch/arm/kernel/ptrace.c:476 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

;; Generating RTL for gimple basic block 30

;; ret = -22;

(insn 273 272 0 arch/arm/kernel/ptrace.c:477 (set (reg/v:SI 181 [ ret ])
        (const_int -22 [0xffffffffffffffea])) -1 (nil))

;; Generating RTL for gimple basic block 31

;; 

(code_label 276 275 277 118 "" [0 uses])

(note 277 276 0 NOTE_INSN_BASIC_BLOCK)

;; bp = child->thread.debug.hbp[idx];

(insn 278 277 279 arch/arm/kernel/ptrace.c:481 (set (reg:SI 256)
        (plus:SI (reg/v:SI 153 [ idx ])
            (const_int 198 [0xc6]))) -1 (nil))

(insn 279 278 280 arch/arm/kernel/ptrace.c:481 (set (reg:SI 257)
        (const_int 4 [0x4])) -1 (nil))

(insn 280 279 281 arch/arm/kernel/ptrace.c:481 (set (reg:SI 258)
        (ashift:SI (reg:SI 256)
            (const_int 2 [0x2]))) -1 (nil))

(insn 281 280 282 arch/arm/kernel/ptrace.c:481 (set (reg:SI 259)
        (plus:SI (reg/v/f:SI 188 [ child ])
            (reg:SI 258))) -1 (nil))

(insn 282 281 283 arch/arm/kernel/ptrace.c:481 (set (reg/f:SI 260)
        (plus:SI (reg:SI 259)
            (reg:SI 257))) -1 (nil))

(insn 283 282 0 arch/arm/kernel/ptrace.c:481 (set (reg/v/f:SI 154 [ bp ])
        (mem/s/f/j:SI (reg/f:SI 260) [0 <variable>.thread.debug.hbp S4 A32])) -1 (nil))

;; if (bp == 0B)

(insn 284 283 285 arch/arm/kernel/ptrace.c:482 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 154 [ bp ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 285 284 0 arch/arm/kernel/ptrace.c:482 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 8500 [0x2134])
        (nil)))

;; Generating RTL for gimple basic block 32

;; reg = 0;

(insn 287 286 0 arch/arm/kernel/ptrace.c:483 (set (reg/v:SI 152 [ reg ])
        (const_int 0 [0x0])) -1 (nil))

;; Generating RTL for gimple basic block 33

;; 

(code_label 290 289 291 120 "" [0 uses])

(note 291 290 0 NOTE_INSN_BASIC_BLOCK)

;; arch_ctrl = bp->hw.D.25978.D.25977.info.ctrl;

(insn 292 291 0 arch/arm/kernel/ptrace.c:487 (set (reg/v:SI 185 [ arch_ctrl ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 154 [ bp ])
                (const_int 212 [0xd4])) [0 <variable>.hw.D.25978.D.25977.info.ctrl+0 S4 A32])) -1 (nil))

;; arch_ctrl$len = arch_ctrl.len;

(insn 293 292 294 arch/arm/kernel/ptrace.c:487 (set (subreg:SI (reg:QI 261) 0)
        (zero_extract:SI (reg/v:SI 185 [ arch_ctrl ])
            (const_int 8 [0x8])
            (const_int 19 [0x13]))) -1 (nil))

(insn 294 293 0 arch/arm/kernel/ptrace.c:487 (set (reg:SI 140 [ arch_ctrl$len ])
        (zero_extend:SI (reg:QI 261))) -1 (nil))

;; arch_ctrl$len = arch_ctrl$len;

(insn 295 294 0 arch/arm/kernel/ptrace.c:487 (set (reg:SI 141 [ arch_ctrl$len ])
        (reg:SI 140 [ arch_ctrl$len ])) -1 (nil))

;; Generating RTL for gimple basic block 34

;; arch_ctrl$len = arch_ctrl$len >> 1;

(insn 299 298 300 arch/arm/kernel/ptrace.c:494 (set (reg:SI 262)
        (lshiftrt:SI (reg:SI 141 [ arch_ctrl$len ])
            (const_int 1 [0x1]))) -1 (nil))

(insn 300 299 0 arch/arm/kernel/ptrace.c:494 (set (reg:SI 141 [ arch_ctrl$len ])
        (zero_extend:SI (subreg:QI (reg:SI 262) 0))) -1 (nil))

;; Generating RTL for gimple basic block 35

;; 

(code_label 301 300 302 121 "" [0 uses])

(note 302 301 0 NOTE_INSN_BASIC_BLOCK)

;; if ((int) arch_ctrl$len & 1 == 0)

(insn 304 302 305 arch/arm/kernel/ptrace.c:493 discrim 1 (set (reg:SI 263)
        (and:SI (reg:SI 141 [ arch_ctrl$len ])
            (const_int 1 [0x1]))) -1 (nil))

(insn 305 304 306 arch/arm/kernel/ptrace.c:493 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 263)
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 306 305 0 arch/arm/kernel/ptrace.c:493 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 303)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
        (nil)))

;; Generating RTL for gimple basic block 36

;; if (num & 1 != 0)

(insn 308 307 309 arch/arm/kernel/ptrace.c:496 (set (reg:SI 264)
        (and:SI (reg/v:SI 160 [ num ])
            (const_int 1 [0x1]))) -1 (nil))

(insn 309 308 310 arch/arm/kernel/ptrace.c:496 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 264)
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 310 309 0 arch/arm/kernel/ptrace.c:496 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

;; Generating RTL for gimple basic block 37

;; reg = (u32) bp->attr.D.23452.bp_addr;

(insn 312 311 0 arch/arm/kernel/ptrace.c:497 (set (reg/v:SI 152 [ reg ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 154 [ bp ])
                (const_int 176 [0xb0])) [0 <variable>.attr.D.23452.bp_addr+0 S4 A64])) -1 (nil))

;; Generating RTL for gimple basic block 38

;; 

(code_label 315 314 316 123 "" [0 uses])

(note 316 315 0 NOTE_INSN_BASIC_BLOCK)

;; arch_ctrl.len = arch_ctrl$len;

(insn 317 316 0 arch/arm/kernel/ptrace.c:497 (set (zero_extract:SI (reg/v:SI 185 [ arch_ctrl ])
            (const_int 8 [0x8])
            (const_int 19 [0x13]))
        (reg:SI 141 [ arch_ctrl$len ])) -1 (nil))

;; ctrl = arch_ctrl;

(insn 318 317 0 arch/arm/kernel/ptrace.c:497 (set (reg/v:SI 186 [ ctrl ])
        (reg/v:SI 185 [ arch_ctrl ])) -1 (nil))

;; reg = (u32) (((((int) ctrl.mismatch << 22 | (int) ctrl.len << 5) | (int) ctrl.enabled) | (int) ctrl.type << 3) | (int) ctrl.privilege << 1);

(insn 319 318 320 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (subreg:SI (reg:QI 265) 0)
        (zero_extract:SI (reg/v:SI 186 [ ctrl ])
            (const_int 1 [0x1])
            (const_int 9 [0x9]))) -1 (nil))

(insn 320 319 321 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg:SI 266)
        (zero_extend:SI (reg:QI 265))) -1 (nil))

(insn 321 320 322 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg:SI 267)
        (ashift:SI (reg:SI 266)
            (const_int 22 [0x16]))) -1 (nil))

(insn 322 321 323 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (subreg:SI (reg:QI 268) 0)
        (zero_extract:SI (reg/v:SI 186 [ ctrl ])
            (const_int 8 [0x8])
            (const_int 19 [0x13]))) -1 (nil))

(insn 323 322 324 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg:SI 269)
        (zero_extend:SI (reg:QI 268))) -1 (nil))

(insn 324 323 325 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg:SI 270)
        (ashift:SI (reg:SI 269)
            (const_int 5 [0x5]))) -1 (nil))

(insn 325 324 326 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg:SI 271)
        (ior:SI (reg:SI 267)
            (reg:SI 270))) -1 (nil))

(insn 326 325 327 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (subreg:SI (reg:QI 272) 0)
        (zero_extract:SI (reg/v:SI 186 [ ctrl ])
            (const_int 1 [0x1])
            (const_int 31 [0x1f]))) -1 (nil))

(insn 327 326 328 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg:SI 273)
        (zero_extend:SI (reg:QI 272))) -1 (nil))

(insn 328 327 329 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg:SI 274)
        (ior:SI (reg:SI 271)
            (reg:SI 273))) -1 (nil))

(insn 329 328 330 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (subreg:SI (reg:QI 275) 0)
        (zero_extract:SI (reg/v:SI 186 [ ctrl ])
            (const_int 2 [0x2])
            (const_int 27 [0x1b]))) -1 (nil))

(insn 330 329 331 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg:SI 276)
        (zero_extend:SI (reg:QI 275))) -1 (nil))

(insn 331 330 332 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg:SI 277)
        (ashift:SI (reg:SI 276)
            (const_int 3 [0x3]))) -1 (nil))

(insn 332 331 333 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg:SI 278)
        (ior:SI (reg:SI 274)
            (reg:SI 277))) -1 (nil))

(insn 333 332 334 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (subreg:SI (reg:QI 279) 0)
        (zero_extract:SI (reg/v:SI 186 [ ctrl ])
            (const_int 2 [0x2])
            (const_int 29 [0x1d]))) -1 (nil))

(insn 334 333 335 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg:SI 280)
        (zero_extend:SI (reg:QI 279))) -1 (nil))

(insn 335 334 336 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg:SI 281)
        (ashift:SI (reg:SI 280)
            (const_int 1 [0x1]))) -1 (nil))

(insn 336 335 0 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg/v:SI 152 [ reg ])
        (ior:SI (reg:SI 278)
            (reg:SI 281))) -1 (nil))

;; Generating RTL for gimple basic block 39

;; put:

(code_label 337 336 338 115 ("put") [0 uses])

(note 338 337 0 NOTE_INSN_BASIC_BLOCK)

;; __r2 = reg;

(insn 339 338 0 arch/arm/kernel/ptrace.c:503 (set (reg/v:SI 2 r2 [ __r2 ])
        (reg/v:SI 152 [ reg ])) -1 (nil))

;; __p = datap;

(insn 340 339 0 arch/arm/kernel/ptrace.c:503 (set (reg/v:SI 0 r0 [ __p ])
        (reg/v/f:SI 180 [ datap ])) -1 (nil))

;; __asm__ __volatile__(".ifnc %0,r0 ; .err ; .endif
	.ifnc %2,r2 ; .err ; .endif
	bl	__put_user_4" : "=&r" __e : "0" __p, "r" __r2 : "r" __r2 : "cc", "lr", "ip", "lr", "ip", "ip");

(insn 341 340 0 arch/arm/kernel/ptrace.c:503 discrim 4 (parallel [
            (set (reg/v:SI 0 r0 [ __e ])
                (asm_operands/v:SI (".ifnc %0,r0 ; .err ; .endif
	.ifnc %2,r2 ; .err ; .endif
	bl	__put_user_4") ("=&r") 0 [
                        (reg/v:SI 0 r0 [ __p ])
                        (reg/v:SI 2 r2 [ __r2 ])
                    ]
                     [
                        (asm_input:SI ("0") 0)
                        (asm_input:SI ("r") 0)
                    ] 9592350))
            (clobber (reg:QI 24 cc))
            (clobber (reg:QI 14 lr))
            (clobber (reg:QI 12 ip))
        ]) -1 (nil))

;; D.28058 = __e;

(insn 342 341 0 arch/arm/kernel/ptrace.c:503 discrim 6 (set (reg:SI 151 [ D.28058 ])
        (reg/v:SI 0 r0 [ __e ])) -1 (nil))

;; if (D.28058 != 0)

(insn 343 342 344 arch/arm/kernel/ptrace.c:503 discrim 6 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 151 [ D.28058 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 344 343 0 arch/arm/kernel/ptrace.c:503 discrim 6 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

;; Generating RTL for gimple basic block 40

;; ret = -14;

(insn 346 345 0 arch/arm/kernel/ptrace.c:504 (set (reg/v:SI 181 [ ret ])
        (const_int -14 [0xfffffffffffffff2])) -1 (nil))

;; Generating RTL for gimple basic block 41

;; 

(code_label 349 348 350 124 "" [0 uses])

(note 350 349 0 NOTE_INSN_BASIC_BLOCK)

;; ret = 0;

(insn 351 350 0 arch/arm/kernel/ptrace.c:468 (set (reg/v:SI 181 [ ret ])
        (const_int 0 [0x0])) -1 (nil))

;; Generating RTL for gimple basic block 42

;; out:

(code_label 352 351 353 119 ("out") [0 uses])

(note 353 352 0 NOTE_INSN_BASIC_BLOCK)

;; ptrace_put_breakpoints (child);

(insn 354 353 355 arch/arm/kernel/ptrace.c:884 (set (reg:SI 0 r0)
        (reg/v/f:SI 188 [ child ])) -1 (nil))

(call_insn 355 354 0 arch/arm/kernel/ptrace.c:884 (parallel [
            (call (mem:SI (symbol_ref:SI ("ptrace_put_breakpoints") [flags 0x41] <function_decl 0x110a8700 ptrace_put_breakpoints>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

;; Generating RTL for gimple basic block 43

;; <L19>:

(code_label 358 357 359 107 "" [0 uses])

(note 359 358 0 NOTE_INSN_BASIC_BLOCK)

;; D.27299 = ptrace_get_breakpoints (child);

(insn 360 359 361 arch/arm/kernel/ptrace.c:887 (set (reg:SI 0 r0)
        (reg/v/f:SI 188 [ child ])) -1 (nil))

(call_insn 361 360 362 arch/arm/kernel/ptrace.c:887 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("ptrace_get_breakpoints") [flags 0x41] <function_decl 0x110a8680 ptrace_get_breakpoints>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 362 361 0 arch/arm/kernel/ptrace.c:887 (set (reg:SI 182 [ D.27299 ])
        (reg:SI 0 r0)) -1 (nil))

;; if (D.27299 < 0)

(insn 363 362 364 arch/arm/kernel/ptrace.c:887 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 182 [ D.27299 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 364 363 0 arch/arm/kernel/ptrace.c:887 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 1912 [0x778])
        (nil)))

;; Generating RTL for gimple basic block 44

;; num = (long int) addr;

(insn 366 365 0 arch/arm/kernel/ptrace.c:890 (set (reg/v:SI 150 [ num ])
        (reg/v:SI 190 [ addr ])) -1 (nil))

;; if (num == 0)

(insn 367 366 368 arch/arm/kernel/ptrace.c:519 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 150 [ num ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 368 367 0 arch/arm/kernel/ptrace.c:519 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

;; Generating RTL for gimple basic block 45

;; ret = 0;

(insn 370 369 0 arch/arm/kernel/ptrace.c:513 (set (reg/v:SI 181 [ ret ])
        (const_int 0 [0x0])) -1 (nil))

;; Generating RTL for gimple basic block 46

;; 

(code_label 373 372 374 125 "" [0 uses])

(note 374 373 0 NOTE_INSN_BASIC_BLOCK)

;; if (num < 0)

(insn 375 374 376 arch/arm/kernel/ptrace.c:521 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 150 [ num ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 376 375 0 arch/arm/kernel/ptrace.c:521 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 2700 [0xa8c])
        (nil)))

;; Generating RTL for gimple basic block 47

;; num.865 = num;

(insn 378 377 0 arch/arm/kernel/ptrace.c:521 (set (reg/v:SI 135 [ num.865 ])
        (reg/v:SI 150 [ num ])) -1 (nil))

;; implied_type = 4;

(insn 379 378 0 arch/arm/kernel/ptrace.c:524 (set (reg/v:SI 146 [ implied_type ])
        (const_int 4 [0x4])) -1 (nil))

;; Generating RTL for gimple basic block 48

;; 

(code_label 382 381 383 127 "" [0 uses])

(note 383 382 0 NOTE_INSN_BASIC_BLOCK)

;; num.865 = 32 - num;

(insn 384 383 0 arch/arm/kernel/ptrace.c:359 (set (reg/v:SI 135 [ num.865 ])
        (minus:SI (const_int 32 [0x20])
            (reg/v:SI 150 [ num ]))) -1 (nil))

;; implied_type = 3;

(insn 385 384 0 arch/arm/kernel/ptrace.c:522 (set (reg/v:SI 146 [ implied_type ])
        (const_int 3 [0x3])) -1 (nil))

;; Generating RTL for gimple basic block 49

;; 

(code_label 386 385 387 128 "" [0 uses])

(note 387 386 0 NOTE_INSN_BASIC_BLOCK)

;; idx = num.865 + -1 >> 1;

(insn 388 387 389 arch/arm/kernel/ptrace.c:360 (set (reg:SI 282)
        (plus:SI (reg/v:SI 135 [ num.865 ])
            (const_int -1 [0xffffffffffffffff]))) -1 (nil))

(insn 389 388 0 arch/arm/kernel/ptrace.c:360 (set (reg/v:SI 145 [ idx ])
        (ashiftrt:SI (reg:SI 282)
            (const_int 1 [0x1]))) -1 (nil))

;; if ((unsigned int) idx > 31)

(insn 390 389 391 arch/arm/kernel/ptrace.c:527 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 145 [ idx ])
            (const_int 31 [0x1f]))) -1 (nil))

(jump_insn 391 390 0 arch/arm/kernel/ptrace.c:527 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

;; Generating RTL for gimple basic block 50

;; __p = datap;

(insn 393 392 0 arch/arm/kernel/ptrace.c:532 (set (reg/v:SI 0 r0 [ __p ])
        (reg/v/f:SI 180 [ datap ])) -1 (nil))

;; __asm__ __volatile__(".ifnc %0,r0 ; .err ; .endif
	.ifnc %1,r2 ; .err ; .endif
	bl	__get_user_4" : "=&r" __e, "=r" __r2, "=r" __r2 : "0" __p : "cc", "lr", "lr");

(insn 394 393 0 arch/arm/kernel/ptrace.c:532 discrim 4 (parallel [
            (set (reg/v:SI 0 r0 [ __e ])
                (asm_operands/v:SI (".ifnc %0,r0 ; .err ; .endif
	.ifnc %1,r2 ; .err ; .endif
	bl	__get_user_4") ("=&r") 0 [
                        (reg/v:SI 0 r0 [ __p ])
                    ]
                     [
                        (asm_input:SI ("0") 0)
                    ] 9592356))
            (set (reg/v:SI 2 r2 [ __r2 ])
                (asm_operands/v:SI (".ifnc %0,r0 ; .err ; .endif
	.ifnc %1,r2 ; .err ; .endif
	bl	__get_user_4") ("=r") 1 [
                        (reg/v:SI 0 r0 [ __p ])
                    ]
                     [
                        (asm_input:SI ("0") 0)
                    ] 9592356))
            (clobber (reg:QI 24 cc))
            (clobber (reg:QI 14 lr))
        ]) -1 (nil))

;; user_val = __r2;

(insn 395 394 0 arch/arm/kernel/ptrace.c:532 discrim 5 (set (reg/v:SI 147 [ user_val ])
        (reg/v:SI 2 r2 [ __r2 ])) -1 (nil))

;; D.28105 = __e;

(insn 396 395 0 arch/arm/kernel/ptrace.c:532 discrim 5 (set (reg:SI 142 [ D.28105 ])
        (reg/v:SI 0 r0 [ __e ])) -1 (nil))

;; if (D.28105 != 0)

(insn 397 396 398 arch/arm/kernel/ptrace.c:532 discrim 5 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 142 [ D.28105 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 398 397 0 arch/arm/kernel/ptrace.c:532 discrim 5 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

;; Generating RTL for gimple basic block 51

;; ret = -14;

(insn 400 399 0 arch/arm/kernel/ptrace.c:533 (set (reg/v:SI 181 [ ret ])
        (const_int -14 [0xfffffffffffffff2])) -1 (nil))

;; Generating RTL for gimple basic block 52

;; 

(code_label 403 402 404 130 "" [0 uses])

(note 404 403 0 NOTE_INSN_BASIC_BLOCK)

;; bp = child->thread.debug.hbp[idx];

(insn 405 404 406 arch/arm/kernel/ptrace.c:537 (set (reg:SI 283)
        (plus:SI (reg/v:SI 145 [ idx ])
            (const_int 198 [0xc6]))) -1 (nil))

(insn 406 405 407 arch/arm/kernel/ptrace.c:537 (set (reg:SI 284)
        (const_int 4 [0x4])) -1 (nil))

(insn 407 406 408 arch/arm/kernel/ptrace.c:537 (set (reg:SI 285)
        (ashift:SI (reg:SI 283)
            (const_int 2 [0x2]))) -1 (nil))

(insn 408 407 409 arch/arm/kernel/ptrace.c:537 (set (reg:SI 286)
        (plus:SI (reg/v/f:SI 188 [ child ])
            (reg:SI 285))) -1 (nil))

(insn 409 408 410 arch/arm/kernel/ptrace.c:537 (set (reg/f:SI 287)
        (plus:SI (reg:SI 286)
            (reg:SI 284))) -1 (nil))

(insn 410 409 0 arch/arm/kernel/ptrace.c:537 (set (reg/v/f:SI 148 [ bp ])
        (mem/s/f/j:SI (reg/f:SI 287) [0 <variable>.thread.debug.hbp S4 A32])) -1 (nil))

;; if (bp == 0B)

(insn 411 410 412 arch/arm/kernel/ptrace.c:538 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 148 [ bp ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 412 411 0 arch/arm/kernel/ptrace.c:538 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 9328 [0x2470])
        (nil)))

;; Generating RTL for gimple basic block 53

;; bp = ptrace_hbp_create (child, implied_type);

(insn 414 413 415 arch/arm/kernel/ptrace.c:539 (set (reg:SI 0 r0)
        (reg/v/f:SI 188 [ child ])) -1 (nil))

(insn 415 414 416 arch/arm/kernel/ptrace.c:539 (set (reg:SI 1 r1)
        (reg/v:SI 146 [ implied_type ])) -1 (nil))

(call_insn 416 415 417 arch/arm/kernel/ptrace.c:539 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("ptrace_hbp_create") [flags 0x3] <function_decl 0x1155bb80 ptrace_hbp_create>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 417 416 0 arch/arm/kernel/ptrace.c:539 (set (reg/v/f:SI 148 [ bp ])
        (reg:SI 0 r0)) -1 (nil))

;; if ((long unsigned int) bp > 4294963200)

(insn 418 417 419 include/linux/err.h:34 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 148 [ bp ])
            (const_int -4096 [0xfffffffffffff000]))) -1 (nil))

(jump_insn 419 418 0 include/linux/err.h:34 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))

;; Generating RTL for gimple basic block 54

;; ret = (int) bp;

(insn 421 420 0 include/linux/err.h:29 (set (reg/v:SI 181 [ ret ])
        (reg/v/f:SI 148 [ bp ])) -1 (nil))

;; Generating RTL for gimple basic block 55

;; 

(code_label 424 423 425 132 "" [0 uses])

(note 425 424 0 NOTE_INSN_BASIC_BLOCK)

;; child->thread.debug.hbp[idx] = bp;

(insn 426 425 427 arch/arm/kernel/ptrace.c:544 (set (reg:SI 288)
        (plus:SI (reg/v:SI 145 [ idx ])
            (const_int 198 [0xc6]))) -1 (nil))

(insn 427 426 428 arch/arm/kernel/ptrace.c:544 (set (reg:SI 289)
        (const_int 4 [0x4])) -1 (nil))

(insn 428 427 429 arch/arm/kernel/ptrace.c:544 (set (reg:SI 290)
        (ashift:SI (reg:SI 288)
            (const_int 2 [0x2]))) -1 (nil))

(insn 429 428 430 arch/arm/kernel/ptrace.c:544 (set (reg:SI 291)
        (plus:SI (reg/v/f:SI 188 [ child ])
            (reg:SI 290))) -1 (nil))

(insn 430 429 431 arch/arm/kernel/ptrace.c:544 (set (reg/f:SI 292)
        (plus:SI (reg:SI 291)
            (reg:SI 289))) -1 (nil))

(insn 431 430 0 arch/arm/kernel/ptrace.c:544 (set (mem/s/f/j:SI (reg/f:SI 292) [0 <variable>.thread.debug.hbp S4 A32])
        (reg/v/f:SI 148 [ bp ])) -1 (nil))

;; Generating RTL for gimple basic block 56

;; 

(code_label 432 431 433 131 "" [0 uses])

(note 433 432 0 NOTE_INSN_BASIC_BLOCK)

;; attr = bp->attr;

(insn 434 433 435 arch/arm/kernel/ptrace.c:547 (set (reg:SI 293)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -80 [0xffffffffffffffb0]))) -1 (nil))

(insn 435 434 436 arch/arm/kernel/ptrace.c:547 (set (reg:SI 294)
        (plus:SI (reg/v/f:SI 148 [ bp ])
            (const_int 120 [0x78]))) -1 (nil))

(insn 436 435 437 arch/arm/kernel/ptrace.c:547 (set (reg:SI 295)
        (const_int 72 [0x48])) -1 (nil))

(insn 437 436 438 arch/arm/kernel/ptrace.c:547 (set (reg:SI 0 r0)
        (reg:SI 293)) -1 (nil))

(insn 438 437 439 arch/arm/kernel/ptrace.c:547 (set (reg:SI 1 r1)
        (reg:SI 294)) -1 (nil))

(insn 439 438 440 arch/arm/kernel/ptrace.c:547 (set (reg:SI 2 r2)
        (reg:SI 295)) -1 (nil))

(call_insn 440 439 441 arch/arm/kernel/ptrace.c:547 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41] <function_decl 0x115c3d80 memcpy>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 441 440 0 arch/arm/kernel/ptrace.c:547 (set (reg:SI 296)
        (reg:SI 0 r0)) -1 (nil))

;; if (num & 1 != 0)

(insn 442 441 443 arch/arm/kernel/ptrace.c:549 (set (reg:SI 297)
        (and:SI (reg/v:SI 150 [ num ])
            (const_int 1 [0x1]))) -1 (nil))

(insn 443 442 444 arch/arm/kernel/ptrace.c:549 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 297)
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 444 443 0 arch/arm/kernel/ptrace.c:549 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
        (nil)))

;; Generating RTL for gimple basic block 57

;; attr.D.23452.bp_addr = (__u64) (__u64) user_val;

(insn 446 445 447 arch/arm/kernel/ptrace.c:551 (set (reg:DI 298)
        (zero_extend:DI (reg/v:SI 147 [ user_val ]))) -1 (nil))

(insn 447 446 0 arch/arm/kernel/ptrace.c:551 (set (mem/s/j/c:DI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 attr.D.23452.bp_addr+0 S8 A64])
        (reg:DI 298)) -1 (nil))

;; Generating RTL for gimple basic block 58

;; 

(code_label 450 449 451 133 "" [0 uses])

(note 451 450 0 NOTE_INSN_BASIC_BLOCK)

;; ctrl.enabled = [bit_and_expr] (<unnamed-unsigned:1>) (unsigned char) user_val & 1;

(insn 452 451 453 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:36 (set (reg:QI 299)
        (subreg:QI (reg/v:SI 147 [ user_val ]) 0)) -1 (nil))

(insn 453 452 454 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:36 (set (reg:SI 300)
        (and:SI (subreg:SI (reg:QI 299) 0)
            (const_int 1 [0x1]))) -1 (nil))

(insn 454 453 455 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:36 (set (reg:QI 301)
        (subreg:QI (reg:SI 300) 0)) -1 (nil))

(insn 455 454 456 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:36 (set (reg:SI 302)
        (and:SI (subreg:SI (reg:QI 301) 0)
            (const_int 1 [0x1]))) -1 (nil))

(insn 456 455 457 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:36 (set (reg:QI 303)
        (subreg:QI (reg:SI 302) 0)) -1 (nil))

(insn 457 456 458 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:36 (set (reg:SI 304)
        (and:SI (subreg:SI (reg:QI 303) 0)
            (const_int 1 [0x1]))) -1 (nil))

(insn 458 457 0 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:36 (set (zero_extract:SI (reg/v:SI 184 [ ctrl ])
            (const_int 1 [0x1])
            (const_int 31 [0x1f]))
        (reg:SI 304)) -1 (nil))

;; reg = user_val >> 1;

(insn 459 458 0 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:37 (set (reg/v:SI 149 [ reg ])
        (lshiftrt:SI (reg/v:SI 147 [ user_val ])
            (const_int 1 [0x1]))) -1 (nil))

;; ctrl.privilege = [bit_and_expr] (<unnamed-unsigned:2>) (unsigned char) reg & 3;

(insn 460 459 461 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:38 (set (reg:QI 305)
        (subreg:QI (reg/v:SI 149 [ reg ]) 0)) -1 (nil))

(insn 461 460 462 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:38 (set (reg:SI 306)
        (and:SI (subreg:SI (reg:QI 305) 0)
            (const_int 3 [0x3]))) -1 (nil))

(insn 462 461 463 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:38 (set (reg:QI 307)
        (subreg:QI (reg:SI 306) 0)) -1 (nil))

(insn 463 462 464 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:38 (set (reg:SI 308)
        (and:SI (subreg:SI (reg:QI 307) 0)
            (const_int 3 [0x3]))) -1 (nil))

(insn 464 463 465 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:38 (set (reg:QI 309)
        (subreg:QI (reg:SI 308) 0)) -1 (nil))

(insn 465 464 466 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:38 (set (reg:SI 310)
        (and:SI (subreg:SI (reg:QI 309) 0)
            (const_int 3 [0x3]))) -1 (nil))

(insn 466 465 0 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:38 (set (zero_extract:SI (reg/v:SI 184 [ ctrl ])
            (const_int 2 [0x2])
            (const_int 29 [0x1d]))
        (reg:SI 310)) -1 (nil))

;; reg.867 = reg >> 2;

(insn 467 466 0 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:39 (set (reg/v:SI 134 [ reg.867 ])
        (lshiftrt:SI (reg/v:SI 149 [ reg ])
            (const_int 2 [0x2]))) -1 (nil))

;; ctrl.type = [bit_and_expr] (<unnamed-unsigned:2>) (unsigned char) reg.867 & 3;

(insn 468 467 469 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:40 (set (reg:QI 311)
        (subreg:QI (reg/v:SI 134 [ reg.867 ]) 0)) -1 (nil))

(insn 469 468 470 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:40 (set (reg:SI 312)
        (and:SI (subreg:SI (reg:QI 311) 0)
            (const_int 3 [0x3]))) -1 (nil))

(insn 470 469 471 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:40 (set (reg:QI 313)
        (subreg:QI (reg:SI 312) 0)) -1 (nil))

(insn 471 470 472 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:40 (set (reg:SI 314)
        (and:SI (subreg:SI (reg:QI 313) 0)
            (const_int 3 [0x3]))) -1 (nil))

(insn 472 471 473 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:40 (set (reg:QI 315)
        (subreg:QI (reg:SI 314) 0)) -1 (nil))

(insn 473 472 474 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:40 (set (reg:SI 316)
        (and:SI (subreg:SI (reg:QI 315) 0)
            (const_int 3 [0x3]))) -1 (nil))

(insn 474 473 0 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:40 (set (zero_extract:SI (reg/v:SI 184 [ ctrl ])
            (const_int 2 [0x2])
            (const_int 27 [0x1b]))
        (reg:SI 316)) -1 (nil))

;; reg.871 = reg.867 >> 2;

(insn 475 474 0 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:41 (set (reg/v:SI 133 [ reg.871 ])
        (lshiftrt:SI (reg/v:SI 134 [ reg.867 ])
            (const_int 2 [0x2]))) -1 (nil))

;; ctrl.len = (unsigned char) (unsigned char) reg.871;

(insn 476 475 0 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:42 (set (zero_extract:SI (reg/v:SI 184 [ ctrl ])
            (const_int 8 [0x8])
            (const_int 19 [0x13]))
        (reg/v:SI 133 [ reg.871 ])) -1 (nil))

;; ctrl.mismatch = [bit_and_expr] (<unnamed-unsigned:1>) (unsigned char) (reg.871 >> 17) & 1;

(insn 477 476 478 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:44 (set (reg:SI 317)
        (lshiftrt:SI (reg/v:SI 133 [ reg.871 ])
            (const_int 17 [0x11]))) -1 (nil))

(insn 478 477 479 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:44 (set (reg:QI 318)
        (subreg:QI (reg:SI 317) 0)) -1 (nil))

(insn 479 478 480 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:44 (set (reg:SI 319)
        (and:SI (subreg:SI (reg:QI 318) 0)
            (const_int 1 [0x1]))) -1 (nil))

(insn 480 479 481 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:44 (set (reg:QI 320)
        (subreg:QI (reg:SI 319) 0)) -1 (nil))

(insn 481 480 482 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:44 (set (reg:SI 321)
        (and:SI (subreg:SI (reg:QI 320) 0)
            (const_int 1 [0x1]))) -1 (nil))

(insn 482 481 483 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:44 (set (reg:QI 322)
        (subreg:QI (reg:SI 321) 0)) -1 (nil))

(insn 483 482 484 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:44 (set (reg:SI 323)
        (and:SI (subreg:SI (reg:QI 322) 0)
            (const_int 1 [0x1]))) -1 (nil))

(insn 484 483 0 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:44 (set (zero_extract:SI (reg/v:SI 184 [ ctrl ])
            (const_int 1 [0x1])
            (const_int 9 [0x9]))
        (reg:SI 323)) -1 (nil))

;; ret = arch_bp_generic_fields (ctrl, &gen_len, &gen_type);

(insn 485 484 486 arch/arm/kernel/ptrace.c:555 (set (reg:SI 324)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -4 [0xfffffffffffffffc]))) -1 (nil))

(insn 486 485 487 arch/arm/kernel/ptrace.c:555 (set (reg:SI 325)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -8 [0xfffffffffffffff8]))) -1 (nil))

(insn 487 486 488 arch/arm/kernel/ptrace.c:555 (set (reg:SI 0 r0)
        (reg/v:SI 184 [ ctrl ])) -1 (nil))

(insn 488 487 489 arch/arm/kernel/ptrace.c:555 (set (reg:SI 1 r1)
        (reg:SI 324)) -1 (nil))

(insn 489 488 490 arch/arm/kernel/ptrace.c:555 (set (reg:SI 2 r2)
        (reg:SI 325)) -1 (nil))

(call_insn 490 489 491 arch/arm/kernel/ptrace.c:555 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("arch_bp_generic_fields") [flags 0x41] <function_decl 0x10ad9200 arch_bp_generic_fields>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 491 490 0 arch/arm/kernel/ptrace.c:555 (set (reg/v:SI 181 [ ret ])
        (reg:SI 0 r0)) -1 (nil))

;; if (ret != 0)

(insn 492 491 493 arch/arm/kernel/ptrace.c:556 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 181 [ ret ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 493 492 0 arch/arm/kernel/ptrace.c:556 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

;; Generating RTL for gimple basic block 59

;; gen_type.377 = gen_type;

(insn 495 494 0 arch/arm/kernel/ptrace.c:559 (set (reg:SI 143 [ gen_type.377 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 gen_type+0 S4 A64])) -1 (nil))

;; D.28101 = implied_type & gen_type.377;

(insn 496 495 0 arch/arm/kernel/ptrace.c:559 (set (reg:SI 144 [ D.28101 ])
        (and:SI (reg/v:SI 146 [ implied_type ])
            (reg:SI 143 [ gen_type.377 ]))) -1 (nil))

;; if (D.28101 != gen_type.377)

(insn 497 496 498 arch/arm/kernel/ptrace.c:559 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 144 [ D.28101 ])
            (reg:SI 143 [ gen_type.377 ]))) -1 (nil))

(jump_insn 498 497 0 arch/arm/kernel/ptrace.c:559 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
        (nil)))

;; Generating RTL for gimple basic block 60

;; attr.D.23456.bp_len = (__u64) (__u64) gen_len;

(insn 500 499 501 arch/arm/kernel/ptrace.c:564 (set (reg:SI 326)
        (mem/c/i:SI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 gen_len+0 S4 A32])) -1 (nil))

(insn 501 500 502 arch/arm/kernel/ptrace.c:564 (set (reg:DI 327)
        (sign_extend:DI (reg:SI 326))) -1 (nil))

(insn 502 501 0 arch/arm/kernel/ptrace.c:564 (set (mem/s/j/c:DI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 attr.D.23456.bp_len+0 S8 A64])
        (reg:DI 327)) -1 (nil))

;; attr.bp_type = (__u32) (__u32) D.28101;

(insn 503 502 0 arch/arm/kernel/ptrace.c:565 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [0 attr.bp_type+0 S4 A32])
        (reg:SI 144 [ D.28101 ])) -1 (nil))

;; attr.disabled = [ge_expr] (signed char) BIT_FIELD_REF <ctrl, 8, 24> >= 0;

(insn 504 503 505 arch/arm/kernel/ptrace.c:566 (set (subreg:SI (reg:QI 328) 0)
        (zero_extract:SI (reg/v:SI 184 [ ctrl ])
            (const_int 8 [0x8])
            (const_int 24 [0x18]))) -1 (nil))

(insn 505 504 506 arch/arm/kernel/ptrace.c:566 (set (reg:SI 330)
        (not:SI (subreg:SI (reg:QI 328) 0))) -1 (nil))

(insn 506 505 507 arch/arm/kernel/ptrace.c:566 (set (reg:SI 331)
        (zero_extend:SI (subreg:QI (reg:SI 330) 0))) -1 (nil))

(insn 507 506 508 arch/arm/kernel/ptrace.c:566 (set (reg:SI 332)
        (lshiftrt:SI (reg:SI 331)
            (const_int 7 [0x7]))) -1 (nil))

(insn 508 507 509 arch/arm/kernel/ptrace.c:566 (set (reg:SI 334)
        (zero_extend:SI (mem/s/j/c:QI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [0+40 S1 A64]))) -1 (nil))

(insn 509 508 510 arch/arm/kernel/ptrace.c:566 (set (reg:QI 333)
        (subreg:QI (reg:SI 334) 0)) -1 (nil))

(insn 510 509 511 arch/arm/kernel/ptrace.c:566 (set (zero_extract:SI (subreg:SI (reg:QI 333) 0)
            (const_int 1 [0x1])
            (const_int 0 [0x0]))
        (reg:SI 332)) -1 (nil))

(insn 511 510 0 arch/arm/kernel/ptrace.c:566 (set (mem/s/j/c:QI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0+40 S1 A64])
        (reg:QI 333)) -1 (nil))

;; Generating RTL for gimple basic block 61

;; 

(code_label 512 511 513 134 "" [0 uses])

(note 513 512 0 NOTE_INSN_BASIC_BLOCK)

;; ret = modify_user_hw_breakpoint (bp, &attr);

(insn 514 513 515 arch/arm/kernel/ptrace.c:569 (set (reg:SI 335)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -80 [0xffffffffffffffb0]))) -1 (nil))

(insn 515 514 516 arch/arm/kernel/ptrace.c:569 (set (reg:SI 0 r0)
        (reg/v/f:SI 148 [ bp ])) -1 (nil))

(insn 516 515 517 arch/arm/kernel/ptrace.c:569 (set (reg:SI 1 r1)
        (reg:SI 335)) -1 (nil))

(call_insn 517 516 518 arch/arm/kernel/ptrace.c:569 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("modify_user_hw_breakpoint") [flags 0x41] <function_decl 0x11524780 modify_user_hw_breakpoint>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 518 517 0 arch/arm/kernel/ptrace.c:569 (set (reg/v:SI 181 [ ret ])
        (reg:SI 0 r0)) -1 (nil))

;; Generating RTL for gimple basic block 62

;; out:

(code_label 521 520 522 129 ("out") [0 uses])

(note 522 521 0 NOTE_INSN_BASIC_BLOCK)

;; ret = -22;

(insn 523 522 0 arch/arm/kernel/ptrace.c:528 (set (reg/v:SI 181 [ ret ])
        (const_int -22 [0xffffffffffffffea])) -1 (nil))

;; Generating RTL for gimple basic block 63

;; 

(code_label 524 523 525 126 "" [0 uses])

(note 525 524 0 NOTE_INSN_BASIC_BLOCK)

;; ptrace_put_breakpoints (child);

(insn 526 525 527 arch/arm/kernel/ptrace.c:892 (set (reg:SI 0 r0)
        (reg/v/f:SI 188 [ child ])) -1 (nil))

(call_insn 527 526 0 arch/arm/kernel/ptrace.c:892 (parallel [
            (call (mem:SI (symbol_ref:SI ("ptrace_put_breakpoints") [flags 0x41] <function_decl 0x110a8700 ptrace_put_breakpoints>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

;; Generating RTL for gimple basic block 64

;; <L22>:

(code_label 530 529 531 95 "" [0 uses])

(note 531 530 0 NOTE_INSN_BASIC_BLOCK)

;; ret = ptrace_request (child, request, addr, data);

(insn 532 531 533 arch/arm/kernel/ptrace.c:897 (set (reg:SI 0 r0)
        (reg/v/f:SI 188 [ child ])) -1 (nil))

(insn 533 532 534 arch/arm/kernel/ptrace.c:897 (set (reg:SI 1 r1)
        (reg/v:SI 189 [ request ])) -1 (nil))

(insn 534 533 535 arch/arm/kernel/ptrace.c:897 (set (reg:SI 2 r2)
        (reg/v:SI 190 [ addr ])) -1 (nil))

(insn 535 534 536 arch/arm/kernel/ptrace.c:897 (set (reg:SI 3 r3)
        (reg/v:SI 191 [ data ])) -1 (nil))

(call_insn 536 535 537 arch/arm/kernel/ptrace.c:897 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("ptrace_request") [flags 0x41] <function_decl 0x1109c680 ptrace_request>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 537 536 0 arch/arm/kernel/ptrace.c:897 (set (reg/v:SI 181 [ ret ])
        (reg:SI 0 r0)) -1 (nil))

;; Generating RTL for gimple basic block 65

;; 

(code_label 540 539 541 113 "" [0 uses])

(note 541 540 0 NOTE_INSN_BASIC_BLOCK)

;; ret = -3;

(insn 542 541 0 arch/arm/kernel/ptrace.c:880 (set (reg/v:SI 181 [ ret ])
        (const_int -3 [0xfffffffffffffffd])) -1 (nil))

;; Generating RTL for gimple basic block 66

;; 

(code_label 545 544 546 109 "" [0 uses])

(note 546 545 0 NOTE_INSN_BASIC_BLOCK)

;; ret = -5;

(insn 547 546 0 include/linux/regset.h:362 (set (reg/v:SI 181 [ ret ])
        (const_int -5 [0xfffffffffffffffb])) -1 (nil))

;; Generating RTL for gimple basic block 67

;; 

(code_label 548 547 549 112 "" [0 uses])

(note 549 548 0 NOTE_INSN_BASIC_BLOCK)

;; return ret;

(insn 550 549 551 arch/arm/kernel/ptrace.c:902 (set (reg:SI 187 [ <result> ])
        (reg/v:SI 181 [ ret ])) -1 (nil))

(jump_insn 551 550 552 arch/arm/kernel/ptrace.c:902 (set (pc)
        (label_ref 0)) -1 (nil))

(barrier 552 551 0)


;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 7 3 2 arch/arm/kernel/ptrace.c:790 (set (reg/v/f:SI 188 [ child ])
        (reg:SI 0 r0 [ child ])) -1 (nil))

(insn 3 2 4 2 arch/arm/kernel/ptrace.c:790 (set (reg/v:SI 189 [ request ])
        (reg:SI 1 r1 [ request ])) -1 (nil))

(insn 4 3 5 2 arch/arm/kernel/ptrace.c:790 (set (reg/v:SI 190 [ addr ])
        (reg:SI 2 r2 [ addr ])) -1 (nil))

(insn 5 4 6 2 arch/arm/kernel/ptrace.c:790 (set (reg/v:SI 191 [ data ])
        (reg:SI 3 r3 [ data ])) -1 (nil))

(note 6 5 8 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 3)

;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [100.0%]  (fallthru)
(note 8 6 9 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 9 8 10 3 arch/arm/kernel/ptrace.c:792 (set (reg/v/f:SI 180 [ datap ])
        (reg/v:SI 191 [ data ])) -1 (nil))

(insn 10 9 11 3 arch/arm/kernel/ptrace.c:794 (set (reg:SI 192)
        (plus:SI (reg/v:SI 189 [ request ])
            (const_int -3 [0xfffffffffffffffd]))) -1 (nil))

(jump_insn 11 10 12 3 arch/arm/kernel/ptrace.c:794 (parallel [
            (set (pc)
                (if_then_else (leu (reg:SI 192)
                        (const_int 27 [0x1b]))
                    (mem:SI (plus:SI (mult:SI (reg:SI 192)
                                (const_int 4 [0x4]))
                            (label_ref 12)) [0 S4 A32])
                    (label_ref 530)))
            (clobber (reg:CC 24 cc))
            (use (label_ref 12))
        ]) -1 (insn_list:REG_LABEL_TARGET 530 (nil)))
;; End of basic block 3 -> ( 65 4 9 10 12 14 16 18 19 20 22 24 44)

;; Succ edge  65 [7.7%] 
;; Succ edge  4 [7.7%] 
;; Succ edge  9 [7.7%] 
;; Succ edge  10 [7.7%] 
;; Succ edge  12 [7.7%] 
;; Succ edge  14 [7.7%] 
;; Succ edge  16 [7.7%] 
;; Succ edge  18 [7.7%] 
;; Succ edge  19 [7.7%] 
;; Succ edge  20 [7.7%] 
;; Succ edge  22 [7.7%] 
;; Succ edge  24 [7.7%] 
;; Succ edge  44 [7.7%] 

;; Insn is not within a basic block
(code_label 12 11 13 108 "" [2 uses])

;; Insn is not within a basic block
(jump_insn 13 12 14 arch/arm/kernel/ptrace.c:794 (addr_vec:SI [
            (label_ref:SI 15)
            (label_ref:SI 530)
            (label_ref:SI 530)
            (label_ref:SI 54)
            (label_ref:SI 530)
            (label_ref:SI 530)
            (label_ref:SI 530)
            (label_ref:SI 530)
            (label_ref:SI 530)
            (label_ref:SI 63)
            (label_ref:SI 86)
            (label_ref:SI 109)
            (label_ref:SI 133)
            (label_ref:SI 530)
            (label_ref:SI 530)
            (label_ref:SI 530)
            (label_ref:SI 530)
            (label_ref:SI 530)
            (label_ref:SI 530)
            (label_ref:SI 157)
            (label_ref:SI 166)
            (label_ref:SI 530)
            (label_ref:SI 530)
            (label_ref:SI 530)
            (label_ref:SI 173)
            (label_ref:SI 197)
            (label_ref:SI 221)
            (label_ref:SI 358)
        ]) -1 (nil))

(barrier 14 13 15)

;; Start of basic block ( 3) -> 4
;; Pred edge  3 [7.7%] 
(code_label 15 14 16 4 96 "" [1 uses])

(note 16 15 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 17 16 18 4 arch/arm/kernel/ptrace.c:258 (set (reg:SI 193)
        (and:SI (reg/v:SI 190 [ addr ])
            (const_int 3 [0x3]))) -1 (nil))

(insn 18 17 19 4 arch/arm/kernel/ptrace.c:258 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 193)
            (const_int 0 [0x0]))) -1 (nil))

(insn 19 18 20 4 arch/arm/kernel/ptrace.c:258 (set (reg:SI 195)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) -1 (nil))

(insn 20 19 21 4 arch/arm/kernel/ptrace.c:258 (set (reg:QI 194)
        (subreg:QI (reg:SI 195) 0)) -1 (nil))

(insn 21 20 22 4 arch/arm/kernel/ptrace.c:258 (set (reg:SI 197)
        (const_int 295 [0x127])) -1 (nil))

(insn 22 21 23 4 arch/arm/kernel/ptrace.c:258 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 190 [ addr ])
            (reg:SI 197))) -1 (nil))

(insn 23 22 24 4 arch/arm/kernel/ptrace.c:258 (set (reg:SI 198)
        (gtu:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) -1 (nil))

(insn 24 23 25 4 arch/arm/kernel/ptrace.c:258 (set (reg:QI 196)
        (subreg:QI (reg:SI 198) 0)) -1 (nil))

(insn 25 24 26 4 arch/arm/kernel/ptrace.c:258 (set (reg:SI 199)
        (ior:SI (subreg:SI (reg:QI 194) 0)
            (subreg:SI (reg:QI 196) 0))) -1 (nil))

(insn 26 25 27 4 arch/arm/kernel/ptrace.c:258 (set (reg:QI 200)
        (subreg:QI (reg:SI 199) 0)) -1 (nil))

(insn 27 26 28 4 arch/arm/kernel/ptrace.c:258 (set (reg:SI 201)
        (zero_extend:SI (reg:QI 200))) -1 (nil))

(insn 28 27 29 4 arch/arm/kernel/ptrace.c:258 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 201)
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 29 28 30 4 arch/arm/kernel/ptrace.c:258 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 545)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 4 -> ( 67 5)

;; Succ edge  67 [50.0%] 
;; Succ edge  5 [50.0%]  (fallthru)

;; Start of basic block ( 4) -> 5
;; Pred edge  4 [50.0%]  (fallthru)
(note 30 29 31 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 31 30 32 5 arch/arm/kernel/ptrace.c:268 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 190 [ addr ])
            (const_int 71 [0x47]))) -1 (nil))

(jump_insn 32 31 33 5 arch/arm/kernel/ptrace.c:268 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 37)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 5 -> ( 7 6)

;; Succ edge  7 [50.0%] 
;; Succ edge  6 [50.0%]  (fallthru)

;; Start of basic block ( 5) -> 6
;; Pred edge  5 [50.0%]  (fallthru)
(note 33 32 34 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 34 33 35 6 arch/arm/kernel/ptrace.c:261 (set (reg/v:SI 179 [ tmp ])
        (const_int 0 [0x0])) -1 (nil))

(jump_insn 35 34 36 6 arch/arm/kernel/ptrace.c:261 (set (pc)
        (label_ref 46)) -1 (nil))
;; End of basic block 6 -> ( 8)

;; Succ edge  8 [100.0%] 

(barrier 36 35 37)

;; Start of basic block ( 5) -> 7
;; Pred edge  5 [50.0%] 
(code_label 37 36 38 7 110 "" [1 uses])

(note 38 37 39 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 39 38 40 7 arch/arm/kernel/ptrace.c:160 (set (reg/f:SI 202)
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 188 [ child ])
                (const_int 4 [0x4])) [0 <variable>.stack+0 S4 A32])) -1 (nil))

(insn 40 39 41 7 arch/arm/kernel/ptrace.c:160 (set (reg:SI 203)
        (const_int 8112 [0x1fb0])) -1 (nil))

(insn 41 40 42 7 arch/arm/kernel/ptrace.c:160 (set (reg:SI 204)
        (lshiftrt:SI (reg/v:SI 190 [ addr ])
            (const_int 2 [0x2]))) -1 (nil))

(insn 42 41 43 7 arch/arm/kernel/ptrace.c:160 (set (reg:SI 205)
        (ashift:SI (reg:SI 204)
            (const_int 2 [0x2]))) -1 (nil))

(insn 43 42 44 7 arch/arm/kernel/ptrace.c:160 (set (reg:SI 206)
        (plus:SI (reg/f:SI 202)
            (reg:SI 205))) -1 (nil))

(insn 44 43 45 7 arch/arm/kernel/ptrace.c:160 (set (reg/f:SI 207)
        (plus:SI (reg:SI 206)
            (reg:SI 203))) -1 (nil))

(insn 45 44 46 7 arch/arm/kernel/ptrace.c:160 (set (reg/v:SI 179 [ tmp ])
        (mem/s/j:SI (reg/f:SI 207) [0 <variable>.uregs S4 A32])) -1 (nil))
;; End of basic block 7 -> ( 8)

;; Succ edge  8 [100.0%]  (fallthru)

;; Start of basic block ( 7 6) -> 8
;; Pred edge  7 [100.0%]  (fallthru)
;; Pred edge  6 [100.0%] 
(code_label 46 45 47 8 111 "" [1 uses])

(note 47 46 48 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 48 47 49 8 arch/arm/kernel/ptrace.c:271 (set (reg/v:SI 2 r2 [ __r2 ])
        (reg/v:SI 179 [ tmp ])) -1 (nil))

(insn 49 48 50 8 arch/arm/kernel/ptrace.c:271 (set (reg/v:SI 0 r0 [ __p ])
        (reg/v/f:SI 180 [ datap ])) -1 (nil))

(insn 50 49 51 8 arch/arm/kernel/ptrace.c:271 discrim 4 (parallel [
            (set (reg/v:SI 0 r0 [ __e ])
                (asm_operands/v:SI (".ifnc %0,r0 ; .err ; .endif
	.ifnc %2,r2 ; .err ; .endif
	bl	__put_user_4") ("=&r") 0 [
                        (reg/v:SI 0 r0 [ __p ])
                        (reg/v:SI 2 r2 [ __r2 ])
                    ]
                     [
                        (asm_input:SI ("0") 0)
                        (asm_input:SI ("r") 0)
                    ] 9592343))
            (clobber (reg:QI 24 cc))
            (clobber (reg:QI 14 lr))
            (clobber (reg:QI 12 ip))
        ]) -1 (nil))

(insn 51 50 52 8 arch/arm/kernel/ptrace.c:271 discrim 6 (set (reg/v:SI 181 [ ret ])
        (reg/v:SI 0 r0 [ __e ])) -1 (nil))

(jump_insn 52 51 53 8 arch/arm/kernel/ptrace.c:271 discrim 6 (set (pc)
        (label_ref 548)) -1 (nil))
;; End of basic block 8 -> ( 68)

;; Succ edge  68 [100.0%] 

(barrier 53 52 54)

;; Start of basic block ( 3) -> 9
;; Pred edge  3 [7.7%] 
(code_label 54 53 55 9 97 "" [1 uses])

(note 55 54 56 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 56 55 57 9 arch/arm/kernel/ptrace.c:800 (set (reg:SI 0 r0)
        (reg/v/f:SI 188 [ child ])) -1 (nil))

(insn 57 56 58 9 arch/arm/kernel/ptrace.c:800 (set (reg:SI 1 r1)
        (reg/v:SI 190 [ addr ])) -1 (nil))

(insn 58 57 59 9 arch/arm/kernel/ptrace.c:800 (set (reg:SI 2 r2)
        (reg/v:SI 191 [ data ])) -1 (nil))

(call_insn 59 58 60 9 arch/arm/kernel/ptrace.c:800 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("ptrace_write_user") [flags 0x3] <function_decl 0x1155b480 ptrace_write_user>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 60 59 61 9 arch/arm/kernel/ptrace.c:800 (set (reg/v:SI 181 [ ret ])
        (reg:SI 0 r0)) -1 (nil))

(jump_insn 61 60 62 9 arch/arm/kernel/ptrace.c:801 (set (pc)
        (label_ref 548)) -1 (nil))
;; End of basic block 9 -> ( 68)

;; Succ edge  68 [100.0%] 

(barrier 62 61 63)

;; Start of basic block ( 3) -> 10
;; Pred edge  3 [7.7%] 
(code_label 63 62 64 10 98 "" [1 uses])

(note 64 63 65 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 65 64 66 10 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 178 [ sp.87 ])
        (reg/v:SI 13 sp [ sp ])) -1 (nil))

(insn 66 65 67 10 include/linux/regset.h:338 (set (reg:SI 209)
        (and:SI (reg:SI 178 [ sp.87 ])
            (const_int -8129 [0xffffffffffffe03f]))) -1 (nil))

(insn 67 66 68 10 include/linux/regset.h:338 (set (reg:SI 208)
        (and:SI (reg:SI 209)
            (const_int -64 [0xffffffffffffffc0]))) -1 (expr_list:REG_EQUAL (and:SI (reg:SI 178 [ sp.87 ])
            (const_int -8192 [0xffffffffffffe000]))
        (nil)))

(insn 68 67 69 10 include/linux/regset.h:338 (set (reg:SI 210)
        (mem/s/j:SI (plus:SI (reg:SI 208)
                (const_int 8 [0x8])) [0 <variable>.addr_limit+0 S4 A64])) -1 (nil))

(insn 69 68 70 10 include/linux/regset.h:338 (parallel [
            (set (reg/v:SI 176 [ flag ])
                (asm_operands:SI ("adds %1, %2, %3; sbcccs %1, %1, %0; movcc %0, #0") ("=&r") 0 [
                        (reg/v/f:SI 180 [ datap ])
                        (const_int 72 [0x48])
                        (reg:SI 210)
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("Ir") 0)
                        (asm_input:SI ("0") 0)
                    ] 9464662))
            (set (reg/v:SI 177 [ roksum ])
                (asm_operands:SI ("adds %1, %2, %3; sbcccs %1, %1, %0; movcc %0, #0") ("=&r") 1 [
                        (reg/v/f:SI 180 [ datap ])
                        (const_int 72 [0x48])
                        (reg:SI 210)
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("Ir") 0)
                        (asm_input:SI ("0") 0)
                    ] 9464662))
            (clobber (reg:QI 24 cc))
        ]) -1 (nil))

(insn 70 69 71 10 include/linux/regset.h:338 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 176 [ flag ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 71 70 72 10 include/linux/regset.h:338 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 545)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))
;; End of basic block 10 -> ( 67 11)

;; Succ edge  67 [71.0%] 
;; Succ edge  11 [29.0%]  (fallthru)

;; Start of basic block ( 10) -> 11
;; Pred edge  10 [29.0%]  (fallthru)
(note 72 71 73 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 73 72 74 11 include/linux/regset.h:341 (set (reg/f:SI 211)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) -1 (nil))

(insn 74 73 75 11 include/linux/regset.h:341 (set (reg:SI 212)
        (plus:SI (reg/f:SI 211)
            (const_int 172 [0xac]))) -1 (nil))

(insn 75 74 76 11 include/linux/regset.h:341 (set (reg:SI 213)
        (const_int 0 [0x0])) -1 (nil))

(insn 76 75 77 11 include/linux/regset.h:341 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg:SI 213)) -1 (nil))

(insn 77 76 78 11 include/linux/regset.h:341 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/v/f:SI 180 [ datap ])) -1 (nil))

(insn 78 77 79 11 include/linux/regset.h:341 (set (reg:SI 0 r0)
        (reg/v/f:SI 188 [ child ])) -1 (nil))

(insn 79 78 80 11 include/linux/regset.h:341 (set (reg:SI 1 r1)
        (reg:SI 212)) -1 (nil))

(insn 80 79 81 11 include/linux/regset.h:341 (set (reg:SI 2 r2)
        (const_int 0 [0x0])) -1 (nil))

(insn 81 80 82 11 include/linux/regset.h:341 (set (reg:SI 3 r3)
        (const_int 72 [0x48])) -1 (nil))

(call_insn 82 81 83 11 include/linux/regset.h:341 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("gpr_get") [flags 0x3] <function_decl 0x1155be80 gpr_get>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 83 82 84 11 include/linux/regset.h:341 (set (reg/v:SI 181 [ ret ])
        (reg:SI 0 r0)) -1 (nil))

(jump_insn 84 83 85 11 include/linux/regset.h:341 (set (pc)
        (label_ref 548)) -1 (nil))
;; End of basic block 11 -> ( 68)

;; Succ edge  68 [100.0%] 

(barrier 85 84 86)

;; Start of basic block ( 3) -> 12
;; Pred edge  3 [7.7%] 
(code_label 86 85 87 12 99 "" [1 uses])

(note 87 86 88 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 88 87 89 12 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 175 [ sp.87 ])
        (reg/v:SI 13 sp [ sp ])) -1 (nil))

(insn 89 88 90 12 include/linux/regset.h:361 (set (reg:SI 215)
        (and:SI (reg:SI 175 [ sp.87 ])
            (const_int -8129 [0xffffffffffffe03f]))) -1 (nil))

(insn 90 89 91 12 include/linux/regset.h:361 (set (reg:SI 214)
        (and:SI (reg:SI 215)
            (const_int -64 [0xffffffffffffffc0]))) -1 (expr_list:REG_EQUAL (and:SI (reg:SI 175 [ sp.87 ])
            (const_int -8192 [0xffffffffffffe000]))
        (nil)))

(insn 91 90 92 12 include/linux/regset.h:361 (set (reg:SI 216)
        (mem/s/j:SI (plus:SI (reg:SI 214)
                (const_int 8 [0x8])) [0 <variable>.addr_limit+0 S4 A64])) -1 (nil))

(insn 92 91 93 12 include/linux/regset.h:361 (parallel [
            (set (reg/v:SI 173 [ flag ])
                (asm_operands:SI ("adds %1, %2, %3; sbcccs %1, %1, %0; movcc %0, #0") ("=&r") 0 [
                        (reg/v/f:SI 180 [ datap ])
                        (const_int 72 [0x48])
                        (reg:SI 216)
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("Ir") 0)
                        (asm_input:SI ("0") 0)
                    ] 9467606))
            (set (reg/v:SI 174 [ roksum ])
                (asm_operands:SI ("adds %1, %2, %3; sbcccs %1, %1, %0; movcc %0, #0") ("=&r") 1 [
                        (reg/v/f:SI 180 [ datap ])
                        (const_int 72 [0x48])
                        (reg:SI 216)
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("Ir") 0)
                        (asm_input:SI ("0") 0)
                    ] 9467606))
            (clobber (reg:QI 24 cc))
        ]) -1 (nil))

(insn 93 92 94 12 include/linux/regset.h:361 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 173 [ flag ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 94 93 95 12 include/linux/regset.h:361 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 545)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))
;; End of basic block 12 -> ( 67 13)

;; Succ edge  67 [71.0%] 
;; Succ edge  13 [29.0%]  (fallthru)

;; Start of basic block ( 12) -> 13
;; Pred edge  12 [29.0%]  (fallthru)
(note 95 94 96 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 96 95 97 13 include/linux/regset.h:364 (set (reg/f:SI 217)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) -1 (nil))

(insn 97 96 98 13 include/linux/regset.h:364 (set (reg:SI 218)
        (plus:SI (reg/f:SI 217)
            (const_int 172 [0xac]))) -1 (nil))

(insn 98 97 99 13 include/linux/regset.h:364 (set (reg:SI 219)
        (const_int 0 [0x0])) -1 (nil))

(insn 99 98 100 13 include/linux/regset.h:364 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg:SI 219)) -1 (nil))

(insn 100 99 101 13 include/linux/regset.h:364 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/v/f:SI 180 [ datap ])) -1 (nil))

(insn 101 100 102 13 include/linux/regset.h:364 (set (reg:SI 0 r0)
        (reg/v/f:SI 188 [ child ])) -1 (nil))

(insn 102 101 103 13 include/linux/regset.h:364 (set (reg:SI 1 r1)
        (reg:SI 218)) -1 (nil))

(insn 103 102 104 13 include/linux/regset.h:364 (set (reg:SI 2 r2)
        (const_int 0 [0x0])) -1 (nil))

(insn 104 103 105 13 include/linux/regset.h:364 (set (reg:SI 3 r3)
        (const_int 72 [0x48])) -1 (nil))

(call_insn 105 104 106 13 include/linux/regset.h:364 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("gpr_set") [flags 0x3] <function_decl 0x1155bf80 gpr_set>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 106 105 107 13 include/linux/regset.h:364 (set (reg/v:SI 181 [ ret ])
        (reg:SI 0 r0)) -1 (nil))

(jump_insn 107 106 108 13 include/linux/regset.h:364 (set (pc)
        (label_ref 548)) -1 (nil))
;; End of basic block 13 -> ( 68)

;; Succ edge  68 [100.0%] 

(barrier 108 107 109)

;; Start of basic block ( 3) -> 14
;; Pred edge  3 [7.7%] 
(code_label 109 108 110 14 100 "" [1 uses])

(note 110 109 111 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 111 110 112 14 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 172 [ sp.87 ])
        (reg/v:SI 13 sp [ sp ])) -1 (nil))

(insn 112 111 113 14 include/linux/regset.h:338 (set (reg:SI 221)
        (and:SI (reg:SI 172 [ sp.87 ])
            (const_int -8129 [0xffffffffffffe03f]))) -1 (nil))

(insn 113 112 114 14 include/linux/regset.h:338 (set (reg:SI 220)
        (and:SI (reg:SI 221)
            (const_int -64 [0xffffffffffffffc0]))) -1 (expr_list:REG_EQUAL (and:SI (reg:SI 172 [ sp.87 ])
            (const_int -8192 [0xffffffffffffe000]))
        (nil)))

(insn 114 113 115 14 include/linux/regset.h:338 (set (reg:SI 222)
        (mem/s/j:SI (plus:SI (reg:SI 220)
                (const_int 8 [0x8])) [0 <variable>.addr_limit+0 S4 A64])) -1 (nil))

(insn 115 114 116 14 include/linux/regset.h:338 (parallel [
            (set (reg/v:SI 170 [ flag ])
                (asm_operands:SI ("adds %1, %2, %3; sbcccs %1, %1, %0; movcc %0, #0") ("=&r") 0 [
                        (reg/v/f:SI 180 [ datap ])
                        (const_int 140 [0x8c])
                        (reg:SI 222)
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("Ir") 0)
                        (asm_input:SI ("0") 0)
                    ] 9464662))
            (set (reg/v:SI 171 [ roksum ])
                (asm_operands:SI ("adds %1, %2, %3; sbcccs %1, %1, %0; movcc %0, #0") ("=&r") 1 [
                        (reg/v/f:SI 180 [ datap ])
                        (const_int 140 [0x8c])
                        (reg:SI 222)
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("Ir") 0)
                        (asm_input:SI ("0") 0)
                    ] 9464662))
            (clobber (reg:QI 24 cc))
        ]) -1 (nil))

(insn 116 115 117 14 include/linux/regset.h:338 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 170 [ flag ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 117 116 118 14 include/linux/regset.h:338 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 545)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))
;; End of basic block 14 -> ( 67 15)

;; Succ edge  67 [71.0%] 
;; Succ edge  15 [29.0%]  (fallthru)

;; Start of basic block ( 14) -> 15
;; Pred edge  14 [29.0%]  (fallthru)
(note 118 117 119 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 119 118 120 15 include/linux/regset.h:341 (set (reg/f:SI 223)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) -1 (nil))

(insn 120 119 121 15 include/linux/regset.h:341 (set (reg:SI 224)
        (plus:SI (reg/f:SI 223)
            (const_int 172 [0xac]))) -1 (nil))

(insn 121 120 122 15 include/linux/regset.h:341 (set (reg:SI 225)
        (plus:SI (reg:SI 224)
            (const_int 36 [0x24]))) -1 (nil))

(insn 122 121 123 15 include/linux/regset.h:341 (set (reg:SI 226)
        (const_int 0 [0x0])) -1 (nil))

(insn 123 122 124 15 include/linux/regset.h:341 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg:SI 226)) -1 (nil))

(insn 124 123 125 15 include/linux/regset.h:341 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/v/f:SI 180 [ datap ])) -1 (nil))

(insn 125 124 126 15 include/linux/regset.h:341 (set (reg:SI 0 r0)
        (reg/v/f:SI 188 [ child ])) -1 (nil))

(insn 126 125 127 15 include/linux/regset.h:341 (set (reg:SI 1 r1)
        (reg:SI 225)) -1 (nil))

(insn 127 126 128 15 include/linux/regset.h:341 (set (reg:SI 2 r2)
        (const_int 0 [0x0])) -1 (nil))

(insn 128 127 129 15 include/linux/regset.h:341 (set (reg:SI 3 r3)
        (const_int 140 [0x8c])) -1 (nil))

(call_insn 129 128 130 15 include/linux/regset.h:341 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("fpa_get") [flags 0x3] <function_decl 0x11582080 fpa_get>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 130 129 131 15 include/linux/regset.h:341 (set (reg/v:SI 181 [ ret ])
        (reg:SI 0 r0)) -1 (nil))

(jump_insn 131 130 132 15 include/linux/regset.h:341 (set (pc)
        (label_ref 548)) -1 (nil))
;; End of basic block 15 -> ( 68)

;; Succ edge  68 [100.0%] 

(barrier 132 131 133)

;; Start of basic block ( 3) -> 16
;; Pred edge  3 [7.7%] 
(code_label 133 132 134 16 101 "" [1 uses])

(note 134 133 135 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 135 134 136 16 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 169 [ sp.87 ])
        (reg/v:SI 13 sp [ sp ])) -1 (nil))

(insn 136 135 137 16 include/linux/regset.h:361 (set (reg:SI 228)
        (and:SI (reg:SI 169 [ sp.87 ])
            (const_int -8129 [0xffffffffffffe03f]))) -1 (nil))

(insn 137 136 138 16 include/linux/regset.h:361 (set (reg:SI 227)
        (and:SI (reg:SI 228)
            (const_int -64 [0xffffffffffffffc0]))) -1 (expr_list:REG_EQUAL (and:SI (reg:SI 169 [ sp.87 ])
            (const_int -8192 [0xffffffffffffe000]))
        (nil)))

(insn 138 137 139 16 include/linux/regset.h:361 (set (reg:SI 229)
        (mem/s/j:SI (plus:SI (reg:SI 227)
                (const_int 8 [0x8])) [0 <variable>.addr_limit+0 S4 A64])) -1 (nil))

(insn 139 138 140 16 include/linux/regset.h:361 (parallel [
            (set (reg/v:SI 167 [ flag ])
                (asm_operands:SI ("adds %1, %2, %3; sbcccs %1, %1, %0; movcc %0, #0") ("=&r") 0 [
                        (reg/v/f:SI 180 [ datap ])
                        (const_int 140 [0x8c])
                        (reg:SI 229)
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("Ir") 0)
                        (asm_input:SI ("0") 0)
                    ] 9467606))
            (set (reg/v:SI 168 [ roksum ])
                (asm_operands:SI ("adds %1, %2, %3; sbcccs %1, %1, %0; movcc %0, #0") ("=&r") 1 [
                        (reg/v/f:SI 180 [ datap ])
                        (const_int 140 [0x8c])
                        (reg:SI 229)
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("Ir") 0)
                        (asm_input:SI ("0") 0)
                    ] 9467606))
            (clobber (reg:QI 24 cc))
        ]) -1 (nil))

(insn 140 139 141 16 include/linux/regset.h:361 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 167 [ flag ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 141 140 142 16 include/linux/regset.h:361 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 545)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))
;; End of basic block 16 -> ( 67 17)

;; Succ edge  67 [71.0%] 
;; Succ edge  17 [29.0%]  (fallthru)

;; Start of basic block ( 16) -> 17
;; Pred edge  16 [29.0%]  (fallthru)
(note 142 141 143 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 143 142 144 17 include/linux/regset.h:364 (set (reg/f:SI 230)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) -1 (nil))

(insn 144 143 145 17 include/linux/regset.h:364 (set (reg:SI 231)
        (plus:SI (reg/f:SI 230)
            (const_int 172 [0xac]))) -1 (nil))

(insn 145 144 146 17 include/linux/regset.h:364 (set (reg:SI 232)
        (plus:SI (reg:SI 231)
            (const_int 36 [0x24]))) -1 (nil))

(insn 146 145 147 17 include/linux/regset.h:364 (set (reg:SI 233)
        (const_int 0 [0x0])) -1 (nil))

(insn 147 146 148 17 include/linux/regset.h:364 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg:SI 233)) -1 (nil))

(insn 148 147 149 17 include/linux/regset.h:364 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/v/f:SI 180 [ datap ])) -1 (nil))

(insn 149 148 150 17 include/linux/regset.h:364 (set (reg:SI 0 r0)
        (reg/v/f:SI 188 [ child ])) -1 (nil))

(insn 150 149 151 17 include/linux/regset.h:364 (set (reg:SI 1 r1)
        (reg:SI 232)) -1 (nil))

(insn 151 150 152 17 include/linux/regset.h:364 (set (reg:SI 2 r2)
        (const_int 0 [0x0])) -1 (nil))

(insn 152 151 153 17 include/linux/regset.h:364 (set (reg:SI 3 r3)
        (const_int 140 [0x8c])) -1 (nil))

(call_insn 153 152 154 17 include/linux/regset.h:364 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("fpa_set") [flags 0x3] <function_decl 0x11582180 fpa_set>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 154 153 155 17 include/linux/regset.h:364 (set (reg/v:SI 181 [ ret ])
        (reg:SI 0 r0)) -1 (nil))

(jump_insn 155 154 156 17 include/linux/regset.h:364 (set (pc)
        (label_ref 548)) -1 (nil))
;; End of basic block 17 -> ( 68)

;; Succ edge  68 [100.0%] 

(barrier 156 155 157)

;; Start of basic block ( 3) -> 18
;; Pred edge  3 [7.7%] 
(code_label 157 156 158 18 102 "" [1 uses])

(note 158 157 159 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 159 158 160 18 arch/arm/kernel/ptrace.c:842 (set (reg/f:SI 234)
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 188 [ child ])
                (const_int 4 [0x4])) [0 <variable>.stack+0 S4 A32])) -1 (nil))

(insn 160 159 161 18 arch/arm/kernel/ptrace.c:842 (set (reg/v:SI 2 r2 [ __r2 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 234)
                (const_int 96 [0x60])) [0 <variable>.tp_value+0 S4 A64])) -1 (nil))

(insn 161 160 162 18 arch/arm/kernel/ptrace.c:842 (set (reg/v:SI 0 r0 [ __p ])
        (reg/v/f:SI 180 [ datap ])) -1 (nil))

(insn 162 161 163 18 arch/arm/kernel/ptrace.c:842 discrim 4 (parallel [
            (set (reg/v:SI 0 r0 [ __e ])
                (asm_operands/v:SI (".ifnc %0,r0 ; .err ; .endif
	.ifnc %2,r2 ; .err ; .endif
	bl	__put_user_4") ("=&r") 0 [
                        (reg/v:SI 0 r0 [ __p ])
                        (reg/v:SI 2 r2 [ __r2 ])
                    ]
                     [
                        (asm_input:SI ("0") 0)
                        (asm_input:SI ("r") 0)
                    ] 9592319))
            (clobber (reg:QI 24 cc))
            (clobber (reg:QI 14 lr))
            (clobber (reg:QI 12 ip))
        ]) -1 (nil))

(insn 163 162 164 18 arch/arm/kernel/ptrace.c:842 discrim 6 (set (reg/v:SI 181 [ ret ])
        (reg/v:SI 0 r0 [ __e ])) -1 (nil))

(jump_insn 164 163 165 18 arch/arm/kernel/ptrace.c:844 (set (pc)
        (label_ref 548)) -1 (nil))
;; End of basic block 18 -> ( 68)

;; Succ edge  68 [100.0%] 

(barrier 165 164 166)

;; Start of basic block ( 3) -> 19
;; Pred edge  3 [7.7%] 
(code_label 166 165 167 19 103 "" [1 uses])

(note 167 166 168 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 168 167 169 19 arch/arm/kernel/ptrace.c:847 (set (reg/f:SI 235)
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 188 [ child ])
                (const_int 4 [0x4])) [0 <variable>.stack+0 S4 A32])) -1 (nil))

(insn 169 168 170 19 arch/arm/kernel/ptrace.c:847 (set (mem/s/j:SI (plus:SI (reg/f:SI 235)
                (const_int 76 [0x4c])) [0 <variable>.syscall+0 S4 A32])
        (reg/v:SI 191 [ data ])) -1 (nil))

(insn 170 169 171 19 arch/arm/kernel/ptrace.c:848 (set (reg/v:SI 181 [ ret ])
        (const_int 0 [0x0])) -1 (nil))

(jump_insn 171 170 172 19 arch/arm/kernel/ptrace.c:849 (set (pc)
        (label_ref 548)) -1 (nil))
;; End of basic block 19 -> ( 68)

;; Succ edge  68 [100.0%] 

(barrier 172 171 173)

;; Start of basic block ( 3) -> 20
;; Pred edge  3 [7.7%] 
(code_label 173 172 174 20 104 "" [1 uses])

(note 174 173 175 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn 175 174 176 20 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 166 [ sp.87 ])
        (reg/v:SI 13 sp [ sp ])) -1 (nil))

(insn 176 175 177 20 include/linux/regset.h:338 (set (reg:SI 237)
        (and:SI (reg:SI 166 [ sp.87 ])
            (const_int -8129 [0xffffffffffffe03f]))) -1 (nil))

(insn 177 176 178 20 include/linux/regset.h:338 (set (reg:SI 236)
        (and:SI (reg:SI 237)
            (const_int -64 [0xffffffffffffffc0]))) -1 (expr_list:REG_EQUAL (and:SI (reg:SI 166 [ sp.87 ])
            (const_int -8192 [0xffffffffffffe000]))
        (nil)))

(insn 178 177 179 20 include/linux/regset.h:338 (set (reg:SI 238)
        (mem/s/j:SI (plus:SI (reg:SI 236)
                (const_int 8 [0x8])) [0 <variable>.addr_limit+0 S4 A64])) -1 (nil))

(insn 179 178 180 20 include/linux/regset.h:338 (parallel [
            (set (reg/v:SI 164 [ flag ])
                (asm_operands:SI ("adds %1, %2, %3; sbcccs %1, %1, %0; movcc %0, #0") ("=&r") 0 [
                        (reg/v/f:SI 180 [ datap ])
                        (const_int 260 [0x104])
                        (reg:SI 238)
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("Ir") 0)
                        (asm_input:SI ("0") 0)
                    ] 9464662))
            (set (reg/v:SI 165 [ roksum ])
                (asm_operands:SI ("adds %1, %2, %3; sbcccs %1, %1, %0; movcc %0, #0") ("=&r") 1 [
                        (reg/v/f:SI 180 [ datap ])
                        (const_int 260 [0x104])
                        (reg:SI 238)
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("Ir") 0)
                        (asm_input:SI ("0") 0)
                    ] 9464662))
            (clobber (reg:QI 24 cc))
        ]) -1 (nil))

(insn 180 179 181 20 include/linux/regset.h:338 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 164 [ flag ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 181 180 182 20 include/linux/regset.h:338 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 545)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))
;; End of basic block 20 -> ( 67 21)

;; Succ edge  67 [71.0%] 
;; Succ edge  21 [29.0%]  (fallthru)

;; Start of basic block ( 20) -> 21
;; Pred edge  20 [29.0%]  (fallthru)
(note 182 181 183 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn 183 182 184 21 include/linux/regset.h:341 (set (reg/f:SI 239)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) -1 (nil))

(insn 184 183 185 21 include/linux/regset.h:341 (set (reg:SI 240)
        (plus:SI (reg/f:SI 239)
            (const_int 172 [0xac]))) -1 (nil))

(insn 185 184 186 21 include/linux/regset.h:341 (set (reg:SI 241)
        (plus:SI (reg:SI 240)
            (const_int 72 [0x48]))) -1 (nil))

(insn 186 185 187 21 include/linux/regset.h:341 (set (reg:SI 242)
        (const_int 0 [0x0])) -1 (nil))

(insn 187 186 188 21 include/linux/regset.h:341 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg:SI 242)) -1 (nil))

(insn 188 187 189 21 include/linux/regset.h:341 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/v/f:SI 180 [ datap ])) -1 (nil))

(insn 189 188 190 21 include/linux/regset.h:341 (set (reg:SI 0 r0)
        (reg/v/f:SI 188 [ child ])) -1 (nil))

(insn 190 189 191 21 include/linux/regset.h:341 (set (reg:SI 1 r1)
        (reg:SI 241)) -1 (nil))

(insn 191 190 192 21 include/linux/regset.h:341 (set (reg:SI 2 r2)
        (const_int 0 [0x0])) -1 (nil))

(insn 192 191 193 21 include/linux/regset.h:341 (set (reg:SI 3 r3)
        (const_int 260 [0x104])) -1 (nil))

(call_insn 193 192 194 21 include/linux/regset.h:341 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_get") [flags 0x3] <function_decl 0x11582280 vfp_get>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 194 193 195 21 include/linux/regset.h:341 (set (reg/v:SI 181 [ ret ])
        (reg:SI 0 r0)) -1 (nil))

(jump_insn 195 194 196 21 include/linux/regset.h:341 (set (pc)
        (label_ref 548)) -1 (nil))
;; End of basic block 21 -> ( 68)

;; Succ edge  68 [100.0%] 

(barrier 196 195 197)

;; Start of basic block ( 3) -> 22
;; Pred edge  3 [7.7%] 
(code_label 197 196 198 22 105 "" [1 uses])

(note 198 197 199 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(insn 199 198 200 22 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 163 [ sp.87 ])
        (reg/v:SI 13 sp [ sp ])) -1 (nil))

(insn 200 199 201 22 include/linux/regset.h:361 (set (reg:SI 244)
        (and:SI (reg:SI 163 [ sp.87 ])
            (const_int -8129 [0xffffffffffffe03f]))) -1 (nil))

(insn 201 200 202 22 include/linux/regset.h:361 (set (reg:SI 243)
        (and:SI (reg:SI 244)
            (const_int -64 [0xffffffffffffffc0]))) -1 (expr_list:REG_EQUAL (and:SI (reg:SI 163 [ sp.87 ])
            (const_int -8192 [0xffffffffffffe000]))
        (nil)))

(insn 202 201 203 22 include/linux/regset.h:361 (set (reg:SI 245)
        (mem/s/j:SI (plus:SI (reg:SI 243)
                (const_int 8 [0x8])) [0 <variable>.addr_limit+0 S4 A64])) -1 (nil))

(insn 203 202 204 22 include/linux/regset.h:361 (parallel [
            (set (reg/v:SI 161 [ flag ])
                (asm_operands:SI ("adds %1, %2, %3; sbcccs %1, %1, %0; movcc %0, #0") ("=&r") 0 [
                        (reg/v/f:SI 180 [ datap ])
                        (const_int 260 [0x104])
                        (reg:SI 245)
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("Ir") 0)
                        (asm_input:SI ("0") 0)
                    ] 9467606))
            (set (reg/v:SI 162 [ roksum ])
                (asm_operands:SI ("adds %1, %2, %3; sbcccs %1, %1, %0; movcc %0, #0") ("=&r") 1 [
                        (reg/v/f:SI 180 [ datap ])
                        (const_int 260 [0x104])
                        (reg:SI 245)
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("Ir") 0)
                        (asm_input:SI ("0") 0)
                    ] 9467606))
            (clobber (reg:QI 24 cc))
        ]) -1 (nil))

(insn 204 203 205 22 include/linux/regset.h:361 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 161 [ flag ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 205 204 206 22 include/linux/regset.h:361 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 545)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))
;; End of basic block 22 -> ( 67 23)

;; Succ edge  67 [71.0%] 
;; Succ edge  23 [29.0%]  (fallthru)

;; Start of basic block ( 22) -> 23
;; Pred edge  22 [29.0%]  (fallthru)
(note 206 205 207 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(insn 207 206 208 23 include/linux/regset.h:364 (set (reg/f:SI 246)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) -1 (nil))

(insn 208 207 209 23 include/linux/regset.h:364 (set (reg:SI 247)
        (plus:SI (reg/f:SI 246)
            (const_int 172 [0xac]))) -1 (nil))

(insn 209 208 210 23 include/linux/regset.h:364 (set (reg:SI 248)
        (plus:SI (reg:SI 247)
            (const_int 72 [0x48]))) -1 (nil))

(insn 210 209 211 23 include/linux/regset.h:364 (set (reg:SI 249)
        (const_int 0 [0x0])) -1 (nil))

(insn 211 210 212 23 include/linux/regset.h:364 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg:SI 249)) -1 (nil))

(insn 212 211 213 23 include/linux/regset.h:364 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/v/f:SI 180 [ datap ])) -1 (nil))

(insn 213 212 214 23 include/linux/regset.h:364 (set (reg:SI 0 r0)
        (reg/v/f:SI 188 [ child ])) -1 (nil))

(insn 214 213 215 23 include/linux/regset.h:364 (set (reg:SI 1 r1)
        (reg:SI 248)) -1 (nil))

(insn 215 214 216 23 include/linux/regset.h:364 (set (reg:SI 2 r2)
        (const_int 0 [0x0])) -1 (nil))

(insn 216 215 217 23 include/linux/regset.h:364 (set (reg:SI 3 r3)
        (const_int 260 [0x104])) -1 (nil))

(call_insn 217 216 218 23 include/linux/regset.h:364 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_set") [flags 0x3] <function_decl 0x11582380 vfp_set>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 218 217 219 23 include/linux/regset.h:364 (set (reg/v:SI 181 [ ret ])
        (reg:SI 0 r0)) -1 (nil))

(jump_insn 219 218 220 23 include/linux/regset.h:364 (set (pc)
        (label_ref 548)) -1 (nil))
;; End of basic block 23 -> ( 68)

;; Succ edge  68 [100.0%] 

(barrier 220 219 221)

;; Start of basic block ( 3) -> 24
;; Pred edge  3 [7.7%] 
(code_label 221 220 222 24 106 "" [1 uses])

(note 222 221 223 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(insn 223 222 224 24 arch/arm/kernel/ptrace.c:879 (set (reg:SI 0 r0)
        (reg/v/f:SI 188 [ child ])) -1 (nil))

(call_insn 224 223 225 24 arch/arm/kernel/ptrace.c:879 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("ptrace_get_breakpoints") [flags 0x41] <function_decl 0x110a8680 ptrace_get_breakpoints>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 225 224 226 24 arch/arm/kernel/ptrace.c:879 (set (reg:SI 183 [ D.27292 ])
        (reg:SI 0 r0)) -1 (nil))

(insn 226 225 227 24 arch/arm/kernel/ptrace.c:879 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 183 [ D.27292 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 227 226 228 24 arch/arm/kernel/ptrace.c:879 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 540)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 1912 [0x778])
        (nil)))
;; End of basic block 24 -> ( 66 25)

;; Succ edge  66 [19.1%] 
;; Succ edge  25 [80.9%]  (fallthru)

;; Start of basic block ( 24) -> 25
;; Pred edge  24 [80.9%]  (fallthru)
(note 228 227 229 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(insn 229 228 230 25 arch/arm/kernel/ptrace.c:882 (set (reg/v:SI 160 [ num ])
        (reg/v:SI 190 [ addr ])) -1 (nil))

(insn 230 229 231 25 arch/arm/kernel/ptrace.c:472 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 160 [ num ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 231 230 232 25 arch/arm/kernel/ptrace.c:472 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 255)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))
;; End of basic block 25 -> ( 26 27)

;; Succ edge  26 [29.0%]  (fallthru)
;; Succ edge  27 [71.0%] 

;; Start of basic block ( 25) -> 26
;; Pred edge  25 [29.0%]  (fallthru)
(note 232 231 233 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(insn 233 232 234 26 arch/arm/kernel/ptrace.c:432 (set (reg:SI 0 r0)
        (const_int 0 [0x0])) -1 (nil))

(call_insn 234 233 235 26 arch/arm/kernel/ptrace.c:432 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("hw_breakpoint_slots") [flags 0x41] <function_decl 0x10ad9700 hw_breakpoint_slots>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 235 234 236 26 arch/arm/kernel/ptrace.c:432 (set (reg:SI 159 [ D.28052 ])
        (reg:SI 0 r0)) -1 (nil))

(insn 236 235 237 26 arch/arm/kernel/ptrace.c:433 (set (reg:SI 0 r0)
        (const_int 1 [0x1])) -1 (nil))

(call_insn 237 236 238 26 arch/arm/kernel/ptrace.c:433 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("hw_breakpoint_slots") [flags 0x41] <function_decl 0x10ad9700 hw_breakpoint_slots>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 238 237 239 26 arch/arm/kernel/ptrace.c:433 (set (reg:SI 158 [ D.28053 ])
        (reg:SI 0 r0)) -1 (nil))

(call_insn 239 238 240 26 arch/arm/kernel/ptrace.c:434 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("arch_get_debug_arch") [flags 0x41] <function_decl 0x10ad9400 arch_get_debug_arch>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (nil))

(insn 240 239 241 26 arch/arm/kernel/ptrace.c:434 (set (reg:SI 250)
        (reg:SI 0 r0)) -1 (nil))

(insn 241 240 242 26 arch/arm/kernel/ptrace.c:434 (set (reg/v:SI 157 [ debug_arch ])
        (reg:SI 250)) -1 (nil))

(call_insn 242 241 243 26 arch/arm/kernel/ptrace.c:435 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("arch_get_max_wp_len") [flags 0x41] <function_decl 0x10ad9480 arch_get_max_wp_len>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (nil))

(insn 243 242 244 26 arch/arm/kernel/ptrace.c:435 (set (reg:SI 251)
        (reg:SI 0 r0)) -1 (nil))

(insn 244 243 245 26 arch/arm/kernel/ptrace.c:435 (set (reg/v:SI 156 [ wp_len ])
        (reg:SI 251)) -1 (nil))

(insn 245 244 246 26 arch/arm/kernel/ptrace.c:438 (set (reg/v:SI 155 [ reg ])
        (ashift:SI (reg/v:SI 157 [ debug_arch ])
            (const_int 8 [0x8]))) -1 (nil))

(insn 246 245 247 26 arch/arm/kernel/ptrace.c:439 (set (reg/v:SI 139 [ reg.860 ])
        (ior:SI (reg/v:SI 155 [ reg ])
            (reg/v:SI 156 [ wp_len ]))) -1 (nil))

(insn 247 246 248 26 arch/arm/kernel/ptrace.c:440 (set (reg/v:SI 138 [ reg.861 ])
        (ashift:SI (reg/v:SI 139 [ reg.860 ])
            (const_int 8 [0x8]))) -1 (nil))

(insn 248 247 249 26 arch/arm/kernel/ptrace.c:441 (set (reg:SI 252)
        (zero_extend:SI (subreg:QI (reg:SI 158 [ D.28053 ]) 0))) -1 (nil))

(insn 249 248 250 26 arch/arm/kernel/ptrace.c:441 (set (reg/v:SI 137 [ reg.862 ])
        (ior:SI (reg/v:SI 138 [ reg.861 ])
            (reg:SI 252))) -1 (nil))

(insn 250 249 251 26 arch/arm/kernel/ptrace.c:443 (set (reg:SI 253)
        (ashift:SI (reg/v:SI 137 [ reg.862 ])
            (const_int 8 [0x8]))) -1 (nil))

(insn 251 250 252 26 arch/arm/kernel/ptrace.c:443 (set (reg:SI 254)
        (zero_extend:SI (subreg:QI (reg:SI 159 [ D.28052 ]) 0))) -1 (nil))

(insn 252 251 253 26 arch/arm/kernel/ptrace.c:443 (set (reg/v:SI 152 [ reg ])
        (ior:SI (reg:SI 253)
            (reg:SI 254))) -1 (nil))

(jump_insn 253 252 254 26 arch/arm/kernel/ptrace.c:443 (set (pc)
        (label_ref 337)) -1 (nil))
;; End of basic block 26 -> ( 40)

;; Succ edge  40 [100.0%] 

(barrier 254 253 255)

;; Start of basic block ( 25) -> 27
;; Pred edge  25 [71.0%] 
(code_label 255 254 256 27 114 "" [1 uses])

(note 256 255 257 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(insn 257 256 258 27 arch/arm/kernel/ptrace.c:358 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 160 [ num ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 258 257 259 27 arch/arm/kernel/ptrace.c:358 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 263)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 2700 [0xa8c])
        (nil)))
;; End of basic block 27 -> ( 29 28)

;; Succ edge  29 [27.0%] 
;; Succ edge  28 [73.0%]  (fallthru)

;; Start of basic block ( 27) -> 28
;; Pred edge  27 [73.0%]  (fallthru)
(note 259 258 260 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(insn 260 259 261 28 arch/arm/kernel/ptrace.c:358 (set (reg/v:SI 136 [ num.864 ])
        (reg/v:SI 160 [ num ])) -1 (nil))

(jump_insn 261 260 262 28 arch/arm/kernel/ptrace.c:358 (set (pc)
        (label_ref 266)) -1 (nil))
;; End of basic block 28 -> ( 30)

;; Succ edge  30 [100.0%] 

(barrier 262 261 263)

;; Start of basic block ( 27) -> 29
;; Pred edge  27 [27.0%] 
(code_label 263 262 264 29 116 "" [1 uses])

(note 264 263 265 29 [bb 29] NOTE_INSN_BASIC_BLOCK)

(insn 265 264 266 29 arch/arm/kernel/ptrace.c:359 (set (reg/v:SI 136 [ num.864 ])
        (minus:SI (const_int 32 [0x20])
            (reg/v:SI 160 [ num ]))) -1 (nil))
;; End of basic block 29 -> ( 30)

;; Succ edge  30 [100.0%]  (fallthru)

;; Start of basic block ( 28 29) -> 30
;; Pred edge  28 [100.0%] 
;; Pred edge  29 [100.0%]  (fallthru)
(code_label 266 265 267 30 117 "" [1 uses])

(note 267 266 268 30 [bb 30] NOTE_INSN_BASIC_BLOCK)

(insn 268 267 269 30 arch/arm/kernel/ptrace.c:360 (set (reg:SI 255)
        (plus:SI (reg/v:SI 136 [ num.864 ])
            (const_int -1 [0xffffffffffffffff]))) -1 (nil))

(insn 269 268 270 30 arch/arm/kernel/ptrace.c:360 (set (reg/v:SI 153 [ idx ])
        (ashiftrt:SI (reg:SI 255)
            (const_int 1 [0x1]))) -1 (nil))

(insn 270 269 271 30 arch/arm/kernel/ptrace.c:476 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 153 [ idx ])
            (const_int 31 [0x1f]))) -1 (nil))

(jump_insn 271 270 272 30 arch/arm/kernel/ptrace.c:476 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 276)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 30 -> ( 31 32)

;; Succ edge  31 [50.0%]  (fallthru)
;; Succ edge  32 [50.0%] 

;; Start of basic block ( 30) -> 31
;; Pred edge  30 [50.0%]  (fallthru)
(note 272 271 273 31 [bb 31] NOTE_INSN_BASIC_BLOCK)

(insn 273 272 274 31 arch/arm/kernel/ptrace.c:477 (set (reg/v:SI 181 [ ret ])
        (const_int -22 [0xffffffffffffffea])) -1 (nil))

(jump_insn 274 273 275 31 arch/arm/kernel/ptrace.c:477 (set (pc)
        (label_ref 352)) -1 (nil))
;; End of basic block 31 -> ( 43)

;; Succ edge  43 [100.0%] 

(barrier 275 274 276)

;; Start of basic block ( 30) -> 32
;; Pred edge  30 [50.0%] 
(code_label 276 275 277 32 118 "" [1 uses])

(note 277 276 278 32 [bb 32] NOTE_INSN_BASIC_BLOCK)

(insn 278 277 279 32 arch/arm/kernel/ptrace.c:481 (set (reg:SI 256)
        (plus:SI (reg/v:SI 153 [ idx ])
            (const_int 198 [0xc6]))) -1 (nil))

(insn 279 278 280 32 arch/arm/kernel/ptrace.c:481 (set (reg:SI 257)
        (const_int 4 [0x4])) -1 (nil))

(insn 280 279 281 32 arch/arm/kernel/ptrace.c:481 (set (reg:SI 258)
        (ashift:SI (reg:SI 256)
            (const_int 2 [0x2]))) -1 (nil))

(insn 281 280 282 32 arch/arm/kernel/ptrace.c:481 (set (reg:SI 259)
        (plus:SI (reg/v/f:SI 188 [ child ])
            (reg:SI 258))) -1 (nil))

(insn 282 281 283 32 arch/arm/kernel/ptrace.c:481 (set (reg/f:SI 260)
        (plus:SI (reg:SI 259)
            (reg:SI 257))) -1 (nil))

(insn 283 282 284 32 arch/arm/kernel/ptrace.c:481 (set (reg/v/f:SI 154 [ bp ])
        (mem/s/f/j:SI (reg/f:SI 260) [0 <variable>.thread.debug.hbp S4 A32])) -1 (nil))

(insn 284 283 285 32 arch/arm/kernel/ptrace.c:482 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 154 [ bp ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 285 284 286 32 arch/arm/kernel/ptrace.c:482 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 290)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 8500 [0x2134])
        (nil)))
;; End of basic block 32 -> ( 33 34)

;; Succ edge  33 [15.0%]  (fallthru)
;; Succ edge  34 [85.0%] 

;; Start of basic block ( 32) -> 33
;; Pred edge  32 [15.0%]  (fallthru)
(note 286 285 287 33 [bb 33] NOTE_INSN_BASIC_BLOCK)

(insn 287 286 288 33 arch/arm/kernel/ptrace.c:483 (set (reg/v:SI 152 [ reg ])
        (const_int 0 [0x0])) -1 (nil))

(jump_insn 288 287 289 33 arch/arm/kernel/ptrace.c:483 (set (pc)
        (label_ref 337)) -1 (nil))
;; End of basic block 33 -> ( 40)

;; Succ edge  40 [100.0%] 

(barrier 289 288 290)

;; Start of basic block ( 32) -> 34
;; Pred edge  32 [85.0%] 
(code_label 290 289 291 34 120 "" [1 uses])

(note 291 290 292 34 [bb 34] NOTE_INSN_BASIC_BLOCK)

(insn 292 291 293 34 arch/arm/kernel/ptrace.c:487 (set (reg/v:SI 185 [ arch_ctrl ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 154 [ bp ])
                (const_int 212 [0xd4])) [0 <variable>.hw.D.25978.D.25977.info.ctrl+0 S4 A32])) -1 (nil))

(insn 293 292 294 34 arch/arm/kernel/ptrace.c:487 (set (subreg:SI (reg:QI 261) 0)
        (zero_extract:SI (reg/v:SI 185 [ arch_ctrl ])
            (const_int 8 [0x8])
            (const_int 19 [0x13]))) -1 (nil))

(insn 294 293 295 34 arch/arm/kernel/ptrace.c:487 (set (reg:SI 140 [ arch_ctrl$len ])
        (zero_extend:SI (reg:QI 261))) -1 (nil))

(insn 295 294 296 34 arch/arm/kernel/ptrace.c:487 (set (reg:SI 141 [ arch_ctrl$len ])
        (reg:SI 140 [ arch_ctrl$len ])) -1 (nil))

(jump_insn 296 295 297 34 arch/arm/kernel/ptrace.c:487 (set (pc)
        (label_ref 301)) -1 (nil))
;; End of basic block 34 -> ( 36)

;; Succ edge  36 [100.0%] 

(barrier 297 296 303)

;; Start of basic block ( 36) -> 35
;; Pred edge  36 [91.0%] 
(code_label 303 297 298 35 122 "" [1 uses])

(note 298 303 299 35 [bb 35] NOTE_INSN_BASIC_BLOCK)

(insn 299 298 300 35 arch/arm/kernel/ptrace.c:494 (set (reg:SI 262)
        (lshiftrt:SI (reg:SI 141 [ arch_ctrl$len ])
            (const_int 1 [0x1]))) -1 (nil))

(insn 300 299 301 35 arch/arm/kernel/ptrace.c:494 (set (reg:SI 141 [ arch_ctrl$len ])
        (zero_extend:SI (subreg:QI (reg:SI 262) 0))) -1 (nil))
;; End of basic block 35 -> ( 36)

;; Succ edge  36 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 34 35) -> 36
;; Pred edge  34 [100.0%] 
;; Pred edge  35 [100.0%]  (fallthru,dfs_back)
(code_label 301 300 302 36 121 "" [1 uses])

(note 302 301 304 36 [bb 36] NOTE_INSN_BASIC_BLOCK)

(insn 304 302 305 36 arch/arm/kernel/ptrace.c:493 discrim 1 (set (reg:SI 263)
        (and:SI (reg:SI 141 [ arch_ctrl$len ])
            (const_int 1 [0x1]))) -1 (nil))

(insn 305 304 306 36 arch/arm/kernel/ptrace.c:493 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 263)
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 306 305 307 36 arch/arm/kernel/ptrace.c:493 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 303)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
        (nil)))
;; End of basic block 36 -> ( 35 37)

;; Succ edge  35 [91.0%] 
;; Succ edge  37 [9.0%]  (fallthru)

;; Start of basic block ( 36) -> 37
;; Pred edge  36 [9.0%]  (fallthru)
(note 307 306 308 37 [bb 37] NOTE_INSN_BASIC_BLOCK)

(insn 308 307 309 37 arch/arm/kernel/ptrace.c:496 (set (reg:SI 264)
        (and:SI (reg/v:SI 160 [ num ])
            (const_int 1 [0x1]))) -1 (nil))

(insn 309 308 310 37 arch/arm/kernel/ptrace.c:496 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 264)
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 310 309 311 37 arch/arm/kernel/ptrace.c:496 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 315)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 37 -> ( 38 39)

;; Succ edge  38 [50.0%]  (fallthru)
;; Succ edge  39 [50.0%] 

;; Start of basic block ( 37) -> 38
;; Pred edge  37 [50.0%]  (fallthru)
(note 311 310 312 38 [bb 38] NOTE_INSN_BASIC_BLOCK)

(insn 312 311 313 38 arch/arm/kernel/ptrace.c:497 (set (reg/v:SI 152 [ reg ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 154 [ bp ])
                (const_int 176 [0xb0])) [0 <variable>.attr.D.23452.bp_addr+0 S4 A64])) -1 (nil))

(jump_insn 313 312 314 38 arch/arm/kernel/ptrace.c:497 (set (pc)
        (label_ref 337)) -1 (nil))
;; End of basic block 38 -> ( 40)

;; Succ edge  40 [100.0%] 

(barrier 314 313 315)

;; Start of basic block ( 37) -> 39
;; Pred edge  37 [50.0%] 
(code_label 315 314 316 39 123 "" [1 uses])

(note 316 315 317 39 [bb 39] NOTE_INSN_BASIC_BLOCK)

(insn 317 316 318 39 arch/arm/kernel/ptrace.c:497 (set (zero_extract:SI (reg/v:SI 185 [ arch_ctrl ])
            (const_int 8 [0x8])
            (const_int 19 [0x13]))
        (reg:SI 141 [ arch_ctrl$len ])) -1 (nil))

(insn 318 317 319 39 arch/arm/kernel/ptrace.c:497 (set (reg/v:SI 186 [ ctrl ])
        (reg/v:SI 185 [ arch_ctrl ])) -1 (nil))

(insn 319 318 320 39 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (subreg:SI (reg:QI 265) 0)
        (zero_extract:SI (reg/v:SI 186 [ ctrl ])
            (const_int 1 [0x1])
            (const_int 9 [0x9]))) -1 (nil))

(insn 320 319 321 39 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg:SI 266)
        (zero_extend:SI (reg:QI 265))) -1 (nil))

(insn 321 320 322 39 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg:SI 267)
        (ashift:SI (reg:SI 266)
            (const_int 22 [0x16]))) -1 (nil))

(insn 322 321 323 39 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (subreg:SI (reg:QI 268) 0)
        (zero_extract:SI (reg/v:SI 186 [ ctrl ])
            (const_int 8 [0x8])
            (const_int 19 [0x13]))) -1 (nil))

(insn 323 322 324 39 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg:SI 269)
        (zero_extend:SI (reg:QI 268))) -1 (nil))

(insn 324 323 325 39 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg:SI 270)
        (ashift:SI (reg:SI 269)
            (const_int 5 [0x5]))) -1 (nil))

(insn 325 324 326 39 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg:SI 271)
        (ior:SI (reg:SI 267)
            (reg:SI 270))) -1 (nil))

(insn 326 325 327 39 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (subreg:SI (reg:QI 272) 0)
        (zero_extract:SI (reg/v:SI 186 [ ctrl ])
            (const_int 1 [0x1])
            (const_int 31 [0x1f]))) -1 (nil))

(insn 327 326 328 39 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg:SI 273)
        (zero_extend:SI (reg:QI 272))) -1 (nil))

(insn 328 327 329 39 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg:SI 274)
        (ior:SI (reg:SI 271)
            (reg:SI 273))) -1 (nil))

(insn 329 328 330 39 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (subreg:SI (reg:QI 275) 0)
        (zero_extract:SI (reg/v:SI 186 [ ctrl ])
            (const_int 2 [0x2])
            (const_int 27 [0x1b]))) -1 (nil))

(insn 330 329 331 39 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg:SI 276)
        (zero_extend:SI (reg:QI 275))) -1 (nil))

(insn 331 330 332 39 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg:SI 277)
        (ashift:SI (reg:SI 276)
            (const_int 3 [0x3]))) -1 (nil))

(insn 332 331 333 39 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg:SI 278)
        (ior:SI (reg:SI 274)
            (reg:SI 277))) -1 (nil))

(insn 333 332 334 39 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (subreg:SI (reg:QI 279) 0)
        (zero_extract:SI (reg/v:SI 186 [ ctrl ])
            (const_int 2 [0x2])
            (const_int 29 [0x1d]))) -1 (nil))

(insn 334 333 335 39 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg:SI 280)
        (zero_extend:SI (reg:QI 279))) -1 (nil))

(insn 335 334 336 39 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg:SI 281)
        (ashift:SI (reg:SI 280)
            (const_int 1 [0x1]))) -1 (nil))

(insn 336 335 337 39 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg/v:SI 152 [ reg ])
        (ior:SI (reg:SI 278)
            (reg:SI 281))) -1 (nil))
;; End of basic block 39 -> ( 40)

;; Succ edge  40 [100.0%]  (fallthru)

;; Start of basic block ( 26 33 38 39) -> 40
;; Pred edge  26 [100.0%] 
;; Pred edge  33 [100.0%] 
;; Pred edge  38 [100.0%] 
;; Pred edge  39 [100.0%]  (fallthru)
(code_label 337 336 338 40 115 ("put") [3 uses])

(note 338 337 339 40 [bb 40] NOTE_INSN_BASIC_BLOCK)

(insn 339 338 340 40 arch/arm/kernel/ptrace.c:503 (set (reg/v:SI 2 r2 [ __r2 ])
        (reg/v:SI 152 [ reg ])) -1 (nil))

(insn 340 339 341 40 arch/arm/kernel/ptrace.c:503 (set (reg/v:SI 0 r0 [ __p ])
        (reg/v/f:SI 180 [ datap ])) -1 (nil))

(insn 341 340 342 40 arch/arm/kernel/ptrace.c:503 discrim 4 (parallel [
            (set (reg/v:SI 0 r0 [ __e ])
                (asm_operands/v:SI (".ifnc %0,r0 ; .err ; .endif
	.ifnc %2,r2 ; .err ; .endif
	bl	__put_user_4") ("=&r") 0 [
                        (reg/v:SI 0 r0 [ __p ])
                        (reg/v:SI 2 r2 [ __r2 ])
                    ]
                     [
                        (asm_input:SI ("0") 0)
                        (asm_input:SI ("r") 0)
                    ] 9592350))
            (clobber (reg:QI 24 cc))
            (clobber (reg:QI 14 lr))
            (clobber (reg:QI 12 ip))
        ]) -1 (nil))

(insn 342 341 343 40 arch/arm/kernel/ptrace.c:503 discrim 6 (set (reg:SI 151 [ D.28058 ])
        (reg/v:SI 0 r0 [ __e ])) -1 (nil))

(insn 343 342 344 40 arch/arm/kernel/ptrace.c:503 discrim 6 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 151 [ D.28058 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 344 343 345 40 arch/arm/kernel/ptrace.c:503 discrim 6 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 349)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 40 -> ( 41 42)

;; Succ edge  41 [50.0%]  (fallthru)
;; Succ edge  42 [50.0%] 

;; Start of basic block ( 40) -> 41
;; Pred edge  40 [50.0%]  (fallthru)
(note 345 344 346 41 [bb 41] NOTE_INSN_BASIC_BLOCK)

(insn 346 345 347 41 arch/arm/kernel/ptrace.c:504 (set (reg/v:SI 181 [ ret ])
        (const_int -14 [0xfffffffffffffff2])) -1 (nil))

(jump_insn 347 346 348 41 arch/arm/kernel/ptrace.c:504 (set (pc)
        (label_ref 352)) -1 (nil))
;; End of basic block 41 -> ( 43)

;; Succ edge  43 [100.0%] 

(barrier 348 347 349)

;; Start of basic block ( 40) -> 42
;; Pred edge  40 [50.0%] 
(code_label 349 348 350 42 124 "" [1 uses])

(note 350 349 351 42 [bb 42] NOTE_INSN_BASIC_BLOCK)

(insn 351 350 352 42 arch/arm/kernel/ptrace.c:468 (set (reg/v:SI 181 [ ret ])
        (const_int 0 [0x0])) -1 (nil))
;; End of basic block 42 -> ( 43)

;; Succ edge  43 [100.0%]  (fallthru)

;; Start of basic block ( 31 42 41) -> 43
;; Pred edge  31 [100.0%] 
;; Pred edge  42 [100.0%]  (fallthru)
;; Pred edge  41 [100.0%] 
(code_label 352 351 353 43 119 ("out") [2 uses])

(note 353 352 354 43 [bb 43] NOTE_INSN_BASIC_BLOCK)

(insn 354 353 355 43 arch/arm/kernel/ptrace.c:884 (set (reg:SI 0 r0)
        (reg/v/f:SI 188 [ child ])) -1 (nil))

(call_insn 355 354 356 43 arch/arm/kernel/ptrace.c:884 (parallel [
            (call (mem:SI (symbol_ref:SI ("ptrace_put_breakpoints") [flags 0x41] <function_decl 0x110a8700 ptrace_put_breakpoints>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(jump_insn 356 355 357 43 arch/arm/kernel/ptrace.c:885 (set (pc)
        (label_ref 548)) -1 (nil))
;; End of basic block 43 -> ( 68)

;; Succ edge  68 [100.0%] 

(barrier 357 356 358)

;; Start of basic block ( 3) -> 44
;; Pred edge  3 [7.7%] 
(code_label 358 357 359 44 107 "" [1 uses])

(note 359 358 360 44 [bb 44] NOTE_INSN_BASIC_BLOCK)

(insn 360 359 361 44 arch/arm/kernel/ptrace.c:887 (set (reg:SI 0 r0)
        (reg/v/f:SI 188 [ child ])) -1 (nil))

(call_insn 361 360 362 44 arch/arm/kernel/ptrace.c:887 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("ptrace_get_breakpoints") [flags 0x41] <function_decl 0x110a8680 ptrace_get_breakpoints>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 362 361 363 44 arch/arm/kernel/ptrace.c:887 (set (reg:SI 182 [ D.27299 ])
        (reg:SI 0 r0)) -1 (nil))

(insn 363 362 364 44 arch/arm/kernel/ptrace.c:887 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 182 [ D.27299 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 364 363 365 44 arch/arm/kernel/ptrace.c:887 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 540)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 1912 [0x778])
        (nil)))
;; End of basic block 44 -> ( 66 45)

;; Succ edge  66 [19.1%] 
;; Succ edge  45 [80.9%]  (fallthru)

;; Start of basic block ( 44) -> 45
;; Pred edge  44 [80.9%]  (fallthru)
(note 365 364 366 45 [bb 45] NOTE_INSN_BASIC_BLOCK)

(insn 366 365 367 45 arch/arm/kernel/ptrace.c:890 (set (reg/v:SI 150 [ num ])
        (reg/v:SI 190 [ addr ])) -1 (nil))

(insn 367 366 368 45 arch/arm/kernel/ptrace.c:519 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 150 [ num ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 368 367 369 45 arch/arm/kernel/ptrace.c:519 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 373)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 45 -> ( 46 47)

;; Succ edge  46 [50.0%]  (fallthru)
;; Succ edge  47 [50.0%] 

;; Start of basic block ( 45) -> 46
;; Pred edge  45 [50.0%]  (fallthru)
(note 369 368 370 46 [bb 46] NOTE_INSN_BASIC_BLOCK)

(insn 370 369 371 46 arch/arm/kernel/ptrace.c:513 (set (reg/v:SI 181 [ ret ])
        (const_int 0 [0x0])) -1 (nil))

(jump_insn 371 370 372 46 arch/arm/kernel/ptrace.c:513 (set (pc)
        (label_ref 524)) -1 (nil))
;; End of basic block 46 -> ( 64)

;; Succ edge  64 [100.0%] 

(barrier 372 371 373)

;; Start of basic block ( 45) -> 47
;; Pred edge  45 [50.0%] 
(code_label 373 372 374 47 125 "" [1 uses])

(note 374 373 375 47 [bb 47] NOTE_INSN_BASIC_BLOCK)

(insn 375 374 376 47 arch/arm/kernel/ptrace.c:521 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 150 [ num ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 376 375 377 47 arch/arm/kernel/ptrace.c:521 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 382)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 2700 [0xa8c])
        (nil)))
;; End of basic block 47 -> ( 49 48)

;; Succ edge  49 [27.0%] 
;; Succ edge  48 [73.0%]  (fallthru)

;; Start of basic block ( 47) -> 48
;; Pred edge  47 [73.0%]  (fallthru)
(note 377 376 378 48 [bb 48] NOTE_INSN_BASIC_BLOCK)

(insn 378 377 379 48 arch/arm/kernel/ptrace.c:521 (set (reg/v:SI 135 [ num.865 ])
        (reg/v:SI 150 [ num ])) -1 (nil))

(insn 379 378 380 48 arch/arm/kernel/ptrace.c:524 (set (reg/v:SI 146 [ implied_type ])
        (const_int 4 [0x4])) -1 (nil))

(jump_insn 380 379 381 48 arch/arm/kernel/ptrace.c:524 (set (pc)
        (label_ref 386)) -1 (nil))
;; End of basic block 48 -> ( 50)

;; Succ edge  50 [100.0%] 

(barrier 381 380 382)

;; Start of basic block ( 47) -> 49
;; Pred edge  47 [27.0%] 
(code_label 382 381 383 49 127 "" [1 uses])

(note 383 382 384 49 [bb 49] NOTE_INSN_BASIC_BLOCK)

(insn 384 383 385 49 arch/arm/kernel/ptrace.c:359 (set (reg/v:SI 135 [ num.865 ])
        (minus:SI (const_int 32 [0x20])
            (reg/v:SI 150 [ num ]))) -1 (nil))

(insn 385 384 386 49 arch/arm/kernel/ptrace.c:522 (set (reg/v:SI 146 [ implied_type ])
        (const_int 3 [0x3])) -1 (nil))
;; End of basic block 49 -> ( 50)

;; Succ edge  50 [100.0%]  (fallthru)

;; Start of basic block ( 48 49) -> 50
;; Pred edge  48 [100.0%] 
;; Pred edge  49 [100.0%]  (fallthru)
(code_label 386 385 387 50 128 "" [1 uses])

(note 387 386 388 50 [bb 50] NOTE_INSN_BASIC_BLOCK)

(insn 388 387 389 50 arch/arm/kernel/ptrace.c:360 (set (reg:SI 282)
        (plus:SI (reg/v:SI 135 [ num.865 ])
            (const_int -1 [0xffffffffffffffff]))) -1 (nil))

(insn 389 388 390 50 arch/arm/kernel/ptrace.c:360 (set (reg/v:SI 145 [ idx ])
        (ashiftrt:SI (reg:SI 282)
            (const_int 1 [0x1]))) -1 (nil))

(insn 390 389 391 50 arch/arm/kernel/ptrace.c:527 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 145 [ idx ])
            (const_int 31 [0x1f]))) -1 (nil))

(jump_insn 391 390 392 50 arch/arm/kernel/ptrace.c:527 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 521)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 50 -> ( 63 51)

;; Succ edge  63 [50.0%] 
;; Succ edge  51 [50.0%]  (fallthru)

;; Start of basic block ( 50) -> 51
;; Pred edge  50 [50.0%]  (fallthru)
(note 392 391 393 51 [bb 51] NOTE_INSN_BASIC_BLOCK)

(insn 393 392 394 51 arch/arm/kernel/ptrace.c:532 (set (reg/v:SI 0 r0 [ __p ])
        (reg/v/f:SI 180 [ datap ])) -1 (nil))

(insn 394 393 395 51 arch/arm/kernel/ptrace.c:532 discrim 4 (parallel [
            (set (reg/v:SI 0 r0 [ __e ])
                (asm_operands/v:SI (".ifnc %0,r0 ; .err ; .endif
	.ifnc %1,r2 ; .err ; .endif
	bl	__get_user_4") ("=&r") 0 [
                        (reg/v:SI 0 r0 [ __p ])
                    ]
                     [
                        (asm_input:SI ("0") 0)
                    ] 9592356))
            (set (reg/v:SI 2 r2 [ __r2 ])
                (asm_operands/v:SI (".ifnc %0,r0 ; .err ; .endif
	.ifnc %1,r2 ; .err ; .endif
	bl	__get_user_4") ("=r") 1 [
                        (reg/v:SI 0 r0 [ __p ])
                    ]
                     [
                        (asm_input:SI ("0") 0)
                    ] 9592356))
            (clobber (reg:QI 24 cc))
            (clobber (reg:QI 14 lr))
        ]) -1 (nil))

(insn 395 394 396 51 arch/arm/kernel/ptrace.c:532 discrim 5 (set (reg/v:SI 147 [ user_val ])
        (reg/v:SI 2 r2 [ __r2 ])) -1 (nil))

(insn 396 395 397 51 arch/arm/kernel/ptrace.c:532 discrim 5 (set (reg:SI 142 [ D.28105 ])
        (reg/v:SI 0 r0 [ __e ])) -1 (nil))

(insn 397 396 398 51 arch/arm/kernel/ptrace.c:532 discrim 5 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 142 [ D.28105 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 398 397 399 51 arch/arm/kernel/ptrace.c:532 discrim 5 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 403)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 51 -> ( 52 53)

;; Succ edge  52 [50.0%]  (fallthru)
;; Succ edge  53 [50.0%] 

;; Start of basic block ( 51) -> 52
;; Pred edge  51 [50.0%]  (fallthru)
(note 399 398 400 52 [bb 52] NOTE_INSN_BASIC_BLOCK)

(insn 400 399 401 52 arch/arm/kernel/ptrace.c:533 (set (reg/v:SI 181 [ ret ])
        (const_int -14 [0xfffffffffffffff2])) -1 (nil))

(jump_insn 401 400 402 52 arch/arm/kernel/ptrace.c:533 (set (pc)
        (label_ref 524)) -1 (nil))
;; End of basic block 52 -> ( 64)

;; Succ edge  64 [100.0%] 

(barrier 402 401 403)

;; Start of basic block ( 51) -> 53
;; Pred edge  51 [50.0%] 
(code_label 403 402 404 53 130 "" [1 uses])

(note 404 403 405 53 [bb 53] NOTE_INSN_BASIC_BLOCK)

(insn 405 404 406 53 arch/arm/kernel/ptrace.c:537 (set (reg:SI 283)
        (plus:SI (reg/v:SI 145 [ idx ])
            (const_int 198 [0xc6]))) -1 (nil))

(insn 406 405 407 53 arch/arm/kernel/ptrace.c:537 (set (reg:SI 284)
        (const_int 4 [0x4])) -1 (nil))

(insn 407 406 408 53 arch/arm/kernel/ptrace.c:537 (set (reg:SI 285)
        (ashift:SI (reg:SI 283)
            (const_int 2 [0x2]))) -1 (nil))

(insn 408 407 409 53 arch/arm/kernel/ptrace.c:537 (set (reg:SI 286)
        (plus:SI (reg/v/f:SI 188 [ child ])
            (reg:SI 285))) -1 (nil))

(insn 409 408 410 53 arch/arm/kernel/ptrace.c:537 (set (reg/f:SI 287)
        (plus:SI (reg:SI 286)
            (reg:SI 284))) -1 (nil))

(insn 410 409 411 53 arch/arm/kernel/ptrace.c:537 (set (reg/v/f:SI 148 [ bp ])
        (mem/s/f/j:SI (reg/f:SI 287) [0 <variable>.thread.debug.hbp S4 A32])) -1 (nil))

(insn 411 410 412 53 arch/arm/kernel/ptrace.c:538 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 148 [ bp ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 412 411 413 53 arch/arm/kernel/ptrace.c:538 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 432)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 9328 [0x2470])
        (nil)))
;; End of basic block 53 -> ( 54 57)

;; Succ edge  54 [6.7%]  (fallthru)
;; Succ edge  57 [93.3%] 

;; Start of basic block ( 53) -> 54
;; Pred edge  53 [6.7%]  (fallthru)
(note 413 412 414 54 [bb 54] NOTE_INSN_BASIC_BLOCK)

(insn 414 413 415 54 arch/arm/kernel/ptrace.c:539 (set (reg:SI 0 r0)
        (reg/v/f:SI 188 [ child ])) -1 (nil))

(insn 415 414 416 54 arch/arm/kernel/ptrace.c:539 (set (reg:SI 1 r1)
        (reg/v:SI 146 [ implied_type ])) -1 (nil))

(call_insn 416 415 417 54 arch/arm/kernel/ptrace.c:539 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("ptrace_hbp_create") [flags 0x3] <function_decl 0x1155bb80 ptrace_hbp_create>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 417 416 418 54 arch/arm/kernel/ptrace.c:539 (set (reg/v/f:SI 148 [ bp ])
        (reg:SI 0 r0)) -1 (nil))

(insn 418 417 419 54 include/linux/err.h:34 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 148 [ bp ])
            (const_int -4096 [0xfffffffffffff000]))) -1 (nil))

(jump_insn 419 418 420 54 include/linux/err.h:34 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 424)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 54 -> ( 55 56)

;; Succ edge  55 [0.0%]  (fallthru)
;; Succ edge  56 [100.0%] 

;; Start of basic block ( 54) -> 55
;; Pred edge  54 [0.0%]  (fallthru)
(note 420 419 421 55 [bb 55] NOTE_INSN_BASIC_BLOCK)

(insn 421 420 422 55 include/linux/err.h:29 (set (reg/v:SI 181 [ ret ])
        (reg/v/f:SI 148 [ bp ])) -1 (nil))

(jump_insn 422 421 423 55 include/linux/err.h:29 (set (pc)
        (label_ref 524)) -1 (nil))
;; End of basic block 55 -> ( 64)

;; Succ edge  64 [100.0%] 

(barrier 423 422 424)

;; Start of basic block ( 54) -> 56
;; Pred edge  54 [100.0%] 
(code_label 424 423 425 56 132 "" [1 uses])

(note 425 424 426 56 [bb 56] NOTE_INSN_BASIC_BLOCK)

(insn 426 425 427 56 arch/arm/kernel/ptrace.c:544 (set (reg:SI 288)
        (plus:SI (reg/v:SI 145 [ idx ])
            (const_int 198 [0xc6]))) -1 (nil))

(insn 427 426 428 56 arch/arm/kernel/ptrace.c:544 (set (reg:SI 289)
        (const_int 4 [0x4])) -1 (nil))

(insn 428 427 429 56 arch/arm/kernel/ptrace.c:544 (set (reg:SI 290)
        (ashift:SI (reg:SI 288)
            (const_int 2 [0x2]))) -1 (nil))

(insn 429 428 430 56 arch/arm/kernel/ptrace.c:544 (set (reg:SI 291)
        (plus:SI (reg/v/f:SI 188 [ child ])
            (reg:SI 290))) -1 (nil))

(insn 430 429 431 56 arch/arm/kernel/ptrace.c:544 (set (reg/f:SI 292)
        (plus:SI (reg:SI 291)
            (reg:SI 289))) -1 (nil))

(insn 431 430 432 56 arch/arm/kernel/ptrace.c:544 (set (mem/s/f/j:SI (reg/f:SI 292) [0 <variable>.thread.debug.hbp S4 A32])
        (reg/v/f:SI 148 [ bp ])) -1 (nil))
;; End of basic block 56 -> ( 57)

;; Succ edge  57 [100.0%]  (fallthru)

;; Start of basic block ( 53 56) -> 57
;; Pred edge  53 [93.3%] 
;; Pred edge  56 [100.0%]  (fallthru)
(code_label 432 431 433 57 131 "" [1 uses])

(note 433 432 434 57 [bb 57] NOTE_INSN_BASIC_BLOCK)

(insn 434 433 435 57 arch/arm/kernel/ptrace.c:547 (set (reg:SI 293)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -80 [0xffffffffffffffb0]))) -1 (nil))

(insn 435 434 436 57 arch/arm/kernel/ptrace.c:547 (set (reg:SI 294)
        (plus:SI (reg/v/f:SI 148 [ bp ])
            (const_int 120 [0x78]))) -1 (nil))

(insn 436 435 437 57 arch/arm/kernel/ptrace.c:547 (set (reg:SI 295)
        (const_int 72 [0x48])) -1 (nil))

(insn 437 436 438 57 arch/arm/kernel/ptrace.c:547 (set (reg:SI 0 r0)
        (reg:SI 293)) -1 (nil))

(insn 438 437 439 57 arch/arm/kernel/ptrace.c:547 (set (reg:SI 1 r1)
        (reg:SI 294)) -1 (nil))

(insn 439 438 440 57 arch/arm/kernel/ptrace.c:547 (set (reg:SI 2 r2)
        (reg:SI 295)) -1 (nil))

(call_insn 440 439 441 57 arch/arm/kernel/ptrace.c:547 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41] <function_decl 0x115c3d80 memcpy>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 441 440 442 57 arch/arm/kernel/ptrace.c:547 (set (reg:SI 296)
        (reg:SI 0 r0)) -1 (nil))

(insn 442 441 443 57 arch/arm/kernel/ptrace.c:549 (set (reg:SI 297)
        (and:SI (reg/v:SI 150 [ num ])
            (const_int 1 [0x1]))) -1 (nil))

(insn 443 442 444 57 arch/arm/kernel/ptrace.c:549 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 297)
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 444 443 445 57 arch/arm/kernel/ptrace.c:549 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 450)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
        (nil)))
;; End of basic block 57 -> ( 58 59)

;; Succ edge  58 [71.0%]  (fallthru)
;; Succ edge  59 [29.0%] 

;; Start of basic block ( 57) -> 58
;; Pred edge  57 [71.0%]  (fallthru)
(note 445 444 446 58 [bb 58] NOTE_INSN_BASIC_BLOCK)

(insn 446 445 447 58 arch/arm/kernel/ptrace.c:551 (set (reg:DI 298)
        (zero_extend:DI (reg/v:SI 147 [ user_val ]))) -1 (nil))

(insn 447 446 448 58 arch/arm/kernel/ptrace.c:551 (set (mem/s/j/c:DI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 attr.D.23452.bp_addr+0 S8 A64])
        (reg:DI 298)) -1 (nil))

(jump_insn 448 447 449 58 arch/arm/kernel/ptrace.c:551 (set (pc)
        (label_ref 512)) -1 (nil))
;; End of basic block 58 -> ( 62)

;; Succ edge  62 [100.0%] 

(barrier 449 448 450)

;; Start of basic block ( 57) -> 59
;; Pred edge  57 [29.0%] 
(code_label 450 449 451 59 133 "" [1 uses])

(note 451 450 452 59 [bb 59] NOTE_INSN_BASIC_BLOCK)

(insn 452 451 453 59 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:36 (set (reg:QI 299)
        (subreg:QI (reg/v:SI 147 [ user_val ]) 0)) -1 (nil))

(insn 453 452 454 59 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:36 (set (reg:SI 300)
        (and:SI (subreg:SI (reg:QI 299) 0)
            (const_int 1 [0x1]))) -1 (nil))

(insn 454 453 455 59 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:36 (set (reg:QI 301)
        (subreg:QI (reg:SI 300) 0)) -1 (nil))

(insn 455 454 456 59 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:36 (set (reg:SI 302)
        (and:SI (subreg:SI (reg:QI 301) 0)
            (const_int 1 [0x1]))) -1 (nil))

(insn 456 455 457 59 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:36 (set (reg:QI 303)
        (subreg:QI (reg:SI 302) 0)) -1 (nil))

(insn 457 456 458 59 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:36 (set (reg:SI 304)
        (and:SI (subreg:SI (reg:QI 303) 0)
            (const_int 1 [0x1]))) -1 (nil))

(insn 458 457 459 59 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:36 (set (zero_extract:SI (reg/v:SI 184 [ ctrl ])
            (const_int 1 [0x1])
            (const_int 31 [0x1f]))
        (reg:SI 304)) -1 (nil))

(insn 459 458 460 59 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:37 (set (reg/v:SI 149 [ reg ])
        (lshiftrt:SI (reg/v:SI 147 [ user_val ])
            (const_int 1 [0x1]))) -1 (nil))

(insn 460 459 461 59 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:38 (set (reg:QI 305)
        (subreg:QI (reg/v:SI 149 [ reg ]) 0)) -1 (nil))

(insn 461 460 462 59 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:38 (set (reg:SI 306)
        (and:SI (subreg:SI (reg:QI 305) 0)
            (const_int 3 [0x3]))) -1 (nil))

(insn 462 461 463 59 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:38 (set (reg:QI 307)
        (subreg:QI (reg:SI 306) 0)) -1 (nil))

(insn 463 462 464 59 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:38 (set (reg:SI 308)
        (and:SI (subreg:SI (reg:QI 307) 0)
            (const_int 3 [0x3]))) -1 (nil))

(insn 464 463 465 59 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:38 (set (reg:QI 309)
        (subreg:QI (reg:SI 308) 0)) -1 (nil))

(insn 465 464 466 59 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:38 (set (reg:SI 310)
        (and:SI (subreg:SI (reg:QI 309) 0)
            (const_int 3 [0x3]))) -1 (nil))

(insn 466 465 467 59 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:38 (set (zero_extract:SI (reg/v:SI 184 [ ctrl ])
            (const_int 2 [0x2])
            (const_int 29 [0x1d]))
        (reg:SI 310)) -1 (nil))

(insn 467 466 468 59 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:39 (set (reg/v:SI 134 [ reg.867 ])
        (lshiftrt:SI (reg/v:SI 149 [ reg ])
            (const_int 2 [0x2]))) -1 (nil))

(insn 468 467 469 59 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:40 (set (reg:QI 311)
        (subreg:QI (reg/v:SI 134 [ reg.867 ]) 0)) -1 (nil))

(insn 469 468 470 59 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:40 (set (reg:SI 312)
        (and:SI (subreg:SI (reg:QI 311) 0)
            (const_int 3 [0x3]))) -1 (nil))

(insn 470 469 471 59 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:40 (set (reg:QI 313)
        (subreg:QI (reg:SI 312) 0)) -1 (nil))

(insn 471 470 472 59 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:40 (set (reg:SI 314)
        (and:SI (subreg:SI (reg:QI 313) 0)
            (const_int 3 [0x3]))) -1 (nil))

(insn 472 471 473 59 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:40 (set (reg:QI 315)
        (subreg:QI (reg:SI 314) 0)) -1 (nil))

(insn 473 472 474 59 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:40 (set (reg:SI 316)
        (and:SI (subreg:SI (reg:QI 315) 0)
            (const_int 3 [0x3]))) -1 (nil))

(insn 474 473 475 59 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:40 (set (zero_extract:SI (reg/v:SI 184 [ ctrl ])
            (const_int 2 [0x2])
            (const_int 27 [0x1b]))
        (reg:SI 316)) -1 (nil))

(insn 475 474 476 59 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:41 (set (reg/v:SI 133 [ reg.871 ])
        (lshiftrt:SI (reg/v:SI 134 [ reg.867 ])
            (const_int 2 [0x2]))) -1 (nil))

(insn 476 475 477 59 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:42 (set (zero_extract:SI (reg/v:SI 184 [ ctrl ])
            (const_int 8 [0x8])
            (const_int 19 [0x13]))
        (reg/v:SI 133 [ reg.871 ])) -1 (nil))

(insn 477 476 478 59 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:44 (set (reg:SI 317)
        (lshiftrt:SI (reg/v:SI 133 [ reg.871 ])
            (const_int 17 [0x11]))) -1 (nil))

(insn 478 477 479 59 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:44 (set (reg:QI 318)
        (subreg:QI (reg:SI 317) 0)) -1 (nil))

(insn 479 478 480 59 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:44 (set (reg:SI 319)
        (and:SI (subreg:SI (reg:QI 318) 0)
            (const_int 1 [0x1]))) -1 (nil))

(insn 480 479 481 59 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:44 (set (reg:QI 320)
        (subreg:QI (reg:SI 319) 0)) -1 (nil))

(insn 481 480 482 59 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:44 (set (reg:SI 321)
        (and:SI (subreg:SI (reg:QI 320) 0)
            (const_int 1 [0x1]))) -1 (nil))

(insn 482 481 483 59 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:44 (set (reg:QI 322)
        (subreg:QI (reg:SI 321) 0)) -1 (nil))

(insn 483 482 484 59 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:44 (set (reg:SI 323)
        (and:SI (subreg:SI (reg:QI 322) 0)
            (const_int 1 [0x1]))) -1 (nil))

(insn 484 483 485 59 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:44 (set (zero_extract:SI (reg/v:SI 184 [ ctrl ])
            (const_int 1 [0x1])
            (const_int 9 [0x9]))
        (reg:SI 323)) -1 (nil))

(insn 485 484 486 59 arch/arm/kernel/ptrace.c:555 (set (reg:SI 324)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -4 [0xfffffffffffffffc]))) -1 (nil))

(insn 486 485 487 59 arch/arm/kernel/ptrace.c:555 (set (reg:SI 325)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -8 [0xfffffffffffffff8]))) -1 (nil))

(insn 487 486 488 59 arch/arm/kernel/ptrace.c:555 (set (reg:SI 0 r0)
        (reg/v:SI 184 [ ctrl ])) -1 (nil))

(insn 488 487 489 59 arch/arm/kernel/ptrace.c:555 (set (reg:SI 1 r1)
        (reg:SI 324)) -1 (nil))

(insn 489 488 490 59 arch/arm/kernel/ptrace.c:555 (set (reg:SI 2 r2)
        (reg:SI 325)) -1 (nil))

(call_insn 490 489 491 59 arch/arm/kernel/ptrace.c:555 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("arch_bp_generic_fields") [flags 0x41] <function_decl 0x10ad9200 arch_bp_generic_fields>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 491 490 492 59 arch/arm/kernel/ptrace.c:555 (set (reg/v:SI 181 [ ret ])
        (reg:SI 0 r0)) -1 (nil))

(insn 492 491 493 59 arch/arm/kernel/ptrace.c:556 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 181 [ ret ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 493 492 494 59 arch/arm/kernel/ptrace.c:556 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 524)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 59 -> ( 64 60)

;; Succ edge  64 [50.0%] 
;; Succ edge  60 [50.0%]  (fallthru)

;; Start of basic block ( 59) -> 60
;; Pred edge  59 [50.0%]  (fallthru)
(note 494 493 495 60 [bb 60] NOTE_INSN_BASIC_BLOCK)

(insn 495 494 496 60 arch/arm/kernel/ptrace.c:559 (set (reg:SI 143 [ gen_type.377 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 gen_type+0 S4 A64])) -1 (nil))

(insn 496 495 497 60 arch/arm/kernel/ptrace.c:559 (set (reg:SI 144 [ D.28101 ])
        (and:SI (reg/v:SI 146 [ implied_type ])
            (reg:SI 143 [ gen_type.377 ]))) -1 (nil))

(insn 497 496 498 60 arch/arm/kernel/ptrace.c:559 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 144 [ D.28101 ])
            (reg:SI 143 [ gen_type.377 ]))) -1 (nil))

(jump_insn 498 497 499 60 arch/arm/kernel/ptrace.c:559 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 521)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
        (nil)))
;; End of basic block 60 -> ( 63 61)

;; Succ edge  63 [72.0%] 
;; Succ edge  61 [28.0%]  (fallthru)

;; Start of basic block ( 60) -> 61
;; Pred edge  60 [28.0%]  (fallthru)
(note 499 498 500 61 [bb 61] NOTE_INSN_BASIC_BLOCK)

(insn 500 499 501 61 arch/arm/kernel/ptrace.c:564 (set (reg:SI 326)
        (mem/c/i:SI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 gen_len+0 S4 A32])) -1 (nil))

(insn 501 500 502 61 arch/arm/kernel/ptrace.c:564 (set (reg:DI 327)
        (sign_extend:DI (reg:SI 326))) -1 (nil))

(insn 502 501 503 61 arch/arm/kernel/ptrace.c:564 (set (mem/s/j/c:DI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 attr.D.23456.bp_len+0 S8 A64])
        (reg:DI 327)) -1 (nil))

(insn 503 502 504 61 arch/arm/kernel/ptrace.c:565 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [0 attr.bp_type+0 S4 A32])
        (reg:SI 144 [ D.28101 ])) -1 (nil))

(insn 504 503 505 61 arch/arm/kernel/ptrace.c:566 (set (subreg:SI (reg:QI 328) 0)
        (zero_extract:SI (reg/v:SI 184 [ ctrl ])
            (const_int 8 [0x8])
            (const_int 24 [0x18]))) -1 (nil))

(insn 505 504 506 61 arch/arm/kernel/ptrace.c:566 (set (reg:SI 330)
        (not:SI (subreg:SI (reg:QI 328) 0))) -1 (nil))

(insn 506 505 507 61 arch/arm/kernel/ptrace.c:566 (set (reg:SI 331)
        (zero_extend:SI (subreg:QI (reg:SI 330) 0))) -1 (nil))

(insn 507 506 508 61 arch/arm/kernel/ptrace.c:566 (set (reg:SI 332)
        (lshiftrt:SI (reg:SI 331)
            (const_int 7 [0x7]))) -1 (nil))

(insn 508 507 509 61 arch/arm/kernel/ptrace.c:566 (set (reg:SI 334)
        (zero_extend:SI (mem/s/j/c:QI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [0+40 S1 A64]))) -1 (nil))

(insn 509 508 510 61 arch/arm/kernel/ptrace.c:566 (set (reg:QI 333)
        (subreg:QI (reg:SI 334) 0)) -1 (nil))

(insn 510 509 511 61 arch/arm/kernel/ptrace.c:566 (set (zero_extract:SI (subreg:SI (reg:QI 333) 0)
            (const_int 1 [0x1])
            (const_int 0 [0x0]))
        (reg:SI 332)) -1 (nil))

(insn 511 510 512 61 arch/arm/kernel/ptrace.c:566 (set (mem/s/j/c:QI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0+40 S1 A64])
        (reg:QI 333)) -1 (nil))
;; End of basic block 61 -> ( 62)

;; Succ edge  62 [100.0%]  (fallthru)

;; Start of basic block ( 58 61) -> 62
;; Pred edge  58 [100.0%] 
;; Pred edge  61 [100.0%]  (fallthru)
(code_label 512 511 513 62 134 "" [1 uses])

(note 513 512 514 62 [bb 62] NOTE_INSN_BASIC_BLOCK)

(insn 514 513 515 62 arch/arm/kernel/ptrace.c:569 (set (reg:SI 335)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -80 [0xffffffffffffffb0]))) -1 (nil))

(insn 515 514 516 62 arch/arm/kernel/ptrace.c:569 (set (reg:SI 0 r0)
        (reg/v/f:SI 148 [ bp ])) -1 (nil))

(insn 516 515 517 62 arch/arm/kernel/ptrace.c:569 (set (reg:SI 1 r1)
        (reg:SI 335)) -1 (nil))

(call_insn 517 516 518 62 arch/arm/kernel/ptrace.c:569 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("modify_user_hw_breakpoint") [flags 0x41] <function_decl 0x11524780 modify_user_hw_breakpoint>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 518 517 519 62 arch/arm/kernel/ptrace.c:569 (set (reg/v:SI 181 [ ret ])
        (reg:SI 0 r0)) -1 (nil))

(jump_insn 519 518 520 62 arch/arm/kernel/ptrace.c:569 (set (pc)
        (label_ref 524)) -1 (nil))
;; End of basic block 62 -> ( 64)

;; Succ edge  64 [100.0%] 

(barrier 520 519 521)

;; Start of basic block ( 60 50) -> 63
;; Pred edge  60 [72.0%] 
;; Pred edge  50 [50.0%] 
(code_label 521 520 522 63 129 ("out") [2 uses])

(note 522 521 523 63 [bb 63] NOTE_INSN_BASIC_BLOCK)

(insn 523 522 524 63 arch/arm/kernel/ptrace.c:528 (set (reg/v:SI 181 [ ret ])
        (const_int -22 [0xffffffffffffffea])) -1 (nil))
;; End of basic block 63 -> ( 64)

;; Succ edge  64 [100.0%]  (fallthru)

;; Start of basic block ( 63 46 62 52 59 55) -> 64
;; Pred edge  63 [100.0%]  (fallthru)
;; Pred edge  46 [100.0%] 
;; Pred edge  62 [100.0%] 
;; Pred edge  52 [100.0%] 
;; Pred edge  59 [50.0%] 
;; Pred edge  55 [100.0%] 
(code_label 524 523 525 64 126 "" [5 uses])

(note 525 524 526 64 [bb 64] NOTE_INSN_BASIC_BLOCK)

(insn 526 525 527 64 arch/arm/kernel/ptrace.c:892 (set (reg:SI 0 r0)
        (reg/v/f:SI 188 [ child ])) -1 (nil))

(call_insn 527 526 528 64 arch/arm/kernel/ptrace.c:892 (parallel [
            (call (mem:SI (symbol_ref:SI ("ptrace_put_breakpoints") [flags 0x41] <function_decl 0x110a8700 ptrace_put_breakpoints>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(jump_insn 528 527 529 64 arch/arm/kernel/ptrace.c:893 (set (pc)
        (label_ref 548)) -1 (nil))
;; End of basic block 64 -> ( 68)

;; Succ edge  68 [100.0%] 

(barrier 529 528 530)

;; Start of basic block ( 3) -> 65
;; Pred edge  3 [7.7%] 
(code_label 530 529 531 65 95 "" [17 uses])

(note 531 530 532 65 [bb 65] NOTE_INSN_BASIC_BLOCK)

(insn 532 531 533 65 arch/arm/kernel/ptrace.c:897 (set (reg:SI 0 r0)
        (reg/v/f:SI 188 [ child ])) -1 (nil))

(insn 533 532 534 65 arch/arm/kernel/ptrace.c:897 (set (reg:SI 1 r1)
        (reg/v:SI 189 [ request ])) -1 (nil))

(insn 534 533 535 65 arch/arm/kernel/ptrace.c:897 (set (reg:SI 2 r2)
        (reg/v:SI 190 [ addr ])) -1 (nil))

(insn 535 534 536 65 arch/arm/kernel/ptrace.c:897 (set (reg:SI 3 r3)
        (reg/v:SI 191 [ data ])) -1 (nil))

(call_insn 536 535 537 65 arch/arm/kernel/ptrace.c:897 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("ptrace_request") [flags 0x41] <function_decl 0x1109c680 ptrace_request>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 537 536 538 65 arch/arm/kernel/ptrace.c:897 (set (reg/v:SI 181 [ ret ])
        (reg:SI 0 r0)) -1 (nil))

(jump_insn 538 537 539 65 arch/arm/kernel/ptrace.c:897 (set (pc)
        (label_ref 548)) -1 (nil))
;; End of basic block 65 -> ( 68)

;; Succ edge  68 [100.0%] 

(barrier 539 538 540)

;; Start of basic block ( 24 44) -> 66
;; Pred edge  24 [19.1%] 
;; Pred edge  44 [19.1%] 
(code_label 540 539 541 66 113 "" [2 uses])

(note 541 540 542 66 [bb 66] NOTE_INSN_BASIC_BLOCK)

(insn 542 541 543 66 arch/arm/kernel/ptrace.c:880 (set (reg/v:SI 181 [ ret ])
        (const_int -3 [0xfffffffffffffffd])) -1 (nil))

(jump_insn 543 542 544 66 arch/arm/kernel/ptrace.c:880 (set (pc)
        (label_ref 548)) -1 (nil))
;; End of basic block 66 -> ( 68)

;; Succ edge  68 [100.0%] 

(barrier 544 543 545)

;; Start of basic block ( 22 20 4 10 12 14 16) -> 67
;; Pred edge  22 [71.0%] 
;; Pred edge  20 [71.0%] 
;; Pred edge  4 [50.0%] 
;; Pred edge  10 [71.0%] 
;; Pred edge  12 [71.0%] 
;; Pred edge  14 [71.0%] 
;; Pred edge  16 [71.0%] 
(code_label 545 544 546 67 109 "" [7 uses])

(note 546 545 547 67 [bb 67] NOTE_INSN_BASIC_BLOCK)

(insn 547 546 548 67 include/linux/regset.h:362 (set (reg/v:SI 181 [ ret ])
        (const_int -5 [0xfffffffffffffffb])) -1 (nil))
;; End of basic block 67 -> ( 68)

;; Succ edge  68 [100.0%]  (fallthru)

;; Start of basic block ( 67 66 8 65 64 43 23 21 19 18 17 15 13 11 9) -> 68
;; Pred edge  67 [100.0%]  (fallthru)
;; Pred edge  66 [100.0%] 
;; Pred edge  8 [100.0%] 
;; Pred edge  65 [100.0%] 
;; Pred edge  64 [100.0%] 
;; Pred edge  43 [100.0%] 
;; Pred edge  23 [100.0%] 
;; Pred edge  21 [100.0%] 
;; Pred edge  19 [100.0%] 
;; Pred edge  18 [100.0%] 
;; Pred edge  17 [100.0%] 
;; Pred edge  15 [100.0%] 
;; Pred edge  13 [100.0%] 
;; Pred edge  11 [100.0%] 
;; Pred edge  9 [100.0%] 
(code_label 548 547 549 68 112 "" [14 uses])

(note 549 548 550 68 [bb 68] NOTE_INSN_BASIC_BLOCK)

(insn 550 549 551 68 arch/arm/kernel/ptrace.c:902 (set (reg:SI 187 [ <result> ])
        (reg/v:SI 181 [ ret ])) -1 (nil))

(jump_insn 551 550 552 68 arch/arm/kernel/ptrace.c:902 (set (pc)
        (label_ref 553)) -1 (nil))
;; End of basic block 68 -> ( 70)

;; Succ edge  70 [100.0%] 

(barrier 552 551 561)

;; Start of basic block () -> 69
(note 561 552 555 69 [bb 69] NOTE_INSN_BASIC_BLOCK)

(insn 555 561 556 69 arch/arm/kernel/ptrace.c:902 (clobber (reg/i:SI 0 r0)) -1 (nil))

(insn 556 555 557 69 arch/arm/kernel/ptrace.c:902 (clobber (reg:SI 187 [ <result> ])) -1 (nil))

(jump_insn 557 556 558 69 arch/arm/kernel/ptrace.c:902 (set (pc)
        (label_ref 559)) -1 (nil))
;; End of basic block 69 -> ( 71)

;; Succ edge  71 [100.0%] 

(barrier 558 557 553)

;; Start of basic block ( 68) -> 70
;; Pred edge  68 [100.0%] 
(code_label 553 558 562 70 94 "" [1 uses])

(note 562 553 554 70 [bb 70] NOTE_INSN_BASIC_BLOCK)

(insn 554 562 559 70 arch/arm/kernel/ptrace.c:902 (set (reg/i:SI 0 r0)
        (reg:SI 187 [ <result> ])) -1 (nil))
;; End of basic block 70 -> ( 71)

;; Succ edge  71 [100.0%]  (fallthru)

;; Start of basic block ( 69 70) -> 71
;; Pred edge  69 [100.0%] 
;; Pred edge  70 [100.0%]  (fallthru)
(code_label 559 554 563 71 135 "" [1 uses])

(note 563 559 560 71 [bb 71] NOTE_INSN_BASIC_BLOCK)

(insn 560 563 0 71 arch/arm/kernel/ptrace.c:902 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 71 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function ptrace_hbptriggered (ptrace_hbptriggered)[0:1550]

Partition 0: size 128 align 4
	info, offset 0

;; Generating RTL for gimple basic block 2

;; sp.87 = sp;

(insn 12 11 0 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 139 [ sp.87 ])
        (reg/v:SI 13 sp [ sp ])) -1 (nil))

;; ivtmp.909 = (unsigned int) ((struct thread_info *) (sp.87 & 4294959104))->task;

(insn 13 12 14 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 146)
        (and:SI (reg:SI 139 [ sp.87 ])
            (const_int -8129 [0xffffffffffffe03f]))) -1 (nil))

(insn 14 13 15 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 145)
        (and:SI (reg:SI 146)
            (const_int -64 [0xffffffffffffffc0]))) -1 (expr_list:REG_EQUAL (and:SI (reg:SI 139 [ sp.87 ])
            (const_int -8192 [0xffffffffffffe000]))
        (nil)))

(insn 15 14 0 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 137 [ ivtmp.909 ])
        (mem/s/f/j:SI (plus:SI (reg:SI 145)
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) -1 (nil))

;; i = 0;

(insn 16 15 0 arch/arm/kernel/ptrace.c:386 (set (reg/v:SI 140 [ i ])
        (const_int 0 [0x0])) -1 (nil))

;; Generating RTL for gimple basic block 3

;; if (MEM[index: ivtmp.909, offset: 796] == bp)

(insn 18 17 19 arch/arm/kernel/ptrace.c:387 (set (reg:SI 147)
        (mem/s/f/j:SI (plus:SI (reg:SI 137 [ ivtmp.909 ])
                (const_int 796 [0x31c])) [0 <variable>.thread.debug.hbp S4 A32])) -1 (nil))

(insn 19 18 20 arch/arm/kernel/ptrace.c:387 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 147)
            (reg/v/f:SI 142 [ bp ]))) -1 (nil))

(jump_insn 20 19 0 arch/arm/kernel/ptrace.c:387 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 9550 [0x254e])
        (nil)))

;; Generating RTL for gimple basic block 4

;; num = (i << 1) + 1;

(insn 22 21 23 arch/arm/kernel/ptrace.c:370 (set (reg:SI 148)
        (ashift:SI (reg/v:SI 140 [ i ])
            (const_int 1 [0x1]))) -1 (nil))

(insn 23 22 0 arch/arm/kernel/ptrace.c:370 (set (reg/v:SI 141 [ num ])
        (plus:SI (reg:SI 148)
            (const_int 1 [0x1]))) -1 (nil))

;; if (num > 32)

(insn 24 23 25 4 arch/arm/kernel/ptrace.c:371 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 141 [ num ])
            (const_int 32 [0x20]))) -1 (nil))

(jump_insn 25 24 28 4 arch/arm/kernel/ptrace.c:371 (set (pc)
        (if_then_else (gt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

(note 28 25 26 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(jump_insn 26 28 27 10 arch/arm/kernel/ptrace.c:371 (set (pc)
        (label_ref 0)) -1 (nil))

(barrier 27 26 0)

;; Generating RTL for gimple basic block 5

;; 

(code_label 29 27 30 140 "" [0 uses])

(note 30 29 0 NOTE_INSN_BASIC_BLOCK)

;; i = i + 1;

(insn 31 30 0 arch/arm/kernel/ptrace.c:386 (set (reg/v:SI 140 [ i ])
        (plus:SI (reg/v:SI 140 [ i ])
            (const_int 1 [0x1]))) -1 (nil))

;; ivtmp.909 = ivtmp.909 + 4;

(insn 32 31 0 arch/arm/kernel/ptrace.c:386 (set (reg:SI 137 [ ivtmp.909 ])
        (plus:SI (reg:SI 137 [ ivtmp.909 ])
            (const_int 4 [0x4]))) -1 (nil))

;; if (i != 32)

(insn 34 32 35 arch/arm/kernel/ptrace.c:386 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 140 [ i ])
            (const_int 32 [0x20]))) -1 (nil))

(jump_insn 35 34 0 arch/arm/kernel/ptrace.c:386 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 33)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 9673 [0x25c9])
        (nil)))

;; Generating RTL for gimple basic block 6

;; num = 0;

(insn 37 36 0 arch/arm/kernel/ptrace.c:390 discrim 2 (set (reg/v:SI 141 [ num ])
        (const_int 0 [0x0])) -1 (nil))

;; Generating RTL for gimple basic block 7

;; 

(code_label 40 39 41 141 "" [0 uses])

(note 41 40 0 NOTE_INSN_BASIC_BLOCK)

;; num = 32 - num;

(insn 42 41 0 arch/arm/kernel/ptrace.c:371 discrim 1 (set (reg/v:SI 141 [ num ])
        (minus:SI (const_int 32 [0x20])
            (reg/v:SI 141 [ num ]))) -1 (nil))

;; Generating RTL for gimple basic block 8

;; 

(code_label 43 42 44 142 "" [0 uses])

(note 44 43 0 NOTE_INSN_BASIC_BLOCK)

;; info.si_signo = 5;

(insn 45 44 46 arch/arm/kernel/ptrace.c:392 (set (reg:SI 149)
        (const_int 5 [0x5])) -1 (nil))

(insn 46 45 0 arch/arm/kernel/ptrace.c:392 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                (const_int -128 [0xffffffffffffff80])) [0 info.si_signo+0 S4 A64])
        (reg:SI 149)) -1 (nil))

;; info.si_errno = num;

(insn 47 46 0 arch/arm/kernel/ptrace.c:393 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                (const_int -124 [0xffffffffffffff84])) [0 info.si_errno+0 S4 A32])
        (reg/v:SI 141 [ num ])) -1 (nil))

;; info.si_code = 196612;

(insn 48 47 49 arch/arm/kernel/ptrace.c:394 (set (reg:SI 150)
        (const_int 196612 [0x30004])) -1 (nil))

(insn 49 48 0 arch/arm/kernel/ptrace.c:394 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                (const_int -120 [0xffffffffffffff88])) [0 info.si_code+0 S4 A64])
        (reg:SI 150)) -1 (nil))

;; info._sifields._sigfault._addr = (void *) (void *) bp->hw.D.25978.D.25977.info.trigger;

(insn 50 49 51 arch/arm/kernel/ptrace.c:395 (set (reg:SI 151)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 142 [ bp ])
                (const_int 204 [0xcc])) [0 <variable>.hw.D.25978.D.25977.info.trigger+0 S4 A32])) -1 (nil))

(insn 51 50 0 arch/arm/kernel/ptrace.c:395 (set (mem/s/f/j/c:SI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                (const_int -116 [0xffffffffffffff8c])) [0 info._sifields._sigfault._addr+0 S4 A32])
        (reg:SI 151)) -1 (nil))

;; sp.87 = sp;

(insn 52 51 0 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 138 [ sp.87 ])
        (reg/v:SI 13 sp [ sp ])) -1 (nil))

;; force_sig_info (5, &info, ((struct thread_info *) (sp.87 & 4294959104))->task);

(insn 53 52 54 arch/arm/kernel/ptrace.c:397 (set (reg:SI 152)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -128 [0xffffffffffffff80]))) -1 (nil))

(insn 54 53 55 arch/arm/kernel/ptrace.c:397 (set (reg:SI 154)
        (and:SI (reg:SI 138 [ sp.87 ])
            (const_int -8129 [0xffffffffffffe03f]))) -1 (nil))

(insn 55 54 56 arch/arm/kernel/ptrace.c:397 (set (reg:SI 153)
        (and:SI (reg:SI 154)
            (const_int -64 [0xffffffffffffffc0]))) -1 (expr_list:REG_EQUAL (and:SI (reg:SI 138 [ sp.87 ])
            (const_int -8192 [0xffffffffffffe000]))
        (nil)))

(insn 56 55 57 arch/arm/kernel/ptrace.c:397 (set (reg:SI 0 r0)
        (const_int 5 [0x5])) -1 (nil))

(insn 57 56 58 arch/arm/kernel/ptrace.c:397 (set (reg:SI 1 r1)
        (reg:SI 152)) -1 (nil))

(insn 58 57 59 arch/arm/kernel/ptrace.c:397 (set (reg:SI 2 r2)
        (mem/s/f/j:SI (plus:SI (reg:SI 153)
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) -1 (nil))

(call_insn 59 58 0 arch/arm/kernel/ptrace.c:397 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("force_sig_info") [flags 0x41] <function_decl 0x10f01680 force_sig_info>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))


;;
;; Full RTL generated for this function:
;;
(note 5 0 10 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 10 5 6 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 6 10 7 2 arch/arm/kernel/ptrace.c:380 (set (reg/v/f:SI 142 [ bp ])
        (reg:SI 0 r0 [ bp ])) -1 (nil))

(insn 7 6 8 2 arch/arm/kernel/ptrace.c:380 (set (reg/v/f:SI 143 [ data ])
        (reg:SI 1 r1 [ data ])) -1 (nil))

(insn 8 7 9 2 arch/arm/kernel/ptrace.c:380 (set (reg/v/f:SI 144 [ regs ])
        (reg:SI 2 r2 [ regs ])) -1 (nil))

(note 9 8 11 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 3)

;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [100.0%]  (fallthru)
(note 11 9 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 12 11 13 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 139 [ sp.87 ])
        (reg/v:SI 13 sp [ sp ])) -1 (nil))

(insn 13 12 14 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 146)
        (and:SI (reg:SI 139 [ sp.87 ])
            (const_int -8129 [0xffffffffffffe03f]))) -1 (nil))

(insn 14 13 15 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 145)
        (and:SI (reg:SI 146)
            (const_int -64 [0xffffffffffffffc0]))) -1 (expr_list:REG_EQUAL (and:SI (reg:SI 139 [ sp.87 ])
            (const_int -8192 [0xffffffffffffe000]))
        (nil)))

(insn 15 14 16 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 137 [ ivtmp.909 ])
        (mem/s/f/j:SI (plus:SI (reg:SI 145)
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) -1 (nil))

(insn 16 15 33 3 arch/arm/kernel/ptrace.c:386 (set (reg/v:SI 140 [ i ])
        (const_int 0 [0x0])) -1 (nil))
;; End of basic block 3 -> ( 4)

;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 7 3) -> 4
;; Pred edge  7 [96.7%]  (dfs_back)
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 33 16 17 4 143 "" [1 uses])

(note 17 33 18 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 18 17 19 4 arch/arm/kernel/ptrace.c:387 (set (reg:SI 147)
        (mem/s/f/j:SI (plus:SI (reg:SI 137 [ ivtmp.909 ])
                (const_int 796 [0x31c])) [0 <variable>.thread.debug.hbp S4 A32])) -1 (nil))

(insn 19 18 20 4 arch/arm/kernel/ptrace.c:387 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 147)
            (reg/v/f:SI 142 [ bp ]))) -1 (nil))

(jump_insn 20 19 21 4 arch/arm/kernel/ptrace.c:387 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 29)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 9550 [0x254e])
        (nil)))
;; End of basic block 4 -> ( 5 7)

;; Succ edge  5 [4.5%]  (fallthru)
;; Succ edge  7 [95.5%] 

;; Start of basic block ( 4) -> 5
;; Pred edge  4 [4.5%]  (fallthru)
(note 21 20 22 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 22 21 23 5 arch/arm/kernel/ptrace.c:370 (set (reg:SI 148)
        (ashift:SI (reg/v:SI 140 [ i ])
            (const_int 1 [0x1]))) -1 (nil))

(insn 23 22 24 5 arch/arm/kernel/ptrace.c:370 (set (reg/v:SI 141 [ num ])
        (plus:SI (reg:SI 148)
            (const_int 1 [0x1]))) -1 (nil))

(insn 24 23 25 5 arch/arm/kernel/ptrace.c:371 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 141 [ num ])
            (const_int 32 [0x20]))) -1 (nil))

(jump_insn 25 24 28 5 arch/arm/kernel/ptrace.c:371 (set (pc)
        (if_then_else (gt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 40)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 5 -> ( 9 6)

;; Succ edge  9 [50.0%] 
;; Succ edge  6 [50.0%]  (fallthru)

;; Start of basic block ( 5) -> 6
;; Pred edge  5 [50.0%]  (fallthru)
(note 28 25 26 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(jump_insn 26 28 27 6 arch/arm/kernel/ptrace.c:371 (set (pc)
        (label_ref 43)) -1 (nil))
;; End of basic block 6 -> ( 10)

;; Succ edge  10 [100.0%] 

(barrier 27 26 29)

;; Start of basic block ( 4) -> 7
;; Pred edge  4 [95.5%] 
(code_label 29 27 30 7 140 "" [1 uses])

(note 30 29 31 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 31 30 32 7 arch/arm/kernel/ptrace.c:386 (set (reg/v:SI 140 [ i ])
        (plus:SI (reg/v:SI 140 [ i ])
            (const_int 1 [0x1]))) -1 (nil))

(insn 32 31 34 7 arch/arm/kernel/ptrace.c:386 (set (reg:SI 137 [ ivtmp.909 ])
        (plus:SI (reg:SI 137 [ ivtmp.909 ])
            (const_int 4 [0x4]))) -1 (nil))

(insn 34 32 35 7 arch/arm/kernel/ptrace.c:386 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 140 [ i ])
            (const_int 32 [0x20]))) -1 (nil))

(jump_insn 35 34 36 7 arch/arm/kernel/ptrace.c:386 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 33)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 9673 [0x25c9])
        (nil)))
;; End of basic block 7 -> ( 4 8)

;; Succ edge  4 [96.7%]  (dfs_back)
;; Succ edge  8 [3.3%]  (fallthru)

;; Start of basic block ( 7) -> 8
;; Pred edge  7 [3.3%]  (fallthru)
(note 36 35 37 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 37 36 38 8 arch/arm/kernel/ptrace.c:390 discrim 2 (set (reg/v:SI 141 [ num ])
        (const_int 0 [0x0])) -1 (nil))

(jump_insn 38 37 39 8 arch/arm/kernel/ptrace.c:390 discrim 2 (set (pc)
        (label_ref 43)) -1 (nil))
;; End of basic block 8 -> ( 10)

;; Succ edge  10 [100.0%] 

(barrier 39 38 40)

;; Start of basic block ( 5) -> 9
;; Pred edge  5 [50.0%] 
(code_label 40 39 41 9 141 "" [1 uses])

(note 41 40 42 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 42 41 43 9 arch/arm/kernel/ptrace.c:371 discrim 1 (set (reg/v:SI 141 [ num ])
        (minus:SI (const_int 32 [0x20])
            (reg/v:SI 141 [ num ]))) -1 (nil))
;; End of basic block 9 -> ( 10)

;; Succ edge  10 [100.0%]  (fallthru)

;; Start of basic block ( 9 8 6) -> 10
;; Pred edge  9 [100.0%]  (fallthru)
;; Pred edge  8 [100.0%] 
;; Pred edge  6 [100.0%] 
(code_label 43 42 44 10 142 "" [2 uses])

(note 44 43 45 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 45 44 46 10 arch/arm/kernel/ptrace.c:392 (set (reg:SI 149)
        (const_int 5 [0x5])) -1 (nil))

(insn 46 45 47 10 arch/arm/kernel/ptrace.c:392 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                (const_int -128 [0xffffffffffffff80])) [0 info.si_signo+0 S4 A64])
        (reg:SI 149)) -1 (nil))

(insn 47 46 48 10 arch/arm/kernel/ptrace.c:393 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                (const_int -124 [0xffffffffffffff84])) [0 info.si_errno+0 S4 A32])
        (reg/v:SI 141 [ num ])) -1 (nil))

(insn 48 47 49 10 arch/arm/kernel/ptrace.c:394 (set (reg:SI 150)
        (const_int 196612 [0x30004])) -1 (nil))

(insn 49 48 50 10 arch/arm/kernel/ptrace.c:394 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                (const_int -120 [0xffffffffffffff88])) [0 info.si_code+0 S4 A64])
        (reg:SI 150)) -1 (nil))

(insn 50 49 51 10 arch/arm/kernel/ptrace.c:395 (set (reg:SI 151)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 142 [ bp ])
                (const_int 204 [0xcc])) [0 <variable>.hw.D.25978.D.25977.info.trigger+0 S4 A32])) -1 (nil))

(insn 51 50 52 10 arch/arm/kernel/ptrace.c:395 (set (mem/s/f/j/c:SI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                (const_int -116 [0xffffffffffffff8c])) [0 info._sifields._sigfault._addr+0 S4 A32])
        (reg:SI 151)) -1 (nil))

(insn 52 51 53 10 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 138 [ sp.87 ])
        (reg/v:SI 13 sp [ sp ])) -1 (nil))

(insn 53 52 54 10 arch/arm/kernel/ptrace.c:397 (set (reg:SI 152)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -128 [0xffffffffffffff80]))) -1 (nil))

(insn 54 53 55 10 arch/arm/kernel/ptrace.c:397 (set (reg:SI 154)
        (and:SI (reg:SI 138 [ sp.87 ])
            (const_int -8129 [0xffffffffffffe03f]))) -1 (nil))

(insn 55 54 56 10 arch/arm/kernel/ptrace.c:397 (set (reg:SI 153)
        (and:SI (reg:SI 154)
            (const_int -64 [0xffffffffffffffc0]))) -1 (expr_list:REG_EQUAL (and:SI (reg:SI 138 [ sp.87 ])
            (const_int -8192 [0xffffffffffffe000]))
        (nil)))

(insn 56 55 57 10 arch/arm/kernel/ptrace.c:397 (set (reg:SI 0 r0)
        (const_int 5 [0x5])) -1 (nil))

(insn 57 56 58 10 arch/arm/kernel/ptrace.c:397 (set (reg:SI 1 r1)
        (reg:SI 152)) -1 (nil))

(insn 58 57 59 10 arch/arm/kernel/ptrace.c:397 (set (reg:SI 2 r2)
        (mem/s/f/j:SI (plus:SI (reg:SI 153)
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) -1 (nil))

(call_insn 59 58 64 10 arch/arm/kernel/ptrace.c:397 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("force_sig_info") [flags 0x41] <function_decl 0x10f01680 force_sig_info>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))
;; End of basic block 10 -> ( 11)

;; Succ edge  11 [100.0%]  (fallthru)

;; Start of basic block ( 10) -> 11
;; Pred edge  10 [100.0%]  (fallthru)
(note 64 59 61 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(jump_insn 61 64 62 11 arch/arm/kernel/ptrace.c:398 (set (pc)
        (label_ref 63)) -1 (nil))
;; End of basic block 11 -> ( 13)

;; Succ edge  13 [100.0%] 

(barrier 62 61 60)

;; Start of basic block () -> 12
(code_label 60 62 65 12 139 "" [0 uses])

(note 65 60 63 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 12 -> ( 13)

;; Succ edge  13 [100.0%]  (fallthru)

;; Start of basic block ( 11 12) -> 13
;; Pred edge  11 [100.0%] 
;; Pred edge  12 [100.0%]  (fallthru)
(code_label 63 65 66 13 144 "" [1 uses])

(note 66 63 0 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 13 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function ptrace_break (ptrace_break)[0:1543]

Partition 0: size 128 align 4
	info, offset 0

;; Generating RTL for gimple basic block 2

;; info.si_signo = 5;

(insn 7 6 8 arch/arm/kernel/ptrace.c:201 (set (reg:SI 135)
        (const_int 5 [0x5])) -1 (nil))

(insn 8 7 0 arch/arm/kernel/ptrace.c:201 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                (const_int -128 [0xffffffffffffff80])) [0 info.si_signo+0 S4 A64])
        (reg:SI 135)) -1 (nil))

;; info.si_errno = 0;

(insn 9 8 10 arch/arm/kernel/ptrace.c:202 (set (reg:SI 136)
        (const_int 0 [0x0])) -1 (nil))

(insn 10 9 0 arch/arm/kernel/ptrace.c:202 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                (const_int -124 [0xffffffffffffff84])) [0 info.si_errno+0 S4 A32])
        (reg:SI 136)) -1 (nil))

;; info.si_code = 196609;

(insn 11 10 12 arch/arm/kernel/ptrace.c:203 (set (reg:SI 137)
        (const_int 196609 [0x30001])) -1 (nil))

(insn 12 11 0 arch/arm/kernel/ptrace.c:203 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                (const_int -120 [0xffffffffffffff88])) [0 info.si_code+0 S4 A64])
        (reg:SI 137)) -1 (nil))

;; info._sifields._sigfault._addr = (void *) (void *) regs->uregs[15];

(insn 13 12 14 arch/arm/kernel/ptrace.c:204 (set (reg:SI 138)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 134 [ regs ])
                (const_int 60 [0x3c])) [0 <variable>.uregs+60 S4 A32])) -1 (nil))

(insn 14 13 0 arch/arm/kernel/ptrace.c:204 (set (mem/s/f/j/c:SI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                (const_int -116 [0xffffffffffffff8c])) [0 info._sifields._sigfault._addr+0 S4 A32])
        (reg:SI 138)) -1 (nil))

;; force_sig_info (5, &info, tsk);

(insn 15 14 16 arch/arm/kernel/ptrace.c:206 (set (reg:SI 139)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -128 [0xffffffffffffff80]))) -1 (nil))

(insn 16 15 17 arch/arm/kernel/ptrace.c:206 (set (reg:SI 0 r0)
        (const_int 5 [0x5])) -1 (nil))

(insn 17 16 18 arch/arm/kernel/ptrace.c:206 (set (reg:SI 1 r1)
        (reg:SI 139)) -1 (nil))

(insn 18 17 19 arch/arm/kernel/ptrace.c:206 (set (reg:SI 2 r2)
        (reg/v/f:SI 133 [ tsk ])) -1 (nil))

(call_insn 19 18 0 arch/arm/kernel/ptrace.c:206 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("force_sig_info") [flags 0x41] <function_decl 0x10f01680 force_sig_info>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))


;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 5 3 2 arch/arm/kernel/ptrace.c:198 (set (reg/v/f:SI 133 [ tsk ])
        (reg:SI 0 r0 [ tsk ])) -1 (nil))

(insn 3 2 4 2 arch/arm/kernel/ptrace.c:198 (set (reg/v/f:SI 134 [ regs ])
        (reg:SI 1 r1 [ regs ])) -1 (nil))

(note 4 3 6 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 3)

;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [100.0%]  (fallthru)
(note 6 4 7 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 7 6 8 3 arch/arm/kernel/ptrace.c:201 (set (reg:SI 135)
        (const_int 5 [0x5])) -1 (nil))

(insn 8 7 9 3 arch/arm/kernel/ptrace.c:201 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                (const_int -128 [0xffffffffffffff80])) [0 info.si_signo+0 S4 A64])
        (reg:SI 135)) -1 (nil))

(insn 9 8 10 3 arch/arm/kernel/ptrace.c:202 (set (reg:SI 136)
        (const_int 0 [0x0])) -1 (nil))

(insn 10 9 11 3 arch/arm/kernel/ptrace.c:202 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                (const_int -124 [0xffffffffffffff84])) [0 info.si_errno+0 S4 A32])
        (reg:SI 136)) -1 (nil))

(insn 11 10 12 3 arch/arm/kernel/ptrace.c:203 (set (reg:SI 137)
        (const_int 196609 [0x30001])) -1 (nil))

(insn 12 11 13 3 arch/arm/kernel/ptrace.c:203 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                (const_int -120 [0xffffffffffffff88])) [0 info.si_code+0 S4 A64])
        (reg:SI 137)) -1 (nil))

(insn 13 12 14 3 arch/arm/kernel/ptrace.c:204 (set (reg:SI 138)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 134 [ regs ])
                (const_int 60 [0x3c])) [0 <variable>.uregs+60 S4 A32])) -1 (nil))

(insn 14 13 15 3 arch/arm/kernel/ptrace.c:204 (set (mem/s/f/j/c:SI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                (const_int -116 [0xffffffffffffff8c])) [0 info._sifields._sigfault._addr+0 S4 A32])
        (reg:SI 138)) -1 (nil))

(insn 15 14 16 3 arch/arm/kernel/ptrace.c:206 (set (reg:SI 139)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -128 [0xffffffffffffff80]))) -1 (nil))

(insn 16 15 17 3 arch/arm/kernel/ptrace.c:206 (set (reg:SI 0 r0)
        (const_int 5 [0x5])) -1 (nil))

(insn 17 16 18 3 arch/arm/kernel/ptrace.c:206 (set (reg:SI 1 r1)
        (reg:SI 139)) -1 (nil))

(insn 18 17 19 3 arch/arm/kernel/ptrace.c:206 (set (reg:SI 2 r2)
        (reg/v/f:SI 133 [ tsk ])) -1 (nil))

(call_insn 19 18 24 3 arch/arm/kernel/ptrace.c:206 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("force_sig_info") [flags 0x41] <function_decl 0x10f01680 force_sig_info>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))
;; End of basic block 3 -> ( 4)

;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 3) -> 4
;; Pred edge  3 [100.0%]  (fallthru)
(note 24 19 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(jump_insn 21 24 22 4 arch/arm/kernel/ptrace.c:207 (set (pc)
        (label_ref 23)) -1 (nil))
;; End of basic block 4 -> ( 6)

;; Succ edge  6 [100.0%] 

(barrier 22 21 20)

;; Start of basic block () -> 5
(code_label 20 22 25 5 148 "" [0 uses])

(note 25 20 23 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 5 -> ( 6)

;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 4 5) -> 6
;; Pred edge  4 [100.0%] 
;; Pred edge  5 [100.0%]  (fallthru)
(code_label 23 25 26 6 149 "" [1 uses])

(note 26 23 0 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 6 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function break_trap (break_trap)[0:1544]


;; Generating RTL for gimple basic block 2

;; sp.87 = sp;

(insn 7 6 0 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 133 [ sp.87 ])
        (reg/v:SI 13 sp [ sp ])) -1 (nil))

;; ptrace_break (((struct thread_info *) (sp.87 & 4294959104))->task, regs);

(insn 8 7 9 arch/arm/kernel/ptrace.c:211 (set (reg:SI 138)
        (and:SI (reg:SI 133 [ sp.87 ])
            (const_int -8129 [0xffffffffffffe03f]))) -1 (nil))

(insn 9 8 10 arch/arm/kernel/ptrace.c:211 (set (reg:SI 137)
        (and:SI (reg:SI 138)
            (const_int -64 [0xffffffffffffffc0]))) -1 (expr_list:REG_EQUAL (and:SI (reg:SI 133 [ sp.87 ])
            (const_int -8192 [0xffffffffffffe000]))
        (nil)))

(insn 10 9 11 arch/arm/kernel/ptrace.c:211 (set (reg:SI 0 r0)
        (mem/s/f/j:SI (plus:SI (reg:SI 137)
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) -1 (nil))

(insn 11 10 12 arch/arm/kernel/ptrace.c:211 (set (reg:SI 1 r1)
        (reg/v/f:SI 135 [ regs ])) -1 (nil))

(call_insn 12 11 0 arch/arm/kernel/ptrace.c:211 (parallel [
            (call (mem:SI (symbol_ref:SI ("ptrace_break") [flags 0x3] <function_decl 0x11539900 ptrace_break>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

;; return 0;

(insn 13 12 14 arch/arm/kernel/ptrace.c:213 (set (reg:SI 134 [ <result> ])
        (const_int 0 [0x0])) -1 (nil))

(jump_insn 14 13 15 arch/arm/kernel/ptrace.c:213 (set (pc)
        (label_ref 0)) -1 (nil))

(barrier 15 14 0)


;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 5 3 2 arch/arm/kernel/ptrace.c:210 (set (reg/v/f:SI 135 [ regs ])
        (reg:SI 0 r0 [ regs ])) -1 (nil))

(insn 3 2 4 2 arch/arm/kernel/ptrace.c:210 (set (reg/v:SI 136 [ instr ])
        (reg:SI 1 r1 [ instr ])) -1 (nil))

(note 4 3 6 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 3)

;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [100.0%]  (fallthru)
(note 6 4 7 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 7 6 8 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 133 [ sp.87 ])
        (reg/v:SI 13 sp [ sp ])) -1 (nil))

(insn 8 7 9 3 arch/arm/kernel/ptrace.c:211 (set (reg:SI 138)
        (and:SI (reg:SI 133 [ sp.87 ])
            (const_int -8129 [0xffffffffffffe03f]))) -1 (nil))

(insn 9 8 10 3 arch/arm/kernel/ptrace.c:211 (set (reg:SI 137)
        (and:SI (reg:SI 138)
            (const_int -64 [0xffffffffffffffc0]))) -1 (expr_list:REG_EQUAL (and:SI (reg:SI 133 [ sp.87 ])
            (const_int -8192 [0xffffffffffffe000]))
        (nil)))

(insn 10 9 11 3 arch/arm/kernel/ptrace.c:211 (set (reg:SI 0 r0)
        (mem/s/f/j:SI (plus:SI (reg:SI 137)
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) -1 (nil))

(insn 11 10 12 3 arch/arm/kernel/ptrace.c:211 (set (reg:SI 1 r1)
        (reg/v/f:SI 135 [ regs ])) -1 (nil))

(call_insn 12 11 13 3 arch/arm/kernel/ptrace.c:211 (parallel [
            (call (mem:SI (symbol_ref:SI ("ptrace_break") [flags 0x3] <function_decl 0x11539900 ptrace_break>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 13 12 14 3 arch/arm/kernel/ptrace.c:213 (set (reg:SI 134 [ <result> ])
        (const_int 0 [0x0])) -1 (nil))

(jump_insn 14 13 15 3 arch/arm/kernel/ptrace.c:213 (set (pc)
        (label_ref 16)) -1 (nil))
;; End of basic block 3 -> ( 5)

;; Succ edge  5 [100.0%] 

(barrier 15 14 24)

;; Start of basic block () -> 4
(note 24 15 18 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 18 24 19 4 arch/arm/kernel/ptrace.c:213 (clobber (reg/i:SI 0 r0)) -1 (nil))

(insn 19 18 20 4 arch/arm/kernel/ptrace.c:213 (clobber (reg:SI 134 [ <result> ])) -1 (nil))

(jump_insn 20 19 21 4 arch/arm/kernel/ptrace.c:213 (set (pc)
        (label_ref 22)) -1 (nil))
;; End of basic block 4 -> ( 6)

;; Succ edge  6 [100.0%] 

(barrier 21 20 16)

;; Start of basic block ( 3) -> 5
;; Pred edge  3 [100.0%] 
(code_label 16 21 25 5 152 "" [1 uses])

(note 25 16 17 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 17 25 22 5 arch/arm/kernel/ptrace.c:213 (set (reg/i:SI 0 r0)
        (reg:SI 134 [ <result> ])) -1 (nil))
;; End of basic block 5 -> ( 6)

;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 4 5) -> 6
;; Pred edge  4 [100.0%] 
;; Pred edge  5 [100.0%]  (fallthru)
(code_label 22 17 26 6 153 "" [1 uses])

(note 26 22 23 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 23 26 0 6 arch/arm/kernel/ptrace.c:213 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 6 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function flush_ptrace_hw_breakpoint (flush_ptrace_hw_breakpoint)[0:1552]


;; Generating RTL for gimple basic block 2

;; ivtmp.989 = (unsigned int) tsk;

(insn 6 5 0 arch/arm/kernel/ptrace.c:415 (set (reg:SI 133 [ ivtmp.989 ])
        (reg/v/f:SI 136 [ tsk ])) -1 (nil))

;; i = 0;

(insn 7 6 0 arch/arm/kernel/ptrace.c:419 (set (reg/v:SI 134 [ i ])
        (const_int 0 [0x0])) -1 (nil))

;; Generating RTL for gimple basic block 3

;; D.26985 = MEM[index: ivtmp.989, offset: 796];

(insn 9 8 0 arch/arm/kernel/ptrace.c:420 (set (reg/f:SI 135 [ D.26985 ])
        (mem/s/f/j:SI (plus:SI (reg:SI 133 [ ivtmp.989 ])
                (const_int 796 [0x31c])) [0 <variable>.thread.debug.hbp S4 A32])) -1 (nil))

;; if (D.26985 != 0B)

(insn 10 9 11 arch/arm/kernel/ptrace.c:420 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 135 [ D.26985 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 11 10 0 arch/arm/kernel/ptrace.c:420 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 3017 [0xbc9])
        (nil)))

;; Generating RTL for gimple basic block 4

;; unregister_hw_breakpoint (D.26985);

(insn 13 12 14 arch/arm/kernel/ptrace.c:421 (set (reg:SI 0 r0)
        (reg/f:SI 135 [ D.26985 ])) -1 (nil))

(call_insn 14 13 0 arch/arm/kernel/ptrace.c:421 (parallel [
            (call (mem:SI (symbol_ref:SI ("unregister_hw_breakpoint") [flags 0x41] <function_decl 0x11524a00 unregister_hw_breakpoint>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

;; MEM[index: ivtmp.989, offset: 796] = 0B;

(insn 15 14 16 arch/arm/kernel/ptrace.c:422 (set (reg:SI 137)
        (const_int 0 [0x0])) -1 (nil))

(insn 16 15 0 arch/arm/kernel/ptrace.c:422 (set (mem/s/f/j:SI (plus:SI (reg:SI 133 [ ivtmp.989 ])
                (const_int 796 [0x31c])) [0 <variable>.thread.debug.hbp S4 A32])
        (reg:SI 137)) -1 (nil))

;; Generating RTL for gimple basic block 5

;; 

(code_label 17 16 18 155 "" [0 uses])

(note 18 17 0 NOTE_INSN_BASIC_BLOCK)

;; i = i + 1;

(insn 19 18 0 arch/arm/kernel/ptrace.c:419 (set (reg/v:SI 134 [ i ])
        (plus:SI (reg/v:SI 134 [ i ])
            (const_int 1 [0x1]))) -1 (nil))

;; ivtmp.989 = ivtmp.989 + 4;

(insn 20 19 0 arch/arm/kernel/ptrace.c:419 (set (reg:SI 133 [ ivtmp.989 ])
        (plus:SI (reg:SI 133 [ ivtmp.989 ])
            (const_int 4 [0x4]))) -1 (nil))

;; if (i != 32)

(insn 22 20 23 arch/arm/kernel/ptrace.c:419 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 134 [ i ])
            (const_int 32 [0x20]))) -1 (nil))

(jump_insn 23 22 0 arch/arm/kernel/ptrace.c:419 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 21)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 9688 [0x25d8])
        (nil)))

;; Generating RTL for gimple basic block 6


;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 arch/arm/kernel/ptrace.c:415 (set (reg/v/f:SI 136 [ tsk ])
        (reg:SI 0 r0 [ tsk ])) -1 (nil))

(note 3 2 5 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 3)

;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [100.0%]  (fallthru)
(note 5 3 6 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 6 5 7 3 arch/arm/kernel/ptrace.c:415 (set (reg:SI 133 [ ivtmp.989 ])
        (reg/v/f:SI 136 [ tsk ])) -1 (nil))

(insn 7 6 21 3 arch/arm/kernel/ptrace.c:419 (set (reg/v:SI 134 [ i ])
        (const_int 0 [0x0])) -1 (nil))
;; End of basic block 3 -> ( 4)

;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 6 3) -> 4
;; Pred edge  6 [96.9%]  (dfs_back)
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 21 7 8 4 156 "" [1 uses])

(note 8 21 9 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 9 8 10 4 arch/arm/kernel/ptrace.c:420 (set (reg/f:SI 135 [ D.26985 ])
        (mem/s/f/j:SI (plus:SI (reg:SI 133 [ ivtmp.989 ])
                (const_int 796 [0x31c])) [0 <variable>.thread.debug.hbp S4 A32])) -1 (nil))

(insn 10 9 11 4 arch/arm/kernel/ptrace.c:420 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 135 [ D.26985 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 11 10 12 4 arch/arm/kernel/ptrace.c:420 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 17)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 3017 [0xbc9])
        (nil)))
;; End of basic block 4 -> ( 5 6)

;; Succ edge  5 [69.8%]  (fallthru)
;; Succ edge  6 [30.2%] 

;; Start of basic block ( 4) -> 5
;; Pred edge  4 [69.8%]  (fallthru)
(note 12 11 13 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 13 12 14 5 arch/arm/kernel/ptrace.c:421 (set (reg:SI 0 r0)
        (reg/f:SI 135 [ D.26985 ])) -1 (nil))

(call_insn 14 13 15 5 arch/arm/kernel/ptrace.c:421 (parallel [
            (call (mem:SI (symbol_ref:SI ("unregister_hw_breakpoint") [flags 0x41] <function_decl 0x11524a00 unregister_hw_breakpoint>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 15 14 16 5 arch/arm/kernel/ptrace.c:422 (set (reg:SI 137)
        (const_int 0 [0x0])) -1 (nil))

(insn 16 15 17 5 arch/arm/kernel/ptrace.c:422 (set (mem/s/f/j:SI (plus:SI (reg:SI 133 [ ivtmp.989 ])
                (const_int 796 [0x31c])) [0 <variable>.thread.debug.hbp S4 A32])
        (reg:SI 137)) -1 (nil))
;; End of basic block 5 -> ( 6)

;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 4 5) -> 6
;; Pred edge  4 [30.2%] 
;; Pred edge  5 [100.0%]  (fallthru)
(code_label 17 16 18 6 155 "" [1 uses])

(note 18 17 19 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 19 18 20 6 arch/arm/kernel/ptrace.c:419 (set (reg/v:SI 134 [ i ])
        (plus:SI (reg/v:SI 134 [ i ])
            (const_int 1 [0x1]))) -1 (nil))

(insn 20 19 22 6 arch/arm/kernel/ptrace.c:419 (set (reg:SI 133 [ ivtmp.989 ])
        (plus:SI (reg:SI 133 [ ivtmp.989 ])
            (const_int 4 [0x4]))) -1 (nil))

(insn 22 20 23 6 arch/arm/kernel/ptrace.c:419 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 134 [ i ])
            (const_int 32 [0x20]))) -1 (nil))

(jump_insn 23 22 24 6 arch/arm/kernel/ptrace.c:419 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 21)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 9688 [0x25d8])
        (nil)))
;; End of basic block 6 -> ( 4 7)

;; Succ edge  4 [96.9%]  (dfs_back)
;; Succ edge  7 [3.1%]  (fallthru)

;; Start of basic block ( 6) -> 7
;; Pred edge  6 [3.1%]  (fallthru)
(note 24 23 29 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 7 -> ( 8)

;; Succ edge  8 [100.0%]  (fallthru)

;; Start of basic block ( 7) -> 8
;; Pred edge  7 [100.0%]  (fallthru)
(note 29 24 26 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(jump_insn 26 29 27 8 arch/arm/kernel/ptrace.c:425 (set (pc)
        (label_ref 28)) -1 (nil))
;; End of basic block 8 -> ( 10)

;; Succ edge  10 [100.0%] 

(barrier 27 26 25)

;; Start of basic block () -> 9
(code_label 25 27 30 9 154 "" [0 uses])

(note 30 25 28 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 9 -> ( 10)

;; Succ edge  10 [100.0%]  (fallthru)

;; Start of basic block ( 8 9) -> 10
;; Pred edge  8 [100.0%] 
;; Pred edge  9 [100.0%]  (fallthru)
(code_label 28 30 31 10 157 "" [1 uses])

(note 31 28 0 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 10 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function regs_query_register_offset (regs_query_register_offset)[0:1536]


;; Generating RTL for gimple basic block 2

;; roff = &regoffset_table;

(insn 6 5 7 arch/arm/kernel/ptrace.c:97 (set (reg/f:SI 139)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) -1 (nil))

(insn 7 6 0 arch/arm/kernel/ptrace.c:97 (set (reg/v/f:SI 133 [ roff ])
        (reg/f:SI 139)) -1 (nil))

;; Generating RTL for gimple basic block 3

;; D.26779 = strcmp (D.26778, name);

(insn 11 10 12 arch/arm/kernel/ptrace.c:98 (set (reg:SI 0 r0)
        (reg/f:SI 136 [ D.26778 ])) -1 (nil))

(insn 12 11 13 arch/arm/kernel/ptrace.c:98 (set (reg:SI 1 r1)
        (reg/v/f:SI 138 [ name ])) -1 (nil))

(call_insn/i 13 12 14 arch/arm/kernel/ptrace.c:98 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcmp") [flags 0x41] <function_decl 0x51157680 strcmp>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 14 13 15 arch/arm/kernel/ptrace.c:98 (set (reg:SI 140)
        (reg:SI 0 r0)) -1 (nil))

(insn 15 14 0 arch/arm/kernel/ptrace.c:98 (set (reg:SI 135 [ D.26779 ])
        (reg:SI 140)) -1 (nil))

;; if (D.26779 == 0)

(insn 16 15 17 arch/arm/kernel/ptrace.c:98 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 135 [ D.26779 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 17 16 0 arch/arm/kernel/ptrace.c:98 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 9550 [0x254e])
        (nil)))

;; Generating RTL for gimple basic block 4

;; D.26782 = roff->offset;

(insn 19 18 0 arch/arm/kernel/ptrace.c:99 (set (reg:SI 134 [ D.26782 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 133 [ roff ])
                (const_int 4 [0x4])) [0 <variable>.offset+0 S4 A32])) -1 (nil))

;; Generating RTL for gimple basic block 5

;; 

(code_label 22 21 23 161 "" [0 uses])

(note 23 22 0 NOTE_INSN_BASIC_BLOCK)

;; roff = roff + 8;

(insn 24 23 0 arch/arm/kernel/ptrace.c:97 (set (reg/v/f:SI 133 [ roff ])
        (plus:SI (reg/v/f:SI 133 [ roff ])
            (const_int 8 [0x8]))) -1 (nil))

;; Generating RTL for gimple basic block 6

;; 

(code_label 25 24 26 160 "" [0 uses])

(note 26 25 0 NOTE_INSN_BASIC_BLOCK)

;; D.26778 = MEM[base: roff];

(insn 27 26 0 arch/arm/kernel/ptrace.c:97 discrim 1 (set (reg/f:SI 136 [ D.26778 ])
        (mem/s/f/j:SI (reg/v/f:SI 133 [ roff ]) [0 <variable>.name+0 S4 A32])) -1 (nil))

;; if (D.26778 != 0B)

(insn 29 27 30 arch/arm/kernel/ptrace.c:97 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 136 [ D.26778 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 30 29 0 arch/arm/kernel/ptrace.c:97 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 28)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 9550 [0x254e])
        (nil)))

;; Generating RTL for gimple basic block 7

;; D.26782 = -22;

(insn 32 31 0 arch/arm/kernel/ptrace.c:100 (set (reg:SI 134 [ D.26782 ])
        (const_int -22 [0xffffffffffffffea])) -1 (nil))

;; Generating RTL for gimple basic block 8

;; 

(code_label 33 32 34 162 "" [0 uses])

(note 34 33 0 NOTE_INSN_BASIC_BLOCK)

;; return D.26782;

(insn 35 34 36 arch/arm/kernel/ptrace.c:101 (set (reg:SI 137 [ <result> ])
        (reg:SI 134 [ D.26782 ])) -1 (nil))

(jump_insn 36 35 37 arch/arm/kernel/ptrace.c:101 (set (pc)
        (label_ref 0)) -1 (nil))

(barrier 37 36 0)


;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 arch/arm/kernel/ptrace.c:95 (set (reg/v/f:SI 138 [ name ])
        (reg:SI 0 r0 [ name ])) -1 (nil))

(note 3 2 5 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 3)

;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [100.0%]  (fallthru)
(note 5 3 6 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 6 5 7 3 arch/arm/kernel/ptrace.c:97 (set (reg/f:SI 139)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) -1 (nil))

(insn 7 6 8 3 arch/arm/kernel/ptrace.c:97 (set (reg/v/f:SI 133 [ roff ])
        (reg/f:SI 139)) -1 (nil))

(jump_insn 8 7 9 3 arch/arm/kernel/ptrace.c:97 (set (pc)
        (label_ref 25)) -1 (nil))
;; End of basic block 3 -> ( 7)

;; Succ edge  7 [100.0%] 

(barrier 9 8 28)

;; Start of basic block ( 7) -> 4
;; Pred edge  7 [95.5%] 
(code_label 28 9 10 4 163 "" [1 uses])

(note 10 28 11 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 11 10 12 4 arch/arm/kernel/ptrace.c:98 (set (reg:SI 0 r0)
        (reg/f:SI 136 [ D.26778 ])) -1 (nil))

(insn 12 11 13 4 arch/arm/kernel/ptrace.c:98 (set (reg:SI 1 r1)
        (reg/v/f:SI 138 [ name ])) -1 (nil))

(call_insn/i 13 12 14 4 arch/arm/kernel/ptrace.c:98 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcmp") [flags 0x41] <function_decl 0x51157680 strcmp>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 14 13 15 4 arch/arm/kernel/ptrace.c:98 (set (reg:SI 140)
        (reg:SI 0 r0)) -1 (nil))

(insn 15 14 16 4 arch/arm/kernel/ptrace.c:98 (set (reg:SI 135 [ D.26779 ])
        (reg:SI 140)) -1 (nil))

(insn 16 15 17 4 arch/arm/kernel/ptrace.c:98 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 135 [ D.26779 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 17 16 18 4 arch/arm/kernel/ptrace.c:98 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 22)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 9550 [0x254e])
        (nil)))
;; End of basic block 4 -> ( 5 6)

;; Succ edge  5 [4.5%]  (fallthru)
;; Succ edge  6 [95.5%] 

;; Start of basic block ( 4) -> 5
;; Pred edge  4 [4.5%]  (fallthru)
(note 18 17 19 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 19 18 20 5 arch/arm/kernel/ptrace.c:99 (set (reg:SI 134 [ D.26782 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 133 [ roff ])
                (const_int 4 [0x4])) [0 <variable>.offset+0 S4 A32])) -1 (nil))

(jump_insn 20 19 21 5 arch/arm/kernel/ptrace.c:99 (set (pc)
        (label_ref 33)) -1 (nil))
;; End of basic block 5 -> ( 9)

;; Succ edge  9 [100.0%] 

(barrier 21 20 22)

;; Start of basic block ( 4) -> 6
;; Pred edge  4 [95.5%] 
(code_label 22 21 23 6 161 "" [1 uses])

(note 23 22 24 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 24 23 25 6 arch/arm/kernel/ptrace.c:97 (set (reg/v/f:SI 133 [ roff ])
        (plus:SI (reg/v/f:SI 133 [ roff ])
            (const_int 8 [0x8]))) -1 (nil))
;; End of basic block 6 -> ( 7)

;; Succ edge  7 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 3 6) -> 7
;; Pred edge  3 [100.0%] 
;; Pred edge  6 [100.0%]  (fallthru,dfs_back)
(code_label 25 24 26 7 160 "" [1 uses])

(note 26 25 27 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 27 26 29 7 arch/arm/kernel/ptrace.c:97 discrim 1 (set (reg/f:SI 136 [ D.26778 ])
        (mem/s/f/j:SI (reg/v/f:SI 133 [ roff ]) [0 <variable>.name+0 S4 A32])) -1 (nil))

(insn 29 27 30 7 arch/arm/kernel/ptrace.c:97 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 136 [ D.26778 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 30 29 31 7 arch/arm/kernel/ptrace.c:97 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 28)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 9550 [0x254e])
        (nil)))
;; End of basic block 7 -> ( 4 8)

;; Succ edge  4 [95.5%] 
;; Succ edge  8 [4.5%]  (fallthru)

;; Start of basic block ( 7) -> 8
;; Pred edge  7 [4.5%]  (fallthru)
(note 31 30 32 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 32 31 33 8 arch/arm/kernel/ptrace.c:100 (set (reg:SI 134 [ D.26782 ])
        (const_int -22 [0xffffffffffffffea])) -1 (nil))
;; End of basic block 8 -> ( 9)

;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 5 8) -> 9
;; Pred edge  5 [100.0%] 
;; Pred edge  8 [100.0%]  (fallthru)
(code_label 33 32 34 9 162 "" [1 uses])

(note 34 33 35 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 35 34 36 9 arch/arm/kernel/ptrace.c:101 (set (reg:SI 137 [ <result> ])
        (reg:SI 134 [ D.26782 ])) -1 (nil))

(jump_insn 36 35 37 9 arch/arm/kernel/ptrace.c:101 (set (pc)
        (label_ref 38)) -1 (nil))
;; End of basic block 9 -> ( 11)

;; Succ edge  11 [100.0%] 

(barrier 37 36 46)

;; Start of basic block () -> 10
(note 46 37 40 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 40 46 41 10 arch/arm/kernel/ptrace.c:101 (clobber (reg/i:SI 0 r0)) -1 (nil))

(insn 41 40 42 10 arch/arm/kernel/ptrace.c:101 (clobber (reg:SI 137 [ <result> ])) -1 (nil))

(jump_insn 42 41 43 10 arch/arm/kernel/ptrace.c:101 (set (pc)
        (label_ref 44)) -1 (nil))
;; End of basic block 10 -> ( 12)

;; Succ edge  12 [100.0%] 

(barrier 43 42 38)

;; Start of basic block ( 9) -> 11
;; Pred edge  9 [100.0%] 
(code_label 38 43 47 11 159 "" [1 uses])

(note 47 38 39 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 39 47 44 11 arch/arm/kernel/ptrace.c:101 (set (reg/i:SI 0 r0)
        (reg:SI 137 [ <result> ])) -1 (nil))
;; End of basic block 11 -> ( 12)

;; Succ edge  12 [100.0%]  (fallthru)

;; Start of basic block ( 10 11) -> 12
;; Pred edge  10 [100.0%] 
;; Pred edge  11 [100.0%]  (fallthru)
(code_label 44 39 48 12 164 "" [1 uses])

(note 48 44 45 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 45 48 0 12 arch/arm/kernel/ptrace.c:101 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 12 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)

