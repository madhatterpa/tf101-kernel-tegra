
;; Function tcm_init (tcm_init)[0:1385]

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


try_optimize_cfg iteration 1


Number of successful forward propagations: 0



tcm_init

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	
;;  ref usage 	r0={1d} r1={1d} r2={1d} r3={1d} r11={1d,2u} r12={1d} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} 
;;    total ref usage 18{10d,8u,0e} in 0{0 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 5, 7
0[0,1] 1[1,1] 2[2,1] 3[3,1] 11[4,1] 12[5,1] 13[6,1] 14[7,1] 25[8,1] 26[9,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(10)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 0 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function cpu_architecture (cpu_architecture)[0:1386]

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18
;; 2 succs { 15 3 }
;; 3 succs { 4 7 }
;; 4 succs { 6 5 }
;; 5 succs { 18 }
;; 6 succs { 18 }
;; 7 succs { 8 10 }
;; 8 succs { 9 18 }
;; 9 succs { 18 }
;; 10 succs { 11 15 }
;; 11 succs { 17 12 }
;; 12 succs { 17 13 }
;; 13 succs { 16 14 }
;; 14 succs { 16 15 }
;; 15 succs { 18 }
;; 16 succs { 18 }
;; 17 succs { 18 }
;; 18 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 19 n_edges 28 count 36 (  1.9)
df_worklist_dataflow_doublequeue:n_basic_blocks 19 n_edges 28 count 36 (  1.9)
df_worklist_dataflow_doublequeue:n_basic_blocks 19 n_edges 28 count 36 (  1.9)


try_optimize_cfg iteration 1

deferring deletion of insn with uid = 80.
deferring deletion of insn with uid = 46.
deferring deletion of insn with uid = 35.
deferring deletion of insn with uid = 30.
deferring deletion of insn with uid = 15.
deferring deletion of insn with uid = 11.
deferring deletion of insn with uid = 10.
Deleted 7 trivially dead insns

Number of successful forward propagations: 0



cpu_architecture

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 24[cc]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r3={1d} r11={1d,18u} r12={1d} r13={1d,18u} r14={1d,1u} r24={11d,10u} r25={1d,18u} r26={1d,17u} r133={1d} r134={1d} r135={1d} r136={1d} r137={1d} r138={1d,10u} r139={1d,2u} r140={7d,4u} r141={1d,2u} r142={1d,2u} r143={1d} r144={1d,3u} r145={1d} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} 
;;    total ref usage 156{45d,111u,0e} in 38{38 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19
0[0,2] 1[2,1] 2[3,1] 3[4,1] 11[5,1] 12[6,1] 13[7,1] 14[8,1] 24[9,11] 25[20,1] 26[21,1] 133[22,1] 134[23,1] 135[24,1] 136[25,1] 137[26,1] 138[27,1] 139[28,1] 140[29,7] 141[36,1] 142[37,1] 143[38,1] 144[39,1] 145[40,1] 146[41,1] 147[42,1] 148[43,1] 149[44,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 138 144
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 138 144
;; live  kill	 24 [cc]
;; rd  in  	(10)
1, 2, 3, 4, 5, 6, 7, 8, 20, 21
;; rd  gen 	(3)
18, 27, 39
;; rd  kill	(13)
9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 27, 39

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)

(insn 5 2 6 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/cputype.h:60 (parallel [
            (set (reg/v:SI 138 [ __val ])
                (asm_operands:SI ("mrc	p15, 0, %0, c0, c0, 0") ("=r") 0 []
                     [] 8199339))
            (clobber (reg:QI 24 cc))
        ]) -1 (nil))

(insn 6 5 7 2 arch/arm/kernel/setup.c:217 (set (reg:SI 144)
        (and:SI (reg/v:SI 138 [ __val ])
            (const_int 585728 [0x8f000]))) 67 {*arm_andsi3_insn} (nil))

(insn 7 6 8 2 arch/arm/kernel/setup.c:217 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 144)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 8 7 9 2 arch/arm/kernel/setup.c:217 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 65)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))
;; End of basic block 2 -> ( 15 3)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 144
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 144
;; rd  out 	(13)
1, 2, 3, 4, 5, 6, 7, 8, 18, 20, 21, 27, 39


;; Succ edge  15 [39.0%] 
;; Succ edge  3 [61.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u7(11){ }u8(13){ }u9(25){ }u10(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 144
;; lr  def 	 24 [cc] 137 145
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 144
;; live  gen 	 24 [cc] 137 145
;; live  kill	
;; rd  in  	(13)
1, 2, 3, 4, 5, 6, 7, 8, 18, 20, 21, 27, 39
;; rd  gen 	(3)
9, 26, 40
;; rd  kill	(13)
9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 26, 40

;; Pred edge  2 [61.0%]  (fallthru)
(note 9 8 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 12 9 13 3 arch/arm/kernel/setup.c:219 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 144)
            (const_int 28672 [0x7000]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 13 12 14 3 arch/arm/kernel/setup.c:219 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 28)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
        (nil)))
;; End of basic block 3 -> ( 4 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; rd  out 	(15)
1, 2, 3, 4, 5, 6, 7, 8, 9, 20, 21, 26, 27, 39, 40


;; Succ edge  4 [28.0%]  (fallthru)
;; Succ edge  7 [72.0%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u15(11){ }u16(13){ }u17(25){ }u18(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 24 [cc] 136 146
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; live  gen 	 24 [cc] 136 146
;; live  kill	
;; rd  in  	(15)
1, 2, 3, 4, 5, 6, 7, 8, 9, 20, 21, 26, 27, 39, 40
;; rd  gen 	(3)
17, 25, 41
;; rd  kill	(13)
9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 25, 41

;; Pred edge  3 [28.0%]  (fallthru)
(note 14 13 16 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 16 14 17 4 arch/arm/kernel/setup.c:220 (set (reg:SI 146)
        (and:SI (reg/v:SI 138 [ __val ])
            (const_int 8388608 [0x800000]))) 67 {*arm_andsi3_insn} (nil))

(insn 17 16 18 4 arch/arm/kernel/setup.c:220 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 146)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 18 17 19 4 arch/arm/kernel/setup.c:220 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 23)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))
;; End of basic block 4 -> ( 6 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(17)
1, 2, 3, 4, 5, 6, 7, 8, 17, 20, 21, 25, 26, 27, 39, 40, 41


;; Succ edge  6 [39.0%] 
;; Succ edge  5 [61.0%]  (fallthru)

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u23(11){ }u24(13){ }u25(25){ }u26(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 140
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 140
;; live  kill	
;; rd  in  	(17)
1, 2, 3, 4, 5, 6, 7, 8, 17, 20, 21, 25, 26, 27, 39, 40, 41
;; rd  gen 	(1)
35
;; rd  kill	(7)
29, 30, 31, 32, 33, 34, 35

;; Pred edge  4 [61.0%]  (fallthru)
(note 19 18 20 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 20 19 23 5 arch/arm/kernel/setup.c:220 discrim 2 (set (reg/v:SI 140 [ cpu_arch ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 5 -> ( 18)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
;; rd  out 	(18)
1, 2, 3, 4, 5, 6, 7, 8, 17, 20, 21, 25, 26, 27, 35, 39, 40, 41


;; Succ edge  18 [100.0%]  (fallthru)

;; Start of basic block ( 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u27(11){ }u28(13){ }u29(25){ }u30(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 140
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 140
;; live  kill	
;; rd  in  	(17)
1, 2, 3, 4, 5, 6, 7, 8, 17, 20, 21, 25, 26, 27, 39, 40, 41
;; rd  gen 	(1)
34
;; rd  kill	(7)
29, 30, 31, 32, 33, 34, 35

;; Pred edge  4 [39.0%] 
(code_label 23 20 24 6 6 "" [1 uses])

(note 24 23 25 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 25 24 28 6 arch/arm/kernel/setup.c:220 discrim 1 (set (reg/v:SI 140 [ cpu_arch ])
        (const_int 3 [0x3])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 6 -> ( 18)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
;; rd  out 	(18)
1, 2, 3, 4, 5, 6, 7, 8, 17, 20, 21, 25, 26, 27, 34, 39, 40, 41


;; Succ edge  18 [100.0%]  (fallthru)

;; Start of basic block ( 3) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u31(11){ }u32(13){ }u33(25){ }u34(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 24 [cc] 135 147
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; live  gen 	 24 [cc] 135 147
;; live  kill	
;; rd  in  	(15)
1, 2, 3, 4, 5, 6, 7, 8, 9, 20, 21, 26, 27, 39, 40
;; rd  gen 	(3)
16, 24, 42
;; rd  kill	(13)
9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 42

;; Pred edge  3 [72.0%] 
(code_label 28 25 29 7 5 "" [1 uses])

(note 29 28 31 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 31 29 32 7 arch/arm/kernel/setup.c:221 (set (reg:SI 147)
        (and:SI (reg/v:SI 138 [ __val ])
            (const_int 524288 [0x80000]))) 67 {*arm_andsi3_insn} (nil))

(insn 32 31 33 7 arch/arm/kernel/setup.c:221 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 147)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 33 32 34 7 arch/arm/kernel/setup.c:221 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 44)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 7 -> ( 8 10)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; rd  out 	(17)
1, 2, 3, 4, 5, 6, 7, 8, 16, 20, 21, 24, 26, 27, 39, 40, 42


;; Succ edge  8 [50.0%]  (fallthru)
;; Succ edge  10 [50.0%] 

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u39(11){ }u40(13){ }u41(25){ }u42(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 24 [cc] 134 140 148
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; live  gen 	 24 [cc] 134 140 148
;; live  kill	
;; rd  in  	(17)
1, 2, 3, 4, 5, 6, 7, 8, 16, 20, 21, 24, 26, 27, 39, 40, 42
;; rd  gen 	(4)
15, 23, 33, 43
;; rd  kill	(20)
9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 23, 29, 30, 31, 32, 33, 34, 35, 43

;; Pred edge  7 [50.0%]  (fallthru)
(note 34 33 36 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 36 34 37 8 arch/arm/kernel/setup.c:222 (set (reg:SI 148)
        (lshiftrt:SI (reg/v:SI 138 [ __val ])
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (nil))

(insn 37 36 38 8 arch/arm/kernel/setup.c:222 (set (reg/v:SI 140 [ cpu_arch ])
        (and:SI (reg:SI 148)
            (const_int 7 [0x7]))) 67 {*arm_andsi3_insn} (nil))

(insn 38 37 39 8 arch/arm/kernel/setup.c:223 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 140 [ cpu_arch ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 39 38 40 8 arch/arm/kernel/setup.c:223 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 78)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 8 -> ( 9 18)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
;; rd  out 	(20)
1, 2, 3, 4, 5, 6, 7, 8, 15, 20, 21, 23, 24, 26, 27, 33, 39, 40, 42, 43


;; Succ edge  9 [50.0%]  (fallthru)
;; Succ edge  18 [50.0%] 

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u48(11){ }u49(13){ }u50(25){ }u51(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 140
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
;; live  gen 	 140
;; live  kill	
;; rd  in  	(20)
1, 2, 3, 4, 5, 6, 7, 8, 15, 20, 21, 23, 24, 26, 27, 33, 39, 40, 42, 43
;; rd  gen 	(1)
32
;; rd  kill	(7)
29, 30, 31, 32, 33, 34, 35

;; Pred edge  8 [50.0%]  (fallthru)
(note 40 39 41 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 41 40 44 9 arch/arm/kernel/setup.c:224 (set (reg/v:SI 140 [ cpu_arch ])
        (plus:SI (reg/v:SI 140 [ cpu_arch ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))
;; End of basic block 9 -> ( 18)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
;; rd  out 	(20)
1, 2, 3, 4, 5, 6, 7, 8, 15, 20, 21, 23, 24, 26, 27, 32, 39, 40, 42, 43


;; Succ edge  18 [100.0%]  (fallthru)

;; Start of basic block ( 7) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u53(11){ }u54(13){ }u55(25){ }u56(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 24 [cc] 133 149
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; live  gen 	 24 [cc] 133 149
;; live  kill	
;; rd  in  	(17)
1, 2, 3, 4, 5, 6, 7, 8, 16, 20, 21, 24, 26, 27, 39, 40, 42
;; rd  gen 	(3)
14, 22, 44
;; rd  kill	(13)
9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 44

;; Pred edge  7 [50.0%] 
(code_label 44 41 45 10 8 "" [1 uses])

(note 45 44 47 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 47 45 48 10 arch/arm/kernel/setup.c:225 (set (reg:SI 149)
        (and:SI (reg/v:SI 138 [ __val ])
            (const_int 983040 [0xf0000]))) 67 {*arm_andsi3_insn} (nil))

(insn 48 47 49 10 arch/arm/kernel/setup.c:225 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 149)
            (const_int 983040 [0xf0000]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 49 48 50 10 arch/arm/kernel/setup.c:225 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 65)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5588 [0x15d4])
        (nil)))
;; End of basic block 10 -> ( 11 15)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(19)
1, 2, 3, 4, 5, 6, 7, 8, 14, 20, 21, 22, 24, 26, 27, 39, 40, 42, 44


;; Succ edge  11 [44.1%]  (fallthru)
;; Succ edge  15 [55.9%] 

;; Start of basic block ( 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u61(11){ }u62(13){ }u63(25){ }u64(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 139 142
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 139 142
;; live  kill	
;; rd  in  	(19)
1, 2, 3, 4, 5, 6, 7, 8, 14, 20, 21, 22, 24, 26, 27, 39, 40, 42, 44
;; rd  gen 	(3)
13, 28, 37
;; rd  kill	(13)
9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 28, 37

;; Pred edge  10 [44.1%]  (fallthru)
(note 50 49 51 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 51 50 52 11 arch/arm/kernel/setup.c:230 (set (reg/v:SI 139 [ mmfr0 ])
        (asm_operands:SI ("mrc	p15, 0, %0, c0, c1, 4") ("=r") 0 []
             [] 10427624)) -1 (nil))

(insn 52 51 53 11 arch/arm/kernel/setup.c:232 (set (reg:SI 142 [ D.25378 ])
        (and:SI (reg/v:SI 139 [ mmfr0 ])
            (const_int 15 [0xf]))) 67 {*arm_andsi3_insn} (nil))

(insn 53 52 54 11 arch/arm/kernel/setup.c:232 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 142 [ D.25378 ])
            (const_int 2 [0x2]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 54 53 55 11 arch/arm/kernel/setup.c:232 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 75)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 3300 [0xce4])
        (nil)))
;; End of basic block 11 -> ( 17 12)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 142
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 142
;; rd  out 	(21)
1, 2, 3, 4, 5, 6, 7, 8, 13, 20, 21, 22, 24, 26, 27, 28, 37, 39, 40, 42, 44


;; Succ edge  17 [33.0%] 
;; Succ edge  12 [67.0%]  (fallthru)

;; Start of basic block ( 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u68(11){ }u69(13){ }u70(25){ }u71(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 142
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 24 [cc] 141
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 142
;; live  gen 	 24 [cc] 141
;; live  kill	
;; rd  in  	(21)
1, 2, 3, 4, 5, 6, 7, 8, 13, 20, 21, 22, 24, 26, 27, 28, 37, 39, 40, 42, 44
;; rd  gen 	(2)
12, 36
;; rd  kill	(12)
9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 36

;; Pred edge  11 [67.0%]  (fallthru)
(note 55 54 56 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 56 55 57 12 arch/arm/kernel/setup.c:233 (set (reg:SI 141 [ D.25380 ])
        (and:SI (reg/v:SI 139 [ mmfr0 ])
            (const_int 240 [0xf0]))) 67 {*arm_andsi3_insn} (nil))

(insn 57 56 58 12 arch/arm/kernel/setup.c:232 discrim 2 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 141 [ D.25380 ])
            (const_int 47 [0x2f]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 58 57 59 12 arch/arm/kernel/setup.c:232 discrim 2 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 75)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 3300 [0xce4])
        (nil)))
;; End of basic block 12 -> ( 17 13)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 142
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 142
;; rd  out 	(22)
1, 2, 3, 4, 5, 6, 7, 8, 12, 20, 21, 22, 24, 26, 27, 28, 36, 37, 39, 40, 42, 44


;; Succ edge  17 [33.0%] 
;; Succ edge  13 [67.0%]  (fallthru)

;; Start of basic block ( 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u75(11){ }u76(13){ }u77(25){ }u78(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 142
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 142
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(22)
1, 2, 3, 4, 5, 6, 7, 8, 12, 20, 21, 22, 24, 26, 27, 28, 36, 37, 39, 40, 42, 44
;; rd  gen 	(1)
11
;; rd  kill	(11)
9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19

;; Pred edge  12 [67.0%]  (fallthru)
(note 59 58 60 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 60 59 61 13 arch/arm/kernel/setup.c:235 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 142 [ D.25378 ])
            (const_int 2 [0x2]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 61 60 62 13 arch/arm/kernel/setup.c:235 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 70)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 1608 [0x648])
        (nil)))
;; End of basic block 13 -> ( 16 14)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141
;; rd  out 	(22)
1, 2, 3, 4, 5, 6, 7, 8, 11, 20, 21, 22, 24, 26, 27, 28, 36, 37, 39, 40, 42, 44


;; Succ edge  16 [16.1%] 
;; Succ edge  14 [83.9%]  (fallthru)

;; Start of basic block ( 13) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u81(11){ }u82(13){ }u83(25){ }u84(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(22)
1, 2, 3, 4, 5, 6, 7, 8, 11, 20, 21, 22, 24, 26, 27, 28, 36, 37, 39, 40, 42, 44
;; rd  gen 	(1)
10
;; rd  kill	(11)
9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19

;; Pred edge  13 [83.9%]  (fallthru)
(note 62 61 63 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 63 62 64 14 arch/arm/kernel/setup.c:235 discrim 2 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 141 [ D.25380 ])
            (const_int 32 [0x20]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 64 63 65 14 arch/arm/kernel/setup.c:235 discrim 2 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 70)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 1991 [0x7c7])
        (nil)))
;; End of basic block 14 -> ( 16 15)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(22)
1, 2, 3, 4, 5, 6, 7, 8, 10, 20, 21, 22, 24, 26, 27, 28, 36, 37, 39, 40, 42, 44


;; Succ edge  16 [19.9%] 
;; Succ edge  15 [80.1%]  (fallthru)

;; Start of basic block ( 2 14 10) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u87(11){ }u88(13){ }u89(25){ }u90(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 140
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 140
;; live  kill	
;; rd  in  	(24)
1, 2, 3, 4, 5, 6, 7, 8, 10, 14, 18, 20, 21, 22, 24, 26, 27, 28, 36, 37, 39, 40, 42, 44
;; rd  gen 	(1)
31
;; rd  kill	(7)
29, 30, 31, 32, 33, 34, 35

;; Pred edge  2 [39.0%] 
;; Pred edge  14 [80.1%]  (fallthru)
;; Pred edge  10 [55.9%] 
(code_label 65 64 66 15 4 "" [2 uses])

(note 66 65 67 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 67 66 70 15 arch/arm/kernel/setup.c:218 (set (reg/v:SI 140 [ cpu_arch ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 15 -> ( 18)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
;; rd  out 	(25)
1, 2, 3, 4, 5, 6, 7, 8, 10, 14, 18, 20, 21, 22, 24, 26, 27, 28, 31, 36, 37, 39, 40, 42, 44


;; Succ edge  18 [100.0%]  (fallthru)

;; Start of basic block ( 14 13) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u91(11){ }u92(13){ }u93(25){ }u94(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 140
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 140
;; live  kill	
;; rd  in  	(23)
1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 20, 21, 22, 24, 26, 27, 28, 36, 37, 39, 40, 42, 44
;; rd  gen 	(1)
30
;; rd  kill	(7)
29, 30, 31, 32, 33, 34, 35

;; Pred edge  14 [19.9%] 
;; Pred edge  13 [16.1%] 
(code_label 70 67 71 16 10 "" [2 uses])

(note 71 70 72 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 72 71 75 16 arch/arm/kernel/setup.c:237 (set (reg/v:SI 140 [ cpu_arch ])
        (const_int 8 [0x8])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 16 -> ( 18)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
;; rd  out 	(24)
1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 20, 21, 22, 24, 26, 27, 28, 30, 36, 37, 39, 40, 42, 44


;; Succ edge  18 [100.0%]  (fallthru)

;; Start of basic block ( 11 12) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u95(11){ }u96(13){ }u97(25){ }u98(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 140
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 140
;; live  kill	
;; rd  in  	(23)
1, 2, 3, 4, 5, 6, 7, 8, 12, 13, 20, 21, 22, 24, 26, 27, 28, 36, 37, 39, 40, 42, 44
;; rd  gen 	(1)
29
;; rd  kill	(7)
29, 30, 31, 32, 33, 34, 35

;; Pred edge  11 [33.0%] 
;; Pred edge  12 [33.0%] 
(code_label 75 72 76 17 9 "" [2 uses])

(note 76 75 77 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 77 76 78 17 arch/arm/kernel/setup.c:234 (set (reg/v:SI 140 [ cpu_arch ])
        (const_int 9 [0x9])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 17 -> ( 18)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
;; rd  out 	(24)
1, 2, 3, 4, 5, 6, 7, 8, 12, 13, 20, 21, 22, 24, 26, 27, 28, 29, 36, 37, 39, 40, 42, 44


;; Succ edge  18 [100.0%]  (fallthru)

;; Start of basic block ( 17 16 6 15 9 5 8) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u99(11){ }u100(13){ }u101(25){ }u102(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 0 [r0] 143
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
;; live  gen 	 0 [r0] 143
;; live  kill	
;; rd  in  	(40)
1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44
;; rd  gen 	(2)
0, 38
;; rd  kill	(3)
0, 1, 38

;; Pred edge  17 [100.0%]  (fallthru)
;; Pred edge  16 [100.0%]  (fallthru)
;; Pred edge  6 [100.0%]  (fallthru)
;; Pred edge  15 [100.0%]  (fallthru)
;; Pred edge  9 [100.0%]  (fallthru)
;; Pred edge  5 [100.0%]  (fallthru)
;; Pred edge  8 [50.0%] 
(code_label 78 77 79 18 7 "" [1 uses])

(note 79 78 84 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 84 79 90 18 arch/arm/kernel/setup.c:244 (set (reg/i:SI 0 r0)
        (reg/v:SI 140 [ cpu_arch ])) 167 {*arm_movsi_insn} (nil))

(insn 90 84 0 18 arch/arm/kernel/setup.c:244 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 18 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(41)
0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
deleting insn with uid = 10.
deleting insn with uid = 11.
deleting insn with uid = 15.
deleting insn with uid = 30.
deleting insn with uid = 35.
deleting insn with uid = 46.
deleting insn with uid = 80.
ending the processing of deferred insns

;; Function parse_tag_core (parse_tag_core)[0:1398] (unlikely executed)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 12 (  1.7)
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 12 (  1.7)
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 12 (  1.7)

In insn 16, replacing
 (reg/f:SI 139)
 with (symbol_ref:SI ("root_mountflags") [flags 0xc0] <var_decl 0x10a76c00 root_mountflags>)
Changes to insn 16 not profitable

In insn 37, replacing
 (reg:SI 134 [ <result> ])
 with (const_int 0 [0x0])
Changes to insn 37 not profitable


try_optimize_cfg iteration 1

deferring deletion of insn with uid = 16.
Deleted 1 trivially dead insns

Number of successful forward propagations: 0



parse_tag_core

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 24[cc]
;;  ref usage 	r0={2d,3u} r1={1d} r2={1d} r3={1d} r11={1d,6u} r12={1d} r13={1d,6u} r14={1d,1u} r24={2d,2u} r25={1d,6u} r26={1d,5u} r133={1d,2u} r134={1d,1u} r135={1d,3u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,3u} r140={1d} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} 
;;    total ref usage 80{30d,50u,0e} in 24{24 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 6, 8, 9, 10
0[0,2] 1[2,1] 2[3,1] 3[4,1] 11[5,1] 12[6,1] 13[7,1] 14[8,1] 24[9,2] 25[11,1] 26[12,1] 133[13,1] 134[14,1] 135[15,1] 136[16,1] 137[17,1] 138[18,1] 139[19,1] 140[20,1] 141[21,1] 142[22,1] 143[23,1] 144[24,1] 145[25,1] 146[26,1] 147[27,1] 148[28,1] 149[29,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 135 136
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 135 136
;; live  kill	
;; rd  in  	(10)
1, 2, 3, 4, 5, 6, 7, 8, 11, 12
;; rd  gen 	(3)
10, 15, 16
;; rd  kill	(4)
9, 10, 15, 16

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 arch/arm/kernel/setup.c:594 (set (reg/v/f:SI 135 [ tag ])
        (reg:SI 0 r0 [ tag ])) 167 {*arm_movsi_insn} (nil))

(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 3 7 2 arch/arm/kernel/setup.c:595 (set (reg:SI 136 [ <variable>.hdr.size ])
        (mem/s/j:SI (reg/v/f:SI 135 [ tag ]) [0 <variable>.hdr.size+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 7 6 8 2 arch/arm/kernel/setup.c:595 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 136 [ <variable>.hdr.size ])
            (const_int 2 [0x2]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 8 7 9 2 arch/arm/kernel/setup.c:595 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 31)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))
;; End of basic block 2 -> ( 3 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; rd  out 	(13)
1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 15, 16


;; Succ edge  3 [61.0%]  (fallthru)
;; Succ edge  6 [39.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(11){ }u9(13){ }u10(25){ }u11(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc] 137 138
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  gen 	 24 [cc] 137 138
;; live  kill	
;; rd  in  	(13)
1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 15, 16
;; rd  gen 	(3)
9, 17, 18
;; rd  kill	(4)
9, 10, 17, 18

;; Pred edge  2 [61.0%]  (fallthru)
(note 9 8 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 10 9 11 3 arch/arm/kernel/setup.c:596 (set (reg:SI 138 [ <variable>.u.core.flags ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 135 [ tag ])
                (const_int 8 [0x8])) [0 <variable>.u.core.flags+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 11 10 12 3 arch/arm/kernel/setup.c:596 (set (reg:SI 137)
        (and:SI (reg:SI 138 [ <variable>.u.core.flags ])
            (const_int 1 [0x1]))) 67 {*arm_andsi3_insn} (nil))

(insn 12 11 13 3 arch/arm/kernel/setup.c:596 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 137)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 13 12 14 3 arch/arm/kernel/setup.c:596 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 20)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 3 -> ( 4 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; rd  out 	(15)
1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 16, 17, 18


;; Succ edge  4 [50.0%]  (fallthru)
;; Succ edge  5 [50.0%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u16(11){ }u17(13){ }u18(25){ }u19(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 139 140 141 142
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  gen 	 139 140 141 142
;; live  kill	
;; rd  in  	(15)
1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 16, 17, 18
;; rd  gen 	(4)
19, 20, 21, 22
;; rd  kill	(4)
19, 20, 21, 22

;; Pred edge  3 [50.0%]  (fallthru)
(note 14 13 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 15 14 17 4 arch/arm/kernel/setup.c:597 (set (reg/f:SI 139)
        (symbol_ref:SI ("root_mountflags") [flags 0xc0] <var_decl 0x10a76c00 root_mountflags>)) 167 {*arm_movsi_insn} (nil))

(insn 17 15 18 4 arch/arm/kernel/setup.c:597 (set (reg:SI 141 [ root_mountflags ])
        (mem/c/i:SI (reg/f:SI 139) [0 root_mountflags+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 18 17 19 4 arch/arm/kernel/setup.c:597 (set (reg:SI 142)
        (and:SI (reg:SI 141 [ root_mountflags ])
            (const_int -2 [0xfffffffffffffffe]))) 67 {*arm_andsi3_insn} (nil))

(insn 19 18 20 4 arch/arm/kernel/setup.c:597 (set (mem/c/i:SI (reg/f:SI 139) [0 root_mountflags+0 S4 A32])
        (reg:SI 142)) 167 {*arm_movsi_insn} (nil))
;; End of basic block 4 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; rd  out 	(19)
1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 16, 17, 18, 19, 20, 21, 22


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 3 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u25(11){ }u26(13){ }u27(25){ }u28(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 133 143 144 145 146 147 148 149
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  gen 	 133 143 144 145 146 147 148 149
;; live  kill	
;; rd  in  	(19)
1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 16, 17, 18, 19, 20, 21, 22
;; rd  gen 	(8)
13, 23, 24, 25, 26, 27, 28, 29
;; rd  kill	(8)
13, 23, 24, 25, 26, 27, 28, 29

;; Pred edge  3 [50.0%] 
;; Pred edge  4 [100.0%]  (fallthru)
(code_label 20 19 21 5 15 "" [1 uses])

(note 21 20 22 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 22 21 23 5 arch/arm/kernel/setup.c:598 (set (reg:SI 143 [ <variable>.u.core.rootdev ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 135 [ tag ])
                (const_int 16 [0x10])) [0 <variable>.u.core.rootdev+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 23 22 24 5 arch/arm/kernel/setup.c:598 (set (reg:SI 133 [ D.25652 ])
        (zero_extend:SI (subreg:HI (reg:SI 143 [ <variable>.u.core.rootdev ]) 0))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 24 23 25 5 arch/arm/kernel/setup.c:598 (set (reg/f:SI 144)
        (symbol_ref:SI ("ROOT_DEV") [flags 0xc0] <var_decl 0x11069de0 ROOT_DEV>)) 167 {*arm_movsi_insn} (nil))

(insn 25 24 26 5 arch/arm/kernel/setup.c:598 (set (reg:SI 145)
        (lshiftrt:SI (reg:SI 133 [ D.25652 ])
            (const_int 8 [0x8]))) 117 {*arm_shiftsi3} (nil))

(insn 26 25 27 5 arch/arm/kernel/setup.c:598 (set (reg:SI 146)
        (zero_extend:SI (subreg:HI (reg:SI 145) 0))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 27 26 28 5 arch/arm/kernel/setup.c:598 (set (reg:SI 147)
        (ashift:SI (reg:SI 146)
            (const_int 20 [0x14]))) 117 {*arm_shiftsi3} (nil))

(insn 28 27 29 5 arch/arm/kernel/setup.c:598 (set (reg:SI 148)
        (and:SI (reg:SI 133 [ D.25652 ])
            (const_int 255 [0xff]))) 67 {*arm_andsi3_insn} (nil))

(insn 29 28 30 5 arch/arm/kernel/setup.c:598 (set (reg:SI 149)
        (ior:SI (reg:SI 147)
            (reg:SI 148))) 89 {*arm_iorsi3} (nil))

(insn 30 29 31 5 arch/arm/kernel/setup.c:598 (set (mem/c/i:SI (reg/f:SI 144) [0 ROOT_DEV+0 S4 A32])
        (reg:SI 149)) 167 {*arm_movsi_insn} (nil))
;; End of basic block 5 -> ( 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(27)
1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29


;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 2 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u39(11){ }u40(13){ }u41(25){ }u42(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 134
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 134
;; live  kill	
;; rd  in  	(28)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29
;; rd  gen 	(2)
0, 14
;; rd  kill	(3)
0, 1, 14

;; Pred edge  2 [39.0%] 
;; Pred edge  5 [100.0%]  (fallthru)
(code_label 31 30 32 6 14 "" [1 uses])

(note 32 31 33 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 33 32 37 6 arch/arm/kernel/setup.c:601 (set (reg:SI 134 [ <result> ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 37 33 43 6 arch/arm/kernel/setup.c:601 (set (reg/i:SI 0 r0)
        (reg:SI 134 [ <result> ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 43 37 0 6 arch/arm/kernel/setup.c:601 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 6 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(29)
0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
deleting insn with uid = 16.
ending the processing of deferred insns

;; Function parse_tag_ramdisk (parse_tag_ramdisk)[0:1400] (unlikely executed)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)

In insn 10, replacing
 (reg:SI 133 [ <result> ])
 with (const_int 0 [0x0])
Changes to insn 10 not profitable


try_optimize_cfg iteration 1


Number of successful forward propagations: 0



parse_tag_ramdisk

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r3={1d} r11={1d,2u} r12={1d} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r133={1d,1u} 
;;    total ref usage 23{12d,11u,0e} in 3{3 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 6, 8
0[0,2] 1[2,1] 2[3,1] 3[4,1] 11[5,1] 12[6,1] 13[7,1] 14[8,1] 25[9,1] 26[10,1] 133[11,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 133
;; live  kill	
;; rd  in  	(10)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10
;; rd  gen 	(2)
0, 11
;; rd  kill	(3)
0, 1, 11

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 0 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 3 10 2 arch/arm/kernel/setup.c:645 (set (reg:SI 133 [ <result> ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 10 6 16 2 arch/arm/kernel/setup.c:645 (set (reg/i:SI 0 r0)
        (reg:SI 133 [ <result> ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 16 10 0 2 arch/arm/kernel/setup.c:645 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(11)
0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function parse_tag_serialnr (parse_tag_serialnr)[0:1401] (unlikely executed)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)

In insn 9, replacing
 (reg/f:SI 135)
 with (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
Changes to insn 9 not profitable

In insn 16, replacing
 (reg:SI 133 [ <result> ])
 with (const_int 0 [0x0])
Changes to insn 16 not profitable


try_optimize_cfg iteration 1

deferring deletion of insn with uid = 9.
Deleted 1 trivially dead insns

Number of successful forward propagations: 0



parse_tag_serialnr

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0]
;;  ref usage 	r0={2d,3u} r1={1d} r2={1d} r3={1d} r11={1d,2u} r12={1d} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r133={1d,1u} r134={1d,2u} r135={1d,3u} r136={1d,1u} r137={1d} r138={1d,1u} 
;;    total ref usage 36{17d,19u,0e} in 9{9 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 6, 8
0[0,2] 1[2,1] 2[3,1] 3[4,1] 11[5,1] 12[6,1] 13[7,1] 14[8,1] 25[9,1] 26[10,1] 133[11,1] 134[12,1] 135[13,1] 136[14,1] 137[15,1] 138[16,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 133 134 135 136 137 138
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 133 134 135 136 137 138
;; live  kill	
;; rd  in  	(10)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10
;; rd  gen 	(7)
0, 11, 12, 13, 14, 15, 16
;; rd  kill	(8)
0, 1, 11, 12, 13, 14, 15, 16

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 arch/arm/kernel/setup.c:650 (set (reg/v/f:SI 134 [ tag ])
        (reg:SI 0 r0 [ tag ])) 167 {*arm_movsi_insn} (nil))

(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 3 7 2 arch/arm/kernel/setup.c:651 (set (reg/f:SI 135)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 7 6 8 2 arch/arm/kernel/setup.c:651 (set (reg:SI 136 [ <variable>.u.serialnr.low ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 134 [ tag ])
                (const_int 8 [0x8])) [0 <variable>.u.serialnr.low+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 8 7 10 2 arch/arm/kernel/setup.c:651 (set (mem/c/i:SI (reg/f:SI 135) [0 system_serial_low+0 S4 A32])
        (reg:SI 136 [ <variable>.u.serialnr.low ])) 167 {*arm_movsi_insn} (nil))

(insn 10 8 11 2 arch/arm/kernel/setup.c:652 (set (reg:SI 138 [ <variable>.u.serialnr.high ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 134 [ tag ])
                (const_int 12 [0xc])) [0 <variable>.u.serialnr.high+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 11 10 12 2 arch/arm/kernel/setup.c:652 (set (mem/c/i:SI (plus:SI (reg/f:SI 135)
                (const_int 4 [0x4])) [0 system_serial_high+0 S4 A32])
        (reg:SI 138 [ <variable>.u.serialnr.high ])) 167 {*arm_movsi_insn} (nil))

(insn 12 11 16 2 arch/arm/kernel/setup.c:654 (set (reg:SI 133 [ <result> ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 16 12 22 2 arch/arm/kernel/setup.c:654 (set (reg/i:SI 0 r0)
        (reg:SI 133 [ <result> ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 22 16 0 2 arch/arm/kernel/setup.c:654 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(16)
0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
deleting insn with uid = 9.
ending the processing of deferred insns

;; Function parse_tag_revision (parse_tag_revision)[0:1402] (unlikely executed)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)

In insn 13, replacing
 (reg:SI 133 [ <result> ])
 with (const_int 0 [0x0])
Changes to insn 13 not profitable


try_optimize_cfg iteration 1


Number of successful forward propagations: 0



parse_tag_revision

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0]
;;  ref usage 	r0={2d,3u} r1={1d} r2={1d} r3={1d} r11={1d,2u} r12={1d} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} 
;;    total ref usage 30{15d,15u,0e} in 7{7 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 6, 8
0[0,2] 1[2,1] 2[3,1] 3[4,1] 11[5,1] 12[6,1] 13[7,1] 14[8,1] 25[9,1] 26[10,1] 133[11,1] 134[12,1] 135[13,1] 136[14,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 133 134 135 136
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 133 134 135 136
;; live  kill	
;; rd  in  	(10)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10
;; rd  gen 	(5)
0, 11, 12, 13, 14
;; rd  kill	(6)
0, 1, 11, 12, 13, 14

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 arch/arm/kernel/setup.c:659 (set (reg/v/f:SI 134 [ tag ])
        (reg:SI 0 r0 [ tag ])) 167 {*arm_movsi_insn} (nil))

(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 3 7 2 arch/arm/kernel/setup.c:660 (set (reg/f:SI 135)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 7 6 8 2 arch/arm/kernel/setup.c:660 (set (reg:SI 136 [ <variable>.u.revision.rev ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 134 [ tag ])
                (const_int 8 [0x8])) [0 <variable>.u.revision.rev+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 8 7 9 2 arch/arm/kernel/setup.c:660 (set (mem/c/i:SI (plus:SI (reg/f:SI 135)
                (const_int 8 [0x8])) [0 system_rev+0 S4 A32])
        (reg:SI 136 [ <variable>.u.revision.rev ])) 167 {*arm_movsi_insn} (nil))

(insn 9 8 13 2 arch/arm/kernel/setup.c:662 (set (reg:SI 133 [ <result> ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 13 9 19 2 arch/arm/kernel/setup.c:662 (set (reg/i:SI 0 r0)
        (reg:SI 133 [ <result> ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 19 13 0 2 arch/arm/kernel/setup.c:662 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(14)
0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function customize_machine (customize_machine)[0:1406] (unlikely executed)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 8 (  1.6)

In insn 18, replacing
 (reg:SI 134 [ <result> ])
 with (const_int 0 [0x0])
Changes to insn 18 not profitable


try_optimize_cfg iteration 1


Number of successful forward propagations: 0



customize_machine

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={3d,2u} r1={2d} r2={2d} r3={2d} r11={1d,4u} r12={2d} r13={1d,5u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={2d,1u} r25={1d,4u} r26={1d,3u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,2u} r134={1d,1u} r135={1d,1u} r136={1d,1u} 
;;    total ref usage 158{133d,25u,0e} in 9{8 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128
0[0,3] 1[3,2] 2[5,2] 3[7,2] 11[9,1] 12[10,2] 13[12,1] 14[13,2] 15[15,1] 16[16,1] 17[17,1] 18[18,1] 19[19,1] 20[20,1] 21[21,1] 22[22,1] 23[23,1] 24[24,2] 25[26,1] 26[27,1] 27[28,1] 28[29,1] 29[30,1] 30[31,1] 31[32,1] 32[33,1] 33[34,1] 34[35,1] 35[36,1] 36[37,1] 37[38,1] 38[39,1] 39[40,1] 40[41,1] 41[42,1] 42[43,1] 43[44,1] 44[45,1] 45[46,1] 46[47,1] 47[48,1] 48[49,1] 49[50,1] 50[51,1] 51[52,1] 52[53,1] 53[54,1] 54[55,1] 55[56,1] 56[57,1] 57[58,1] 58[59,1] 59[60,1] 60[61,1] 61[62,1] 62[63,1] 63[64,1] 64[65,1] 65[66,1] 66[67,1] 67[68,1] 68[69,1] 69[70,1] 70[71,1] 71[72,1] 72[73,1] 73[74,1] 74[75,1] 75[76,1] 76[77,1] 77[78,1] 78[79,1] 79[80,1] 80[81,1] 81[82,1] 82[83,1] 83[84,1] 84[85,1] 85[86,1] 86[87,1] 87[88,1] 88[89,1] 89[90,1] 90[91,1] 91[92,1] 92[93,1] 93[94,1] 94[95,1] 95[96,1] 96[97,1] 97[98,1] 98[99,1] 99[100,1] 100[101,1] 101[102,1] 102[103,1] 103[104,1] 104[105,1] 105[106,1] 106[107,1] 107[108,1] 108[109,1] 109[110,1] 110[111,1] 111[112,1] 112[113,1] 113[114,1] 114[115,1] 115[116,1] 116[117,1] 117[118,1] 118[119,1] 119[120,1] 120[121,1] 121[122,1] 122[123,1] 123[124,1] 124[125,1] 125[126,1] 126[127,1] 127[128,1] 133[129,1] 134[130,1] 135[131,1] 136[132,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 133 135 136
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 133 135 136
;; live  kill	
;; rd  in  	(10)
2, 4, 6, 8, 9, 11, 12, 14, 26, 27
;; rd  gen 	(4)
25, 129, 131, 132
;; rd  kill	(5)
24, 25, 129, 131, 132

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)

(insn 5 2 6 2 arch/arm/kernel/setup.c:735 (set (reg/f:SI 135)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 6 5 7 2 arch/arm/kernel/setup.c:735 (set (reg/f:SI 136 [ machine_desc ])
        (mem/f/c/i:SI (reg/f:SI 135) [0 machine_desc+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 7 6 8 2 arch/arm/kernel/setup.c:735 (set (reg/f:SI 133 [ D.25735 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 136 [ machine_desc ])
                (const_int 56 [0x38])) [0 <variable>.init_machine+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 8 7 9 2 arch/arm/kernel/setup.c:735 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 133 [ D.25735 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 9 8 10 2 arch/arm/kernel/setup.c:735 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 12)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 2165 [0x875])
        (nil)))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(14)
2, 4, 6, 8, 9, 11, 12, 14, 25, 26, 27, 129, 131, 132


;; Succ edge  3 [78.3%]  (fallthru)
;; Succ edge  4 [21.6%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(11){ }u9(13){ }u10(25){ }u11(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; live  gen 	
;; live  kill	 14 [lr]
;; rd  in  	(14)
2, 4, 6, 8, 9, 11, 12, 14, 25, 26, 27, 129, 131, 132
;; rd  gen 	(0)

;; rd  kill	(2)
13, 14

;; Pred edge  2 [78.3%]  (fallthru)
(note 10 9 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(call_insn 11 10 12 3 arch/arm/kernel/setup.c:736 (parallel [
            (call (mem:SI (reg/f:SI 133 [ D.25735 ]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 244 {*call_reg_armv5} (nil)
    (nil))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 4, 6, 8, 9, 11, 12, 25, 26, 27, 129, 131, 132


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u14(11){ }u15(13){ }u16(25){ }u17(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 134
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 134
;; live  kill	
;; rd  in  	(14)
2, 4, 6, 8, 9, 11, 12, 14, 25, 26, 27, 129, 131, 132
;; rd  gen 	(2)
0, 130
;; rd  kill	(4)
0, 1, 2, 130

;; Pred edge  2 [21.6%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 12 11 13 4 30 "" [1 uses])

(note 13 12 14 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 14 13 18 4 arch/arm/kernel/setup.c:738 (set (reg:SI 134 [ <result> ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 18 14 24 4 arch/arm/kernel/setup.c:738 (set (reg/i:SI 0 r0)
        (reg:SI 134 [ <result> ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 24 18 0 4 arch/arm/kernel/setup.c:738 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 4 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(15)
0, 4, 6, 8, 9, 11, 12, 14, 25, 26, 27, 129, 130, 131, 132


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function c_start (c_start)[0:1414]

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 6 7
;; 2 succs { 7 3 }
;; 3 succs { 6 4 }
;; 4 succs { 7 6 }
;; 6 succs { 7 }
;; 7 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 9 count 12 (  1.7)
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 9 count 12 (  1.7)
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 9 count 12 (  1.7)


try_optimize_cfg iteration 1

deferring deletion of insn with uid = 25.
deferring deletion of insn with uid = 12.
deferring deletion of insn with uid = 11.
Deleted 3 trivially dead insns

Number of successful forward propagations: 0



c_start

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 24[cc]
;;  ref usage 	r0={2d,2u} r1={1d,1u} r2={1d} r3={1d} r11={1d,6u} r12={1d} r13={1d,6u} r14={1d,1u} r24={3d,4u} r25={1d,6u} r26={1d,5u} r133={1d} r135={1d,2u} r137={2d,2u} r138={1d,2u} r139={1d} r140={1d,1u} 
;;    total ref usage 59{21d,38u,0e} in 12{12 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 6, 8, 9, 10, 11
0[0,2] 1[2,1] 2[3,1] 3[4,1] 11[5,1] 12[6,1] 13[7,1] 14[8,1] 24[9,3] 25[12,1] 26[13,1] 133[14,1] 135[15,1] 137[16,2] 138[18,1] 139[19,1] 140[20,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 135 137 138
;; live  in  	 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 135 137 138
;; live  kill	
;; rd  in  	(10)
1, 2, 3, 4, 5, 6, 7, 8, 12, 13
;; rd  gen 	(4)
11, 15, 17, 18
;; rd  kill	(7)
9, 10, 11, 15, 16, 17, 18

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 0 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 3 5 4 2 arch/arm/kernel/setup.c:1065 (set (reg/v/f:SI 135 [ pos ])
        (reg:SI 1 r1 [ pos ])) 167 {*arm_movsi_insn} (nil))

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 8 2 arch/arm/kernel/setup.c:1067 (set (reg:SI 137)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 8 7 9 2 arch/arm/kernel/setup.c:1067 (set (reg:SI 138)
        (mem:SI (plus:SI (reg/v/f:SI 135 [ pos ])
                (const_int 4 [0x4])) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 9 8 10 2 arch/arm/kernel/setup.c:1067 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 138)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 10 9 37 2 arch/arm/kernel/setup.c:1067 (set (pc)
        (if_then_else (gt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 24)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7900 [0x1edc])
        (nil)))
;; End of basic block 2 -> ( 6 3)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 135 137 138
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 135 137 138
;; rd  out 	(14)
1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 15, 17, 18


;; Succ edge  6 [79.0%] 
;; Succ edge  3 [21.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(11){ }u9(13){ }u10(25){ }u11(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 135 137 138
;; lr  use 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 138
;; lr  def 	 24 [cc] 139
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 135 137 138
;; live  gen 	 24 [cc] 139
;; live  kill	
;; rd  in  	(14)
1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 15, 17, 18
;; rd  gen 	(2)
9, 19
;; rd  kill	(4)
9, 10, 11, 19

;; Pred edge  2 [21.0%]  (fallthru)
(note 37 10 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(jump_insn 13 37 38 3 arch/arm/kernel/setup.c:1067 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 22)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 3 -> ( 5 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 137
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 137
;; rd  out 	(15)
1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 15, 17, 18, 19


;; Succ edge  5 [50.0%] 
;; Succ edge  4 [50.0%]  (fallthru)

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u15(11){ }u16(13){ }u17(25){ }u18(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc] 140
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 137
;; live  gen 	 24 [cc] 140
;; live  kill	
;; rd  in  	(15)
1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 15, 17, 18, 19
;; rd  gen 	(2)
10, 20
;; rd  kill	(4)
9, 10, 11, 20

;; Pred edge  3 [50.0%]  (fallthru)
(note 38 13 14 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 14 38 15 4 arch/arm/kernel/setup.c:1067 (set (reg:SI 140)
        (mem:SI (reg/v/f:SI 135 [ pos ]) [0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 15 14 16 4 arch/arm/kernel/setup.c:1067 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 140)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 16 15 22 4 arch/arm/kernel/setup.c:1067 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 24)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 4 -> ( 6 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; rd  out 	(16)
1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 15, 17, 18, 19, 20


;; Succ edge  6 [50.0%] 
;; Succ edge  5 [50.0%]  (fallthru)

;; Start of basic block ( 3 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u22(11){ }u23(13){ }u24(25){ }u25(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 137
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 137
;; live  kill	
;; rd  in  	(17)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 17, 18, 19, 20
;; rd  gen 	(1)
16
;; rd  kill	(2)
16, 17

;; Pred edge  3 [50.0%] 
;; Pred edge  4 [50.0%]  (fallthru)
(code_label 22 16 41 5 36 "" [1 uses])

(note 41 22 23 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 23 41 24 5 arch/arm/kernel/setup.c:1067 (set (reg:SI 137)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 5 -> ( 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; rd  out 	(17)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 16, 18, 19, 20


;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 2 4 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u26(11){ }u27(13){ }u28(25){ }u29(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 0 [r0] 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; live  gen 	 0 [r0] 133
;; live  kill	
;; rd  in  	(19)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20
;; rd  gen 	(2)
0, 14
;; rd  kill	(3)
0, 1, 14

;; Pred edge  2 [79.0%] 
;; Pred edge  4 [50.0%] 
;; Pred edge  5 [100.0%]  (fallthru)
(code_label 24 23 42 6 35 "" [2 uses])

(note 42 24 29 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 29 42 35 6 arch/arm/kernel/setup.c:1067 (set (reg/i:SI 0 r0)
        (reg:SI 137)) 167 {*arm_movsi_insn} (nil))

(insn 35 29 0 6 arch/arm/kernel/setup.c:1067 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 6 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(20)
0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
deleting insn with uid = 11.
deleting insn with uid = 12.
deleting insn with uid = 25.
ending the processing of deferred insns

;; Function c_next (c_next)[0:1415]

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)

In insn 10, replacing
 (plus:DI (reg:DI 137)
        (reg:DI 138))
 with (plus:DI (reg:DI 137)
        (const_int 1 [0x1]))
Changes to insn 10 not recognized
 Setting REG_EQUAL note

In insn 16, replacing
 (reg:SI 133 [ <result> ])
 with (const_int 0 [0x0])
Changes to insn 16 not profitable


try_optimize_cfg iteration 1


Number of successful forward propagations: 0



c_next

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 2[r2] 24[cc]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d,1u} r3={1d} r11={1d,2u} r12={1d} r13={1d,2u} r14={1d,1u} r24={1d} r25={1d,2u} r26={1d,1u} r133={1d,1u} r136={1d,2u} r137={1d,1u} r138={1d,1u} r139={1d,1u} 
;;    total ref usage 34{17d,17u,0e} in 8{8 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 6, 8, 9
0[0,2] 1[2,1] 2[3,1] 3[4,1] 11[5,1] 12[6,1] 13[7,1] 14[8,1] 24[9,1] 25[10,1] 26[11,1] 133[12,1] 136[13,1] 137[14,1] 138[15,1] 139[16,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 24 [cc] 133 136 137 138 139
;; live  in  	 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 133 136 137 138 139
;; live  kill	 24 [cc]
;; rd  in  	(10)
1, 2, 3, 4, 5, 6, 7, 8, 10, 11
;; rd  gen 	(6)
0, 12, 13, 14, 15, 16
;; rd  kill	(8)
0, 1, 9, 12, 13, 14, 15, 16

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 0 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 4 6 5 2 arch/arm/kernel/setup.c:1070 (set (reg/v/f:SI 136 [ pos ])
        (reg:SI 2 r2 [ pos ])) 167 {*arm_movsi_insn} (nil))

(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)

(insn 8 5 9 2 arch/arm/kernel/setup.c:1071 (set (reg:DI 137)
        (mem:DI (reg/v/f:SI 136 [ pos ]) [0 S8 A64])) 163 {*arm_movdi} (nil))

(insn 9 8 10 2 arch/arm/kernel/setup.c:1071 (set (reg:DI 138)
        (const_int 1 [0x1])) 163 {*arm_movdi} (nil))

(insn 10 9 11 2 arch/arm/kernel/setup.c:1071 (parallel [
            (set (reg:DI 139)
                (plus:DI (reg:DI 137)
                    (reg:DI 138)))
            (clobber (reg:CC 24 cc))
        ]) 1 {*arm_adddi3} (expr_list:REG_EQUAL (plus:DI (reg:DI 137)
            (const_int 1 [0x1]))
        (nil)))

(insn 11 10 12 2 arch/arm/kernel/setup.c:1071 (set (mem:DI (reg/v/f:SI 136 [ pos ]) [0 S8 A64])
        (reg:DI 139)) 163 {*arm_movdi} (nil))

(insn 12 11 16 2 arch/arm/kernel/setup.c:1073 (set (reg:SI 133 [ <result> ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 16 12 22 2 arch/arm/kernel/setup.c:1073 (set (reg/i:SI 0 r0)
        (reg:SI 133 [ <result> ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 22 16 0 2 arch/arm/kernel/setup.c:1073 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(15)
0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function c_stop (c_stop)[0:1416]

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


try_optimize_cfg iteration 1


Number of successful forward propagations: 0



c_stop

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	
;;  ref usage 	r0={1d} r1={1d} r2={1d} r3={1d} r11={1d,2u} r12={1d} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} 
;;    total ref usage 18{10d,8u,0e} in 0{0 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 5, 7
0[0,1] 1[1,1] 2[2,1] 3[3,1] 11[4,1] 12[5,1] 13[6,1] 14[7,1] 25[8,1] 26[9,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(10)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 0 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 4 5 0 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function parse_tag_cmdline (parse_tag_cmdline)[0:1403] (unlikely executed)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)

In insn 7, replacing
 (plus:SI (reg/f:SI 135)
        (const_int 4 [0x4]))
 with (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
            (const_int 4 [0x4])))
Changes to insn 7 not profitable

In insn 17, replacing
 (reg:SI 133 [ <result> ])
 with (const_int 0 [0x0])
Changes to insn 17 not profitable


try_optimize_cfg iteration 1


Number of successful forward propagations: 0



parse_tag_cmdline

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr]
;;  ref usage 	r0={4d,4u} r1={3d,1u} r2={3d,1u} r3={2d} r11={1d,2u} r12={2d} r13={1d,3u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,2u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} 
;;    total ref usage 156{136d,20u,0e} in 11{10 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130
0[0,4] 1[4,3] 2[7,3] 3[10,2] 11[12,1] 12[13,2] 13[15,1] 14[16,2] 15[18,1] 16[19,1] 17[20,1] 18[21,1] 19[22,1] 20[23,1] 21[24,1] 22[25,1] 23[26,1] 24[27,1] 25[28,1] 26[29,1] 27[30,1] 28[31,1] 29[32,1] 30[33,1] 31[34,1] 32[35,1] 33[36,1] 34[37,1] 35[38,1] 36[39,1] 37[40,1] 38[41,1] 39[42,1] 40[43,1] 41[44,1] 42[45,1] 43[46,1] 44[47,1] 45[48,1] 46[49,1] 47[50,1] 48[51,1] 49[52,1] 50[53,1] 51[54,1] 52[55,1] 53[56,1] 54[57,1] 55[58,1] 56[59,1] 57[60,1] 58[61,1] 59[62,1] 60[63,1] 61[64,1] 62[65,1] 63[66,1] 64[67,1] 65[68,1] 66[69,1] 67[70,1] 68[71,1] 69[72,1] 70[73,1] 71[74,1] 72[75,1] 73[76,1] 74[77,1] 75[78,1] 76[79,1] 77[80,1] 78[81,1] 79[82,1] 80[83,1] 81[84,1] 82[85,1] 83[86,1] 84[87,1] 85[88,1] 86[89,1] 87[90,1] 88[91,1] 89[92,1] 90[93,1] 91[94,1] 92[95,1] 93[96,1] 94[97,1] 95[98,1] 96[99,1] 97[100,1] 98[101,1] 99[102,1] 100[103,1] 101[104,1] 102[105,1] 103[106,1] 104[107,1] 105[108,1] 106[109,1] 107[110,1] 108[111,1] 109[112,1] 110[113,1] 111[114,1] 112[115,1] 113[116,1] 114[117,1] 115[118,1] 116[119,1] 117[120,1] 118[121,1] 119[122,1] 120[123,1] 121[124,1] 122[125,1] 123[126,1] 124[127,1] 125[128,1] 126[129,1] 127[130,1] 133[131,1] 134[132,1] 135[133,1] 136[134,1] 137[135,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134 135 136 137
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 133 134 135 136 137
;; live  kill	 14 [lr]
;; rd  in  	(10)
3, 6, 9, 11, 12, 14, 15, 17, 28, 29
;; rd  gen 	(6)
0, 131, 132, 133, 134, 135
;; rd  kill	(11)
0, 1, 2, 3, 16, 17, 131, 132, 133, 134, 135

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 arch/arm/kernel/setup.c:667 (set (reg/v/f:SI 134 [ tag ])
        (reg:SI 0 r0 [ tag ])) 167 {*arm_movsi_insn} (nil))

(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 3 7 2 arch/arm/kernel/setup.c:675 (set (reg/f:SI 135)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 7 6 8 2 arch/arm/kernel/setup.c:675 (set (reg/f:SI 136)
        (plus:SI (reg/f:SI 135)
            (const_int 4 [0x4]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                (const_int 4 [0x4])))
        (nil)))

(insn 8 7 9 2 arch/arm/kernel/setup.c:675 (set (reg/f:SI 137)
        (plus:SI (reg/v/f:SI 134 [ tag ])
            (const_int 8 [0x8]))) 4 {*arm_addsi3} (nil))

(insn 9 8 10 2 arch/arm/kernel/setup.c:675 (set (reg:SI 0 r0)
        (reg/f:SI 136)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                (const_int 4 [0x4])))
        (nil)))

(insn 10 9 11 2 arch/arm/kernel/setup.c:675 (set (reg:SI 1 r1)
        (reg/f:SI 137)) 167 {*arm_movsi_insn} (nil))

(insn 11 10 12 2 arch/arm/kernel/setup.c:675 (set (reg:SI 2 r2)
        (const_int 1024 [0x400])) 167 {*arm_movsi_insn} (nil))

(call_insn 12 11 13 2 arch/arm/kernel/setup.c:675 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strlcpy") [flags 0x41] <function_decl 0x10bb1380 strlcpy>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 13 12 17 2 arch/arm/kernel/setup.c:679 (set (reg:SI 133 [ <result> ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 17 13 23 2 arch/arm/kernel/setup.c:679 (set (reg/i:SI 0 r0)
        (reg:SI 133 [ <result> ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 23 17 0 2 arch/arm/kernel/setup.c:679 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(14)
0, 6, 9, 11, 12, 14, 15, 28, 29, 131, 132, 133, 134, 135


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function topology_init (topology_init)[0:1411] (unlikely executed)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 11 (  1.8)

In insn 15, replacing
 (reg:SI 141)
 with (const_int 1 [0x1])
Changes to insn 15 not recognized
 Setting REG_EQUAL note

In insn 38, replacing
 (reg:SI 137 [ <result> ])
 with (const_int 0 [0x0])
Changes to insn 38 not profitable


try_optimize_cfg iteration 1


Number of successful forward propagations: 0



topology_init

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={6d,5u} r1={5d,2u} r2={4d,1u} r3={3d} r11={1d,5u} r12={3d} r13={1d,7u} r14={3d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={3d,1u} r25={1d,5u} r26={1d,4u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r133={1d,1u} r134={1d,1u} r135={1d,2u} r136={2d,4u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} 
;;    total ref usage 311{264d,47u,0e} in 25{23 regular + 2 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250
0[0,6] 1[6,5] 2[11,4] 3[15,3] 11[18,1] 12[19,3] 13[22,1] 14[23,3] 15[26,2] 16[28,2] 17[30,2] 18[32,2] 19[34,2] 20[36,2] 21[38,2] 22[40,2] 23[42,2] 24[44,3] 25[47,1] 26[48,1] 27[49,2] 28[51,2] 29[53,2] 30[55,2] 31[57,2] 32[59,2] 33[61,2] 34[63,2] 35[65,2] 36[67,2] 37[69,2] 38[71,2] 39[73,2] 40[75,2] 41[77,2] 42[79,2] 43[81,2] 44[83,2] 45[85,2] 46[87,2] 47[89,2] 48[91,2] 49[93,2] 50[95,2] 51[97,2] 52[99,2] 53[101,2] 54[103,2] 55[105,2] 56[107,2] 57[109,2] 58[111,2] 59[113,2] 60[115,2] 61[117,2] 62[119,2] 63[121,2] 64[123,2] 65[125,2] 66[127,2] 67[129,2] 68[131,2] 69[133,2] 70[135,2] 71[137,2] 72[139,2] 73[141,2] 74[143,2] 75[145,2] 76[147,2] 77[149,2] 78[151,2] 79[153,2] 80[155,2] 81[157,2] 82[159,2] 83[161,2] 84[163,2] 85[165,2] 86[167,2] 87[169,2] 88[171,2] 89[173,2] 90[175,2] 91[177,2] 92[179,2] 93[181,2] 94[183,2] 95[185,2] 96[187,2] 97[189,2] 98[191,2] 99[193,2] 100[195,2] 101[197,2] 102[199,2] 103[201,2] 104[203,2] 105[205,2] 106[207,2] 107[209,2] 108[211,2] 109[213,2] 110[215,2] 111[217,2] 112[219,2] 113[221,2] 114[223,2] 115[225,2] 116[227,2] 117[229,2] 118[231,2] 119[233,2] 120[235,2] 121[237,2] 122[239,2] 123[241,2] 124[243,2] 125[245,2] 126[247,2] 127[249,2] 133[251,1] 134[252,1] 135[253,1] 136[254,2] 137[256,1] 138[257,1] 139[258,1] 140[259,1] 141[260,1] 142[261,1] 143[262,1] 144[263,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 136
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 136
;; live  kill	
;; rd  in  	(10)
5, 10, 14, 17, 18, 21, 22, 25, 47, 48
;; rd  gen 	(1)
255
;; rd  kill	(2)
254, 255

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)

(insn 5 2 28 2 arch/arm/kernel/setup.c:951 (set (reg/v:SI 136 [ cpu ])
        (const_int -1 [0xffffffffffffffff])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 2 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; rd  out 	(11)
5, 10, 14, 17, 18, 21, 22, 25, 47, 48, 255


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 4) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u4(11){ }u5(13){ }u6(25){ }u7(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 135 138 139 140 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; live  gen 	 0 [r0] 1 [r1] 134 135 138 139 140 141
;; live  kill	 14 [lr]
;; rd  in  	(21)
1, 10, 14, 17, 18, 21, 22, 44, 47, 48, 251, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263
;; rd  gen 	(7)
3, 252, 253, 257, 258, 259, 260
;; rd  kill	(15)
0, 1, 2, 3, 4, 5, 23, 24, 25, 252, 253, 257, 258, 259, 260

;; Pred edge  4 [91.0%] 
(code_label 28 5 8 3 48 "" [1 uses])

(note 8 28 9 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 9 8 10 3 arch/arm/kernel/setup.c:952 (set (reg/f:SI 138)
        (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 10 9 11 3 arch/arm/kernel/setup.c:952 (set (reg/v:SI 134 [ __ptr ])
        (asm_operands:SI ("") ("=r") 0 [
                (reg/f:SI 138)
            ]
             [
                (asm_input:SI ("0") 0)
            ] 10520071)) -1 (nil))

(insn 11 10 12 3 arch/arm/kernel/setup.c:952 (set (reg/f:SI 139)
        (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10c98e40 __per_cpu_offset>)) 167 {*arm_movsi_insn} (nil))

(insn 12 11 13 3 arch/arm/kernel/setup.c:952 (set (reg:SI 140)
        (mem/s/j:SI (plus:SI (mult:SI (reg/v:SI 136 [ cpu ])
                    (const_int 4 [0x4]))
                (reg/f:SI 139)) [0 __per_cpu_offset S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 13 12 14 3 arch/arm/kernel/setup.c:952 (set (reg/v/f:SI 135 [ cpuinfo ])
        (plus:SI (reg/v:SI 134 [ __ptr ])
            (reg:SI 140))) 4 {*arm_addsi3} (nil))

(insn 14 13 15 3 arch/arm/kernel/setup.c:953 (set (reg:SI 141)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 15 14 16 3 arch/arm/kernel/setup.c:953 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 135 [ cpuinfo ])
                (const_int 4 [0x4])) [0 <variable>.cpu.hotpluggable+0 S4 A32])
        (reg:SI 141)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(insn 16 15 17 3 arch/arm/kernel/setup.c:954 (set (reg:SI 0 r0)
        (reg/v/f:SI 135 [ cpuinfo ])) 167 {*arm_movsi_insn} (nil))

(insn 17 16 18 3 arch/arm/kernel/setup.c:954 (set (reg:SI 1 r1)
        (reg/v:SI 136 [ cpu ])) 167 {*arm_movsi_insn} (nil))

(call_insn 18 17 19 3 arch/arm/kernel/setup.c:954 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("register_cpu") [flags 0x41] <function_decl 0x11095300 register_cpu>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; rd  out 	(21)
3, 10, 14, 17, 18, 21, 22, 44, 47, 48, 251, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263


;; Succ edge  4 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u20(11){ }u21(13){ }u22(25){ }u23(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 136 142 143 144
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 133 136 142 143 144
;; live  kill	 14 [lr]
;; rd  in  	(24)
3, 5, 10, 14, 17, 18, 21, 22, 25, 44, 47, 48, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263
;; rd  gen 	(7)
1, 44, 251, 254, 261, 262, 263
;; rd  kill	(18)
0, 1, 2, 3, 4, 5, 23, 24, 25, 44, 45, 46, 251, 254, 255, 261, 262, 263

;; Pred edge  2 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%]  (fallthru,dfs_back)
(code_label 19 18 20 4 47 "" [0 uses])

(note 20 19 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 21 20 22 4 include/linux/cpumask.h:174 (set (reg:SI 133 [ D.26007 ])
        (plus:SI (reg/v:SI 136 [ cpu ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 22 21 23 4 include/linux/cpumask.h:174 (set (reg/f:SI 142)
        (symbol_ref:SI ("cpu_possible_mask") [flags 0xc0] <var_decl 0x10c5bf00 cpu_possible_mask>)) 167 {*arm_movsi_insn} (nil))

(insn 23 22 24 4 include/linux/cpumask.h:174 (set (reg:SI 0 r0)
        (mem/u/f/c/i:SI (reg/f:SI 142) [0 cpu_possible_mask+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 24 23 25 4 include/linux/cpumask.h:174 (set (reg:SI 1 r1)
        (const_int 2 [0x2])) 167 {*arm_movsi_insn} (nil))

(insn 25 24 26 4 include/linux/cpumask.h:174 (set (reg:SI 2 r2)
        (reg:SI 133 [ D.26007 ])) 167 {*arm_movsi_insn} (nil))

(call_insn 26 25 27 4 include/linux/cpumask.h:174 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("_find_next_bit_le") [flags 0x41] <function_decl 0x109c0980 _find_next_bit_le>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 27 26 29 4 include/linux/cpumask.h:174 (set (reg/v:SI 136 [ cpu ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 29 27 30 4 arch/arm/kernel/setup.c:951 discrim 1 (set (reg/f:SI 143)
        (symbol_ref:SI ("nr_cpu_ids") [flags 0xc0] <var_decl 0x10c5bea0 nr_cpu_ids>)) 167 {*arm_movsi_insn} (nil))

(insn 30 29 31 4 arch/arm/kernel/setup.c:951 discrim 1 (set (reg:SI 144 [ nr_cpu_ids ])
        (mem/c/i:SI (reg/f:SI 143) [0 nr_cpu_ids+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 31 30 32 4 arch/arm/kernel/setup.c:951 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 136 [ cpu ])
            (reg:SI 144 [ nr_cpu_ids ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 32 31 33 4 arch/arm/kernel/setup.c:951 discrim 1 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 28)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
        (nil)))
;; End of basic block 4 -> ( 3 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; rd  out 	(21)
1, 10, 14, 17, 18, 21, 22, 44, 47, 48, 251, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263


;; Succ edge  3 [91.0%] 
;; Succ edge  5 [9.0%]  (fallthru)

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u36(11){ }u37(13){ }u38(25){ }u39(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 137
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 137
;; live  kill	
;; rd  in  	(21)
1, 10, 14, 17, 18, 21, 22, 44, 47, 48, 251, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263
;; rd  gen 	(2)
0, 256
;; rd  kill	(7)
0, 1, 2, 3, 4, 5, 256

;; Pred edge  4 [9.0%]  (fallthru)
(note 33 32 34 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 34 33 38 5 arch/arm/kernel/setup.c:958 (set (reg:SI 137 [ <result> ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 38 34 44 5 arch/arm/kernel/setup.c:958 (set (reg/i:SI 0 r0)
        (reg:SI 137 [ <result> ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 44 38 0 5 arch/arm/kernel/setup.c:958 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 5 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(22)
0, 10, 14, 17, 18, 21, 22, 44, 47, 48, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function proc_cpu_init (proc_cpu_init)[0:1412] (unlikely executed)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 4 3 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 9 (  1.5)
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 10 (  1.7)
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 10 (  1.7)

In insn 6, replacing
 (reg/f:SI 136)
 with (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x116b7c60>)
Changes to insn 6 not profitable


try_optimize_cfg iteration 1

deferring deletion of insn with uid = 21.
Deleted 1 trivially dead insns

Number of successful forward propagations: 0



proc_cpu_init

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={4d,4u} r1={3d,1u} r2={2d} r3={2d} r11={1d,5u} r12={2d} r13={1d,6u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={2d,1u} r25={1d,5u} r26={1d,4u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,1u} r134={2d,2u} r135={1d} r136={1d,1u} 
;;    total ref usage 167{136d,31u,0e} in 11{10 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130
0[0,4] 1[4,3] 2[7,2] 3[9,2] 11[11,1] 12[12,2] 13[14,1] 14[15,2] 15[17,1] 16[18,1] 17[19,1] 18[20,1] 19[21,1] 20[22,1] 21[23,1] 22[24,1] 23[25,1] 24[26,2] 25[28,1] 26[29,1] 27[30,1] 28[31,1] 29[32,1] 30[33,1] 31[34,1] 32[35,1] 33[36,1] 34[37,1] 35[38,1] 36[39,1] 37[40,1] 38[41,1] 39[42,1] 40[43,1] 41[44,1] 42[45,1] 43[46,1] 44[47,1] 45[48,1] 46[49,1] 47[50,1] 48[51,1] 49[52,1] 50[53,1] 51[54,1] 52[55,1] 53[56,1] 54[57,1] 55[58,1] 56[59,1] 57[60,1] 58[61,1] 59[62,1] 60[63,1] 61[64,1] 62[65,1] 63[66,1] 64[67,1] 65[68,1] 66[69,1] 67[70,1] 68[71,1] 69[72,1] 70[73,1] 71[74,1] 72[75,1] 73[76,1] 74[77,1] 75[78,1] 76[79,1] 77[80,1] 78[81,1] 79[82,1] 80[83,1] 81[84,1] 82[85,1] 83[86,1] 84[87,1] 85[88,1] 86[89,1] 87[90,1] 88[91,1] 89[92,1] 90[93,1] 91[94,1] 92[95,1] 93[96,1] 94[97,1] 95[98,1] 96[99,1] 97[100,1] 98[101,1] 99[102,1] 100[103,1] 101[104,1] 102[105,1] 103[106,1] 104[107,1] 105[108,1] 106[109,1] 107[110,1] 108[111,1] 109[112,1] 110[113,1] 111[114,1] 112[115,1] 113[116,1] 114[117,1] 115[118,1] 116[119,1] 117[120,1] 118[121,1] 119[122,1] 120[123,1] 121[124,1] 122[125,1] 123[126,1] 124[127,1] 125[128,1] 126[129,1] 127[130,1] 133[131,1] 134[132,2] 135[134,1] 136[135,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 136
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 133 136
;; live  kill	 14 [lr]
;; rd  in  	(10)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29
;; rd  gen 	(4)
1, 26, 131, 135
;; rd  kill	(10)
0, 1, 2, 3, 15, 16, 26, 27, 131, 135

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)

(insn 5 2 6 2 arch/arm/kernel/setup.c:966 (set (reg/f:SI 136)
        (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x116b7c60>)) 167 {*arm_movsi_insn} (nil))

(insn 6 5 7 2 arch/arm/kernel/setup.c:966 (set (reg:SI 0 r0)
        (reg/f:SI 136)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x116b7c60>)
        (nil)))

(insn 7 6 8 2 arch/arm/kernel/setup.c:966 (set (reg:SI 1 r1)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(call_insn 8 7 9 2 arch/arm/kernel/setup.c:966 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("proc_mkdir") [flags 0x41] <function_decl 0x11298400 proc_mkdir>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 9 8 10 2 arch/arm/kernel/setup.c:966 (set (reg/v/f:SI 133 [ res ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 10 9 11 2 arch/arm/kernel/setup.c:967 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 133 [ res ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 11 10 12 2 arch/arm/kernel/setup.c:967 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 16)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 1014 [0x3f6])
        (nil)))
;; End of basic block 2 -> ( 4 3)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(12)
1, 6, 8, 10, 11, 13, 14, 26, 28, 29, 131, 135


;; Succ edge  4 [10.1%] 
;; Succ edge  3 [89.9%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u11(11){ }u12(13){ }u13(25){ }u14(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 134
;; live  kill	
;; rd  in  	(12)
1, 6, 8, 10, 11, 13, 14, 26, 28, 29, 131, 135
;; rd  gen 	(1)
133
;; rd  kill	(2)
132, 133

;; Pred edge  2 [89.9%]  (fallthru)
(note 12 11 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 13 12 16 3 arch/arm/kernel/setup.c:969 (set (reg:SI 134 [ D.25848 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 3 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; rd  out 	(13)
1, 6, 8, 10, 11, 13, 14, 26, 28, 29, 131, 133, 135


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u15(11){ }u16(13){ }u17(25){ }u18(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 134
;; live  kill	
;; rd  in  	(12)
1, 6, 8, 10, 11, 13, 14, 26, 28, 29, 131, 135
;; rd  gen 	(1)
132
;; rd  kill	(2)
132, 133

;; Pred edge  2 [10.1%] 
(code_label 16 13 17 4 53 "" [1 uses])

(note 17 16 18 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 18 17 19 4 arch/arm/kernel/setup.c:968 (set (reg:SI 134 [ D.25848 ])
        (const_int -12 [0xfffffffffffffff4])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 4 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; rd  out 	(13)
1, 6, 8, 10, 11, 13, 14, 26, 28, 29, 131, 132, 135


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u19(11){ }u20(13){ }u21(25){ }u22(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 0 [r0] 135
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; live  gen 	 0 [r0] 135
;; live  kill	
;; rd  in  	(14)
1, 6, 8, 10, 11, 13, 14, 26, 28, 29, 131, 132, 133, 135
;; rd  gen 	(2)
0, 134
;; rd  kill	(5)
0, 1, 2, 3, 134

;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 19 18 20 5 54 "" [0 uses])

(note 20 19 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 25 20 31 5 arch/arm/kernel/setup.c:970 (set (reg/i:SI 0 r0)
        (reg:SI 134 [ D.25848 ])) 167 {*arm_movsi_insn} (nil))

(insn 31 25 0 5 arch/arm/kernel/setup.c:970 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 5 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(15)
0, 6, 8, 10, 11, 13, 14, 26, 28, 29, 131, 132, 133, 134, 135


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
deleting insn with uid = 21.
ending the processing of deferred insns

;; Function c_show (c_show)[0:1413]

;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16
;;
;; Loop 2
;;  header 9, latch 8
;;  depth 1, outer 0
;;  nodes: 9 8 6 7
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 9 }
;; 6 succs { 7 8 }
;; 7 succs { 8 }
;; 8 succs { 9 }
;; 9 succs { 6 10 }
;; 10 succs { 11 12 }
;; 11 succs { 16 }
;; 12 succs { 13 14 }
;; 13 succs { 15 }
;; 14 succs { 15 }
;; 15 succs { 16 }
;; 16 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 17 n_edges 21 count 27 (  1.6)
df_worklist_dataflow_doublequeue:n_basic_blocks 17 n_edges 21 count 36 (  2.1)
df_worklist_dataflow_doublequeue:n_basic_blocks 17 n_edges 21 count 36 (  2.1)

In insn 40, replacing
 (reg/f:SI 184)
 with (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
Changes to insn 40 not profitable

In insn 41, replacing
 (plus:SI (reg/f:SI 184)
        (const_int 16 [0x10]))
 with (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
            (const_int 16 [0x10])))
Changes to insn 41 not profitable

In insn 44, replacing
 (reg/f:SI 183)
 with (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x1164f000>)
Changes to insn 44 not profitable

In insn 56, replacing
 (reg/f:SI 189)
 with (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x1164cbd0>)
Changes to insn 56 not profitable

In insn 63, replacing
 (reg/f:SI 190)
 with (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])
Changes to insn 63 not profitable

In insn 74, replacing
 (reg:SI 194)
 with (const_int 56 [0x38])
Changes to insn 74 not profitable

In insn 87, replacing
 (reg/f:SI 193)
 with (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x1164cea0>)
Changes to insn 87 not profitable

In insn 107, replacing
 (reg/f:SI 218)
 with (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x116c6b70>)
Changes to insn 107 not profitable

In insn 114, replacing
 (ashift:SI (reg:SI 220)
        (reg/v:SI 162 [ i.719 ]))
 with (ashift:SI (const_int 1 [0x1])
        (reg/v:SI 162 [ i.719 ]))
Changes to insn 114 not recognized
 Setting REG_EQUAL note

In insn 123, replacing
 (reg/f:SI 224)
 with (symbol_ref/v/f:SI ("*.LC5") [flags 0x82] <string_cst 0x116b7ce0>)
Changes to insn 123 not profitable

In insn 142, replacing
 (reg/f:SI 227)
 with (symbol_ref/v/f:SI ("*.LC6") [flags 0x82] <string_cst 0x116c2ac0>)
Changes to insn 142 not profitable

In insn 154, replacing
 (reg/f:SI 229)
 with (symbol_ref/v/f:SI ("*.LC7") [flags 0x82] <string_cst 0x116c9180>)
Changes to insn 154 not profitable

In insn 155, replacing
 (mem/s/u/f/j:SI (reg/f:SI 234) [0 proc_arch S4 A32])
 with (mem/s/u/f/j:SI (plus:SI (reg:SI 233)
            (const_int 80 [0x50])) [0 proc_arch S4 A32])
Changed insn 155
deferring rescan insn with uid = 155.
deferring rescan insn with uid = 155.

In insn 166, replacing
 (reg/f:SI 236)
 with (symbol_ref/v/f:SI ("*.LC8") [flags 0x82] <string_cst 0x116c95d0>)
Changes to insn 166 not profitable

In insn 183, replacing
 (reg/f:SI 239)
 with (symbol_ref/v/f:SI ("*.LC9") [flags 0x82] <string_cst 0x116c9930>)
Changes to insn 183 not profitable

In insn 195, replacing
 (reg/f:SI 242)
 with (symbol_ref/v/f:SI ("*.LC10") [flags 0x82] <string_cst 0x116c9ba0>)
Changes to insn 195 not profitable

In insn 206, replacing
 (reg/f:SI 245)
 with (symbol_ref/v/f:SI ("*.LC11") [flags 0x82] <string_cst 0x116c9d80>)
Changes to insn 206 not profitable

In insn 215, replacing
 (reg/f:SI 249)
 with (symbol_ref/v/f:SI ("*.LC12") [flags 0x82] <string_cst 0x116c9f90>)
Changes to insn 215 not profitable

In insn 220, replacing
 (reg/f:SI 251)
 with (symbol_ref/v/f:SI ("*.LC13") [flags 0x82] <string_cst 0x116c7720>)
Changes to insn 220 not profitable

In insn 225, replacing
 (reg/f:SI 252)
 with (symbol_ref/v/f:SI ("*.LC14") [flags 0x82] <string_cst 0x116c9780>)
Changes to insn 225 not profitable

In insn 229, replacing
 (reg/f:SI 253)
 with (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
Changes to insn 229 not profitable

In insn 231, replacing
 (reg/f:SI 254)
 with (symbol_ref/v/f:SI ("*.LC15") [flags 0x82] <string_cst 0x116cd0f0>)
Changes to insn 231 not profitable

In insn 235, replacing
 (reg/f:SI 253)
 with (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
Changes to insn 235 not profitable

In insn 236, replacing
 (reg/f:SI 253)
 with (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
Changes to insn 236 not profitable

In insn 238, replacing
 (reg/f:SI 256)
 with (symbol_ref/v/f:SI ("*.LC16") [flags 0x82] <string_cst 0x116cd240>)
Changes to insn 238 not profitable

In insn 246, replacing
 (reg:SI 180 [ <result> ])
 with (const_int 0 [0x0])
Changes to insn 246 not profitable


try_optimize_cfg iteration 1

deferring deletion of insn with uid = 236.
deferring deletion of insn with uid = 235.
deferring deletion of insn with uid = 229.
deferring deletion of insn with uid = 190.
deferring deletion of insn with uid = 178.
deferring deletion of insn with uid = 174.
deferring deletion of insn with uid = 173.
deferring deletion of insn with uid = 162.
deferring deletion of insn with uid = 157.
deferring deletion of insn with uid = 152.
deferring deletion of insn with uid = 149.
deferring deletion of insn with uid = 148.
deferring deletion of insn with uid = 82.
deferring deletion of insn with uid = 77.
deferring deletion of insn with uid = 76.
deferring deletion of insn with uid = 75.
deferring deletion of insn with uid = 74.
deferring deletion of insn with uid = 66.
deferring deletion of insn with uid = 64.
deferring deletion of insn with uid = 63.
deferring deletion of insn with uid = 43.
deferring deletion of insn with uid = 40.
Deleted 22 trivially dead insns

Number of successful forward propagations: 1



c_show

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={43d,29u} r1={42d,21u} r2={37d,15u} r3={25d,3u} r11={1d,16u} r12={22d} r13={1d,38u} r14={22d,1u} r15={21d} r16={21d} r17={21d} r18={21d} r19={21d} r20={21d} r21={21d} r22={21d} r23={21d} r24={30d,5u} r25={1d,16u} r26={1d,15u} r27={21d} r28={21d} r29={21d} r30={21d} r31={21d} r32={21d} r33={21d} r34={21d} r35={21d} r36={21d} r37={21d} r38={21d} r39={21d} r40={21d} r41={21d} r42={21d} r43={21d} r44={21d} r45={21d} r46={21d} r47={21d} r48={21d} r49={21d} r50={21d} r51={21d} r52={21d} r53={21d} r54={21d} r55={21d} r56={21d} r57={21d} r58={21d} r59={21d} r60={21d} r61={21d} r62={21d} r63={21d} r64={21d} r65={21d} r66={21d} r67={21d} r68={21d} r69={21d} r70={21d} r71={21d} r72={21d} r73={21d} r74={21d} r75={21d} r76={21d} r77={21d} r78={21d} r79={21d} r80={21d} r81={21d} r82={21d} r83={21d} r84={21d} r85={21d} r86={21d} r87={21d} r88={21d} r89={21d} r90={21d} r91={21d} r92={21d} r93={21d} r94={21d} r95={21d} r96={21d} r97={21d} r98={21d} r99={21d} r100={21d} r101={21d} r102={21d} r103={21d} r104={21d} r105={21d} r106={21d} r107={21d} r108={21d} r109={21d} r110={21d} r111={21d} r112={21d} r113={21d} r114={21d} r115={21d} r116={21d} r117={21d} r118={21d} r119={21d} r120={21d} r121={21d} r122={21d} r123={21d} r124={21d} r125={21d} r126={21d} r127={21d} r162={2d,3u} r163={1d,1u} r164={1d,1u} r165={1d} r166={1d} r167={1d} r168={1d} r169={1d} r170={1d,10u} r171={1d,1u} r172={1d,1u} r173={1d,1u} r174={1d} r175={1d,2u} r176={2d,4u} r177={1d,1u} r178={1d,2u} r179={1d,1u} r180={1d,1u} r181={1d,15u} r183={1d,1u} r184={1d,3u} r185={1d,1u} r186={1d} r187={1d,1u} r188={1d,1u} r189={1d,1u} r190={1d,2u} r191={1d,1u} r192={1d} r193={1d,1u} r194={1d,1u} r195={1d,2u} r196={1d,2u} r198={1d,3u,2d} r201={1d,1u} r202={1d} r203={1d} r204={1d} r206={1d} r209={1d,1d} r215={1d,1u} r216={1d,1u} r217={1d,1u} r218={1d,1u} r219={1d,1u} r220={1d,1u} r221={1d,1u} r222={1d,1u} r223={1d,1u} r224={1d,1u} r225={1d,3u} r226={1d,1u} r227={1d,1u} r228={1d,1u} r229={1d,1u} r230={1d} r231={1d} r232={1d,1u} r233={1d,2u} r234={1d} r235={1d,3u} r236={1d,1u} r237={1d,1u} r238={1d} r239={1d,1u} r240={1d,1u} r241={1d,1u} r242={1d,1u} r243={1d,1u} r244={1d,1u} r245={1d,1u} r246={1d,1u,1d} r247={1d,1u} r248={1d,1u} r249={1d,1u} r250={1d,1u} r251={1d,1u} r252={1d,1u} r253={1d,7u} r254={1d,1u} r255={1d} r256={1d,1u} r257={1d} r258={1d} 
;;    total ref usage 2898{2622d,272u,4e} in 157{136 regular + 21 call} insns.
;; Reaching defs:

  sparse invalidated 	0, 1, 2
  dense invalidated 	122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227, 2228, 2229, 2230, 2231, 2232, 2233, 2234, 2235, 2236, 2237, 2238, 2239, 2240, 2241, 2242, 2243, 2244, 2245, 2246, 2247, 2248, 2249, 2250, 2251, 2252, 2253, 2254, 2255, 2256, 2257, 2258, 2259, 2260, 2261, 2262, 2263, 2264, 2265, 2266, 2267, 2268, 2269, 2270, 2271, 2272, 2273, 2274, 2275, 2276, 2277, 2278, 2279, 2280, 2281, 2282, 2283, 2284, 2285, 2286, 2287, 2288, 2289, 2290, 2291, 2292, 2293, 2294, 2295, 2296, 2297, 2298, 2299, 2300, 2301, 2302, 2303, 2304, 2305, 2306, 2307, 2308, 2309, 2310, 2311, 2312, 2313, 2314, 2315, 2316, 2317, 2318, 2319, 2320, 2321, 2322, 2323, 2324, 2325, 2326, 2327, 2328, 2329, 2330, 2331, 2332, 2333, 2334, 2335, 2336, 2337, 2338, 2339, 2340, 2341, 2342, 2343, 2344, 2345, 2346, 2347, 2348, 2349, 2350, 2351, 2352, 2353, 2354, 2355, 2356, 2357, 2358, 2359, 2360, 2361, 2362, 2363, 2364, 2365, 2366, 2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379, 2380, 2381, 2382, 2383, 2384, 2385, 2386, 2387, 2388, 2389, 2390, 2391, 2392, 2393, 2394, 2395, 2396, 2397, 2398, 2399, 2400, 2401, 2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410, 2411, 2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459, 2460, 2461, 2462, 2463, 2464, 2465, 2466, 2467, 2468, 2469, 2470, 2471, 2472, 2473, 2474, 2475, 2476, 2477, 2478, 2479, 2480, 2481, 2482, 2483, 2484, 2485, 2486, 2487, 2488, 2489, 2490, 2491, 2492, 2493, 2494, 2495, 2496, 2497, 2498, 2499, 2500, 2501, 2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515, 2516, 2517, 2518, 2519, 2520, 2521, 2522, 2523, 2524, 2525, 2526, 2527, 2528, 2529, 2530, 2531, 2532, 2533, 2534
0[0,43] 1[43,42] 2[85,37] 3[122,25] 11[147,1] 12[148,22] 13[170,1] 14[171,22] 15[193,21] 16[214,21] 17[235,21] 18[256,21] 19[277,21] 20[298,21] 21[319,21] 22[340,21] 23[361,21] 24[382,30] 25[412,1] 26[413,1] 27[414,21] 28[435,21] 29[456,21] 30[477,21] 31[498,21] 32[519,21] 33[540,21] 34[561,21] 35[582,21] 36[603,21] 37[624,21] 38[645,21] 39[666,21] 40[687,21] 41[708,21] 42[729,21] 43[750,21] 44[771,21] 45[792,21] 46[813,21] 47[834,21] 48[855,21] 49[876,21] 50[897,21] 51[918,21] 52[939,21] 53[960,21] 54[981,21] 55[1002,21] 56[1023,21] 57[1044,21] 58[1065,21] 59[1086,21] 60[1107,21] 61[1128,21] 62[1149,21] 63[1170,21] 64[1191,21] 65[1212,21] 66[1233,21] 67[1254,21] 68[1275,21] 69[1296,21] 70[1317,21] 71[1338,21] 72[1359,21] 73[1380,21] 74[1401,21] 75[1422,21] 76[1443,21] 77[1464,21] 78[1485,21] 79[1506,21] 80[1527,21] 81[1548,21] 82[1569,21] 83[1590,21] 84[1611,21] 85[1632,21] 86[1653,21] 87[1674,21] 88[1695,21] 89[1716,21] 90[1737,21] 91[1758,21] 92[1779,21] 93[1800,21] 94[1821,21] 95[1842,21] 96[1863,21] 97[1884,21] 98[1905,21] 99[1926,21] 100[1947,21] 101[1968,21] 102[1989,21] 103[2010,21] 104[2031,21] 105[2052,21] 106[2073,21] 107[2094,21] 108[2115,21] 109[2136,21] 110[2157,21] 111[2178,21] 112[2199,21] 113[2220,21] 114[2241,21] 115[2262,21] 116[2283,21] 117[2304,21] 118[2325,21] 119[2346,21] 120[2367,21] 121[2388,21] 122[2409,21] 123[2430,21] 124[2451,21] 125[2472,21] 126[2493,21] 127[2514,21] 162[2535,2] 163[2537,1] 164[2538,1] 165[2539,1] 166[2540,1] 167[2541,1] 168[2542,1] 169[2543,1] 170[2544,1] 171[2545,1] 172[2546,1] 173[2547,1] 174[2548,1] 175[2549,1] 176[2550,2] 177[2552,1] 178[2553,1] 179[2554,1] 180[2555,1] 181[2556,1] 183[2557,1] 184[2558,1] 185[2559,1] 186[2560,1] 187[2561,1] 188[2562,1] 189[2563,1] 190[2564,1] 191[2565,1] 192[2566,1] 193[2567,1] 194[2568,1] 195[2569,1] 196[2570,1] 198[2571,1] 201[2572,1] 202[2573,1] 203[2574,1] 204[2575,1] 206[2576,1] 209[2577,1] 215[2578,1] 216[2579,1] 217[2580,1] 218[2581,1] 219[2582,1] 220[2583,1] 221[2584,1] 222[2585,1] 223[2586,1] 224[2587,1] 225[2588,1] 226[2589,1] 227[2590,1] 228[2591,1] 229[2592,1] 230[2593,1] 231[2594,1] 232[2595,1] 233[2596,1] 234[2597,1] 235[2598,1] 236[2599,1] 237[2600,1] 238[2601,1] 239[2602,1] 240[2603,1] 241[2604,1] 242[2605,1] 243[2606,1] 244[2607,1] 245[2608,1] 246[2609,1] 247[2610,1] 248[2611,1] 249[2612,1] 250[2613,1] 251[2614,1] 252[2615,1] 253[2616,1] 254[2617,1] 255[2618,1] 256[2619,1] 257[2620,1] 258[2621,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 171 173 176 181 183 184 185 186 187 188
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 171 173 176 181 183 184 185 186 187 188
;; live  kill	 14 [lr] 24 [cc]
;; rd  in  	(10)
42, 84, 121, 146, 147, 169, 170, 192, 412, 413
;; rd  gen 	(11)
41, 2545, 2547, 2551, 2556, 2557, 2558, 2559, 2560, 2561, 2562
;; rd  kill	(33)
171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 2545, 2547, 2550, 2551, 2556, 2557, 2558, 2559, 2560, 2561, 2562

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 34 0 31 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 31 34 33 2 arch/arm/kernel/setup.c:998 (set (reg/v/f:SI 181 [ m ])
        (reg:SI 0 r0 [ m ])) 167 {*arm_movsi_insn} (nil))

(note 33 31 36 2 NOTE_INSN_FUNCTION_BEG)

(insn 36 33 37 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/cputype.h:60 (parallel [
            (set (reg/v:SI 173 [ __val ])
                (asm_operands:SI ("mrc	p15, 0, %0, c0, c0, 0") ("=r") 0 []
                     [] 8199339))
            (clobber (reg:QI 24 cc))
        ]) -1 (nil))

(insn 37 36 38 2 arch/arm/kernel/setup.c:1001 (set (reg/f:SI 183)
        (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x1164f000>)) 167 {*arm_movsi_insn} (nil))

(insn 38 37 39 2 arch/arm/kernel/setup.c:1001 (set (reg/f:SI 184)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 39 38 41 2 arch/arm/kernel/setup.c:1001 (set (reg:SI 185)
        (and:SI (reg/v:SI 173 [ __val ])
            (const_int 15 [0xf]))) 67 {*arm_andsi3_insn} (nil))

(insn 41 39 42 2 arch/arm/kernel/setup.c:1001 (set (reg/f:SI 187)
        (plus:SI (reg/f:SI 184)
            (const_int 16 [0x10]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 16 [0x10])))
        (nil)))

(insn 42 41 44 2 arch/arm/kernel/setup.c:1001 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg/f:SI 187)) 167 {*arm_movsi_insn} (nil))

(insn 44 42 45 2 arch/arm/kernel/setup.c:1001 (set (reg:SI 1 r1)
        (reg/f:SI 183)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x1164f000>)
        (nil)))

(insn 45 44 46 2 arch/arm/kernel/setup.c:1001 (set (reg:SI 2 r2)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 184)
                (const_int 12 [0xc])) [0 cpu_name+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 46 45 47 2 arch/arm/kernel/setup.c:1001 (set (reg:SI 3 r3)
        (reg:SI 185)) 167 {*arm_movsi_insn} (nil))

(call_insn 47 46 48 2 arch/arm/kernel/setup.c:1001 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("seq_printf") [flags 0x41] <function_decl 0x11048580 seq_printf>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 48 47 49 2 include/linux/cpumask.h:174 (set (reg/f:SI 188)
        (symbol_ref:SI ("cpu_online_mask") [flags 0xc0] <var_decl 0x10c5bf60 cpu_online_mask>)) 167 {*arm_movsi_insn} (nil))

(insn 49 48 50 2 include/linux/cpumask.h:174 (set (reg/f:SI 171 [ D.26017 ])
        (mem/u/f/c/i:SI (reg/f:SI 188) [0 cpu_online_mask+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 50 49 99 2 arch/arm/kernel/setup.c:1008 (set (reg/v:SI 176 [ i ])
        (const_int -1 [0xffffffffffffffff])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 2 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171 176 181
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171 176 181
;; rd  out 	(19)
41, 84, 121, 146, 147, 169, 170, 412, 413, 2545, 2547, 2551, 2556, 2557, 2558, 2559, 2560, 2561, 2562


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 4) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u20(11){ }u21(13){ }u22(25){ }u23(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171 176 181
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 176 181
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 174 175 179 189 190 191 192 193 194 195 196 198 201 202 203 204 206 209 215
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171 176 181
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 174 175 179 189 190 191 192 193 194 195 196 198 201 202 203 204 206 209 215
;; live  kill	 14 [lr]
;; rd  in  	(42)
31, 84, 121, 146, 147, 169, 170, 403, 412, 413, 2545, 2546, 2547, 2548, 2549, 2550, 2554, 2556, 2557, 2558, 2559, 2560, 2561, 2562, 2563, 2564, 2565, 2566, 2567, 2568, 2569, 2570, 2571, 2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579, 2580
;; rd  gen 	(20)
33, 2548, 2549, 2554, 2563, 2564, 2565, 2566, 2567, 2568, 2569, 2570, 2571, 2572, 2573, 2574, 2575, 2576, 2577, 2578
;; rd  kill	(41)
171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 2548, 2549, 2554, 2563, 2564, 2565, 2566, 2567, 2568, 2569, 2570, 2571, 2572, 2573, 2574, 2575, 2576, 2577, 2578

;; Pred edge  4 [91.0%] 
(code_label 99 50 53 3 60 "" [1 uses])

(note 53 99 54 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 54 53 55 3 arch/arm/kernel/setup.c:1015 (set (reg/f:SI 189)
        (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x1164cbd0>)) 167 {*arm_movsi_insn} (nil))

(insn 55 54 56 3 arch/arm/kernel/setup.c:1015 (set (reg:SI 0 r0)
        (reg/v/f:SI 181 [ m ])) 167 {*arm_movsi_insn} (nil))

(insn 56 55 57 3 arch/arm/kernel/setup.c:1015 (set (reg:SI 1 r1)
        (reg/f:SI 189)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x1164cbd0>)
        (nil)))

(insn 57 56 58 3 arch/arm/kernel/setup.c:1015 (set (reg:SI 2 r2)
        (reg/v:SI 176 [ i ])) 167 {*arm_movsi_insn} (nil))

(call_insn 58 57 59 3 arch/arm/kernel/setup.c:1015 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("seq_printf") [flags 0x41] <function_decl 0x11048580 seq_printf>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 59 58 60 3 arch/arm/kernel/setup.c:1017 (set (reg/f:SI 190)
        (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 60 59 61 3 arch/arm/kernel/setup.c:1017 (set (reg/v:SI 175 [ __ptr ])
        (asm_operands:SI ("") ("=r") 0 [
                (reg/f:SI 190)
            ]
             [
                (asm_input:SI ("0") 0)
            ] 10528364)) -1 (nil))

(insn 61 60 62 3 arch/arm/kernel/setup.c:1017 (set (reg/f:SI 191)
        (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10c98e40 __per_cpu_offset>)) 167 {*arm_movsi_insn} (nil))

(insn 62 61 65 3 arch/arm/kernel/setup.c:1017 (set (reg:SI 179 [ D.25874 ])
        (mem/s/j:SI (plus:SI (mult:SI (reg/v:SI 176 [ i ])
                    (const_int 4 [0x4]))
                (reg/f:SI 191)) [0 __per_cpu_offset S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 65 62 67 3 arch/arm/kernel/setup.c:1016 (set (reg/f:SI 193)
        (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x1164cea0>)) 167 {*arm_movsi_insn} (nil))

(insn 67 65 68 3 arch/arm/kernel/setup.c:1016 (set (reg:SI 195)
        (plus:SI (reg/v:SI 175 [ __ptr ])
            (reg:SI 179 [ D.25874 ]))) 4 {*arm_addsi3} (nil))

(insn 68 67 69 3 arch/arm/kernel/setup.c:1016 (set (reg/f:SI 196)
        (plus:SI (reg:SI 195)
            (const_int 56 [0x38]))) 4 {*arm_addsi3} (nil))

(insn 69 68 70 3 arch/arm/kernel/setup.c:1016 (set (reg:SI 198 [ <variable>.loops_per_jiffy ])
        (mem/s/j:SI (reg/f:SI 196) [0 <variable>.loops_per_jiffy+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 70 69 71 3 arch/arm/kernel/setup.c:1016 (set (reg:SI 0 r0)
        (reg:SI 198 [ <variable>.loops_per_jiffy ])) 167 {*arm_movsi_insn} (nil))

(insn 71 70 72 3 arch/arm/kernel/setup.c:1016 (set (reg:SI 1 r1)
        (const_int 5000 [0x1388])) 167 {*arm_movsi_insn} (nil))

(call_insn/u 72 71 73 3 arch/arm/kernel/setup.c:1016 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_uidiv") [flags 0x41]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 73 72 78 3 arch/arm/kernel/setup.c:1016 (set (reg:SI 201)
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (udiv:SI (reg:SI 198 [ <variable>.loops_per_jiffy ])
            (const_int 5000 [0x1388]))
        (nil)))

(insn 78 73 79 3 arch/arm/kernel/setup.c:1016 (set (reg:SI 0 r0)
        (reg:SI 198 [ <variable>.loops_per_jiffy ])) 167 {*arm_movsi_insn} (nil))

(insn 79 78 80 3 arch/arm/kernel/setup.c:1016 (set (reg:SI 1 r1)
        (const_int 50 [0x32])) 167 {*arm_movsi_insn} (nil))

(call_insn/u 80 79 81 3 arch/arm/kernel/setup.c:1016 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_uidiv") [flags 0x41]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 81 80 83 3 arch/arm/kernel/setup.c:1016 (set (reg:SI 209)
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (udiv:SI (reg:SI 198 [ <variable>.loops_per_jiffy ])
            (const_int 50 [0x32]))
        (nil)))

(insn 83 81 84 3 arch/arm/kernel/setup.c:1016 (set (reg:SI 1 r1)
        (const_int 100 [0x64])) 167 {*arm_movsi_insn} (nil))

(call_insn/u 84 83 85 3 arch/arm/kernel/setup.c:1016 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_uidivmod") [flags 0x41]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 85 84 86 3 arch/arm/kernel/setup.c:1016 (set (reg:SI 215 [+4 ])
        (reg:SI 1 r1 [+4 ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (umod:SI (reg:SI 209)
            (const_int 100 [0x64]))
        (nil)))

(insn 86 85 87 3 arch/arm/kernel/setup.c:1016 (set (reg:SI 0 r0)
        (reg/v/f:SI 181 [ m ])) 167 {*arm_movsi_insn} (nil))

(insn 87 86 88 3 arch/arm/kernel/setup.c:1016 (set (reg:SI 1 r1)
        (reg/f:SI 193)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x1164cea0>)
        (nil)))

(insn 88 87 89 3 arch/arm/kernel/setup.c:1016 (set (reg:SI 2 r2)
        (reg:SI 201)) 167 {*arm_movsi_insn} (nil))

(insn 89 88 90 3 arch/arm/kernel/setup.c:1016 (set (reg:SI 3 r3)
        (reg:SI 215 [+4 ])) 167 {*arm_movsi_insn} (nil))

(call_insn 90 89 91 3 arch/arm/kernel/setup.c:1016 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("seq_printf") [flags 0x41] <function_decl 0x11048580 seq_printf>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171 176 181
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171 176 181
;; rd  out 	(42)
33, 84, 121, 146, 147, 169, 170, 403, 412, 413, 2545, 2546, 2547, 2548, 2549, 2550, 2554, 2556, 2557, 2558, 2559, 2560, 2561, 2562, 2563, 2564, 2565, 2566, 2567, 2568, 2569, 2570, 2571, 2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579, 2580


;; Succ edge  4 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u71(11){ }u72(13){ }u73(25){ }u74(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171 176 181
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171 176
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 172 176 216 217
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171 176 181
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 172 176 216 217
;; live  kill	 14 [lr]
;; rd  in  	(44)
33, 41, 84, 121, 146, 147, 169, 170, 403, 412, 413, 2545, 2546, 2547, 2548, 2549, 2550, 2551, 2554, 2556, 2557, 2558, 2559, 2560, 2561, 2562, 2563, 2564, 2565, 2566, 2567, 2568, 2569, 2570, 2571, 2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579, 2580
;; rd  gen 	(6)
31, 403, 2546, 2550, 2579, 2580
;; rd  kill	(57)
171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 2546, 2550, 2551, 2579, 2580

;; Pred edge  2 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%]  (fallthru,dfs_back)
(code_label 91 90 92 4 59 "" [0 uses])

(note 92 91 93 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 93 92 94 4 include/linux/cpumask.h:174 (set (reg:SI 172 [ D.26016 ])
        (plus:SI (reg/v:SI 176 [ i ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 94 93 95 4 include/linux/cpumask.h:174 (set (reg:SI 0 r0)
        (reg/f:SI 171 [ D.26017 ])) 167 {*arm_movsi_insn} (nil))

(insn 95 94 96 4 include/linux/cpumask.h:174 (set (reg:SI 1 r1)
        (const_int 2 [0x2])) 167 {*arm_movsi_insn} (nil))

(insn 96 95 97 4 include/linux/cpumask.h:174 (set (reg:SI 2 r2)
        (reg:SI 172 [ D.26016 ])) 167 {*arm_movsi_insn} (nil))

(call_insn 97 96 98 4 include/linux/cpumask.h:174 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("_find_next_bit_le") [flags 0x41] <function_decl 0x109c0980 _find_next_bit_le>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 98 97 100 4 include/linux/cpumask.h:174 (set (reg/v:SI 176 [ i ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 100 98 101 4 arch/arm/kernel/setup.c:1008 discrim 1 (set (reg/f:SI 216)
        (symbol_ref:SI ("nr_cpu_ids") [flags 0xc0] <var_decl 0x10c5bea0 nr_cpu_ids>)) 167 {*arm_movsi_insn} (nil))

(insn 101 100 102 4 arch/arm/kernel/setup.c:1008 discrim 1 (set (reg:SI 217 [ nr_cpu_ids ])
        (mem/c/i:SI (reg/f:SI 216) [0 nr_cpu_ids+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 102 101 103 4 arch/arm/kernel/setup.c:1008 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 176 [ i ])
            (reg:SI 217 [ nr_cpu_ids ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 103 102 104 4 arch/arm/kernel/setup.c:1008 discrim 1 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 99)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
        (nil)))
;; End of basic block 4 -> ( 3 5)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171 176 181
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171 176 181
;; rd  out 	(42)
31, 84, 121, 146, 147, 169, 170, 403, 412, 413, 2545, 2546, 2547, 2548, 2549, 2550, 2554, 2556, 2557, 2558, 2559, 2560, 2561, 2562, 2563, 2564, 2565, 2566, 2567, 2568, 2569, 2570, 2571, 2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579, 2580


;; Succ edge  3 [91.0%] 
;; Succ edge  5 [9.0%]  (fallthru)

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u87(11){ }u88(13){ }u89(25){ }u90(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 162 218
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181
;; live  gen 	 0 [r0] 1 [r1] 162 218
;; live  kill	 14 [lr]
;; rd  in  	(42)
31, 84, 121, 146, 147, 169, 170, 403, 412, 413, 2545, 2546, 2547, 2548, 2549, 2550, 2554, 2556, 2557, 2558, 2559, 2560, 2561, 2562, 2563, 2564, 2565, 2566, 2567, 2568, 2569, 2570, 2571, 2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579, 2580
;; rd  gen 	(3)
29, 2536, 2581
;; rd  kill	(25)
171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 2535, 2536, 2581

;; Pred edge  4 [9.0%]  (fallthru)
(note 104 103 105 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 105 104 106 5 arch/arm/kernel/setup.c:1027 (set (reg/f:SI 218)
        (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x116c6b70>)) 167 {*arm_movsi_insn} (nil))

(insn 106 105 107 5 arch/arm/kernel/setup.c:1027 (set (reg:SI 0 r0)
        (reg/v/f:SI 181 [ m ])) 167 {*arm_movsi_insn} (nil))

(insn 107 106 108 5 arch/arm/kernel/setup.c:1027 (set (reg:SI 1 r1)
        (reg/f:SI 218)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x116c6b70>)
        (nil)))

(call_insn 108 107 109 5 arch/arm/kernel/setup.c:1027 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("seq_puts") [flags 0x41] <function_decl 0x11048480 seq_puts>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 109 108 134 5 arch/arm/kernel/setup.c:1029 (set (reg/v:SI 162 [ i.719 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 5 -> ( 9)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 162 181
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 162 181
;; rd  out 	(44)
29, 84, 121, 146, 147, 169, 170, 403, 412, 413, 2536, 2545, 2546, 2547, 2548, 2549, 2550, 2554, 2556, 2557, 2558, 2559, 2560, 2561, 2562, 2563, 2564, 2565, 2566, 2567, 2568, 2569, 2570, 2571, 2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579, 2580, 2581


;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 9) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u96(11){ }u97(13){ }u98(25){ }u99(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 162 178 181
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 162
;; lr  def 	 24 [cc] 219 220 221 222 223
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 162 178 181
;; live  gen 	 24 [cc] 219 220 221 222 223
;; live  kill	
;; rd  in  	(55)
27, 29, 84, 121, 146, 147, 169, 170, 399, 412, 413, 2535, 2536, 2545, 2546, 2547, 2548, 2549, 2550, 2553, 2554, 2556, 2557, 2558, 2559, 2560, 2561, 2562, 2563, 2564, 2565, 2566, 2567, 2568, 2569, 2570, 2571, 2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579, 2580, 2581, 2582, 2583, 2584, 2585, 2586, 2587, 2588, 2589
;; rd  gen 	(6)
401, 2582, 2583, 2584, 2585, 2586
;; rd  kill	(35)
382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 2582, 2583, 2584, 2585, 2586

;; Pred edge  9 [95.0%] 
(code_label 134 109 112 6 63 "" [1 uses])

(note 112 134 113 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 113 112 114 6 arch/arm/kernel/setup.c:1030 (set (reg:SI 220)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 114 113 115 6 arch/arm/kernel/setup.c:1030 (set (reg:SI 219)
        (ashift:SI (reg:SI 220)
            (reg/v:SI 162 [ i.719 ]))) 117 {*arm_shiftsi3} (expr_list:REG_EQUAL (ashift:SI (const_int 1 [0x1])
            (reg/v:SI 162 [ i.719 ]))
        (nil)))

(insn 115 114 116 6 arch/arm/kernel/setup.c:1030 (set (reg/f:SI 221)
        (symbol_ref:SI ("*.LANCHOR3") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 116 115 117 6 arch/arm/kernel/setup.c:1030 (set (reg:SI 223 [ elf_hwcap ])
        (mem/c/i:SI (reg/f:SI 221) [0 elf_hwcap+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 117 116 118 6 arch/arm/kernel/setup.c:1030 (set (reg:SI 222)
        (and:SI (reg:SI 219)
            (reg:SI 223 [ elf_hwcap ]))) 67 {*arm_andsi3_insn} (nil))

(insn 118 117 119 6 arch/arm/kernel/setup.c:1030 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 222)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 119 118 120 6 arch/arm/kernel/setup.c:1030 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 126)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))
;; End of basic block 6 -> ( 7 8)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 162 178 181
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 162 178 181
;; rd  out 	(55)
27, 29, 84, 121, 146, 147, 169, 170, 401, 412, 413, 2535, 2536, 2545, 2546, 2547, 2548, 2549, 2550, 2553, 2554, 2556, 2557, 2558, 2559, 2560, 2561, 2562, 2563, 2564, 2565, 2566, 2567, 2568, 2569, 2570, 2571, 2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579, 2580, 2581, 2582, 2583, 2584, 2585, 2586, 2587, 2588, 2589


;; Succ edge  7 [29.0%]  (fallthru)
;; Succ edge  8 [71.0%] 

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u107(11){ }u108(13){ }u109(25){ }u110(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 162 178 181
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 178 181
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 224
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 162 178 181
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 224
;; live  kill	 14 [lr]
;; rd  in  	(55)
27, 29, 84, 121, 146, 147, 169, 170, 401, 412, 413, 2535, 2536, 2545, 2546, 2547, 2548, 2549, 2550, 2553, 2554, 2556, 2557, 2558, 2559, 2560, 2561, 2562, 2563, 2564, 2565, 2566, 2567, 2568, 2569, 2570, 2571, 2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579, 2580, 2581, 2582, 2583, 2584, 2585, 2586, 2587, 2588, 2589
;; rd  gen 	(2)
27, 2587
;; rd  kill	(23)
171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 2587

;; Pred edge  6 [29.0%]  (fallthru)
(note 120 119 121 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 121 120 122 7 arch/arm/kernel/setup.c:1031 (set (reg/f:SI 224)
        (symbol_ref/v/f:SI ("*.LC5") [flags 0x82] <string_cst 0x116b7ce0>)) 167 {*arm_movsi_insn} (nil))

(insn 122 121 123 7 arch/arm/kernel/setup.c:1031 (set (reg:SI 0 r0)
        (reg/v/f:SI 181 [ m ])) 167 {*arm_movsi_insn} (nil))

(insn 123 122 124 7 arch/arm/kernel/setup.c:1031 (set (reg:SI 1 r1)
        (reg/f:SI 224)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC5") [flags 0x82] <string_cst 0x116b7ce0>)
        (nil)))

(insn 124 123 125 7 arch/arm/kernel/setup.c:1031 (set (reg:SI 2 r2)
        (reg/f:SI 178 [ D.25891 ])) 167 {*arm_movsi_insn} (nil))

(call_insn 125 124 126 7 arch/arm/kernel/setup.c:1031 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("seq_printf") [flags 0x41] <function_decl 0x11048580 seq_printf>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))
;; End of basic block 7 -> ( 8)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 162 181
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 162 181
;; rd  out 	(54)
27, 84, 121, 146, 147, 169, 170, 401, 412, 413, 2535, 2536, 2545, 2546, 2547, 2548, 2549, 2550, 2553, 2554, 2556, 2557, 2558, 2559, 2560, 2561, 2562, 2563, 2564, 2565, 2566, 2567, 2568, 2569, 2570, 2571, 2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579, 2580, 2581, 2582, 2583, 2584, 2585, 2586, 2587, 2588, 2589


;; Succ edge  8 [100.0%]  (fallthru)

;; Start of basic block ( 6 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u118(11){ }u119(13){ }u120(25){ }u121(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 162 181
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 162
;; lr  def 	 162
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 162 181
;; live  gen 	 162
;; live  kill	
;; rd  in  	(55)
27, 29, 84, 121, 146, 147, 169, 170, 401, 412, 413, 2535, 2536, 2545, 2546, 2547, 2548, 2549, 2550, 2553, 2554, 2556, 2557, 2558, 2559, 2560, 2561, 2562, 2563, 2564, 2565, 2566, 2567, 2568, 2569, 2570, 2571, 2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579, 2580, 2581, 2582, 2583, 2584, 2585, 2586, 2587, 2588, 2589
;; rd  gen 	(1)
2535
;; rd  kill	(2)
2535, 2536

;; Pred edge  6 [71.0%] 
;; Pred edge  7 [100.0%]  (fallthru)
(code_label 126 125 127 8 62 "" [1 uses])

(note 127 126 128 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 128 127 129 8 arch/arm/kernel/setup.c:1029 (set (reg/v:SI 162 [ i.719 ])
        (plus:SI (reg/v:SI 162 [ i.719 ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))
;; End of basic block 8 -> ( 9)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 162 181
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 162 181
;; rd  out 	(54)
27, 29, 84, 121, 146, 147, 169, 170, 401, 412, 413, 2535, 2545, 2546, 2547, 2548, 2549, 2550, 2553, 2554, 2556, 2557, 2558, 2559, 2560, 2561, 2562, 2563, 2564, 2565, 2566, 2567, 2568, 2569, 2570, 2571, 2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579, 2580, 2581, 2582, 2583, 2584, 2585, 2586, 2587, 2588, 2589


;; Succ edge  9 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 5 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u123(11){ }u124(13){ }u125(25){ }u126(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 162 181
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 162
;; lr  def 	 24 [cc] 178 225 226
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 162 181
;; live  gen 	 24 [cc] 178 225 226
;; live  kill	
;; rd  in  	(56)
27, 29, 84, 121, 146, 147, 169, 170, 401, 403, 412, 413, 2535, 2536, 2545, 2546, 2547, 2548, 2549, 2550, 2553, 2554, 2556, 2557, 2558, 2559, 2560, 2561, 2562, 2563, 2564, 2565, 2566, 2567, 2568, 2569, 2570, 2571, 2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579, 2580, 2581, 2582, 2583, 2584, 2585, 2586, 2587, 2588, 2589
;; rd  gen 	(4)
399, 2553, 2588, 2589
;; rd  kill	(33)
382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 2553, 2588, 2589

;; Pred edge  5 [100.0%]  (fallthru)
;; Pred edge  8 [100.0%]  (fallthru,dfs_back)
(code_label 129 128 130 9 61 "" [0 uses])

(note 130 129 131 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 131 130 132 9 arch/arm/kernel/setup.c:1029 discrim 1 (set (reg/f:SI 225)
        (symbol_ref:SI ("*.LANCHOR4") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 132 131 133 9 arch/arm/kernel/setup.c:1029 discrim 1 (set (reg:SI 226)
        (ashift:SI (reg/v:SI 162 [ i.719 ])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (nil))

(insn 133 132 135 9 arch/arm/kernel/setup.c:1029 discrim 1 (set (reg/f:SI 178 [ D.25891 ])
        (mem/s/u/f/j:SI (plus:SI (reg/f:SI 225)
                (reg:SI 226)) [0 hwcap_str S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 135 133 136 9 arch/arm/kernel/setup.c:1029 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 178 [ D.25891 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 136 135 137 9 arch/arm/kernel/setup.c:1029 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 134)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9500 [0x251c])
        (nil)))
;; End of basic block 9 -> ( 6 10)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 162 178 181 225
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 162 178 181 225
;; rd  out 	(55)
27, 29, 84, 121, 146, 147, 169, 170, 399, 412, 413, 2535, 2536, 2545, 2546, 2547, 2548, 2549, 2550, 2553, 2554, 2556, 2557, 2558, 2559, 2560, 2561, 2562, 2563, 2564, 2565, 2566, 2567, 2568, 2569, 2570, 2571, 2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579, 2580, 2581, 2582, 2583, 2584, 2585, 2586, 2587, 2588, 2589


;; Succ edge  6 [95.0%] 
;; Succ edge  10 [5.0%]  (fallthru)

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u132(11){ }u133(13){ }u134(25){ }u135(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181 225
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181 225
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 169 170 177 227 228 229 230 231 232 233 234 235
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181 225
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 169 170 177 227 228 229 230 231 232 233 234 235
;; live  kill	 14 [lr] 24 [cc]
;; rd  in  	(55)
27, 29, 84, 121, 146, 147, 169, 170, 399, 412, 413, 2535, 2536, 2545, 2546, 2547, 2548, 2549, 2550, 2553, 2554, 2556, 2557, 2558, 2559, 2560, 2561, 2562, 2563, 2564, 2565, 2566, 2567, 2568, 2569, 2570, 2571, 2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579, 2580, 2581, 2582, 2583, 2584, 2585, 2586, 2587, 2588, 2589
;; rd  gen 	(14)
22, 394, 2543, 2544, 2552, 2590, 2591, 2592, 2593, 2594, 2595, 2596, 2597, 2598
;; rd  kill	(64)
171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 2543, 2544, 2552, 2590, 2591, 2592, 2593, 2594, 2595, 2596, 2597, 2598

;; Pred edge  9 [5.0%]  (fallthru)
(note 137 136 138 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 138 137 139 10 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/cputype.h:60 (parallel [
            (set (reg/v:SI 170 [ __val ])
                (asm_operands:SI ("mrc	p15, 0, %0, c0, c0, 0") ("=r") 0 []
                     [] 8199339))
            (clobber (reg:QI 24 cc))
        ]) -1 (nil))

(insn 139 138 140 10 arch/arm/kernel/setup.c:1033 (set (reg/f:SI 227)
        (symbol_ref/v/f:SI ("*.LC6") [flags 0x82] <string_cst 0x116c2ac0>)) 167 {*arm_movsi_insn} (nil))

(insn 140 139 141 10 arch/arm/kernel/setup.c:1033 (set (reg:SI 228)
        (lshiftrt:SI (reg/v:SI 170 [ __val ])
            (const_int 24 [0x18]))) 117 {*arm_shiftsi3} (nil))

(insn 141 140 142 10 arch/arm/kernel/setup.c:1033 (set (reg:SI 0 r0)
        (reg/v/f:SI 181 [ m ])) 167 {*arm_movsi_insn} (nil))

(insn 142 141 143 10 arch/arm/kernel/setup.c:1033 (set (reg:SI 1 r1)
        (reg/f:SI 227)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC6") [flags 0x82] <string_cst 0x116c2ac0>)
        (nil)))

(insn 143 142 144 10 arch/arm/kernel/setup.c:1033 (set (reg:SI 2 r2)
        (reg:SI 228)) 167 {*arm_movsi_insn} (nil))

(call_insn 144 143 145 10 arch/arm/kernel/setup.c:1033 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("seq_printf") [flags 0x41] <function_decl 0x11048580 seq_printf>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(call_insn/u 145 144 146 10 arch/arm/kernel/setup.c:1034 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("cpu_architecture") [flags 0x3] <function_decl 0x512d9700 cpu_architecture>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))

(insn 146 145 147 10 arch/arm/kernel/setup.c:1034 (set (reg:SI 177 [ D.25893 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 147 146 150 10 arch/arm/kernel/setup.c:1034 (set (reg/f:SI 229)
        (symbol_ref/v/f:SI ("*.LC7") [flags 0x82] <string_cst 0x116c9180>)) 167 {*arm_movsi_insn} (nil))

(insn 150 147 151 10 arch/arm/kernel/setup.c:1034 (set (reg:SI 232)
        (ashift:SI (reg:SI 177 [ D.25893 ])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (nil))

(insn 151 150 153 10 arch/arm/kernel/setup.c:1034 (set (reg:SI 233)
        (plus:SI (reg/f:SI 225)
            (reg:SI 232))) 4 {*arm_addsi3} (nil))

(insn 153 151 154 10 arch/arm/kernel/setup.c:1034 (set (reg:SI 0 r0)
        (reg/v/f:SI 181 [ m ])) 167 {*arm_movsi_insn} (nil))

(insn 154 153 155 10 arch/arm/kernel/setup.c:1034 (set (reg:SI 1 r1)
        (reg/f:SI 229)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC7") [flags 0x82] <string_cst 0x116c9180>)
        (nil)))

(insn 155 154 156 10 arch/arm/kernel/setup.c:1034 (set (reg:SI 2 r2)
        (mem/s/u/f/j:SI (plus:SI (reg:SI 233)
                (const_int 80 [0x50])) [0 proc_arch S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn 156 155 158 10 arch/arm/kernel/setup.c:1034 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("seq_printf") [flags 0x41] <function_decl 0x11048580 seq_printf>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 158 156 159 10 arch/arm/kernel/setup.c:1036 (set (reg:SI 235)
        (and:SI (reg/v:SI 170 [ __val ])
            (const_int 585728 [0x8f000]))) 67 {*arm_andsi3_insn} (nil))

(insn 159 158 160 10 arch/arm/kernel/setup.c:1036 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 235)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 160 159 161 10 arch/arm/kernel/setup.c:1036 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 171)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7929 [0x1ef9])
        (nil)))
;; End of basic block 10 -> ( 11 12)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 170 181 235
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 170 181 235
;; rd  out 	(66)
22, 84, 121, 146, 147, 169, 170, 394, 412, 413, 2535, 2536, 2543, 2544, 2545, 2546, 2547, 2548, 2549, 2550, 2552, 2553, 2554, 2556, 2557, 2558, 2559, 2560, 2561, 2562, 2563, 2564, 2565, 2566, 2567, 2568, 2569, 2570, 2571, 2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579, 2580, 2581, 2582, 2583, 2584, 2585, 2586, 2587, 2588, 2589, 2590, 2591, 2592, 2593, 2594, 2595, 2596, 2597, 2598


;; Succ edge  11 [20.7%]  (fallthru)
;; Succ edge  12 [79.3%] 

;; Start of basic block ( 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u162(11){ }u163(13){ }u164(25){ }u165(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 170 181
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 170 181
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 168 236 237
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 170 181
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 168 236 237
;; live  kill	 14 [lr]
;; rd  in  	(66)
22, 84, 121, 146, 147, 169, 170, 394, 412, 413, 2535, 2536, 2543, 2544, 2545, 2546, 2547, 2548, 2549, 2550, 2552, 2553, 2554, 2556, 2557, 2558, 2559, 2560, 2561, 2562, 2563, 2564, 2565, 2566, 2567, 2568, 2569, 2570, 2571, 2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579, 2580, 2581, 2582, 2583, 2584, 2585, 2586, 2587, 2588, 2589, 2590, 2591, 2592, 2593, 2594, 2595, 2596, 2597, 2598
;; rd  gen 	(4)
20, 2542, 2599, 2600
;; rd  kill	(25)
171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 2542, 2599, 2600

;; Pred edge  10 [20.7%]  (fallthru)
(note 161 160 163 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 163 161 164 11 arch/arm/kernel/setup.c:1038 (set (reg/f:SI 236)
        (symbol_ref/v/f:SI ("*.LC8") [flags 0x82] <string_cst 0x116c95d0>)) 167 {*arm_movsi_insn} (nil))

(insn 164 163 165 11 arch/arm/kernel/setup.c:1038 (set (reg:SI 237)
        (lshiftrt:SI (reg/v:SI 170 [ __val ])
            (const_int 4 [0x4]))) 117 {*arm_shiftsi3} (nil))

(insn 165 164 166 11 arch/arm/kernel/setup.c:1038 (set (reg:SI 0 r0)
        (reg/v/f:SI 181 [ m ])) 167 {*arm_movsi_insn} (nil))

(insn 166 165 167 11 arch/arm/kernel/setup.c:1038 (set (reg:SI 1 r1)
        (reg/f:SI 236)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC8") [flags 0x82] <string_cst 0x116c95d0>)
        (nil)))

(insn 167 166 168 11 arch/arm/kernel/setup.c:1038 (set (reg:SI 2 r2)
        (reg:SI 237)) 167 {*arm_movsi_insn} (nil))

(call_insn 168 167 171 11 arch/arm/kernel/setup.c:1038 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("seq_printf") [flags 0x41] <function_decl 0x11048580 seq_printf>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))
;; End of basic block 11 -> ( 16)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181
;; rd  out 	(69)
20, 84, 121, 146, 147, 169, 170, 394, 412, 413, 2535, 2536, 2542, 2543, 2544, 2545, 2546, 2547, 2548, 2549, 2550, 2552, 2553, 2554, 2556, 2557, 2558, 2559, 2560, 2561, 2562, 2563, 2564, 2565, 2566, 2567, 2568, 2569, 2570, 2571, 2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579, 2580, 2581, 2582, 2583, 2584, 2585, 2586, 2587, 2588, 2589, 2590, 2591, 2592, 2593, 2594, 2595, 2596, 2597, 2598, 2599, 2600


;; Succ edge  16 [100.0%]  (fallthru)

;; Start of basic block ( 10) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u175(11){ }u176(13){ }u177(25){ }u178(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 170 181 235
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 170 235
;; lr  def 	 24 [cc] 167 238
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 170 181 235
;; live  gen 	 24 [cc] 167 238
;; live  kill	
;; rd  in  	(66)
22, 84, 121, 146, 147, 169, 170, 394, 412, 413, 2535, 2536, 2543, 2544, 2545, 2546, 2547, 2548, 2549, 2550, 2552, 2553, 2554, 2556, 2557, 2558, 2559, 2560, 2561, 2562, 2563, 2564, 2565, 2566, 2567, 2568, 2569, 2570, 2571, 2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579, 2580, 2581, 2582, 2583, 2584, 2585, 2586, 2587, 2588, 2589, 2590, 2591, 2592, 2593, 2594, 2595, 2596, 2597, 2598
;; rd  gen 	(3)
382, 2541, 2601
;; rd  kill	(32)
382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 2541, 2601

;; Pred edge  10 [79.3%] 
(code_label 171 168 172 12 64 "" [1 uses])

(note 172 171 175 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 175 172 176 12 arch/arm/kernel/setup.c:1040 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 235)
            (const_int 28672 [0x7000]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 176 175 177 12 arch/arm/kernel/setup.c:1040 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 188)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
        (nil)))
;; End of basic block 12 -> ( 13 14)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 170 181
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 170 181
;; rd  out 	(68)
22, 84, 121, 146, 147, 169, 170, 382, 412, 413, 2535, 2536, 2541, 2543, 2544, 2545, 2546, 2547, 2548, 2549, 2550, 2552, 2553, 2554, 2556, 2557, 2558, 2559, 2560, 2561, 2562, 2563, 2564, 2565, 2566, 2567, 2568, 2569, 2570, 2571, 2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579, 2580, 2581, 2582, 2583, 2584, 2585, 2586, 2587, 2588, 2589, 2590, 2591, 2592, 2593, 2594, 2595, 2596, 2597, 2598, 2601


;; Succ edge  13 [28.0%]  (fallthru)
;; Succ edge  14 [72.0%] 

;; Start of basic block ( 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u183(11){ }u184(13){ }u185(25){ }u186(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 170 181
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 170 181
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 166 239 240 241
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 170 181
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 166 239 240 241
;; live  kill	 14 [lr]
;; rd  in  	(68)
22, 84, 121, 146, 147, 169, 170, 382, 412, 413, 2535, 2536, 2541, 2543, 2544, 2545, 2546, 2547, 2548, 2549, 2550, 2552, 2553, 2554, 2556, 2557, 2558, 2559, 2560, 2561, 2562, 2563, 2564, 2565, 2566, 2567, 2568, 2569, 2570, 2571, 2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579, 2580, 2581, 2582, 2583, 2584, 2585, 2586, 2587, 2588, 2589, 2590, 2591, 2592, 2593, 2594, 2595, 2596, 2597, 2598, 2601
;; rd  gen 	(5)
18, 2540, 2602, 2603, 2604
;; rd  kill	(26)
171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 2540, 2602, 2603, 2604

;; Pred edge  12 [28.0%]  (fallthru)
(note 177 176 179 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 179 177 180 13 arch/arm/kernel/setup.c:1042 (set (reg/f:SI 239)
        (symbol_ref/v/f:SI ("*.LC9") [flags 0x82] <string_cst 0x116c9930>)) 167 {*arm_movsi_insn} (nil))

(insn 180 179 181 13 arch/arm/kernel/setup.c:1042 (set (reg:SI 240)
        (lshiftrt:SI (reg/v:SI 170 [ __val ])
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (nil))

(insn 181 180 182 13 arch/arm/kernel/setup.c:1042 (set (reg:SI 241)
        (and:SI (reg:SI 240)
            (const_int 127 [0x7f]))) 67 {*arm_andsi3_insn} (nil))

(insn 182 181 183 13 arch/arm/kernel/setup.c:1042 (set (reg:SI 0 r0)
        (reg/v/f:SI 181 [ m ])) 167 {*arm_movsi_insn} (nil))

(insn 183 182 184 13 arch/arm/kernel/setup.c:1042 (set (reg:SI 1 r1)
        (reg/f:SI 239)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC9") [flags 0x82] <string_cst 0x116c9930>)
        (nil)))

(insn 184 183 185 13 arch/arm/kernel/setup.c:1042 (set (reg:SI 2 r2)
        (reg:SI 241)) 167 {*arm_movsi_insn} (nil))

(call_insn 185 184 188 13 arch/arm/kernel/setup.c:1042 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("seq_printf") [flags 0x41] <function_decl 0x11048580 seq_printf>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))
;; End of basic block 13 -> ( 15)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181
;; rd  out 	(72)
18, 84, 121, 146, 147, 169, 170, 382, 412, 413, 2535, 2536, 2540, 2541, 2543, 2544, 2545, 2546, 2547, 2548, 2549, 2550, 2552, 2553, 2554, 2556, 2557, 2558, 2559, 2560, 2561, 2562, 2563, 2564, 2565, 2566, 2567, 2568, 2569, 2570, 2571, 2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579, 2580, 2581, 2582, 2583, 2584, 2585, 2586, 2587, 2588, 2589, 2590, 2591, 2592, 2593, 2594, 2595, 2596, 2597, 2598, 2601, 2602, 2603, 2604


;; Succ edge  15 [100.0%]  (fallthru)

;; Start of basic block ( 12) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u197(11){ }u198(13){ }u199(25){ }u200(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 170 181
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 170 181
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 165 242 243 244
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 170 181
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 165 242 243 244
;; live  kill	 14 [lr]
;; rd  in  	(68)
22, 84, 121, 146, 147, 169, 170, 382, 412, 413, 2535, 2536, 2541, 2543, 2544, 2545, 2546, 2547, 2548, 2549, 2550, 2552, 2553, 2554, 2556, 2557, 2558, 2559, 2560, 2561, 2562, 2563, 2564, 2565, 2566, 2567, 2568, 2569, 2570, 2571, 2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579, 2580, 2581, 2582, 2583, 2584, 2585, 2586, 2587, 2588, 2589, 2590, 2591, 2592, 2593, 2594, 2595, 2596, 2597, 2598, 2601
;; rd  gen 	(5)
16, 2539, 2605, 2606, 2607
;; rd  kill	(26)
171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 2539, 2605, 2606, 2607

;; Pred edge  12 [72.0%] 
(code_label 188 185 189 14 66 "" [1 uses])

(note 189 188 191 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 191 189 192 14 arch/arm/kernel/setup.c:1046 (set (reg/f:SI 242)
        (symbol_ref/v/f:SI ("*.LC10") [flags 0x82] <string_cst 0x116c9ba0>)) 167 {*arm_movsi_insn} (nil))

(insn 192 191 193 14 arch/arm/kernel/setup.c:1046 (set (reg:SI 243)
        (lshiftrt:SI (reg/v:SI 170 [ __val ])
            (const_int 20 [0x14]))) 117 {*arm_shiftsi3} (nil))

(insn 193 192 194 14 arch/arm/kernel/setup.c:1046 (set (reg:SI 244)
        (and:SI (reg:SI 243)
            (const_int 15 [0xf]))) 67 {*arm_andsi3_insn} (nil))

(insn 194 193 195 14 arch/arm/kernel/setup.c:1046 (set (reg:SI 0 r0)
        (reg/v/f:SI 181 [ m ])) 167 {*arm_movsi_insn} (nil))

(insn 195 194 196 14 arch/arm/kernel/setup.c:1046 (set (reg:SI 1 r1)
        (reg/f:SI 242)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC10") [flags 0x82] <string_cst 0x116c9ba0>)
        (nil)))

(insn 196 195 197 14 arch/arm/kernel/setup.c:1046 (set (reg:SI 2 r2)
        (reg:SI 244)) 167 {*arm_movsi_insn} (nil))

(call_insn 197 196 198 14 arch/arm/kernel/setup.c:1046 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("seq_printf") [flags 0x41] <function_decl 0x11048580 seq_printf>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))
;; End of basic block 14 -> ( 15)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181
;; rd  out 	(72)
16, 84, 121, 146, 147, 169, 170, 382, 412, 413, 2535, 2536, 2539, 2541, 2543, 2544, 2545, 2546, 2547, 2548, 2549, 2550, 2552, 2553, 2554, 2556, 2557, 2558, 2559, 2560, 2561, 2562, 2563, 2564, 2565, 2566, 2567, 2568, 2569, 2570, 2571, 2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579, 2580, 2581, 2582, 2583, 2584, 2585, 2586, 2587, 2588, 2589, 2590, 2591, 2592, 2593, 2594, 2595, 2596, 2597, 2598, 2601, 2605, 2606, 2607


;; Succ edge  15 [100.0%]  (fallthru)

;; Start of basic block ( 14 13) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u211(11){ }u212(13){ }u213(25){ }u214(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 164 245 246 247 248
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 164 245 246 247 248
;; live  kill	 14 [lr] 24 [cc]
;; rd  in  	(77)
16, 18, 84, 121, 146, 147, 169, 170, 382, 412, 413, 2535, 2536, 2539, 2540, 2541, 2543, 2544, 2545, 2546, 2547, 2548, 2549, 2550, 2552, 2553, 2554, 2556, 2557, 2558, 2559, 2560, 2561, 2562, 2563, 2564, 2565, 2566, 2567, 2568, 2569, 2570, 2571, 2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579, 2580, 2581, 2582, 2583, 2584, 2585, 2586, 2587, 2588, 2589, 2590, 2591, 2592, 2593, 2594, 2595, 2596, 2597, 2598, 2601, 2602, 2603, 2604, 2605, 2606, 2607
;; rd  gen 	(6)
14, 2538, 2608, 2609, 2610, 2611
;; rd  kill	(27)
171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 2538, 2608, 2609, 2610, 2611

;; Pred edge  14 [100.0%]  (fallthru)
;; Pred edge  13 [100.0%]  (fallthru)
(code_label 198 197 199 15 67 "" [0 uses])

(note 199 198 200 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 200 199 201 15 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/cputype.h:60 (parallel [
            (set (reg/v:SI 164 [ __val ])
                (asm_operands:SI ("mrc	p15, 0, %0, c0, c0, 0") ("=r") 0 []
                     [] 8199339))
            (clobber (reg:QI 24 cc))
        ]) -1 (nil))

(insn 201 200 202 15 arch/arm/kernel/setup.c:1049 (set (reg/f:SI 245)
        (symbol_ref/v/f:SI ("*.LC11") [flags 0x82] <string_cst 0x116c9d80>)) 167 {*arm_movsi_insn} (nil))

(insn 202 201 203 15 arch/arm/kernel/setup.c:1049 (set (reg:SI 246)
        (lshiftrt:SI (reg/v:SI 164 [ __val ])
            (const_int 4 [0x4]))) 117 {*arm_shiftsi3} (nil))

(insn 203 202 204 15 arch/arm/kernel/setup.c:1049 (set (reg:SI 248)
        (ashift:SI (reg:SI 246)
            (const_int 20 [0x14]))) 117 {*arm_shiftsi3} (nil))

(insn 204 203 205 15 arch/arm/kernel/setup.c:1049 (set (reg:SI 247)
        (lshiftrt:SI (reg:SI 248)
            (const_int 20 [0x14]))) 117 {*arm_shiftsi3} (expr_list:REG_EQUAL (and:SI (reg:SI 246)
            (const_int 4095 [0xfff]))
        (nil)))

(insn 205 204 206 15 arch/arm/kernel/setup.c:1049 (set (reg:SI 0 r0)
        (reg/v/f:SI 181 [ m ])) 167 {*arm_movsi_insn} (nil))

(insn 206 205 207 15 arch/arm/kernel/setup.c:1049 (set (reg:SI 1 r1)
        (reg/f:SI 245)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82] <string_cst 0x116c9d80>)
        (nil)))

(insn 207 206 208 15 arch/arm/kernel/setup.c:1049 (set (reg:SI 2 r2)
        (reg:SI 247)) 167 {*arm_movsi_insn} (nil))

(call_insn 208 207 209 15 arch/arm/kernel/setup.c:1049 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("seq_printf") [flags 0x41] <function_decl 0x11048580 seq_printf>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))
;; End of basic block 15 -> ( 16)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181
;; rd  out 	(81)
14, 84, 121, 146, 147, 169, 170, 382, 412, 413, 2535, 2536, 2538, 2539, 2540, 2541, 2543, 2544, 2545, 2546, 2547, 2548, 2549, 2550, 2552, 2553, 2554, 2556, 2557, 2558, 2559, 2560, 2561, 2562, 2563, 2564, 2565, 2566, 2567, 2568, 2569, 2570, 2571, 2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579, 2580, 2581, 2582, 2583, 2584, 2585, 2586, 2587, 2588, 2589, 2590, 2591, 2592, 2593, 2594, 2595, 2596, 2597, 2598, 2601, 2602, 2603, 2604, 2605, 2606, 2607, 2608, 2609, 2610, 2611


;; Succ edge  16 [100.0%]  (fallthru)

;; Start of basic block ( 15 11) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u226(11){ }u227(13){ }u228(25){ }u229(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 163 180 249 250 251 252 253 254 255 256 257 258
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 163 180 249 250 251 252 253 254 255 256 257 258
;; live  kill	 14 [lr] 24 [cc]
;; rd  in  	(86)
14, 20, 84, 121, 146, 147, 169, 170, 382, 394, 412, 413, 2535, 2536, 2538, 2539, 2540, 2541, 2542, 2543, 2544, 2545, 2546, 2547, 2548, 2549, 2550, 2552, 2553, 2554, 2556, 2557, 2558, 2559, 2560, 2561, 2562, 2563, 2564, 2565, 2566, 2567, 2568, 2569, 2570, 2571, 2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579, 2580, 2581, 2582, 2583, 2584, 2585, 2586, 2587, 2588, 2589, 2590, 2591, 2592, 2593, 2594, 2595, 2596, 2597, 2598, 2599, 2600, 2601, 2602, 2603, 2604, 2605, 2606, 2607, 2608, 2609, 2610, 2611
;; rd  gen 	(13)
3, 2537, 2555, 2612, 2613, 2614, 2615, 2616, 2617, 2618, 2619, 2620, 2621
;; rd  kill	(34)
171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 2537, 2555, 2612, 2613, 2614, 2615, 2616, 2617, 2618, 2619, 2620, 2621

;; Pred edge  15 [100.0%]  (fallthru)
;; Pred edge  11 [100.0%]  (fallthru)
(code_label 209 208 210 16 65 "" [0 uses])

(note 210 209 211 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 211 210 212 16 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/cputype.h:60 (parallel [
            (set (reg/v:SI 163 [ __val ])
                (asm_operands:SI ("mrc	p15, 0, %0, c0, c0, 0") ("=r") 0 []
                     [] 8199339))
            (clobber (reg:QI 24 cc))
        ]) -1 (nil))

(insn 212 211 213 16 arch/arm/kernel/setup.c:1052 (set (reg/f:SI 249)
        (symbol_ref/v/f:SI ("*.LC12") [flags 0x82] <string_cst 0x116c9f90>)) 167 {*arm_movsi_insn} (nil))

(insn 213 212 214 16 arch/arm/kernel/setup.c:1052 (set (reg:SI 250)
        (and:SI (reg/v:SI 163 [ __val ])
            (const_int 15 [0xf]))) 67 {*arm_andsi3_insn} (nil))

(insn 214 213 215 16 arch/arm/kernel/setup.c:1052 (set (reg:SI 0 r0)
        (reg/v/f:SI 181 [ m ])) 167 {*arm_movsi_insn} (nil))

(insn 215 214 216 16 arch/arm/kernel/setup.c:1052 (set (reg:SI 1 r1)
        (reg/f:SI 249)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC12") [flags 0x82] <string_cst 0x116c9f90>)
        (nil)))

(insn 216 215 217 16 arch/arm/kernel/setup.c:1052 (set (reg:SI 2 r2)
        (reg:SI 250)) 167 {*arm_movsi_insn} (nil))

(call_insn 217 216 218 16 arch/arm/kernel/setup.c:1052 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("seq_printf") [flags 0x41] <function_decl 0x11048580 seq_printf>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 218 217 219 16 arch/arm/kernel/setup.c:1054 (set (reg/f:SI 251)
        (symbol_ref/v/f:SI ("*.LC13") [flags 0x82] <string_cst 0x116c7720>)) 167 {*arm_movsi_insn} (nil))

(insn 219 218 220 16 arch/arm/kernel/setup.c:1054 (set (reg:SI 0 r0)
        (reg/v/f:SI 181 [ m ])) 167 {*arm_movsi_insn} (nil))

(insn 220 219 221 16 arch/arm/kernel/setup.c:1054 (set (reg:SI 1 r1)
        (reg/f:SI 251)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC13") [flags 0x82] <string_cst 0x116c7720>)
        (nil)))

(call_insn 221 220 222 16 arch/arm/kernel/setup.c:1054 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("seq_puts") [flags 0x41] <function_decl 0x11048480 seq_puts>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 222 221 223 16 arch/arm/kernel/setup.c:1056 (set (reg/f:SI 252)
        (symbol_ref/v/f:SI ("*.LC14") [flags 0x82] <string_cst 0x116c9780>)) 167 {*arm_movsi_insn} (nil))

(insn 223 222 224 16 arch/arm/kernel/setup.c:1056 (set (reg/f:SI 253)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 224 223 225 16 arch/arm/kernel/setup.c:1056 (set (reg:SI 0 r0)
        (reg/v/f:SI 181 [ m ])) 167 {*arm_movsi_insn} (nil))

(insn 225 224 226 16 arch/arm/kernel/setup.c:1056 (set (reg:SI 1 r1)
        (reg/f:SI 252)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC14") [flags 0x82] <string_cst 0x116c9780>)
        (nil)))

(insn 226 225 227 16 arch/arm/kernel/setup.c:1056 (set (reg:SI 2 r2)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 253)
                (const_int 24 [0x18])) [0 machine_name+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn 227 226 228 16 arch/arm/kernel/setup.c:1056 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("seq_printf") [flags 0x41] <function_decl 0x11048580 seq_printf>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 228 227 230 16 arch/arm/kernel/setup.c:1057 (set (reg/f:SI 254)
        (symbol_ref/v/f:SI ("*.LC15") [flags 0x82] <string_cst 0x116cd0f0>)) 167 {*arm_movsi_insn} (nil))

(insn 230 228 231 16 arch/arm/kernel/setup.c:1057 (set (reg:SI 0 r0)
        (reg/v/f:SI 181 [ m ])) 167 {*arm_movsi_insn} (nil))

(insn 231 230 232 16 arch/arm/kernel/setup.c:1057 (set (reg:SI 1 r1)
        (reg/f:SI 254)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC15") [flags 0x82] <string_cst 0x116cd0f0>)
        (nil)))

(insn 232 231 233 16 arch/arm/kernel/setup.c:1057 (set (reg:SI 2 r2)
        (mem/c/i:SI (plus:SI (reg/f:SI 253)
                (const_int 8 [0x8])) [0 system_rev+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn 233 232 234 16 arch/arm/kernel/setup.c:1057 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("seq_printf") [flags 0x41] <function_decl 0x11048580 seq_printf>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 234 233 237 16 arch/arm/kernel/setup.c:1058 (set (reg/f:SI 256)
        (symbol_ref/v/f:SI ("*.LC16") [flags 0x82] <string_cst 0x116cd240>)) 167 {*arm_movsi_insn} (nil))

(insn 237 234 238 16 arch/arm/kernel/setup.c:1058 (set (reg:SI 0 r0)
        (reg/v/f:SI 181 [ m ])) 167 {*arm_movsi_insn} (nil))

(insn 238 237 239 16 arch/arm/kernel/setup.c:1058 (set (reg:SI 1 r1)
        (reg/f:SI 256)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC16") [flags 0x82] <string_cst 0x116cd240>)
        (nil)))

(insn 239 238 240 16 arch/arm/kernel/setup.c:1058 (set (reg:SI 2 r2)
        (mem/c/i:SI (plus:SI (reg/f:SI 253)
                (const_int 4 [0x4])) [0 system_serial_high+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 240 239 241 16 arch/arm/kernel/setup.c:1058 (set (reg:SI 3 r3)
        (mem/c/i:SI (reg/f:SI 253) [0 system_serial_low+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn 241 240 242 16 arch/arm/kernel/setup.c:1058 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("seq_printf") [flags 0x41] <function_decl 0x11048580 seq_printf>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 242 241 246 16 arch/arm/kernel/setup.c:1062 (set (reg:SI 180 [ <result> ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 246 242 252 16 arch/arm/kernel/setup.c:1062 (set (reg/i:SI 0 r0)
        (reg:SI 180 [ <result> ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 252 246 0 16 arch/arm/kernel/setup.c:1062 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 16 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(97)
3, 84, 121, 146, 147, 169, 170, 382, 394, 412, 413, 2535, 2536, 2537, 2538, 2539, 2540, 2541, 2542, 2543, 2544, 2545, 2546, 2547, 2548, 2549, 2550, 2552, 2553, 2554, 2555, 2556, 2557, 2558, 2559, 2560, 2561, 2562, 2563, 2564, 2565, 2566, 2567, 2568, 2569, 2570, 2571, 2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579, 2580, 2581, 2582, 2583, 2584, 2585, 2586, 2587, 2588, 2589, 2590, 2591, 2592, 2593, 2594, 2595, 2596, 2597, 2598, 2599, 2600, 2601, 2602, 2603, 2604, 2605, 2606, 2607, 2608, 2609, 2610, 2611, 2612, 2613, 2614, 2615, 2616, 2617, 2618, 2619, 2620, 2621


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
deleting insn with uid = 40.
deleting insn with uid = 43.
deleting insn with uid = 63.
deleting insn with uid = 64.
deleting insn with uid = 66.
deleting insn with uid = 74.
deleting insn with uid = 75.
deleting insn with uid = 76.
deleting insn with uid = 77.
deleting insn with uid = 82.
deleting insn with uid = 148.
deleting insn with uid = 149.
deleting insn with uid = 152.
deleting insn with uid = 157.
deleting insn with uid = 162.
deleting insn with uid = 173.
deleting insn with uid = 174.
deleting insn with uid = 178.
deleting insn with uid = 190.
deleting insn with uid = 229.
deleting insn with uid = 235.
deleting insn with uid = 236.
verify found no changes in insn with uid = 155.
ending the processing of deferred insns

;; Function arm_add_memory (arm_add_memory)[0:1394] (unlikely executed)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { 7 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 9 count 14 (  1.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 9 count 14 (  1.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 9 count 14 (  1.8)

In insn 14, replacing
 (reg/f:SI 141)
 with (symbol_ref/v/f:SI ("*.LC17") [flags 0x82] <string_cst 0x11679af0>)
Changes to insn 14 not profitable

In insn 70, replacing
 (reg:SI 160 [+4 ])
 with (const_int 0 [0x0])
Changes to insn 70 not profitable

In insn 23, replacing
 (mult:SI (reg:SI 144)
        (reg:SI 136 [ D.25548 ]))
 with (mult:SI (reg:SI 136 [ D.25548 ])
        (const_int 12 [0xc]))
Changes to insn 23 not recognized
 Setting REG_EQUAL note

In insn 24, replacing
 (plus:SI (reg/f:SI 140)
        (const_int 4 [0x4]))
 with (const:SI (plus:SI (symbol_ref:SI ("meminfo") [flags 0xc0] <var_decl 0x114015a0 meminfo>)
            (const_int 4 [0x4])))
Changes to insn 24 not profitable

In insn 30, replacing
 (mem/s/j:SI (reg/v/f:SI 133 [ bank ]) [0 <variable>.start+0 S4 A32])
 with (mem/s/j:SI (plus:SI (reg:SI 143)
            (reg/f:SI 145)) [0 <variable>.start+0 S4 A32])
Changed insn 30
deferring rescan insn with uid = 30.
deferring rescan insn with uid = 30.

In insn 45, replacing
 (reg/f:SI 140)
 with (symbol_ref:SI ("meminfo") [flags 0xc0] <var_decl 0x114015a0 meminfo>)
Changes to insn 45 not profitable

In insn 46, replacing
 (reg/f:SI 140)
 with (symbol_ref:SI ("meminfo") [flags 0xc0] <var_decl 0x114015a0 meminfo>)
Changes to insn 46 not profitable


try_optimize_cfg iteration 1

deferring deletion of insn with uid = 53.
deferring deletion of insn with uid = 46.
deferring deletion of insn with uid = 45.
deferring deletion of insn with uid = 67.
Deleted 4 trivially dead insns

Number of successful forward propagations: 1



arm_add_memory

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={4d,4u} r1={2d,1u} r2={3d,1u} r3={3d,1u} r11={1d,7u} r12={2d} r13={1d,8u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={3d,2u} r25={1d,7u} r26={1d,6u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,1u} r134={1d,2u} r135={3d,2u} r136={1d,2u} r137={1d} r138={1d,4u,2d} r139={1d,1u} r140={1d,6u} r141={1d,1u} r143={1d,2u} r144={1d,1u} r145={1d,2u} r146={1d,1u,1d} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u,1d} r153={1d,1u} r154={1d} r155={1d} r156={1d,1u} r157={1d,1u} r159={1d} r160={1d,1u} 
;;    total ref usage 238{161d,73u,4e} in 37{36 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132
0[0,4] 1[4,2] 2[6,3] 3[9,3] 11[12,1] 12[13,2] 13[15,1] 14[16,2] 15[18,1] 16[19,1] 17[20,1] 18[21,1] 19[22,1] 20[23,1] 21[24,1] 22[25,1] 23[26,1] 24[27,3] 25[30,1] 26[31,1] 27[32,1] 28[33,1] 29[34,1] 30[35,1] 31[36,1] 32[37,1] 33[38,1] 34[39,1] 35[40,1] 36[41,1] 37[42,1] 38[43,1] 39[44,1] 40[45,1] 41[46,1] 42[47,1] 43[48,1] 44[49,1] 45[50,1] 46[51,1] 47[52,1] 48[53,1] 49[54,1] 50[55,1] 51[56,1] 52[57,1] 53[58,1] 54[59,1] 55[60,1] 56[61,1] 57[62,1] 58[63,1] 59[64,1] 60[65,1] 61[66,1] 62[67,1] 63[68,1] 64[69,1] 65[70,1] 66[71,1] 67[72,1] 68[73,1] 69[74,1] 70[75,1] 71[76,1] 72[77,1] 73[78,1] 74[79,1] 75[80,1] 76[81,1] 77[82,1] 78[83,1] 79[84,1] 80[85,1] 81[86,1] 82[87,1] 83[88,1] 84[89,1] 85[90,1] 86[91,1] 87[92,1] 88[93,1] 89[94,1] 90[95,1] 91[96,1] 92[97,1] 93[98,1] 94[99,1] 95[100,1] 96[101,1] 97[102,1] 98[103,1] 99[104,1] 100[105,1] 101[106,1] 102[107,1] 103[108,1] 104[109,1] 105[110,1] 106[111,1] 107[112,1] 108[113,1] 109[114,1] 110[115,1] 111[116,1] 112[117,1] 113[118,1] 114[119,1] 115[120,1] 116[121,1] 117[122,1] 118[123,1] 119[124,1] 120[125,1] 121[126,1] 122[127,1] 123[128,1] 124[129,1] 125[130,1] 126[131,1] 127[132,1] 133[133,1] 134[134,1] 135[135,3] 136[138,1] 137[139,1] 138[140,1] 139[141,1] 140[142,1] 141[143,1] 143[144,1] 144[145,1] 145[146,1] 146[147,1] 147[148,1] 148[149,1] 149[150,1] 150[151,1] 151[152,1] 152[153,1] 153[154,1] 154[155,1] 155[156,1] 156[157,1] 157[158,1] 159[159,1] 160[160,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 136 138 139 140
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 136 138 139 140
;; live  kill	
;; rd  in  	(10)
3, 5, 8, 11, 12, 14, 15, 17, 30, 31
;; rd  gen 	(5)
29, 138, 140, 141, 142
;; rd  kill	(7)
27, 28, 29, 138, 140, 141, 142

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 5 3 2 arch/arm/kernel/setup.c:463 (set (reg/v:SI 138 [ start ])
        (reg:SI 0 r0 [ start ])) 167 {*arm_movsi_insn} (nil))

(insn 3 2 4 2 arch/arm/kernel/setup.c:463 (set (reg/v:SI 139 [ size ])
        (reg:SI 1 r1 [ size ])) 167 {*arm_movsi_insn} (nil))

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 8 2 arch/arm/kernel/setup.c:464 (set (reg/f:SI 140)
        (symbol_ref:SI ("meminfo") [flags 0xc0] <var_decl 0x114015a0 meminfo>)) 167 {*arm_movsi_insn} (nil))

(insn 8 7 9 2 arch/arm/kernel/setup.c:464 (set (reg:SI 136 [ D.25548 ])
        (mem/s/j/c:SI (reg/f:SI 140) [0 meminfo.nr_banks+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 9 8 10 2 arch/arm/kernel/setup.c:466 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 136 [ D.25548 ])
            (const_int 7 [0x7]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 10 9 11 2 arch/arm/kernel/setup.c:466 (set (pc)
        (if_then_else (le (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 20)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 138 139 140
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 138 139 140
;; rd  out 	(15)
3, 5, 8, 11, 12, 14, 15, 17, 29, 30, 31, 138, 140, 141, 142


;; Succ edge  3 [0.0%]  (fallthru)
;; Succ edge  4 [100.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u9(11){ }u10(13){ }u11(25){ }u12(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 135 141 159 160
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; live  gen 	 0 [r0] 2 [r2] 3 [r3] 135 141 159 160
;; live  kill	 14 [lr]
;; rd  in  	(15)
3, 5, 8, 11, 12, 14, 15, 17, 29, 30, 31, 138, 140, 141, 142
;; rd  gen 	(5)
1, 137, 143, 159, 160
;; rd  kill	(12)
0, 1, 2, 3, 16, 17, 135, 136, 137, 143, 159, 160

;; Pred edge  2 [0.0%]  (fallthru)
(note 11 10 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 12 11 68 3 arch/arm/kernel/setup.c:467 (set (reg/f:SI 141)
        (symbol_ref/v/f:SI ("*.LC17") [flags 0x82] <string_cst 0x11679af0>)) 167 {*arm_movsi_insn} (nil))

(insn 68 12 14 3 arch/arm/kernel/setup.c:467 (set (reg:SI 160 [+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 14 68 69 3 arch/arm/kernel/setup.c:467 (set (reg:SI 0 r0)
        (reg/f:SI 141)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC17") [flags 0x82] <string_cst 0x11679af0>)
        (nil)))

(insn 69 14 70 3 arch/arm/kernel/setup.c:467 (set (reg:SI 2 r2)
        (reg/v:SI 138 [ start ])) 167 {*arm_movsi_insn} (nil))

(insn 70 69 16 3 arch/arm/kernel/setup.c:467 (set (reg:SI 3 r3 [+4 ])
        (reg:SI 160 [+4 ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(call_insn 16 70 17 3 arch/arm/kernel/setup.c:467 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:DI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 17 16 20 3 arch/arm/kernel/setup.c:469 (set (reg:SI 135 [ D.25554 ])
        (const_int -22 [0xffffffffffffffea])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 3 -> ( 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; rd  out 	(18)
1, 5, 8, 11, 12, 14, 15, 29, 30, 31, 137, 138, 140, 141, 142, 143, 159, 160


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u21(11){ }u22(13){ }u23(25){ }u24(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 138 139 140
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 139 140
;; lr  def 	 24 [cc] 133 134 143 144 145 146 147 148 149 150 151 152 153
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 138 139 140
;; live  gen 	 24 [cc] 133 134 143 144 145 146 147 148 149 150 151 152 153
;; live  kill	
;; rd  in  	(15)
3, 5, 8, 11, 12, 14, 15, 17, 29, 30, 31, 138, 140, 141, 142
;; rd  gen 	(14)
27, 133, 134, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154
;; rd  kill	(16)
27, 28, 29, 133, 134, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154

;; Pred edge  2 [100.0%] 
(code_label 20 17 21 4 74 "" [1 uses])

(note 21 20 22 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 22 21 23 4 arch/arm/kernel/setup.c:464 (set (reg:SI 144)
        (const_int 12 [0xc])) 167 {*arm_movsi_insn} (nil))

(insn 23 22 24 4 arch/arm/kernel/setup.c:464 (set (reg:SI 143)
        (mult:SI (reg:SI 144)
            (reg:SI 136 [ D.25548 ]))) 32 {*arm_mulsi3_v6} (expr_list:REG_EQUAL (mult:SI (reg:SI 136 [ D.25548 ])
            (const_int 12 [0xc]))
        (nil)))

(insn 24 23 25 4 arch/arm/kernel/setup.c:464 (set (reg/f:SI 145)
        (plus:SI (reg/f:SI 140)
            (const_int 4 [0x4]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("meminfo") [flags 0xc0] <var_decl 0x114015a0 meminfo>)
                (const_int 4 [0x4])))
        (nil)))

(insn 25 24 26 4 arch/arm/kernel/setup.c:464 (set (reg/v/f:SI 133 [ bank ])
        (plus:SI (reg:SI 143)
            (reg/f:SI 145))) 4 {*arm_addsi3} (nil))

(insn 26 25 27 4 arch/arm/kernel/setup.c:477 (set (reg:SI 147)
        (plus:SI (reg/v:SI 138 [ start ])
            (const_int 4080 [0xff0]))) 4 {*arm_addsi3} (nil))

(insn 27 26 28 4 arch/arm/kernel/setup.c:477 (set (reg:SI 146)
        (plus:SI (reg:SI 147)
            (const_int 15 [0xf]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (plus:SI (reg/v:SI 138 [ start ])
            (const_int 4095 [0xfff]))
        (nil)))

(insn 28 27 29 4 arch/arm/kernel/setup.c:477 (set (reg:SI 149)
        (and:SI (reg:SI 146)
            (const_int -4081 [0xfffffffffffff00f]))) 67 {*arm_andsi3_insn} (nil))

(insn 29 28 30 4 arch/arm/kernel/setup.c:477 (set (reg:SI 148)
        (and:SI (reg:SI 149)
            (const_int -16 [0xfffffffffffffff0]))) 67 {*arm_andsi3_insn} (expr_list:REG_EQUAL (and:SI (reg:SI 146)
            (const_int -4096 [0xfffffffffffff000]))
        (nil)))

(insn 30 29 31 4 arch/arm/kernel/setup.c:477 (set (mem/s/j:SI (plus:SI (reg:SI 143)
                (reg/f:SI 145)) [0 <variable>.start+0 S4 A32])
        (reg:SI 148)) 167 {*arm_movsi_insn} (nil))

(insn 31 30 32 4 arch/arm/kernel/setup.c:478 (set (reg:SI 151)
        (ashift:SI (reg/v:SI 138 [ start ])
            (const_int 20 [0x14]))) 117 {*arm_shiftsi3} (nil))

(insn 32 31 33 4 arch/arm/kernel/setup.c:478 (set (reg:SI 150)
        (lshiftrt:SI (reg:SI 151)
            (const_int 20 [0x14]))) 117 {*arm_shiftsi3} (expr_list:REG_EQUAL (and:SI (reg/v:SI 138 [ start ])
            (const_int 4095 [0xfff]))
        (nil)))

(insn 33 32 34 4 arch/arm/kernel/setup.c:478 (set (reg:SI 152)
        (minus:SI (reg/v:SI 139 [ size ])
            (reg:SI 150))) 28 {*arm_subsi3_insn} (nil))

(insn 34 33 35 4 arch/arm/kernel/setup.c:478 (set (reg:SI 153)
        (and:SI (reg:SI 152)
            (const_int -4081 [0xfffffffffffff00f]))) 67 {*arm_andsi3_insn} (nil))

(insn 35 34 36 4 arch/arm/kernel/setup.c:478 (set (reg:SI 134 [ D.25558 ])
        (and:SI (reg:SI 153)
            (const_int -16 [0xfffffffffffffff0]))) 67 {*arm_andsi3_insn} (expr_list:REG_EQUAL (and:SI (reg:SI 152)
            (const_int -4096 [0xfffffffffffff000]))
        (nil)))

(insn 36 35 37 4 arch/arm/kernel/setup.c:478 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 133 [ bank ])
                (const_int 4 [0x4])) [0 <variable>.size+0 S4 A32])
        (reg:SI 134 [ D.25558 ])) 167 {*arm_movsi_insn} (nil))

(insn 37 36 38 4 arch/arm/kernel/setup.c:484 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 134 [ D.25558 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 38 37 39 4 arch/arm/kernel/setup.c:484 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 43)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
        (nil)))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
;; rd  out 	(28)
3, 5, 8, 11, 12, 14, 15, 17, 27, 30, 31, 133, 134, 138, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154


;; Succ edge  5 [39.0%]  (fallthru)
;; Succ edge  6 [61.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u50(11){ }u51(13){ }u52(25){ }u53(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 135
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 135
;; live  kill	
;; rd  in  	(28)
3, 5, 8, 11, 12, 14, 15, 17, 27, 30, 31, 133, 134, 138, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154
;; rd  gen 	(1)
136
;; rd  kill	(3)
135, 136, 137

;; Pred edge  4 [39.0%]  (fallthru)
(note 39 38 40 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 40 39 43 5 arch/arm/kernel/setup.c:485 (set (reg:SI 135 [ D.25554 ])
        (const_int -22 [0xffffffffffffffea])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 5 -> ( 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; rd  out 	(29)
3, 5, 8, 11, 12, 14, 15, 17, 27, 30, 31, 133, 134, 136, 138, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u54(11){ }u55(13){ }u56(25){ }u57(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 135 154 155 156 157
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
;; live  gen 	 135 154 155 156 157
;; live  kill	
;; rd  in  	(28)
3, 5, 8, 11, 12, 14, 15, 17, 27, 30, 31, 133, 134, 138, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154
;; rd  gen 	(5)
135, 155, 156, 157, 158
;; rd  kill	(7)
135, 136, 137, 155, 156, 157, 158

;; Pred edge  4 [61.0%] 
(code_label 43 40 44 6 76 "" [1 uses])

(note 44 43 47 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 47 44 48 6 arch/arm/kernel/setup.c:487 (set (reg:SI 156 [ meminfo.nr_banks ])
        (mem/s/j/c:SI (reg/f:SI 140) [0 meminfo.nr_banks+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 48 47 49 6 arch/arm/kernel/setup.c:487 (set (reg:SI 157)
        (plus:SI (reg:SI 156 [ meminfo.nr_banks ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 49 48 50 6 arch/arm/kernel/setup.c:487 (set (mem/s/j/c:SI (reg/f:SI 140) [0 meminfo.nr_banks+0 S4 A32])
        (reg:SI 157)) 167 {*arm_movsi_insn} (nil))

(insn 50 49 51 6 arch/arm/kernel/setup.c:488 (set (reg:SI 135 [ D.25554 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 6 -> ( 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; rd  out 	(33)
3, 5, 8, 11, 12, 14, 15, 17, 27, 30, 31, 133, 134, 135, 138, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 3 5 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u64(11){ }u65(13){ }u66(25){ }u67(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 0 [r0] 137
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  gen 	 0 [r0] 137
;; live  kill	
;; rd  in  	(40)
1, 3, 5, 8, 11, 12, 14, 15, 17, 27, 29, 30, 31, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160
;; rd  gen 	(2)
0, 139
;; rd  kill	(5)
0, 1, 2, 3, 139

;; Pred edge  3 [100.0%]  (fallthru)
;; Pred edge  5 [100.0%]  (fallthru)
;; Pred edge  6 [100.0%]  (fallthru)
(code_label 51 50 52 7 75 "" [0 uses])

(note 52 51 57 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 57 52 63 7 arch/arm/kernel/setup.c:489 (set (reg/i:SI 0 r0)
        (reg:SI 135 [ D.25554 ])) 167 {*arm_movsi_insn} (nil))

(insn 63 57 0 7 arch/arm/kernel/setup.c:489 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 7 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(40)
0, 5, 8, 11, 12, 14, 15, 17, 27, 29, 30, 31, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
deleting insn with uid = 45.
deleting insn with uid = 46.
deleting insn with uid = 53.
deleting insn with uid = 67.
verify found no changes in insn with uid = 30.
ending the processing of deferred insns

;; Function early_mem (early_mem)[0:1395] (unlikely executed)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 6 5 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 9 count 10 (  1.2)
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 9 count 14 (  1.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 9 count 14 (  1.8)

In insn 11, replacing
 (reg/f:SI 140)
 with (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
Changes to insn 11 not profitable

In insn 13, replacing
 (reg:SI 143)
 with (const_int 1 [0x1])
Changes to insn 13 not recognized
 Setting REG_EQUAL note

In insn 50, replacing
 (reg:SI 138 [ <result> ])
 with (const_int 0 [0x0])
Changes to insn 50 not profitable


try_optimize_cfg iteration 1

deferring deletion of insn with uid = 40.
deferring deletion of insn with uid = 24.
deferring deletion of insn with uid = 15.
deferring deletion of insn with uid = 11.
Deleted 4 trivially dead insns

Number of successful forward propagations: 0



early_mem

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={8d,8u} r1={7d,3u} r2={4d} r3={4d} r11={1d,7u} r12={4d} r13={1d,10u} r14={4d,1u} r15={3d} r16={3d} r17={3d} r18={3d} r19={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={5d,2u} r25={1d,9u,1d} r26={1d,6u} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r81={3d} r82={3d} r83={3d} r84={3d} r85={3d} r86={3d} r87={3d} r88={3d} r89={3d} r90={3d} r91={3d} r92={3d} r93={3d} r94={3d} r95={3d} r96={3d} r97={3d} r98={3d} r99={3d} r100={3d} r101={3d} r102={3d} r103={3d} r104={3d} r105={3d} r106={3d} r107={3d} r108={3d} r109={3d} r110={3d} r111={3d} r112={3d} r113={3d} r114={3d} r115={3d} r116={3d} r117={3d} r118={3d} r119={3d} r120={3d} r121={3d} r122={3d} r123={3d} r124={3d} r125={3d} r126={3d} r127={3d} r133={2d,2u} r134={1d,2u} r136={1d,2u} r138={1d,1u} r139={1d,1u} r140={1d,3u} r141={1d,3u} r142={1d} r143={1d,1u} r144={1d,1u} r145={1d} r146={1d,1u} r147={1d,1u} r148={1d,1u} r150={1d} r152={1d} 
;;    total ref usage 453{387d,65u,1e} in 30{27 regular + 3 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369
0[0,8] 1[8,7] 2[15,4] 3[19,4] 11[23,1] 12[24,4] 13[28,1] 14[29,4] 15[33,3] 16[36,3] 17[39,3] 18[42,3] 19[45,3] 20[48,3] 21[51,3] 22[54,3] 23[57,3] 24[60,5] 25[65,1] 26[66,1] 27[67,3] 28[70,3] 29[73,3] 30[76,3] 31[79,3] 32[82,3] 33[85,3] 34[88,3] 35[91,3] 36[94,3] 37[97,3] 38[100,3] 39[103,3] 40[106,3] 41[109,3] 42[112,3] 43[115,3] 44[118,3] 45[121,3] 46[124,3] 47[127,3] 48[130,3] 49[133,3] 50[136,3] 51[139,3] 52[142,3] 53[145,3] 54[148,3] 55[151,3] 56[154,3] 57[157,3] 58[160,3] 59[163,3] 60[166,3] 61[169,3] 62[172,3] 63[175,3] 64[178,3] 65[181,3] 66[184,3] 67[187,3] 68[190,3] 69[193,3] 70[196,3] 71[199,3] 72[202,3] 73[205,3] 74[208,3] 75[211,3] 76[214,3] 77[217,3] 78[220,3] 79[223,3] 80[226,3] 81[229,3] 82[232,3] 83[235,3] 84[238,3] 85[241,3] 86[244,3] 87[247,3] 88[250,3] 89[253,3] 90[256,3] 91[259,3] 92[262,3] 93[265,3] 94[268,3] 95[271,3] 96[274,3] 97[277,3] 98[280,3] 99[283,3] 100[286,3] 101[289,3] 102[292,3] 103[295,3] 104[298,3] 105[301,3] 106[304,3] 107[307,3] 108[310,3] 109[313,3] 110[316,3] 111[319,3] 112[322,3] 113[325,3] 114[328,3] 115[331,3] 116[334,3] 117[337,3] 118[340,3] 119[343,3] 120[346,3] 121[349,3] 122[352,3] 123[355,3] 124[358,3] 125[361,3] 126[364,3] 127[367,3] 133[370,2] 134[372,1] 136[373,1] 138[374,1] 139[375,1] 140[376,1] 141[377,1] 142[378,1] 143[379,1] 144[380,1] 145[381,1] 146[382,1] 147[383,1] 148[384,1] 150[385,1] 152[386,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 139 140 141
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 139 140 141
;; live  kill	
;; rd  in  	(10)
7, 14, 18, 22, 23, 27, 28, 32, 65, 66
;; rd  gen 	(4)
64, 375, 376, 377
;; rd  kill	(8)
60, 61, 62, 63, 64, 375, 376, 377

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 arch/arm/kernel/setup.c:496 (set (reg/v/f:SI 139 [ p ])
        (reg:SI 0 r0 [ p ])) 167 {*arm_movsi_insn} (nil))

(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 3 7 2 arch/arm/kernel/setup.c:507 (set (reg/f:SI 140)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 7 6 8 2 arch/arm/kernel/setup.c:507 (set (reg:SI 141 [ usermem ])
        (mem/c/i:SI (plus:SI (reg/f:SI 140)
                (const_int 1028 [0x404])) [0 usermem+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 8 7 9 2 arch/arm/kernel/setup.c:507 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 141 [ usermem ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 9 8 10 2 arch/arm/kernel/setup.c:507 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 17)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 141
;; rd  out 	(14)
7, 14, 18, 22, 23, 27, 28, 32, 64, 65, 66, 375, 376, 377


;; Succ edge  3 [50.0%]  (fallthru)
;; Succ edge  4 [50.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(11){ }u9(13){ }u10(25){ }u11(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141
;; lr  def 	 142 143 144 145
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 141
;; live  gen 	 142 143 144 145
;; live  kill	
;; rd  in  	(14)
7, 14, 18, 22, 23, 27, 28, 32, 64, 65, 66, 375, 376, 377
;; rd  gen 	(4)
378, 379, 380, 381
;; rd  kill	(4)
378, 379, 380, 381

;; Pred edge  2 [50.0%]  (fallthru)
(note 10 9 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 12 10 13 3 arch/arm/kernel/setup.c:508 (set (reg:SI 143)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 13 12 14 3 arch/arm/kernel/setup.c:508 (set (mem/c/i:SI (plus:SI (reg/f:SI 140)
                (const_int 1028 [0x404])) [0 usermem+0 S4 A32])
        (reg:SI 143)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(insn 14 13 16 3 arch/arm/kernel/setup.c:509 (set (reg/f:SI 144)
        (symbol_ref:SI ("meminfo") [flags 0xc0] <var_decl 0x114015a0 meminfo>)) 167 {*arm_movsi_insn} (nil))

(insn 16 14 17 3 arch/arm/kernel/setup.c:509 (set (mem/s/j/c:SI (reg/f:SI 144) [0 meminfo.nr_banks+0 S4 A32])
        (reg:SI 141 [ usermem ])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; rd  out 	(18)
7, 14, 18, 22, 23, 27, 28, 32, 64, 65, 66, 375, 376, 377, 378, 379, 380, 381


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u18(11){ }u19(13){ }u20(25){ }u21(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 136 146 147 152
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 134 136 146 147 152
;; live  kill	 14 [lr]
;; rd  in  	(18)
7, 14, 18, 22, 23, 27, 28, 32, 64, 65, 66, 375, 376, 377, 378, 379, 380, 381
;; rd  gen 	(8)
5, 12, 62, 372, 373, 382, 383, 386
;; rd  kill	(29)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 29, 30, 31, 32, 60, 61, 62, 63, 64, 372, 373, 382, 383, 386

;; Pred edge  2 [50.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 17 16 18 4 82 "" [1 uses])

(note 18 17 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 19 18 20 4 arch/arm/kernel/setup.c:513 (set (reg/f:SI 146)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -4 [0xfffffffffffffffc]))) 4 {*arm_addsi3} (nil))

(insn 20 19 21 4 arch/arm/kernel/setup.c:513 (set (reg:SI 0 r0)
        (reg/v/f:SI 139 [ p ])) 167 {*arm_movsi_insn} (nil))

(insn 21 20 22 4 arch/arm/kernel/setup.c:513 (set (reg:SI 1 r1)
        (reg/f:SI 146)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -4 [0xfffffffffffffffc]))
        (nil)))

(call_insn 22 21 60 4 arch/arm/kernel/setup.c:513 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memparse") [flags 0x41] <function_decl 0x10a82600 memparse>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 60 22 25 4 arch/arm/kernel/setup.c:513 (set (reg/v:SI 134 [ size ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 25 60 26 4 arch/arm/kernel/setup.c:514 (set (reg/f:SI 136 [ endp.353 ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 endp+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 26 25 27 4 arch/arm/kernel/setup.c:514 (set (reg:SI 147)
        (zero_extend:SI (mem:QI (reg/f:SI 136 [ endp.353 ]) [0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 27 26 28 4 arch/arm/kernel/setup.c:514 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 147)
            (const_int 64 [0x40]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 28 27 29 4 arch/arm/kernel/setup.c:514 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 33)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 1990 [0x7c6])
        (nil)))
;; End of basic block 4 -> ( 6 5)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136
;; rd  out 	(22)
5, 12, 18, 22, 23, 27, 28, 62, 65, 66, 372, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 386


;; Succ edge  6 [19.9%] 
;; Succ edge  5 [80.1%]  (fallthru)

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u35(11){ }u36(13){ }u37(25){ }u38(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; live  gen 	 133
;; live  kill	
;; rd  in  	(22)
5, 12, 18, 22, 23, 27, 28, 62, 65, 66, 372, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 386
;; rd  gen 	(1)
371
;; rd  kill	(2)
370, 371

;; Pred edge  4 [80.1%]  (fallthru)
(note 29 28 30 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 30 29 33 5 arch/arm/kernel/setup.c:512 (set (reg/v:SI 133 [ start ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 5 -> ( 7)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134
;; rd  out 	(23)
5, 12, 18, 22, 23, 27, 28, 62, 65, 66, 371, 372, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 386


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u39(11){ }u40(13){ }u41(25){ }u42(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 148 150
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136
;; live  gen 	 0 [r0] 1 [r1] 133 148 150
;; live  kill	 14 [lr]
;; rd  in  	(22)
5, 12, 18, 22, 23, 27, 28, 62, 65, 66, 372, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 386
;; rd  gen 	(5)
3, 10, 370, 384, 385
;; rd  kill	(23)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 29, 30, 31, 32, 370, 371, 384, 385

;; Pred edge  4 [19.9%] 
(code_label 33 30 34 6 83 "" [1 uses])

(note 34 33 35 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 35 34 36 6 arch/arm/kernel/setup.c:515 (set (reg/f:SI 148)
        (plus:SI (reg/f:SI 136 [ endp.353 ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 36 35 37 6 arch/arm/kernel/setup.c:515 (set (reg:SI 0 r0)
        (reg/f:SI 148)) 167 {*arm_movsi_insn} (nil))

(insn 37 36 38 6 arch/arm/kernel/setup.c:515 (set (reg:SI 1 r1)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(call_insn 38 37 62 6 arch/arm/kernel/setup.c:515 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memparse") [flags 0x41] <function_decl 0x10a82600 memparse>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 62 38 41 6 arch/arm/kernel/setup.c:515 (set (reg/v:SI 133 [ start ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))
;; End of basic block 6 -> ( 7)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134
;; rd  out 	(25)
3, 10, 18, 22, 23, 27, 28, 62, 65, 66, 370, 372, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 5 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u50(11){ }u51(13){ }u52(25){ }u53(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 138
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134
;; live  gen 	 0 [r0] 1 [r1] 138
;; live  kill	 14 [lr]
;; rd  in  	(28)
3, 5, 10, 12, 18, 22, 23, 27, 28, 62, 65, 66, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386
;; rd  gen 	(2)
0, 374
;; rd  kill	(13)
0, 1, 2, 3, 4, 5, 6, 7, 29, 30, 31, 32, 374

;; Pred edge  5 [100.0%]  (fallthru)
;; Pred edge  6 [100.0%]  (fallthru)
(code_label 41 62 42 7 84 "" [0 uses])

(note 42 41 43 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 43 42 44 7 arch/arm/kernel/setup.c:517 (set (reg:SI 0 r0)
        (reg/v:SI 133 [ start ])) 167 {*arm_movsi_insn} (nil))

(insn 44 43 45 7 arch/arm/kernel/setup.c:517 (set (reg:SI 1 r1)
        (reg/v:SI 134 [ size ])) 167 {*arm_movsi_insn} (nil))

(call_insn 45 44 46 7 arch/arm/kernel/setup.c:517 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("arm_add_memory") [flags 0x3] <function_decl 0x113ee680 arm_add_memory>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 46 45 50 7 arch/arm/kernel/setup.c:520 (set (reg:SI 138 [ <result> ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 50 46 56 7 arch/arm/kernel/setup.c:520 (set (reg/i:SI 0 r0)
        (reg:SI 138 [ <result> ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 56 50 0 7 arch/arm/kernel/setup.c:520 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 7 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(28)
0, 10, 12, 18, 22, 23, 27, 28, 62, 65, 66, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
deleting insn with uid = 11.
deleting insn with uid = 15.
deleting insn with uid = 24.
deleting insn with uid = 40.
ending the processing of deferred insns

;; Function parse_tag_mem32 (parse_tag_mem32)[0:1399] (unlikely executed)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


try_optimize_cfg iteration 1


Number of successful forward propagations: 0



parse_tag_mem32

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp]
;;  ref usage 	r0={3d,3u} r1={3d,1u} r2={2d} r3={2d} r11={1d,2u} r12={2d} r13={1d,3u} r14={1d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,2u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r135={1d,2u} 
;;    total ref usage 144{129d,15u,0e} in 4{3 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127
0[0,3] 1[3,3] 2[6,2] 3[8,2] 11[10,1] 12[11,2] 13[13,1] 14[14,1] 15[15,1] 16[16,1] 17[17,1] 18[18,1] 19[19,1] 20[20,1] 21[21,1] 22[22,1] 23[23,1] 24[24,1] 25[25,1] 26[26,1] 27[27,1] 28[28,1] 29[29,1] 30[30,1] 31[31,1] 32[32,1] 33[33,1] 34[34,1] 35[35,1] 36[36,1] 37[37,1] 38[38,1] 39[39,1] 40[40,1] 41[41,1] 42[42,1] 43[43,1] 44[44,1] 45[45,1] 46[46,1] 47[47,1] 48[48,1] 49[49,1] 50[50,1] 51[51,1] 52[52,1] 53[53,1] 54[54,1] 55[55,1] 56[56,1] 57[57,1] 58[58,1] 59[59,1] 60[60,1] 61[61,1] 62[62,1] 63[63,1] 64[64,1] 65[65,1] 66[66,1] 67[67,1] 68[68,1] 69[69,1] 70[70,1] 71[71,1] 72[72,1] 73[73,1] 74[74,1] 75[75,1] 76[76,1] 77[77,1] 78[78,1] 79[79,1] 80[80,1] 81[81,1] 82[82,1] 83[83,1] 84[84,1] 85[85,1] 86[86,1] 87[87,1] 88[88,1] 89[89,1] 90[90,1] 91[91,1] 92[92,1] 93[93,1] 94[94,1] 95[95,1] 96[96,1] 97[97,1] 98[98,1] 99[99,1] 100[100,1] 101[101,1] 102[102,1] 103[103,1] 104[104,1] 105[105,1] 106[106,1] 107[107,1] 108[108,1] 109[109,1] 110[110,1] 111[111,1] 112[112,1] 113[113,1] 114[114,1] 115[115,1] 116[116,1] 117[117,1] 118[118,1] 119[119,1] 120[120,1] 121[121,1] 122[122,1] 123[123,1] 124[124,1] 125[125,1] 126[126,1] 127[127,1] 135[128,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 135
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 135
;; live  kill	
;; rd  in  	(10)
2, 5, 7, 9, 10, 12, 13, 14, 25, 26
;; rd  gen 	(2)
0, 128
;; rd  kill	(4)
0, 1, 2, 128

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 arch/arm/kernel/setup.c:606 (set (reg/v/f:SI 135 [ tag ])
        (reg:SI 0 r0 [ tag ])) 167 {*arm_movsi_insn} (nil))

(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 3 7 2 arch/arm/kernel/setup.c:607 (set (reg:SI 0 r0)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 135 [ tag ])
                (const_int 12 [0xc])) [0 <variable>.u.mem.start+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 7 6 8 2 arch/arm/kernel/setup.c:607 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 135 [ tag ])
                (const_int 8 [0x8])) [0 <variable>.u.mem.size+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn/j 8 7 0 2 arch/arm/kernel/setup.c:607 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("arm_add_memory") [flags 0x3] <function_decl 0x113ee680 arm_add_memory>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(11)
0, 5, 7, 9, 10, 12, 13, 14, 25, 26, 128


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function cpu_init (cpu_init)[0:1391]

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 4 count 5 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 4 count 8 (  1.6)
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 4 count 8 (  1.6)

In insn 13, replacing
 (reg/f:SI 137)
 with (symbol_ref/v/f:SI ("*.LC18") [flags 0x82] <string_cst 0x11665200>)
Changes to insn 13 not profitable

In insn 18, replacing
 (reg/f:SI 138)
 with (symbol_ref/v/f:SI ("*.LC19") [flags 0x82] <string_cst 0x116eb800>)
Changes to insn 18 not profitable

In insn 19, replacing
 (reg:SI 139)
 with (const_int 359 [0x167])
Changes to insn 19 not profitable

In insn 26, replacing
 (plus:SI (reg/f:SI 140)
        (const_int 32 [0x20]))
 with (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
            (const_int 32 [0x20])))
Changes to insn 26 not profitable


try_optimize_cfg iteration 1

deferring deletion of insn with uid = 5.
Deleted 1 trivially dead insns

Number of successful forward propagations: 0



cpu_init

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={6d,2u} r1={6d,2u} r2={4d} r3={4d} r11={1d,4u} r12={4d} r13={1d,9u,1d} r14={5d,1u} r15={3d} r16={3d} r17={3d} r18={3d} r19={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={4d,1u} r25={1d,4u} r26={1d,3u} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r81={3d} r82={3d} r83={3d} r84={3d} r85={3d} r86={3d} r87={3d} r88={3d} r89={3d} r90={3d} r91={3d} r92={3d} r93={3d} r94={3d} r95={3d} r96={3d} r97={3d} r98={3d} r99={3d} r100={3d} r101={3d} r102={3d} r103={3d} r104={3d} r105={3d} r106={3d} r107={3d} r108={3d} r109={3d} r110={3d} r111={3d} r112={3d} r113={3d} r114={3d} r115={3d} r116={3d} r117={3d} r118={3d} r119={3d} r120={3d} r121={3d} r122={3d} r123={3d} r124={3d} r125={3d} r126={3d} r127={3d} r133={1d} r134={1d,3u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} 
;;    total ref usage 417{378d,38u,1e} in 20{17 regular + 3 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366
0[0,6] 1[6,6] 2[12,4] 3[16,4] 11[20,1] 12[21,4] 13[25,1] 14[26,5] 15[31,3] 16[34,3] 17[37,3] 18[40,3] 19[43,3] 20[46,3] 21[49,3] 22[52,3] 23[55,3] 24[58,4] 25[62,1] 26[63,1] 27[64,3] 28[67,3] 29[70,3] 30[73,3] 31[76,3] 32[79,3] 33[82,3] 34[85,3] 35[88,3] 36[91,3] 37[94,3] 38[97,3] 39[100,3] 40[103,3] 41[106,3] 42[109,3] 43[112,3] 44[115,3] 45[118,3] 46[121,3] 47[124,3] 48[127,3] 49[130,3] 50[133,3] 51[136,3] 52[139,3] 53[142,3] 54[145,3] 55[148,3] 56[151,3] 57[154,3] 58[157,3] 59[160,3] 60[163,3] 61[166,3] 62[169,3] 63[172,3] 64[175,3] 65[178,3] 66[181,3] 67[184,3] 68[187,3] 69[190,3] 70[193,3] 71[196,3] 72[199,3] 73[202,3] 74[205,3] 75[208,3] 76[211,3] 77[214,3] 78[217,3] 79[220,3] 80[223,3] 81[226,3] 82[229,3] 83[232,3] 84[235,3] 85[238,3] 86[241,3] 87[244,3] 88[247,3] 89[250,3] 90[253,3] 91[256,3] 92[259,3] 93[262,3] 94[265,3] 95[268,3] 96[271,3] 97[274,3] 98[277,3] 99[280,3] 100[283,3] 101[286,3] 102[289,3] 103[292,3] 104[295,3] 105[298,3] 106[301,3] 107[304,3] 108[307,3] 109[310,3] 110[313,3] 111[316,3] 112[319,3] 113[322,3] 114[325,3] 115[328,3] 116[331,3] 117[334,3] 118[337,3] 119[340,3] 120[343,3] 121[346,3] 122[349,3] 123[352,3] 124[355,3] 125[358,3] 126[361,3] 127[364,3] 133[367,1] 134[368,1] 135[369,1] 136[370,1] 137[371,1] 138[372,1] 139[373,1] 140[374,1] 141[375,1] 142[376,1] 143[377,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 133 134 135 136
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 133 134 135 136
;; live  kill	
;; rd  in  	(10)
5, 11, 15, 19, 20, 24, 25, 30, 62, 63
;; rd  gen 	(5)
61, 367, 368, 369, 370
;; rd  kill	(8)
58, 59, 60, 61, 367, 368, 369, 370

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 2 7 2 arch/arm/kernel/setup.c:354 (set (reg:SI 136)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 7 6 8 2 arch/arm/kernel/setup.c:354 (set (reg:SI 135)
        (and:SI (reg:SI 136)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
            (const_int -8192 [0xffffffffffffe000]))
        (nil)))

(insn 8 7 9 2 arch/arm/kernel/setup.c:354 (set (reg/v:SI 134 [ cpu ])
        (mem/s/j:SI (plus:SI (reg:SI 135)
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 9 8 10 2 arch/arm/kernel/setup.c:357 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 134 [ cpu ])
            (const_int 1 [0x1]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 10 9 11 2 arch/arm/kernel/setup.c:357 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 22)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; rd  out 	(15)
5, 11, 15, 19, 20, 24, 25, 30, 61, 62, 63, 367, 368, 369, 370


;; Succ edge  3 [0.0%]  (fallthru)
;; Succ edge  4 [100.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u11(11){ }u12(13){ }u13(25){ }u14(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 137 138 139
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; live  gen 	 0 [r0] 1 [r1] 137 138 139
;; live  kill	 14 [lr]
;; rd  in  	(15)
5, 11, 15, 19, 20, 24, 25, 30, 61, 62, 63, 367, 368, 369, 370
;; rd  gen 	(3)
371, 372, 373
;; rd  kill	(8)
26, 27, 28, 29, 30, 371, 372, 373

;; Pred edge  2 [0.0%]  (fallthru)
(note 11 10 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 12 11 13 3 arch/arm/kernel/setup.c:358 (set (reg/f:SI 137)
        (symbol_ref/v/f:SI ("*.LC18") [flags 0x82] <string_cst 0x11665200>)) 167 {*arm_movsi_insn} (nil))

(insn 13 12 14 3 arch/arm/kernel/setup.c:358 (set (reg:SI 0 r0)
        (reg/f:SI 137)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC18") [flags 0x82] <string_cst 0x11665200>)
        (nil)))

(insn 14 13 15 3 arch/arm/kernel/setup.c:358 (set (reg:SI 1 r1)
        (reg/v:SI 134 [ cpu ])) 167 {*arm_movsi_insn} (nil))

(call_insn 15 14 16 3 arch/arm/kernel/setup.c:358 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 16 15 17 3 arch/arm/kernel/setup.c:359 (set (reg/f:SI 138)
        (symbol_ref/v/f:SI ("*.LC19") [flags 0x82] <string_cst 0x116eb800>)) 167 {*arm_movsi_insn} (nil))

(insn 17 16 18 3 arch/arm/kernel/setup.c:359 (set (reg:SI 139)
        (const_int 359 [0x167])) 167 {*arm_movsi_insn} (nil))

(insn 18 17 19 3 arch/arm/kernel/setup.c:359 (set (reg:SI 0 r0)
        (reg/f:SI 138)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC19") [flags 0x82] <string_cst 0x116eb800>)
        (nil)))

(insn 19 18 20 3 arch/arm/kernel/setup.c:359 (set (reg:SI 1 r1)
        (reg:SI 139)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 359 [0x167])
        (nil)))

(call_insn 20 19 22 3 arch/arm/kernel/setup.c:359 (parallel [
            (call (mem:SI (symbol_ref:SI ("__bug") [flags 0x41] <function_decl 0x10a67100 __bug>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_NORETURN (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 3 -> ()
;; lr  out 	 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(17)
5, 11, 15, 19, 20, 24, 25, 61, 62, 63, 367, 368, 369, 370, 371, 372, 373



;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u25(11){ }u26(13){ }u27(25){ }u28(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 140 141 142 143
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; live  gen 	 140 141 142 143
;; live  kill	 14 [lr]
;; rd  in  	(15)
5, 11, 15, 19, 20, 24, 25, 30, 61, 62, 63, 367, 368, 369, 370
;; rd  gen 	(4)
374, 375, 376, 377
;; rd  kill	(9)
26, 27, 28, 29, 30, 374, 375, 376, 377

;; Pred edge  2 [100.0%] 
(code_label 22 20 23 4 91 "" [1 uses])

(note 23 22 24 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(call_insn 24 23 25 4 arch/arm/kernel/setup.c:362 (parallel [
            (call (mem:SI (symbol_ref:SI ("cpu_v7_proc_init") [flags 0x41] <function_decl 0x112a3680 cpu_v7_proc_init>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(insn 25 24 26 4 arch/arm/kernel/setup.c:377 (set (reg/f:SI 140)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 26 25 27 4 arch/arm/kernel/setup.c:377 (set (reg/f:SI 141)
        (plus:SI (reg/f:SI 140)
            (const_int 32 [0x20]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 32 [0x20])))
        (nil)))

(insn 27 26 28 4 arch/arm/kernel/setup.c:377 (set (reg:SI 142)
        (ashift:SI (reg/v:SI 134 [ cpu ])
            (const_int 6 [0x6]))) 117 {*arm_shiftsi3} (nil))

(insn 28 27 29 4 arch/arm/kernel/setup.c:377 (set (reg:SI 143)
        (plus:SI (reg/f:SI 141)
            (reg:SI 142))) 4 {*arm_addsi3} (nil))

(insn 29 28 0 4 arch/arm/kernel/setup.c:377 (parallel [
            (asm_operands/v ("msr	cpsr_c, %1
	add	r14, %0, %2
	mov	sp, r14
	msr	cpsr_c, %3
	add	r14, %0, %4
	mov	sp, r14
	msr	cpsr_c, %5
	add	r14, %0, %6
	mov	sp, r14
	msr	cpsr_c, %7") ("") 0 [
                    (reg:SI 143)
                    (const_int 210 [0xd2])
                    (const_int 0 [0x0])
                    (const_int 215 [0xd7])
                    (const_int 12 [0xc])
                    (const_int 219 [0xdb])
                    (const_int 24 [0x18])
                    (const_int 211 [0xd3])
                ]
                 [
                    (asm_input:SI ("r") 0)
                    (asm_input:SI ("I") 0)
                    (asm_input:SI ("I") 0)
                    (asm_input:SI ("I") 0)
                    (asm_input:SI ("I") 0)
                    (asm_input:SI ("I") 0)
                    (asm_input:SI ("I") 0)
                    (asm_input:SI ("I") 0)
                ] 10446439)
            (clobber (reg:QI 14 lr))
        ]) -1 (nil))
;; End of basic block 4 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(18)
5, 11, 15, 19, 20, 24, 25, 61, 62, 63, 367, 368, 369, 370, 374, 375, 376, 377


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
deleting insn with uid = 5.
ending the processing of deferred insns

;; Function early_print (early_print)[0:1389] (unlikely executed)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)

In insn 16, replacing
 (reg/f:SI 136)
 with (symbol_ref/v/f:SI ("*.LC20") [flags 0x82] <string_cst 0x116ed820>)
Changes to insn 16 not profitable


try_optimize_cfg iteration 1

deferring deletion of insn with uid = 15.
Deleted 1 trivially dead insns

Number of successful forward propagations: 0



early_print

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr]
;;  ref usage 	r0={5d,2u} r1={5d,2u} r2={4d,1u} r3={4d,1u} r11={1d,2u} r12={3d} r13={1d,4u} r14={3d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={1d,4u,3d} r26={1d,3u,2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r133={1d,1u} r134={1d,2u} r135={1d,3u} r136={1d,1u} r137={1d} 
;;    total ref usage 287{255d,27u,5e} in 13{11 regular + 2 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249
0[0,5] 1[5,5] 2[10,4] 3[14,4] 11[18,1] 12[19,3] 13[22,1] 14[23,3] 15[26,2] 16[28,2] 17[30,2] 18[32,2] 19[34,2] 20[36,2] 21[38,2] 22[40,2] 23[42,2] 24[44,2] 25[46,1] 26[47,1] 27[48,2] 28[50,2] 29[52,2] 30[54,2] 31[56,2] 32[58,2] 33[60,2] 34[62,2] 35[64,2] 36[66,2] 37[68,2] 38[70,2] 39[72,2] 40[74,2] 41[76,2] 42[78,2] 43[80,2] 44[82,2] 45[84,2] 46[86,2] 47[88,2] 48[90,2] 49[92,2] 50[94,2] 51[96,2] 52[98,2] 53[100,2] 54[102,2] 55[104,2] 56[106,2] 57[108,2] 58[110,2] 59[112,2] 60[114,2] 61[116,2] 62[118,2] 63[120,2] 64[122,2] 65[124,2] 66[126,2] 67[128,2] 68[130,2] 69[132,2] 70[134,2] 71[136,2] 72[138,2] 73[140,2] 74[142,2] 75[144,2] 76[146,2] 77[148,2] 78[150,2] 79[152,2] 80[154,2] 81[156,2] 82[158,2] 83[160,2] 84[162,2] 85[164,2] 86[166,2] 87[168,2] 88[170,2] 89[172,2] 90[174,2] 91[176,2] 92[178,2] 93[180,2] 94[182,2] 95[184,2] 96[186,2] 97[188,2] 98[190,2] 99[192,2] 100[194,2] 101[196,2] 102[198,2] 103[200,2] 104[202,2] 105[204,2] 106[206,2] 107[208,2] 108[210,2] 109[212,2] 110[214,2] 111[216,2] 112[218,2] 113[220,2] 114[222,2] 115[224,2] 116[226,2] 117[228,2] 118[230,2] 119[232,2] 120[234,2] 121[236,2] 122[238,2] 123[240,2] 124[242,2] 125[244,2] 126[246,2] 127[248,2] 133[250,1] 134[251,1] 135[252,1] 136[253,1] 137[254,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134 135 136 137
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 133 134 135 136 137
;; live  kill	 14 [lr]
;; rd  in  	(10)
4, 9, 13, 17, 18, 21, 22, 25, 46, 47
;; rd  gen 	(6)
0, 250, 251, 252, 253, 254
;; rd  kill	(13)
0, 1, 2, 3, 4, 23, 24, 25, 250, 251, 252, 253, 254

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 arch/arm/kernel/setup.c:317 (set (reg/v/f:SI 133 [ str ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
                (const_int 4 [0x4])) [0 str+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
                (const_int 4 [0x4])) [0 str+0 S4 A32])
        (nil)))

(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 3 7 2 arch/arm/kernel/setup.c:322 (set (reg/f:SI 134)
        (plus:SI (reg/f:SI 26 afp)
            (const_int 8 [0x8]))) 4 {*arm_addsi3} (nil))

(insn 7 6 8 2 arch/arm/kernel/setup.c:322 (set (mem/s/f/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 ap.__ap+0 S4 A32])
        (reg/f:SI 134)) 167 {*arm_movsi_insn} (nil))

(insn 8 7 9 2 arch/arm/kernel/setup.c:323 (set (reg/f:SI 135)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -260 [0xfffffffffffffefc]))) 4 {*arm_addsi3} (nil))

(insn 9 8 10 2 arch/arm/kernel/setup.c:323 (set (reg:SI 0 r0)
        (reg/f:SI 135)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -260 [0xfffffffffffffefc]))
        (nil)))

(insn 10 9 11 2 arch/arm/kernel/setup.c:323 (set (reg:SI 1 r1)
        (const_int 256 [0x100])) 167 {*arm_movsi_insn} (nil))

(insn 11 10 12 2 arch/arm/kernel/setup.c:323 (set (reg:SI 2 r2)
        (reg/v/f:SI 133 [ str ])) 167 {*arm_movsi_insn} (nil))

(insn 12 11 13 2 arch/arm/kernel/setup.c:323 (set (reg:SI 3 r3)
        (reg/f:SI 134)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 26 afp)
            (const_int 8 [0x8]))
        (nil)))

(call_insn 13 12 14 2 arch/arm/kernel/setup.c:323 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vsnprintf") [flags 0x41] <function_decl 0x5115ed80 vsnprintf>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 14 13 16 2 arch/arm/kernel/setup.c:329 (set (reg/f:SI 136)
        (symbol_ref/v/f:SI ("*.LC20") [flags 0x82] <string_cst 0x116ed820>)) 167 {*arm_movsi_insn} (nil))

(insn 16 14 17 2 arch/arm/kernel/setup.c:329 (set (reg:SI 0 r0)
        (reg/f:SI 136)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC20") [flags 0x82] <string_cst 0x116ed820>)
        (nil)))

(insn 17 16 18 2 arch/arm/kernel/setup.c:329 (set (reg:SI 1 r1)
        (reg/f:SI 135)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -260 [0xfffffffffffffefc]))
        (nil)))

(call_insn 18 17 0 2 arch/arm/kernel/setup.c:329 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(14)
0, 9, 13, 17, 18, 21, 22, 46, 47, 250, 251, 252, 253, 254


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
deleting insn with uid = 15.
ending the processing of deferred insns

;; Function dump_machine_table (dump_machine_table)[0:1393] (unlikely executed)

;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;;
;; Loop 2
;;  header 6, latch 6
;;  depth 1, outer 0
;;  nodes: 6
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 6 }
;; 6 succs { 6 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 7 count 11 (  1.6)

In insn 8, replacing
 (reg/f:SI 136)
 with (symbol_ref/v/f:SI ("*.LC21") [flags 0x82] <string_cst 0x11679b40>)
Changes to insn 8 not profitable

In insn 15, replacing
 (reg/f:SI 137)
 with (symbol_ref/v/f:SI ("*.LC22") [flags 0x82] <string_cst 0x116f3f30>)
Changes to insn 15 not profitable

In insn 24, replacing
 (compare:CC (reg/v/f:SI 135 [ p ])
        (reg/f:SI 138))
 with (compare:CC (reg/v/f:SI 135 [ p ])
        (symbol_ref:SI ("__arch_info_end") [flags 0xc0] <var_decl 0x114adde0 __arch_info_end>))
Changes to insn 24 not recognized
 Setting REG_EQUAL note

In insn 28, replacing
 (reg/f:SI 139)
 with (symbol_ref/v/f:SI ("*.LC23") [flags 0x82] <string_cst 0x11679b90>)
Changes to insn 28 not profitable


try_optimize_cfg iteration 1

Infinite loop in BB 6.
Infinite loop in BB 6.

Number of successful forward propagations: 0



dump_machine_table

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={7d,3u} r1={5d,1u} r2={5d,1u} r3={4d} r11={1d,6u} r12={4d} r13={1d,9u} r14={4d,1u} r15={3d} r16={3d} r17={3d} r18={3d} r19={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={4d,1u} r25={1d,6u} r26={1d,5u} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r81={3d} r82={3d} r83={3d} r84={3d} r85={3d} r86={3d} r87={3d} r88={3d} r89={3d} r90={3d} r91={3d} r92={3d} r93={3d} r94={3d} r95={3d} r96={3d} r97={3d} r98={3d} r99={3d} r100={3d} r101={3d} r102={3d} r103={3d} r104={3d} r105={3d} r106={3d} r107={3d} r108={3d} r109={3d} r110={3d} r111={3d} r112={3d} r113={3d} r114={3d} r115={3d} r116={3d} r117={3d} r118={3d} r119={3d} r120={3d} r121={3d} r122={3d} r123={3d} r124={3d} r125={3d} r126={3d} r127={3d} r135={2d,4u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} 
;;    total ref usage 414{373d,41u,0e} in 16{13 regular + 3 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366
0[0,7] 1[7,5] 2[12,5] 3[17,4] 11[21,1] 12[22,4] 13[26,1] 14[27,4] 15[31,3] 16[34,3] 17[37,3] 18[40,3] 19[43,3] 20[46,3] 21[49,3] 22[52,3] 23[55,3] 24[58,4] 25[62,1] 26[63,1] 27[64,3] 28[67,3] 29[70,3] 30[73,3] 31[76,3] 32[79,3] 33[82,3] 34[85,3] 35[88,3] 36[91,3] 37[94,3] 38[97,3] 39[100,3] 40[103,3] 41[106,3] 42[109,3] 43[112,3] 44[115,3] 45[118,3] 46[121,3] 47[124,3] 48[127,3] 49[130,3] 50[133,3] 51[136,3] 52[139,3] 53[142,3] 54[145,3] 55[148,3] 56[151,3] 57[154,3] 58[157,3] 59[160,3] 60[163,3] 61[166,3] 62[169,3] 63[172,3] 64[175,3] 65[178,3] 66[181,3] 67[184,3] 68[187,3] 69[190,3] 70[193,3] 71[196,3] 72[199,3] 73[202,3] 74[205,3] 75[208,3] 76[211,3] 77[214,3] 78[217,3] 79[220,3] 80[223,3] 81[226,3] 82[229,3] 83[232,3] 84[235,3] 85[238,3] 86[241,3] 87[244,3] 88[247,3] 89[250,3] 90[253,3] 91[256,3] 92[259,3] 93[262,3] 94[265,3] 95[268,3] 96[271,3] 97[274,3] 98[277,3] 99[280,3] 100[283,3] 101[286,3] 102[289,3] 103[292,3] 104[295,3] 105[298,3] 106[301,3] 107[304,3] 108[307,3] 109[310,3] 110[313,3] 111[316,3] 112[319,3] 113[322,3] 114[325,3] 115[328,3] 116[331,3] 117[334,3] 118[337,3] 119[340,3] 120[343,3] 121[346,3] 122[349,3] 123[352,3] 124[355,3] 125[358,3] 126[361,3] 127[364,3] 135[367,2] 136[369,1] 137[370,1] 138[371,1] 139[372,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 135 136
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 135 136
;; live  kill	 14 [lr]
;; rd  in  	(10)
6, 11, 16, 20, 21, 25, 26, 30, 62, 63
;; rd  gen 	(2)
368, 369
;; rd  kill	(7)
27, 28, 29, 30, 367, 368, 369

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 0 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 4 5 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 8 2 arch/arm/kernel/setup.c:452 (set (reg/f:SI 136)
        (symbol_ref/v/f:SI ("*.LC21") [flags 0x82] <string_cst 0x11679b40>)) 167 {*arm_movsi_insn} (nil))

(insn 8 7 9 2 arch/arm/kernel/setup.c:452 (set (reg:SI 0 r0)
        (reg/f:SI 136)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC21") [flags 0x82] <string_cst 0x11679b40>)
        (nil)))

(call_insn 9 8 10 2 arch/arm/kernel/setup.c:452 (parallel [
            (call (mem:SI (symbol_ref:SI ("early_print") [flags 0x3] <function_decl 0x113ee700 early_print>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 10 9 22 2 arch/arm/kernel/setup.c:453 (set (reg/v/f:SI 135 [ p ])
        (symbol_ref:SI ("__arch_info_begin") [flags 0xc0] <var_decl 0x114add80 __arch_info_begin>)) 167 {*arm_movsi_insn} (nil))
;; End of basic block 2 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; rd  out 	(11)
6, 11, 16, 20, 21, 25, 26, 62, 63, 368, 369


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 4) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u7(11){ }u8(13){ }u9(25){ }u10(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 135 137
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 135 137
;; live  kill	 14 [lr]
;; rd  in  	(15)
6, 11, 16, 20, 21, 25, 26, 59, 62, 63, 367, 368, 369, 370, 371
;; rd  gen 	(2)
367, 370
;; rd  kill	(7)
27, 28, 29, 30, 367, 368, 370

;; Pred edge  4 [0.0%] 
(code_label 22 10 13 3 101 "" [1 uses])

(note 13 22 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 14 13 15 3 arch/arm/kernel/setup.c:454 (set (reg/f:SI 137)
        (symbol_ref/v/f:SI ("*.LC22") [flags 0x82] <string_cst 0x116f3f30>)) 167 {*arm_movsi_insn} (nil))

(insn 15 14 16 3 arch/arm/kernel/setup.c:454 (set (reg:SI 0 r0)
        (reg/f:SI 137)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC22") [flags 0x82] <string_cst 0x116f3f30>)
        (nil)))

(insn 16 15 17 3 arch/arm/kernel/setup.c:454 (set (reg:SI 1 r1)
        (mem/s/j:SI (reg/v/f:SI 135 [ p ]) [0 <variable>.nr+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 17 16 18 3 arch/arm/kernel/setup.c:454 (set (reg:SI 2 r2)
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 135 [ p ])
                (const_int 4 [0x4])) [0 <variable>.name+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn 18 17 19 3 arch/arm/kernel/setup.c:454 (parallel [
            (call (mem:SI (symbol_ref:SI ("early_print") [flags 0x3] <function_decl 0x113ee700 early_print>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 19 18 20 3 arch/arm/kernel/setup.c:453 discrim 2 (set (reg/v/f:SI 135 [ p ])
        (plus:SI (reg/v/f:SI 135 [ p ])
            (const_int 60 [0x3c]))) 4 {*arm_addsi3} (nil))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; rd  out 	(14)
6, 11, 16, 20, 21, 25, 26, 59, 62, 63, 367, 369, 370, 371


;; Succ edge  4 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u19(11){ }u20(13){ }u21(25){ }u22(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc] 138
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; live  gen 	 24 [cc] 138
;; live  kill	
;; rd  in  	(15)
6, 11, 16, 20, 21, 25, 26, 59, 62, 63, 367, 368, 369, 370, 371
;; rd  gen 	(2)
59, 371
;; rd  kill	(5)
58, 59, 60, 61, 371

;; Pred edge  2 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%]  (fallthru,dfs_back)
(code_label 20 19 21 4 100 "" [0 uses])

(note 21 20 23 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 23 21 24 4 arch/arm/kernel/setup.c:453 discrim 1 (set (reg/f:SI 138)
        (symbol_ref:SI ("__arch_info_end") [flags 0xc0] <var_decl 0x114adde0 __arch_info_end>)) 167 {*arm_movsi_insn} (nil))

(insn 24 23 25 4 arch/arm/kernel/setup.c:453 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 135 [ p ])
            (reg/f:SI 138))) 219 {*arm_cmpsi_insn} (expr_list:REG_EQUAL (compare:CC (reg/v/f:SI 135 [ p ])
            (symbol_ref:SI ("__arch_info_end") [flags 0xc0] <var_decl 0x114adde0 __arch_info_end>))
        (nil)))

(jump_insn 25 24 26 4 arch/arm/kernel/setup.c:453 discrim 1 (set (pc)
        (if_then_else (ltu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 22)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 4 [0x4])
        (nil)))
;; End of basic block 4 -> ( 3 5)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; rd  out 	(15)
6, 11, 16, 20, 21, 25, 26, 59, 62, 63, 367, 368, 369, 370, 371


;; Succ edge  3 [0.0%] 
;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u26(11){ }u27(13){ }u28(25){ }u29(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 139
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 139
;; live  kill	 14 [lr]
;; rd  in  	(15)
6, 11, 16, 20, 21, 25, 26, 59, 62, 63, 367, 368, 369, 370, 371
;; rd  gen 	(1)
372
;; rd  kill	(5)
27, 28, 29, 30, 372

;; Pred edge  4 [100.0%]  (fallthru)
(note 26 25 27 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 27 26 28 5 arch/arm/kernel/setup.c:456 (set (reg/f:SI 139)
        (symbol_ref/v/f:SI ("*.LC23") [flags 0x82] <string_cst 0x11679b90>)) 167 {*arm_movsi_insn} (nil))

(insn 28 27 29 5 arch/arm/kernel/setup.c:456 (set (reg:SI 0 r0)
        (reg/f:SI 139)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC23") [flags 0x82] <string_cst 0x11679b90>)
        (nil)))

(call_insn 29 28 31 5 arch/arm/kernel/setup.c:456 (parallel [
            (call (mem:SI (symbol_ref:SI ("early_print") [flags 0x3] <function_decl 0x113ee700 early_print>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 5 -> ( 6)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(16)
6, 11, 16, 20, 21, 25, 26, 59, 62, 63, 367, 368, 369, 370, 371, 372


;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 6 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u33(11){ }u34(13){ }u35(25){ }u36(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(16)
6, 11, 16, 20, 21, 25, 26, 59, 62, 63, 367, 368, 369, 370, 371, 372
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  6 [100.0%]  (fallthru)
;; Pred edge  5 [100.0%]  (fallthru)
(code_label 31 29 30 6 102 "" [0 uses])

(note 30 31 0 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 6 -> ( 6)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(16)
6, 11, 16, 20, 21, 25, 26, 59, 62, 63, 367, 368, 369, 370, 371, 372


;; Succ edge  6 [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function setup_arch (setup_arch)[0:1410] (unlikely executed)

;; 7 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86
;;
;; Loop 6
;;  header 4, latch 4
;;  depth 1, outer 0
;;  nodes: 4
;;
;; Loop 4
;;  header 71, latch 70
;;  depth 1, outer 0
;;  nodes: 71 70 67 68 69 64 65 66
;;
;; Loop 3
;;  header 59, latch 58
;;  depth 1, outer 0
;;  nodes: 59 58 55 85 57 60 56 54
;;
;; Loop 5
;;  header 57, latch 56
;;  depth 2, outer 3
;;  nodes: 57 56 54
;;
;; Loop 2
;;  header 53, latch 52
;;  depth 1, outer 0
;;  nodes: 53 52 50 51
;;
;; Loop 1
;;  header 34, latch 33
;;  depth 1, outer 0
;;  nodes: 34 33 31
;; 2 succs { 3 5 }
;; 3 succs { 4 }
;; 4 succs { 4 }
;; 5 succs { 9 6 }
;; 6 succs { 7 9 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 10 19 }
;; 10 succs { 11 13 }
;; 11 succs { 12 16 }
;; 12 succs { 16 }
;; 13 succs { 14 15 }
;; 14 succs { 84 }
;; 15 succs { 84 }
;; 16 succs { 17 }
;; 17 succs { 18 20 }
;; 18 succs { 20 }
;; 19 succs { 20 }
;; 20 succs { 22 21 }
;; 21 succs { 23 }
;; 22 succs { 23 }
;; 23 succs { 25 24 }
;; 24 succs { 30 }
;; 25 succs { 27 26 }
;; 26 succs { 30 }
;; 27 succs { 29 28 }
;; 28 succs { 30 }
;; 29 succs { 30 }
;; 30 succs { 34 }
;; 31 succs { 32 33 }
;; 32 succs { 35 36 }
;; 33 succs { 34 }
;; 34 succs { 31 35 }
;; 35 succs { 36 }
;; 36 succs { 37 38 }
;; 37 succs { 43 }
;; 38 succs { 40 39 }
;; 39 succs { 43 }
;; 40 succs { 41 42 }
;; 41 succs { 43 }
;; 42 succs { 43 }
;; 43 succs { 44 45 }
;; 44 succs { 45 }
;; 45 succs { 46 47 }
;; 46 succs { 47 }
;; 47 succs { 48 61 }
;; 48 succs { 49 59 }
;; 49 succs { 53 }
;; 50 succs { 51 52 }
;; 51 succs { 52 }
;; 52 succs { 53 }
;; 53 succs { 50 59 }
;; 54 succs { 55 56 }
;; 55 succs { 58 }
;; 56 succs { 57 }
;; 57 succs { 54 85 }
;; 58 succs { 59 }
;; 59 succs { 60 61 }
;; 60 succs { 57 }
;; 61 succs { 62 63 }
;; 62 succs { 63 }
;; 63 succs { 71 }
;; 64 succs { 65 67 }
;; 65 succs { 66 67 }
;; 66 succs { 67 }
;; 67 succs { 68 70 }
;; 68 succs { 69 70 }
;; 69 succs { 70 }
;; 70 succs { 71 }
;; 71 succs { 64 72 }
;; 72 succs { 73 74 }
;; 73 succs { 74 }
;; 74 succs { 75 76 }
;; 75 succs { 76 }
;; 76 succs { 77 78 }
;; 77 succs { 78 }
;; 78 succs { 79 80 }
;; 79 succs { 80 }
;; 80 succs { 81 82 }
;; 81 succs { 82 }
;; 82 succs { 83 86 }
;; 83 succs { 86 }
;; 84 succs { 17 }
;; 85 succs { 58 }
;; 86 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 87 n_edges 126 count 177 (    2)
df_worklist_dataflow_doublequeue:n_basic_blocks 87 n_edges 126 count 191 (  2.2)
df_worklist_dataflow_doublequeue:n_basic_blocks 87 n_edges 126 count 191 (  2.2)

In insn 17, replacing
 (reg/f:SI 171)
 with (symbol_ref/v/f:SI ("*.LC24") [flags 0x82] <string_cst 0x1120c8a0>)
Changes to insn 17 not profitable

In insn 31, replacing
 (plus:SI (reg/f:SI 174)
        (const_int 4 [0x4]))
 with (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR3") [flags 0x182])
            (const_int 4 [0x4])))
Changes to insn 31 not profitable

In insn 35, replacing
 (reg/f:SI 174)
 with (symbol_ref:SI ("*.LANCHOR3") [flags 0x182])
Changes to insn 35 not profitable

In insn 37, replacing
 (plus:SI (reg/f:SI 174)
        (const_int 16 [0x10]))
 with (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR3") [flags 0x182])
            (const_int 16 [0x10])))
Changes to insn 37 not profitable

In insn 41, replacing
 (reg/f:SI 174)
 with (symbol_ref:SI ("*.LANCHOR3") [flags 0x182])
Changes to insn 41 not profitable

In insn 43, replacing
 (plus:SI (reg/f:SI 174)
        (const_int 24 [0x18]))
 with (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR3") [flags 0x182])
            (const_int 24 [0x18])))
Changes to insn 43 not profitable

In insn 56, replacing
 (reg/f:SI 172)
 with (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
Changes to insn 56 not profitable

In insn 61, replacing
 (plus:SI (reg/f:SI 189)
        (reg:SI 191))
 with (plus:SI (reg:SI 191)
        (symbol_ref:SI ("*.LANCHOR4") [flags 0x182]))
Changes to insn 61 not recognized
 Setting REG_EQUAL note

In insn 63, replacing
 (mem/s/u/f/j:SI (reg/f:SI 193) [0 proc_arch S4 A32])
 with (mem/s/u/f/j:SI (plus:SI (reg:SI 192)
            (const_int 80 [0x50])) [0 proc_arch S4 A32])
Changed insn 63
deferring rescan insn with uid = 63.
deferring rescan insn with uid = 63.

In insn 68, replacing
 (reg/f:SI 186)
 with (symbol_ref/v/f:SI ("*.LC25") [flags 0x82] <string_cst 0x11679cd0>)
Changes to insn 68 not profitable

In insn 78, replacing
 (reg/f:SI 197)
 with (const:SI (plus:SI (symbol_ref:SI ("init_uts_ns") [flags 0xc0] <var_decl 0x1101bcc0 init_uts_ns>)
            (const_int 264 [0x108])))
Changes to insn 78 not profitable

In insn 79, replacing
 (reg/f:SI 198)
 with (symbol_ref/v/f:SI ("*.LC26") [flags 0x82] <string_cst 0x1171b100>)
Changes to insn 79 not profitable

In insn 83, replacing
 (reg/f:SI 172)
 with (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
Changes to insn 83 not profitable

In insn 84, replacing
 (plus:SI (reg/f:SI 172)
        (const_int 16 [0x10]))
 with (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
            (const_int 16 [0x10])))
Changes to insn 84 not profitable

In insn 85, replacing
 (reg/f:SI 198)
 with (symbol_ref/v/f:SI ("*.LC26") [flags 0x82] <string_cst 0x1171b100>)
Changes to insn 85 not profitable

In insn 86, replacing
 (reg/f:SI 199)
 with (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
Changes to insn 86 not profitable

In insn 90, replacing
 (reg/f:SI 198)
 with (symbol_ref/v/f:SI ("*.LC26") [flags 0x82] <string_cst 0x1171b100>)
Changes to insn 90 not profitable

In insn 95, replacing
 (reg/f:SI 174)
 with (symbol_ref:SI ("*.LANCHOR3") [flags 0x182])
Changes to insn 95 not profitable

In insn 99, replacing
 (and:SI (reg/v:SI 152 [ __val ])
        (reg:SI 210))
 with (and:SI (reg/v:SI 152 [ __val ])
        (const_int -15794176 [0xffffffffff0f0000]))
Changes to insn 99 not profitable

In insn 101, replacing
 (compare:CC (reg:SI 209)
        (reg:SI 211))
 with (compare:CC (reg:SI 209)
        (const_int 1090977792 [0x41070000]))
Changes to insn 101 not recognized
 Setting REG_EQUAL note

In insn 109, replacing
 (compare:CC (reg:SI 213)
        (reg:SI 215))
 with (compare:CC (reg:SI 213)
        (const_int 2870 [0xb36]))
Changes to insn 109 not recognized
 Setting REG_EQUAL note

In insn 117, replacing
 (reg/f:SI 174)
 with (symbol_ref:SI ("*.LANCHOR3") [flags 0x182])
Changes to insn 117 not profitable

In insn 132, replacing
 (reg:SI 222)
 with (const_int 2 [0x2])
Changes to insn 132 not recognized
 Setting REG_EQUAL note

In insn 137, replacing
 (reg/f:SI 221)
 with (symbol_ref:SI ("*.LANCHOR3") [flags 0x182])
Changes to insn 137 not profitable

In insn 139, replacing
 (reg:SI 225)
 with (const_int 10 [0xa])
Changes to insn 139 not recognized
 Setting REG_EQUAL note

In insn 150, replacing
 (reg:SI 228)
 with (const_int 4 [0x4])
Changes to insn 150 not recognized
 Setting REG_EQUAL note

In insn 157, replacing
 (reg:SI 230)
 with (const_int 2 [0x2])
Changes to insn 157 not recognized
 Setting REG_EQUAL note

In insn 169, replacing
 (ashift:SI (reg:SI 235)
        (reg:SI 233))
 with (ashift:SI (const_int 4 [0x4])
        (reg:SI 233))
Changes to insn 169 not recognized
 Setting REG_EQUAL note

In insn 183, replacing
 (reg/f:SI 242)
 with (symbol_ref:SI ("*.LANCHOR3") [flags 0x182])
Changes to insn 183 not profitable

In insn 193, replacing
 (reg:SI 247)
 with (const_int 1 [0x1])
Changes to insn 193 not recognized
 Setting REG_EQUAL note

In insn 240, replacing
 (reg/f:SI 251)
 with (symbol_ref/v/f:SI ("*.LC31") [flags 0x82] <string_cst 0x11679d20>)
Changes to insn 240 not profitable

In insn 248, replacing
 (plus:SI (reg/f:SI 253)
        (const_int 1024 [0x400]))
 with (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
            (const_int 1024 [0x400])))
Changes to insn 248 not profitable

In insn 250, replacing
 (reg/f:SI 253)
 with (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
Changes to insn 250 not profitable

In insn 251, replacing
 (plus:SI (reg/f:SI 253)
        (const_int 4 [0x4]))
 with (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
            (const_int 4 [0x4])))
Changes to insn 251 not profitable

In insn 253, replacing
 (reg/f:SI 253)
 with (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
Changes to insn 253 not profitable

In insn 255, replacing
 (reg:SI 258)
 with (const_int 0 [0x0])
Changes to insn 255 not recognized
 Setting REG_EQUAL note

In insn 267, replacing
 (reg/f:SI 260)
 with (symbol_ref/v/f:SI ("*.LC32") [flags 0x82] <string_cst 0x117240f0>)
Changes to insn 267 not profitable

In insn 282, replacing
 (compare:CC (reg/v/f:SI 166 [ mdesc ])
        (reg/f:SI 261))
 with (compare:CC (reg/v/f:SI 166 [ mdesc ])
        (symbol_ref:SI ("__arch_info_end") [flags 0xc0] <var_decl 0x114adde0 __arch_info_end>))
Changes to insn 282 not recognized
 Setting REG_EQUAL note

In insn 287, replacing
 (reg/f:SI 262)
 with (symbol_ref/v/f:SI ("*.LC33") [flags 0x82] <string_cst 0x1120ca80>)
Changes to insn 287 not profitable

In insn 314, replacing
 (compare:CC (reg:SI 143 [ D.26325 ])
        (reg:SI 264))
 with (compare:CC (reg:SI 143 [ D.26325 ])
        (const_int 1048575 [0xfffff]))
Changes to insn 314 not recognized
 Setting REG_EQUAL note

In insn 318, replacing
 (reg/f:SI 265)
 with (symbol_ref/v/f:SI ("*.LC34") [flags 0x82] <string_cst 0x1120cc60>)
Changes to insn 318 not profitable

In insn 331, replacing
 (compare:CC (reg:SI 267 [ <variable>.hdr.tag ])
        (reg:SI 266))
 with (compare:CC (reg:SI 267 [ <variable>.hdr.tag ])
        (const_int 1413545985 [0x54410001]))
Changes to insn 331 not recognized
 Setting REG_EQUAL note

In insn 346, replacing
 (reg/f:SI 269)
 with (symbol_ref:SI ("meminfo") [flags 0xc0] <var_decl 0x114015a0 meminfo>)
Changes to insn 346 not profitable

In insn 352, replacing
 (compare:CC (reg:SI 271 [ <variable>.hdr.tag ])
        (reg:SI 270))
 with (compare:CC (reg:SI 271 [ <variable>.hdr.tag ])
        (const_int 1413545985 [0x54410001]))
Changes to insn 352 not recognized
 Setting REG_EQUAL note

In insn 366, replacing
 (compare:CC (reg:SI 275 [ <variable>.hdr.tag ])
        (reg:SI 274))
 with (compare:CC (reg:SI 275 [ <variable>.hdr.tag ])
        (const_int 1413545986 [0x54410002]))
Changes to insn 366 not recognized
 Setting REG_EQUAL note

In insn 370, replacing
 (reg:SI 276)
 with (const_int 0 [0x0])
Changes to insn 370 not recognized
 Setting REG_EQUAL note

In insn 402, replacing
 (compare:CC (reg/v/f:SI 147 [ t ])
        (reg/f:SI 282))
 with (compare:CC (reg/v/f:SI 147 [ t ])
        (symbol_ref:SI ("__tagtable_end") [flags 0xc0] <var_decl 0x115eede0 __tagtable_end>))
Changes to insn 402 not recognized
 Setting REG_EQUAL note

In insn 425, replacing
 (reg/f:SI 285)
 with (symbol_ref:SI ("boot_command_line") [flags 0xc0] <var_decl 0x10a4f9c0 boot_command_line>)
Changes to insn 425 not profitable

In insn 436, replacing
 (subreg:SI (reg:QI 289) 0)
 with (reg:SI 290)
Changed insn 436
deferring rescan insn with uid = 436.

In insn 443, replacing
 (reg/f:SI 294)
 with (symbol_ref/v/f:SI ("*.LC35") [flags 0x82] <string_cst 0x11727620>)
Changes to insn 443 not profitable

In insn 449, replacing
 (reg/f:SI 168 [ _text.368 ])
 with (symbol_ref:SI ("_text") [flags 0xc0] <var_decl 0x113f3960 _text>)
Changes to insn 449 not recognized
 Setting REG_EQUAL note

In insn 450, replacing
 (reg/f:SI 295)
 with (symbol_ref:SI ("init_mm") [flags 0xc0] <var_decl 0x10fe2000 init_mm>)
Changes to insn 450 not profitable

In insn 452, replacing
 (reg/f:SI 297)
 with (symbol_ref:SI ("_etext") [flags 0xc0] <var_decl 0x113f3a20 _etext>)
Changes to insn 452 not recognized
 Setting REG_EQUAL note

In insn 453, replacing
 (reg/f:SI 295)
 with (symbol_ref:SI ("init_mm") [flags 0xc0] <var_decl 0x10fe2000 init_mm>)
Changes to insn 453 not profitable

In insn 455, replacing
 (reg/f:SI 299)
 with (symbol_ref:SI ("_edata") [flags 0xc0] <var_decl 0x113f3b40 _edata>)
Changes to insn 455 not recognized
 Setting REG_EQUAL note

In insn 456, replacing
 (reg/f:SI 295)
 with (symbol_ref:SI ("init_mm") [flags 0xc0] <var_decl 0x10fe2000 init_mm>)
Changes to insn 456 not profitable

In insn 458, replacing
 (reg/f:SI 301)
 with (symbol_ref:SI ("_end") [flags 0xc0] <var_decl 0x113f3de0 _end>)
Changes to insn 458 not recognized
 Setting REG_EQUAL note

In insn 460, replacing
 (plus:SI (reg/f:SI 302)
        (const_int 1072 [0x430]))
 with (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
            (const_int 1072 [0x430])))
Changes to insn 460 not profitable

In insn 464, replacing
 (reg/f:SI 305)
 with (symbol_ref:SI ("boot_command_line") [flags 0xc0] <var_decl 0x10a4f9c0 boot_command_line>)
Changes to insn 464 not profitable

In insn 467, replacing
 (reg/f:SI 302)
 with (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
Changes to insn 467 not profitable

In insn 474, replacing
 (reg/f:SI 309)
 with (symbol_ref:SI ("meminfo") [flags 0xc0] <var_decl 0x114015a0 meminfo>)
Changes to insn 474 not profitable

In insn 480, replacing
 (plus:SI (reg/f:SI 168 [ _text.368 ])
        (const_int 1073741824 [0x40000000]))
 with (const:SI (plus:SI (symbol_ref:SI ("_text") [flags 0xc0] <var_decl 0x113f3960 _text>)
            (const_int 1073741824 [0x40000000])))
Changes to insn 480 not profitable

In insn 482, replacing
 (reg/f:SI 310)
 with (symbol_ref:SI ("*.LANCHOR5") [flags 0x182])
Changes to insn 482 not profitable

In insn 484, replacing
 (reg/f:SI 313)
 with (const:SI (plus:SI (symbol_ref:SI ("_etext") [flags 0xc0] <var_decl 0x113f3a20 _etext>)
            (const_int 1073741823 [0x3fffffff])))
Changes to insn 484 not recognized
 Setting REG_EQUAL note

In insn 485, replacing
 (reg/f:SI 310)
 with (symbol_ref:SI ("*.LANCHOR5") [flags 0x182])
Changes to insn 485 not profitable

In insn 487, replacing
 (reg/f:SI 315)
 with (const:SI (plus:SI (symbol_ref:SI ("_sdata") [flags 0xc0] <var_decl 0x113f3ae0 _sdata>)
            (const_int 1073741824 [0x40000000])))
Changes to insn 487 not recognized
 Setting REG_EQUAL note

In insn 488, replacing
 (reg/f:SI 310)
 with (symbol_ref:SI ("*.LANCHOR5") [flags 0x182])
Changes to insn 488 not profitable

In insn 490, replacing
 (reg/f:SI 317)
 with (const:SI (plus:SI (symbol_ref:SI ("_end") [flags 0xc0] <var_decl 0x113f3de0 _end>)
            (const_int 1073741823 [0x3fffffff])))
Changes to insn 490 not recognized
 Setting REG_EQUAL note

In insn 503, replacing
 (reg/f:SI 319)
 with (symbol_ref/v/f:SI ("*.LC36") [flags 0x82] <string_cst 0x11729f30>)
Changes to insn 503 not recognized
 Setting REG_EQUAL note

In insn 518, replacing
 (reg:SI 331)
 with (const_int -2147483136 [0xffffffff80000200])
Changes to insn 518 not recognized
 Setting REG_EQUAL note

In insn 520, replacing
 (reg/f:SI 332)
 with (symbol_ref:SI ("iomem_resource") [flags 0xc0] <var_decl 0x10e34de0 iomem_resource>)
Changes to insn 520 not profitable

In insn 529, replacing
 (reg/f:SI 333)
 with (symbol_ref:SI ("*.LANCHOR5") [flags 0x182])
Changes to insn 529 not profitable

In insn 535, replacing
 (reg/f:SI 333)
 with (symbol_ref:SI ("*.LANCHOR5") [flags 0x182])
Changes to insn 535 not profitable

In insn 536, replacing
 (plus:SI (reg/f:SI 333)
        (const_int 28 [0x1c]))
 with (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR5") [flags 0x182])
            (const_int 28 [0x1c])))
Changes to insn 536 not profitable

In insn 548, replacing
 (reg/f:SI 341)
 with (symbol_ref:SI ("*.LANCHOR5") [flags 0x182])
Changes to insn 548 not profitable

In insn 554, replacing
 (reg/f:SI 341)
 with (symbol_ref:SI ("*.LANCHOR5") [flags 0x182])
Changes to insn 554 not profitable

In insn 555, replacing
 (plus:SI (reg/f:SI 341)
        (const_int 56 [0x38]))
 with (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR5") [flags 0x182])
            (const_int 56 [0x38])))
Changes to insn 555 not profitable

In insn 566, replacing
 (reg/f:SI 349)
 with (symbol_ref:SI ("memblock") [flags 0xc0] <var_decl 0x113e61e0 memblock>)
Changes to insn 566 not profitable

In insn 580, replacing
 (reg/f:SI 355)
 with (symbol_ref:SI ("*.LANCHOR5") [flags 0x182])
Changes to insn 580 not profitable

In insn 584, replacing
 (reg/f:SI 355)
 with (symbol_ref:SI ("*.LANCHOR5") [flags 0x182])
Changes to insn 584 not profitable

In insn 585, replacing
 (reg/f:SI 358)
 with (symbol_ref:SI ("iomem_resource") [flags 0xc0] <var_decl 0x10e34de0 iomem_resource>)
Changes to insn 585 not profitable

In insn 586, replacing
 (reg/f:SI 355)
 with (symbol_ref:SI ("*.LANCHOR5") [flags 0x182])
Changes to insn 586 not profitable

In insn 592, replacing
 (subreg:SI (reg:QI 360) 0)
 with (reg:SI 361)
Changed insn 592
deferring rescan insn with uid = 592.

In insn 600, replacing
 (plus:SI (reg/f:SI 366)
        (const_int 84 [0x54]))
 with (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR5") [flags 0x182])
            (const_int 84 [0x54])))
Changes to insn 600 not profitable

In insn 601, replacing
 (reg/f:SI 365)
 with (symbol_ref:SI ("ioport_resource") [flags 0xc0] <var_decl 0x10e34d80 ioport_resource>)
Changes to insn 601 not profitable

In insn 608, replacing
 (subreg:SI (reg:QI 368) 0)
 with (reg:SI 369)
Changed insn 608
deferring rescan insn with uid = 608.

In insn 616, replacing
 (plus:SI (reg/f:SI 374)
        (const_int 84 [0x54]))
 with (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR5") [flags 0x182])
            (const_int 84 [0x54])))
Changes to insn 616 not profitable

In insn 617, replacing
 (plus:SI (reg/f:SI 374)
        (const_int 112 [0x70]))
 with (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR5") [flags 0x182])
            (const_int 112 [0x70])))
Changes to insn 617 not profitable
 Setting REG_EQUAL note

In insn 618, replacing
 (reg/f:SI 373)
 with (symbol_ref:SI ("ioport_resource") [flags 0xc0] <var_decl 0x10e34d80 ioport_resource>)
Changes to insn 618 not profitable

In insn 625, replacing
 (subreg:SI (reg:QI 377) 0)
 with (reg:SI 378)
Changed insn 625
deferring rescan insn with uid = 625.

In insn 633, replacing
 (plus:SI (reg/f:SI 383)
        (const_int 84 [0x54]))
 with (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR5") [flags 0x182])
            (const_int 84 [0x54])))
Changes to insn 633 not profitable

In insn 634, replacing
 (plus:SI (reg/f:SI 383)
        (const_int 140 [0x8c]))
 with (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR5") [flags 0x182])
            (const_int 140 [0x8c])))
Changes to insn 634 not profitable
 Setting REG_EQUAL note

In insn 635, replacing
 (reg/f:SI 382)
 with (symbol_ref:SI ("ioport_resource") [flags 0xc0] <var_decl 0x10e34d80 ioport_resource>)
Changes to insn 635 not profitable

In insn 668, replacing
 (reg/f:SI 388)
 with (symbol_ref/v/f:SI ("*.LC37") [flags 0x82] <string_cst 0x11728100>)
Changes to insn 668 not profitable


try_optimize_cfg iteration 1

Infinite loop in BB 4.
Infinite loop in BB 4.
deferring deletion of insn with uid = 633.
deferring deletion of insn with uid = 624.
deferring deletion of insn with uid = 616.
deferring deletion of insn with uid = 607.
deferring deletion of insn with uid = 591.
deferring deletion of insn with uid = 584.
deferring deletion of insn with uid = 580.
deferring deletion of insn with uid = 566.
deferring deletion of insn with uid = 554.
deferring deletion of insn with uid = 548.
deferring deletion of insn with uid = 535.
deferring deletion of insn with uid = 529.
deferring deletion of insn with uid = 501.
deferring deletion of insn with uid = 488.
deferring deletion of insn with uid = 485.
deferring deletion of insn with uid = 482.
deferring deletion of insn with uid = 469.
deferring deletion of insn with uid = 468.
deferring deletion of insn with uid = 467.
deferring deletion of insn with uid = 456.
deferring deletion of insn with uid = 453.
deferring deletion of insn with uid = 450.
deferring deletion of insn with uid = 435.
deferring deletion of insn with uid = 265.
deferring deletion of insn with uid = 264.
deferring deletion of insn with uid = 253.
deferring deletion of insn with uid = 250.
deferring deletion of insn with uid = 183.
deferring deletion of insn with uid = 177.
deferring deletion of insn with uid = 137.
deferring deletion of insn with uid = 117.
deferring deletion of insn with uid = 104.
deferring deletion of insn with uid = 97.
deferring deletion of insn with uid = 95.
deferring deletion of insn with uid = 86.
deferring deletion of insn with uid = 85.
deferring deletion of insn with uid = 83.
deferring deletion of insn with uid = 62.
deferring deletion of insn with uid = 59.
deferring deletion of insn with uid = 56.
deferring deletion of insn with uid = 52.
deferring deletion of insn with uid = 41.
deferring deletion of insn with uid = 38.
deferring deletion of insn with uid = 35.
deferring deletion of insn with uid = 32.
deferring deletion of insn with uid = 15.
Deleted 46 trivially dead insns

Number of successful forward propagations: 5



setup_arch

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={65d,34u} r1={61d,26u} r2={46d,11u} r3={41d,6u} r11={1d,86u} r12={35d} r13={1d,122u} r14={35d,1u} r15={34d} r16={34d} r17={34d} r18={34d} r19={34d} r20={34d} r21={34d} r22={34d} r23={34d} r24={78d,41u} r25={1d,89u,1d} r26={1d,85u} r27={34d} r28={34d} r29={34d} r30={34d} r31={34d} r32={34d} r33={34d} r34={34d} r35={34d} r36={34d} r37={34d} r38={34d} r39={34d} r40={34d} r41={34d} r42={34d} r43={34d} r44={34d} r45={34d} r46={34d} r47={34d} r48={34d} r49={34d} r50={34d} r51={34d} r52={34d} r53={34d} r54={34d} r55={34d} r56={34d} r57={34d} r58={34d} r59={34d} r60={34d} r61={34d} r62={34d} r63={34d} r64={34d} r65={34d} r66={34d} r67={34d} r68={34d} r69={34d} r70={34d} r71={34d} r72={34d} r73={34d} r74={34d} r75={34d} r76={34d} r77={34d} r78={34d} r79={34d} r80={34d} r81={34d} r82={34d} r83={34d} r84={34d} r85={34d} r86={34d} r87={34d} r88={34d} r89={34d} r90={34d} r91={34d} r92={34d} r93={34d} r94={34d} r95={34d} r96={34d} r97={34d} r98={34d} r99={34d} r100={34d} r101={34d} r102={34d} r103={34d} r104={34d} r105={34d} r106={34d} r107={34d} r108={34d} r109={34d} r110={34d} r111={34d} r112={34d} r113={34d} r114={34d} r115={34d} r116={34d} r117={34d} r118={34d} r119={34d} r120={34d} r121={34d} r122={34d} r123={34d} r124={34d} r125={34d} r126={34d} r127={34d} r134={1d} r135={2d,5u} r136={6d,10u} r137={1d} r138={1d} r139={1d,2u} r140={2d,5u} r141={1d,12u} r142={1d,2u} r143={1d,4u} r144={1d,2u} r145={1d,3u} r146={1d,1u} r147={2d,4u} r148={1d,1u} r149={1d,2u} r150={1d,2u} r151={1d,8u} r152={1d,11u,1d} r153={1d} r155={1d} r156={1d} r157={1d} r158={1d,2u} r159={1d,3u} r160={2d,2u} r161={1d,2u} r162={1d,1u} r163={1d,3u} r164={4d,1u} r165={2d,1u} r166={3d,21u} r167={1d,2u} r168={1d,2u} r169={1d,2u} r170={1d,1u} r171={1d,1u} r172={1d,4u} r173={1d,2u} r174={1d,9u} r175={1d,4u} r176={1d,3u} r177={1d} r178={1d} r179={1d,3u} r180={1d,2u} r181={1d} r182={1d} r183={1d,6u} r184={3d,12u} r185={3d,7u} r186={1d,1u} r187={1d} r188={1d,1u} r189={1d,1u} r190={1d} r191={1d,1u} r192={1d,2u} r193={1d} r194={1d,1u} r195={1d,1u} r196={1d,1u} r197={1d,1u} r198={1d,3u} r199={1d,3u} r200={1d,1u} r201={1d,1u} r202={1d} r203={1d,1u} r204={1d} r205={1d} r206={1d,1u} r207={1d,1u} r208={1d} r209={1d,1u} r210={1d,1u} r211={1d,1u} r212={1d,1u,1d} r213={1d,1u} r214={1d,1u} r215={1d,1u} r216={1d,1u} r217={1d,1u} r218={1d} r219={1d,1u} r220={1d,1u} r221={1d,3u} r222={1d,1u} r223={1d,1u} r224={1d} r225={1d,1u} r226={1d,1u} r227={1d,1u} r228={1d,1u} r229={1d,1u} r230={1d,1u} r231={1d,1u} r232={1d,1u} r233={1d,1u} r234={1d,1u} r235={1d,1u} r236={1d,1u,1d} r237={1d,1u} r238={1d,1u} r239={1d,1u} r240={1d,1u} r241={1d} r242={1d,3u} r243={1d} r244={1d,1u} r245={1d,1u} r246={1d,1u} r247={1d,1u} r248={1d,1u} r249={1d,1u} r250={1d,1u} r251={1d,1u} r252={1d,1u} r253={1d,5u} r254={1d,1u} r255={1d} r256={1d,1u} r257={1d} r258={1d,1u} r259={1d,1u} r260={1d,1u} r261={1d,1u} r262={1d,1u} r263={1d,1u} r264={1d,1u} r265={1d,1u} r266={1d,1u} r267={1d,1u} r268={1d,1u} r269={1d,1u} r270={1d,1u} r271={1d,1u} r272={1d,1u} r273={1d,1u} r274={1d,1u} r275={1d,1u} r276={1d,1u} r277={1d,1u} r278={1d,1u} r279={1d,1u} r280={1d,1u} r281={1d,1u} r282={1d,1u} r283={1d,1u} r284={1d,1u} r285={1d,1u} r286={1d,1u} r287={1d,1u} r288={1d,1u} r289={1d} r290={1d,1u} r291={1d,1u} r292={1d,1u} r293={1d,1u} r294={1d,1u} r295={1d,7u} r296={1d} r297={1d,1u} r298={1d} r299={1d,1u} r300={1d} r301={1d,1u} r302={1d,2u} r303={1d,3u} r304={1d,2u} r305={1d,1u} r306={1d} r307={1d} r308={1d} r309={1d,1u} r310={1d,7u} r311={1d,1u} r312={1d} r313={1d,1u} r314={1d} r315={1d,1u} r316={1d} r317={1d,1u} r318={1d,1u} r319={1d,1u} r320={1d,1u} r321={1d,1u,1d} r322={1d,1u} r323={1d,1u} r324={1d,1u} r325={1d,1u} r326={1d,1u} r327={1d,1u} r328={1d,1u} r329={1d,1u} r330={1d,1u} r331={1d,1u} r332={1d,1u} r333={1d,5u} r334={1d,1u} r335={1d,1u} r336={1d} r337={1d,1u} r338={1d,1u} r339={1d} r340={1d,1u} r341={1d,5u} r342={1d,1u} r343={1d,1u} r344={1d} r345={1d,1u} r346={1d,1u} r347={1d} r348={1d,1u} r349={1d,3u} r350={1d} r351={1d,1u} r352={1d,1u} r353={1d,1u} r354={1d,1u} r355={1d,5u} r356={1d} r357={1d,1u} r358={1d,1u} r359={1d} r360={1d} r361={1d,1u} r362={1d,1u} r363={1d,1u} r364={1d,1u} r365={1d,1u} r366={1d,1u} r367={1d,1u} r368={1d} r369={1d,1u} r370={1d,1u} r371={1d,1u} r372={1d,1u} r373={1d,1u} r374={1d,2u} r375={1d} r376={1d,1u} r377={1d} r378={1d,1u} r379={1d,1u} r380={1d,1u} r381={1d,1u} r382={1d,1u} r383={1d,2u} r384={1d} r385={1d,1u} r386={1d,1u} r387={1d,1u} r388={1d,1u} 
;;    total ref usage 5267{4378d,884u,5e} in 439{405 regular + 34 call} insns.
;; Reaching defs:

  sparse invalidated 	0, 1, 2, 3, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127
  dense invalidated 	
0[0,65] 1[65,61] 2[126,46] 3[172,41] 11[213,1] 12[214,35] 13[249,1] 14[250,35] 15[285,34] 16[319,34] 17[353,34] 18[387,34] 19[421,34] 20[455,34] 21[489,34] 22[523,34] 23[557,34] 24[591,78] 25[669,1] 26[670,1] 27[671,34] 28[705,34] 29[739,34] 30[773,34] 31[807,34] 32[841,34] 33[875,34] 34[909,34] 35[943,34] 36[977,34] 37[1011,34] 38[1045,34] 39[1079,34] 40[1113,34] 41[1147,34] 42[1181,34] 43[1215,34] 44[1249,34] 45[1283,34] 46[1317,34] 47[1351,34] 48[1385,34] 49[1419,34] 50[1453,34] 51[1487,34] 52[1521,34] 53[1555,34] 54[1589,34] 55[1623,34] 56[1657,34] 57[1691,34] 58[1725,34] 59[1759,34] 60[1793,34] 61[1827,34] 62[1861,34] 63[1895,34] 64[1929,34] 65[1963,34] 66[1997,34] 67[2031,34] 68[2065,34] 69[2099,34] 70[2133,34] 71[2167,34] 72[2201,34] 73[2235,34] 74[2269,34] 75[2303,34] 76[2337,34] 77[2371,34] 78[2405,34] 79[2439,34] 80[2473,34] 81[2507,34] 82[2541,34] 83[2575,34] 84[2609,34] 85[2643,34] 86[2677,34] 87[2711,34] 88[2745,34] 89[2779,34] 90[2813,34] 91[2847,34] 92[2881,34] 93[2915,34] 94[2949,34] 95[2983,34] 96[3017,34] 97[3051,34] 98[3085,34] 99[3119,34] 100[3153,34] 101[3187,34] 102[3221,34] 103[3255,34] 104[3289,34] 105[3323,34] 106[3357,34] 107[3391,34] 108[3425,34] 109[3459,34] 110[3493,34] 111[3527,34] 112[3561,34] 113[3595,34] 114[3629,34] 115[3663,34] 116[3697,34] 117[3731,34] 118[3765,34] 119[3799,34] 120[3833,34] 121[3867,34] 122[3901,34] 123[3935,34] 124[3969,34] 125[4003,34] 126[4037,34] 127[4071,34] 134[4105,1] 135[4106,2] 136[4108,6] 137[4114,1] 138[4115,1] 139[4116,1] 140[4117,2] 141[4119,1] 142[4120,1] 143[4121,1] 144[4122,1] 145[4123,1] 146[4124,1] 147[4125,2] 148[4127,1] 149[4128,1] 150[4129,1] 151[4130,1] 152[4131,1] 153[4132,1] 155[4133,1] 156[4134,1] 157[4135,1] 158[4136,1] 159[4137,1] 160[4138,2] 161[4140,1] 162[4141,1] 163[4142,1] 164[4143,4] 165[4147,2] 166[4149,3] 167[4152,1] 168[4153,1] 169[4154,1] 170[4155,1] 171[4156,1] 172[4157,1] 173[4158,1] 174[4159,1] 175[4160,1] 176[4161,1] 177[4162,1] 178[4163,1] 179[4164,1] 180[4165,1] 181[4166,1] 182[4167,1] 183[4168,1] 184[4169,3] 185[4172,3] 186[4175,1] 187[4176,1] 188[4177,1] 189[4178,1] 190[4179,1] 191[4180,1] 192[4181,1] 193[4182,1] 194[4183,1] 195[4184,1] 196[4185,1] 197[4186,1] 198[4187,1] 199[4188,1] 200[4189,1] 201[4190,1] 202[4191,1] 203[4192,1] 204[4193,1] 205[4194,1] 206[4195,1] 207[4196,1] 208[4197,1] 209[4198,1] 210[4199,1] 211[4200,1] 212[4201,1] 213[4202,1] 214[4203,1] 215[4204,1] 216[4205,1] 217[4206,1] 218[4207,1] 219[4208,1] 220[4209,1] 221[4210,1] 222[4211,1] 223[4212,1] 224[4213,1] 225[4214,1] 226[4215,1] 227[4216,1] 228[4217,1] 229[4218,1] 230[4219,1] 231[4220,1] 232[4221,1] 233[4222,1] 234[4223,1] 235[4224,1] 236[4225,1] 237[4226,1] 238[4227,1] 239[4228,1] 240[4229,1] 241[4230,1] 242[4231,1] 243[4232,1] 244[4233,1] 245[4234,1] 246[4235,1] 247[4236,1] 248[4237,1] 249[4238,1] 250[4239,1] 251[4240,1] 252[4241,1] 253[4242,1] 254[4243,1] 255[4244,1] 256[4245,1] 257[4246,1] 258[4247,1] 259[4248,1] 260[4249,1] 261[4250,1] 262[4251,1] 263[4252,1] 264[4253,1] 265[4254,1] 266[4255,1] 267[4256,1] 268[4257,1] 269[4258,1] 270[4259,1] 271[4260,1] 272[4261,1] 273[4262,1] 274[4263,1] 275[4264,1] 276[4265,1] 277[4266,1] 278[4267,1] 279[4268,1] 280[4269,1] 281[4270,1] 282[4271,1] 283[4272,1] 284[4273,1] 285[4274,1] 286[4275,1] 287[4276,1] 288[4277,1] 289[4278,1] 290[4279,1] 291[4280,1] 292[4281,1] 293[4282,1] 294[4283,1] 295[4284,1] 296[4285,1] 297[4286,1] 298[4287,1] 299[4288,1] 300[4289,1] 301[4290,1] 302[4291,1] 303[4292,1] 304[4293,1] 305[4294,1] 306[4295,1] 307[4296,1] 308[4297,1] 309[4298,1] 310[4299,1] 311[4300,1] 312[4301,1] 313[4302,1] 314[4303,1] 315[4304,1] 316[4305,1] 317[4306,1] 318[4307,1] 319[4308,1] 320[4309,1] 321[4310,1] 322[4311,1] 323[4312,1] 324[4313,1] 325[4314,1] 326[4315,1] 327[4316,1] 328[4317,1] 329[4318,1] 330[4319,1] 331[4320,1] 332[4321,1] 333[4322,1] 334[4323,1] 335[4324,1] 336[4325,1] 337[4326,1] 338[4327,1] 339[4328,1] 340[4329,1] 341[4330,1] 342[4331,1] 343[4332,1] 344[4333,1] 345[4334,1] 346[4335,1] 347[4336,1] 348[4337,1] 349[4338,1] 350[4339,1] 351[4340,1] 352[4341,1] 353[4342,1] 354[4343,1] 355[4344,1] 356[4345,1] 357[4346,1] 358[4347,1] 359[4348,1] 360[4349,1] 361[4350,1] 362[4351,1] 363[4352,1] 364[4353,1] 365[4354,1] 366[4355,1] 367[4356,1] 368[4357,1] 369[4358,1] 370[4359,1] 371[4360,1] 372[4361,1] 373[4362,1] 374[4363,1] 375[4364,1] 376[4365,1] 377[4366,1] 378[4367,1] 379[4368,1] 380[4369,1] 381[4370,1] 382[4371,1] 383[4372,1] 384[4373,1] 385[4374,1] 386[4375,1] 387[4376,1] 388[4377,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 151 152 170
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 24 [cc] 151 152 170
;; live  kill	 14 [lr] 24 [cc]
;; rd  in  	(10)
64, 125, 171, 212, 213, 248, 249, 284, 669, 670
;; rd  gen 	(5)
61, 665, 4130, 4131, 4155
;; rd  kill	(3)
4130, 4131, 4155

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 0 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 3 5 4 2 arch/arm/kernel/setup.c:881 (set (reg/v/f:SI 170 [ cmdline_p ])
        (reg:SI 0 r0 [ cmdline_p ])) 167 {*arm_movsi_insn} (nil))

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(call_insn 7 4 8 2 arch/arm/kernel/setup.c:884 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("unwind_init") [flags 0x41] <function_decl 0x115a7a00 unwind_init>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (nil))

(insn 8 7 9 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/cputype.h:60 (parallel [
            (set (reg/v:SI 152 [ __val ])
                (asm_operands:SI ("mrc	p15, 0, %0, c0, c0, 0") ("=r") 0 []
                     [] 8199339))
            (clobber (reg:QI 24 cc))
        ]) -1 (nil))

(insn 9 8 10 2 arch/arm/kernel/setup.c:409 (set (reg:SI 0 r0)
        (reg/v:SI 152 [ __val ])) 167 {*arm_movsi_insn} (nil))

(call_insn 10 9 11 2 arch/arm/kernel/setup.c:409 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("lookup_processor_type") [flags 0x41] <function_decl 0x115c3180 lookup_processor_type>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 11 10 12 2 arch/arm/kernel/setup.c:409 (set (reg/v/f:SI 151 [ list ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 12 11 13 2 arch/arm/kernel/setup.c:410 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 151 [ list ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 13 12 14 2 arch/arm/kernel/setup.c:410 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 24)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 0 [0x0])
        (nil)))
;; End of basic block 2 -> ( 3 5)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 152 170
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 152 170
;; rd  out 	(13)
61, 125, 171, 212, 213, 248, 249, 665, 669, 670, 4130, 4131, 4155


;; Succ edge  3 [100.0%]  (fallthru)
;; Succ edge  5

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u12(11){ }u13(13){ }u14(25){ }u15(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 153 171
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152
;; live  gen 	 0 [r0] 1 [r1] 153 171
;; live  kill	 14 [lr]
;; rd  in  	(13)
61, 125, 171, 212, 213, 248, 249, 665, 669, 670, 4130, 4131, 4155
;; rd  gen 	(3)
59, 4132, 4156
;; rd  kill	(2)
4132, 4156

;; Pred edge  2 [100.0%]  (fallthru)
(note 14 13 16 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 16 14 17 3 arch/arm/kernel/setup.c:411 (set (reg/f:SI 171)
        (symbol_ref/v/f:SI ("*.LC24") [flags 0x82] <string_cst 0x1120c8a0>)) 167 {*arm_movsi_insn} (nil))

(insn 17 16 18 3 arch/arm/kernel/setup.c:411 (set (reg:SI 0 r0)
        (reg/f:SI 171)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC24") [flags 0x82] <string_cst 0x1120c8a0>)
        (nil)))

(insn 18 17 19 3 arch/arm/kernel/setup.c:411 (set (reg:SI 1 r1)
        (reg/v:SI 152 [ __val ])) 167 {*arm_movsi_insn} (nil))

(call_insn 19 18 21 3 arch/arm/kernel/setup.c:411 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(15)
59, 125, 171, 212, 213, 248, 249, 665, 669, 670, 4130, 4131, 4132, 4155, 4156


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u22(11){ }u23(13){ }u24(25){ }u25(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(15)
59, 125, 171, 212, 213, 248, 249, 665, 669, 670, 4130, 4131, 4132, 4155, 4156
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 21 19 20 4 108 "" [0 uses])

(note 20 21 24 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 4 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(15)
59, 125, 171, 212, 213, 248, 249, 665, 669, 670, 4130, 4131, 4132, 4155, 4156


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u26(11){ }u27(13){ }u28(25){ }u29(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 152 170
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 152
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 149 150 155 156 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 152 170
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc] 149 150 155 156 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211
;; live  kill	 14 [lr]
;; rd  in  	(13)
61, 125, 171, 212, 213, 248, 249, 665, 669, 670, 4130, 4131, 4155
;; rd  gen 	(46)
50, 659, 4128, 4129, 4133, 4134, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200
;; rd  kill	(48)
4128, 4129, 4133, 4134, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4169, 4170, 4171, 4172, 4173, 4174, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200

;; Pred edge  2
(code_label 24 20 25 5 107 "" [1 uses])

(note 25 24 26 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 26 25 27 5 arch/arm/kernel/setup.c:416 (set (reg/f:SI 172)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 27 26 28 5 arch/arm/kernel/setup.c:416 (set (reg/f:SI 173 [ <variable>.cpu_name ])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 151 [ list ])
                (const_int 32 [0x20])) [0 <variable>.cpu_name+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 28 27 29 5 arch/arm/kernel/setup.c:416 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 172)
                (const_int 12 [0xc])) [0 cpu_name+0 S4 A32])
        (reg/f:SI 173 [ <variable>.cpu_name ])) 167 {*arm_movsi_insn} (nil))

(insn 29 28 30 5 arch/arm/kernel/setup.c:422 (set (reg/f:SI 174)
        (symbol_ref:SI ("*.LANCHOR3") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 30 29 31 5 arch/arm/kernel/setup.c:422 (set (reg/f:SI 175 [ <variable>.tlb ])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 151 [ list ])
                (const_int 40 [0x28])) [0 <variable>.tlb+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 31 30 33 5 arch/arm/kernel/setup.c:422 (set (reg/f:SI 176)
        (plus:SI (reg/f:SI 174)
            (const_int 4 [0x4]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR3") [flags 0x182])
                (const_int 4 [0x4])))
        (nil)))

(insn 33 31 34 5 arch/arm/kernel/setup.c:422 (parallel [
            (set (reg:SI 0 r0)
                (mem/s:SI (reg/f:SI 175 [ <variable>.tlb ]) [0 S4 A32]))
            (set (reg:SI 1 r1)
                (mem/s:SI (plus:SI (reg/f:SI 175 [ <variable>.tlb ])
                        (const_int 4 [0x4])) [0 S4 A32]))
            (set (reg:SI 2 r2)
                (mem/s:SI (plus:SI (reg/f:SI 175 [ <variable>.tlb ])
                        (const_int 8 [0x8])) [0 S4 A32]))
        ]) 189 {*ldmsi3} (nil))

(insn 34 33 36 5 arch/arm/kernel/setup.c:422 (parallel [
            (set (mem/s/c:SI (reg/f:SI 176) [0 cpu_tlb+0 S4 A32])
                (reg:SI 0 r0))
            (set (mem/s/c:SI (plus:SI (reg/f:SI 176)
                        (const_int 4 [0x4])) [0 cpu_tlb+4 S4 A32])
                (reg:SI 1 r1))
            (set (mem/s/c:SI (plus:SI (reg/f:SI 176)
                        (const_int 8 [0x8])) [0 cpu_tlb+8 S4 A32])
                (reg:SI 2 r2))
        ]) 196 {*stmsi3} (nil))

(insn 36 34 37 5 arch/arm/kernel/setup.c:425 (set (reg/f:SI 179 [ <variable>.user ])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 151 [ list ])
                (const_int 44 [0x2c])) [0 <variable>.user+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 37 36 39 5 arch/arm/kernel/setup.c:425 (set (reg/f:SI 180)
        (plus:SI (reg/f:SI 174)
            (const_int 16 [0x10]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR3") [flags 0x182])
                (const_int 16 [0x10])))
        (nil)))

(insn 39 37 40 5 arch/arm/kernel/setup.c:425 (parallel [
            (set (reg:SI 0 r0)
                (mem/s:SI (reg/f:SI 179 [ <variable>.user ]) [0 S4 A32]))
            (set (reg:SI 1 r1)
                (mem/s:SI (plus:SI (reg/f:SI 179 [ <variable>.user ])
                        (const_int 4 [0x4])) [0 S4 A32]))
        ]) 190 {*ldmsi2} (nil))

(insn 40 39 42 5 arch/arm/kernel/setup.c:425 (parallel [
            (set (mem/s/c:SI (reg/f:SI 180) [0 cpu_user+0 S4 A32])
                (reg:SI 0 r0))
            (set (mem/s/c:SI (plus:SI (reg/f:SI 180)
                        (const_int 4 [0x4])) [0 cpu_user+4 S4 A32])
                (reg:SI 1 r1))
        ]) 197 {*stmsi2} (nil))

(insn 42 40 43 5 arch/arm/kernel/setup.c:428 (set (reg/f:SI 183 [ <variable>.cache ])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 151 [ list ])
                (const_int 48 [0x30])) [0 <variable>.cache+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 43 42 44 5 arch/arm/kernel/setup.c:428 (set (reg:SI 184)
        (plus:SI (reg/f:SI 174)
            (const_int 24 [0x18]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR3") [flags 0x182])
                (const_int 24 [0x18])))
        (nil)))

(insn 44 43 45 5 arch/arm/kernel/setup.c:428 (set (reg/f:SI 185 [ <variable>.cache ])
        (reg/f:SI 183 [ <variable>.cache ])) 167 {*arm_movsi_insn} (nil))

(insn 45 44 46 5 arch/arm/kernel/setup.c:428 (parallel [
            (set (reg/f:SI 185 [ <variable>.cache ])
                (plus:SI (reg/f:SI 183 [ <variable>.cache ])
                    (const_int 16 [0x10])))
            (set (reg:SI 0 r0)
                (mem/s:SI (reg/f:SI 183 [ <variable>.cache ]) [0 S4 A32]))
            (set (reg:SI 1 r1)
                (mem/s:SI (plus:SI (reg/f:SI 183 [ <variable>.cache ])
                        (const_int 4 [0x4])) [0 S4 A32]))
            (set (reg:SI 2 r2)
                (mem/s:SI (plus:SI (reg/f:SI 183 [ <variable>.cache ])
                        (const_int 8 [0x8])) [0 S4 A32]))
            (set (reg:SI 3 r3)
                (mem/s:SI (plus:SI (reg/f:SI 183 [ <variable>.cache ])
                        (const_int 12 [0xc])) [0 S4 A32]))
        ]) 184 {*ldmsi_postinc4} (nil))

(insn 46 45 47 5 arch/arm/kernel/setup.c:428 (parallel [
            (set (reg:SI 184)
                (plus:SI (reg:SI 184)
                    (const_int 16 [0x10])))
            (set (mem/s/c:SI (reg:SI 184) [0 cpu_cache+0 S4 A32])
                (reg:SI 0 r0))
            (set (mem/s/c:SI (plus:SI (reg:SI 184)
                        (const_int 4 [0x4])) [0 cpu_cache+4 S4 A32])
                (reg:SI 1 r1))
            (set (mem/s/c:SI (plus:SI (reg:SI 184)
                        (const_int 8 [0x8])) [0 cpu_cache+8 S4 A32])
                (reg:SI 2 r2))
            (set (mem/s/c:SI (plus:SI (reg:SI 184)
                        (const_int 12 [0xc])) [0 cpu_cache+12 S4 A32])
                (reg:SI 3 r3))
        ]) 191 {*stmsi_postinc4} (nil))

(insn 47 46 48 5 arch/arm/kernel/setup.c:428 (parallel [
            (set (reg/f:SI 185 [ <variable>.cache ])
                (plus:SI (reg/f:SI 185 [ <variable>.cache ])
                    (const_int 16 [0x10])))
            (set (reg:SI 0 r0)
                (mem/s:SI (reg/f:SI 185 [ <variable>.cache ]) [0 S4 A32]))
            (set (reg:SI 1 r1)
                (mem/s:SI (plus:SI (reg/f:SI 185 [ <variable>.cache ])
                        (const_int 4 [0x4])) [0 S4 A32]))
            (set (reg:SI 2 r2)
                (mem/s:SI (plus:SI (reg/f:SI 185 [ <variable>.cache ])
                        (const_int 8 [0x8])) [0 S4 A32]))
            (set (reg:SI 3 r3)
                (mem/s:SI (plus:SI (reg/f:SI 185 [ <variable>.cache ])
                        (const_int 12 [0xc])) [0 S4 A32]))
        ]) 184 {*ldmsi_postinc4} (nil))

(insn 48 47 49 5 arch/arm/kernel/setup.c:428 (parallel [
            (set (reg:SI 184)
                (plus:SI (reg:SI 184)
                    (const_int 16 [0x10])))
            (set (mem/s/c:SI (reg:SI 184) [0 cpu_cache+16 S4 A32])
                (reg:SI 0 r0))
            (set (mem/s/c:SI (plus:SI (reg:SI 184)
                        (const_int 4 [0x4])) [0 cpu_cache+20 S4 A32])
                (reg:SI 1 r1))
            (set (mem/s/c:SI (plus:SI (reg:SI 184)
                        (const_int 8 [0x8])) [0 cpu_cache+24 S4 A32])
                (reg:SI 2 r2))
            (set (mem/s/c:SI (plus:SI (reg:SI 184)
                        (const_int 12 [0xc])) [0 cpu_cache+28 S4 A32])
                (reg:SI 3 r3))
        ]) 191 {*stmsi_postinc4} (nil))

(insn 49 48 50 5 arch/arm/kernel/setup.c:428 (parallel [
            (set (reg:SI 0 r0)
                (mem/s:SI (reg/f:SI 185 [ <variable>.cache ]) [0 S4 A32]))
            (set (reg:SI 1 r1)
                (mem/s:SI (plus:SI (reg/f:SI 185 [ <variable>.cache ])
                        (const_int 4 [0x4])) [0 S4 A32]))
        ]) 190 {*ldmsi2} (nil))

(insn 50 49 53 5 arch/arm/kernel/setup.c:428 (parallel [
            (set (mem/s/c:SI (reg:SI 184) [0 cpu_cache+32 S4 A32])
                (reg:SI 0 r0))
            (set (mem/s/c:SI (plus:SI (reg:SI 184)
                        (const_int 4 [0x4])) [0 cpu_cache+36 S4 A32])
                (reg:SI 1 r1))
        ]) 197 {*stmsi2} (nil))

(call_insn/u 53 50 54 5 arch/arm/kernel/setup.c:433 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("cpu_architecture") [flags 0x3] <function_decl 0x512d9700 cpu_architecture>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))

(insn 54 53 55 5 arch/arm/kernel/setup.c:433 (set (reg:SI 149 [ D.26287 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 55 54 57 5 arch/arm/kernel/setup.c:431 (set (reg/f:SI 186)
        (symbol_ref/v/f:SI ("*.LC25") [flags 0x82] <string_cst 0x11679cd0>)) 167 {*arm_movsi_insn} (nil))

(insn 57 55 58 5 arch/arm/kernel/setup.c:431 (set (reg:SI 188)
        (and:SI (reg/v:SI 152 [ __val ])
            (const_int 15 [0xf]))) 67 {*arm_andsi3_insn} (nil))

(insn 58 57 60 5 arch/arm/kernel/setup.c:431 (set (reg/f:SI 189)
        (symbol_ref:SI ("*.LANCHOR4") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 60 58 61 5 arch/arm/kernel/setup.c:431 (set (reg:SI 191)
        (ashift:SI (reg:SI 149 [ D.26287 ])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (nil))

(insn 61 60 63 5 arch/arm/kernel/setup.c:431 (set (reg:SI 192)
        (plus:SI (reg/f:SI 189)
            (reg:SI 191))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (plus:SI (reg:SI 191)
            (symbol_ref:SI ("*.LANCHOR4") [flags 0x182]))
        (nil)))

(insn 63 61 64 5 arch/arm/kernel/setup.c:431 (set (reg/f:SI 194)
        (mem/s/u/f/j:SI (plus:SI (reg:SI 192)
                (const_int 80 [0x50])) [0 proc_arch S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 64 63 65 5 arch/arm/kernel/setup.c:431 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg/f:SI 194)) 167 {*arm_movsi_insn} (nil))

(insn 65 64 66 5 arch/arm/kernel/setup.c:431 (set (reg/f:SI 195)
        (symbol_ref:SI ("cr_alignment") [flags 0xc0] <var_decl 0x512cff60 cr_alignment>)) 167 {*arm_movsi_insn} (nil))

(insn 66 65 67 5 arch/arm/kernel/setup.c:431 (set (reg:SI 196 [ cr_alignment ])
        (mem/c/i:SI (reg/f:SI 195) [0 cr_alignment+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 67 66 68 5 arch/arm/kernel/setup.c:431 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 196 [ cr_alignment ])) 167 {*arm_movsi_insn} (nil))

(insn 68 67 69 5 arch/arm/kernel/setup.c:431 (set (reg:SI 0 r0)
        (reg/f:SI 186)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC25") [flags 0x82] <string_cst 0x11679cd0>)
        (nil)))

(insn 69 68 70 5 arch/arm/kernel/setup.c:431 (set (reg:SI 1 r1)
        (reg/f:SI 173 [ <variable>.cpu_name ])) 167 {*arm_movsi_insn} (nil))

(insn 70 69 71 5 arch/arm/kernel/setup.c:431 (set (reg:SI 2 r2)
        (reg/v:SI 152 [ __val ])) 167 {*arm_movsi_insn} (nil))

(insn 71 70 72 5 arch/arm/kernel/setup.c:431 (set (reg:SI 3 r3)
        (reg:SI 188)) 167 {*arm_movsi_insn} (nil))

(call_insn 72 71 73 5 arch/arm/kernel/setup.c:431 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 73 72 74 5 arch/arm/kernel/setup.c:435 (set (reg/f:SI 197)
        (const:SI (plus:SI (symbol_ref:SI ("init_uts_ns") [flags 0xc0] <var_decl 0x1101bcc0 init_uts_ns>)
                (const_int 264 [0x108])))) 167 {*arm_movsi_insn} (nil))

(insn 74 73 75 5 arch/arm/kernel/setup.c:435 (set (reg/f:SI 198)
        (symbol_ref/v/f:SI ("*.LC26") [flags 0x82] <string_cst 0x1171b100>)) 167 {*arm_movsi_insn} (nil))

(insn 75 74 76 5 arch/arm/kernel/setup.c:435 (set (reg/f:SI 199)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 76 75 77 5 arch/arm/kernel/setup.c:435 (set (reg:SI 200 [ endian_test.l ])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 199)
                (const_int 1032 [0x408])) [0 endian_test.l+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 77 76 78 5 arch/arm/kernel/setup.c:435 (set (reg:SI 201 [ endian_test.l ])
        (zero_extend:SI (subreg:QI (reg:SI 200 [ endian_test.l ]) 0))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 78 77 79 5 arch/arm/kernel/setup.c:435 (set (reg:SI 0 r0)
        (reg/f:SI 197)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("init_uts_ns") [flags 0xc0] <var_decl 0x1101bcc0 init_uts_ns>)
                (const_int 264 [0x108])))
        (nil)))

(insn 79 78 80 5 arch/arm/kernel/setup.c:435 (set (reg:SI 1 r1)
        (reg/f:SI 198)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC26") [flags 0x82] <string_cst 0x1171b100>)
        (nil)))

(insn 80 79 81 5 arch/arm/kernel/setup.c:435 (set (reg:SI 2 r2)
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 151 [ list ])
                (const_int 20 [0x14])) [0 <variable>.arch_name+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 81 80 82 5 arch/arm/kernel/setup.c:435 (set (reg:SI 3 r3)
        (reg:SI 201 [ endian_test.l ])) 167 {*arm_movsi_insn} (nil))

(call_insn 82 81 84 5 arch/arm/kernel/setup.c:435 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sprintf") [flags 0x41] <function_decl 0x5115e780 sprintf>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 84 82 87 5 arch/arm/kernel/setup.c:436 (set (reg/f:SI 203)
        (plus:SI (reg/f:SI 172)
            (const_int 16 [0x10]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 16 [0x10])))
        (nil)))

(insn 87 84 88 5 arch/arm/kernel/setup.c:436 (set (reg:SI 206 [ endian_test.l ])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 199)
                (const_int 1032 [0x408])) [0 endian_test.l+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 88 87 89 5 arch/arm/kernel/setup.c:436 (set (reg:SI 207 [ endian_test.l ])
        (zero_extend:SI (subreg:QI (reg:SI 206 [ endian_test.l ]) 0))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 89 88 90 5 arch/arm/kernel/setup.c:436 (set (reg:SI 0 r0)
        (reg/f:SI 203)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 16 [0x10])))
        (nil)))

(insn 90 89 91 5 arch/arm/kernel/setup.c:436 (set (reg:SI 1 r1)
        (reg/f:SI 198)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC26") [flags 0x82] <string_cst 0x1171b100>)
        (nil)))

(insn 91 90 92 5 arch/arm/kernel/setup.c:436 (set (reg:SI 2 r2)
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 151 [ list ])
                (const_int 24 [0x18])) [0 <variable>.elf_name+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 92 91 93 5 arch/arm/kernel/setup.c:436 (set (reg:SI 3 r3)
        (reg:SI 207 [ endian_test.l ])) 167 {*arm_movsi_insn} (nil))

(call_insn 93 92 94 5 arch/arm/kernel/setup.c:436 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sprintf") [flags 0x41] <function_decl 0x5115e780 sprintf>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 94 93 96 5 arch/arm/kernel/setup.c:437 (set (reg:SI 150 [ elf_hwcap.351 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 151 [ list ])
                (const_int 28 [0x1c])) [0 <variable>.elf_hwcap+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 96 94 98 5 arch/arm/kernel/setup.c:437 (set (mem/c/i:SI (reg/f:SI 174) [0 elf_hwcap+0 S4 A32])
        (reg:SI 150 [ elf_hwcap.351 ])) 167 {*arm_movsi_insn} (nil))

(insn 98 96 99 5 arch/arm/kernel/setup.c:336 (set (reg:SI 210)
        (const_int -15794176 [0xffffffffff0f0000])) 167 {*arm_movsi_insn} (nil))

(insn 99 98 100 5 arch/arm/kernel/setup.c:336 (set (reg:SI 209)
        (and:SI (reg/v:SI 152 [ __val ])
            (reg:SI 210))) 67 {*arm_andsi3_insn} (expr_list:REG_EQUAL (and:SI (reg/v:SI 152 [ __val ])
            (const_int -15794176 [0xffffffffff0f0000]))
        (nil)))

(insn 100 99 101 5 arch/arm/kernel/setup.c:336 (set (reg:SI 211)
        (const_int 1090977792 [0x41070000])) 167 {*arm_movsi_insn} (nil))

(insn 101 100 102 5 arch/arm/kernel/setup.c:336 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 209)
            (reg:SI 211))) 219 {*arm_cmpsi_insn} (expr_list:REG_EQUAL (compare:CC (reg:SI 209)
            (const_int 1090977792 [0x41070000]))
        (nil)))

(jump_insn 102 101 103 5 arch/arm/kernel/setup.c:336 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 120)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
        (nil)))
;; End of basic block 5 -> ( 9 6)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 152 170 174
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 152 170 174
;; rd  out 	(57)
50, 125, 171, 212, 213, 248, 249, 659, 669, 670, 4128, 4129, 4130, 4131, 4133, 4134, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200


;; Succ edge  9 [72.0%] 
;; Succ edge  6 [28.0%]  (fallthru)

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u154(11){ }u155(13){ }u156(25){ }u157(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 152 170 174
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152
;; lr  def 	 24 [cc] 157 212 213 214 215
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 152 170 174
;; live  gen 	 24 [cc] 157 212 213 214 215
;; live  kill	
;; rd  in  	(57)
50, 125, 171, 212, 213, 248, 249, 659, 669, 670, 4128, 4129, 4130, 4131, 4133, 4134, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200
;; rd  gen 	(6)
658, 4135, 4201, 4202, 4203, 4204
;; rd  kill	(5)
4135, 4201, 4202, 4203, 4204

;; Pred edge  5 [28.0%]  (fallthru)
(note 103 102 105 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 105 103 106 6 arch/arm/kernel/setup.c:343 (set (reg:SI 212)
        (ashiftrt:SI (reg/v:SI 152 [ __val ])
            (const_int 4 [0x4]))) 117 {*arm_shiftsi3} (nil))

(insn 106 105 107 6 arch/arm/kernel/setup.c:343 (set (reg:SI 214)
        (ashift:SI (reg:SI 212)
            (const_int 20 [0x14]))) 117 {*arm_shiftsi3} (nil))

(insn 107 106 108 6 arch/arm/kernel/setup.c:343 (set (reg:SI 213)
        (lshiftrt:SI (reg:SI 214)
            (const_int 20 [0x14]))) 117 {*arm_shiftsi3} (expr_list:REG_EQUAL (and:SI (reg:SI 212)
            (const_int 4095 [0xfff]))
        (nil)))

(insn 108 107 109 6 arch/arm/kernel/setup.c:343 (set (reg:SI 215)
        (const_int 2870 [0xb36])) 167 {*arm_movsi_insn} (nil))

(insn 109 108 110 6 arch/arm/kernel/setup.c:343 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 213)
            (reg:SI 215))) 219 {*arm_cmpsi_insn} (expr_list:REG_EQUAL (compare:CC (reg:SI 213)
            (const_int 2870 [0xb36]))
        (nil)))

(jump_insn 110 109 111 6 arch/arm/kernel/setup.c:343 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 120)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
        (nil)))
;; End of basic block 6 -> ( 7 9)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 152 170 174
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 152 170 174
;; rd  out 	(62)
50, 125, 171, 212, 213, 248, 249, 658, 669, 670, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204


;; Succ edge  7 [28.0%]  (fallthru)
;; Succ edge  9 [72.0%] 

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u166(11){ }u167(13){ }u168(25){ }u169(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 152 170 174
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152
;; lr  def 	 24 [cc] 216 217
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 152 170 174
;; live  gen 	 24 [cc] 216 217
;; live  kill	
;; rd  in  	(62)
50, 125, 171, 212, 213, 248, 249, 658, 669, 670, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204
;; rd  gen 	(3)
657, 4205, 4206
;; rd  kill	(2)
4205, 4206

;; Pred edge  6 [28.0%]  (fallthru)
(note 111 110 112 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 112 111 113 7 arch/arm/kernel/setup.c:343 discrim 1 (set (reg:SI 216)
        (ashiftrt:SI (reg/v:SI 152 [ __val ])
            (const_int 20 [0x14]))) 117 {*arm_shiftsi3} (nil))

(insn 113 112 114 7 arch/arm/kernel/setup.c:343 discrim 1 (set (reg:SI 217)
        (and:SI (reg:SI 216)
            (const_int 3 [0x3]))) 67 {*arm_andsi3_insn} (nil))

(insn 114 113 115 7 arch/arm/kernel/setup.c:343 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 217)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 115 114 116 7 arch/arm/kernel/setup.c:343 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 120)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 7 -> ( 8 9)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 170 174
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 170 174
;; rd  out 	(64)
50, 125, 171, 212, 213, 248, 249, 657, 669, 670, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206


;; Succ edge  8 [50.0%]  (fallthru)
;; Succ edge  9 [50.0%] 

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u174(11){ }u175(13){ }u176(25){ }u177(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 170 174
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 174
;; lr  def 	 218 219
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 170 174
;; live  gen 	 218 219
;; live  kill	
;; rd  in  	(64)
50, 125, 171, 212, 213, 248, 249, 657, 669, 670, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206
;; rd  gen 	(2)
4207, 4208
;; rd  kill	(2)
4207, 4208

;; Pred edge  7 [50.0%]  (fallthru)
(note 116 115 118 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 118 116 119 8 arch/arm/kernel/setup.c:344 (set (reg:SI 219)
        (and:SI (reg:SI 150 [ elf_hwcap.351 ])
            (const_int -32769 [0xffffffffffff7fff]))) 67 {*arm_andsi3_insn} (nil))

(insn 119 118 120 8 arch/arm/kernel/setup.c:344 (set (mem/c/i:SI (reg/f:SI 174) [0 elf_hwcap+0 S4 A32])
        (reg:SI 219)) 167 {*arm_movsi_insn} (nil))
;; End of basic block 8 -> ( 9)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 170
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 170
;; rd  out 	(66)
50, 125, 171, 212, 213, 248, 249, 657, 669, 670, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208


;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 5 6 7 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u182(11){ }u183(13){ }u184(25){ }u185(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 170
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149
;; lr  def 	 24 [cc] 163
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 170
;; live  gen 	 24 [cc] 163
;; live  kill	 24 [cc]
;; rd  in  	(68)
50, 125, 171, 212, 213, 248, 249, 657, 658, 659, 669, 670, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208
;; rd  gen 	(2)
655, 4142
;; rd  kill	(1)
4142

;; Pred edge  5 [72.0%] 
;; Pred edge  6 [72.0%] 
;; Pred edge  7 [50.0%] 
;; Pred edge  8 [100.0%]  (fallthru)
(code_label 120 119 121 9 109 "" [3 uses])

(note 121 120 122 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 122 121 123 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/cputype.h:65 (parallel [
            (set (reg/v:SI 163 [ cachetype ])
                (asm_operands:SI ("mrc	p15, 0, %0, c0, c0, 1") ("=r") 0 []
                     [] 8199979))
            (clobber (reg:QI 24 cc))
        ]) -1 (nil))

(insn 123 122 124 9 arch/arm/kernel/setup.c:278 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 149 [ D.26287 ])
            (const_int 7 [0x7]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 124 123 125 9 arch/arm/kernel/setup.c:278 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 189)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 9 -> ( 10 19)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163 170
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163 170
;; rd  out 	(67)
50, 125, 171, 212, 213, 248, 249, 655, 669, 670, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4142, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208


;; Succ edge  10 [50.0%]  (fallthru)
;; Succ edge  19 [50.0%] 

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u188(11){ }u189(13){ }u190(25){ }u191(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163 170
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163
;; lr  def 	 24 [cc] 220
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163 170
;; live  gen 	 24 [cc] 220
;; live  kill	
;; rd  in  	(67)
50, 125, 171, 212, 213, 248, 249, 655, 669, 670, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4142, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208
;; rd  gen 	(2)
654, 4209
;; rd  kill	(1)
4209

;; Pred edge  9 [50.0%]  (fallthru)
(note 125 124 126 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 126 125 127 10 arch/arm/kernel/setup.c:281 (set (reg:SI 220)
        (and:SI (reg/v:SI 163 [ cachetype ])
            (const_int -536870912 [0xffffffffe0000000]))) 67 {*arm_andsi3_insn} (nil))

(insn 127 126 128 10 arch/arm/kernel/setup.c:281 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 220)
            (const_int -2147483648 [0xffffffff80000000]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 128 127 129 10 arch/arm/kernel/setup.c:281 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 142)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
        (nil)))
;; End of basic block 10 -> ( 11 13)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163 170
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163 170
;; rd  out 	(68)
50, 125, 171, 212, 213, 248, 249, 654, 669, 670, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4142, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209


;; Succ edge  11 [28.0%]  (fallthru)
;; Succ edge  13 [72.0%] 

;; Start of basic block ( 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u195(11){ }u196(13){ }u197(25){ }u198(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163 170
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163
;; lr  def 	 24 [cc] 221 222 223
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163 170
;; live  gen 	 24 [cc] 221 222 223
;; live  kill	
;; rd  in  	(68)
50, 125, 171, 212, 213, 248, 249, 654, 669, 670, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4142, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209
;; rd  gen 	(4)
653, 4210, 4211, 4212
;; rd  kill	(3)
4210, 4211, 4212

;; Pred edge  10 [28.0%]  (fallthru)
(note 129 128 130 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 130 129 131 11 arch/arm/kernel/setup.c:284 (set (reg/f:SI 221)
        (symbol_ref:SI ("*.LANCHOR3") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 131 130 132 11 arch/arm/kernel/setup.c:284 (set (reg:SI 222)
        (const_int 2 [0x2])) 167 {*arm_movsi_insn} (nil))

(insn 132 131 133 11 arch/arm/kernel/setup.c:284 (set (mem/c/i:SI (plus:SI (reg/f:SI 221)
                (const_int 64 [0x40])) [0 cacheid+0 S4 A32])
        (reg:SI 222)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 2 [0x2])
        (nil)))

(insn 133 132 134 11 arch/arm/kernel/setup.c:285 (set (reg:SI 223)
        (and:SI (reg/v:SI 163 [ cachetype ])
            (const_int 49152 [0xc000]))) 67 {*arm_andsi3_insn} (nil))

(insn 134 133 135 11 arch/arm/kernel/setup.c:285 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 223)
            (const_int 16384 [0x4000]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 135 134 136 11 arch/arm/kernel/setup.c:285 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 160)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
        (nil)))
;; End of basic block 11 -> ( 12 16)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 170 221
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 170 221
;; rd  out 	(71)
50, 125, 171, 212, 213, 248, 249, 653, 669, 670, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4142, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212


;; Succ edge  12 [28.0%]  (fallthru)
;; Succ edge  16 [72.0%] 

;; Start of basic block ( 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u204(11){ }u205(13){ }u206(25){ }u207(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 170 221
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 221
;; lr  def 	 224 225
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 170 221
;; live  gen 	 224 225
;; live  kill	
;; rd  in  	(71)
50, 125, 171, 212, 213, 248, 249, 653, 669, 670, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4142, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212
;; rd  gen 	(2)
4213, 4214
;; rd  kill	(2)
4213, 4214

;; Pred edge  11 [28.0%]  (fallthru)
(note 136 135 138 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 138 136 139 12 arch/arm/kernel/setup.c:286 (set (reg:SI 225)
        (const_int 10 [0xa])) 167 {*arm_movsi_insn} (nil))

(insn 139 138 142 12 arch/arm/kernel/setup.c:286 (set (mem/c/i:SI (plus:SI (reg/f:SI 221)
                (const_int 64 [0x40])) [0 cacheid+0 S4 A32])
        (reg:SI 225)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 10 [0xa])
        (nil)))
;; End of basic block 12 -> ( 16)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 170
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 170
;; rd  out 	(73)
50, 125, 171, 212, 213, 248, 249, 653, 669, 670, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4142, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214


;; Succ edge  16 [100.0%]  (fallthru)

;; Start of basic block ( 10) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u211(11){ }u212(13){ }u213(25){ }u214(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163 170
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163
;; lr  def 	 24 [cc] 226
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163 170
;; live  gen 	 24 [cc] 226
;; live  kill	
;; rd  in  	(68)
50, 125, 171, 212, 213, 248, 249, 654, 669, 670, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4142, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209
;; rd  gen 	(2)
652, 4215
;; rd  kill	(1)
4215

;; Pred edge  10 [72.0%] 
(code_label 142 139 143 13 111 "" [1 uses])

(note 143 142 144 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 144 143 145 13 arch/arm/kernel/setup.c:289 (set (reg:SI 226)
        (and:SI (reg/v:SI 163 [ cachetype ])
            (const_int 8388608 [0x800000]))) 67 {*arm_andsi3_insn} (nil))

(insn 145 144 146 13 arch/arm/kernel/setup.c:289 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 226)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 146 145 147 13 arch/arm/kernel/setup.c:289 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 153)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 13 -> ( 14 15)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 170
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 170
;; rd  out 	(69)
50, 125, 171, 212, 213, 248, 249, 652, 669, 670, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4142, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4215


;; Succ edge  14 [50.0%]  (fallthru)
;; Succ edge  15 [50.0%] 

;; Start of basic block ( 13) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u218(11){ }u219(13){ }u220(25){ }u221(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 170
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 227 228
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 170
;; live  gen 	 227 228
;; live  kill	
;; rd  in  	(69)
50, 125, 171, 212, 213, 248, 249, 652, 669, 670, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4142, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4215
;; rd  gen 	(2)
4216, 4217
;; rd  kill	(2)
4216, 4217

;; Pred edge  13 [50.0%]  (fallthru)
(note 147 146 148 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 148 147 149 14 arch/arm/kernel/setup.c:290 (set (reg/f:SI 227)
        (symbol_ref:SI ("*.LANCHOR3") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 149 148 150 14 arch/arm/kernel/setup.c:290 (set (reg:SI 228)
        (const_int 4 [0x4])) 167 {*arm_movsi_insn} (nil))

(insn 150 149 153 14 arch/arm/kernel/setup.c:290 (set (mem/c/i:SI (plus:SI (reg/f:SI 227)
                (const_int 64 [0x40])) [0 cacheid+0 S4 A32])
        (reg:SI 228)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 4 [0x4])
        (nil)))
;; End of basic block 14 -> ( 84)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 170
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 170
;; rd  out 	(71)
50, 125, 171, 212, 213, 248, 249, 652, 669, 670, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4142, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4215, 4216, 4217


;; Succ edge  84 [100.0%]  (fallthru)

;; Start of basic block ( 13) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u224(11){ }u225(13){ }u226(25){ }u227(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 170
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 229 230
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 170
;; live  gen 	 229 230
;; live  kill	
;; rd  in  	(69)
50, 125, 171, 212, 213, 248, 249, 652, 669, 670, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4142, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4215
;; rd  gen 	(2)
4218, 4219
;; rd  kill	(2)
4218, 4219

;; Pred edge  13 [50.0%] 
(code_label 153 150 154 15 113 "" [1 uses])

(note 154 153 155 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 155 154 156 15 arch/arm/kernel/setup.c:292 (set (reg/f:SI 229)
        (symbol_ref:SI ("*.LANCHOR3") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 156 155 157 15 arch/arm/kernel/setup.c:292 (set (reg:SI 230)
        (const_int 2 [0x2])) 167 {*arm_movsi_insn} (nil))

(insn 157 156 160 15 arch/arm/kernel/setup.c:292 (set (mem/c/i:SI (plus:SI (reg/f:SI 229)
                (const_int 64 [0x40])) [0 cacheid+0 S4 A32])
        (reg:SI 230)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 2 [0x2])
        (nil)))
;; End of basic block 15 -> ( 84)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 170
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 170
;; rd  out 	(71)
50, 125, 171, 212, 213, 248, 249, 652, 669, 670, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4142, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4215, 4218, 4219


;; Succ edge  84 [100.0%]  (fallthru)

;; Start of basic block ( 11 12) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u230(11){ }u231(13){ }u232(25){ }u233(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 170
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 160 161 231 232 233 234 235 236 237 238 239 240 241
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 170
;; live  gen 	 24 [cc] 160 161 231 232 233 234 235 236 237 238 239 240 241
;; live  kill	
;; rd  in  	(73)
50, 125, 171, 212, 213, 248, 249, 653, 669, 670, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4142, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214
;; rd  gen 	(14)
651, 4138, 4140, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230
;; rd  kill	(14)
4138, 4139, 4140, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230

;; Pred edge  11 [72.0%] 
;; Pred edge  12 [100.0%]  (fallthru)
(code_label 160 157 161 16 112 "" [1 uses])

(note 161 160 162 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 162 161 163 16 arch/arm/kernel/setup.c:254 (set (reg:SI 231)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 163 162 164 16 arch/arm/kernel/setup.c:254 (asm_operands/v ("mcr	p15, 2, %0, c0, c0, 0 @ set CSSELR") ("") 0 [
            (reg:SI 231)
        ]
         [
            (asm_input:SI ("r") 0)
        ] 10430696) -1 (nil))

(insn 164 163 165 16 arch/arm/kernel/setup.c:257 (parallel [
            (asm_operands/v ("isb") ("") 0 []
                 [] 10431080)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 165 164 166 16 arch/arm/kernel/setup.c:258 (set (reg/v:SI 161 [ id_reg ])
        (asm_operands:SI ("mrc	p15, 1, %0, c0, c0, 0 @ read CCSIDR") ("=r") 0 []
             [] 10431208)) -1 (nil))

(insn 166 165 167 16 arch/arm/kernel/setup.c:262 (set (reg:SI 232)
        (and:SI (reg/v:SI 161 [ id_reg ])
            (const_int 7 [0x7]))) 67 {*arm_andsi3_insn} (nil))

(insn 167 166 168 16 arch/arm/kernel/setup.c:262 (set (reg:SI 233)
        (plus:SI (reg:SI 232)
            (const_int 2 [0x2]))) 4 {*arm_addsi3} (nil))

(insn 168 167 169 16 arch/arm/kernel/setup.c:262 (set (reg:SI 235)
        (const_int 4 [0x4])) 167 {*arm_movsi_insn} (nil))

(insn 169 168 170 16 arch/arm/kernel/setup.c:262 (set (reg:SI 234)
        (ashift:SI (reg:SI 235)
            (reg:SI 233))) 117 {*arm_shiftsi3} (expr_list:REG_EQUAL (ashift:SI (const_int 4 [0x4])
            (reg:SI 233))
        (nil)))

(insn 170 169 171 16 arch/arm/kernel/setup.c:262 (set (reg:SI 236)
        (lshiftrt:SI (reg/v:SI 161 [ id_reg ])
            (const_int 13 [0xd]))) 117 {*arm_shiftsi3} (nil))

(insn 171 170 172 16 arch/arm/kernel/setup.c:262 (set (reg:SI 238)
        (ashift:SI (reg:SI 236)
            (const_int 17 [0x11]))) 117 {*arm_shiftsi3} (nil))

(insn 172 171 173 16 arch/arm/kernel/setup.c:262 (set (reg:SI 237)
        (lshiftrt:SI (reg:SI 238)
            (const_int 17 [0x11]))) 117 {*arm_shiftsi3} (expr_list:REG_EQUAL (and:SI (reg:SI 236)
            (const_int 32767 [0x7fff]))
        (nil)))

(insn 173 172 174 16 arch/arm/kernel/setup.c:262 (set (reg:SI 239)
        (plus:SI (reg:SI 237)
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 174 173 175 16 arch/arm/kernel/setup.c:262 (set (reg:SI 240)
        (mult:SI (reg:SI 239)
            (reg:SI 234))) 32 {*arm_mulsi3_v6} (nil))

(insn 175 174 176 16 arch/arm/kernel/setup.c:262 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 240)
            (const_int 4096 [0x1000]))) 219 {*arm_cmpsi_insn} (nil))

(insn 176 175 662 16 arch/arm/kernel/setup.c:262 (set (reg/v:SI 160 [ aliasing_icache ])
        (gtu:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (nil))
;; End of basic block 16 -> ( 17)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 170
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 170
;; rd  out 	(86)
50, 125, 171, 212, 213, 248, 249, 651, 669, 670, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4138, 4140, 4142, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230


;; Succ edge  17 [100.0%]  (fallthru)

;; Start of basic block ( 84 16) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u249(11){ }u250(13){ }u251(25){ }u252(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 170
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 170
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(93)
50, 125, 171, 212, 213, 248, 249, 651, 669, 670, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4138, 4139, 4140, 4141, 4142, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230
;; rd  gen 	(1)
650
;; rd  kill	(0)


;; Pred edge  84 [100.0%]  (fallthru)
;; Pred edge  16 [100.0%]  (fallthru)
(code_label 662 176 178 17 154 "" [0 uses])

(note 178 662 179 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 179 178 180 17 arch/arm/kernel/setup.c:294 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 160 [ aliasing_icache ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 180 179 181 17 arch/arm/kernel/setup.c:294 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 194)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 17 -> ( 18 20)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 170
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 170
;; rd  out 	(93)
50, 125, 171, 212, 213, 248, 249, 650, 669, 670, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4138, 4139, 4140, 4141, 4142, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230


;; Succ edge  18 [50.0%]  (fallthru)
;; Succ edge  20 [50.0%] 

;; Start of basic block ( 17) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u255(11){ }u256(13){ }u257(25){ }u258(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 170
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 242 243 244 245
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 170
;; live  gen 	 242 243 244 245
;; live  kill	
;; rd  in  	(93)
50, 125, 171, 212, 213, 248, 249, 650, 669, 670, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4138, 4139, 4140, 4141, 4142, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230
;; rd  gen 	(4)
4231, 4232, 4233, 4234
;; rd  kill	(4)
4231, 4232, 4233, 4234

;; Pred edge  17 [50.0%]  (fallthru)
(note 181 180 182 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 182 181 184 18 arch/arm/kernel/setup.c:295 (set (reg/f:SI 242)
        (symbol_ref:SI ("*.LANCHOR3") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 184 182 185 18 arch/arm/kernel/setup.c:295 (set (reg:SI 244 [ cacheid ])
        (mem/c/i:SI (plus:SI (reg/f:SI 242)
                (const_int 64 [0x40])) [0 cacheid+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 185 184 186 18 arch/arm/kernel/setup.c:295 (set (reg:SI 245)
        (ior:SI (reg:SI 244 [ cacheid ])
            (const_int 16 [0x10]))) 89 {*arm_iorsi3} (nil))

(insn 186 185 189 18 arch/arm/kernel/setup.c:295 (set (mem/c/i:SI (plus:SI (reg/f:SI 242)
                (const_int 64 [0x40])) [0 cacheid+0 S4 A32])
        (reg:SI 245)) 167 {*arm_movsi_insn} (nil))
;; End of basic block 18 -> ( 20)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 170
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 170
;; rd  out 	(97)
50, 125, 171, 212, 213, 248, 249, 650, 669, 670, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4138, 4139, 4140, 4141, 4142, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234


;; Succ edge  20 [100.0%]  (fallthru)

;; Start of basic block ( 9) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u264(11){ }u265(13){ }u266(25){ }u267(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 170
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 246 247
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 170
;; live  gen 	 246 247
;; live  kill	
;; rd  in  	(67)
50, 125, 171, 212, 213, 248, 249, 655, 669, 670, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4142, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208
;; rd  gen 	(2)
4235, 4236
;; rd  kill	(2)
4235, 4236

;; Pred edge  9 [50.0%] 
(code_label 189 186 190 19 110 "" [1 uses])

(note 190 189 191 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 191 190 192 19 arch/arm/kernel/setup.c:297 (set (reg/f:SI 246)
        (symbol_ref:SI ("*.LANCHOR3") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 192 191 193 19 arch/arm/kernel/setup.c:297 (set (reg:SI 247)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 193 192 194 19 arch/arm/kernel/setup.c:297 (set (mem/c/i:SI (plus:SI (reg/f:SI 246)
                (const_int 64 [0x40])) [0 cacheid+0 S4 A32])
        (reg:SI 247)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
;; End of basic block 19 -> ( 20)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 170
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 170
;; rd  out 	(69)
50, 125, 171, 212, 213, 248, 249, 655, 669, 670, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4142, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4235, 4236


;; Succ edge  20 [100.0%]  (fallthru)

;; Start of basic block ( 17 18 19) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u270(11){ }u271(13){ }u272(25){ }u273(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 170
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 158 159 248
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 170
;; live  gen 	 24 [cc] 158 159 248
;; live  kill	
;; rd  in  	(100)
50, 125, 171, 212, 213, 248, 249, 650, 655, 669, 670, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4138, 4139, 4140, 4141, 4142, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236
;; rd  gen 	(4)
649, 4136, 4137, 4237
;; rd  kill	(3)
4136, 4137, 4237

;; Pred edge  17 [50.0%] 
;; Pred edge  18 [100.0%]  (fallthru)
;; Pred edge  19 [100.0%]  (fallthru)
(code_label 194 193 195 20 115 "" [1 uses])

(note 195 194 196 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn 196 195 197 20 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/cachetype.h:52 (set (reg/f:SI 248)
        (symbol_ref:SI ("*.LANCHOR3") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 197 196 198 20 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/cachetype.h:52 (set (reg:SI 159 [ cacheid.308 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 248)
                (const_int 64 [0x40])) [0 cacheid+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 198 197 199 20 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/cachetype.h:52 (set (reg:SI 158 [ D.26256 ])
        (and:SI (reg:SI 159 [ cacheid.308 ])
            (const_int 2 [0x2]))) 67 {*arm_andsi3_insn} (nil))

(insn 199 198 200 20 arch/arm/kernel/setup.c:300 discrim 3 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 158 [ D.26256 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 200 199 201 20 arch/arm/kernel/setup.c:300 discrim 3 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 205)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 20 -> ( 22 21)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158 159 170
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158 159 170
;; rd  out 	(102)
50, 125, 171, 212, 213, 248, 249, 649, 669, 670, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237


;; Succ edge  22 [50.0%] 
;; Succ edge  21 [50.0%]  (fallthru)

;; Start of basic block ( 20) -> 21
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u278(11){ }u279(13){ }u280(25){ }u281(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158 159 170
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 165
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158 159 170
;; live  gen 	 165
;; live  kill	
;; rd  in  	(102)
50, 125, 171, 212, 213, 248, 249, 649, 669, 670, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237
;; rd  gen 	(1)
4148
;; rd  kill	(2)
4147, 4148

;; Pred edge  20 [50.0%]  (fallthru)
(note 201 200 202 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn 202 201 205 21 arch/arm/kernel/setup.c:300 discrim 6 (set (reg/f:SI 165 [ iftmp.338 ])
        (symbol_ref/v/f:SI ("*.LC27") [flags 0x82] <string_cst 0x11722750>)) 167 {*arm_movsi_insn} (nil))
;; End of basic block 21 -> ( 23)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158 159 165 170
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158 159 165 170
;; rd  out 	(103)
50, 125, 171, 212, 213, 248, 249, 649, 669, 670, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4148, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237


;; Succ edge  23 [100.0%]  (fallthru)

;; Start of basic block ( 20) -> 22
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u282(11){ }u283(13){ }u284(25){ }u285(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158 159 170
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 165
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158 159 170
;; live  gen 	 165
;; live  kill	
;; rd  in  	(102)
50, 125, 171, 212, 213, 248, 249, 649, 669, 670, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237
;; rd  gen 	(1)
4147
;; rd  kill	(2)
4147, 4148

;; Pred edge  20 [50.0%] 
(code_label 205 202 206 22 116 "" [1 uses])

(note 206 205 207 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(insn 207 206 208 22 arch/arm/kernel/setup.c:300 discrim 5 (set (reg/f:SI 165 [ iftmp.338 ])
        (symbol_ref/v/f:SI ("*.LC28") [flags 0x82] <string_cst 0x11722870>)) 167 {*arm_movsi_insn} (nil))
;; End of basic block 22 -> ( 23)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158 159 165 170
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158 159 165 170
;; rd  out 	(103)
50, 125, 171, 212, 213, 248, 249, 649, 669, 670, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4147, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237


;; Succ edge  23 [100.0%]  (fallthru)

;; Start of basic block ( 21 22) -> 23
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u286(11){ }u287(13){ }u288(25){ }u289(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158 159 165 170
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 159
;; lr  def 	 24 [cc] 249
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158 159 165 170
;; live  gen 	 24 [cc] 249
;; live  kill	
;; rd  in  	(104)
50, 125, 171, 212, 213, 248, 249, 649, 669, 670, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4147, 4148, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237
;; rd  gen 	(2)
648, 4238
;; rd  kill	(1)
4238

;; Pred edge  21 [100.0%]  (fallthru)
;; Pred edge  22 [100.0%]  (fallthru)
(code_label 208 207 209 23 117 "" [0 uses])

(note 209 208 210 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(insn 210 209 211 23 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/cachetype.h:52 (set (reg:SI 249)
        (and:SI (reg:SI 159 [ cacheid.308 ])
            (const_int 8 [0x8]))) 67 {*arm_andsi3_insn} (nil))

(insn 211 210 212 23 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/cachetype.h:52 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 249)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 212 211 213 23 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/cachetype.h:52 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 217)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 23 -> ( 25 24)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158 159 165 170
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158 159 165 170
;; rd  out 	(105)
50, 125, 171, 212, 213, 248, 249, 648, 669, 670, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4147, 4148, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238


;; Succ edge  25 [50.0%] 
;; Succ edge  24 [50.0%]  (fallthru)

;; Start of basic block ( 23) -> 24
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u293(11){ }u294(13){ }u295(25){ }u296(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 165 170
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 164
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 165 170
;; live  gen 	 164
;; live  kill	
;; rd  in  	(105)
50, 125, 171, 212, 213, 248, 249, 648, 669, 670, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4147, 4148, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238
;; rd  gen 	(1)
4146
;; rd  kill	(4)
4143, 4144, 4145, 4146

;; Pred edge  23 [50.0%]  (fallthru)
(note 213 212 214 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(insn 214 213 217 24 arch/arm/kernel/setup.c:300 discrim 13 (set (reg/f:SI 164 [ iftmp.342 ])
        (symbol_ref/v/f:SI ("*.LC29") [flags 0x82] <string_cst 0x117229f0>)) 167 {*arm_movsi_insn} (nil))
;; End of basic block 24 -> ( 30)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164 165 170
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164 165 170
;; rd  out 	(106)
50, 125, 171, 212, 213, 248, 249, 648, 669, 670, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4146, 4147, 4148, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238


;; Succ edge  30 [100.0%]  (fallthru)

;; Start of basic block ( 23) -> 25
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u297(11){ }u298(13){ }u299(25){ }u300(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158 159 165 170
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 159
;; lr  def 	 24 [cc] 250
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158 159 165 170
;; live  gen 	 24 [cc] 250
;; live  kill	
;; rd  in  	(105)
50, 125, 171, 212, 213, 248, 249, 648, 669, 670, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4147, 4148, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238
;; rd  gen 	(2)
647, 4239
;; rd  kill	(1)
4239

;; Pred edge  23 [50.0%] 
(code_label 217 214 218 25 118 "" [1 uses])

(note 218 217 219 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(insn 219 218 220 25 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/cachetype.h:52 (set (reg:SI 250)
        (and:SI (reg:SI 159 [ cacheid.308 ])
            (const_int 16 [0x10]))) 67 {*arm_andsi3_insn} (nil))

(insn 220 219 221 25 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/cachetype.h:52 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 250)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 221 220 222 25 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/cachetype.h:52 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 226)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 25 -> ( 27 26)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158 165 170
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158 165 170
;; rd  out 	(106)
50, 125, 171, 212, 213, 248, 249, 647, 669, 670, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4147, 4148, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239


;; Succ edge  27 [50.0%] 
;; Succ edge  26 [50.0%]  (fallthru)

;; Start of basic block ( 25) -> 26
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u304(11){ }u305(13){ }u306(25){ }u307(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 165 170
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 164
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 165 170
;; live  gen 	 164
;; live  kill	
;; rd  in  	(106)
50, 125, 171, 212, 213, 248, 249, 647, 669, 670, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4147, 4148, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239
;; rd  gen 	(1)
4145
;; rd  kill	(4)
4143, 4144, 4145, 4146

;; Pred edge  25 [50.0%]  (fallthru)
(note 222 221 223 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(insn 223 222 226 26 arch/arm/kernel/setup.c:300 discrim 15 (set (reg/f:SI 164 [ iftmp.342 ])
        (symbol_ref/v/f:SI ("*.LC30") [flags 0x82] <string_cst 0x11722c00>)) 167 {*arm_movsi_insn} (nil))
;; End of basic block 26 -> ( 30)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164 165 170
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164 165 170
;; rd  out 	(107)
50, 125, 171, 212, 213, 248, 249, 647, 669, 670, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4145, 4147, 4148, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239


;; Succ edge  30 [100.0%]  (fallthru)

;; Start of basic block ( 25) -> 27
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u308(11){ }u309(13){ }u310(25){ }u311(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158 165 170
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158 165 170
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(106)
50, 125, 171, 212, 213, 248, 249, 647, 669, 670, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4147, 4148, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239
;; rd  gen 	(1)
646
;; rd  kill	(0)


;; Pred edge  25 [50.0%] 
(code_label 226 223 227 27 120 "" [1 uses])

(note 227 226 228 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(insn 228 227 229 27 arch/arm/kernel/setup.c:300 discrim 14 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 158 [ D.26256 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 229 228 230 27 arch/arm/kernel/setup.c:300 discrim 14 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 234)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 27 -> ( 29 28)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 165 170
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 165 170
;; rd  out 	(106)
50, 125, 171, 212, 213, 248, 249, 646, 669, 670, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4147, 4148, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239


;; Succ edge  29 [50.0%] 
;; Succ edge  28 [50.0%]  (fallthru)

;; Start of basic block ( 27) -> 28
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u314(11){ }u315(13){ }u316(25){ }u317(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 165 170
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 164
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 165 170
;; live  gen 	 164
;; live  kill	
;; rd  in  	(106)
50, 125, 171, 212, 213, 248, 249, 646, 669, 670, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4147, 4148, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239
;; rd  gen 	(1)
4144
;; rd  kill	(4)
4143, 4144, 4145, 4146

;; Pred edge  27 [50.0%]  (fallthru)
(note 230 229 231 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(insn 231 230 234 28 arch/arm/kernel/setup.c:300 discrim 17 (set (reg/f:SI 164 [ iftmp.342 ])
        (symbol_ref/v/f:SI ("*.LC27") [flags 0x82] <string_cst 0x11722750>)) 167 {*arm_movsi_insn} (nil))
;; End of basic block 28 -> ( 30)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164 165 170
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164 165 170
;; rd  out 	(107)
50, 125, 171, 212, 213, 248, 249, 646, 669, 670, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4144, 4147, 4148, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239


;; Succ edge  30 [100.0%]  (fallthru)

;; Start of basic block ( 27) -> 29
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u318(11){ }u319(13){ }u320(25){ }u321(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 165 170
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 164
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 165 170
;; live  gen 	 164
;; live  kill	
;; rd  in  	(106)
50, 125, 171, 212, 213, 248, 249, 646, 669, 670, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4147, 4148, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239
;; rd  gen 	(1)
4143
;; rd  kill	(4)
4143, 4144, 4145, 4146

;; Pred edge  27 [50.0%] 
(code_label 234 231 235 29 121 "" [1 uses])

(note 235 234 236 29 [bb 29] NOTE_INSN_BASIC_BLOCK)

(insn 236 235 237 29 arch/arm/kernel/setup.c:300 discrim 16 (set (reg/f:SI 164 [ iftmp.342 ])
        (symbol_ref/v/f:SI ("*.LC28") [flags 0x82] <string_cst 0x11722870>)) 167 {*arm_movsi_insn} (nil))
;; End of basic block 29 -> ( 30)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164 165 170
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164 165 170
;; rd  out 	(107)
50, 125, 171, 212, 213, 248, 249, 646, 669, 670, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4147, 4148, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239


;; Succ edge  30 [100.0%]  (fallthru)

;; Start of basic block ( 28 24 26 29) -> 30
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u322(11){ }u323(13){ }u324(25){ }u325(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164 165 170
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164 165
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 145 166 169 251 252 253 254 255 256 257 258
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164 165 170
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 145 166 169 251 252 253 254 255 256 257 258
;; live  kill	 14 [lr]
;; rd  in  	(112)
50, 125, 171, 212, 213, 248, 249, 646, 647, 648, 669, 670, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 4148, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239
;; rd  gen 	(11)
4123, 4151, 4154, 4240, 4241, 4242, 4243, 4244, 4245, 4246, 4247
;; rd  kill	(13)
4123, 4149, 4150, 4151, 4154, 4240, 4241, 4242, 4243, 4244, 4245, 4246, 4247

;; Pred edge  28 [100.0%]  (fallthru)
;; Pred edge  24 [100.0%]  (fallthru)
;; Pred edge  26 [100.0%]  (fallthru)
;; Pred edge  29 [100.0%]  (fallthru)
(code_label 237 236 238 30 119 "" [0 uses])

(note 238 237 239 30 [bb 30] NOTE_INSN_BASIC_BLOCK)

(insn 239 238 240 30 arch/arm/kernel/setup.c:300 discrim 21 (set (reg/f:SI 251)
        (symbol_ref/v/f:SI ("*.LC31") [flags 0x82] <string_cst 0x11679d20>)) 167 {*arm_movsi_insn} (nil))

(insn 240 239 241 30 arch/arm/kernel/setup.c:300 discrim 21 (set (reg:SI 0 r0)
        (reg/f:SI 251)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC31") [flags 0x82] <string_cst 0x11679d20>)
        (nil)))

(insn 241 240 242 30 arch/arm/kernel/setup.c:300 discrim 21 (set (reg:SI 1 r1)
        (reg/f:SI 165 [ iftmp.338 ])) 167 {*arm_movsi_insn} (nil))

(insn 242 241 243 30 arch/arm/kernel/setup.c:300 discrim 21 (set (reg:SI 2 r2)
        (reg/f:SI 164 [ iftmp.342 ])) 167 {*arm_movsi_insn} (nil))

(call_insn 243 242 244 30 arch/arm/kernel/setup.c:300 discrim 21 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(call_insn 244 243 245 30 arch/arm/kernel/setup.c:445 (parallel [
            (call (mem:SI (symbol_ref:SI ("cpu_init") [flags 0x3] <function_decl 0x512d9780 cpu_init>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))

(insn 245 244 246 30 arch/arm/kernel/setup.c:889 (set (reg/f:SI 252)
        (symbol_ref:SI ("*.LANCHOR3") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 246 245 247 30 arch/arm/kernel/setup.c:889 (set (reg:SI 169 [ __machine_arch_type.365 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 252)
                (const_int 68 [0x44])) [0 __machine_arch_type+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 247 246 248 30 arch/arm/kernel/setup.c:799 (set (reg/f:SI 253)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 248 247 249 30 arch/arm/kernel/setup.c:799 (set (reg/f:SI 254)
        (plus:SI (reg/f:SI 253)
            (const_int 1024 [0x400]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                (const_int 1024 [0x400])))
        (nil)))

(insn 249 248 251 30 arch/arm/kernel/setup.c:799 (set (reg/v/f:SI 145 [ tags ])
        (plus:SI (reg/f:SI 254)
            (const_int 12 [0xc]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                (const_int 1036 [0x40c])))
        (nil)))

(insn 251 249 252 30 arch/arm/kernel/setup.c:801 (set (reg/f:SI 256)
        (plus:SI (reg/f:SI 253)
            (const_int 4 [0x4]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                (const_int 4 [0x4])))
        (nil)))

(insn 252 251 254 30 arch/arm/kernel/setup.c:801 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 from+0 S4 A32])
        (reg/f:SI 256)) 167 {*arm_movsi_insn} (nil))

(insn 254 252 255 30 arch/arm/kernel/setup.c:803 (set (reg:SI 258)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 255 254 256 30 arch/arm/kernel/setup.c:803 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 253)
                (const_int 1068 [0x42c])) [0 init_tags.mem.start+0 S4 A32])
        (reg:SI 258)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 256 255 280 30 arch/arm/kernel/setup.c:808 (set (reg/v/f:SI 166 [ mdesc ])
        (symbol_ref:SI ("__arch_info_begin") [flags 0xc0] <var_decl 0x114add80 __arch_info_begin>)) 167 {*arm_movsi_insn} (nil))
;; End of basic block 30 -> ( 34)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 166 169 170
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 166 169 170
;; rd  out 	(123)
50, 125, 171, 212, 213, 248, 249, 646, 647, 648, 669, 670, 4123, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 4148, 4151, 4154, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239, 4240, 4241, 4242, 4243, 4244, 4245, 4246, 4247


;; Succ edge  34 [100.0%]  (fallthru)

;; Start of basic block ( 34) -> 31
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u344(11){ }u345(13){ }u346(25){ }u347(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 166 169 170
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166 169
;; lr  def 	 24 [cc] 259
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 166 169 170
;; live  gen 	 24 [cc] 259
;; live  kill	
;; rd  in  	(124)
50, 125, 171, 212, 213, 248, 249, 641, 669, 670, 4123, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 4148, 4150, 4151, 4154, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239, 4240, 4241, 4242, 4243, 4244, 4245, 4246, 4247, 4248, 4250
;; rd  gen 	(2)
643, 4248
;; rd  kill	(1)
4248

;; Pred edge  34 [95.5%] 
(code_label 280 256 259 31 126 "" [1 uses])

(note 259 280 260 31 [bb 31] NOTE_INSN_BASIC_BLOCK)

(insn 260 259 261 31 arch/arm/kernel/setup.c:809 (set (reg:SI 259 [ <variable>.nr ])
        (mem/s/j:SI (reg/v/f:SI 166 [ mdesc ]) [0 <variable>.nr+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 261 260 262 31 arch/arm/kernel/setup.c:809 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 169 [ __machine_arch_type.365 ])
            (reg:SI 259 [ <variable>.nr ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 262 261 263 31 arch/arm/kernel/setup.c:809 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 275)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 31 -> ( 32 33)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 166 169 170
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 166 169 170
;; rd  out 	(124)
50, 125, 171, 212, 213, 248, 249, 643, 669, 670, 4123, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 4148, 4150, 4151, 4154, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239, 4240, 4241, 4242, 4243, 4244, 4245, 4246, 4247, 4248, 4250


;; Succ edge  32 [0.0%]  (fallthru)
;; Succ edge  33 [100.0%] 

;; Start of basic block ( 31) -> 32
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u352(11){ }u353(13){ }u354(25){ }u355(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 166 169 170
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 137 260
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 166 169 170
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 134 137 260
;; live  kill	 14 [lr]
;; rd  in  	(124)
50, 125, 171, 212, 213, 248, 249, 643, 669, 670, 4123, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 4148, 4150, 4151, 4154, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239, 4240, 4241, 4242, 4243, 4244, 4245, 4246, 4247, 4248, 4250
;; rd  gen 	(5)
45, 591, 4105, 4114, 4249
;; rd  kill	(3)
4105, 4114, 4249

;; Pred edge  31 [0.0%]  (fallthru)
(note 263 262 266 32 [bb 32] NOTE_INSN_BASIC_BLOCK)

(insn 266 263 267 32 arch/arm/kernel/setup.c:810 (set (reg/f:SI 260)
        (symbol_ref/v/f:SI ("*.LC32") [flags 0x82] <string_cst 0x117240f0>)) 167 {*arm_movsi_insn} (nil))

(insn 267 266 268 32 arch/arm/kernel/setup.c:810 (set (reg:SI 0 r0)
        (reg/f:SI 260)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC32") [flags 0x82] <string_cst 0x117240f0>)
        (nil)))

(insn 268 267 269 32 arch/arm/kernel/setup.c:810 (set (reg:SI 1 r1)
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 166 [ mdesc ])
                (const_int 4 [0x4])) [0 <variable>.name+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn 269 268 270 32 arch/arm/kernel/setup.c:810 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 270 269 271 32 arch/arm/kernel/setup.c:815 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 166 [ mdesc ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 271 270 275 32 arch/arm/kernel/setup.c:815 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 284)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 4 [0x4])
        (nil)))
;; End of basic block 32 -> ( 35 36)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 166 169 170
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 166 169 170
;; rd  out 	(127)
45, 125, 171, 212, 213, 248, 249, 591, 669, 670, 4105, 4114, 4123, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 4148, 4150, 4151, 4154, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239, 4240, 4241, 4242, 4243, 4244, 4245, 4246, 4247, 4248, 4249, 4250


;; Succ edge  35 [0.0%] 
;; Succ edge  36 [100.0%]  (fallthru)

;; Start of basic block ( 31) -> 33
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u365(11){ }u366(13){ }u367(25){ }u368(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 166 169 170
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166
;; lr  def 	 166
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 166 169 170
;; live  gen 	 166
;; live  kill	
;; rd  in  	(124)
50, 125, 171, 212, 213, 248, 249, 643, 669, 670, 4123, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 4148, 4150, 4151, 4154, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239, 4240, 4241, 4242, 4243, 4244, 4245, 4246, 4247, 4248, 4250
;; rd  gen 	(1)
4150
;; rd  kill	(3)
4149, 4150, 4151

;; Pred edge  31 [100.0%] 
(code_label 275 271 276 33 123 "" [1 uses])

(note 276 275 277 33 [bb 33] NOTE_INSN_BASIC_BLOCK)

(insn 277 276 278 33 arch/arm/kernel/setup.c:808 (set (reg/v/f:SI 166 [ mdesc ])
        (plus:SI (reg/v/f:SI 166 [ mdesc ])
            (const_int 60 [0x3c]))) 4 {*arm_addsi3} (nil))
;; End of basic block 33 -> ( 34)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 166 169 170
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 166 169 170
;; rd  out 	(123)
50, 125, 171, 212, 213, 248, 249, 643, 669, 670, 4123, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 4148, 4150, 4154, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239, 4240, 4241, 4242, 4243, 4244, 4245, 4246, 4247, 4248, 4250


;; Succ edge  34 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 30 33) -> 34
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u370(11){ }u371(13){ }u372(25){ }u373(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 166 169 170
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166
;; lr  def 	 24 [cc] 261
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 166 169 170
;; live  gen 	 24 [cc] 261
;; live  kill	
;; rd  in  	(127)
50, 125, 171, 212, 213, 248, 249, 643, 646, 647, 648, 669, 670, 4123, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 4148, 4150, 4151, 4154, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239, 4240, 4241, 4242, 4243, 4244, 4245, 4246, 4247, 4248, 4250
;; rd  gen 	(2)
641, 4250
;; rd  kill	(1)
4250

;; Pred edge  30 [100.0%]  (fallthru)
;; Pred edge  33 [100.0%]  (fallthru,dfs_back)
(code_label 278 277 279 34 122 "" [0 uses])

(note 279 278 281 34 [bb 34] NOTE_INSN_BASIC_BLOCK)

(insn 281 279 282 34 arch/arm/kernel/setup.c:808 discrim 1 (set (reg/f:SI 261)
        (symbol_ref:SI ("__arch_info_end") [flags 0xc0] <var_decl 0x114adde0 __arch_info_end>)) 167 {*arm_movsi_insn} (nil))

(insn 282 281 283 34 arch/arm/kernel/setup.c:808 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 166 [ mdesc ])
            (reg/f:SI 261))) 219 {*arm_cmpsi_insn} (expr_list:REG_EQUAL (compare:CC (reg/v/f:SI 166 [ mdesc ])
            (symbol_ref:SI ("__arch_info_end") [flags 0xc0] <var_decl 0x114adde0 __arch_info_end>))
        (nil)))

(jump_insn 283 282 284 34 arch/arm/kernel/setup.c:808 discrim 1 (set (pc)
        (if_then_else (ltu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 280)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9550 [0x254e])
        (nil)))
;; End of basic block 34 -> ( 31 35)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 166 169 170
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 166 169 170
;; rd  out 	(124)
50, 125, 171, 212, 213, 248, 249, 641, 669, 670, 4123, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 4148, 4150, 4151, 4154, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239, 4240, 4241, 4242, 4243, 4244, 4245, 4246, 4247, 4248, 4250


;; Succ edge  31 [95.5%] 
;; Succ edge  35 [4.5%]  (fallthru)

;; Start of basic block ( 32 34) -> 35
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u377(11){ }u378(13){ }u379(25){ }u380(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 169 170
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 169
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 166 262
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 169 170
;; live  gen 	 0 [r0] 1 [r1] 166 262
;; live  kill	 14 [lr]
;; rd  in  	(129)
45, 50, 125, 171, 212, 213, 248, 249, 591, 641, 669, 670, 4105, 4114, 4123, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 4148, 4150, 4151, 4154, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239, 4240, 4241, 4242, 4243, 4244, 4245, 4246, 4247, 4248, 4249, 4250
;; rd  gen 	(2)
4149, 4251
;; rd  kill	(4)
4149, 4150, 4151, 4251

;; Pred edge  32 [0.0%] 
;; Pred edge  34 [4.5%]  (fallthru)
(code_label 284 283 285 35 124 "" [1 uses])

(note 285 284 286 35 [bb 35] NOTE_INSN_BASIC_BLOCK)

(insn 286 285 287 35 arch/arm/kernel/setup.c:816 (set (reg/f:SI 262)
        (symbol_ref/v/f:SI ("*.LC33") [flags 0x82] <string_cst 0x1120ca80>)) 167 {*arm_movsi_insn} (nil))

(insn 287 286 288 35 arch/arm/kernel/setup.c:816 (set (reg:SI 0 r0)
        (reg/f:SI 262)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC33") [flags 0x82] <string_cst 0x1120ca80>)
        (nil)))

(insn 288 287 289 35 arch/arm/kernel/setup.c:816 (set (reg:SI 1 r1)
        (reg:SI 169 [ __machine_arch_type.365 ])) 167 {*arm_movsi_insn} (nil))

(call_insn 289 288 290 35 arch/arm/kernel/setup.c:816 (parallel [
            (call (mem:SI (symbol_ref:SI ("early_print") [flags 0x3] <function_decl 0x113ee700 early_print>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(call_insn 290 289 291 35 arch/arm/kernel/setup.c:818 (parallel [
            (call (mem:SI (symbol_ref:SI ("dump_machine_table") [flags 0x3] <function_decl 0x113ee780 dump_machine_table>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))

(insn 291 290 292 35 arch/arm/kernel/setup.c:818 (set (reg/v/f:SI 166 [ mdesc ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 35 -> ( 36)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 166 170
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 166 170
;; rd  out 	(129)
45, 50, 125, 171, 212, 213, 248, 249, 591, 641, 669, 670, 4105, 4114, 4123, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 4148, 4149, 4154, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239, 4240, 4241, 4242, 4243, 4244, 4245, 4246, 4247, 4248, 4249, 4250, 4251


;; Succ edge  36 [100.0%]  (fallthru)

;; Start of basic block ( 35 32) -> 36
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u387(11){ }u388(13){ }u389(25){ }u390(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 166 170
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 142 263
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 166 170
;; live  gen 	 24 [cc] 142 263
;; live  kill	
;; rd  in  	(131)
45, 50, 125, 171, 212, 213, 248, 249, 591, 641, 669, 670, 4105, 4114, 4123, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 4148, 4149, 4150, 4151, 4154, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239, 4240, 4241, 4242, 4243, 4244, 4245, 4246, 4247, 4248, 4249, 4250, 4251
;; rd  gen 	(3)
638, 4120, 4252
;; rd  kill	(2)
4120, 4252

;; Pred edge  35 [100.0%]  (fallthru)
;; Pred edge  32 [100.0%]  (fallthru)
(code_label 292 291 293 36 125 "" [0 uses])

(note 293 292 294 36 [bb 36] NOTE_INSN_BASIC_BLOCK)

(insn 294 293 295 36 arch/arm/kernel/setup.c:821 (set (reg/f:SI 263)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 295 294 296 36 arch/arm/kernel/setup.c:821 (set (reg:SI 142 [ __atags_pointer.361 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 263)
                (const_int 1080 [0x438])) [0 __atags_pointer+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 296 295 297 36 arch/arm/kernel/setup.c:821 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 142 [ __atags_pointer.361 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 297 296 298 36 arch/arm/kernel/setup.c:821 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 302)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 36 -> ( 37 38)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145 166 170
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145 166 170
;; rd  out 	(132)
45, 50, 125, 171, 212, 213, 248, 249, 638, 669, 670, 4105, 4114, 4120, 4123, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 4148, 4149, 4150, 4151, 4154, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239, 4240, 4241, 4242, 4243, 4244, 4245, 4246, 4247, 4248, 4249, 4250, 4251, 4252


;; Succ edge  37 [50.0%]  (fallthru)
;; Succ edge  38 [50.0%] 

;; Start of basic block ( 36) -> 37
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u394(11){ }u395(13){ }u396(25){ }u397(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145 166 170
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 136
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145 166 170
;; live  gen 	 136
;; live  kill	
;; rd  in  	(132)
45, 50, 125, 171, 212, 213, 248, 249, 638, 669, 670, 4105, 4114, 4120, 4123, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 4148, 4149, 4150, 4151, 4154, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239, 4240, 4241, 4242, 4243, 4244, 4245, 4246, 4247, 4248, 4249, 4250, 4251, 4252
;; rd  gen 	(1)
4113
;; rd  kill	(6)
4108, 4109, 4110, 4111, 4112, 4113

;; Pred edge  36 [50.0%]  (fallthru)
(note 298 297 299 37 [bb 37] NOTE_INSN_BASIC_BLOCK)

(insn 299 298 302 37 arch/arm/kernel/setup.c:822 (set (reg/v/f:SI 136 [ tags.955 ])
        (plus:SI (reg:SI 142 [ __atags_pointer.361 ])
            (const_int -1073741824 [0xffffffffc0000000]))) 4 {*arm_addsi3} (nil))
;; End of basic block 37 -> ( 43)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 145 166 170
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 145 166 170
;; rd  out 	(133)
45, 50, 125, 171, 212, 213, 248, 249, 638, 669, 670, 4105, 4113, 4114, 4120, 4123, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 4148, 4149, 4150, 4151, 4154, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239, 4240, 4241, 4242, 4243, 4244, 4245, 4246, 4247, 4248, 4249, 4250, 4251, 4252


;; Succ edge  43 [100.0%]  (fallthru)

;; Start of basic block ( 36) -> 38
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u399(11){ }u400(13){ }u401(25){ }u402(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 166 170
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166
;; lr  def 	 24 [cc] 143
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 166 170
;; live  gen 	 24 [cc] 143
;; live  kill	
;; rd  in  	(132)
45, 50, 125, 171, 212, 213, 248, 249, 638, 669, 670, 4105, 4114, 4120, 4123, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 4148, 4149, 4150, 4151, 4154, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239, 4240, 4241, 4242, 4243, 4244, 4245, 4246, 4247, 4248, 4249, 4250, 4251, 4252
;; rd  gen 	(2)
637, 4121
;; rd  kill	(1)
4121

;; Pred edge  36 [50.0%] 
(code_label 302 299 303 38 127 "" [1 uses])

(note 303 302 304 38 [bb 38] NOTE_INSN_BASIC_BLOCK)

(insn 304 303 305 38 arch/arm/kernel/setup.c:823 (set (reg:SI 143 [ D.26325 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 166 [ mdesc ])
                (const_int 8 [0x8])) [0 <variable>.boot_params+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 305 304 306 38 arch/arm/kernel/setup.c:823 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 143 [ D.26325 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 306 305 307 38 arch/arm/kernel/setup.c:823 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 311)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 38 -> ( 40 39)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 145 166 170
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 145 166 170
;; rd  out 	(133)
45, 50, 125, 171, 212, 213, 248, 249, 637, 669, 670, 4105, 4114, 4120, 4121, 4123, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 4148, 4149, 4150, 4151, 4154, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239, 4240, 4241, 4242, 4243, 4244, 4245, 4246, 4247, 4248, 4249, 4250, 4251, 4252


;; Succ edge  40 [50.0%] 
;; Succ edge  39 [50.0%]  (fallthru)

;; Start of basic block ( 38) -> 39
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u406(11){ }u407(13){ }u408(25){ }u409(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 166 170
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145
;; lr  def 	 136
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 166 170
;; live  gen 	 136
;; live  kill	
;; rd  in  	(133)
45, 50, 125, 171, 212, 213, 248, 249, 637, 669, 670, 4105, 4114, 4120, 4121, 4123, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 4148, 4149, 4150, 4151, 4154, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239, 4240, 4241, 4242, 4243, 4244, 4245, 4246, 4247, 4248, 4249, 4250, 4251, 4252
;; rd  gen 	(1)
4112
;; rd  kill	(6)
4108, 4109, 4110, 4111, 4112, 4113

;; Pred edge  38 [50.0%]  (fallthru)
(note 307 306 308 39 [bb 39] NOTE_INSN_BASIC_BLOCK)

(insn 308 307 311 39 arch/arm/kernel/setup.c:799 (set (reg/v/f:SI 136 [ tags.955 ])
        (reg/v/f:SI 145 [ tags ])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 39 -> ( 43)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 145 166 170
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 145 166 170
;; rd  out 	(134)
45, 50, 125, 171, 212, 213, 248, 249, 637, 669, 670, 4105, 4112, 4114, 4120, 4121, 4123, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 4148, 4149, 4150, 4151, 4154, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239, 4240, 4241, 4242, 4243, 4244, 4245, 4246, 4247, 4248, 4249, 4250, 4251, 4252


;; Succ edge  43 [100.0%]  (fallthru)

;; Start of basic block ( 38) -> 40
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u411(11){ }u412(13){ }u413(25){ }u414(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 145 166 170
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 24 [cc] 264
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 145 166 170
;; live  gen 	 24 [cc] 264
;; live  kill	
;; rd  in  	(133)
45, 50, 125, 171, 212, 213, 248, 249, 637, 669, 670, 4105, 4114, 4120, 4121, 4123, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 4148, 4149, 4150, 4151, 4154, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239, 4240, 4241, 4242, 4243, 4244, 4245, 4246, 4247, 4248, 4249, 4250, 4251, 4252
;; rd  gen 	(2)
636, 4253
;; rd  kill	(1)
4253

;; Pred edge  38 [50.0%] 
(code_label 311 308 312 40 129 "" [1 uses])

(note 312 311 313 40 [bb 40] NOTE_INSN_BASIC_BLOCK)

(insn 313 312 314 40 arch/arm/kernel/setup.c:831 (set (reg:SI 264)
        (const_int 1048575 [0xfffff])) 167 {*arm_movsi_insn} (nil))

(insn 314 313 315 40 arch/arm/kernel/setup.c:831 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 143 [ D.26325 ])
            (reg:SI 264))) 219 {*arm_cmpsi_insn} (expr_list:REG_EQUAL (compare:CC (reg:SI 143 [ D.26325 ])
            (const_int 1048575 [0xfffff]))
        (nil)))

(jump_insn 315 314 316 40 arch/arm/kernel/setup.c:831 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 324)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 40 -> ( 41 42)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 145 166 170
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 145 166 170
;; rd  out 	(134)
45, 50, 125, 171, 212, 213, 248, 249, 636, 669, 670, 4105, 4114, 4120, 4121, 4123, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 4148, 4149, 4150, 4151, 4154, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239, 4240, 4241, 4242, 4243, 4244, 4245, 4246, 4247, 4248, 4249, 4250, 4251, 4252, 4253


;; Succ edge  41 [0.0%]  (fallthru)
;; Succ edge  42 [100.0%] 

;; Start of basic block ( 40) -> 41
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u418(11){ }u419(13){ }u420(25){ }u421(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 145 166 170
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 145
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 136 265
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 145 166 170
;; live  gen 	 0 [r0] 1 [r1] 136 265
;; live  kill	 14 [lr]
;; rd  in  	(134)
45, 50, 125, 171, 212, 213, 248, 249, 636, 669, 670, 4105, 4114, 4120, 4121, 4123, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 4148, 4149, 4150, 4151, 4154, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239, 4240, 4241, 4242, 4243, 4244, 4245, 4246, 4247, 4248, 4249, 4250, 4251, 4252, 4253
;; rd  gen 	(3)
40, 4111, 4254
;; rd  kill	(7)
4108, 4109, 4110, 4111, 4112, 4113, 4254

;; Pred edge  40 [0.0%]  (fallthru)
(note 316 315 317 41 [bb 41] NOTE_INSN_BASIC_BLOCK)

(insn 317 316 318 41 arch/arm/kernel/setup.c:833 (set (reg/f:SI 265)
        (symbol_ref/v/f:SI ("*.LC34") [flags 0x82] <string_cst 0x1120cc60>)) 167 {*arm_movsi_insn} (nil))

(insn 318 317 319 41 arch/arm/kernel/setup.c:833 (set (reg:SI 0 r0)
        (reg/f:SI 265)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC34") [flags 0x82] <string_cst 0x1120cc60>)
        (nil)))

(insn 319 318 320 41 arch/arm/kernel/setup.c:833 (set (reg:SI 1 r1)
        (reg:SI 143 [ D.26325 ])) 167 {*arm_movsi_insn} (nil))

(call_insn 320 319 321 41 arch/arm/kernel/setup.c:833 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 321 320 324 41 arch/arm/kernel/setup.c:799 (set (reg/v/f:SI 136 [ tags.955 ])
        (reg/v/f:SI 145 [ tags ])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 41 -> ( 43)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 145 166 170
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 145 166 170
;; rd  out 	(135)
40, 125, 171, 212, 213, 248, 249, 636, 669, 670, 4105, 4111, 4114, 4120, 4121, 4123, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 4148, 4149, 4150, 4151, 4154, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239, 4240, 4241, 4242, 4243, 4244, 4245, 4246, 4247, 4248, 4249, 4250, 4251, 4252, 4253, 4254


;; Succ edge  43 [100.0%]  (fallthru)

;; Start of basic block ( 40) -> 42
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u428(11){ }u429(13){ }u430(25){ }u431(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 145 166 170
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 136
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 145 166 170
;; live  gen 	 136
;; live  kill	
;; rd  in  	(134)
45, 50, 125, 171, 212, 213, 248, 249, 636, 669, 670, 4105, 4114, 4120, 4121, 4123, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 4148, 4149, 4150, 4151, 4154, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239, 4240, 4241, 4242, 4243, 4244, 4245, 4246, 4247, 4248, 4249, 4250, 4251, 4252, 4253
;; rd  gen 	(1)
4110
;; rd  kill	(6)
4108, 4109, 4110, 4111, 4112, 4113

;; Pred edge  40 [100.0%] 
(code_label 324 321 325 42 130 "" [1 uses])

(note 325 324 326 42 [bb 42] NOTE_INSN_BASIC_BLOCK)

(insn 326 325 327 42 arch/arm/kernel/setup.c:839 (set (reg/v/f:SI 136 [ tags.955 ])
        (plus:SI (reg:SI 143 [ D.26325 ])
            (const_int -1073741824 [0xffffffffc0000000]))) 4 {*arm_addsi3} (nil))
;; End of basic block 42 -> ( 43)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 145 166 170
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 145 166 170
;; rd  out 	(135)
45, 50, 125, 171, 212, 213, 248, 249, 636, 669, 670, 4105, 4110, 4114, 4120, 4121, 4123, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 4148, 4149, 4150, 4151, 4154, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239, 4240, 4241, 4242, 4243, 4244, 4245, 4246, 4247, 4248, 4249, 4250, 4251, 4252, 4253


;; Succ edge  43 [100.0%]  (fallthru)

;; Start of basic block ( 37 39 41 42) -> 43
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u433(11){ }u434(13){ }u435(25){ }u436(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 145 166 170
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 24 [cc] 266 267
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 145 166 170
;; live  gen 	 24 [cc] 266 267
;; live  kill	
;; rd  in  	(142)
40, 45, 50, 125, 171, 212, 213, 248, 249, 636, 637, 638, 669, 670, 4105, 4110, 4111, 4112, 4113, 4114, 4120, 4121, 4123, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 4148, 4149, 4150, 4151, 4154, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239, 4240, 4241, 4242, 4243, 4244, 4245, 4246, 4247, 4248, 4249, 4250, 4251, 4252, 4253, 4254
;; rd  gen 	(3)
634, 4255, 4256
;; rd  kill	(2)
4255, 4256

;; Pred edge  37 [100.0%]  (fallthru)
;; Pred edge  39 [100.0%]  (fallthru)
;; Pred edge  41 [100.0%]  (fallthru)
;; Pred edge  42 [100.0%]  (fallthru)
(code_label 327 326 328 43 128 "" [0 uses])

(note 328 327 329 43 [bb 43] NOTE_INSN_BASIC_BLOCK)

(insn 329 328 330 43 arch/arm/kernel/setup.c:852 (set (reg:SI 266)
        (const_int 1413545985 [0x54410001])) 167 {*arm_movsi_insn} (nil))

(insn 330 329 331 43 arch/arm/kernel/setup.c:852 (set (reg:SI 267 [ <variable>.hdr.tag ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 136 [ tags.955 ])
                (const_int 4 [0x4])) [0 <variable>.hdr.tag+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 331 330 332 43 arch/arm/kernel/setup.c:852 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 267 [ <variable>.hdr.tag ])
            (reg:SI 266))) 219 {*arm_cmpsi_insn} (expr_list:REG_EQUAL (compare:CC (reg:SI 267 [ <variable>.hdr.tag ])
            (const_int 1413545985 [0x54410001]))
        (nil)))

(jump_insn 332 331 333 43 arch/arm/kernel/setup.c:852 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 335)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 2800 [0xaf0])
        (nil)))
;; End of basic block 43 -> ( 44 45)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 145 166 170
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 145 166 170
;; rd  out 	(142)
40, 45, 50, 125, 171, 212, 213, 248, 249, 634, 669, 670, 4105, 4110, 4111, 4112, 4113, 4114, 4120, 4121, 4123, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 4148, 4149, 4150, 4151, 4154, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239, 4240, 4241, 4242, 4243, 4244, 4245, 4246, 4247, 4248, 4249, 4250, 4251, 4252, 4253, 4254, 4255, 4256


;; Succ edge  44 [72.0%]  (fallthru)
;; Succ edge  45 [28.0%] 

;; Start of basic block ( 43) -> 44
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u441(11){ }u442(13){ }u443(25){ }u444(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 166 170
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145
;; lr  def 	 136
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 166 170
;; live  gen 	 136
;; live  kill	
;; rd  in  	(142)
40, 45, 50, 125, 171, 212, 213, 248, 249, 634, 669, 670, 4105, 4110, 4111, 4112, 4113, 4114, 4120, 4121, 4123, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 4148, 4149, 4150, 4151, 4154, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239, 4240, 4241, 4242, 4243, 4244, 4245, 4246, 4247, 4248, 4249, 4250, 4251, 4252, 4253, 4254, 4255, 4256
;; rd  gen 	(1)
4109
;; rd  kill	(6)
4108, 4109, 4110, 4111, 4112, 4113

;; Pred edge  43 [72.0%]  (fallthru)
(note 333 332 334 44 [bb 44] NOTE_INSN_BASIC_BLOCK)

(insn 334 333 335 44 arch/arm/kernel/setup.c:860 (set (reg/v/f:SI 136 [ tags.955 ])
        (reg/v/f:SI 145 [ tags ])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 44 -> ( 45)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 166 170
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 166 170
;; rd  out 	(139)
40, 45, 50, 125, 171, 212, 213, 248, 249, 634, 669, 670, 4105, 4109, 4114, 4120, 4121, 4123, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 4148, 4149, 4150, 4151, 4154, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239, 4240, 4241, 4242, 4243, 4244, 4245, 4246, 4247, 4248, 4249, 4250, 4251, 4252, 4253, 4254, 4255, 4256


;; Succ edge  45 [100.0%]  (fallthru)

;; Start of basic block ( 43 44) -> 45
;; bb 45 artificial_defs: { }
;; bb 45 artificial_uses: { u446(11){ }u447(13){ }u448(25){ }u449(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 166 170
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166
;; lr  def 	 24 [cc] 144
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 166 170
;; live  gen 	 24 [cc] 144
;; live  kill	
;; rd  in  	(143)
40, 45, 50, 125, 171, 212, 213, 248, 249, 634, 669, 670, 4105, 4109, 4110, 4111, 4112, 4113, 4114, 4120, 4121, 4123, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 4148, 4149, 4150, 4151, 4154, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239, 4240, 4241, 4242, 4243, 4244, 4245, 4246, 4247, 4248, 4249, 4250, 4251, 4252, 4253, 4254, 4255, 4256
;; rd  gen 	(2)
633, 4122
;; rd  kill	(1)
4122

;; Pred edge  43 [28.0%] 
;; Pred edge  44 [100.0%]  (fallthru)
(code_label 335 334 336 45 131 "" [1 uses])

(note 336 335 337 45 [bb 45] NOTE_INSN_BASIC_BLOCK)

(insn 337 336 338 45 arch/arm/kernel/setup.c:863 (set (reg/f:SI 144 [ D.26323 ])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 166 [ mdesc ])
                (const_int 32 [0x20])) [0 <variable>.fixup+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 338 337 339 45 arch/arm/kernel/setup.c:863 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 144 [ D.26323 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 339 338 340 45 arch/arm/kernel/setup.c:863 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 348)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 3017 [0xbc9])
        (nil)))
;; End of basic block 45 -> ( 46 47)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 144 166 170
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 144 166 170
;; rd  out 	(144)
40, 45, 50, 125, 171, 212, 213, 248, 249, 633, 669, 670, 4105, 4109, 4110, 4111, 4112, 4113, 4114, 4120, 4121, 4122, 4123, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 4148, 4149, 4150, 4151, 4154, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239, 4240, 4241, 4242, 4243, 4244, 4245, 4246, 4247, 4248, 4249, 4250, 4251, 4252, 4253, 4254, 4255, 4256


;; Succ edge  46 [69.8%]  (fallthru)
;; Succ edge  47 [30.2%] 

;; Start of basic block ( 45) -> 46
;; bb 46 artificial_defs: { }
;; bb 46 artificial_uses: { u453(11){ }u454(13){ }u455(25){ }u456(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 144 166 170
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 144 166
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 268 269
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 144 166 170
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 268 269
;; live  kill	 14 [lr]
;; rd  in  	(144)
40, 45, 50, 125, 171, 212, 213, 248, 249, 633, 669, 670, 4105, 4109, 4110, 4111, 4112, 4113, 4114, 4120, 4121, 4122, 4123, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 4148, 4149, 4150, 4151, 4154, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239, 4240, 4241, 4242, 4243, 4244, 4245, 4246, 4247, 4248, 4249, 4250, 4251, 4252, 4253, 4254, 4255, 4256
;; rd  gen 	(2)
4257, 4258
;; rd  kill	(2)
4257, 4258

;; Pred edge  45 [69.8%]  (fallthru)
(note 340 339 341 46 [bb 46] NOTE_INSN_BASIC_BLOCK)

(insn 341 340 342 46 arch/arm/kernel/setup.c:864 (set (reg/f:SI 268)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -4 [0xfffffffffffffffc]))) 4 {*arm_addsi3} (nil))

(insn 342 341 343 46 arch/arm/kernel/setup.c:864 (set (reg/f:SI 269)
        (symbol_ref:SI ("meminfo") [flags 0xc0] <var_decl 0x114015a0 meminfo>)) 167 {*arm_movsi_insn} (nil))

(insn 343 342 344 46 arch/arm/kernel/setup.c:864 (set (reg:SI 0 r0)
        (reg/v/f:SI 166 [ mdesc ])) 167 {*arm_movsi_insn} (nil))

(insn 344 343 345 46 arch/arm/kernel/setup.c:864 (set (reg:SI 1 r1)
        (reg/v/f:SI 136 [ tags.955 ])) 167 {*arm_movsi_insn} (nil))

(insn 345 344 346 46 arch/arm/kernel/setup.c:864 (set (reg:SI 2 r2)
        (reg/f:SI 268)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -4 [0xfffffffffffffffc]))
        (nil)))

(insn 346 345 347 46 arch/arm/kernel/setup.c:864 (set (reg:SI 3 r3)
        (reg/f:SI 269)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("meminfo") [flags 0xc0] <var_decl 0x114015a0 meminfo>)
        (nil)))

(call_insn 347 346 348 46 arch/arm/kernel/setup.c:864 (parallel [
            (call (mem:SI (reg/f:SI 144 [ D.26323 ]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 244 {*call_reg_armv5} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 46 -> ( 47)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 166 170
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 166 170
;; rd  out 	(146)
40, 45, 50, 125, 171, 212, 213, 248, 249, 633, 669, 670, 4105, 4109, 4110, 4111, 4112, 4113, 4114, 4120, 4121, 4122, 4123, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 4148, 4149, 4150, 4151, 4154, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239, 4240, 4241, 4242, 4243, 4244, 4245, 4246, 4247, 4248, 4249, 4250, 4251, 4252, 4253, 4254, 4255, 4256, 4257, 4258


;; Succ edge  47 [100.0%]  (fallthru)

;; Start of basic block ( 45 46) -> 47
;; bb 47 artificial_defs: { }
;; bb 47 artificial_uses: { u469(11){ }u470(13){ }u471(25){ }u472(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 166 170
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 24 [cc] 270 271
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 166 170
;; live  gen 	 24 [cc] 270 271
;; live  kill	
;; rd  in  	(146)
40, 45, 50, 125, 171, 212, 213, 248, 249, 633, 669, 670, 4105, 4109, 4110, 4111, 4112, 4113, 4114, 4120, 4121, 4122, 4123, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 4148, 4149, 4150, 4151, 4154, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239, 4240, 4241, 4242, 4243, 4244, 4245, 4246, 4247, 4248, 4249, 4250, 4251, 4252, 4253, 4254, 4255, 4256, 4257, 4258
;; rd  gen 	(3)
631, 4259, 4260
;; rd  kill	(2)
4259, 4260

;; Pred edge  45 [30.2%] 
;; Pred edge  46 [100.0%]  (fallthru)
(code_label 348 347 349 47 132 "" [1 uses])

(note 349 348 350 47 [bb 47] NOTE_INSN_BASIC_BLOCK)

(insn 350 349 351 47 arch/arm/kernel/setup.c:866 (set (reg:SI 270)
        (const_int 1413545985 [0x54410001])) 167 {*arm_movsi_insn} (nil))

(insn 351 350 352 47 arch/arm/kernel/setup.c:866 (set (reg:SI 271 [ <variable>.hdr.tag ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 136 [ tags.955 ])
                (const_int 4 [0x4])) [0 <variable>.hdr.tag+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 352 351 353 47 arch/arm/kernel/setup.c:866 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 271 [ <variable>.hdr.tag ])
            (reg:SI 270))) 219 {*arm_cmpsi_insn} (expr_list:REG_EQUAL (compare:CC (reg:SI 271 [ <variable>.hdr.tag ])
            (const_int 1413545985 [0x54410001]))
        (nil)))

(jump_insn 353 352 354 47 arch/arm/kernel/setup.c:866 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 422)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 47 -> ( 48 61)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 166 170
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 166 170
;; rd  out 	(148)
40, 45, 50, 125, 171, 212, 213, 248, 249, 631, 669, 670, 4105, 4109, 4110, 4111, 4112, 4113, 4114, 4120, 4121, 4122, 4123, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 4148, 4149, 4150, 4151, 4154, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239, 4240, 4241, 4242, 4243, 4244, 4245, 4246, 4247, 4248, 4249, 4250, 4251, 4252, 4253, 4254, 4255, 4256, 4257, 4258, 4259, 4260


;; Succ edge  48 [0.0%]  (fallthru)
;; Succ edge  61 [100.0%] 

;; Start of basic block ( 47) -> 48
;; bb 48 artificial_defs: { }
;; bb 48 artificial_uses: { u477(11){ }u478(13){ }u479(25){ }u480(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 166 170
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 272 273
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 166 170
;; live  gen 	 24 [cc] 272 273
;; live  kill	
;; rd  in  	(148)
40, 45, 50, 125, 171, 212, 213, 248, 249, 631, 669, 670, 4105, 4109, 4110, 4111, 4112, 4113, 4114, 4120, 4121, 4122, 4123, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 4148, 4149, 4150, 4151, 4154, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239, 4240, 4241, 4242, 4243, 4244, 4245, 4246, 4247, 4248, 4249, 4250, 4251, 4252, 4253, 4254, 4255, 4256, 4257, 4258, 4259, 4260
;; rd  gen 	(3)
630, 4261, 4262
;; rd  kill	(2)
4261, 4262

;; Pred edge  47 [0.0%]  (fallthru)
(note 354 353 355 48 [bb 48] NOTE_INSN_BASIC_BLOCK)

(insn 355 354 356 48 arch/arm/kernel/setup.c:867 (set (reg/f:SI 272)
        (symbol_ref:SI ("meminfo") [flags 0xc0] <var_decl 0x114015a0 meminfo>)) 167 {*arm_movsi_insn} (nil))

(insn 356 355 357 48 arch/arm/kernel/setup.c:867 (set (reg:SI 273 [ meminfo.nr_banks ])
        (mem/s/j/c:SI (reg/f:SI 272) [0 meminfo.nr_banks+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 357 356 358 48 arch/arm/kernel/setup.c:867 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 273 [ meminfo.nr_banks ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 358 357 359 48 arch/arm/kernel/setup.c:867 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 412)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 48 -> ( 49 59)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 166 170
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 166 170
;; rd  out 	(150)
40, 45, 50, 125, 171, 212, 213, 248, 249, 630, 669, 670, 4105, 4109, 4110, 4111, 4112, 4113, 4114, 4120, 4121, 4122, 4123, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 4148, 4149, 4150, 4151, 4154, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239, 4240, 4241, 4242, 4243, 4244, 4245, 4246, 4247, 4248, 4249, 4250, 4251, 4252, 4253, 4254, 4255, 4256, 4257, 4258, 4259, 4260, 4261, 4262


;; Succ edge  49 [0.0%]  (fallthru)
;; Succ edge  59 [100.0%] 

;; Start of basic block ( 48) -> 49
;; bb 49 artificial_defs: { }
;; bb 49 artificial_uses: { u484(11){ }u485(13){ }u486(25){ }u487(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 166 170
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 135
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 166 170
;; live  gen 	 135
;; live  kill	
;; rd  in  	(150)
40, 45, 50, 125, 171, 212, 213, 248, 249, 630, 669, 670, 4105, 4109, 4110, 4111, 4112, 4113, 4114, 4120, 4121, 4122, 4123, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 4148, 4149, 4150, 4151, 4154, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239, 4240, 4241, 4242, 4243, 4244, 4245, 4246, 4247, 4248, 4249, 4250, 4251, 4252, 4253, 4254, 4255, 4256, 4257, 4258, 4259, 4260, 4261, 4262
;; rd  gen 	(1)
4107
;; rd  kill	(2)
4106, 4107

;; Pred edge  48 [0.0%]  (fallthru)
(note 359 358 360 49 [bb 49] NOTE_INSN_BASIC_BLOCK)

(insn 360 359 378 49 arch/arm/kernel/setup.c:867 (set (reg/v/f:SI 135 [ tags.957 ])
        (reg/v/f:SI 136 [ tags.955 ])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 49 -> ( 53)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 166 170
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 166 170
;; rd  out 	(151)
40, 45, 50, 125, 171, 212, 213, 248, 249, 630, 669, 670, 4105, 4107, 4109, 4110, 4111, 4112, 4113, 4114, 4120, 4121, 4122, 4123, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 4148, 4149, 4150, 4151, 4154, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239, 4240, 4241, 4242, 4243, 4244, 4245, 4246, 4247, 4248, 4249, 4250, 4251, 4252, 4253, 4254, 4255, 4256, 4257, 4258, 4259, 4260, 4261, 4262


;; Succ edge  53 [100.0%]  (fallthru)

;; Start of basic block ( 53) -> 50
;; bb 50 artificial_defs: { }
;; bb 50 artificial_uses: { u489(11){ }u490(13){ }u491(25){ }u492(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 166 170
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc] 274 275
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 166 170
;; live  gen 	 24 [cc] 274 275
;; live  kill	
;; rd  in  	(158)
40, 45, 50, 125, 171, 212, 213, 248, 249, 628, 669, 670, 4105, 4106, 4107, 4109, 4110, 4111, 4112, 4113, 4114, 4120, 4121, 4122, 4123, 4124, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 4148, 4149, 4150, 4151, 4154, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239, 4240, 4241, 4242, 4243, 4244, 4245, 4246, 4247, 4248, 4249, 4250, 4251, 4252, 4253, 4254, 4255, 4256, 4257, 4258, 4259, 4260, 4261, 4262, 4263, 4264, 4265, 4266, 4267
;; rd  gen 	(3)
629, 4263, 4264
;; rd  kill	(2)
4263, 4264

;; Pred edge  53 [91.0%] 
(code_label 378 360 363 50 137 "" [1 uses])

(note 363 378 364 50 [bb 50] NOTE_INSN_BASIC_BLOCK)

(insn 364 363 365 50 arch/arm/kernel/setup.c:793 (set (reg:SI 274)
        (const_int 1413545986 [0x54410002])) 167 {*arm_movsi_insn} (nil))

(insn 365 364 366 50 arch/arm/kernel/setup.c:793 (set (reg:SI 275 [ <variable>.hdr.tag ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 135 [ tags.957 ])
                (const_int 4 [0x4])) [0 <variable>.hdr.tag+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 366 365 367 50 arch/arm/kernel/setup.c:793 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 275 [ <variable>.hdr.tag ])
            (reg:SI 274))) 219 {*arm_cmpsi_insn} (expr_list:REG_EQUAL (compare:CC (reg:SI 275 [ <variable>.hdr.tag ])
            (const_int 1413545986 [0x54410002]))
        (nil)))

(jump_insn 367 366 368 50 arch/arm/kernel/setup.c:793 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 371)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
        (nil)))
;; End of basic block 50 -> ( 51 52)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 166 170
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 166 170
;; rd  out 	(158)
40, 45, 50, 125, 171, 212, 213, 248, 249, 629, 669, 670, 4105, 4106, 4107, 4109, 4110, 4111, 4112, 4113, 4114, 4120, 4121, 4122, 4123, 4124, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 4148, 4149, 4150, 4151, 4154, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239, 4240, 4241, 4242, 4243, 4244, 4245, 4246, 4247, 4248, 4249, 4250, 4251, 4252, 4253, 4254, 4255, 4256, 4257, 4258, 4259, 4260, 4261, 4262, 4263, 4264, 4265, 4266, 4267


;; Succ edge  51 [28.0%]  (fallthru)
;; Succ edge  52 [72.0%] 

;; Start of basic block ( 50) -> 51
;; bb 51 artificial_defs: { }
;; bb 51 artificial_uses: { u497(11){ }u498(13){ }u499(25){ }u500(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 166 170
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 276
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 166 170
;; live  gen 	 276
;; live  kill	
;; rd  in  	(158)
40, 45, 50, 125, 171, 212, 213, 248, 249, 629, 669, 670, 4105, 4106, 4107, 4109, 4110, 4111, 4112, 4113, 4114, 4120, 4121, 4122, 4123, 4124, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 4148, 4149, 4150, 4151, 4154, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239, 4240, 4241, 4242, 4243, 4244, 4245, 4246, 4247, 4248, 4249, 4250, 4251, 4252, 4253, 4254, 4255, 4256, 4257, 4258, 4259, 4260, 4261, 4262, 4263, 4264, 4265, 4266, 4267
;; rd  gen 	(1)
4265
;; rd  kill	(1)
4265

;; Pred edge  50 [28.0%]  (fallthru)
(note 368 367 369 51 [bb 51] NOTE_INSN_BASIC_BLOCK)

(insn 369 368 370 51 arch/arm/kernel/setup.c:794 (set (reg:SI 276)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 370 369 371 51 arch/arm/kernel/setup.c:794 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 135 [ tags.957 ])
                (const_int 4 [0x4])) [0 <variable>.hdr.tag+0 S4 A32])
        (reg:SI 276)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))
;; End of basic block 51 -> ( 52)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 166 170
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 166 170
;; rd  out 	(158)
40, 45, 50, 125, 171, 212, 213, 248, 249, 629, 669, 670, 4105, 4106, 4107, 4109, 4110, 4111, 4112, 4113, 4114, 4120, 4121, 4122, 4123, 4124, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 4148, 4149, 4150, 4151, 4154, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239, 4240, 4241, 4242, 4243, 4244, 4245, 4246, 4247, 4248, 4249, 4250, 4251, 4252, 4253, 4254, 4255, 4256, 4257, 4258, 4259, 4260, 4261, 4262, 4263, 4264, 4265, 4266, 4267


;; Succ edge  52 [100.0%]  (fallthru)

;; Start of basic block ( 50 51) -> 52
;; bb 52 artificial_defs: { }
;; bb 52 artificial_uses: { u503(11){ }u504(13){ }u505(25){ }u506(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 166 170
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 135 146 277
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 166 170
;; live  gen 	 135 146 277
;; live  kill	
;; rd  in  	(158)
40, 45, 50, 125, 171, 212, 213, 248, 249, 629, 669, 670, 4105, 4106, 4107, 4109, 4110, 4111, 4112, 4113, 4114, 4120, 4121, 4122, 4123, 4124, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 4148, 4149, 4150, 4151, 4154, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239, 4240, 4241, 4242, 4243, 4244, 4245, 4246, 4247, 4248, 4249, 4250, 4251, 4252, 4253, 4254, 4255, 4256, 4257, 4258, 4259, 4260, 4261, 4262, 4263, 4264, 4265, 4266, 4267
;; rd  gen 	(3)
4106, 4124, 4266
;; rd  kill	(4)
4106, 4107, 4124, 4266

;; Pred edge  50 [72.0%] 
;; Pred edge  51 [100.0%]  (fallthru)
(code_label 371 370 372 52 136 "" [1 uses])

(note 372 371 373 52 [bb 52] NOTE_INSN_BASIC_BLOCK)

(insn 373 372 374 52 arch/arm/kernel/setup.c:792 (set (reg:SI 277 [ <variable>.hdr.size ])
        (mem/s/j:SI (reg/v/f:SI 135 [ tags.957 ]) [0 <variable>.hdr.size+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 374 373 375 52 arch/arm/kernel/setup.c:792 (set (reg:SI 146 [ D.26316 ])
        (ashift:SI (reg:SI 277 [ <variable>.hdr.size ])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (nil))

(insn 375 374 376 52 arch/arm/kernel/setup.c:792 (set (reg/v/f:SI 135 [ tags.957 ])
        (plus:SI (reg/v/f:SI 135 [ tags.957 ])
            (reg:SI 146 [ D.26316 ]))) 4 {*arm_addsi3} (nil))
;; End of basic block 52 -> ( 53)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 166 170
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 166 170
;; rd  out 	(157)
40, 45, 50, 125, 171, 212, 213, 248, 249, 629, 669, 670, 4105, 4106, 4109, 4110, 4111, 4112, 4113, 4114, 4120, 4121, 4122, 4123, 4124, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 4148, 4149, 4150, 4151, 4154, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239, 4240, 4241, 4242, 4243, 4244, 4245, 4246, 4247, 4248, 4249, 4250, 4251, 4252, 4253, 4254, 4255, 4256, 4257, 4258, 4259, 4260, 4261, 4262, 4263, 4264, 4265, 4266, 4267


;; Succ edge  53 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 49 52) -> 53
;; bb 53 artificial_defs: { }
;; bb 53 artificial_uses: { u511(11){ }u512(13){ }u513(25){ }u514(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 166 170
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc] 278
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 166 170
;; live  gen 	 24 [cc] 278
;; live  kill	
;; rd  in  	(159)
40, 45, 50, 125, 171, 212, 213, 248, 249, 629, 630, 669, 670, 4105, 4106, 4107, 4109, 4110, 4111, 4112, 4113, 4114, 4120, 4121, 4122, 4123, 4124, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 4148, 4149, 4150, 4151, 4154, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239, 4240, 4241, 4242, 4243, 4244, 4245, 4246, 4247, 4248, 4249, 4250, 4251, 4252, 4253, 4254, 4255, 4256, 4257, 4258, 4259, 4260, 4261, 4262, 4263, 4264, 4265, 4266, 4267
;; rd  gen 	(2)
628, 4267
;; rd  kill	(1)
4267

;; Pred edge  49 [100.0%]  (fallthru)
;; Pred edge  52 [100.0%]  (fallthru,dfs_back)
(code_label 376 375 377 53 135 "" [0 uses])

(note 377 376 379 53 [bb 53] NOTE_INSN_BASIC_BLOCK)

(insn 379 377 380 53 arch/arm/kernel/setup.c:792 discrim 1 (set (reg:SI 278 [ <variable>.hdr.size ])
        (mem/s/j:SI (reg/v/f:SI 135 [ tags.957 ]) [0 <variable>.hdr.size+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 380 379 381 53 arch/arm/kernel/setup.c:792 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 278 [ <variable>.hdr.size ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 381 380 400 53 arch/arm/kernel/setup.c:792 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 378)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
        (nil)))
;; End of basic block 53 -> ( 50 59)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 166 170
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 166 170
;; rd  out 	(158)
40, 45, 50, 125, 171, 212, 213, 248, 249, 628, 669, 670, 4105, 4106, 4107, 4109, 4110, 4111, 4112, 4113, 4114, 4120, 4121, 4122, 4123, 4124, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 4148, 4149, 4150, 4151, 4154, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239, 4240, 4241, 4242, 4243, 4244, 4245, 4246, 4247, 4248, 4249, 4250, 4251, 4252, 4253, 4254, 4255, 4256, 4257, 4258, 4259, 4260, 4261, 4262, 4263, 4264, 4265, 4266, 4267


;; Succ edge  50 [91.0%] 
;; Succ edge  59 [9.0%]  (fallthru)

;; Start of basic block ( 57) -> 54
;; bb 54 artificial_defs: { }
;; bb 54 artificial_uses: { u518(11){ }u519(13){ }u520(25){ }u521(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 147 166 170
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 147
;; lr  def 	 24 [cc] 279 280
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 147 166 170
;; live  gen 	 24 [cc] 279 280
;; live  kill	
;; rd  in  	(171)
3, 36, 40, 45, 50, 125, 171, 212, 213, 248, 249, 625, 669, 670, 4105, 4106, 4107, 4108, 4109, 4110, 4111, 4112, 4113, 4114, 4120, 4121, 4122, 4123, 4124, 4125, 4126, 4127, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 4148, 4149, 4150, 4151, 4154, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239, 4240, 4241, 4242, 4243, 4244, 4245, 4246, 4247, 4248, 4249, 4250, 4251, 4252, 4253, 4254, 4255, 4256, 4257, 4258, 4259, 4260, 4261, 4262, 4263, 4264, 4265, 4266, 4267, 4268, 4269, 4270, 4271, 4272, 4273, 4377
;; rd  gen 	(3)
627, 4268, 4269
;; rd  kill	(2)
4268, 4269

;; Pred edge  57 [95.5%] 
(code_label 400 381 385 54 140 "" [1 uses])

(note 385 400 386 54 [bb 54] NOTE_INSN_BASIC_BLOCK)

(insn 386 385 387 54 arch/arm/kernel/setup.c:694 (set (reg:SI 279 [ <variable>.hdr.tag ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 136 [ tags.955 ])
                (const_int 4 [0x4])) [0 <variable>.hdr.tag+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 387 386 388 54 arch/arm/kernel/setup.c:694 (set (reg:SI 280 [ <variable>.tag ])
        (mem/s/j:SI (reg/v/f:SI 147 [ t ]) [0 <variable>.tag+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 388 387 389 54 arch/arm/kernel/setup.c:694 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 279 [ <variable>.hdr.tag ])
            (reg:SI 280 [ <variable>.tag ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 389 388 390 54 arch/arm/kernel/setup.c:694 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 396)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9550 [0x254e])
        (nil)))
;; End of basic block 54 -> ( 55 56)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 147 166 170
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 147 166 170
;; rd  out 	(171)
3, 36, 40, 45, 50, 125, 171, 212, 213, 248, 249, 627, 669, 670, 4105, 4106, 4107, 4108, 4109, 4110, 4111, 4112, 4113, 4114, 4120, 4121, 4122, 4123, 4124, 4125, 4126, 4127, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 4148, 4149, 4150, 4151, 4154, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239, 4240, 4241, 4242, 4243, 4244, 4245, 4246, 4247, 4248, 4249, 4250, 4251, 4252, 4253, 4254, 4255, 4256, 4257, 4258, 4259, 4260, 4261, 4262, 4263, 4264, 4265, 4266, 4267, 4268, 4269, 4270, 4271, 4272, 4273, 4377


;; Succ edge  55 [4.5%]  (fallthru)
;; Succ edge  56 [95.5%] 

;; Start of basic block ( 54) -> 55
;; bb 55 artificial_defs: { }
;; bb 55 artificial_uses: { u527(11){ }u528(13){ }u529(25){ }u530(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 147 166 170
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 147
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 281
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 147 166 170
;; live  gen 	 0 [r0] 281
;; live  kill	 14 [lr]
;; rd  in  	(171)
3, 36, 40, 45, 50, 125, 171, 212, 213, 248, 249, 627, 669, 670, 4105, 4106, 4107, 4108, 4109, 4110, 4111, 4112, 4113, 4114, 4120, 4121, 4122, 4123, 4124, 4125, 4126, 4127, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 4148, 4149, 4150, 4151, 4154, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239, 4240, 4241, 4242, 4243, 4244, 4245, 4246, 4247, 4248, 4249, 4250, 4251, 4252, 4253, 4254, 4255, 4256, 4257, 4258, 4259, 4260, 4261, 4262, 4263, 4264, 4265, 4266, 4267, 4268, 4269, 4270, 4271, 4272, 4273, 4377
;; rd  gen 	(2)
36, 4270
;; rd  kill	(1)
4270

;; Pred edge  54 [4.5%]  (fallthru)
(note 390 389 391 55 [bb 55] NOTE_INSN_BASIC_BLOCK)

(insn 391 390 392 55 arch/arm/kernel/setup.c:695 (set (reg/f:SI 281 [ <variable>.parse ])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 147 [ t ])
                (const_int 4 [0x4])) [0 <variable>.parse+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 392 391 393 55 arch/arm/kernel/setup.c:695 (set (reg:SI 0 r0)
        (reg/v/f:SI 136 [ tags.955 ])) 167 {*arm_movsi_insn} (nil))

(call_insn 393 392 396 55 arch/arm/kernel/setup.c:695 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (reg/f:SI 281 [ <variable>.parse ]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 249 {*call_value_reg_armv5} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 55 -> ( 58)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 166 170
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 166 170
;; rd  out 	(167)
36, 125, 171, 212, 213, 248, 249, 627, 669, 670, 4105, 4106, 4107, 4108, 4109, 4110, 4111, 4112, 4113, 4114, 4120, 4121, 4122, 4123, 4124, 4125, 4126, 4127, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 4148, 4149, 4150, 4151, 4154, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239, 4240, 4241, 4242, 4243, 4244, 4245, 4246, 4247, 4248, 4249, 4250, 4251, 4252, 4253, 4254, 4255, 4256, 4257, 4258, 4259, 4260, 4261, 4262, 4263, 4264, 4265, 4266, 4267, 4268, 4269, 4270, 4271, 4272, 4273, 4377


;; Succ edge  58 [100.0%]  (fallthru)

;; Start of basic block ( 54) -> 56
;; bb 56 artificial_defs: { }
;; bb 56 artificial_uses: { u536(11){ }u537(13){ }u538(25){ }u539(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 147 166 170
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; lr  def 	 147
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 147 166 170
;; live  gen 	 147
;; live  kill	
;; rd  in  	(171)
3, 36, 40, 45, 50, 125, 171, 212, 213, 248, 249, 627, 669, 670, 4105, 4106, 4107, 4108, 4109, 4110, 4111, 4112, 4113, 4114, 4120, 4121, 4122, 4123, 4124, 4125, 4126, 4127, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 4148, 4149, 4150, 4151, 4154, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239, 4240, 4241, 4242, 4243, 4244, 4245, 4246, 4247, 4248, 4249, 4250, 4251, 4252, 4253, 4254, 4255, 4256, 4257, 4258, 4259, 4260, 4261, 4262, 4263, 4264, 4265, 4266, 4267, 4268, 4269, 4270, 4271, 4272, 4273, 4377
;; rd  gen 	(1)
4126
;; rd  kill	(2)
4125, 4126

;; Pred edge  54 [95.5%] 
(code_label 396 393 397 56 138 "" [1 uses])

(note 397 396 398 56 [bb 56] NOTE_INSN_BASIC_BLOCK)

(insn 398 397 419 56 arch/arm/kernel/setup.c:693 (set (reg/v/f:SI 147 [ t ])
        (plus:SI (reg/v/f:SI 147 [ t ])
            (const_int 8 [0x8]))) 4 {*arm_addsi3} (nil))
;; End of basic block 56 -> ( 57)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 147 166 170
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 147 166 170
;; rd  out 	(170)
3, 36, 40, 45, 50, 125, 171, 212, 213, 248, 249, 627, 669, 670, 4105, 4106, 4107, 4108, 4109, 4110, 4111, 4112, 4113, 4114, 4120, 4121, 4122, 4123, 4124, 4126, 4127, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 4148, 4149, 4150, 4151, 4154, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239, 4240, 4241, 4242, 4243, 4244, 4245, 4246, 4247, 4248, 4249, 4250, 4251, 4252, 4253, 4254, 4255, 4256, 4257, 4258, 4259, 4260, 4261, 4262, 4263, 4264, 4265, 4266, 4267, 4268, 4269, 4270, 4271, 4272, 4273, 4377


;; Succ edge  57 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 60 56) -> 57
;; bb 57 artificial_defs: { }
;; bb 57 artificial_uses: { u541(11){ }u542(13){ }u543(25){ }u544(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 147 166 170
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; lr  def 	 24 [cc] 282
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 147 166 170
;; live  gen 	 24 [cc] 282
;; live  kill	
;; rd  in  	(172)
3, 36, 40, 45, 50, 125, 171, 212, 213, 248, 249, 624, 627, 669, 670, 4105, 4106, 4107, 4108, 4109, 4110, 4111, 4112, 4113, 4114, 4120, 4121, 4122, 4123, 4124, 4125, 4126, 4127, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 4148, 4149, 4150, 4151, 4154, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239, 4240, 4241, 4242, 4243, 4244, 4245, 4246, 4247, 4248, 4249, 4250, 4251, 4252, 4253, 4254, 4255, 4256, 4257, 4258, 4259, 4260, 4261, 4262, 4263, 4264, 4265, 4266, 4267, 4268, 4269, 4270, 4271, 4272, 4273, 4377
;; rd  gen 	(2)
625, 4271
;; rd  kill	(1)
4271

;; Pred edge  60 [100.0%]  (fallthru)
;; Pred edge  56 [100.0%]  (fallthru,dfs_back)
(code_label 419 398 399 57 142 "" [0 uses])

(note 399 419 401 57 [bb 57] NOTE_INSN_BASIC_BLOCK)

(insn 401 399 402 57 arch/arm/kernel/setup.c:693 (set (reg/f:SI 282)
        (symbol_ref:SI ("__tagtable_end") [flags 0xc0] <var_decl 0x115eede0 __tagtable_end>)) 167 {*arm_movsi_insn} (nil))

(insn 402 401 403 57 arch/arm/kernel/setup.c:693 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 147 [ t ])
            (reg/f:SI 282))) 219 {*arm_cmpsi_insn} (expr_list:REG_EQUAL (compare:CC (reg/v/f:SI 147 [ t ])
            (symbol_ref:SI ("__tagtable_end") [flags 0xc0] <var_decl 0x115eede0 __tagtable_end>))
        (nil)))

(jump_insn 403 402 407 57 arch/arm/kernel/setup.c:693 (set (pc)
        (if_then_else (ltu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 400)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9550 [0x254e])
        (nil)))
;; End of basic block 57 -> ( 54 85)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 147 166 170
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 147 166 170
;; rd  out 	(171)
3, 36, 40, 45, 50, 125, 171, 212, 213, 248, 249, 625, 669, 670, 4105, 4106, 4107, 4108, 4109, 4110, 4111, 4112, 4113, 4114, 4120, 4121, 4122, 4123, 4124, 4125, 4126, 4127, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 4148, 4149, 4150, 4151, 4154, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239, 4240, 4241, 4242, 4243, 4244, 4245, 4246, 4247, 4248, 4249, 4250, 4251, 4252, 4253, 4254, 4255, 4256, 4257, 4258, 4259, 4260, 4261, 4262, 4263, 4264, 4265, 4266, 4267, 4268, 4269, 4270, 4271, 4272, 4273, 4377


;; Succ edge  54 [95.5%] 
;; Succ edge  85 [4.5%]  (fallthru)

;; Start of basic block ( 55 85) -> 58
;; bb 58 artificial_defs: { }
;; bb 58 artificial_uses: { u548(11){ }u549(13){ }u550(25){ }u551(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 166 170
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 136 148 283
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 166 170
;; live  gen 	 136 148 283
;; live  kill	
;; rd  in  	(169)
3, 36, 125, 171, 212, 213, 248, 249, 625, 627, 669, 670, 4105, 4106, 4107, 4108, 4109, 4110, 4111, 4112, 4113, 4114, 4120, 4121, 4122, 4123, 4124, 4125, 4126, 4127, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 4148, 4149, 4150, 4151, 4154, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239, 4240, 4241, 4242, 4243, 4244, 4245, 4246, 4247, 4248, 4249, 4250, 4251, 4252, 4253, 4254, 4255, 4256, 4257, 4258, 4259, 4260, 4261, 4262, 4263, 4264, 4265, 4266, 4267, 4268, 4269, 4270, 4271, 4272, 4273, 4377
;; rd  gen 	(3)
4108, 4127, 4272
;; rd  kill	(8)
4108, 4109, 4110, 4111, 4112, 4113, 4127, 4272

;; Pred edge  55 [100.0%]  (fallthru)
;; Pred edge  85 [100.0%]  (fallthru)
(code_label 407 403 408 58 139 "" [0 uses])

(note 408 407 409 58 [bb 58] NOTE_INSN_BASIC_BLOCK)

(insn 409 408 410 58 arch/arm/kernel/setup.c:708 (set (reg:SI 283 [ <variable>.hdr.size ])
        (mem/s/j:SI (reg/v/f:SI 136 [ tags.955 ]) [0 <variable>.hdr.size+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 410 409 411 58 arch/arm/kernel/setup.c:708 (set (reg:SI 148 [ D.26310 ])
        (ashift:SI (reg:SI 283 [ <variable>.hdr.size ])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (nil))

(insn 411 410 412 58 arch/arm/kernel/setup.c:708 (set (reg/v/f:SI 136 [ tags.955 ])
        (plus:SI (reg/v/f:SI 136 [ tags.955 ])
            (reg:SI 148 [ D.26310 ]))) 4 {*arm_addsi3} (nil))
;; End of basic block 58 -> ( 59)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 166 170
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 166 170
;; rd  out 	(164)
3, 36, 125, 171, 212, 213, 248, 249, 625, 627, 669, 670, 4105, 4106, 4107, 4108, 4114, 4120, 4121, 4122, 4123, 4124, 4125, 4126, 4127, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 4148, 4149, 4150, 4151, 4154, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239, 4240, 4241, 4242, 4243, 4244, 4245, 4246, 4247, 4248, 4249, 4250, 4251, 4252, 4253, 4254, 4255, 4256, 4257, 4258, 4259, 4260, 4261, 4262, 4263, 4264, 4265, 4266, 4267, 4268, 4269, 4270, 4271, 4272, 4273, 4377


;; Succ edge  59 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 48 58 53) -> 59
;; bb 59 artificial_defs: { }
;; bb 59 artificial_uses: { u556(11){ }u557(13){ }u558(25){ }u559(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 166 170
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 24 [cc] 284
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 166 170
;; live  gen 	 24 [cc] 284
;; live  kill	
;; rd  in  	(174)
3, 36, 40, 45, 50, 125, 171, 212, 213, 248, 249, 625, 627, 628, 630, 669, 670, 4105, 4106, 4107, 4108, 4109, 4110, 4111, 4112, 4113, 4114, 4120, 4121, 4122, 4123, 4124, 4125, 4126, 4127, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 4148, 4149, 4150, 4151, 4154, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239, 4240, 4241, 4242, 4243, 4244, 4245, 4246, 4247, 4248, 4249, 4250, 4251, 4252, 4253, 4254, 4255, 4256, 4257, 4258, 4259, 4260, 4261, 4262, 4263, 4264, 4265, 4266, 4267, 4268, 4269, 4270, 4271, 4272, 4273, 4377
;; rd  gen 	(2)
624, 4273
;; rd  kill	(1)
4273

;; Pred edge  48 [100.0%] 
;; Pred edge  58 [100.0%]  (fallthru,dfs_back)
;; Pred edge  53 [9.0%]  (fallthru)
(code_label 412 411 413 59 134 "" [1 uses])

(note 413 412 414 59 [bb 59] NOTE_INSN_BASIC_BLOCK)

(insn 414 413 415 59 arch/arm/kernel/setup.c:708 discrim 1 (set (reg:SI 284 [ <variable>.hdr.size ])
        (mem/s/j:SI (reg/v/f:SI 136 [ tags.955 ]) [0 <variable>.hdr.size+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 415 414 416 59 arch/arm/kernel/setup.c:708 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 284 [ <variable>.hdr.size ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 416 415 417 59 arch/arm/kernel/setup.c:708 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 422)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 59 -> ( 60 61)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 166 170
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 166 170
;; rd  out 	(171)
3, 36, 40, 45, 50, 125, 171, 212, 213, 248, 249, 624, 669, 670, 4105, 4106, 4107, 4108, 4109, 4110, 4111, 4112, 4113, 4114, 4120, 4121, 4122, 4123, 4124, 4125, 4126, 4127, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 4148, 4149, 4150, 4151, 4154, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239, 4240, 4241, 4242, 4243, 4244, 4245, 4246, 4247, 4248, 4249, 4250, 4251, 4252, 4253, 4254, 4255, 4256, 4257, 4258, 4259, 4260, 4261, 4262, 4263, 4264, 4265, 4266, 4267, 4268, 4269, 4270, 4271, 4272, 4273, 4377


;; Succ edge  60 [0.0%]  (fallthru)
;; Succ edge  61 [100.0%] 

;; Start of basic block ( 59) -> 60
;; bb 60 artificial_defs: { }
;; bb 60 artificial_uses: { u563(11){ }u564(13){ }u565(25){ }u566(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 166 170
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 147
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 166 170
;; live  gen 	 147
;; live  kill	
;; rd  in  	(171)
3, 36, 40, 45, 50, 125, 171, 212, 213, 248, 249, 624, 669, 670, 4105, 4106, 4107, 4108, 4109, 4110, 4111, 4112, 4113, 4114, 4120, 4121, 4122, 4123, 4124, 4125, 4126, 4127, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 4148, 4149, 4150, 4151, 4154, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239, 4240, 4241, 4242, 4243, 4244, 4245, 4246, 4247, 4248, 4249, 4250, 4251, 4252, 4253, 4254, 4255, 4256, 4257, 4258, 4259, 4260, 4261, 4262, 4263, 4264, 4265, 4266, 4267, 4268, 4269, 4270, 4271, 4272, 4273, 4377
;; rd  gen 	(1)
4125
;; rd  kill	(2)
4125, 4126

;; Pred edge  59 [0.0%]  (fallthru)
(note 417 416 418 60 [bb 60] NOTE_INSN_BASIC_BLOCK)

(insn 418 417 422 60 arch/arm/kernel/setup.c:708 discrim 1 (set (reg/v/f:SI 147 [ t ])
        (symbol_ref:SI ("__tagtable_begin") [flags 0xc0] <var_decl 0x115eed80 __tagtable_begin>)) 167 {*arm_movsi_insn} (nil))
;; End of basic block 60 -> ( 57)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 147 166 170
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 147 166 170
;; rd  out 	(170)
3, 36, 40, 45, 50, 125, 171, 212, 213, 248, 249, 624, 669, 670, 4105, 4106, 4107, 4108, 4109, 4110, 4111, 4112, 4113, 4114, 4120, 4121, 4122, 4123, 4124, 4125, 4127, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 4148, 4149, 4150, 4151, 4154, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239, 4240, 4241, 4242, 4243, 4244, 4245, 4246, 4247, 4248, 4249, 4250, 4251, 4252, 4253, 4254, 4255, 4256, 4257, 4258, 4259, 4260, 4261, 4262, 4263, 4264, 4265, 4266, 4267, 4268, 4269, 4270, 4271, 4272, 4273, 4377


;; Succ edge  57 [100.0%]  (fallthru)

;; Start of basic block ( 47 59) -> 61
;; bb 61 artificial_defs: { }
;; bb 61 artificial_uses: { u567(11){ }u568(13){ }u569(25){ }u570(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166 170
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 285 286 287 288 289 290 291 292 293
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166 170
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 285 286 287 288 289 290 291 292 293
;; live  kill	 14 [lr]
;; rd  in  	(172)
3, 36, 40, 45, 50, 125, 171, 212, 213, 248, 249, 624, 631, 669, 670, 4105, 4106, 4107, 4108, 4109, 4110, 4111, 4112, 4113, 4114, 4120, 4121, 4122, 4123, 4124, 4125, 4126, 4127, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 4148, 4149, 4150, 4151, 4154, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239, 4240, 4241, 4242, 4243, 4244, 4245, 4246, 4247, 4248, 4249, 4250, 4251, 4252, 4253, 4254, 4255, 4256, 4257, 4258, 4259, 4260, 4261, 4262, 4263, 4264, 4265, 4266, 4267, 4268, 4269, 4270, 4271, 4272, 4273, 4377
;; rd  gen 	(11)
34, 622, 4274, 4275, 4276, 4277, 4278, 4279, 4280, 4281, 4282
;; rd  kill	(9)
4274, 4275, 4276, 4277, 4278, 4279, 4280, 4281, 4282

;; Pred edge  47 [100.0%] 
;; Pred edge  59 [100.0%] 
(code_label 422 418 423 61 133 "" [2 uses])

(note 423 422 424 61 [bb 61] NOTE_INSN_BASIC_BLOCK)

(insn 424 423 425 61 arch/arm/kernel/setup.c:874 (set (reg/f:SI 285)
        (symbol_ref:SI ("boot_command_line") [flags 0xc0] <var_decl 0x10a4f9c0 boot_command_line>)) 167 {*arm_movsi_insn} (nil))

(insn 425 424 426 61 arch/arm/kernel/setup.c:874 (set (reg:SI 0 r0)
        (reg/f:SI 285)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("boot_command_line") [flags 0xc0] <var_decl 0x10a4f9c0 boot_command_line>)
        (nil)))

(insn 426 425 427 61 arch/arm/kernel/setup.c:874 (set (reg:SI 1 r1)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 from+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 427 426 428 61 arch/arm/kernel/setup.c:874 (set (reg:SI 2 r2)
        (const_int 1024 [0x400])) 167 {*arm_movsi_insn} (nil))

(call_insn 428 427 429 61 arch/arm/kernel/setup.c:874 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strlcpy") [flags 0x41] <function_decl 0x10bb1380 strlcpy>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 429 428 430 61 arch/arm/kernel/setup.c:890 (set (reg/f:SI 286)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 430 429 431 61 arch/arm/kernel/setup.c:890 (set (mem/f/c/i:SI (reg/f:SI 286) [0 machine_desc+0 S4 A32])
        (reg/v/f:SI 166 [ mdesc ])) 167 {*arm_movsi_insn} (nil))

(insn 431 430 432 61 arch/arm/kernel/setup.c:891 (set (reg/f:SI 287)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 432 431 433 61 arch/arm/kernel/setup.c:891 (set (reg/f:SI 288 [ <variable>.name ])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 166 [ mdesc ])
                (const_int 4 [0x4])) [0 <variable>.name+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 433 432 434 61 arch/arm/kernel/setup.c:891 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 287)
                (const_int 24 [0x18])) [0 machine_name+0 S4 A32])
        (reg/f:SI 288 [ <variable>.name ])) 167 {*arm_movsi_insn} (nil))

(insn 434 433 436 61 arch/arm/kernel/setup.c:899 (set (reg:SI 290)
        (zero_extend:SI (mem/s:QI (plus:SI (reg/v/f:SI 166 [ mdesc ])
                    (const_int 28 [0x1c])) [0 S1 A32]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 436 434 437 61 arch/arm/kernel/setup.c:899 (set (reg:SI 291)
        (and:SI (reg:SI 290)
            (const_int 8 [0x8]))) 67 {*arm_andsi3_insn} (nil))

(insn 437 436 438 61 arch/arm/kernel/setup.c:899 (set (reg:QI 292)
        (subreg:QI (reg:SI 291) 0)) 178 {*arm_movqi_insn} (nil))

(insn 438 437 439 61 arch/arm/kernel/setup.c:899 (set (reg:SI 293)
        (zero_extend:SI (reg:QI 292))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 439 438 440 61 arch/arm/kernel/setup.c:899 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 293)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 440 439 441 61 arch/arm/kernel/setup.c:899 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 445)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))
;; End of basic block 61 -> ( 62 63)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166 170
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166 170
;; rd  out 	(176)
34, 125, 171, 212, 213, 248, 249, 622, 669, 670, 4105, 4106, 4107, 4108, 4109, 4110, 4111, 4112, 4113, 4114, 4120, 4121, 4122, 4123, 4124, 4125, 4126, 4127, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 4148, 4149, 4150, 4151, 4154, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239, 4240, 4241, 4242, 4243, 4244, 4245, 4246, 4247, 4248, 4249, 4250, 4251, 4252, 4253, 4254, 4255, 4256, 4257, 4258, 4259, 4260, 4261, 4262, 4263, 4264, 4265, 4266, 4267, 4268, 4269, 4270, 4271, 4272, 4273, 4274, 4275, 4276, 4277, 4278, 4279, 4280, 4281, 4282, 4377


;; Succ edge  62 [29.0%]  (fallthru)
;; Succ edge  63 [71.0%] 

;; Start of basic block ( 61) -> 62
;; bb 62 artificial_defs: { }
;; bb 62 artificial_uses: { u589(11){ }u590(13){ }u591(25){ }u592(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166 170
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 294
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166 170
;; live  gen 	 0 [r0] 294
;; live  kill	 14 [lr]
;; rd  in  	(176)
34, 125, 171, 212, 213, 248, 249, 622, 669, 670, 4105, 4106, 4107, 4108, 4109, 4110, 4111, 4112, 4113, 4114, 4120, 4121, 4122, 4123, 4124, 4125, 4126, 4127, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 4148, 4149, 4150, 4151, 4154, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239, 4240, 4241, 4242, 4243, 4244, 4245, 4246, 4247, 4248, 4249, 4250, 4251, 4252, 4253, 4254, 4255, 4256, 4257, 4258, 4259, 4260, 4261, 4262, 4263, 4264, 4265, 4266, 4267, 4268, 4269, 4270, 4271, 4272, 4273, 4274, 4275, 4276, 4277, 4278, 4279, 4280, 4281, 4282, 4377
;; rd  gen 	(1)
4283
;; rd  kill	(1)
4283

;; Pred edge  61 [29.0%]  (fallthru)
(note 441 440 442 62 [bb 62] NOTE_INSN_BASIC_BLOCK)

(insn 442 441 443 62 arch/arm/kernel/setup.c:900 (set (reg/f:SI 294)
        (symbol_ref/v/f:SI ("*.LC35") [flags 0x82] <string_cst 0x11727620>)) 167 {*arm_movsi_insn} (nil))

(insn 443 442 444 62 arch/arm/kernel/setup.c:900 (set (reg:SI 0 r0)
        (reg/f:SI 294)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC35") [flags 0x82] <string_cst 0x11727620>)
        (nil)))

(call_insn 444 443 445 62 arch/arm/kernel/setup.c:900 (parallel [
            (call (mem:SI (symbol_ref:SI ("reboot_setup") [flags 0x41] <function_decl 0x115a7d80 reboot_setup>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 62 -> ( 63)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166 170
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166 170
;; rd  out 	(177)
34, 125, 171, 212, 213, 248, 249, 622, 669, 670, 4105, 4106, 4107, 4108, 4109, 4110, 4111, 4112, 4113, 4114, 4120, 4121, 4122, 4123, 4124, 4125, 4126, 4127, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 4148, 4149, 4150, 4151, 4154, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239, 4240, 4241, 4242, 4243, 4244, 4245, 4246, 4247, 4248, 4249, 4250, 4251, 4252, 4253, 4254, 4255, 4256, 4257, 4258, 4259, 4260, 4261, 4262, 4263, 4264, 4265, 4266, 4267, 4268, 4269, 4270, 4271, 4272, 4273, 4274, 4275, 4276, 4277, 4278, 4279, 4280, 4281, 4282, 4283, 4377


;; Succ edge  63 [100.0%]  (fallthru)

;; Start of basic block ( 61 62) -> 63
;; bb 63 artificial_defs: { }
;; bb 63 artificial_uses: { u596(11){ }u597(13){ }u598(25){ }u599(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166 170
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166 170
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 140 168 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166 170
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 140 168 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318
;; live  kill	 14 [lr]
;; rd  in  	(177)
34, 125, 171, 212, 213, 248, 249, 622, 669, 670, 4105, 4106, 4107, 4108, 4109, 4110, 4111, 4112, 4113, 4114, 4120, 4121, 4122, 4123, 4124, 4125, 4126, 4127, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 4148, 4149, 4150, 4151, 4154, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239, 4240, 4241, 4242, 4243, 4244, 4245, 4246, 4247, 4248, 4249, 4250, 4251, 4252, 4253, 4254, 4255, 4256, 4257, 4258, 4259, 4260, 4261, 4262, 4263, 4264, 4265, 4266, 4267, 4268, 4269, 4270, 4271, 4272, 4273, 4274, 4275, 4276, 4277, 4278, 4279, 4280, 4281, 4282, 4283, 4377
;; rd  gen 	(26)
4118, 4153, 4284, 4285, 4286, 4287, 4288, 4289, 4290, 4291, 4292, 4293, 4294, 4295, 4296, 4297, 4298, 4299, 4300, 4301, 4302, 4303, 4304, 4305, 4306, 4307
;; rd  kill	(27)
4117, 4118, 4153, 4284, 4285, 4286, 4287, 4288, 4289, 4290, 4291, 4292, 4293, 4294, 4295, 4296, 4297, 4298, 4299, 4300, 4301, 4302, 4303, 4304, 4305, 4306, 4307

;; Pred edge  61 [71.0%] 
;; Pred edge  62 [100.0%]  (fallthru)
(code_label 445 444 446 63 143 "" [1 uses])

(note 446 445 447 63 [bb 63] NOTE_INSN_BASIC_BLOCK)

(insn 447 446 448 63 arch/arm/kernel/setup.c:902 (set (reg/f:SI 168 [ _text.368 ])
        (symbol_ref:SI ("_text") [flags 0xc0] <var_decl 0x113f3960 _text>)) 167 {*arm_movsi_insn} (nil))

(insn 448 447 449 63 arch/arm/kernel/setup.c:902 (set (reg/f:SI 295)
        (symbol_ref:SI ("init_mm") [flags 0xc0] <var_decl 0x10fe2000 init_mm>)) 167 {*arm_movsi_insn} (nil))

(insn 449 448 451 63 arch/arm/kernel/setup.c:902 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 295)
                (const_int 128 [0x80])) [0 init_mm.start_code+0 S4 A32])
        (reg/f:SI 168 [ _text.368 ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("_text") [flags 0xc0] <var_decl 0x113f3960 _text>)
        (nil)))

(insn 451 449 452 63 arch/arm/kernel/setup.c:903 (set (reg/f:SI 297)
        (symbol_ref:SI ("_etext") [flags 0xc0] <var_decl 0x113f3a20 _etext>)) 167 {*arm_movsi_insn} (nil))

(insn 452 451 454 63 arch/arm/kernel/setup.c:903 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 295)
                (const_int 132 [0x84])) [0 init_mm.end_code+0 S4 A32])
        (reg/f:SI 297)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("_etext") [flags 0xc0] <var_decl 0x113f3a20 _etext>)
        (nil)))

(insn 454 452 455 63 arch/arm/kernel/setup.c:904 (set (reg/f:SI 299)
        (symbol_ref:SI ("_edata") [flags 0xc0] <var_decl 0x113f3b40 _edata>)) 167 {*arm_movsi_insn} (nil))

(insn 455 454 457 63 arch/arm/kernel/setup.c:904 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 295)
                (const_int 140 [0x8c])) [0 init_mm.end_data+0 S4 A32])
        (reg/f:SI 299)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("_edata") [flags 0xc0] <var_decl 0x113f3b40 _edata>)
        (nil)))

(insn 457 455 458 63 arch/arm/kernel/setup.c:905 (set (reg/f:SI 301)
        (symbol_ref:SI ("_end") [flags 0xc0] <var_decl 0x113f3de0 _end>)) 167 {*arm_movsi_insn} (nil))

(insn 458 457 459 63 arch/arm/kernel/setup.c:905 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 295)
                (const_int 148 [0x94])) [0 init_mm.brk+0 S4 A32])
        (reg/f:SI 301)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("_end") [flags 0xc0] <var_decl 0x113f3de0 _end>)
        (nil)))

(insn 459 458 460 63 arch/arm/kernel/setup.c:908 (set (reg/f:SI 302)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 460 459 461 63 arch/arm/kernel/setup.c:908 (set (reg/f:SI 304)
        (plus:SI (reg/f:SI 302)
            (const_int 1072 [0x430]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                (const_int 1072 [0x430])))
        (nil)))

(insn 461 460 462 63 arch/arm/kernel/setup.c:908 (set (reg/f:SI 303)
        (plus:SI (reg/f:SI 304)
            (const_int 12 [0xc]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                (const_int 1084 [0x43c])))
        (nil)))

(insn 462 461 463 63 arch/arm/kernel/setup.c:908 (set (reg/f:SI 305)
        (symbol_ref:SI ("boot_command_line") [flags 0xc0] <var_decl 0x10a4f9c0 boot_command_line>)) 167 {*arm_movsi_insn} (nil))

(insn 463 462 464 63 arch/arm/kernel/setup.c:908 (set (reg:SI 0 r0)
        (reg/f:SI 303)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                (const_int 1084 [0x43c])))
        (nil)))

(insn 464 463 465 63 arch/arm/kernel/setup.c:908 (set (reg:SI 1 r1)
        (reg/f:SI 305)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("boot_command_line") [flags 0xc0] <var_decl 0x10a4f9c0 boot_command_line>)
        (nil)))

(insn 465 464 466 63 arch/arm/kernel/setup.c:908 (set (reg:SI 2 r2)
        (const_int 1024 [0x400])) 167 {*arm_movsi_insn} (nil))

(call_insn 466 465 470 63 arch/arm/kernel/setup.c:908 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strlcpy") [flags 0x41] <function_decl 0x10bb1380 strlcpy>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 470 466 471 63 arch/arm/kernel/setup.c:909 (set (mem/f:SI (reg/v/f:SI 170 [ cmdline_p ]) [0 S4 A32])
        (reg/f:SI 303)) 167 {*arm_movsi_insn} (nil))

(call_insn 471 470 472 63 arch/arm/kernel/setup.c:911 (parallel [
            (call (mem:SI (symbol_ref:SI ("parse_early_param") [flags 0x41] <function_decl 0x10a57400 parse_early_param>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(call_insn 472 471 473 63 arch/arm/kernel/setup.c:913 (parallel [
            (call (mem:SI (symbol_ref:SI ("sanity_check_meminfo") [flags 0x41] <function_decl 0x115a7d00 sanity_check_meminfo>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(insn 473 472 474 63 arch/arm/kernel/setup.c:914 (set (reg/f:SI 309)
        (symbol_ref:SI ("meminfo") [flags 0xc0] <var_decl 0x114015a0 meminfo>)) 167 {*arm_movsi_insn} (nil))

(insn 474 473 475 63 arch/arm/kernel/setup.c:914 (set (reg:SI 0 r0)
        (reg/f:SI 309)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("meminfo") [flags 0xc0] <var_decl 0x114015a0 meminfo>)
        (nil)))

(insn 475 474 476 63 arch/arm/kernel/setup.c:914 (set (reg:SI 1 r1)
        (reg/v/f:SI 166 [ mdesc ])) 167 {*arm_movsi_insn} (nil))

(call_insn 476 475 477 63 arch/arm/kernel/setup.c:914 (parallel [
            (call (mem:SI (symbol_ref:SI ("arm_memblock_init") [flags 0x41] <function_decl 0x113e4000 arm_memblock_init>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 477 476 478 63 arch/arm/kernel/setup.c:916 (set (reg:SI 0 r0)
        (reg/v/f:SI 166 [ mdesc ])) 167 {*arm_movsi_insn} (nil))

(call_insn 478 477 479 63 arch/arm/kernel/setup.c:916 (parallel [
            (call (mem:SI (symbol_ref:SI ("paging_init") [flags 0x41] <function_decl 0x115a7c80 paging_init>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 479 478 480 63 arch/arm/kernel/setup.c:543 (set (reg/f:SI 310)
        (symbol_ref:SI ("*.LANCHOR5") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 480 479 481 63 arch/arm/kernel/setup.c:543 (set (reg/f:SI 311)
        (plus:SI (reg/f:SI 168 [ _text.368 ])
            (const_int 1073741824 [0x40000000]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("_text") [flags 0xc0] <var_decl 0x113f3960 _text>)
                (const_int 1073741824 [0x40000000])))
        (nil)))

(insn 481 480 483 63 arch/arm/kernel/setup.c:543 (set (mem/s/j:SI (plus:SI (reg/f:SI 310)
                (const_int 28 [0x1c])) [0 <variable>.start+0 S4 A32])
        (reg/f:SI 311)) 167 {*arm_movsi_insn} (nil))

(insn 483 481 484 63 arch/arm/kernel/setup.c:544 (set (reg/f:SI 313)
        (const:SI (plus:SI (symbol_ref:SI ("_etext") [flags 0xc0] <var_decl 0x113f3a20 _etext>)
                (const_int 1073741823 [0x3fffffff])))) 167 {*arm_movsi_insn} (nil))

(insn 484 483 486 63 arch/arm/kernel/setup.c:544 (set (mem/s/j:SI (plus:SI (reg/f:SI 310)
                (const_int 32 [0x20])) [0 <variable>.end+0 S4 A32])
        (reg/f:SI 313)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("_etext") [flags 0xc0] <var_decl 0x113f3a20 _etext>)
                (const_int 1073741823 [0x3fffffff])))
        (nil)))

(insn 486 484 487 63 arch/arm/kernel/setup.c:545 (set (reg/f:SI 315)
        (const:SI (plus:SI (symbol_ref:SI ("_sdata") [flags 0xc0] <var_decl 0x113f3ae0 _sdata>)
                (const_int 1073741824 [0x40000000])))) 167 {*arm_movsi_insn} (nil))

(insn 487 486 489 63 arch/arm/kernel/setup.c:545 (set (mem/s/j:SI (plus:SI (reg/f:SI 310)
                (const_int 56 [0x38])) [0 <variable>.start+0 S4 A32])
        (reg/f:SI 315)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("_sdata") [flags 0xc0] <var_decl 0x113f3ae0 _sdata>)
                (const_int 1073741824 [0x40000000])))
        (nil)))

(insn 489 487 490 63 arch/arm/kernel/setup.c:546 (set (reg/f:SI 317)
        (const:SI (plus:SI (symbol_ref:SI ("_end") [flags 0xc0] <var_decl 0x113f3de0 _end>)
                (const_int 1073741823 [0x3fffffff])))) 167 {*arm_movsi_insn} (nil))

(insn 490 489 491 63 arch/arm/kernel/setup.c:546 (set (mem/s/j:SI (plus:SI (reg/f:SI 310)
                (const_int 60 [0x3c])) [0 <variable>.end+0 S4 A32])
        (reg/f:SI 317)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("_end") [flags 0xc0] <var_decl 0x113f3de0 _end>)
                (const_int 1073741823 [0x3fffffff])))
        (nil)))

(insn 491 490 492 63 arch/arm/kernel/setup.c:548 (set (reg/f:SI 318)
        (symbol_ref:SI ("memblock") [flags 0xc0] <var_decl 0x113e61e0 memblock>)) 167 {*arm_movsi_insn} (nil))

(insn 492 491 564 63 arch/arm/kernel/setup.c:548 (set (reg/v/f:SI 140 [ region ])
        (mem/s/f/j/c:SI (plus:SI (reg/f:SI 318)
                (const_int 16 [0x10])) [0 memblock.memory.regions+0 S4 A32])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 63 -> ( 71)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 166
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 166
;; rd  out 	(203)
34, 125, 171, 212, 213, 248, 249, 622, 669, 670, 4105, 4106, 4107, 4108, 4109, 4110, 4111, 4112, 4113, 4114, 4118, 4120, 4121, 4122, 4123, 4124, 4125, 4126, 4127, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 4148, 4149, 4150, 4151, 4153, 4154, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239, 4240, 4241, 4242, 4243, 4244, 4245, 4246, 4247, 4248, 4249, 4250, 4251, 4252, 4253, 4254, 4255, 4256, 4257, 4258, 4259, 4260, 4261, 4262, 4263, 4264, 4265, 4266, 4267, 4268, 4269, 4270, 4271, 4272, 4273, 4274, 4275, 4276, 4277, 4278, 4279, 4280, 4281, 4282, 4283, 4284, 4285, 4286, 4287, 4288, 4289, 4290, 4291, 4292, 4293, 4294, 4295, 4296, 4297, 4298, 4299, 4300, 4301, 4302, 4303, 4304, 4305, 4306, 4307, 4377


;; Succ edge  71 [100.0%]  (fallthru)

;; Start of basic block ( 71) -> 64
;; bb 64 artificial_defs: { }
;; bb 64 artificial_uses: { u647(11){ }u648(13){ }u649(25){ }u650(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 166
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 138 141 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 166
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 138 141 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335
;; live  kill	 14 [lr]
;; rd  in  	(245)
16, 18, 20, 34, 125, 171, 212, 213, 248, 249, 607, 669, 670, 4105, 4106, 4107, 4108, 4109, 4110, 4111, 4112, 4113, 4114, 4115, 4117, 4118, 4119, 4120, 4121, 4122, 4123, 4124, 4125, 4126, 4127, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 4148, 4149, 4150, 4151, 4153, 4154, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239, 4240, 4241, 4242, 4243, 4244, 4245, 4246, 4247, 4248, 4249, 4250, 4251, 4252, 4253, 4254, 4255, 4256, 4257, 4258, 4259, 4260, 4261, 4262, 4263, 4264, 4265, 4266, 4267, 4268, 4269, 4270, 4271, 4272, 4273, 4274, 4275, 4276, 4277, 4278, 4279, 4280, 4281, 4282, 4283, 4284, 4285, 4286, 4287, 4288, 4289, 4290, 4291, 4292, 4293, 4294, 4295, 4296, 4297, 4298, 4299, 4300, 4301, 4302, 4303, 4304, 4305, 4306, 4307, 4308, 4309, 4310, 4311, 4312, 4313, 4314, 4315, 4316, 4317, 4318, 4319, 4320, 4321, 4322, 4323, 4324, 4325, 4326, 4327, 4328, 4329, 4330, 4331, 4332, 4333, 4334, 4335, 4336, 4337, 4338, 4339, 4340, 4341, 4342, 4343, 4377
;; rd  gen 	(21)
20, 613, 4115, 4119, 4308, 4309, 4310, 4311, 4312, 4313, 4314, 4315, 4316, 4317, 4318, 4319, 4320, 4321, 4322, 4323, 4324
;; rd  kill	(19)
4115, 4119, 4308, 4309, 4310, 4311, 4312, 4313, 4314, 4315, 4316, 4317, 4318, 4319, 4320, 4321, 4322, 4323, 4324

;; Pred edge  71 [91.0%] 
(code_label 564 492 495 64 147 "" [1 uses])

(note 495 564 496 64 [bb 64] NOTE_INSN_BASIC_BLOCK)

(insn 496 495 497 64 arch/arm/kernel/setup.c:549 (set (reg:SI 0 r0)
        (const_int 28 [0x1c])) 167 {*arm_movsi_insn} (nil))

(insn 497 496 498 64 arch/arm/kernel/setup.c:549 (set (reg:SI 1 r1)
        (const_int 32 [0x20])) 167 {*arm_movsi_insn} (nil))

(insn 498 497 499 64 arch/arm/kernel/setup.c:549 (set (reg:SI 2 r2)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(call_insn 499 498 500 64 arch/arm/kernel/setup.c:549 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__alloc_bootmem_low") [flags 0x41] <function_decl 0x1103c800 __alloc_bootmem_low>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 500 499 502 64 arch/arm/kernel/setup.c:549 (set (reg/v/f:SI 141 [ res ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 502 500 503 64 arch/arm/kernel/setup.c:550 (set (reg/f:SI 319)
        (symbol_ref/v/f:SI ("*.LC36") [flags 0x82] <string_cst 0x11729f30>)) 167 {*arm_movsi_insn} (nil))

(insn 503 502 504 64 arch/arm/kernel/setup.c:550 (set (mem/s/f/j:SI (plus:SI (reg/v/f:SI 141 [ res ])
                (const_int 8 [0x8])) [0 <variable>.name+0 S4 A32])
        (reg/f:SI 319)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC36") [flags 0x82] <string_cst 0x11729f30>)
        (nil)))

(insn 504 503 505 64 arch/arm/kernel/setup.c:551 (set (reg:SI 321 [ <variable>.base ])
        (mem/s/j:SI (reg/v/f:SI 140 [ region ]) [0 <variable>.base+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 505 504 506 64 arch/arm/kernel/setup.c:551 (set (reg:SI 322)
        (plus:SI (reg:SI 321 [ <variable>.base ])
            (const_int 4080 [0xff0]))) 4 {*arm_addsi3} (nil))

(insn 506 505 507 64 arch/arm/kernel/setup.c:551 (set (reg:SI 320)
        (plus:SI (reg:SI 322)
            (const_int 15 [0xf]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (plus:SI (reg:SI 321 [ <variable>.base ])
            (const_int 4095 [0xfff]))
        (nil)))

(insn 507 506 508 64 arch/arm/kernel/setup.c:551 (set (reg:SI 323)
        (lshiftrt:SI (reg:SI 320)
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 508 507 509 64 arch/arm/kernel/setup.c:551 (set (reg:SI 324)
        (ashift:SI (reg:SI 323)
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 509 508 510 64 arch/arm/kernel/setup.c:551 (set (mem/s/j:SI (reg/v/f:SI 141 [ res ]) [0 <variable>.start+0 S4 A32])
        (reg:SI 324)) 167 {*arm_movsi_insn} (nil))

(insn 510 509 511 64 arch/arm/kernel/setup.c:552 (set (reg:SI 326 [ <variable>.size ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 140 [ region ])
                (const_int 4 [0x4])) [0 <variable>.size+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 511 510 512 64 arch/arm/kernel/setup.c:552 (set (reg:SI 327 [ <variable>.base ])
        (mem/s/j:SI (reg/v/f:SI 140 [ region ]) [0 <variable>.base+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 512 511 513 64 arch/arm/kernel/setup.c:552 (set (reg:SI 325)
        (plus:SI (reg:SI 326 [ <variable>.size ])
            (reg:SI 327 [ <variable>.base ]))) 4 {*arm_addsi3} (nil))

(insn 513 512 514 64 arch/arm/kernel/setup.c:552 (set (reg:SI 328)
        (lshiftrt:SI (reg:SI 325)
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 514 513 515 64 arch/arm/kernel/setup.c:552 (set (reg:SI 329)
        (ashift:SI (reg:SI 328)
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 515 514 516 64 arch/arm/kernel/setup.c:552 (set (reg:SI 330)
        (plus:SI (reg:SI 329)
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (nil))

(insn 516 515 517 64 arch/arm/kernel/setup.c:552 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 141 [ res ])
                (const_int 4 [0x4])) [0 <variable>.end+0 S4 A32])
        (reg:SI 330)) 167 {*arm_movsi_insn} (nil))

(insn 517 516 518 64 arch/arm/kernel/setup.c:553 (set (reg:SI 331)
        (const_int -2147483136 [0xffffffff80000200])) 167 {*arm_movsi_insn} (nil))

(insn 518 517 519 64 arch/arm/kernel/setup.c:553 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 141 [ res ])
                (const_int 12 [0xc])) [0 <variable>.flags+0 S4 A32])
        (reg:SI 331)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int -2147483136 [0xffffffff80000200])
        (nil)))

(insn 519 518 520 64 arch/arm/kernel/setup.c:555 (set (reg/f:SI 332)
        (symbol_ref:SI ("iomem_resource") [flags 0xc0] <var_decl 0x10e34de0 iomem_resource>)) 167 {*arm_movsi_insn} (nil))

(insn 520 519 521 64 arch/arm/kernel/setup.c:555 (set (reg:SI 0 r0)
        (reg/f:SI 332)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("iomem_resource") [flags 0xc0] <var_decl 0x10e34de0 iomem_resource>)
        (nil)))

(insn 521 520 522 64 arch/arm/kernel/setup.c:555 (set (reg:SI 1 r1)
        (reg/v/f:SI 141 [ res ])) 167 {*arm_movsi_insn} (nil))

(call_insn 522 521 523 64 arch/arm/kernel/setup.c:555 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("request_resource") [flags 0x41] <function_decl 0x10e39880 request_resource>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 523 522 524 64 arch/arm/kernel/setup.c:557 (set (reg/f:SI 333)
        (symbol_ref:SI ("*.LANCHOR5") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 524 523 525 64 arch/arm/kernel/setup.c:557 (set (reg:SI 334 [ <variable>.start ])
        (mem/s/j:SI (plus:SI (reg/f:SI 333)
                (const_int 28 [0x1c])) [0 <variable>.start+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 525 524 526 64 arch/arm/kernel/setup.c:557 (set (reg:SI 335 [ <variable>.start ])
        (mem/s/j:SI (reg/v/f:SI 141 [ res ]) [0 <variable>.start+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 526 525 527 64 arch/arm/kernel/setup.c:557 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 334 [ <variable>.start ])
            (reg:SI 335 [ <variable>.start ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 527 526 528 64 arch/arm/kernel/setup.c:557 (set (pc)
        (if_then_else (ltu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 540)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 64 -> ( 65 67)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 166 333
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 166 333
;; rd  out 	(242)
20, 125, 171, 212, 213, 248, 249, 613, 669, 670, 4105, 4106, 4107, 4108, 4109, 4110, 4111, 4112, 4113, 4114, 4115, 4117, 4118, 4119, 4120, 4121, 4122, 4123, 4124, 4125, 4126, 4127, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 4148, 4149, 4150, 4151, 4153, 4154, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239, 4240, 4241, 4242, 4243, 4244, 4245, 4246, 4247, 4248, 4249, 4250, 4251, 4252, 4253, 4254, 4255, 4256, 4257, 4258, 4259, 4260, 4261, 4262, 4263, 4264, 4265, 4266, 4267, 4268, 4269, 4270, 4271, 4272, 4273, 4274, 4275, 4276, 4277, 4278, 4279, 4280, 4281, 4282, 4283, 4284, 4285, 4286, 4287, 4288, 4289, 4290, 4291, 4292, 4293, 4294, 4295, 4296, 4297, 4298, 4299, 4300, 4301, 4302, 4303, 4304, 4305, 4306, 4307, 4308, 4309, 4310, 4311, 4312, 4313, 4314, 4315, 4316, 4317, 4318, 4319, 4320, 4321, 4322, 4323, 4324, 4325, 4326, 4327, 4328, 4329, 4330, 4331, 4332, 4333, 4334, 4335, 4336, 4337, 4338, 4339, 4340, 4341, 4342, 4343, 4377


;; Succ edge  65 [50.0%]  (fallthru)
;; Succ edge  67 [50.0%] 

;; Start of basic block ( 64) -> 65
;; bb 65 artificial_defs: { }
;; bb 65 artificial_uses: { u688(11){ }u689(13){ }u690(25){ }u691(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 166 333
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 333
;; lr  def 	 24 [cc] 336 337 338
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 166 333
;; live  gen 	 24 [cc] 336 337 338
;; live  kill	
;; rd  in  	(242)
20, 125, 171, 212, 213, 248, 249, 613, 669, 670, 4105, 4106, 4107, 4108, 4109, 4110, 4111, 4112, 4113, 4114, 4115, 4117, 4118, 4119, 4120, 4121, 4122, 4123, 4124, 4125, 4126, 4127, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 4148, 4149, 4150, 4151, 4153, 4154, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239, 4240, 4241, 4242, 4243, 4244, 4245, 4246, 4247, 4248, 4249, 4250, 4251, 4252, 4253, 4254, 4255, 4256, 4257, 4258, 4259, 4260, 4261, 4262, 4263, 4264, 4265, 4266, 4267, 4268, 4269, 4270, 4271, 4272, 4273, 4274, 4275, 4276, 4277, 4278, 4279, 4280, 4281, 4282, 4283, 4284, 4285, 4286, 4287, 4288, 4289, 4290, 4291, 4292, 4293, 4294, 4295, 4296, 4297, 4298, 4299, 4300, 4301, 4302, 4303, 4304, 4305, 4306, 4307, 4308, 4309, 4310, 4311, 4312, 4313, 4314, 4315, 4316, 4317, 4318, 4319, 4320, 4321, 4322, 4323, 4324, 4325, 4326, 4327, 4328, 4329, 4330, 4331, 4332, 4333, 4334, 4335, 4336, 4337, 4338, 4339, 4340, 4341, 4342, 4343, 4377
;; rd  gen 	(4)
612, 4325, 4326, 4327
;; rd  kill	(3)
4325, 4326, 4327

;; Pred edge  64 [50.0%]  (fallthru)
(note 528 527 530 65 [bb 65] NOTE_INSN_BASIC_BLOCK)

(insn 530 528 531 65 arch/arm/kernel/setup.c:558 (set (reg:SI 337 [ <variable>.end ])
        (mem/s/j:SI (plus:SI (reg/f:SI 333)
                (const_int 32 [0x20])) [0 <variable>.end+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 531 530 532 65 arch/arm/kernel/setup.c:558 (set (reg:SI 338 [ <variable>.end ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 141 [ res ])
                (const_int 4 [0x4])) [0 <variable>.end+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 532 531 533 65 arch/arm/kernel/setup.c:558 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 337 [ <variable>.end ])
            (reg:SI 338 [ <variable>.end ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 533 532 534 65 arch/arm/kernel/setup.c:558 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 540)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))
;; End of basic block 65 -> ( 66 67)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 166 333
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 166 333
;; rd  out 	(242)
20, 125, 171, 212, 213, 248, 249, 612, 669, 670, 4105, 4106, 4107, 4108, 4109, 4110, 4111, 4112, 4113, 4114, 4115, 4117, 4118, 4119, 4120, 4121, 4122, 4123, 4124, 4125, 4126, 4127, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 4148, 4149, 4150, 4151, 4153, 4154, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239, 4240, 4241, 4242, 4243, 4244, 4245, 4246, 4247, 4248, 4249, 4250, 4251, 4252, 4253, 4254, 4255, 4256, 4257, 4258, 4259, 4260, 4261, 4262, 4263, 4264, 4265, 4266, 4267, 4268, 4269, 4270, 4271, 4272, 4273, 4274, 4275, 4276, 4277, 4278, 4279, 4280, 4281, 4282, 4283, 4284, 4285, 4286, 4287, 4288, 4289, 4290, 4291, 4292, 4293, 4294, 4295, 4296, 4297, 4298, 4299, 4300, 4301, 4302, 4303, 4304, 4305, 4306, 4307, 4308, 4309, 4310, 4311, 4312, 4313, 4314, 4315, 4316, 4317, 4318, 4319, 4320, 4321, 4322, 4323, 4324, 4325, 4326, 4327, 4328, 4329, 4330, 4331, 4332, 4333, 4334, 4335, 4336, 4337, 4338, 4339, 4340, 4341, 4342, 4343, 4377


;; Succ edge  66 [29.0%]  (fallthru)
;; Succ edge  67 [71.0%] 

;; Start of basic block ( 65) -> 66
;; bb 66 artificial_defs: { }
;; bb 66 artificial_uses: { u698(11){ }u699(13){ }u700(25){ }u701(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 166 333
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 333
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 339 340
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 166 333
;; live  gen 	 0 [r0] 1 [r1] 339 340
;; live  kill	 14 [lr]
;; rd  in  	(242)
20, 125, 171, 212, 213, 248, 249, 612, 669, 670, 4105, 4106, 4107, 4108, 4109, 4110, 4111, 4112, 4113, 4114, 4115, 4117, 4118, 4119, 4120, 4121, 4122, 4123, 4124, 4125, 4126, 4127, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 4148, 4149, 4150, 4151, 4153, 4154, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239, 4240, 4241, 4242, 4243, 4244, 4245, 4246, 4247, 4248, 4249, 4250, 4251, 4252, 4253, 4254, 4255, 4256, 4257, 4258, 4259, 4260, 4261, 4262, 4263, 4264, 4265, 4266, 4267, 4268, 4269, 4270, 4271, 4272, 4273, 4274, 4275, 4276, 4277, 4278, 4279, 4280, 4281, 4282, 4283, 4284, 4285, 4286, 4287, 4288, 4289, 4290, 4291, 4292, 4293, 4294, 4295, 4296, 4297, 4298, 4299, 4300, 4301, 4302, 4303, 4304, 4305, 4306, 4307, 4308, 4309, 4310, 4311, 4312, 4313, 4314, 4315, 4316, 4317, 4318, 4319, 4320, 4321, 4322, 4323, 4324, 4325, 4326, 4327, 4328, 4329, 4330, 4331, 4332, 4333, 4334, 4335, 4336, 4337, 4338, 4339, 4340, 4341, 4342, 4343, 4377
;; rd  gen 	(3)
18, 4328, 4329
;; rd  kill	(2)
4328, 4329

;; Pred edge  65 [29.0%]  (fallthru)
(note 534 533 536 66 [bb 66] NOTE_INSN_BASIC_BLOCK)

(insn 536 534 537 66 arch/arm/kernel/setup.c:559 (set (reg/f:SI 340)
        (plus:SI (reg/f:SI 333)
            (const_int 28 [0x1c]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR5") [flags 0x182])
                (const_int 28 [0x1c])))
        (nil)))

(insn 537 536 538 66 arch/arm/kernel/setup.c:559 (set (reg:SI 0 r0)
        (reg/v/f:SI 141 [ res ])) 167 {*arm_movsi_insn} (nil))

(insn 538 537 539 66 arch/arm/kernel/setup.c:559 (set (reg:SI 1 r1)
        (reg/f:SI 340)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR5") [flags 0x182])
                (const_int 28 [0x1c])))
        (nil)))

(call_insn 539 538 540 66 arch/arm/kernel/setup.c:559 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("request_resource") [flags 0x41] <function_decl 0x10e39880 request_resource>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 66 -> ( 67)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 166
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 166
;; rd  out 	(242)
18, 125, 171, 212, 213, 248, 249, 612, 669, 670, 4105, 4106, 4107, 4108, 4109, 4110, 4111, 4112, 4113, 4114, 4115, 4117, 4118, 4119, 4120, 4121, 4122, 4123, 4124, 4125, 4126, 4127, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 4148, 4149, 4150, 4151, 4153, 4154, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239, 4240, 4241, 4242, 4243, 4244, 4245, 4246, 4247, 4248, 4249, 4250, 4251, 4252, 4253, 4254, 4255, 4256, 4257, 4258, 4259, 4260, 4261, 4262, 4263, 4264, 4265, 4266, 4267, 4268, 4269, 4270, 4271, 4272, 4273, 4274, 4275, 4276, 4277, 4278, 4279, 4280, 4281, 4282, 4283, 4284, 4285, 4286, 4287, 4288, 4289, 4290, 4291, 4292, 4293, 4294, 4295, 4296, 4297, 4298, 4299, 4300, 4301, 4302, 4303, 4304, 4305, 4306, 4307, 4308, 4309, 4310, 4311, 4312, 4313, 4314, 4315, 4316, 4317, 4318, 4319, 4320, 4321, 4322, 4323, 4324, 4325, 4326, 4327, 4328, 4329, 4330, 4331, 4332, 4333, 4334, 4335, 4336, 4337, 4338, 4339, 4340, 4341, 4342, 4343, 4377


;; Succ edge  67 [100.0%]  (fallthru)

;; Start of basic block ( 64 65 66) -> 67
;; bb 67 artificial_defs: { }
;; bb 67 artificial_uses: { u709(11){ }u710(13){ }u711(25){ }u712(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 166
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 24 [cc] 341 342 343
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 166
;; live  gen 	 24 [cc] 341 342 343
;; live  kill	
;; rd  in  	(244)
18, 20, 125, 171, 212, 213, 248, 249, 612, 613, 669, 670, 4105, 4106, 4107, 4108, 4109, 4110, 4111, 4112, 4113, 4114, 4115, 4117, 4118, 4119, 4120, 4121, 4122, 4123, 4124, 4125, 4126, 4127, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 4148, 4149, 4150, 4151, 4153, 4154, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239, 4240, 4241, 4242, 4243, 4244, 4245, 4246, 4247, 4248, 4249, 4250, 4251, 4252, 4253, 4254, 4255, 4256, 4257, 4258, 4259, 4260, 4261, 4262, 4263, 4264, 4265, 4266, 4267, 4268, 4269, 4270, 4271, 4272, 4273, 4274, 4275, 4276, 4277, 4278, 4279, 4280, 4281, 4282, 4283, 4284, 4285, 4286, 4287, 4288, 4289, 4290, 4291, 4292, 4293, 4294, 4295, 4296, 4297, 4298, 4299, 4300, 4301, 4302, 4303, 4304, 4305, 4306, 4307, 4308, 4309, 4310, 4311, 4312, 4313, 4314, 4315, 4316, 4317, 4318, 4319, 4320, 4321, 4322, 4323, 4324, 4325, 4326, 4327, 4328, 4329, 4330, 4331, 4332, 4333, 4334, 4335, 4336, 4337, 4338, 4339, 4340, 4341, 4342, 4343, 4377
;; rd  gen 	(4)
610, 4330, 4331, 4332
;; rd  kill	(3)
4330, 4331, 4332

;; Pred edge  64 [50.0%] 
;; Pred edge  65 [71.0%] 
;; Pred edge  66 [100.0%]  (fallthru)
(code_label 540 539 541 67 145 "" [2 uses])

(note 541 540 542 67 [bb 67] NOTE_INSN_BASIC_BLOCK)

(insn 542 541 543 67 arch/arm/kernel/setup.c:560 (set (reg/f:SI 341)
        (symbol_ref:SI ("*.LANCHOR5") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 543 542 544 67 arch/arm/kernel/setup.c:560 (set (reg:SI 342 [ <variable>.start ])
        (mem/s/j:SI (plus:SI (reg/f:SI 341)
                (const_int 56 [0x38])) [0 <variable>.start+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 544 543 545 67 arch/arm/kernel/setup.c:560 (set (reg:SI 343 [ <variable>.start ])
        (mem/s/j:SI (reg/v/f:SI 141 [ res ]) [0 <variable>.start+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 545 544 546 67 arch/arm/kernel/setup.c:560 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 342 [ <variable>.start ])
            (reg:SI 343 [ <variable>.start ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 546 545 547 67 arch/arm/kernel/setup.c:560 (set (pc)
        (if_then_else (ltu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 559)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 67 -> ( 68 70)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 166 341
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 166 341
;; rd  out 	(243)
18, 20, 125, 171, 212, 213, 248, 249, 610, 669, 670, 4105, 4106, 4107, 4108, 4109, 4110, 4111, 4112, 4113, 4114, 4115, 4117, 4118, 4119, 4120, 4121, 4122, 4123, 4124, 4125, 4126, 4127, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 4148, 4149, 4150, 4151, 4153, 4154, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239, 4240, 4241, 4242, 4243, 4244, 4245, 4246, 4247, 4248, 4249, 4250, 4251, 4252, 4253, 4254, 4255, 4256, 4257, 4258, 4259, 4260, 4261, 4262, 4263, 4264, 4265, 4266, 4267, 4268, 4269, 4270, 4271, 4272, 4273, 4274, 4275, 4276, 4277, 4278, 4279, 4280, 4281, 4282, 4283, 4284, 4285, 4286, 4287, 4288, 4289, 4290, 4291, 4292, 4293, 4294, 4295, 4296, 4297, 4298, 4299, 4300, 4301, 4302, 4303, 4304, 4305, 4306, 4307, 4308, 4309, 4310, 4311, 4312, 4313, 4314, 4315, 4316, 4317, 4318, 4319, 4320, 4321, 4322, 4323, 4324, 4325, 4326, 4327, 4328, 4329, 4330, 4331, 4332, 4333, 4334, 4335, 4336, 4337, 4338, 4339, 4340, 4341, 4342, 4343, 4377


;; Succ edge  68 [50.0%]  (fallthru)
;; Succ edge  70 [50.0%] 

;; Start of basic block ( 67) -> 68
;; bb 68 artificial_defs: { }
;; bb 68 artificial_uses: { u718(11){ }u719(13){ }u720(25){ }u721(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 166 341
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 341
;; lr  def 	 24 [cc] 344 345 346
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 166 341
;; live  gen 	 24 [cc] 344 345 346
;; live  kill	
;; rd  in  	(243)
18, 20, 125, 171, 212, 213, 248, 249, 610, 669, 670, 4105, 4106, 4107, 4108, 4109, 4110, 4111, 4112, 4113, 4114, 4115, 4117, 4118, 4119, 4120, 4121, 4122, 4123, 4124, 4125, 4126, 4127, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 4148, 4149, 4150, 4151, 4153, 4154, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239, 4240, 4241, 4242, 4243, 4244, 4245, 4246, 4247, 4248, 4249, 4250, 4251, 4252, 4253, 4254, 4255, 4256, 4257, 4258, 4259, 4260, 4261, 4262, 4263, 4264, 4265, 4266, 4267, 4268, 4269, 4270, 4271, 4272, 4273, 4274, 4275, 4276, 4277, 4278, 4279, 4280, 4281, 4282, 4283, 4284, 4285, 4286, 4287, 4288, 4289, 4290, 4291, 4292, 4293, 4294, 4295, 4296, 4297, 4298, 4299, 4300, 4301, 4302, 4303, 4304, 4305, 4306, 4307, 4308, 4309, 4310, 4311, 4312, 4313, 4314, 4315, 4316, 4317, 4318, 4319, 4320, 4321, 4322, 4323, 4324, 4325, 4326, 4327, 4328, 4329, 4330, 4331, 4332, 4333, 4334, 4335, 4336, 4337, 4338, 4339, 4340, 4341, 4342, 4343, 4377
;; rd  gen 	(4)
609, 4333, 4334, 4335
;; rd  kill	(3)
4333, 4334, 4335

;; Pred edge  67 [50.0%]  (fallthru)
(note 547 546 549 68 [bb 68] NOTE_INSN_BASIC_BLOCK)

(insn 549 547 550 68 arch/arm/kernel/setup.c:561 (set (reg:SI 345 [ <variable>.end ])
        (mem/s/j:SI (plus:SI (reg/f:SI 341)
                (const_int 60 [0x3c])) [0 <variable>.end+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 550 549 551 68 arch/arm/kernel/setup.c:561 (set (reg:SI 346 [ <variable>.end ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 141 [ res ])
                (const_int 4 [0x4])) [0 <variable>.end+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 551 550 552 68 arch/arm/kernel/setup.c:561 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 345 [ <variable>.end ])
            (reg:SI 346 [ <variable>.end ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 552 551 553 68 arch/arm/kernel/setup.c:561 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 559)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))
;; End of basic block 68 -> ( 69 70)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 166 341
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 166 341
;; rd  out 	(243)
18, 20, 125, 171, 212, 213, 248, 249, 609, 669, 670, 4105, 4106, 4107, 4108, 4109, 4110, 4111, 4112, 4113, 4114, 4115, 4117, 4118, 4119, 4120, 4121, 4122, 4123, 4124, 4125, 4126, 4127, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 4148, 4149, 4150, 4151, 4153, 4154, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239, 4240, 4241, 4242, 4243, 4244, 4245, 4246, 4247, 4248, 4249, 4250, 4251, 4252, 4253, 4254, 4255, 4256, 4257, 4258, 4259, 4260, 4261, 4262, 4263, 4264, 4265, 4266, 4267, 4268, 4269, 4270, 4271, 4272, 4273, 4274, 4275, 4276, 4277, 4278, 4279, 4280, 4281, 4282, 4283, 4284, 4285, 4286, 4287, 4288, 4289, 4290, 4291, 4292, 4293, 4294, 4295, 4296, 4297, 4298, 4299, 4300, 4301, 4302, 4303, 4304, 4305, 4306, 4307, 4308, 4309, 4310, 4311, 4312, 4313, 4314, 4315, 4316, 4317, 4318, 4319, 4320, 4321, 4322, 4323, 4324, 4325, 4326, 4327, 4328, 4329, 4330, 4331, 4332, 4333, 4334, 4335, 4336, 4337, 4338, 4339, 4340, 4341, 4342, 4343, 4377


;; Succ edge  69 [29.0%]  (fallthru)
;; Succ edge  70 [71.0%] 

;; Start of basic block ( 68) -> 69
;; bb 69 artificial_defs: { }
;; bb 69 artificial_uses: { u728(11){ }u729(13){ }u730(25){ }u731(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 166 341
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 341
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 347 348
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 166 341
;; live  gen 	 0 [r0] 1 [r1] 347 348
;; live  kill	 14 [lr]
;; rd  in  	(243)
18, 20, 125, 171, 212, 213, 248, 249, 609, 669, 670, 4105, 4106, 4107, 4108, 4109, 4110, 4111, 4112, 4113, 4114, 4115, 4117, 4118, 4119, 4120, 4121, 4122, 4123, 4124, 4125, 4126, 4127, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 4148, 4149, 4150, 4151, 4153, 4154, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239, 4240, 4241, 4242, 4243, 4244, 4245, 4246, 4247, 4248, 4249, 4250, 4251, 4252, 4253, 4254, 4255, 4256, 4257, 4258, 4259, 4260, 4261, 4262, 4263, 4264, 4265, 4266, 4267, 4268, 4269, 4270, 4271, 4272, 4273, 4274, 4275, 4276, 4277, 4278, 4279, 4280, 4281, 4282, 4283, 4284, 4285, 4286, 4287, 4288, 4289, 4290, 4291, 4292, 4293, 4294, 4295, 4296, 4297, 4298, 4299, 4300, 4301, 4302, 4303, 4304, 4305, 4306, 4307, 4308, 4309, 4310, 4311, 4312, 4313, 4314, 4315, 4316, 4317, 4318, 4319, 4320, 4321, 4322, 4323, 4324, 4325, 4326, 4327, 4328, 4329, 4330, 4331, 4332, 4333, 4334, 4335, 4336, 4337, 4338, 4339, 4340, 4341, 4342, 4343, 4377
;; rd  gen 	(3)
16, 4336, 4337
;; rd  kill	(2)
4336, 4337

;; Pred edge  68 [29.0%]  (fallthru)
(note 553 552 555 69 [bb 69] NOTE_INSN_BASIC_BLOCK)

(insn 555 553 556 69 arch/arm/kernel/setup.c:562 (set (reg/f:SI 348)
        (plus:SI (reg/f:SI 341)
            (const_int 56 [0x38]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR5") [flags 0x182])
                (const_int 56 [0x38])))
        (nil)))

(insn 556 555 557 69 arch/arm/kernel/setup.c:562 (set (reg:SI 0 r0)
        (reg/v/f:SI 141 [ res ])) 167 {*arm_movsi_insn} (nil))

(insn 557 556 558 69 arch/arm/kernel/setup.c:562 (set (reg:SI 1 r1)
        (reg/f:SI 348)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR5") [flags 0x182])
                (const_int 56 [0x38])))
        (nil)))

(call_insn 558 557 559 69 arch/arm/kernel/setup.c:562 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("request_resource") [flags 0x41] <function_decl 0x10e39880 request_resource>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 69 -> ( 70)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 166
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 166
;; rd  out 	(242)
16, 125, 171, 212, 213, 248, 249, 609, 669, 670, 4105, 4106, 4107, 4108, 4109, 4110, 4111, 4112, 4113, 4114, 4115, 4117, 4118, 4119, 4120, 4121, 4122, 4123, 4124, 4125, 4126, 4127, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 4148, 4149, 4150, 4151, 4153, 4154, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239, 4240, 4241, 4242, 4243, 4244, 4245, 4246, 4247, 4248, 4249, 4250, 4251, 4252, 4253, 4254, 4255, 4256, 4257, 4258, 4259, 4260, 4261, 4262, 4263, 4264, 4265, 4266, 4267, 4268, 4269, 4270, 4271, 4272, 4273, 4274, 4275, 4276, 4277, 4278, 4279, 4280, 4281, 4282, 4283, 4284, 4285, 4286, 4287, 4288, 4289, 4290, 4291, 4292, 4293, 4294, 4295, 4296, 4297, 4298, 4299, 4300, 4301, 4302, 4303, 4304, 4305, 4306, 4307, 4308, 4309, 4310, 4311, 4312, 4313, 4314, 4315, 4316, 4317, 4318, 4319, 4320, 4321, 4322, 4323, 4324, 4325, 4326, 4327, 4328, 4329, 4330, 4331, 4332, 4333, 4334, 4335, 4336, 4337, 4338, 4339, 4340, 4341, 4342, 4343, 4377


;; Succ edge  70 [100.0%]  (fallthru)

;; Start of basic block ( 67 68 69) -> 70
;; bb 70 artificial_defs: { }
;; bb 70 artificial_uses: { u739(11){ }u740(13){ }u741(25){ }u742(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 166
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 140
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 166
;; live  gen 	 140
;; live  kill	
;; rd  in  	(245)
16, 18, 20, 125, 171, 212, 213, 248, 249, 609, 610, 669, 670, 4105, 4106, 4107, 4108, 4109, 4110, 4111, 4112, 4113, 4114, 4115, 4117, 4118, 4119, 4120, 4121, 4122, 4123, 4124, 4125, 4126, 4127, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 4148, 4149, 4150, 4151, 4153, 4154, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239, 4240, 4241, 4242, 4243, 4244, 4245, 4246, 4247, 4248, 4249, 4250, 4251, 4252, 4253, 4254, 4255, 4256, 4257, 4258, 4259, 4260, 4261, 4262, 4263, 4264, 4265, 4266, 4267, 4268, 4269, 4270, 4271, 4272, 4273, 4274, 4275, 4276, 4277, 4278, 4279, 4280, 4281, 4282, 4283, 4284, 4285, 4286, 4287, 4288, 4289, 4290, 4291, 4292, 4293, 4294, 4295, 4296, 4297, 4298, 4299, 4300, 4301, 4302, 4303, 4304, 4305, 4306, 4307, 4308, 4309, 4310, 4311, 4312, 4313, 4314, 4315, 4316, 4317, 4318, 4319, 4320, 4321, 4322, 4323, 4324, 4325, 4326, 4327, 4328, 4329, 4330, 4331, 4332, 4333, 4334, 4335, 4336, 4337, 4338, 4339, 4340, 4341, 4342, 4343, 4377
;; rd  gen 	(1)
4117
;; rd  kill	(2)
4117, 4118

;; Pred edge  67 [50.0%] 
;; Pred edge  68 [71.0%] 
;; Pred edge  69 [100.0%]  (fallthru)
(code_label 559 558 560 70 146 "" [2 uses])

(note 560 559 561 70 [bb 70] NOTE_INSN_BASIC_BLOCK)

(insn 561 560 562 70 arch/arm/kernel/setup.c:548 (set (reg/v/f:SI 140 [ region ])
        (plus:SI (reg/v/f:SI 140 [ region ])
            (const_int 8 [0x8]))) 4 {*arm_addsi3} (nil))
;; End of basic block 70 -> ( 71)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 166
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 166
;; rd  out 	(244)
16, 18, 20, 125, 171, 212, 213, 248, 249, 609, 610, 669, 670, 4105, 4106, 4107, 4108, 4109, 4110, 4111, 4112, 4113, 4114, 4115, 4117, 4119, 4120, 4121, 4122, 4123, 4124, 4125, 4126, 4127, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 4148, 4149, 4150, 4151, 4153, 4154, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239, 4240, 4241, 4242, 4243, 4244, 4245, 4246, 4247, 4248, 4249, 4250, 4251, 4252, 4253, 4254, 4255, 4256, 4257, 4258, 4259, 4260, 4261, 4262, 4263, 4264, 4265, 4266, 4267, 4268, 4269, 4270, 4271, 4272, 4273, 4274, 4275, 4276, 4277, 4278, 4279, 4280, 4281, 4282, 4283, 4284, 4285, 4286, 4287, 4288, 4289, 4290, 4291, 4292, 4293, 4294, 4295, 4296, 4297, 4298, 4299, 4300, 4301, 4302, 4303, 4304, 4305, 4306, 4307, 4308, 4309, 4310, 4311, 4312, 4313, 4314, 4315, 4316, 4317, 4318, 4319, 4320, 4321, 4322, 4323, 4324, 4325, 4326, 4327, 4328, 4329, 4330, 4331, 4332, 4333, 4334, 4335, 4336, 4337, 4338, 4339, 4340, 4341, 4342, 4343, 4377


;; Succ edge  71 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 63 70) -> 71
;; bb 71 artificial_defs: { }
;; bb 71 artificial_uses: { u744(11){ }u745(13){ }u746(25){ }u747(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 166
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 24 [cc] 349 350 351 352 353 354
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 166
;; live  gen 	 24 [cc] 349 350 351 352 353 354
;; live  kill	
;; rd  in  	(247)
16, 18, 20, 34, 125, 171, 212, 213, 248, 249, 609, 610, 622, 669, 670, 4105, 4106, 4107, 4108, 4109, 4110, 4111, 4112, 4113, 4114, 4115, 4117, 4118, 4119, 4120, 4121, 4122, 4123, 4124, 4125, 4126, 4127, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 4148, 4149, 4150, 4151, 4153, 4154, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239, 4240, 4241, 4242, 4243, 4244, 4245, 4246, 4247, 4248, 4249, 4250, 4251, 4252, 4253, 4254, 4255, 4256, 4257, 4258, 4259, 4260, 4261, 4262, 4263, 4264, 4265, 4266, 4267, 4268, 4269, 4270, 4271, 4272, 4273, 4274, 4275, 4276, 4277, 4278, 4279, 4280, 4281, 4282, 4283, 4284, 4285, 4286, 4287, 4288, 4289, 4290, 4291, 4292, 4293, 4294, 4295, 4296, 4297, 4298, 4299, 4300, 4301, 4302, 4303, 4304, 4305, 4306, 4307, 4308, 4309, 4310, 4311, 4312, 4313, 4314, 4315, 4316, 4317, 4318, 4319, 4320, 4321, 4322, 4323, 4324, 4325, 4326, 4327, 4328, 4329, 4330, 4331, 4332, 4333, 4334, 4335, 4336, 4337, 4338, 4339, 4340, 4341, 4342, 4343, 4377
;; rd  gen 	(7)
607, 4338, 4339, 4340, 4341, 4342, 4343
;; rd  kill	(6)
4338, 4339, 4340, 4341, 4342, 4343

;; Pred edge  63 [100.0%]  (fallthru)
;; Pred edge  70 [100.0%]  (fallthru,dfs_back)
(code_label 562 561 563 71 144 "" [0 uses])

(note 563 562 565 71 [bb 71] NOTE_INSN_BASIC_BLOCK)

(insn 565 563 567 71 arch/arm/kernel/setup.c:548 discrim 1 (set (reg/f:SI 349)
        (symbol_ref:SI ("memblock") [flags 0xc0] <var_decl 0x113e61e0 memblock>)) 167 {*arm_movsi_insn} (nil))

(insn 567 565 568 71 arch/arm/kernel/setup.c:548 discrim 1 (set (reg:SI 352 [ memblock.memory.cnt ])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 349)
                (const_int 8 [0x8])) [0 memblock.memory.cnt+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 568 567 569 71 arch/arm/kernel/setup.c:548 discrim 1 (set (reg:SI 351)
        (ashift:SI (reg:SI 352 [ memblock.memory.cnt ])
            (const_int 3 [0x3]))) 117 {*arm_shiftsi3} (nil))

(insn 569 568 570 71 arch/arm/kernel/setup.c:548 discrim 1 (set (reg/f:SI 354 [ memblock.memory.regions ])
        (mem/s/f/j/c:SI (plus:SI (reg/f:SI 349)
                (const_int 16 [0x10])) [0 memblock.memory.regions+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 570 569 571 71 arch/arm/kernel/setup.c:548 discrim 1 (set (reg:SI 353)
        (plus:SI (reg/f:SI 354 [ memblock.memory.regions ])
            (reg:SI 351))) 4 {*arm_addsi3} (nil))

(insn 571 570 572 71 arch/arm/kernel/setup.c:548 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 140 [ region ])
            (reg:SI 353))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 572 571 573 71 arch/arm/kernel/setup.c:548 discrim 1 (set (pc)
        (if_then_else (ltu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 564)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
        (nil)))
;; End of basic block 71 -> ( 64 72)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 166
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 166
;; rd  out 	(245)
16, 18, 20, 34, 125, 171, 212, 213, 248, 249, 607, 669, 670, 4105, 4106, 4107, 4108, 4109, 4110, 4111, 4112, 4113, 4114, 4115, 4117, 4118, 4119, 4120, 4121, 4122, 4123, 4124, 4125, 4126, 4127, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 4148, 4149, 4150, 4151, 4153, 4154, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239, 4240, 4241, 4242, 4243, 4244, 4245, 4246, 4247, 4248, 4249, 4250, 4251, 4252, 4253, 4254, 4255, 4256, 4257, 4258, 4259, 4260, 4261, 4262, 4263, 4264, 4265, 4266, 4267, 4268, 4269, 4270, 4271, 4272, 4273, 4274, 4275, 4276, 4277, 4278, 4279, 4280, 4281, 4282, 4283, 4284, 4285, 4286, 4287, 4288, 4289, 4290, 4291, 4292, 4293, 4294, 4295, 4296, 4297, 4298, 4299, 4300, 4301, 4302, 4303, 4304, 4305, 4306, 4307, 4308, 4309, 4310, 4311, 4312, 4313, 4314, 4315, 4316, 4317, 4318, 4319, 4320, 4321, 4322, 4323, 4324, 4325, 4326, 4327, 4328, 4329, 4330, 4331, 4332, 4333, 4334, 4335, 4336, 4337, 4338, 4339, 4340, 4341, 4342, 4343, 4377


;; Succ edge  64 [91.0%] 
;; Succ edge  72 [9.0%]  (fallthru)

;; Start of basic block ( 71) -> 72
;; bb 72 artificial_defs: { }
;; bb 72 artificial_uses: { u757(11){ }u758(13){ }u759(25){ }u760(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166
;; lr  def 	 24 [cc] 139
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166
;; live  gen 	 24 [cc] 139
;; live  kill	
;; rd  in  	(245)
16, 18, 20, 34, 125, 171, 212, 213, 248, 249, 607, 669, 670, 4105, 4106, 4107, 4108, 4109, 4110, 4111, 4112, 4113, 4114, 4115, 4117, 4118, 4119, 4120, 4121, 4122, 4123, 4124, 4125, 4126, 4127, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 4148, 4149, 4150, 4151, 4153, 4154, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239, 4240, 4241, 4242, 4243, 4244, 4245, 4246, 4247, 4248, 4249, 4250, 4251, 4252, 4253, 4254, 4255, 4256, 4257, 4258, 4259, 4260, 4261, 4262, 4263, 4264, 4265, 4266, 4267, 4268, 4269, 4270, 4271, 4272, 4273, 4274, 4275, 4276, 4277, 4278, 4279, 4280, 4281, 4282, 4283, 4284, 4285, 4286, 4287, 4288, 4289, 4290, 4291, 4292, 4293, 4294, 4295, 4296, 4297, 4298, 4299, 4300, 4301, 4302, 4303, 4304, 4305, 4306, 4307, 4308, 4309, 4310, 4311, 4312, 4313, 4314, 4315, 4316, 4317, 4318, 4319, 4320, 4321, 4322, 4323, 4324, 4325, 4326, 4327, 4328, 4329, 4330, 4331, 4332, 4333, 4334, 4335, 4336, 4337, 4338, 4339, 4340, 4341, 4342, 4343, 4377
;; rd  gen 	(2)
606, 4116
;; rd  kill	(1)
4116

;; Pred edge  71 [9.0%]  (fallthru)
(note 573 572 574 72 [bb 72] NOTE_INSN_BASIC_BLOCK)

(insn 574 573 575 72 arch/arm/kernel/setup.c:565 (set (reg:SI 139 [ D.26354 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 166 [ mdesc ])
                (const_int 20 [0x14])) [0 <variable>.video_start+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 575 574 576 72 arch/arm/kernel/setup.c:565 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 139 [ D.26354 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 576 575 577 72 arch/arm/kernel/setup.c:565 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 588)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))
;; End of basic block 72 -> ( 73 74)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 166
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 166
;; rd  out 	(246)
16, 18, 20, 34, 125, 171, 212, 213, 248, 249, 606, 669, 670, 4105, 4106, 4107, 4108, 4109, 4110, 4111, 4112, 4113, 4114, 4115, 4116, 4117, 4118, 4119, 4120, 4121, 4122, 4123, 4124, 4125, 4126, 4127, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 4148, 4149, 4150, 4151, 4153, 4154, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239, 4240, 4241, 4242, 4243, 4244, 4245, 4246, 4247, 4248, 4249, 4250, 4251, 4252, 4253, 4254, 4255, 4256, 4257, 4258, 4259, 4260, 4261, 4262, 4263, 4264, 4265, 4266, 4267, 4268, 4269, 4270, 4271, 4272, 4273, 4274, 4275, 4276, 4277, 4278, 4279, 4280, 4281, 4282, 4283, 4284, 4285, 4286, 4287, 4288, 4289, 4290, 4291, 4292, 4293, 4294, 4295, 4296, 4297, 4298, 4299, 4300, 4301, 4302, 4303, 4304, 4305, 4306, 4307, 4308, 4309, 4310, 4311, 4312, 4313, 4314, 4315, 4316, 4317, 4318, 4319, 4320, 4321, 4322, 4323, 4324, 4325, 4326, 4327, 4328, 4329, 4330, 4331, 4332, 4333, 4334, 4335, 4336, 4337, 4338, 4339, 4340, 4341, 4342, 4343, 4377


;; Succ edge  73 [29.0%]  (fallthru)
;; Succ edge  74 [71.0%] 

;; Start of basic block ( 72) -> 73
;; bb 73 artificial_defs: { }
;; bb 73 artificial_uses: { u764(11){ }u765(13){ }u766(25){ }u767(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 166
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 166
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 355 356 357 358 359
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 166
;; live  gen 	 0 [r0] 1 [r1] 355 356 357 358 359
;; live  kill	 14 [lr]
;; rd  in  	(246)
16, 18, 20, 34, 125, 171, 212, 213, 248, 249, 606, 669, 670, 4105, 4106, 4107, 4108, 4109, 4110, 4111, 4112, 4113, 4114, 4115, 4116, 4117, 4118, 4119, 4120, 4121, 4122, 4123, 4124, 4125, 4126, 4127, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 4148, 4149, 4150, 4151, 4153, 4154, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239, 4240, 4241, 4242, 4243, 4244, 4245, 4246, 4247, 4248, 4249, 4250, 4251, 4252, 4253, 4254, 4255, 4256, 4257, 4258, 4259, 4260, 4261, 4262, 4263, 4264, 4265, 4266, 4267, 4268, 4269, 4270, 4271, 4272, 4273, 4274, 4275, 4276, 4277, 4278, 4279, 4280, 4281, 4282, 4283, 4284, 4285, 4286, 4287, 4288, 4289, 4290, 4291, 4292, 4293, 4294, 4295, 4296, 4297, 4298, 4299, 4300, 4301, 4302, 4303, 4304, 4305, 4306, 4307, 4308, 4309, 4310, 4311, 4312, 4313, 4314, 4315, 4316, 4317, 4318, 4319, 4320, 4321, 4322, 4323, 4324, 4325, 4326, 4327, 4328, 4329, 4330, 4331, 4332, 4333, 4334, 4335, 4336, 4337, 4338, 4339, 4340, 4341, 4342, 4343, 4377
;; rd  gen 	(6)
14, 4344, 4345, 4346, 4347, 4348
;; rd  kill	(5)
4344, 4345, 4346, 4347, 4348

;; Pred edge  72 [29.0%]  (fallthru)
(note 577 576 578 73 [bb 73] NOTE_INSN_BASIC_BLOCK)

(insn 578 577 579 73 arch/arm/kernel/setup.c:566 (set (reg/f:SI 355)
        (symbol_ref:SI ("*.LANCHOR5") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 579 578 581 73 arch/arm/kernel/setup.c:566 (set (mem/s/j:SI (reg/f:SI 355) [0 <variable>.start+0 S4 A32])
        (reg:SI 139 [ D.26354 ])) 167 {*arm_movsi_insn} (nil))

(insn 581 579 582 73 arch/arm/kernel/setup.c:567 (set (reg:SI 357 [ <variable>.video_end ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 166 [ mdesc ])
                (const_int 24 [0x18])) [0 <variable>.video_end+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 582 581 583 73 arch/arm/kernel/setup.c:567 (set (mem/s/j:SI (plus:SI (reg/f:SI 355)
                (const_int 4 [0x4])) [0 <variable>.end+0 S4 A32])
        (reg:SI 357 [ <variable>.video_end ])) 167 {*arm_movsi_insn} (nil))

(insn 583 582 585 73 arch/arm/kernel/setup.c:568 (set (reg/f:SI 358)
        (symbol_ref:SI ("iomem_resource") [flags 0xc0] <var_decl 0x10e34de0 iomem_resource>)) 167 {*arm_movsi_insn} (nil))

(insn 585 583 586 73 arch/arm/kernel/setup.c:568 (set (reg:SI 0 r0)
        (reg/f:SI 358)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("iomem_resource") [flags 0xc0] <var_decl 0x10e34de0 iomem_resource>)
        (nil)))

(insn 586 585 587 73 arch/arm/kernel/setup.c:568 (set (reg:SI 1 r1)
        (reg/f:SI 355)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR5") [flags 0x182])
        (nil)))

(call_insn 587 586 588 73 arch/arm/kernel/setup.c:568 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("request_resource") [flags 0x41] <function_decl 0x10e39880 request_resource>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 73 -> ( 74)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166
;; rd  out 	(248)
14, 125, 171, 212, 213, 248, 249, 606, 669, 670, 4105, 4106, 4107, 4108, 4109, 4110, 4111, 4112, 4113, 4114, 4115, 4116, 4117, 4118, 4119, 4120, 4121, 4122, 4123, 4124, 4125, 4126, 4127, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 4148, 4149, 4150, 4151, 4153, 4154, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239, 4240, 4241, 4242, 4243, 4244, 4245, 4246, 4247, 4248, 4249, 4250, 4251, 4252, 4253, 4254, 4255, 4256, 4257, 4258, 4259, 4260, 4261, 4262, 4263, 4264, 4265, 4266, 4267, 4268, 4269, 4270, 4271, 4272, 4273, 4274, 4275, 4276, 4277, 4278, 4279, 4280, 4281, 4282, 4283, 4284, 4285, 4286, 4287, 4288, 4289, 4290, 4291, 4292, 4293, 4294, 4295, 4296, 4297, 4298, 4299, 4300, 4301, 4302, 4303, 4304, 4305, 4306, 4307, 4308, 4309, 4310, 4311, 4312, 4313, 4314, 4315, 4316, 4317, 4318, 4319, 4320, 4321, 4322, 4323, 4324, 4325, 4326, 4327, 4328, 4329, 4330, 4331, 4332, 4333, 4334, 4335, 4336, 4337, 4338, 4339, 4340, 4341, 4342, 4343, 4344, 4345, 4346, 4347, 4348, 4377


;; Succ edge  74 [100.0%]  (fallthru)

;; Start of basic block ( 72 73) -> 74
;; bb 74 artificial_defs: { }
;; bb 74 artificial_uses: { u780(11){ }u781(13){ }u782(25){ }u783(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166
;; lr  def 	 24 [cc] 360 361 362 363 364
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166
;; live  gen 	 24 [cc] 360 361 362 363 364
;; live  kill	
;; rd  in  	(252)
14, 16, 18, 20, 34, 125, 171, 212, 213, 248, 249, 606, 669, 670, 4105, 4106, 4107, 4108, 4109, 4110, 4111, 4112, 4113, 4114, 4115, 4116, 4117, 4118, 4119, 4120, 4121, 4122, 4123, 4124, 4125, 4126, 4127, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 4148, 4149, 4150, 4151, 4153, 4154, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239, 4240, 4241, 4242, 4243, 4244, 4245, 4246, 4247, 4248, 4249, 4250, 4251, 4252, 4253, 4254, 4255, 4256, 4257, 4258, 4259, 4260, 4261, 4262, 4263, 4264, 4265, 4266, 4267, 4268, 4269, 4270, 4271, 4272, 4273, 4274, 4275, 4276, 4277, 4278, 4279, 4280, 4281, 4282, 4283, 4284, 4285, 4286, 4287, 4288, 4289, 4290, 4291, 4292, 4293, 4294, 4295, 4296, 4297, 4298, 4299, 4300, 4301, 4302, 4303, 4304, 4305, 4306, 4307, 4308, 4309, 4310, 4311, 4312, 4313, 4314, 4315, 4316, 4317, 4318, 4319, 4320, 4321, 4322, 4323, 4324, 4325, 4326, 4327, 4328, 4329, 4330, 4331, 4332, 4333, 4334, 4335, 4336, 4337, 4338, 4339, 4340, 4341, 4342, 4343, 4344, 4345, 4346, 4347, 4348, 4377
;; rd  gen 	(6)
604, 4349, 4350, 4351, 4352, 4353
;; rd  kill	(5)
4349, 4350, 4351, 4352, 4353

;; Pred edge  72 [71.0%] 
;; Pred edge  73 [100.0%]  (fallthru)
(code_label 588 587 589 74 148 "" [1 uses])

(note 589 588 590 74 [bb 74] NOTE_INSN_BASIC_BLOCK)

(insn 590 589 592 74 arch/arm/kernel/setup.c:575 (set (reg:SI 361)
        (zero_extend:SI (mem/s:QI (plus:SI (reg/v/f:SI 166 [ mdesc ])
                    (const_int 28 [0x1c])) [0 S1 A32]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 592 590 593 74 arch/arm/kernel/setup.c:575 (set (reg:SI 362)
        (and:SI (reg:SI 361)
            (const_int 1 [0x1]))) 67 {*arm_andsi3_insn} (nil))

(insn 593 592 594 74 arch/arm/kernel/setup.c:575 (set (reg:QI 363)
        (subreg:QI (reg:SI 362) 0)) 178 {*arm_movqi_insn} (nil))

(insn 594 593 595 74 arch/arm/kernel/setup.c:575 (set (reg:SI 364)
        (zero_extend:SI (reg:QI 363))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 595 594 596 74 arch/arm/kernel/setup.c:575 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 364)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 596 595 597 74 arch/arm/kernel/setup.c:575 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 604)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))
;; End of basic block 74 -> ( 75 76)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166
;; rd  out 	(257)
14, 16, 18, 20, 34, 125, 171, 212, 213, 248, 249, 604, 669, 670, 4105, 4106, 4107, 4108, 4109, 4110, 4111, 4112, 4113, 4114, 4115, 4116, 4117, 4118, 4119, 4120, 4121, 4122, 4123, 4124, 4125, 4126, 4127, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 4148, 4149, 4150, 4151, 4153, 4154, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239, 4240, 4241, 4242, 4243, 4244, 4245, 4246, 4247, 4248, 4249, 4250, 4251, 4252, 4253, 4254, 4255, 4256, 4257, 4258, 4259, 4260, 4261, 4262, 4263, 4264, 4265, 4266, 4267, 4268, 4269, 4270, 4271, 4272, 4273, 4274, 4275, 4276, 4277, 4278, 4279, 4280, 4281, 4282, 4283, 4284, 4285, 4286, 4287, 4288, 4289, 4290, 4291, 4292, 4293, 4294, 4295, 4296, 4297, 4298, 4299, 4300, 4301, 4302, 4303, 4304, 4305, 4306, 4307, 4308, 4309, 4310, 4311, 4312, 4313, 4314, 4315, 4316, 4317, 4318, 4319, 4320, 4321, 4322, 4323, 4324, 4325, 4326, 4327, 4328, 4329, 4330, 4331, 4332, 4333, 4334, 4335, 4336, 4337, 4338, 4339, 4340, 4341, 4342, 4343, 4344, 4345, 4346, 4347, 4348, 4349, 4350, 4351, 4352, 4353, 4377


;; Succ edge  75 [29.0%]  (fallthru)
;; Succ edge  76 [71.0%] 

;; Start of basic block ( 74) -> 75
;; bb 75 artificial_defs: { }
;; bb 75 artificial_uses: { u791(11){ }u792(13){ }u793(25){ }u794(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 365 366 367
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166
;; live  gen 	 0 [r0] 1 [r1] 365 366 367
;; live  kill	 14 [lr]
;; rd  in  	(257)
14, 16, 18, 20, 34, 125, 171, 212, 213, 248, 249, 604, 669, 670, 4105, 4106, 4107, 4108, 4109, 4110, 4111, 4112, 4113, 4114, 4115, 4116, 4117, 4118, 4119, 4120, 4121, 4122, 4123, 4124, 4125, 4126, 4127, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 4148, 4149, 4150, 4151, 4153, 4154, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239, 4240, 4241, 4242, 4243, 4244, 4245, 4246, 4247, 4248, 4249, 4250, 4251, 4252, 4253, 4254, 4255, 4256, 4257, 4258, 4259, 4260, 4261, 4262, 4263, 4264, 4265, 4266, 4267, 4268, 4269, 4270, 4271, 4272, 4273, 4274, 4275, 4276, 4277, 4278, 4279, 4280, 4281, 4282, 4283, 4284, 4285, 4286, 4287, 4288, 4289, 4290, 4291, 4292, 4293, 4294, 4295, 4296, 4297, 4298, 4299, 4300, 4301, 4302, 4303, 4304, 4305, 4306, 4307, 4308, 4309, 4310, 4311, 4312, 4313, 4314, 4315, 4316, 4317, 4318, 4319, 4320, 4321, 4322, 4323, 4324, 4325, 4326, 4327, 4328, 4329, 4330, 4331, 4332, 4333, 4334, 4335, 4336, 4337, 4338, 4339, 4340, 4341, 4342, 4343, 4344, 4345, 4346, 4347, 4348, 4349, 4350, 4351, 4352, 4353, 4377
;; rd  gen 	(4)
12, 4354, 4355, 4356
;; rd  kill	(3)
4354, 4355, 4356

;; Pred edge  74 [29.0%]  (fallthru)
(note 597 596 598 75 [bb 75] NOTE_INSN_BASIC_BLOCK)

(insn 598 597 599 75 arch/arm/kernel/setup.c:576 (set (reg/f:SI 365)
        (symbol_ref:SI ("ioport_resource") [flags 0xc0] <var_decl 0x10e34d80 ioport_resource>)) 167 {*arm_movsi_insn} (nil))

(insn 599 598 600 75 arch/arm/kernel/setup.c:576 (set (reg/f:SI 366)
        (symbol_ref:SI ("*.LANCHOR5") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 600 599 601 75 arch/arm/kernel/setup.c:576 (set (reg/f:SI 367)
        (plus:SI (reg/f:SI 366)
            (const_int 84 [0x54]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR5") [flags 0x182])
                (const_int 84 [0x54])))
        (nil)))

(insn 601 600 602 75 arch/arm/kernel/setup.c:576 (set (reg:SI 0 r0)
        (reg/f:SI 365)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("ioport_resource") [flags 0xc0] <var_decl 0x10e34d80 ioport_resource>)
        (nil)))

(insn 602 601 603 75 arch/arm/kernel/setup.c:576 (set (reg:SI 1 r1)
        (reg/f:SI 367)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR5") [flags 0x182])
                (const_int 84 [0x54])))
        (nil)))

(call_insn 603 602 604 75 arch/arm/kernel/setup.c:576 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("request_resource") [flags 0x41] <function_decl 0x10e39880 request_resource>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 75 -> ( 76)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166
;; rd  out 	(256)
12, 125, 171, 212, 213, 248, 249, 604, 669, 670, 4105, 4106, 4107, 4108, 4109, 4110, 4111, 4112, 4113, 4114, 4115, 4116, 4117, 4118, 4119, 4120, 4121, 4122, 4123, 4124, 4125, 4126, 4127, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 4148, 4149, 4150, 4151, 4153, 4154, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239, 4240, 4241, 4242, 4243, 4244, 4245, 4246, 4247, 4248, 4249, 4250, 4251, 4252, 4253, 4254, 4255, 4256, 4257, 4258, 4259, 4260, 4261, 4262, 4263, 4264, 4265, 4266, 4267, 4268, 4269, 4270, 4271, 4272, 4273, 4274, 4275, 4276, 4277, 4278, 4279, 4280, 4281, 4282, 4283, 4284, 4285, 4286, 4287, 4288, 4289, 4290, 4291, 4292, 4293, 4294, 4295, 4296, 4297, 4298, 4299, 4300, 4301, 4302, 4303, 4304, 4305, 4306, 4307, 4308, 4309, 4310, 4311, 4312, 4313, 4314, 4315, 4316, 4317, 4318, 4319, 4320, 4321, 4322, 4323, 4324, 4325, 4326, 4327, 4328, 4329, 4330, 4331, 4332, 4333, 4334, 4335, 4336, 4337, 4338, 4339, 4340, 4341, 4342, 4343, 4344, 4345, 4346, 4347, 4348, 4349, 4350, 4351, 4352, 4353, 4354, 4355, 4356, 4377


;; Succ edge  76 [100.0%]  (fallthru)

;; Start of basic block ( 74 75) -> 76
;; bb 76 artificial_defs: { }
;; bb 76 artificial_uses: { u801(11){ }u802(13){ }u803(25){ }u804(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166
;; lr  def 	 24 [cc] 368 369 370 371 372
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166
;; live  gen 	 24 [cc] 368 369 370 371 372
;; live  kill	
;; rd  in  	(261)
12, 14, 16, 18, 20, 34, 125, 171, 212, 213, 248, 249, 604, 669, 670, 4105, 4106, 4107, 4108, 4109, 4110, 4111, 4112, 4113, 4114, 4115, 4116, 4117, 4118, 4119, 4120, 4121, 4122, 4123, 4124, 4125, 4126, 4127, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 4148, 4149, 4150, 4151, 4153, 4154, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239, 4240, 4241, 4242, 4243, 4244, 4245, 4246, 4247, 4248, 4249, 4250, 4251, 4252, 4253, 4254, 4255, 4256, 4257, 4258, 4259, 4260, 4261, 4262, 4263, 4264, 4265, 4266, 4267, 4268, 4269, 4270, 4271, 4272, 4273, 4274, 4275, 4276, 4277, 4278, 4279, 4280, 4281, 4282, 4283, 4284, 4285, 4286, 4287, 4288, 4289, 4290, 4291, 4292, 4293, 4294, 4295, 4296, 4297, 4298, 4299, 4300, 4301, 4302, 4303, 4304, 4305, 4306, 4307, 4308, 4309, 4310, 4311, 4312, 4313, 4314, 4315, 4316, 4317, 4318, 4319, 4320, 4321, 4322, 4323, 4324, 4325, 4326, 4327, 4328, 4329, 4330, 4331, 4332, 4333, 4334, 4335, 4336, 4337, 4338, 4339, 4340, 4341, 4342, 4343, 4344, 4345, 4346, 4347, 4348, 4349, 4350, 4351, 4352, 4353, 4354, 4355, 4356, 4377
;; rd  gen 	(6)
602, 4357, 4358, 4359, 4360, 4361
;; rd  kill	(5)
4357, 4358, 4359, 4360, 4361

;; Pred edge  74 [71.0%] 
;; Pred edge  75 [100.0%]  (fallthru)
(code_label 604 603 605 76 149 "" [1 uses])

(note 605 604 606 76 [bb 76] NOTE_INSN_BASIC_BLOCK)

(insn 606 605 608 76 arch/arm/kernel/setup.c:577 (set (reg:SI 369)
        (zero_extend:SI (mem/s:QI (plus:SI (reg/v/f:SI 166 [ mdesc ])
                    (const_int 28 [0x1c])) [0 S1 A32]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 608 606 609 76 arch/arm/kernel/setup.c:577 (set (reg:SI 370)
        (and:SI (reg:SI 369)
            (const_int 2 [0x2]))) 67 {*arm_andsi3_insn} (nil))

(insn 609 608 610 76 arch/arm/kernel/setup.c:577 (set (reg:QI 371)
        (subreg:QI (reg:SI 370) 0)) 178 {*arm_movqi_insn} (nil))

(insn 610 609 611 76 arch/arm/kernel/setup.c:577 (set (reg:SI 372)
        (zero_extend:SI (reg:QI 371))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 611 610 612 76 arch/arm/kernel/setup.c:577 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 372)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 612 611 613 76 arch/arm/kernel/setup.c:577 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 621)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))
;; End of basic block 76 -> ( 77 78)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166
;; rd  out 	(266)
12, 14, 16, 18, 20, 34, 125, 171, 212, 213, 248, 249, 602, 669, 670, 4105, 4106, 4107, 4108, 4109, 4110, 4111, 4112, 4113, 4114, 4115, 4116, 4117, 4118, 4119, 4120, 4121, 4122, 4123, 4124, 4125, 4126, 4127, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 4148, 4149, 4150, 4151, 4153, 4154, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239, 4240, 4241, 4242, 4243, 4244, 4245, 4246, 4247, 4248, 4249, 4250, 4251, 4252, 4253, 4254, 4255, 4256, 4257, 4258, 4259, 4260, 4261, 4262, 4263, 4264, 4265, 4266, 4267, 4268, 4269, 4270, 4271, 4272, 4273, 4274, 4275, 4276, 4277, 4278, 4279, 4280, 4281, 4282, 4283, 4284, 4285, 4286, 4287, 4288, 4289, 4290, 4291, 4292, 4293, 4294, 4295, 4296, 4297, 4298, 4299, 4300, 4301, 4302, 4303, 4304, 4305, 4306, 4307, 4308, 4309, 4310, 4311, 4312, 4313, 4314, 4315, 4316, 4317, 4318, 4319, 4320, 4321, 4322, 4323, 4324, 4325, 4326, 4327, 4328, 4329, 4330, 4331, 4332, 4333, 4334, 4335, 4336, 4337, 4338, 4339, 4340, 4341, 4342, 4343, 4344, 4345, 4346, 4347, 4348, 4349, 4350, 4351, 4352, 4353, 4354, 4355, 4356, 4357, 4358, 4359, 4360, 4361, 4377


;; Succ edge  77 [29.0%]  (fallthru)
;; Succ edge  78 [71.0%] 

;; Start of basic block ( 76) -> 77
;; bb 77 artificial_defs: { }
;; bb 77 artificial_uses: { u812(11){ }u813(13){ }u814(25){ }u815(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 373 374 375 376
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166
;; live  gen 	 0 [r0] 1 [r1] 373 374 375 376
;; live  kill	 14 [lr]
;; rd  in  	(266)
12, 14, 16, 18, 20, 34, 125, 171, 212, 213, 248, 249, 602, 669, 670, 4105, 4106, 4107, 4108, 4109, 4110, 4111, 4112, 4113, 4114, 4115, 4116, 4117, 4118, 4119, 4120, 4121, 4122, 4123, 4124, 4125, 4126, 4127, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 4148, 4149, 4150, 4151, 4153, 4154, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239, 4240, 4241, 4242, 4243, 4244, 4245, 4246, 4247, 4248, 4249, 4250, 4251, 4252, 4253, 4254, 4255, 4256, 4257, 4258, 4259, 4260, 4261, 4262, 4263, 4264, 4265, 4266, 4267, 4268, 4269, 4270, 4271, 4272, 4273, 4274, 4275, 4276, 4277, 4278, 4279, 4280, 4281, 4282, 4283, 4284, 4285, 4286, 4287, 4288, 4289, 4290, 4291, 4292, 4293, 4294, 4295, 4296, 4297, 4298, 4299, 4300, 4301, 4302, 4303, 4304, 4305, 4306, 4307, 4308, 4309, 4310, 4311, 4312, 4313, 4314, 4315, 4316, 4317, 4318, 4319, 4320, 4321, 4322, 4323, 4324, 4325, 4326, 4327, 4328, 4329, 4330, 4331, 4332, 4333, 4334, 4335, 4336, 4337, 4338, 4339, 4340, 4341, 4342, 4343, 4344, 4345, 4346, 4347, 4348, 4349, 4350, 4351, 4352, 4353, 4354, 4355, 4356, 4357, 4358, 4359, 4360, 4361, 4377
;; rd  gen 	(5)
10, 4362, 4363, 4364, 4365
;; rd  kill	(4)
4362, 4363, 4364, 4365

;; Pred edge  76 [29.0%]  (fallthru)
(note 613 612 614 77 [bb 77] NOTE_INSN_BASIC_BLOCK)

(insn 614 613 615 77 arch/arm/kernel/setup.c:578 (set (reg/f:SI 373)
        (symbol_ref:SI ("ioport_resource") [flags 0xc0] <var_decl 0x10e34d80 ioport_resource>)) 167 {*arm_movsi_insn} (nil))

(insn 615 614 617 77 arch/arm/kernel/setup.c:578 (set (reg/f:SI 374)
        (symbol_ref:SI ("*.LANCHOR5") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 617 615 618 77 arch/arm/kernel/setup.c:578 (set (reg/f:SI 376)
        (plus:SI (reg/f:SI 374)
            (const_int 112 [0x70]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR5") [flags 0x182])
                (const_int 112 [0x70])))
        (nil)))

(insn 618 617 619 77 arch/arm/kernel/setup.c:578 (set (reg:SI 0 r0)
        (reg/f:SI 373)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("ioport_resource") [flags 0xc0] <var_decl 0x10e34d80 ioport_resource>)
        (nil)))

(insn 619 618 620 77 arch/arm/kernel/setup.c:578 (set (reg:SI 1 r1)
        (reg/f:SI 376)) 167 {*arm_movsi_insn} (nil))

(call_insn 620 619 621 77 arch/arm/kernel/setup.c:578 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("request_resource") [flags 0x41] <function_decl 0x10e39880 request_resource>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 77 -> ( 78)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166
;; rd  out 	(265)
10, 125, 171, 212, 213, 248, 249, 602, 669, 670, 4105, 4106, 4107, 4108, 4109, 4110, 4111, 4112, 4113, 4114, 4115, 4116, 4117, 4118, 4119, 4120, 4121, 4122, 4123, 4124, 4125, 4126, 4127, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 4148, 4149, 4150, 4151, 4153, 4154, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239, 4240, 4241, 4242, 4243, 4244, 4245, 4246, 4247, 4248, 4249, 4250, 4251, 4252, 4253, 4254, 4255, 4256, 4257, 4258, 4259, 4260, 4261, 4262, 4263, 4264, 4265, 4266, 4267, 4268, 4269, 4270, 4271, 4272, 4273, 4274, 4275, 4276, 4277, 4278, 4279, 4280, 4281, 4282, 4283, 4284, 4285, 4286, 4287, 4288, 4289, 4290, 4291, 4292, 4293, 4294, 4295, 4296, 4297, 4298, 4299, 4300, 4301, 4302, 4303, 4304, 4305, 4306, 4307, 4308, 4309, 4310, 4311, 4312, 4313, 4314, 4315, 4316, 4317, 4318, 4319, 4320, 4321, 4322, 4323, 4324, 4325, 4326, 4327, 4328, 4329, 4330, 4331, 4332, 4333, 4334, 4335, 4336, 4337, 4338, 4339, 4340, 4341, 4342, 4343, 4344, 4345, 4346, 4347, 4348, 4349, 4350, 4351, 4352, 4353, 4354, 4355, 4356, 4357, 4358, 4359, 4360, 4361, 4362, 4363, 4364, 4365, 4377


;; Succ edge  78 [100.0%]  (fallthru)

;; Start of basic block ( 76 77) -> 78
;; bb 78 artificial_defs: { }
;; bb 78 artificial_uses: { u823(11){ }u824(13){ }u825(25){ }u826(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166
;; lr  def 	 24 [cc] 377 378 379 380 381
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166
;; live  gen 	 24 [cc] 377 378 379 380 381
;; live  kill	
;; rd  in  	(271)
10, 12, 14, 16, 18, 20, 34, 125, 171, 212, 213, 248, 249, 602, 669, 670, 4105, 4106, 4107, 4108, 4109, 4110, 4111, 4112, 4113, 4114, 4115, 4116, 4117, 4118, 4119, 4120, 4121, 4122, 4123, 4124, 4125, 4126, 4127, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 4148, 4149, 4150, 4151, 4153, 4154, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239, 4240, 4241, 4242, 4243, 4244, 4245, 4246, 4247, 4248, 4249, 4250, 4251, 4252, 4253, 4254, 4255, 4256, 4257, 4258, 4259, 4260, 4261, 4262, 4263, 4264, 4265, 4266, 4267, 4268, 4269, 4270, 4271, 4272, 4273, 4274, 4275, 4276, 4277, 4278, 4279, 4280, 4281, 4282, 4283, 4284, 4285, 4286, 4287, 4288, 4289, 4290, 4291, 4292, 4293, 4294, 4295, 4296, 4297, 4298, 4299, 4300, 4301, 4302, 4303, 4304, 4305, 4306, 4307, 4308, 4309, 4310, 4311, 4312, 4313, 4314, 4315, 4316, 4317, 4318, 4319, 4320, 4321, 4322, 4323, 4324, 4325, 4326, 4327, 4328, 4329, 4330, 4331, 4332, 4333, 4334, 4335, 4336, 4337, 4338, 4339, 4340, 4341, 4342, 4343, 4344, 4345, 4346, 4347, 4348, 4349, 4350, 4351, 4352, 4353, 4354, 4355, 4356, 4357, 4358, 4359, 4360, 4361, 4362, 4363, 4364, 4365, 4377
;; rd  gen 	(6)
600, 4366, 4367, 4368, 4369, 4370
;; rd  kill	(5)
4366, 4367, 4368, 4369, 4370

;; Pred edge  76 [71.0%] 
;; Pred edge  77 [100.0%]  (fallthru)
(code_label 621 620 622 78 150 "" [1 uses])

(note 622 621 623 78 [bb 78] NOTE_INSN_BASIC_BLOCK)

(insn 623 622 625 78 arch/arm/kernel/setup.c:579 (set (reg:SI 378)
        (zero_extend:SI (mem/s:QI (plus:SI (reg/v/f:SI 166 [ mdesc ])
                    (const_int 28 [0x1c])) [0 S1 A32]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 625 623 626 78 arch/arm/kernel/setup.c:579 (set (reg:SI 379)
        (and:SI (reg:SI 378)
            (const_int 4 [0x4]))) 67 {*arm_andsi3_insn} (nil))

(insn 626 625 627 78 arch/arm/kernel/setup.c:579 (set (reg:QI 380)
        (subreg:QI (reg:SI 379) 0)) 178 {*arm_movqi_insn} (nil))

(insn 627 626 628 78 arch/arm/kernel/setup.c:579 (set (reg:SI 381)
        (zero_extend:SI (reg:QI 380))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 628 627 629 78 arch/arm/kernel/setup.c:579 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 381)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 629 628 630 78 arch/arm/kernel/setup.c:579 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 638)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))
;; End of basic block 78 -> ( 79 80)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166
;; rd  out 	(276)
10, 12, 14, 16, 18, 20, 34, 125, 171, 212, 213, 248, 249, 600, 669, 670, 4105, 4106, 4107, 4108, 4109, 4110, 4111, 4112, 4113, 4114, 4115, 4116, 4117, 4118, 4119, 4120, 4121, 4122, 4123, 4124, 4125, 4126, 4127, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 4148, 4149, 4150, 4151, 4153, 4154, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239, 4240, 4241, 4242, 4243, 4244, 4245, 4246, 4247, 4248, 4249, 4250, 4251, 4252, 4253, 4254, 4255, 4256, 4257, 4258, 4259, 4260, 4261, 4262, 4263, 4264, 4265, 4266, 4267, 4268, 4269, 4270, 4271, 4272, 4273, 4274, 4275, 4276, 4277, 4278, 4279, 4280, 4281, 4282, 4283, 4284, 4285, 4286, 4287, 4288, 4289, 4290, 4291, 4292, 4293, 4294, 4295, 4296, 4297, 4298, 4299, 4300, 4301, 4302, 4303, 4304, 4305, 4306, 4307, 4308, 4309, 4310, 4311, 4312, 4313, 4314, 4315, 4316, 4317, 4318, 4319, 4320, 4321, 4322, 4323, 4324, 4325, 4326, 4327, 4328, 4329, 4330, 4331, 4332, 4333, 4334, 4335, 4336, 4337, 4338, 4339, 4340, 4341, 4342, 4343, 4344, 4345, 4346, 4347, 4348, 4349, 4350, 4351, 4352, 4353, 4354, 4355, 4356, 4357, 4358, 4359, 4360, 4361, 4362, 4363, 4364, 4365, 4366, 4367, 4368, 4369, 4370, 4377


;; Succ edge  79 [29.0%]  (fallthru)
;; Succ edge  80 [71.0%] 

;; Start of basic block ( 78) -> 79
;; bb 79 artificial_defs: { }
;; bb 79 artificial_uses: { u834(11){ }u835(13){ }u836(25){ }u837(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 382 383 384 385
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166
;; live  gen 	 0 [r0] 1 [r1] 382 383 384 385
;; live  kill	 14 [lr]
;; rd  in  	(276)
10, 12, 14, 16, 18, 20, 34, 125, 171, 212, 213, 248, 249, 600, 669, 670, 4105, 4106, 4107, 4108, 4109, 4110, 4111, 4112, 4113, 4114, 4115, 4116, 4117, 4118, 4119, 4120, 4121, 4122, 4123, 4124, 4125, 4126, 4127, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 4148, 4149, 4150, 4151, 4153, 4154, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239, 4240, 4241, 4242, 4243, 4244, 4245, 4246, 4247, 4248, 4249, 4250, 4251, 4252, 4253, 4254, 4255, 4256, 4257, 4258, 4259, 4260, 4261, 4262, 4263, 4264, 4265, 4266, 4267, 4268, 4269, 4270, 4271, 4272, 4273, 4274, 4275, 4276, 4277, 4278, 4279, 4280, 4281, 4282, 4283, 4284, 4285, 4286, 4287, 4288, 4289, 4290, 4291, 4292, 4293, 4294, 4295, 4296, 4297, 4298, 4299, 4300, 4301, 4302, 4303, 4304, 4305, 4306, 4307, 4308, 4309, 4310, 4311, 4312, 4313, 4314, 4315, 4316, 4317, 4318, 4319, 4320, 4321, 4322, 4323, 4324, 4325, 4326, 4327, 4328, 4329, 4330, 4331, 4332, 4333, 4334, 4335, 4336, 4337, 4338, 4339, 4340, 4341, 4342, 4343, 4344, 4345, 4346, 4347, 4348, 4349, 4350, 4351, 4352, 4353, 4354, 4355, 4356, 4357, 4358, 4359, 4360, 4361, 4362, 4363, 4364, 4365, 4366, 4367, 4368, 4369, 4370, 4377
;; rd  gen 	(5)
8, 4371, 4372, 4373, 4374
;; rd  kill	(4)
4371, 4372, 4373, 4374

;; Pred edge  78 [29.0%]  (fallthru)
(note 630 629 631 79 [bb 79] NOTE_INSN_BASIC_BLOCK)

(insn 631 630 632 79 arch/arm/kernel/setup.c:580 (set (reg/f:SI 382)
        (symbol_ref:SI ("ioport_resource") [flags 0xc0] <var_decl 0x10e34d80 ioport_resource>)) 167 {*arm_movsi_insn} (nil))

(insn 632 631 634 79 arch/arm/kernel/setup.c:580 (set (reg/f:SI 383)
        (symbol_ref:SI ("*.LANCHOR5") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 634 632 635 79 arch/arm/kernel/setup.c:580 (set (reg/f:SI 385)
        (plus:SI (reg/f:SI 383)
            (const_int 140 [0x8c]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR5") [flags 0x182])
                (const_int 140 [0x8c])))
        (nil)))

(insn 635 634 636 79 arch/arm/kernel/setup.c:580 (set (reg:SI 0 r0)
        (reg/f:SI 382)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("ioport_resource") [flags 0xc0] <var_decl 0x10e34d80 ioport_resource>)
        (nil)))

(insn 636 635 637 79 arch/arm/kernel/setup.c:580 (set (reg:SI 1 r1)
        (reg/f:SI 385)) 167 {*arm_movsi_insn} (nil))

(call_insn 637 636 638 79 arch/arm/kernel/setup.c:580 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("request_resource") [flags 0x41] <function_decl 0x10e39880 request_resource>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 79 -> ( 80)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166
;; rd  out 	(274)
8, 125, 171, 212, 213, 248, 249, 600, 669, 670, 4105, 4106, 4107, 4108, 4109, 4110, 4111, 4112, 4113, 4114, 4115, 4116, 4117, 4118, 4119, 4120, 4121, 4122, 4123, 4124, 4125, 4126, 4127, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 4148, 4149, 4150, 4151, 4153, 4154, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239, 4240, 4241, 4242, 4243, 4244, 4245, 4246, 4247, 4248, 4249, 4250, 4251, 4252, 4253, 4254, 4255, 4256, 4257, 4258, 4259, 4260, 4261, 4262, 4263, 4264, 4265, 4266, 4267, 4268, 4269, 4270, 4271, 4272, 4273, 4274, 4275, 4276, 4277, 4278, 4279, 4280, 4281, 4282, 4283, 4284, 4285, 4286, 4287, 4288, 4289, 4290, 4291, 4292, 4293, 4294, 4295, 4296, 4297, 4298, 4299, 4300, 4301, 4302, 4303, 4304, 4305, 4306, 4307, 4308, 4309, 4310, 4311, 4312, 4313, 4314, 4315, 4316, 4317, 4318, 4319, 4320, 4321, 4322, 4323, 4324, 4325, 4326, 4327, 4328, 4329, 4330, 4331, 4332, 4333, 4334, 4335, 4336, 4337, 4338, 4339, 4340, 4341, 4342, 4343, 4344, 4345, 4346, 4347, 4348, 4349, 4350, 4351, 4352, 4353, 4354, 4355, 4356, 4357, 4358, 4359, 4360, 4361, 4362, 4363, 4364, 4365, 4366, 4367, 4368, 4369, 4370, 4371, 4372, 4373, 4374, 4377


;; Succ edge  80 [100.0%]  (fallthru)

;; Start of basic block ( 78 79) -> 80
;; bb 80 artificial_defs: { }
;; bb 80 artificial_uses: { u845(11){ }u846(13){ }u847(25){ }u848(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 386 387
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166
;; live  gen 	 24 [cc] 386 387
;; live  kill	
;; rd  in  	(281)
8, 10, 12, 14, 16, 18, 20, 34, 125, 171, 212, 213, 248, 249, 600, 669, 670, 4105, 4106, 4107, 4108, 4109, 4110, 4111, 4112, 4113, 4114, 4115, 4116, 4117, 4118, 4119, 4120, 4121, 4122, 4123, 4124, 4125, 4126, 4127, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 4148, 4149, 4150, 4151, 4153, 4154, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239, 4240, 4241, 4242, 4243, 4244, 4245, 4246, 4247, 4248, 4249, 4250, 4251, 4252, 4253, 4254, 4255, 4256, 4257, 4258, 4259, 4260, 4261, 4262, 4263, 4264, 4265, 4266, 4267, 4268, 4269, 4270, 4271, 4272, 4273, 4274, 4275, 4276, 4277, 4278, 4279, 4280, 4281, 4282, 4283, 4284, 4285, 4286, 4287, 4288, 4289, 4290, 4291, 4292, 4293, 4294, 4295, 4296, 4297, 4298, 4299, 4300, 4301, 4302, 4303, 4304, 4305, 4306, 4307, 4308, 4309, 4310, 4311, 4312, 4313, 4314, 4315, 4316, 4317, 4318, 4319, 4320, 4321, 4322, 4323, 4324, 4325, 4326, 4327, 4328, 4329, 4330, 4331, 4332, 4333, 4334, 4335, 4336, 4337, 4338, 4339, 4340, 4341, 4342, 4343, 4344, 4345, 4346, 4347, 4348, 4349, 4350, 4351, 4352, 4353, 4354, 4355, 4356, 4357, 4358, 4359, 4360, 4361, 4362, 4363, 4364, 4365, 4366, 4367, 4368, 4369, 4370, 4371, 4372, 4373, 4374, 4377
;; rd  gen 	(3)
598, 4375, 4376
;; rd  kill	(2)
4375, 4376

;; Pred edge  78 [71.0%] 
;; Pred edge  79 [100.0%]  (fallthru)
(code_label 638 637 639 80 151 "" [1 uses])

(note 639 638 640 80 [bb 80] NOTE_INSN_BASIC_BLOCK)

(insn 640 639 641 80 arch/arm/kernel/setup.c:922 (set (reg/f:SI 386)
        (symbol_ref:SI ("smp_on_up") [flags 0xc0] <var_decl 0x11401660 smp_on_up>)) 167 {*arm_movsi_insn} (nil))

(insn 641 640 642 80 arch/arm/kernel/setup.c:922 (set (reg:SI 387 [ smp_on_up ])
        (mem/c/i:SI (reg/f:SI 386) [0 smp_on_up+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 642 641 643 80 arch/arm/kernel/setup.c:922 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 387 [ smp_on_up ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 643 642 644 80 arch/arm/kernel/setup.c:922 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 646)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))
;; End of basic block 80 -> ( 81 82)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166
;; rd  out 	(283)
8, 10, 12, 14, 16, 18, 20, 34, 125, 171, 212, 213, 248, 249, 598, 669, 670, 4105, 4106, 4107, 4108, 4109, 4110, 4111, 4112, 4113, 4114, 4115, 4116, 4117, 4118, 4119, 4120, 4121, 4122, 4123, 4124, 4125, 4126, 4127, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 4148, 4149, 4150, 4151, 4153, 4154, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239, 4240, 4241, 4242, 4243, 4244, 4245, 4246, 4247, 4248, 4249, 4250, 4251, 4252, 4253, 4254, 4255, 4256, 4257, 4258, 4259, 4260, 4261, 4262, 4263, 4264, 4265, 4266, 4267, 4268, 4269, 4270, 4271, 4272, 4273, 4274, 4275, 4276, 4277, 4278, 4279, 4280, 4281, 4282, 4283, 4284, 4285, 4286, 4287, 4288, 4289, 4290, 4291, 4292, 4293, 4294, 4295, 4296, 4297, 4298, 4299, 4300, 4301, 4302, 4303, 4304, 4305, 4306, 4307, 4308, 4309, 4310, 4311, 4312, 4313, 4314, 4315, 4316, 4317, 4318, 4319, 4320, 4321, 4322, 4323, 4324, 4325, 4326, 4327, 4328, 4329, 4330, 4331, 4332, 4333, 4334, 4335, 4336, 4337, 4338, 4339, 4340, 4341, 4342, 4343, 4344, 4345, 4346, 4347, 4348, 4349, 4350, 4351, 4352, 4353, 4354, 4355, 4356, 4357, 4358, 4359, 4360, 4361, 4362, 4363, 4364, 4365, 4366, 4367, 4368, 4369, 4370, 4371, 4372, 4373, 4374, 4375, 4376, 4377


;; Succ edge  81 [29.0%]  (fallthru)
;; Succ edge  82 [71.0%] 

;; Start of basic block ( 80) -> 81
;; bb 81 artificial_defs: { }
;; bb 81 artificial_uses: { u852(11){ }u853(13){ }u854(25){ }u855(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166
;; live  gen 	
;; live  kill	 14 [lr]
;; rd  in  	(283)
8, 10, 12, 14, 16, 18, 20, 34, 125, 171, 212, 213, 248, 249, 598, 669, 670, 4105, 4106, 4107, 4108, 4109, 4110, 4111, 4112, 4113, 4114, 4115, 4116, 4117, 4118, 4119, 4120, 4121, 4122, 4123, 4124, 4125, 4126, 4127, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 4148, 4149, 4150, 4151, 4153, 4154, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239, 4240, 4241, 4242, 4243, 4244, 4245, 4246, 4247, 4248, 4249, 4250, 4251, 4252, 4253, 4254, 4255, 4256, 4257, 4258, 4259, 4260, 4261, 4262, 4263, 4264, 4265, 4266, 4267, 4268, 4269, 4270, 4271, 4272, 4273, 4274, 4275, 4276, 4277, 4278, 4279, 4280, 4281, 4282, 4283, 4284, 4285, 4286, 4287, 4288, 4289, 4290, 4291, 4292, 4293, 4294, 4295, 4296, 4297, 4298, 4299, 4300, 4301, 4302, 4303, 4304, 4305, 4306, 4307, 4308, 4309, 4310, 4311, 4312, 4313, 4314, 4315, 4316, 4317, 4318, 4319, 4320, 4321, 4322, 4323, 4324, 4325, 4326, 4327, 4328, 4329, 4330, 4331, 4332, 4333, 4334, 4335, 4336, 4337, 4338, 4339, 4340, 4341, 4342, 4343, 4344, 4345, 4346, 4347, 4348, 4349, 4350, 4351, 4352, 4353, 4354, 4355, 4356, 4357, 4358, 4359, 4360, 4361, 4362, 4363, 4364, 4365, 4366, 4367, 4368, 4369, 4370, 4371, 4372, 4373, 4374, 4375, 4376, 4377
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  80 [29.0%]  (fallthru)
(note 644 643 645 81 [bb 81] NOTE_INSN_BASIC_BLOCK)

(call_insn 645 644 646 81 arch/arm/kernel/setup.c:923 (parallel [
            (call (mem:SI (symbol_ref:SI ("smp_init_cpus") [flags 0x41] <function_decl 0x10c8ef80 smp_init_cpus>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))
;; End of basic block 81 -> ( 82)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166
;; rd  out 	(283)
8, 10, 12, 14, 16, 18, 20, 34, 125, 171, 212, 213, 248, 249, 598, 669, 670, 4105, 4106, 4107, 4108, 4109, 4110, 4111, 4112, 4113, 4114, 4115, 4116, 4117, 4118, 4119, 4120, 4121, 4122, 4123, 4124, 4125, 4126, 4127, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 4148, 4149, 4150, 4151, 4153, 4154, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239, 4240, 4241, 4242, 4243, 4244, 4245, 4246, 4247, 4248, 4249, 4250, 4251, 4252, 4253, 4254, 4255, 4256, 4257, 4258, 4259, 4260, 4261, 4262, 4263, 4264, 4265, 4266, 4267, 4268, 4269, 4270, 4271, 4272, 4273, 4274, 4275, 4276, 4277, 4278, 4279, 4280, 4281, 4282, 4283, 4284, 4285, 4286, 4287, 4288, 4289, 4290, 4291, 4292, 4293, 4294, 4295, 4296, 4297, 4298, 4299, 4300, 4301, 4302, 4303, 4304, 4305, 4306, 4307, 4308, 4309, 4310, 4311, 4312, 4313, 4314, 4315, 4316, 4317, 4318, 4319, 4320, 4321, 4322, 4323, 4324, 4325, 4326, 4327, 4328, 4329, 4330, 4331, 4332, 4333, 4334, 4335, 4336, 4337, 4338, 4339, 4340, 4341, 4342, 4343, 4344, 4345, 4346, 4347, 4348, 4349, 4350, 4351, 4352, 4353, 4354, 4355, 4356, 4357, 4358, 4359, 4360, 4361, 4362, 4363, 4364, 4365, 4366, 4367, 4368, 4369, 4370, 4371, 4372, 4373, 4374, 4375, 4376, 4377


;; Succ edge  82 [100.0%]  (fallthru)

;; Start of basic block ( 80 81) -> 82
;; bb 82 artificial_defs: { }
;; bb 82 artificial_uses: { u857(11){ }u858(13){ }u859(25){ }u860(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 167
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166
;; live  gen 	 24 [cc] 167
;; live  kill	 14 [lr]
;; rd  in  	(283)
8, 10, 12, 14, 16, 18, 20, 34, 125, 171, 212, 213, 248, 249, 598, 669, 670, 4105, 4106, 4107, 4108, 4109, 4110, 4111, 4112, 4113, 4114, 4115, 4116, 4117, 4118, 4119, 4120, 4121, 4122, 4123, 4124, 4125, 4126, 4127, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 4148, 4149, 4150, 4151, 4153, 4154, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239, 4240, 4241, 4242, 4243, 4244, 4245, 4246, 4247, 4248, 4249, 4250, 4251, 4252, 4253, 4254, 4255, 4256, 4257, 4258, 4259, 4260, 4261, 4262, 4263, 4264, 4265, 4266, 4267, 4268, 4269, 4270, 4271, 4272, 4273, 4274, 4275, 4276, 4277, 4278, 4279, 4280, 4281, 4282, 4283, 4284, 4285, 4286, 4287, 4288, 4289, 4290, 4291, 4292, 4293, 4294, 4295, 4296, 4297, 4298, 4299, 4300, 4301, 4302, 4303, 4304, 4305, 4306, 4307, 4308, 4309, 4310, 4311, 4312, 4313, 4314, 4315, 4316, 4317, 4318, 4319, 4320, 4321, 4322, 4323, 4324, 4325, 4326, 4327, 4328, 4329, 4330, 4331, 4332, 4333, 4334, 4335, 4336, 4337, 4338, 4339, 4340, 4341, 4342, 4343, 4344, 4345, 4346, 4347, 4348, 4349, 4350, 4351, 4352, 4353, 4354, 4355, 4356, 4357, 4358, 4359, 4360, 4361, 4362, 4363, 4364, 4365, 4366, 4367, 4368, 4369, 4370, 4371, 4372, 4373, 4374, 4375, 4376, 4377
;; rd  gen 	(2)
595, 4152
;; rd  kill	(1)
4152

;; Pred edge  80 [71.0%] 
;; Pred edge  81 [100.0%]  (fallthru)
(code_label 646 645 647 82 152 "" [1 uses])

(note 647 646 648 82 [bb 82] NOTE_INSN_BASIC_BLOCK)

(call_insn 648 647 649 82 arch/arm/kernel/setup.c:940 (parallel [
            (call (mem:SI (symbol_ref:SI ("early_trap_init") [flags 0x41] <function_decl 0x115a7700 early_trap_init>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(insn 649 648 650 82 arch/arm/kernel/setup.c:942 (set (reg/f:SI 167 [ D.25817 ])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 166 [ mdesc ])
                (const_int 44 [0x2c])) [0 <variable>.init_early+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 650 649 651 82 arch/arm/kernel/setup.c:942 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 167 [ D.25817 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 651 650 652 82 arch/arm/kernel/setup.c:942 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 676)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 2165 [0x875])
        (nil)))
;; End of basic block 82 -> ( 83 86)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 167
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167
;; rd  out 	(284)
8, 10, 12, 14, 16, 18, 20, 34, 125, 171, 212, 213, 248, 249, 595, 669, 670, 4105, 4106, 4107, 4108, 4109, 4110, 4111, 4112, 4113, 4114, 4115, 4116, 4117, 4118, 4119, 4120, 4121, 4122, 4123, 4124, 4125, 4126, 4127, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 4148, 4149, 4150, 4151, 4152, 4153, 4154, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239, 4240, 4241, 4242, 4243, 4244, 4245, 4246, 4247, 4248, 4249, 4250, 4251, 4252, 4253, 4254, 4255, 4256, 4257, 4258, 4259, 4260, 4261, 4262, 4263, 4264, 4265, 4266, 4267, 4268, 4269, 4270, 4271, 4272, 4273, 4274, 4275, 4276, 4277, 4278, 4279, 4280, 4281, 4282, 4283, 4284, 4285, 4286, 4287, 4288, 4289, 4290, 4291, 4292, 4293, 4294, 4295, 4296, 4297, 4298, 4299, 4300, 4301, 4302, 4303, 4304, 4305, 4306, 4307, 4308, 4309, 4310, 4311, 4312, 4313, 4314, 4315, 4316, 4317, 4318, 4319, 4320, 4321, 4322, 4323, 4324, 4325, 4326, 4327, 4328, 4329, 4330, 4331, 4332, 4333, 4334, 4335, 4336, 4337, 4338, 4339, 4340, 4341, 4342, 4343, 4344, 4345, 4346, 4347, 4348, 4349, 4350, 4351, 4352, 4353, 4354, 4355, 4356, 4357, 4358, 4359, 4360, 4361, 4362, 4363, 4364, 4365, 4366, 4367, 4368, 4369, 4370, 4371, 4372, 4373, 4374, 4375, 4376, 4377


;; Succ edge  83 [78.3%]  (fallthru)
;; Succ edge  86 [21.6%] 

;; Start of basic block ( 82) -> 83
;; bb 83 artificial_defs: { }
;; bb 83 artificial_uses: { u865(11){ }u866(13){ }u867(25){ }u868(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167
;; live  gen 	
;; live  kill	 14 [lr]
;; rd  in  	(284)
8, 10, 12, 14, 16, 18, 20, 34, 125, 171, 212, 213, 248, 249, 595, 669, 670, 4105, 4106, 4107, 4108, 4109, 4110, 4111, 4112, 4113, 4114, 4115, 4116, 4117, 4118, 4119, 4120, 4121, 4122, 4123, 4124, 4125, 4126, 4127, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 4148, 4149, 4150, 4151, 4152, 4153, 4154, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239, 4240, 4241, 4242, 4243, 4244, 4245, 4246, 4247, 4248, 4249, 4250, 4251, 4252, 4253, 4254, 4255, 4256, 4257, 4258, 4259, 4260, 4261, 4262, 4263, 4264, 4265, 4266, 4267, 4268, 4269, 4270, 4271, 4272, 4273, 4274, 4275, 4276, 4277, 4278, 4279, 4280, 4281, 4282, 4283, 4284, 4285, 4286, 4287, 4288, 4289, 4290, 4291, 4292, 4293, 4294, 4295, 4296, 4297, 4298, 4299, 4300, 4301, 4302, 4303, 4304, 4305, 4306, 4307, 4308, 4309, 4310, 4311, 4312, 4313, 4314, 4315, 4316, 4317, 4318, 4319, 4320, 4321, 4322, 4323, 4324, 4325, 4326, 4327, 4328, 4329, 4330, 4331, 4332, 4333, 4334, 4335, 4336, 4337, 4338, 4339, 4340, 4341, 4342, 4343, 4344, 4345, 4346, 4347, 4348, 4349, 4350, 4351, 4352, 4353, 4354, 4355, 4356, 4357, 4358, 4359, 4360, 4361, 4362, 4363, 4364, 4365, 4366, 4367, 4368, 4369, 4370, 4371, 4372, 4373, 4374, 4375, 4376, 4377
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  82 [78.3%]  (fallthru)
(note 652 651 653 83 [bb 83] NOTE_INSN_BASIC_BLOCK)

(call_insn 653 652 658 83 arch/arm/kernel/setup.c:943 (parallel [
            (call (mem:SI (reg/f:SI 167 [ D.25817 ]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 244 {*call_reg_armv5} (nil)
    (nil))
;; End of basic block 83 -> ( 86)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(284)
8, 10, 12, 14, 16, 18, 20, 34, 125, 171, 212, 213, 248, 249, 595, 669, 670, 4105, 4106, 4107, 4108, 4109, 4110, 4111, 4112, 4113, 4114, 4115, 4116, 4117, 4118, 4119, 4120, 4121, 4122, 4123, 4124, 4125, 4126, 4127, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 4148, 4149, 4150, 4151, 4152, 4153, 4154, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239, 4240, 4241, 4242, 4243, 4244, 4245, 4246, 4247, 4248, 4249, 4250, 4251, 4252, 4253, 4254, 4255, 4256, 4257, 4258, 4259, 4260, 4261, 4262, 4263, 4264, 4265, 4266, 4267, 4268, 4269, 4270, 4271, 4272, 4273, 4274, 4275, 4276, 4277, 4278, 4279, 4280, 4281, 4282, 4283, 4284, 4285, 4286, 4287, 4288, 4289, 4290, 4291, 4292, 4293, 4294, 4295, 4296, 4297, 4298, 4299, 4300, 4301, 4302, 4303, 4304, 4305, 4306, 4307, 4308, 4309, 4310, 4311, 4312, 4313, 4314, 4315, 4316, 4317, 4318, 4319, 4320, 4321, 4322, 4323, 4324, 4325, 4326, 4327, 4328, 4329, 4330, 4331, 4332, 4333, 4334, 4335, 4336, 4337, 4338, 4339, 4340, 4341, 4342, 4343, 4344, 4345, 4346, 4347, 4348, 4349, 4350, 4351, 4352, 4353, 4354, 4355, 4356, 4357, 4358, 4359, 4360, 4361, 4362, 4363, 4364, 4365, 4366, 4367, 4368, 4369, 4370, 4371, 4372, 4373, 4374, 4375, 4376, 4377


;; Succ edge  86 [100.0%]  (fallthru)

;; Start of basic block ( 15 14) -> 84
;; bb 84 artificial_defs: { }
;; bb 84 artificial_uses: { u871(11){ }u872(13){ }u873(25){ }u874(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 170
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 160 162
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 170
;; live  gen 	 160 162
;; live  kill	 24 [cc]
;; rd  in  	(73)
50, 125, 171, 212, 213, 248, 249, 652, 669, 670, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4142, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4215, 4216, 4217, 4218, 4219
;; rd  gen 	(2)
4139, 4141
;; rd  kill	(3)
4138, 4139, 4141

;; Pred edge  15 [100.0%]  (fallthru)
;; Pred edge  14 [100.0%]  (fallthru)
(code_label 658 653 659 84 114 "" [0 uses])

(note 659 658 660 84 [bb 84] NOTE_INSN_BASIC_BLOCK)

(insn 660 659 661 84 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/cputype.h:65 (parallel [
            (set (reg/v:SI 162 [ __val ])
                (asm_operands:SI ("mrc	p15, 0, %0, c0, c0, 1") ("=r") 0 []
                     [] 8199979))
            (clobber (reg:QI 24 cc))
        ]) -1 (nil))

(insn 661 660 666 84 arch/arm/kernel/setup.c:265 (set (reg/v:SI 160 [ aliasing_icache ])
        (and:SI (reg/v:SI 162 [ __val ])
            (const_int 2048 [0x800]))) 67 {*arm_andsi3_insn} (nil))
;; End of basic block 84 -> ( 17)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 170
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 170
;; rd  out 	(74)
50, 125, 171, 212, 213, 248, 249, 669, 670, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4139, 4141, 4142, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4215, 4216, 4217, 4218, 4219


;; Succ edge  17 [100.0%]  (fallthru)

;; Start of basic block ( 57) -> 85
;; bb 85 artificial_defs: { }
;; bb 85 artificial_uses: { u876(11){ }u877(13){ }u878(25){ }u879(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 166 170
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 388
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 166 170
;; live  gen 	 0 [r0] 1 [r1] 388
;; live  kill	 14 [lr]
;; rd  in  	(171)
3, 36, 40, 45, 50, 125, 171, 212, 213, 248, 249, 625, 669, 670, 4105, 4106, 4107, 4108, 4109, 4110, 4111, 4112, 4113, 4114, 4120, 4121, 4122, 4123, 4124, 4125, 4126, 4127, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 4148, 4149, 4150, 4151, 4154, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239, 4240, 4241, 4242, 4243, 4244, 4245, 4246, 4247, 4248, 4249, 4250, 4251, 4252, 4253, 4254, 4255, 4256, 4257, 4258, 4259, 4260, 4261, 4262, 4263, 4264, 4265, 4266, 4267, 4268, 4269, 4270, 4271, 4272, 4273, 4377
;; rd  gen 	(2)
3, 4377
;; rd  kill	(1)
4377

;; Pred edge  57 [4.5%]  (fallthru)
(note 666 661 667 85 [bb 85] NOTE_INSN_BASIC_BLOCK)

(insn 667 666 668 85 arch/arm/kernel/setup.c:710 (set (reg/f:SI 388)
        (symbol_ref/v/f:SI ("*.LC37") [flags 0x82] <string_cst 0x11728100>)) 167 {*arm_movsi_insn} (nil))

(insn 668 667 669 85 arch/arm/kernel/setup.c:710 (set (reg:SI 0 r0)
        (reg/f:SI 388)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC37") [flags 0x82] <string_cst 0x11728100>)
        (nil)))

(insn 669 668 670 85 arch/arm/kernel/setup.c:710 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 136 [ tags.955 ])
                (const_int 4 [0x4])) [0 <variable>.hdr.tag+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn 670 669 676 85 arch/arm/kernel/setup.c:710 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 85 -> ( 58)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 166 170
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 166 170
;; rd  out 	(167)
3, 125, 171, 212, 213, 248, 249, 625, 669, 670, 4105, 4106, 4107, 4108, 4109, 4110, 4111, 4112, 4113, 4114, 4120, 4121, 4122, 4123, 4124, 4125, 4126, 4127, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 4148, 4149, 4150, 4151, 4154, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239, 4240, 4241, 4242, 4243, 4244, 4245, 4246, 4247, 4248, 4249, 4250, 4251, 4252, 4253, 4254, 4255, 4256, 4257, 4258, 4259, 4260, 4261, 4262, 4263, 4264, 4265, 4266, 4267, 4268, 4269, 4270, 4271, 4272, 4273, 4377


;; Succ edge  58 [100.0%]  (fallthru)

;; Start of basic block ( 83 82) -> 86
;; bb 86 artificial_defs: { }
;; bb 86 artificial_uses: { u885(11){ }u886(13){ }u887(25){ }u888(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(284)
8, 10, 12, 14, 16, 18, 20, 34, 125, 171, 212, 213, 248, 249, 595, 669, 670, 4105, 4106, 4107, 4108, 4109, 4110, 4111, 4112, 4113, 4114, 4115, 4116, 4117, 4118, 4119, 4120, 4121, 4122, 4123, 4124, 4125, 4126, 4127, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 4148, 4149, 4150, 4151, 4152, 4153, 4154, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239, 4240, 4241, 4242, 4243, 4244, 4245, 4246, 4247, 4248, 4249, 4250, 4251, 4252, 4253, 4254, 4255, 4256, 4257, 4258, 4259, 4260, 4261, 4262, 4263, 4264, 4265, 4266, 4267, 4268, 4269, 4270, 4271, 4272, 4273, 4274, 4275, 4276, 4277, 4278, 4279, 4280, 4281, 4282, 4283, 4284, 4285, 4286, 4287, 4288, 4289, 4290, 4291, 4292, 4293, 4294, 4295, 4296, 4297, 4298, 4299, 4300, 4301, 4302, 4303, 4304, 4305, 4306, 4307, 4308, 4309, 4310, 4311, 4312, 4313, 4314, 4315, 4316, 4317, 4318, 4319, 4320, 4321, 4322, 4323, 4324, 4325, 4326, 4327, 4328, 4329, 4330, 4331, 4332, 4333, 4334, 4335, 4336, 4337, 4338, 4339, 4340, 4341, 4342, 4343, 4344, 4345, 4346, 4347, 4348, 4349, 4350, 4351, 4352, 4353, 4354, 4355, 4356, 4357, 4358, 4359, 4360, 4361, 4362, 4363, 4364, 4365, 4366, 4367, 4368, 4369, 4370, 4371, 4372, 4373, 4374, 4375, 4376, 4377
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  83 [100.0%]  (fallthru)
;; Pred edge  82 [21.6%] 
(code_label 676 670 679 86 155 "" [1 uses])

(note 679 676 0 86 [bb 86] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 86 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(284)
8, 10, 12, 14, 16, 18, 20, 34, 125, 171, 212, 213, 248, 249, 595, 669, 670, 4105, 4106, 4107, 4108, 4109, 4110, 4111, 4112, 4113, 4114, 4115, 4116, 4117, 4118, 4119, 4120, 4121, 4122, 4123, 4124, 4125, 4126, 4127, 4128, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 4148, 4149, 4150, 4151, 4152, 4153, 4154, 4155, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4170, 4173, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239, 4240, 4241, 4242, 4243, 4244, 4245, 4246, 4247, 4248, 4249, 4250, 4251, 4252, 4253, 4254, 4255, 4256, 4257, 4258, 4259, 4260, 4261, 4262, 4263, 4264, 4265, 4266, 4267, 4268, 4269, 4270, 4271, 4272, 4273, 4274, 4275, 4276, 4277, 4278, 4279, 4280, 4281, 4282, 4283, 4284, 4285, 4286, 4287, 4288, 4289, 4290, 4291, 4292, 4293, 4294, 4295, 4296, 4297, 4298, 4299, 4300, 4301, 4302, 4303, 4304, 4305, 4306, 4307, 4308, 4309, 4310, 4311, 4312, 4313, 4314, 4315, 4316, 4317, 4318, 4319, 4320, 4321, 4322, 4323, 4324, 4325, 4326, 4327, 4328, 4329, 4330, 4331, 4332, 4333, 4334, 4335, 4336, 4337, 4338, 4339, 4340, 4341, 4342, 4343, 4344, 4345, 4346, 4347, 4348, 4349, 4350, 4351, 4352, 4353, 4354, 4355, 4356, 4357, 4358, 4359, 4360, 4361, 4362, 4363, 4364, 4365, 4366, 4367, 4368, 4369, 4370, 4371, 4372, 4373, 4374, 4375, 4376, 4377


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
deleting insn with uid = 15.
deleting insn with uid = 32.
deleting insn with uid = 35.
deleting insn with uid = 38.
deleting insn with uid = 41.
deleting insn with uid = 52.
deleting insn with uid = 56.
deleting insn with uid = 59.
deleting insn with uid = 62.
deleting insn with uid = 83.
deleting insn with uid = 85.
deleting insn with uid = 86.
deleting insn with uid = 95.
deleting insn with uid = 97.
deleting insn with uid = 104.
deleting insn with uid = 117.
deleting insn with uid = 137.
deleting insn with uid = 177.
deleting insn with uid = 183.
deleting insn with uid = 250.
deleting insn with uid = 253.
deleting insn with uid = 264.
deleting insn with uid = 265.
deleting insn with uid = 435.
deleting insn with uid = 450.
deleting insn with uid = 453.
deleting insn with uid = 456.
deleting insn with uid = 467.
deleting insn with uid = 468.
deleting insn with uid = 469.
deleting insn with uid = 482.
deleting insn with uid = 485.
deleting insn with uid = 488.
deleting insn with uid = 501.
deleting insn with uid = 529.
deleting insn with uid = 535.
deleting insn with uid = 548.
deleting insn with uid = 554.
deleting insn with uid = 566.
deleting insn with uid = 580.
deleting insn with uid = 584.
deleting insn with uid = 591.
deleting insn with uid = 607.
deleting insn with uid = 616.
deleting insn with uid = 624.
deleting insn with uid = 633.
verify found no changes in insn with uid = 63.
rescanning insn with uid = 436.
deleting insn with uid = 436.
rescanning insn with uid = 592.
deleting insn with uid = 592.
rescanning insn with uid = 608.
deleting insn with uid = 608.
rescanning insn with uid = 625.
deleting insn with uid = 625.
ending the processing of deferred insns
