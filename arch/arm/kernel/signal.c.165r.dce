
;; Function setup_return (setup_return)[0:1448]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 21 n_edges 28 count 40 (  1.9)
df_worklist_dataflow_doublequeue:n_basic_blocks 21 n_edges 28 count 40 (  1.9)
df_worklist_dataflow_doublequeue:n_basic_blocks 21 n_edges 28 count 40 (  1.9)


setup_return

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={4d,4u} r1={3d,2u} r2={2d,1u} r3={2d,1u} r11={1d,20u} r12={2d} r13={1d,21u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={11d,8u} r25={1d,20u} r26={1d,20u,1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,1u,1d} r134={1d,1u} r136={1d,2u} r137={2d,4u,1d} r138={4d,5u} r139={3d,4u} r140={3d,1u} r141={1d,2u} r142={2d,1u} r143={1d,1u} r144={1d,3u} r146={1d,6u} r147={1d,3u} r148={1d,5u} r149={1d,1u} r150={1d,1u} r151={1d,1u,1d} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,2u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,2u} r161={1d,1u} r162={1d,1u} r164={1d,1u,1d} r165={1d,1u} r166={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r171={1d,1u} r172={1d,1u} r173={1d,1u} 
;;    total ref usage 353{186d,162u,5e} in 77{76 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139
0[0,4] 1[4,3] 2[7,2] 3[9,2] 11[11,1] 12[12,2] 13[14,1] 14[15,2] 15[17,1] 16[18,1] 17[19,1] 18[20,1] 19[21,1] 20[22,1] 21[23,1] 22[24,1] 23[25,1] 24[26,11] 25[37,1] 26[38,1] 27[39,1] 28[40,1] 29[41,1] 30[42,1] 31[43,1] 32[44,1] 33[45,1] 34[46,1] 35[47,1] 36[48,1] 37[49,1] 38[50,1] 39[51,1] 40[52,1] 41[53,1] 42[54,1] 43[55,1] 44[56,1] 45[57,1] 46[58,1] 47[59,1] 48[60,1] 49[61,1] 50[62,1] 51[63,1] 52[64,1] 53[65,1] 54[66,1] 55[67,1] 56[68,1] 57[69,1] 58[70,1] 59[71,1] 60[72,1] 61[73,1] 62[74,1] 63[75,1] 64[76,1] 65[77,1] 66[78,1] 67[79,1] 68[80,1] 69[81,1] 70[82,1] 71[83,1] 72[84,1] 73[85,1] 74[86,1] 75[87,1] 76[88,1] 77[89,1] 78[90,1] 79[91,1] 80[92,1] 81[93,1] 82[94,1] 83[95,1] 84[96,1] 85[97,1] 86[98,1] 87[99,1] 88[100,1] 89[101,1] 90[102,1] 91[103,1] 92[104,1] 93[105,1] 94[106,1] 95[107,1] 96[108,1] 97[109,1] 98[110,1] 99[111,1] 100[112,1] 101[113,1] 102[114,1] 103[115,1] 104[116,1] 105[117,1] 106[118,1] 107[119,1] 108[120,1] 109[121,1] 110[122,1] 111[123,1] 112[124,1] 113[125,1] 114[126,1] 115[127,1] 116[128,1] 117[129,1] 118[130,1] 119[131,1] 120[132,1] 121[133,1] 122[134,1] 123[135,1] 124[136,1] 125[137,1] 126[138,1] 127[139,1] 133[140,1] 134[141,1] 136[142,1] 137[143,2] 138[145,4] 139[149,3] 140[152,3] 141[155,1] 142[156,2] 143[158,1] 144[159,1] 146[160,1] 147[161,1] 148[162,1] 149[163,1] 150[164,1] 151[165,1] 152[166,1] 153[167,1] 154[168,1] 155[169,1] 156[170,1] 157[171,1] 158[172,1] 159[173,1] 160[174,1] 161[175,1] 162[176,1] 164[177,1] 165[178,1] 166[179,1] 168[180,1] 169[181,1] 170[182,1] 171[183,1] 172[184,1] 173[185,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d3(0){ }d6(1){ }d8(2){ }d10(3){ }d11(11){ }d13(12){ }d14(13){ }d16(14){ }d37(25){ }d38(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
3, 6, 8, 10, 11, 13, 14, 16, 37, 38
;; rd  kill	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 37, 38
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
3, 6, 8, 10, 11, 13, 14, 16, 37, 38

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d11(bb 0 insn -1) }u1(13){ d14(bb 0 insn -1) }u2(25){ d37(bb 0 insn -1) }u3(26){ d38(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 138 141 144 146 147 148 149 150 151 152 153
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 138 141 144 146 147 148 149 150 151 152 153
;; live  kill	
;; rd  in  	(10)
3, 6, 8, 10, 11, 13, 14, 16, 37, 38
;; rd  gen 	(12)
36, 148, 155, 159, 160, 161, 162, 163, 164, 165, 166, 167
;; rd  kill	(25)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 145, 146, 147, 148, 155, 159, 160, 161, 162, 163, 164, 165, 166, 167
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 141 144 146 147 148 149 150
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 141 144 146 147 148 149 150
;; rd  out 	(22)
3, 6, 8, 10, 11, 13, 14, 16, 36, 37, 38, 148, 155, 159, 160, 161, 162, 163, 164, 165, 166, 167
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d37(bb 0 insn -1) }
;;   reg 26 { d38(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d3(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 3
;;      reg 1 { d6(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 4
;;      reg 2 { d8(bb 0 insn -1) }
;;   UD chains for insn luid 3 uid 5
;;      reg 3 { d10(bb 0 insn -1) }
;;   UD chains for insn luid 4 uid 6
;;      reg 26 { d38(bb 0 insn -1) }
;;   eq_note reg 26 { }
;;   UD chains for insn luid 5 uid 10
;;      reg 147 { d161(bb 2 insn 3) }
;;   UD chains for insn luid 6 uid 11
;;      reg 146 { d160(bb 2 insn 2) }
;;   UD chains for insn luid 7 uid 12
;;      reg 151 { d165(bb 2 insn 11) }
;;   UD chains for insn luid 8 uid 13
;;      reg 152 { d166(bb 2 insn 12) }
;;   eq_note reg 151 { }
;;   UD chains for insn luid 9 uid 14
;;      reg 147 { d161(bb 2 insn 3) }
;;   UD chains for insn luid 10 uid 15
;;      reg 144 { d159(bb 2 insn 14) }
;;   UD chains for insn luid 11 uid 16
;;      reg 153 { d167(bb 2 insn 15) }
;;   UD chains for insn luid 12 uid 17
;;      reg 24 { d36(bb 2 insn 16) }

( 2 )->[3]->( 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u19(11){ d11(bb 0 insn -1) }u20(13){ d14(bb 0 insn -1) }u21(25){ d37(bb 0 insn -1) }u22(26){ d38(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 141 144 146 147 148 149 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 138 143
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 141 144 146 147 148 149 150
;; live  gen 	 138 143
;; live  kill	
;; rd  in  	(22)
3, 6, 8, 10, 11, 13, 14, 16, 36, 37, 38, 148, 155, 159, 160, 161, 162, 163, 164, 165, 166, 167
;; rd  gen 	(2)
147, 158
;; rd  kill	(5)
145, 146, 147, 148, 158
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 141 144 146 147 148 149 150
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 141 144 146 147 148 149 150
;; rd  out 	(23)
3, 6, 8, 10, 11, 13, 14, 16, 36, 37, 38, 147, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d37(bb 0 insn -1) }
;;   reg 26 { d38(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 19
;;      reg 138 { d148(bb 2 insn 13) }
;;   UD chains for insn luid 1 uid 20
;;      reg 143 { d158(bb 3 insn 19) }

( 2 3 )->[4]->( 6 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u25(11){ d11(bb 0 insn -1) }u26(13){ d14(bb 0 insn -1) }u27(25){ d37(bb 0 insn -1) }u28(26){ d38(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 141 144 146 147 148 149 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 154 155 156
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 141 144 146 147 148 149 150
;; live  gen 	 24 [cc] 154 155 156
;; live  kill	
;; rd  in  	(24)
3, 6, 8, 10, 11, 13, 14, 16, 36, 37, 38, 147, 148, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167
;; rd  gen 	(4)
35, 168, 169, 170
;; rd  kill	(14)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 168, 169, 170
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 141 144 146 147 148 149 150 155
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 141 144 146 147 148 149 150 155
;; rd  out 	(27)
3, 6, 8, 10, 11, 13, 14, 16, 35, 37, 38, 147, 148, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d37(bb 0 insn -1) }
;;   reg 26 { d38(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 24
;;      reg 154 { d168(bb 4 insn 23) }
;;   UD chains for insn luid 2 uid 25
;;      reg 156 { d170(bb 4 insn 24) }
;;   UD chains for insn luid 3 uid 26
;;      reg 155 { d169(bb 4 insn 25) }
;;   UD chains for insn luid 4 uid 27
;;      reg 24 { d35(bb 4 insn 26) }

( 4 )->[5]->( 9 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u33(11){ d11(bb 0 insn -1) }u34(13){ d14(bb 0 insn -1) }u35(25){ d37(bb 0 insn -1) }u36(26){ d38(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 141 144 146 147 148 149 150 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 155
;; lr  def 	 139
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 141 144 146 147 148 149 150 155
;; live  gen 	 139
;; live  kill	
;; rd  in  	(27)
3, 6, 8, 10, 11, 13, 14, 16, 35, 37, 38, 147, 148, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170
;; rd  gen 	(1)
149
;; rd  kill	(3)
149, 150, 151
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 141 144 146 147 148 149 150
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 141 144 146 147 148 149 150
;; rd  out 	(28)
3, 6, 8, 10, 11, 13, 14, 16, 35, 37, 38, 147, 148, 149, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d37(bb 0 insn -1) }
;;   reg 26 { d38(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 29
;;      reg 155 { d169(bb 4 insn 25) }

( 4 )->[6]->( 7 8 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u38(11){ d11(bb 0 insn -1) }u39(13){ d14(bb 0 insn -1) }u40(25){ d37(bb 0 insn -1) }u41(26){ d38(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 141 144 146 147 148 149 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 24 [cc] 139
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 141 144 146 147 148 149 150
;; live  gen 	 24 [cc] 139
;; live  kill	
;; rd  in  	(27)
3, 6, 8, 10, 11, 13, 14, 16, 35, 37, 38, 147, 148, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170
;; rd  gen 	(2)
34, 151
;; rd  kill	(14)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 149, 150, 151
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 141 144 146 147 148 149 150
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 141 144 146 147 148 149 150
;; rd  out 	(28)
3, 6, 8, 10, 11, 13, 14, 16, 34, 37, 38, 147, 148, 151, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d37(bb 0 insn -1) }
;;   reg 26 { d38(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 34
;;      reg 141 { d155(bb 2 insn 10) }
;;   UD chains for insn luid 1 uid 35
;;      reg 139 { d151(bb 6 insn 34) }
;;   UD chains for insn luid 2 uid 36
;;      reg 24 { d34(bb 6 insn 35) }

( 6 )->[7]->( 9 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u45(11){ d11(bb 0 insn -1) }u46(13){ d14(bb 0 insn -1) }u47(25){ d37(bb 0 insn -1) }u48(26){ d38(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 141 144 146 147 148 149 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 133 138 139 157
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 141 144 146 147 148 149 150
;; live  gen 	 133 138 139 157
;; live  kill	
;; rd  in  	(28)
3, 6, 8, 10, 11, 13, 14, 16, 34, 37, 38, 147, 148, 151, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170
;; rd  gen 	(4)
140, 146, 150, 171
;; rd  kill	(9)
140, 145, 146, 147, 148, 149, 150, 151, 171
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 141 144 146 147 148 149 150
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 141 144 146 147 148 149 150
;; rd  out 	(29)
3, 6, 8, 10, 11, 13, 14, 16, 34, 37, 38, 140, 146, 150, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d37(bb 0 insn -1) }
;;   reg 26 { d38(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 38
;;      reg 138 { d148(bb 2 insn 13) d147(bb 3 insn 20) }
;;   UD chains for insn luid 1 uid 39
;;      reg 133 { d140(bb 7 insn 38) }
;;   UD chains for insn luid 2 uid 40
;;      reg 157 { d171(bb 7 insn 39) }
;;   eq_note reg 133 { }

( 6 )->[8]->( 9 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u53(11){ d11(bb 0 insn -1) }u54(13){ d14(bb 0 insn -1) }u55(25){ d37(bb 0 insn -1) }u56(26){ d38(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 141 144 146 147 148 149 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 138
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 141 144 146 147 148 149 150
;; live  gen 	 138
;; live  kill	
;; rd  in  	(28)
3, 6, 8, 10, 11, 13, 14, 16, 34, 37, 38, 147, 148, 151, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170
;; rd  gen 	(1)
145
;; rd  kill	(4)
145, 146, 147, 148
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 141 144 146 147 148 149 150
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 141 144 146 147 148 149 150
;; rd  out 	(27)
3, 6, 8, 10, 11, 13, 14, 16, 34, 37, 38, 145, 151, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d37(bb 0 insn -1) }
;;   reg 26 { d38(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 46
;;      reg 138 { d148(bb 2 insn 13) d147(bb 3 insn 20) }

( 8 5 7 )->[9]->( 10 11 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u58(11){ d11(bb 0 insn -1) }u59(13){ d14(bb 0 insn -1) }u60(25){ d37(bb 0 insn -1) }u61(26){ d38(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 141 144 146 147 148 149 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 24 [cc] 158
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 141 144 146 147 148 149 150
;; live  gen 	 24 [cc] 158
;; live  kill	
;; rd  in  	(35)
3, 6, 8, 10, 11, 13, 14, 16, 34, 35, 37, 38, 140, 145, 146, 147, 148, 149, 150, 151, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171
;; rd  gen 	(2)
33, 172
;; rd  kill	(12)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 172
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 141 144 146 147 148 149 150
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 141 144 146 147 148 149 150
;; rd  out 	(35)
3, 6, 8, 10, 11, 13, 14, 16, 33, 37, 38, 140, 145, 146, 147, 148, 149, 150, 151, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d37(bb 0 insn -1) }
;;   reg 26 { d38(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 49
;;      reg 144 { d159(bb 2 insn 14) }
;;   UD chains for insn luid 1 uid 50
;;      reg 158 { d172(bb 9 insn 49) }
;;   UD chains for insn luid 2 uid 51
;;      reg 24 { d33(bb 9 insn 50) }

( 9 )->[10]->( 18 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u65(11){ d11(bb 0 insn -1) }u66(13){ d14(bb 0 insn -1) }u67(25){ d37(bb 0 insn -1) }u68(26){ d38(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 141 146 147 149 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; lr  def 	 140
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 141 146 147 149 150
;; live  gen 	 140
;; live  kill	
;; rd  in  	(35)
3, 6, 8, 10, 11, 13, 14, 16, 33, 37, 38, 140, 145, 146, 147, 148, 149, 150, 151, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172
;; rd  gen 	(1)
154
;; rd  kill	(3)
152, 153, 154
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 140 141 146 149 150
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 140 141 146 149 150
;; rd  out 	(36)
3, 6, 8, 10, 11, 13, 14, 16, 33, 37, 38, 140, 145, 146, 147, 148, 149, 150, 151, 154, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d37(bb 0 insn -1) }
;;   reg 26 { d38(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 53
;;      reg 147 { d161(bb 2 insn 3) }

( 9 )->[11]->( 12 13 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u70(11){ d11(bb 0 insn -1) }u71(13){ d14(bb 0 insn -1) }u72(25){ d37(bb 0 insn -1) }u73(26){ d38(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 141 144 146 148 149 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 144
;; lr  def 	 24 [cc] 137 159
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 141 144 146 148 149 150
;; live  gen 	 24 [cc] 137 159
;; live  kill	
;; rd  in  	(35)
3, 6, 8, 10, 11, 13, 14, 16, 33, 37, 38, 140, 145, 146, 147, 148, 149, 150, 151, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172
;; rd  gen 	(3)
32, 144, 173
;; rd  kill	(14)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 143, 144, 173
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 141 146 148 149 150
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 141 146 148 149 150
;; rd  out 	(37)
3, 6, 8, 10, 11, 13, 14, 16, 32, 37, 38, 140, 144, 145, 146, 147, 148, 149, 150, 151, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d37(bb 0 insn -1) }
;;   reg 26 { d38(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 58
;;      reg 139 { d151(bb 6 insn 34) d150(bb 7 insn 41) d149(bb 5 insn 29) }
;;   UD chains for insn luid 1 uid 59
;;      reg 144 { d159(bb 2 insn 14) }
;;   UD chains for insn luid 2 uid 60
;;      reg 159 { d173(bb 11 insn 59) }
;;   UD chains for insn luid 3 uid 61
;;      reg 24 { d32(bb 11 insn 60) }

( 11 )->[12]->( 13 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u78(11){ d11(bb 0 insn -1) }u79(13){ d14(bb 0 insn -1) }u80(25){ d37(bb 0 insn -1) }u81(26){ d38(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 141 146 148 149 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 137
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 141 146 148 149 150
;; live  gen 	 137
;; live  kill	
;; rd  in  	(37)
3, 6, 8, 10, 11, 13, 14, 16, 32, 37, 38, 140, 144, 145, 146, 147, 148, 149, 150, 151, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173
;; rd  gen 	(1)
143
;; rd  kill	(2)
143, 144
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 141 146 148 149 150
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 141 146 148 149 150
;; rd  out 	(37)
3, 6, 8, 10, 11, 13, 14, 16, 32, 37, 38, 140, 143, 145, 146, 147, 148, 149, 150, 151, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d37(bb 0 insn -1) }
;;   reg 26 { d38(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 63
;;      reg 137 { d144(bb 11 insn 58) }

( 11 12 )->[13]->( 19 14 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u83(11){ d11(bb 0 insn -1) }u84(13){ d14(bb 0 insn -1) }u85(25){ d37(bb 0 insn -1) }u86(26){ d38(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 141 146 148 149 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 148
;; lr  def 	 24 [cc] 136 160 161 162
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 141 146 148 149 150
;; live  gen 	 24 [cc] 136 160 161 162
;; live  kill	 24 [cc]
;; rd  in  	(38)
3, 6, 8, 10, 11, 13, 14, 16, 32, 37, 38, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173
;; rd  gen 	(5)
31, 142, 174, 175, 176
;; rd  kill	(15)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 142, 174, 175, 176
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137 138 139 141 146 148 149 150 160
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137 138 139 141 146 148 149 150 160
;; rd  out 	(42)
3, 6, 8, 10, 11, 13, 14, 16, 31, 37, 38, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d37(bb 0 insn -1) }
;;   reg 26 { d38(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 68
;;      reg 137 { d144(bb 11 insn 58) d143(bb 12 insn 63) }
;;      reg 160 { d174(bb 13 insn 67) }
;;   eq_note reg 137 { }
;;   UD chains for insn luid 3 uid 70
;;      reg 148 { d162(bb 2 insn 4) }
;;      reg 161 { d175(bb 13 insn 68) }
;;      reg 162 { d176(bb 13 insn 69) }
;;   UD chains for insn luid 4 uid 71
;;      reg 136 { d142(bb 13 insn 70) }
;;   UD chains for insn luid 5 uid 72
;;      reg 24 { d31(bb 13 insn 71) }

( 13 )->[14]->( 19 15 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u95(11){ d11(bb 0 insn -1) }u96(13){ d14(bb 0 insn -1) }u97(25){ d37(bb 0 insn -1) }u98(26){ d38(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137 138 139 141 146 148 149 150 160
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 148 160
;; lr  def 	 24 [cc] 134 164 165 166
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137 138 139 141 146 148 149 150 160
;; live  gen 	 24 [cc] 134 164 165 166
;; live  kill	 24 [cc]
;; rd  in  	(42)
3, 6, 8, 10, 11, 13, 14, 16, 31, 37, 38, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176
;; rd  gen 	(5)
30, 141, 177, 178, 179
;; rd  kill	(15)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 141, 177, 178, 179
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 141 146 148 149 150
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 141 146 148 149 150
;; rd  out 	(46)
3, 6, 8, 10, 11, 13, 14, 16, 30, 37, 38, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d37(bb 0 insn -1) }
;;   reg 26 { d38(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 75
;;      reg 137 { d144(bb 11 insn 58) d143(bb 12 insn 63) }
;;   UD chains for insn luid 1 uid 76
;;      reg 160 { d174(bb 13 insn 67) }
;;      reg 164 { d177(bb 14 insn 75) }
;;   eq_note reg 164 { }
;;   UD chains for insn luid 2 uid 77
;;      reg 148 { d162(bb 2 insn 4) }
;;   UD chains for insn luid 3 uid 79
;;      reg 136 { d142(bb 13 insn 70) }
;;      reg 165 { d178(bb 14 insn 76) }
;;      reg 166 { d179(bb 14 insn 77) }
;;   UD chains for insn luid 4 uid 80
;;      reg 134 { d141(bb 14 insn 79) }
;;   UD chains for insn luid 5 uid 81
;;      reg 24 { d30(bb 14 insn 80) }

( 14 )->[15]->( 16 17 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u109(11){ d11(bb 0 insn -1) }u110(13){ d14(bb 0 insn -1) }u111(25){ d37(bb 0 insn -1) }u112(26){ d38(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 141 146 148 149 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 24 [cc] 168
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 141 146 148 149 150
;; live  gen 	 24 [cc] 168
;; live  kill	
;; rd  in  	(46)
3, 6, 8, 10, 11, 13, 14, 16, 30, 37, 38, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179
;; rd  gen 	(2)
29, 180
;; rd  kill	(12)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 180
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 141 146 148 149 150
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 141 146 148 149 150
;; rd  out 	(47)
3, 6, 8, 10, 11, 13, 14, 16, 29, 37, 38, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d37(bb 0 insn -1) }
;;   reg 26 { d38(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 83
;;      reg 138 { d148(bb 2 insn 13) d147(bb 3 insn 20) d146(bb 7 insn 40) d145(bb 8 insn 46) }
;;   UD chains for insn luid 1 uid 84
;;      reg 168 { d180(bb 15 insn 83) }
;;   UD chains for insn luid 2 uid 85
;;      reg 24 { d29(bb 15 insn 84) }

( 15 )->[16]->( 18 )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u116(11){ d11(bb 0 insn -1) }u117(13){ d14(bb 0 insn -1) }u118(25){ d37(bb 0 insn -1) }u119(26){ d38(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 141 146 149 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139
;; lr  def 	 140 169 170
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 141 146 149 150
;; live  gen 	 140 169 170
;; live  kill	
;; rd  in  	(47)
3, 6, 8, 10, 11, 13, 14, 16, 29, 37, 38, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180
;; rd  gen 	(3)
153, 181, 182
;; rd  kill	(5)
152, 153, 154, 181, 182
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 140 141 146 149 150
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 140 141 146 149 150
;; rd  out 	(50)
3, 6, 8, 10, 11, 13, 14, 16, 29, 37, 38, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d37(bb 0 insn -1) }
;;   reg 26 { d38(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 87
;;      reg 139 { d151(bb 6 insn 34) d150(bb 7 insn 41) d149(bb 5 insn 29) }
;;   UD chains for insn luid 1 uid 88
;;      reg 137 { d144(bb 11 insn 58) d143(bb 12 insn 63) }
;;   UD chains for insn luid 2 uid 89
;;      reg 169 { d181(bb 16 insn 87) }
;;      reg 170 { d182(bb 16 insn 88) }

( 15 )->[17]->( 18 )
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u124(11){ d11(bb 0 insn -1) }u125(13){ d14(bb 0 insn -1) }u126(25){ d37(bb 0 insn -1) }u127(26){ d38(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 141 146 148 149 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 148
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 140 171 172 173
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 141 146 148 149 150
;; live  gen 	 0 [r0] 1 [r1] 140 171 172 173
;; live  kill	 14 [lr]
;; rd  in  	(47)
3, 6, 8, 10, 11, 13, 14, 16, 29, 37, 38, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180
;; rd  gen 	(4)
152, 183, 184, 185
;; rd  kill	(8)
15, 16, 152, 153, 154, 183, 184, 185
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 140 141 146 149 150
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 140 141 146 149 150
;; rd  out 	(50)
3, 6, 8, 10, 11, 13, 14, 29, 37, 38, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 183, 184, 185
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d37(bb 0 insn -1) }
;;   reg 26 { d38(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 95
;;      reg 148 { d162(bb 2 insn 4) }
;;   UD chains for insn luid 2 uid 96
;;      reg 171 { d183(bb 17 insn 94) }
;;   UD chains for insn luid 3 uid 97
;;      reg 148 { d162(bb 2 insn 4) }
;;   UD chains for insn luid 4 uid 98
;;      reg 172 { d184(bb 17 insn 95) }
;;   UD chains for insn luid 5 uid 99
;;      reg 13 { d14(bb 0 insn -1) }
;;      reg 0 { d1(bb 17 insn 97) }
;;      reg 1 { d5(bb 17 insn 98) }
;;      reg 173 { d185(bb 17 insn 96) }
;;   UD chains for insn luid 6 uid 100
;;      reg 139 { d151(bb 6 insn 34) d150(bb 7 insn 41) d149(bb 5 insn 29) }
;;      reg 148 { d162(bb 2 insn 4) }

( 17 10 16 )->[18]->( 20 )
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u138(11){ d11(bb 0 insn -1) }u139(13){ d14(bb 0 insn -1) }u140(25){ d37(bb 0 insn -1) }u141(26){ d38(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 140 141 146 149 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 140 141 146 149 150
;; lr  def 	 142
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 140 141 146 149 150
;; live  gen 	 142
;; live  kill	
;; rd  in  	(56)
3, 6, 8, 10, 11, 13, 14, 16, 29, 33, 37, 38, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185
;; rd  gen 	(1)
157
;; rd  kill	(2)
156, 157
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142
;; rd  out 	(57)
3, 6, 8, 10, 11, 13, 14, 16, 29, 33, 37, 38, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d37(bb 0 insn -1) }
;;   reg 26 { d38(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 103
;;      reg 146 { d160(bb 2 insn 2) }
;;      reg 150 { d164(bb 2 insn 6) }
;;   UD chains for insn luid 1 uid 104
;;      reg 146 { d160(bb 2 insn 2) }
;;      reg 149 { d163(bb 2 insn 5) }
;;   UD chains for insn luid 2 uid 105
;;      reg 140 { d154(bb 10 insn 53) d153(bb 16 insn 89) d152(bb 17 insn 100) }
;;      reg 146 { d160(bb 2 insn 2) }
;;   UD chains for insn luid 3 uid 106
;;      reg 141 { d155(bb 2 insn 10) }
;;      reg 146 { d160(bb 2 insn 2) }
;;   UD chains for insn luid 4 uid 107
;;      reg 138 { d148(bb 2 insn 13) d147(bb 3 insn 20) d146(bb 7 insn 40) d145(bb 8 insn 46) }
;;      reg 146 { d160(bb 2 insn 2) }

( 14 13 )->[19]->( 20 )
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u152(11){ d11(bb 0 insn -1) }u153(13){ d14(bb 0 insn -1) }u154(25){ d37(bb 0 insn -1) }u155(26){ d38(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 142
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 142
;; live  kill	
;; rd  in  	(47)
3, 6, 8, 10, 11, 13, 14, 16, 30, 31, 37, 38, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179
;; rd  gen 	(1)
156
;; rd  kill	(2)
156, 157
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142
;; rd  out 	(48)
3, 6, 8, 10, 11, 13, 14, 16, 30, 31, 37, 38, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d37(bb 0 insn -1) }
;;   reg 26 { d38(bb 0 insn -1) }

( 19 18 )->[20]->( 1 )
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u156(11){ d11(bb 0 insn -1) }u157(13){ d14(bb 0 insn -1) }u158(25){ d37(bb 0 insn -1) }u159(26){ d38(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(60)
3, 6, 8, 10, 11, 13, 14, 16, 29, 30, 31, 33, 37, 38, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185
;; rd  gen 	(1)
0
;; rd  kill	(4)
0, 1, 2, 3
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(60)
0, 6, 8, 10, 11, 13, 14, 16, 29, 30, 31, 33, 37, 38, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d37(bb 0 insn -1) }
;;   reg 26 { d38(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 120
;;      reg 142 { d157(bb 18 insn 108) d156(bb 19 insn 113) }
;;   UD chains for insn luid 1 uid 126
;;      reg 0 { d0(bb 20 insn 120) }

( 20 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u162(0){ d0(bb 20 insn 120) }u163(11){ d11(bb 0 insn -1) }u164(13){ d14(bb 0 insn -1) }u165(14){ d16(bb 0 insn -1) }u166(25){ d37(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(60)
0, 6, 8, 10, 11, 13, 14, 16, 29, 30, 31, 33, 37, 38, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(60)
0, 6, 8, 10, 11, 13, 14, 16, 29, 30, 31, 33, 37, 38, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185
;;  UD chains for artificial uses
;;   reg 0 { d0(bb 20 insn 120) }
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 14 { d16(bb 0 insn -1) }
;;   reg 25 { d37(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 17 to worklist
  Adding insn 27 to worklist
  Adding insn 149 to worklist
  Adding insn 36 to worklist
  Adding insn 151 to worklist
  Adding insn 51 to worklist
  Adding insn 153 to worklist
  Adding insn 61 to worklist
  Adding insn 72 to worklist
  Adding insn 70 to worklist
  Adding insn 81 to worklist
  Adding insn 79 to worklist
  Adding insn 85 to worklist
  Adding insn 155 to worklist
  Adding insn 99 to worklist
  Adding insn 157 to worklist
  Adding insn 107 to worklist
  Adding insn 106 to worklist
  Adding insn 105 to worklist
  Adding insn 104 to worklist
  Adding insn 103 to worklist
  Adding insn 126 to worklist
Finished finding needed instructions:
  Adding insn 120 to worklist
Processing use of (reg 142 [ D.24862 ]) in insn 120:
  Adding insn 108 to worklist
  Adding insn 113 to worklist
Processing use of (reg 0 r0) in insn 126:
Processing use of (reg 146 [ regs ]) in insn 103:
  Adding insn 2 to worklist
Processing use of (reg 150 [ usig ]) in insn 103:
  Adding insn 6 to worklist
Processing use of (reg 26 afp) in insn 6:
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 146 [ regs ]) in insn 104:
Processing use of (reg 149 [ frame ]) in insn 104:
  Adding insn 5 to worklist
Processing use of (reg 3 r3) in insn 5:
Processing use of (reg 140 [ retcode ]) in insn 105:
  Adding insn 53 to worklist
  Adding insn 89 to worklist
  Adding insn 100 to worklist
Processing use of (reg 146 [ regs ]) in insn 105:
Processing use of (reg 139 [ thumb ]) in insn 100:
  Adding insn 34 to worklist
  Adding insn 41 to worklist
  Adding insn 29 to worklist
Processing use of (reg 148 [ rc ]) in insn 100:
  Adding insn 4 to worklist
Processing use of (reg 2 r2) in insn 4:
Processing use of (reg 155) in insn 29:
  Adding insn 25 to worklist
Processing use of (reg 156 [ elf_hwcap ]) in insn 25:
  Adding insn 24 to worklist
Processing use of (reg 154) in insn 24:
  Adding insn 23 to worklist
Processing use of (reg 141 [ handler ]) in insn 34:
  Adding insn 10 to worklist
Processing use of (reg 147 [ ka ]) in insn 10:
  Adding insn 3 to worklist
Processing use of (reg 1 r1) in insn 3:
Processing use of (reg 169) in insn 89:
  Adding insn 87 to worklist
Processing use of (reg 170) in insn 89:
  Adding insn 88 to worklist
Processing use of (reg 137 [ idx ]) in insn 88:
  Adding insn 58 to worklist
  Adding insn 63 to worklist
Processing use of (reg 137 [ idx ]) in insn 63:
Processing use of (reg 139 [ thumb ]) in insn 58:
Processing use of (reg 139 [ thumb ]) in insn 87:
Processing use of (reg 147 [ ka ]) in insn 53:
Processing use of (reg 141 [ handler ]) in insn 106:
Processing use of (reg 146 [ regs ]) in insn 106:
Processing use of (reg 138 [ cpsr ]) in insn 107:
  Adding insn 13 to worklist
  Adding insn 20 to worklist
  Adding insn 40 to worklist
  Adding insn 46 to worklist
Processing use of (reg 146 [ regs ]) in insn 107:
Processing use of (reg 138 [ cpsr ]) in insn 46:
Processing use of (reg 157) in insn 40:
  Adding insn 39 to worklist
Processing use of (reg 133 [ cpsr.358 ]) in insn 39:
  Adding insn 38 to worklist
Processing use of (reg 138 [ cpsr ]) in insn 38:
Processing use of (reg 143 [ D.24834 ]) in insn 20:
  Adding insn 19 to worklist
Processing use of (reg 138 [ cpsr ]) in insn 19:
Processing use of (reg 152) in insn 13:
  Adding insn 12 to worklist
Processing use of (reg 151 [ <variable>.uregs+64 ]) in insn 12:
  Adding insn 11 to worklist
Processing use of (reg 146 [ regs ]) in insn 11:
Processing use of (reg 13 sp) in insn 99:
Processing use of (reg 0 r0) in insn 99:
  Adding insn 97 to worklist
Processing use of (reg 1 r1) in insn 99:
  Adding insn 98 to worklist
Processing use of (reg 173 [ cpu_cache.coherent_kern_range ]) in insn 99:
  Adding insn 96 to worklist
Processing use of (reg 171) in insn 96:
  Adding insn 94 to worklist
Processing use of (reg 172) in insn 98:
  Adding insn 95 to worklist
Processing use of (reg 148 [ rc ]) in insn 95:
Processing use of (reg 148 [ rc ]) in insn 97:
Processing use of (reg 24 cc) in insn 85:
  Adding insn 84 to worklist
Processing use of (reg 168) in insn 84:
  Adding insn 83 to worklist
Processing use of (reg 138 [ cpsr ]) in insn 83:
Processing use of (reg 136 [ __pu_err ]) in insn 79:
Processing use of (reg 165) in insn 79:
  Adding insn 76 to worklist
Processing use of (reg 166) in insn 79:
  Adding insn 77 to worklist
Processing use of (reg 148 [ rc ]) in insn 77:
Processing use of (reg 160) in insn 76:
  Adding insn 67 to worklist
Processing use of (reg 164) in insn 76:
  Adding insn 75 to worklist
Processing use of (reg 137 [ idx ]) in insn 75:
Processing use of (reg 24 cc) in insn 81:
  Adding insn 80 to worklist
Processing use of (reg 134 [ __pu_err ]) in insn 80:
Processing use of (reg 148 [ rc ]) in insn 70:
Processing use of (reg 161) in insn 70:
  Adding insn 68 to worklist
Processing use of (reg 162) in insn 70:
  Adding insn 69 to worklist
Processing use of (reg 137 [ idx ]) in insn 68:
Processing use of (reg 160) in insn 68:
Processing use of (reg 24 cc) in insn 72:
  Adding insn 71 to worklist
Processing use of (reg 136 [ __pu_err ]) in insn 71:
Processing use of (reg 24 cc) in insn 61:
  Adding insn 60 to worklist
Processing use of (reg 159) in insn 60:
  Adding insn 59 to worklist
Processing use of (reg 144 [ D.24830 ]) in insn 59:
  Adding insn 14 to worklist
Processing use of (reg 147 [ ka ]) in insn 14:
Processing use of (reg 24 cc) in insn 51:
  Adding insn 50 to worklist
Processing use of (reg 158) in insn 50:
  Adding insn 49 to worklist
Processing use of (reg 144 [ D.24830 ]) in insn 49:
Processing use of (reg 24 cc) in insn 36:
  Adding insn 35 to worklist
Processing use of (reg 139 [ thumb ]) in insn 35:
Processing use of (reg 24 cc) in insn 27:
  Adding insn 26 to worklist
Processing use of (reg 155) in insn 26:
Processing use of (reg 24 cc) in insn 17:
  Adding insn 16 to worklist
Processing use of (reg 153) in insn 16:
  Adding insn 15 to worklist
Processing use of (reg 144 [ D.24830 ]) in insn 15:


setup_return

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={4d,4u} r1={3d,2u} r2={2d,1u} r3={2d,1u} r11={1d,20u} r12={2d} r13={1d,21u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={11d,8u} r25={1d,20u} r26={1d,20u,1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,1u,1d} r134={1d,1u} r136={1d,2u} r137={2d,4u,1d} r138={4d,5u} r139={3d,4u} r140={3d,1u} r141={1d,2u} r142={2d,1u} r143={1d,1u} r144={1d,3u} r146={1d,6u} r147={1d,3u} r148={1d,5u} r149={1d,1u} r150={1d,1u} r151={1d,1u,1d} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,2u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,2u} r161={1d,1u} r162={1d,1u} r164={1d,1u,1d} r165={1d,1u} r166={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r171={1d,1u} r172={1d,1u} r173={1d,1u} 
;;    total ref usage 353{186d,162u,5e} in 77{76 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139
0[0,4] 1[4,3] 2[7,2] 3[9,2] 11[11,1] 12[12,2] 13[14,1] 14[15,2] 15[17,1] 16[18,1] 17[19,1] 18[20,1] 19[21,1] 20[22,1] 21[23,1] 22[24,1] 23[25,1] 24[26,11] 25[37,1] 26[38,1] 27[39,1] 28[40,1] 29[41,1] 30[42,1] 31[43,1] 32[44,1] 33[45,1] 34[46,1] 35[47,1] 36[48,1] 37[49,1] 38[50,1] 39[51,1] 40[52,1] 41[53,1] 42[54,1] 43[55,1] 44[56,1] 45[57,1] 46[58,1] 47[59,1] 48[60,1] 49[61,1] 50[62,1] 51[63,1] 52[64,1] 53[65,1] 54[66,1] 55[67,1] 56[68,1] 57[69,1] 58[70,1] 59[71,1] 60[72,1] 61[73,1] 62[74,1] 63[75,1] 64[76,1] 65[77,1] 66[78,1] 67[79,1] 68[80,1] 69[81,1] 70[82,1] 71[83,1] 72[84,1] 73[85,1] 74[86,1] 75[87,1] 76[88,1] 77[89,1] 78[90,1] 79[91,1] 80[92,1] 81[93,1] 82[94,1] 83[95,1] 84[96,1] 85[97,1] 86[98,1] 87[99,1] 88[100,1] 89[101,1] 90[102,1] 91[103,1] 92[104,1] 93[105,1] 94[106,1] 95[107,1] 96[108,1] 97[109,1] 98[110,1] 99[111,1] 100[112,1] 101[113,1] 102[114,1] 103[115,1] 104[116,1] 105[117,1] 106[118,1] 107[119,1] 108[120,1] 109[121,1] 110[122,1] 111[123,1] 112[124,1] 113[125,1] 114[126,1] 115[127,1] 116[128,1] 117[129,1] 118[130,1] 119[131,1] 120[132,1] 121[133,1] 122[134,1] 123[135,1] 124[136,1] 125[137,1] 126[138,1] 127[139,1] 133[140,1] 134[141,1] 136[142,1] 137[143,2] 138[145,4] 139[149,3] 140[152,3] 141[155,1] 142[156,2] 143[158,1] 144[159,1] 146[160,1] 147[161,1] 148[162,1] 149[163,1] 150[164,1] 151[165,1] 152[166,1] 153[167,1] 154[168,1] 155[169,1] 156[170,1] 157[171,1] 158[172,1] 159[173,1] 160[174,1] 161[175,1] 162[176,1] 164[177,1] 165[178,1] 166[179,1] 168[180,1] 169[181,1] 170[182,1] 171[183,1] 172[184,1] 173[185,1] 
(note 1 0 8 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 138 141 144 146 147 148 149 150 151 152 153
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 138 141 144 146 147 148 149 150 151 152 153
;; live  kill	
;; rd  in  	(10)
3, 6, 8, 10, 11, 13, 14, 16, 37, 38
;; rd  gen 	(12)
36, 148, 155, 159, 160, 161, 162, 163, 164, 165, 166, 167
;; rd  kill	(25)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 145, 146, 147, 148, 155, 159, 160, 161, 162, 163, 164, 165, 166, 167

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 8 3 2 arch/arm/kernel/signal.c:468 (set (reg/v/f:SI 146 [ regs ])
        (reg:SI 0 r0 [ regs ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ regs ])
        (nil)))

(insn 3 2 4 2 arch/arm/kernel/signal.c:468 (set (reg/v/f:SI 147 [ ka ])
        (reg:SI 1 r1 [ ka ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ ka ])
        (nil)))

(insn 4 3 5 2 arch/arm/kernel/signal.c:468 (set (reg/v/f:SI 148 [ rc ])
        (reg:SI 2 r2 [ rc ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ rc ])
        (nil)))

(insn 5 4 6 2 arch/arm/kernel/signal.c:468 (set (reg/v/f:SI 149 [ frame ])
        (reg:SI 3 r3 [ frame ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [ frame ])
        (nil)))

(insn 6 5 7 2 arch/arm/kernel/signal.c:468 (set (reg/v:SI 150 [ usig ])
        (mem/c/i:SI (plus:SI (reg/f:SI 26 afp)
                (const_int 4 [0x4])) [0 usig+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/c/i:SI (plus:SI (reg/f:SI 26 afp)
                (const_int 4 [0x4])) [0 usig+0 S4 A32])
        (nil)))

(note 7 6 10 2 NOTE_INSN_FUNCTION_BEG)

(insn 10 7 11 2 arch/arm/kernel/signal.c:469 (set (reg/v:SI 141 [ handler ])
        (mem/s/f/j:SI (reg/v/f:SI 147 [ ka ]) [0 <variable>.sa.sa_handler+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 11 10 12 2 arch/arm/kernel/signal.c:472 (set (reg:SI 151 [ <variable>.uregs+64 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 146 [ regs ])
                (const_int 64 [0x40])) [0 <variable>.uregs+64 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 12 11 13 2 arch/arm/kernel/signal.c:472 (set (reg:SI 152)
        (and:SI (reg:SI 151 [ <variable>.uregs+64 ])
            (const_int 16777215 [0xffffff]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 151 [ <variable>.uregs+64 ])
        (nil)))

(insn 13 12 14 2 arch/arm/kernel/signal.c:472 (set (reg/v:SI 138 [ cpsr ])
        (and:SI (reg:SI 152)
            (const_int -513 [0xfffffffffffffdff]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 152)
        (expr_list:REG_EQUAL (and:SI (reg:SI 151 [ <variable>.uregs+64 ])
                (const_int 16776703 [0xfffdff]))
            (nil))))

(insn 14 13 15 2 arch/arm/kernel/signal.c:479 (set (reg:SI 144 [ D.24830 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 147 [ ka ])
                (const_int 4 [0x4])) [0 <variable>.sa.sa_flags+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 15 14 16 2 arch/arm/kernel/signal.c:479 (set (reg:SI 153)
        (and:SI (reg:SI 144 [ D.24830 ])
            (const_int 33554432 [0x2000000]))) 67 {*arm_andsi3_insn} (nil))

(insn 16 15 17 2 arch/arm/kernel/signal.c:479 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 153)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 153)
        (nil)))

(jump_insn 17 16 18 2 arch/arm/kernel/signal.c:479 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 21)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 141 144 146 147 148 149 150
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 141 144 146 147 148 149 150
;; rd  out 	(22)
3, 6, 8, 10, 11, 13, 14, 16, 36, 37, 38, 148, 155, 159, 160, 161, 162, 163, 164, 165, 166, 167


;; Succ edge  3 [50.0%]  (fallthru)
;; Succ edge  4 [50.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u19(11){ }u20(13){ }u21(25){ }u22(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 141 144 146 147 148 149 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 138 143
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 141 144 146 147 148 149 150
;; live  gen 	 138 143
;; live  kill	
;; rd  in  	(22)
3, 6, 8, 10, 11, 13, 14, 16, 36, 37, 38, 148, 155, 159, 160, 161, 162, 163, 164, 165, 166, 167
;; rd  gen 	(2)
147, 158
;; rd  kill	(5)
145, 146, 147, 148, 158

;; Pred edge  2 [50.0%]  (fallthru)
(note 18 17 19 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 19 18 20 3 arch/arm/kernel/signal.c:480 (set (reg:SI 143 [ D.24834 ])
        (and:SI (reg/v:SI 138 [ cpsr ])
            (const_int -32 [0xffffffffffffffe0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg/v:SI 138 [ cpsr ])
        (nil)))

(insn 20 19 21 3 arch/arm/kernel/signal.c:480 (set (reg/v:SI 138 [ cpsr ])
        (ior:SI (reg:SI 143 [ D.24834 ])
            (const_int 16 [0x10]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 143 [ D.24834 ])
        (nil)))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 141 144 146 147 148 149 150
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 141 144 146 147 148 149 150
;; rd  out 	(23)
3, 6, 8, 10, 11, 13, 14, 16, 36, 37, 38, 147, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u25(11){ }u26(13){ }u27(25){ }u28(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 141 144 146 147 148 149 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 154 155 156
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 141 144 146 147 148 149 150
;; live  gen 	 24 [cc] 154 155 156
;; live  kill	
;; rd  in  	(24)
3, 6, 8, 10, 11, 13, 14, 16, 36, 37, 38, 147, 148, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167
;; rd  gen 	(4)
35, 168, 169, 170
;; rd  kill	(14)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 168, 169, 170

;; Pred edge  2 [50.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 21 20 22 4 2 "" [1 uses])

(note 22 21 23 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 23 22 24 4 arch/arm/kernel/signal.c:483 (set (reg/f:SI 154)
        (symbol_ref:SI ("elf_hwcap") [flags 0xc0] <var_decl 0x512dc3c0 elf_hwcap>)) 167 {*arm_movsi_insn} (nil))

(insn 24 23 25 4 arch/arm/kernel/signal.c:483 (set (reg:SI 156 [ elf_hwcap ])
        (mem/c/i:SI (reg/f:SI 154) [0 elf_hwcap+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 154)
        (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("elf_hwcap") [flags 0xc0] <var_decl 0x512dc3c0 elf_hwcap>) [0 elf_hwcap+0 S4 A32])
            (nil))))

(insn 25 24 26 4 arch/arm/kernel/signal.c:483 (set (reg:SI 155)
        (and:SI (reg:SI 156 [ elf_hwcap ])
            (const_int 4 [0x4]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 156 [ elf_hwcap ])
        (nil)))

(insn 26 25 27 4 arch/arm/kernel/signal.c:483 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 155)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 27 26 28 4 arch/arm/kernel/signal.c:483 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 32)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 4 -> ( 6 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 141 144 146 147 148 149 150 155
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 141 144 146 147 148 149 150 155
;; rd  out 	(27)
3, 6, 8, 10, 11, 13, 14, 16, 35, 37, 38, 147, 148, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170


;; Succ edge  6 [50.0%] 
;; Succ edge  5 [50.0%]  (fallthru)

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u33(11){ }u34(13){ }u35(25){ }u36(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 141 144 146 147 148 149 150 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 155
;; lr  def 	 139
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 141 144 146 147 148 149 150 155
;; live  gen 	 139
;; live  kill	
;; rd  in  	(27)
3, 6, 8, 10, 11, 13, 14, 16, 35, 37, 38, 147, 148, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170
;; rd  gen 	(1)
149
;; rd  kill	(3)
149, 150, 151

;; Pred edge  4 [50.0%]  (fallthru)
(note 28 27 29 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 29 28 149 5 arch/arm/kernel/signal.c:471 (set (reg/v:SI 139 [ thumb ])
        (reg:SI 155)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 155)
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(jump_insn 149 29 150 5 (set (pc)
        (label_ref 47)) -1 (nil))
;; End of basic block 5 -> ( 9)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 141 144 146 147 148 149 150
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 141 144 146 147 148 149 150
;; rd  out 	(28)
3, 6, 8, 10, 11, 13, 14, 16, 35, 37, 38, 147, 148, 149, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170


;; Succ edge  9 [100.0%] 

(barrier 150 149 32)

;; Start of basic block ( 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u38(11){ }u39(13){ }u40(25){ }u41(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 141 144 146 147 148 149 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 24 [cc] 139
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 141 144 146 147 148 149 150
;; live  gen 	 24 [cc] 139
;; live  kill	
;; rd  in  	(27)
3, 6, 8, 10, 11, 13, 14, 16, 35, 37, 38, 147, 148, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170
;; rd  gen 	(2)
34, 151
;; rd  kill	(14)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 149, 150, 151

;; Pred edge  4 [50.0%] 
(code_label 32 150 33 6 3 "" [1 uses])

(note 33 32 34 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 34 33 35 6 arch/arm/kernel/signal.c:488 (set (reg/v:SI 139 [ thumb ])
        (and:SI (reg/v:SI 141 [ handler ])
            (const_int 1 [0x1]))) 67 {*arm_andsi3_insn} (nil))

(insn 35 34 36 6 arch/arm/kernel/signal.c:490 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 139 [ thumb ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 36 35 37 6 arch/arm/kernel/signal.c:490 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 44)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 6 -> ( 7 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 141 144 146 147 148 149 150
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 141 144 146 147 148 149 150
;; rd  out 	(28)
3, 6, 8, 10, 11, 13, 14, 16, 34, 37, 38, 147, 148, 151, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170


;; Succ edge  7 [50.0%]  (fallthru)
;; Succ edge  8 [50.0%] 

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u45(11){ }u46(13){ }u47(25){ }u48(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 141 144 146 147 148 149 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 133 138 139 157
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 141 144 146 147 148 149 150
;; live  gen 	 133 138 139 157
;; live  kill	
;; rd  in  	(28)
3, 6, 8, 10, 11, 13, 14, 16, 34, 37, 38, 147, 148, 151, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170
;; rd  gen 	(4)
140, 146, 150, 171
;; rd  kill	(9)
140, 145, 146, 147, 148, 149, 150, 151, 171

;; Pred edge  6 [50.0%]  (fallthru)
(note 37 36 38 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 38 37 39 7 arch/arm/kernel/signal.c:491 (set (reg/v:SI 133 [ cpsr.358 ])
        (ior:SI (reg/v:SI 138 [ cpsr ])
            (const_int 32 [0x20]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg/v:SI 138 [ cpsr ])
        (nil)))

(insn 39 38 40 7 arch/arm/kernel/signal.c:494 (set (reg:SI 157)
        (and:SI (reg/v:SI 133 [ cpsr.358 ])
            (const_int -100663297 [0xfffffffff9ffffff]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg/v:SI 133 [ cpsr.358 ])
        (nil)))

(insn 40 39 41 7 arch/arm/kernel/signal.c:494 (set (reg/v:SI 138 [ cpsr ])
        (and:SI (reg:SI 157)
            (const_int -64513 [0xffffffffffff03ff]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 157)
        (expr_list:REG_EQUAL (and:SI (reg/v:SI 133 [ cpsr.358 ])
                (const_int -100727809 [0xfffffffff9ff03ff]))
            (nil))))

(insn 41 40 151 7 arch/arm/kernel/signal.c:494 (set (reg/v:SI 139 [ thumb ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(jump_insn 151 41 152 7 (set (pc)
        (label_ref 47)) -1 (nil))
;; End of basic block 7 -> ( 9)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 141 144 146 147 148 149 150
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 141 144 146 147 148 149 150
;; rd  out 	(29)
3, 6, 8, 10, 11, 13, 14, 16, 34, 37, 38, 140, 146, 150, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171


;; Succ edge  9 [100.0%] 

(barrier 152 151 44)

;; Start of basic block ( 6) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u53(11){ }u54(13){ }u55(25){ }u56(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 141 144 146 147 148 149 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 138
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 141 144 146 147 148 149 150
;; live  gen 	 138
;; live  kill	
;; rd  in  	(28)
3, 6, 8, 10, 11, 13, 14, 16, 34, 37, 38, 147, 148, 151, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170
;; rd  gen 	(1)
145
;; rd  kill	(4)
145, 146, 147, 148

;; Pred edge  6 [50.0%] 
(code_label 44 152 45 8 5 "" [1 uses])

(note 45 44 46 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 46 45 47 8 arch/arm/kernel/signal.c:497 (set (reg/v:SI 138 [ cpsr ])
        (and:SI (reg/v:SI 138 [ cpsr ])
            (const_int -33 [0xffffffffffffffdf]))) 67 {*arm_andsi3_insn} (nil))
;; End of basic block 8 -> ( 9)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 141 144 146 147 148 149 150
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 141 144 146 147 148 149 150
;; rd  out 	(27)
3, 6, 8, 10, 11, 13, 14, 16, 34, 37, 38, 145, 151, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170


;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 8 5 7) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u58(11){ }u59(13){ }u60(25){ }u61(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 141 144 146 147 148 149 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 24 [cc] 158
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 141 144 146 147 148 149 150
;; live  gen 	 24 [cc] 158
;; live  kill	
;; rd  in  	(35)
3, 6, 8, 10, 11, 13, 14, 16, 34, 35, 37, 38, 140, 145, 146, 147, 148, 149, 150, 151, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171
;; rd  gen 	(2)
33, 172
;; rd  kill	(12)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 172

;; Pred edge  8 [100.0%]  (fallthru)
;; Pred edge  5 [100.0%] 
;; Pred edge  7 [100.0%] 
(code_label 47 46 48 9 4 "" [2 uses])

(note 48 47 49 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 49 48 50 9 arch/arm/kernel/signal.c:501 (set (reg:SI 158)
        (and:SI (reg:SI 144 [ D.24830 ])
            (const_int 67108864 [0x4000000]))) 67 {*arm_andsi3_insn} (nil))

(insn 50 49 51 9 arch/arm/kernel/signal.c:501 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 158)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 158)
        (nil)))

(jump_insn 51 50 52 9 arch/arm/kernel/signal.c:501 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 56)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 9 -> ( 10 11)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 141 144 146 147 148 149 150
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 141 144 146 147 148 149 150
;; rd  out 	(35)
3, 6, 8, 10, 11, 13, 14, 16, 33, 37, 38, 140, 145, 146, 147, 148, 149, 150, 151, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172


;; Succ edge  10 [50.0%]  (fallthru)
;; Succ edge  11 [50.0%] 

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u65(11){ }u66(13){ }u67(25){ }u68(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 141 146 147 149 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; lr  def 	 140
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 141 146 147 149 150
;; live  gen 	 140
;; live  kill	
;; rd  in  	(35)
3, 6, 8, 10, 11, 13, 14, 16, 33, 37, 38, 140, 145, 146, 147, 148, 149, 150, 151, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172
;; rd  gen 	(1)
154
;; rd  kill	(3)
152, 153, 154

;; Pred edge  9 [50.0%]  (fallthru)
(note 52 51 53 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 53 52 153 10 arch/arm/kernel/signal.c:502 (set (reg/v:SI 140 [ retcode ])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 147 [ ka ])
                (const_int 8 [0x8])) [0 <variable>.sa.sa_restorer+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 147 [ ka ])
        (nil)))

(jump_insn 153 53 154 10 (set (pc)
        (label_ref 101)) -1 (nil))
;; End of basic block 10 -> ( 18)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 140 141 146 149 150
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 140 141 146 149 150
;; rd  out 	(36)
3, 6, 8, 10, 11, 13, 14, 16, 33, 37, 38, 140, 145, 146, 147, 148, 149, 150, 151, 154, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172


;; Succ edge  18 [100.0%] 

(barrier 154 153 56)

;; Start of basic block ( 9) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u70(11){ }u71(13){ }u72(25){ }u73(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 141 144 146 148 149 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 144
;; lr  def 	 24 [cc] 137 159
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 141 144 146 148 149 150
;; live  gen 	 24 [cc] 137 159
;; live  kill	
;; rd  in  	(35)
3, 6, 8, 10, 11, 13, 14, 16, 33, 37, 38, 140, 145, 146, 147, 148, 149, 150, 151, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172
;; rd  gen 	(3)
32, 144, 173
;; rd  kill	(14)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 143, 144, 173

;; Pred edge  9 [50.0%] 
(code_label 56 154 57 11 6 "" [1 uses])

(note 57 56 58 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 58 57 59 11 arch/arm/kernel/signal.c:504 (set (reg/v:SI 137 [ idx ])
        (ashift:SI (reg/v:SI 139 [ thumb ])
            (const_int 1 [0x1]))) 117 {*arm_shiftsi3} (nil))

(insn 59 58 60 11 arch/arm/kernel/signal.c:506 (set (reg:SI 159)
        (and:SI (reg:SI 144 [ D.24830 ])
            (const_int 4 [0x4]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 144 [ D.24830 ])
        (nil)))

(insn 60 59 61 11 arch/arm/kernel/signal.c:506 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 159)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 159)
        (nil)))

(jump_insn 61 60 62 11 arch/arm/kernel/signal.c:506 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 64)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 11 -> ( 12 13)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 141 146 148 149 150
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 141 146 148 149 150
;; rd  out 	(37)
3, 6, 8, 10, 11, 13, 14, 16, 32, 37, 38, 140, 144, 145, 146, 147, 148, 149, 150, 151, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173


;; Succ edge  12 [50.0%]  (fallthru)
;; Succ edge  13 [50.0%] 

;; Start of basic block ( 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u78(11){ }u79(13){ }u80(25){ }u81(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 141 146 148 149 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 137
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 141 146 148 149 150
;; live  gen 	 137
;; live  kill	
;; rd  in  	(37)
3, 6, 8, 10, 11, 13, 14, 16, 32, 37, 38, 140, 144, 145, 146, 147, 148, 149, 150, 151, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173
;; rd  gen 	(1)
143
;; rd  kill	(2)
143, 144

;; Pred edge  11 [50.0%]  (fallthru)
(note 62 61 63 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 63 62 64 12 arch/arm/kernel/signal.c:507 (set (reg/v:SI 137 [ idx ])
        (plus:SI (reg/v:SI 137 [ idx ])
            (const_int 3 [0x3]))) 4 {*arm_addsi3} (nil))
;; End of basic block 12 -> ( 13)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 141 146 148 149 150
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 141 146 148 149 150
;; rd  out 	(37)
3, 6, 8, 10, 11, 13, 14, 16, 32, 37, 38, 140, 143, 145, 146, 147, 148, 149, 150, 151, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173


;; Succ edge  13 [100.0%]  (fallthru)

;; Start of basic block ( 11 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u83(11){ }u84(13){ }u85(25){ }u86(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 141 146 148 149 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 148
;; lr  def 	 24 [cc] 136 160 161 162
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 141 146 148 149 150
;; live  gen 	 24 [cc] 136 160 161 162
;; live  kill	 24 [cc]
;; rd  in  	(38)
3, 6, 8, 10, 11, 13, 14, 16, 32, 37, 38, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173
;; rd  gen 	(5)
31, 142, 174, 175, 176
;; rd  kill	(15)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 142, 174, 175, 176

;; Pred edge  11 [50.0%] 
;; Pred edge  12 [100.0%]  (fallthru)
(code_label 64 63 65 13 8 "" [1 uses])

(note 65 64 67 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 67 65 68 13 arch/arm/kernel/signal.c:509 discrim 4 (set (reg/f:SI 160)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 68 67 69 13 arch/arm/kernel/signal.c:509 discrim 4 (set (reg:SI 161)
        (mem/s/u/j:SI (plus:SI (mult:SI (reg/v:SI 137 [ idx ])
                    (const_int 4 [0x4]))
                (reg/f:SI 160)) [0 sigreturn_codes S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/u/j:SI (plus:SI (mult:SI (reg/v:SI 137 [ idx ])
                    (const_int 4 [0x4]))
                (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) [0 sigreturn_codes S4 A32])
        (nil)))

(insn 69 68 70 13 arch/arm/kernel/signal.c:509 discrim 4 (set (reg:SI 162)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 70 69 71 13 arch/arm/kernel/signal.c:509 discrim 4 (parallel [
            (set (reg/v:SI 136 [ __pu_err ])
                (asm_operands/v:SI ("1:	str	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg:SI 161)
                        (reg/v/f:SI 148 [ rc ])
                        (const_int -14 [0xfffffffffffffff2])
                        (reg:SI 162)
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691006))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg:SI 162)
        (expr_list:REG_DEAD (reg:SI 161)
            (expr_list:REG_UNUSED (reg:QI 24 cc)
                (nil)))))

(insn 71 70 72 13 arch/arm/kernel/signal.c:509 discrim 6 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 136 [ __pu_err ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 72 71 73 13 arch/arm/kernel/signal.c:509 discrim 6 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 111)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 13 -> ( 19 14)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137 138 139 141 146 148 149 150 160
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137 138 139 141 146 148 149 150 160
;; rd  out 	(42)
3, 6, 8, 10, 11, 13, 14, 16, 31, 37, 38, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176


;; Succ edge  19 [39.0%] 
;; Succ edge  14 [61.0%]  (fallthru)

;; Start of basic block ( 13) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u95(11){ }u96(13){ }u97(25){ }u98(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137 138 139 141 146 148 149 150 160
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 148 160
;; lr  def 	 24 [cc] 134 164 165 166
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137 138 139 141 146 148 149 150 160
;; live  gen 	 24 [cc] 134 164 165 166
;; live  kill	 24 [cc]
;; rd  in  	(42)
3, 6, 8, 10, 11, 13, 14, 16, 31, 37, 38, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176
;; rd  gen 	(5)
30, 141, 177, 178, 179
;; rd  kill	(15)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 141, 177, 178, 179

;; Pred edge  13 [61.0%]  (fallthru)
(note 73 72 75 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 75 73 76 14 arch/arm/kernel/signal.c:510 discrim 4 (set (reg:SI 164)
        (plus:SI (reg/v:SI 137 [ idx ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 76 75 77 14 arch/arm/kernel/signal.c:510 discrim 4 (set (reg:SI 165)
        (mem/s/u/j:SI (plus:SI (mult:SI (reg:SI 164)
                    (const_int 4 [0x4]))
                (reg/f:SI 160)) [0 sigreturn_codes S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 164)
        (expr_list:REG_DEAD (reg/f:SI 160)
            (expr_list:REG_EQUAL (mem/s/u/j:SI (plus:SI (mult:SI (reg:SI 164)
                            (const_int 4 [0x4]))
                        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) [0 sigreturn_codes S4 A32])
                (nil)))))

(insn 77 76 79 14 arch/arm/kernel/signal.c:510 discrim 4 (set (reg/f:SI 166)
        (plus:SI (reg/v/f:SI 148 [ rc ])
            (const_int 4 [0x4]))) 4 {*arm_addsi3} (nil))

(insn 79 77 80 14 arch/arm/kernel/signal.c:510 discrim 4 (parallel [
            (set (reg/v:SI 134 [ __pu_err ])
                (asm_operands/v:SI ("1:	str	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg:SI 165)
                        (reg/f:SI 166)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 136 [ __pu_err ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691012))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/f:SI 166)
        (expr_list:REG_DEAD (reg:SI 165)
            (expr_list:REG_DEAD (reg/v:SI 136 [ __pu_err ])
                (expr_list:REG_UNUSED (reg:QI 24 cc)
                    (nil))))))

(insn 80 79 81 14 arch/arm/kernel/signal.c:509 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 134 [ __pu_err ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 134 [ __pu_err ])
        (nil)))

(jump_insn 81 80 82 14 arch/arm/kernel/signal.c:509 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 111)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 14 -> ( 19 15)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 141 146 148 149 150
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 141 146 148 149 150
;; rd  out 	(46)
3, 6, 8, 10, 11, 13, 14, 16, 30, 37, 38, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179


;; Succ edge  19 [39.0%] 
;; Succ edge  15 [61.0%]  (fallthru)

;; Start of basic block ( 14) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u109(11){ }u110(13){ }u111(25){ }u112(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 141 146 148 149 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 24 [cc] 168
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 141 146 148 149 150
;; live  gen 	 24 [cc] 168
;; live  kill	
;; rd  in  	(46)
3, 6, 8, 10, 11, 13, 14, 16, 30, 37, 38, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179
;; rd  gen 	(2)
29, 180
;; rd  kill	(12)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 180

;; Pred edge  14 [61.0%]  (fallthru)
(note 82 81 83 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 83 82 84 15 arch/arm/kernel/signal.c:513 (set (reg:SI 168)
        (and:SI (reg/v:SI 138 [ cpsr ])
            (const_int 16 [0x10]))) 67 {*arm_andsi3_insn} (nil))

(insn 84 83 85 15 arch/arm/kernel/signal.c:513 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 168)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 168)
        (nil)))

(jump_insn 85 84 86 15 arch/arm/kernel/signal.c:513 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 92)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
            (nil))))
;; End of basic block 15 -> ( 16 17)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 141 146 148 149 150
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 141 146 148 149 150
;; rd  out 	(47)
3, 6, 8, 10, 11, 13, 14, 16, 29, 37, 38, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180


;; Succ edge  16 [71.0%]  (fallthru)
;; Succ edge  17 [29.0%] 

;; Start of basic block ( 15) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u116(11){ }u117(13){ }u118(25){ }u119(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 141 146 149 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139
;; lr  def 	 140 169 170
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 141 146 149 150
;; live  gen 	 140 169 170
;; live  kill	
;; rd  in  	(47)
3, 6, 8, 10, 11, 13, 14, 16, 29, 37, 38, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180
;; rd  gen 	(3)
153, 181, 182
;; rd  kill	(5)
152, 153, 154, 181, 182

;; Pred edge  15 [71.0%]  (fallthru)
(note 86 85 87 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 87 86 88 16 arch/arm/kernel/signal.c:518 (set (reg:SI 169)
        (plus:SI (reg/v:SI 139 [ thumb ])
            (const_int -64256 [0xffffffffffff0500]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/v:SI 139 [ thumb ])
        (nil)))

(insn 88 87 89 16 arch/arm/kernel/signal.c:518 (set (reg:SI 170)
        (ashift:SI (reg/v:SI 137 [ idx ])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg/v:SI 137 [ idx ])
        (nil)))

(insn 89 88 155 16 arch/arm/kernel/signal.c:518 (set (reg/v:SI 140 [ retcode ])
        (plus:SI (reg:SI 169)
            (reg:SI 170))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 170)
        (expr_list:REG_DEAD (reg:SI 169)
            (nil))))

(jump_insn 155 89 156 16 (set (pc)
        (label_ref 101)) -1 (nil))
;; End of basic block 16 -> ( 18)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 140 141 146 149 150
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 140 141 146 149 150
;; rd  out 	(50)
3, 6, 8, 10, 11, 13, 14, 16, 29, 37, 38, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182


;; Succ edge  18 [100.0%] 

(barrier 156 155 92)

;; Start of basic block ( 15) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u124(11){ }u125(13){ }u126(25){ }u127(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 141 146 148 149 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 148
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 140 171 172 173
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 141 146 148 149 150
;; live  gen 	 0 [r0] 1 [r1] 140 171 172 173
;; live  kill	 14 [lr]
;; rd  in  	(47)
3, 6, 8, 10, 11, 13, 14, 16, 29, 37, 38, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180
;; rd  gen 	(4)
152, 183, 184, 185
;; rd  kill	(8)
15, 16, 152, 153, 154, 183, 184, 185

;; Pred edge  15 [29.0%] 
(code_label 92 156 93 17 10 "" [1 uses])

(note 93 92 94 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 94 93 95 17 arch/arm/kernel/signal.c:524 (set (reg/f:SI 171)
        (symbol_ref:SI ("cpu_cache") [flags 0xc0] <var_decl 0x113df900 cpu_cache>)) 167 {*arm_movsi_insn} (nil))

(insn 95 94 96 17 arch/arm/kernel/signal.c:524 (set (reg/f:SI 172)
        (plus:SI (reg/v/f:SI 148 [ rc ])
            (const_int 8 [0x8]))) 4 {*arm_addsi3} (nil))

(insn 96 95 97 17 arch/arm/kernel/signal.c:524 (set (reg/f:SI 173 [ cpu_cache.coherent_kern_range ])
        (mem/s/f/j/c:SI (plus:SI (reg/f:SI 171)
                (const_int 16 [0x10])) [0 cpu_cache.coherent_kern_range+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 171)
        (expr_list:REG_EQUAL (mem/s/f/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("cpu_cache") [flags 0xc0] <var_decl 0x113df900 cpu_cache>)
                        (const_int 16 [0x10]))) [0 cpu_cache.coherent_kern_range+0 S4 A32])
            (nil))))

(insn 97 96 98 17 arch/arm/kernel/signal.c:524 (set (reg:SI 0 r0)
        (reg/v/f:SI 148 [ rc ])) 167 {*arm_movsi_insn} (nil))

(insn 98 97 99 17 arch/arm/kernel/signal.c:524 (set (reg:SI 1 r1)
        (reg/f:SI 172)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 172)
        (nil)))

(call_insn 99 98 100 17 arch/arm/kernel/signal.c:524 (parallel [
            (call (mem:SI (reg/f:SI 173 [ cpu_cache.coherent_kern_range ]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 244 {*call_reg_armv5} (expr_list:REG_DEAD (reg/f:SI 173 [ cpu_cache.coherent_kern_range ])
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_DEAD (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 100 99 101 17 arch/arm/kernel/signal.c:527 (set (reg/v:SI 140 [ retcode ])
        (plus:SI (reg/v:SI 139 [ thumb ])
            (reg/v/f:SI 148 [ rc ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/v/f:SI 148 [ rc ])
        (expr_list:REG_DEAD (reg/v:SI 139 [ thumb ])
            (nil))))
;; End of basic block 17 -> ( 18)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 140 141 146 149 150
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 140 141 146 149 150
;; rd  out 	(50)
3, 6, 8, 10, 11, 13, 14, 29, 37, 38, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 183, 184, 185


;; Succ edge  18 [100.0%]  (fallthru)

;; Start of basic block ( 17 10 16) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u138(11){ }u139(13){ }u140(25){ }u141(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 140 141 146 149 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 140 141 146 149 150
;; lr  def 	 142
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 140 141 146 149 150
;; live  gen 	 142
;; live  kill	
;; rd  in  	(56)
3, 6, 8, 10, 11, 13, 14, 16, 29, 33, 37, 38, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185
;; rd  gen 	(1)
157
;; rd  kill	(2)
156, 157

;; Pred edge  17 [100.0%]  (fallthru)
;; Pred edge  10 [100.0%] 
;; Pred edge  16 [100.0%] 
(code_label 101 100 102 18 7 "" [2 uses])

(note 102 101 103 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 103 102 104 18 arch/arm/kernel/signal.c:531 (set (mem/s/j:SI (reg/v/f:SI 146 [ regs ]) [0 <variable>.uregs+0 S4 A32])
        (reg/v:SI 150 [ usig ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 150 [ usig ])
        (nil)))

(insn 104 103 105 18 arch/arm/kernel/signal.c:532 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 146 [ regs ])
                (const_int 52 [0x34])) [0 <variable>.uregs+52 S4 A32])
        (reg/v/f:SI 149 [ frame ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 149 [ frame ])
        (nil)))

(insn 105 104 106 18 arch/arm/kernel/signal.c:533 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 146 [ regs ])
                (const_int 56 [0x38])) [0 <variable>.uregs+56 S4 A32])
        (reg/v:SI 140 [ retcode ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 140 [ retcode ])
        (nil)))

(insn 106 105 107 18 arch/arm/kernel/signal.c:534 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 146 [ regs ])
                (const_int 60 [0x3c])) [0 <variable>.uregs+60 S4 A32])
        (reg/v:SI 141 [ handler ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 141 [ handler ])
        (nil)))

(insn 107 106 108 18 arch/arm/kernel/signal.c:535 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 146 [ regs ])
                (const_int 64 [0x40])) [0 <variable>.uregs+64 S4 A32])
        (reg/v:SI 138 [ cpsr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 146 [ regs ])
        (expr_list:REG_DEAD (reg/v:SI 138 [ cpsr ])
            (nil))))

(insn 108 107 157 18 arch/arm/kernel/signal.c:537 (set (reg:SI 142 [ D.24862 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(jump_insn 157 108 158 18 arch/arm/kernel/signal.c:537 (set (pc)
        (label_ref 114)) -1 (nil))
;; End of basic block 18 -> ( 20)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142
;; rd  out 	(57)
3, 6, 8, 10, 11, 13, 14, 16, 29, 33, 37, 38, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185


;; Succ edge  20 [100.0%] 

(barrier 158 157 111)

;; Start of basic block ( 14 13) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u152(11){ }u153(13){ }u154(25){ }u155(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 142
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 142
;; live  kill	
;; rd  in  	(47)
3, 6, 8, 10, 11, 13, 14, 16, 30, 31, 37, 38, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179
;; rd  gen 	(1)
156
;; rd  kill	(2)
156, 157

;; Pred edge  14 [39.0%] 
;; Pred edge  13 [39.0%] 
(code_label 111 158 112 19 9 "" [2 uses])

(note 112 111 113 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 113 112 114 19 arch/arm/kernel/signal.c:511 (set (reg:SI 142 [ D.24862 ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 19 -> ( 20)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142
;; rd  out 	(48)
3, 6, 8, 10, 11, 13, 14, 16, 30, 31, 37, 38, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179


;; Succ edge  20 [100.0%]  (fallthru)

;; Start of basic block ( 19 18) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u156(11){ }u157(13){ }u158(25){ }u159(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(60)
3, 6, 8, 10, 11, 13, 14, 16, 29, 30, 31, 33, 37, 38, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185
;; rd  gen 	(1)
0
;; rd  kill	(4)
0, 1, 2, 3

;; Pred edge  19 [100.0%]  (fallthru)
;; Pred edge  18 [100.0%] 
(code_label 114 113 115 20 11 "" [1 uses])

(note 115 114 120 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn 120 115 126 20 arch/arm/kernel/signal.c:538 (set (reg/i:SI 0 r0)
        (reg:SI 142 [ D.24862 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 142 [ D.24862 ])
        (nil)))

(insn 126 120 0 20 arch/arm/kernel/signal.c:538 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 20 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(60)
0, 6, 8, 10, 11, 13, 14, 16, 29, 30, 31, 33, 37, 38, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function setup_sigframe (setup_sigframe)[0:1446]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 8 (  1.6)


setup_sigframe

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={8d,8u} r1={6d,3u} r2={6d,3u} r3={4d} r11={1d,4u} r12={4d} r13={1d,8u,1d} r14={4d,1u} r15={3d} r16={3d} r17={3d} r18={3d} r19={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={33d,2u} r25={1d,4u} r26={1d,3u} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r81={3d} r82={3d} r83={3d} r84={3d} r85={3d} r86={3d} r87={3d} r88={3d} r89={3d} r90={3d} r91={3d} r92={3d} r93={3d} r94={3d} r95={3d} r96={3d} r97={3d} r98={3d} r99={3d} r100={3d} r101={3d} r102={3d} r103={3d} r104={3d} r105={3d} r106={3d} r107={3d} r108={3d} r109={3d} r110={3d} r111={3d} r112={3d} r113={3d} r114={3d} r115={3d} r116={3d} r117={3d} r118={3d} r119={3d} r120={3d} r121={3d} r122={3d} r123={3d} r124={3d} r125={3d} r126={3d} r127={3d} r133={5d,4u} r134={21d,21u} r135={1d,1u} r136={1d,2u} r138={2d,2u} r143={3d,4u} r144={1d,2u} r146={1d,1u} r148={1d,29u} r149={1d,17u} r150={1d,2u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r171={1d,1u} r172={1d,1u} r173={1d,1u} r174={1d,1u} r175={1d,1u} r176={1d,1u} r177={1d,1u} r178={1d,1u} r179={1d,1u} r180={1d,1u} r181={1d,1u} r182={1d,1u} r183={1d,1u} r184={1d,1u} r185={1d,1u} r186={1d,7u} r187={1d,1u} r188={1d,3u} r189={1d,1u} r190={1d,1u} r194={1d,1u} r195={1d,1u} r199={1d,1u} r200={1d,1u} r201={1d,1u} r202={1d,1u} r203={1d,1u} r205={1d,1u} r207={1d,1u} r208={1d,1u} r209={1d,1u} r210={1d,1u} r211={1d,1u} r212={1d,1u} r213={1d,1u} r214={1d,1u} r215={1d,1u} r216={1d,1u} r217={1d,1u} r218={1d,1u} r219={1d,1u} r220={1d,1u} 
;;    total ref usage 691{499d,191u,1e} in 115{112 regular + 3 call} insns.
;; Reaching defs:

  sparse invalidated 	24
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398
0[0,8] 1[8,6] 2[14,6] 3[20,4] 11[24,1] 12[25,4] 13[29,1] 14[30,4] 15[34,3] 16[37,3] 17[40,3] 18[43,3] 19[46,3] 20[49,3] 21[52,3] 22[55,3] 23[58,3] 24[61,33] 25[94,1] 26[95,1] 27[96,3] 28[99,3] 29[102,3] 30[105,3] 31[108,3] 32[111,3] 33[114,3] 34[117,3] 35[120,3] 36[123,3] 37[126,3] 38[129,3] 39[132,3] 40[135,3] 41[138,3] 42[141,3] 43[144,3] 44[147,3] 45[150,3] 46[153,3] 47[156,3] 48[159,3] 49[162,3] 50[165,3] 51[168,3] 52[171,3] 53[174,3] 54[177,3] 55[180,3] 56[183,3] 57[186,3] 58[189,3] 59[192,3] 60[195,3] 61[198,3] 62[201,3] 63[204,3] 64[207,3] 65[210,3] 66[213,3] 67[216,3] 68[219,3] 69[222,3] 70[225,3] 71[228,3] 72[231,3] 73[234,3] 74[237,3] 75[240,3] 76[243,3] 77[246,3] 78[249,3] 79[252,3] 80[255,3] 81[258,3] 82[261,3] 83[264,3] 84[267,3] 85[270,3] 86[273,3] 87[276,3] 88[279,3] 89[282,3] 90[285,3] 91[288,3] 92[291,3] 93[294,3] 94[297,3] 95[300,3] 96[303,3] 97[306,3] 98[309,3] 99[312,3] 100[315,3] 101[318,3] 102[321,3] 103[324,3] 104[327,3] 105[330,3] 106[333,3] 107[336,3] 108[339,3] 109[342,3] 110[345,3] 111[348,3] 112[351,3] 113[354,3] 114[357,3] 115[360,3] 116[363,3] 117[366,3] 118[369,3] 119[372,3] 120[375,3] 121[378,3] 122[381,3] 123[384,3] 124[387,3] 125[390,3] 126[393,3] 127[396,3] 133[399,5] 134[404,21] 135[425,1] 136[426,1] 138[427,2] 143[429,3] 144[432,1] 146[433,1] 148[434,1] 149[435,1] 150[436,1] 151[437,1] 152[438,1] 153[439,1] 154[440,1] 155[441,1] 156[442,1] 157[443,1] 158[444,1] 159[445,1] 160[446,1] 161[447,1] 162[448,1] 163[449,1] 164[450,1] 165[451,1] 166[452,1] 167[453,1] 168[454,1] 169[455,1] 170[456,1] 171[457,1] 172[458,1] 173[459,1] 174[460,1] 175[461,1] 176[462,1] 177[463,1] 178[464,1] 179[465,1] 180[466,1] 181[467,1] 182[468,1] 183[469,1] 184[470,1] 185[471,1] 186[472,1] 187[473,1] 188[474,1] 189[475,1] 190[476,1] 194[477,1] 195[478,1] 199[479,1] 200[480,1] 201[481,1] 202[482,1] 203[483,1] 205[484,1] 207[485,1] 208[486,1] 209[487,1] 210[488,1] 211[489,1] 212[490,1] 213[491,1] 214[492,1] 215[493,1] 216[494,1] 217[495,1] 218[496,1] 219[497,1] 220[498,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d7(0){ }d13(1){ }d19(2){ }d23(3){ }d24(11){ }d28(12){ }d29(13){ }d33(14){ }d94(25){ }d95(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
7, 13, 19, 23, 24, 28, 29, 33, 94, 95
;; rd  kill	(36)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 94, 95
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(10)
7, 13, 19, 23, 24, 28, 29, 33, 94, 95

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d24(bb 0 insn -1) }u1(13){ d29(bb 0 insn -1) }u2(25){ d94(bb 0 insn -1) }u3(26){ d95(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 143 144 146 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 194 195 199 200 201 202 203
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 134 143 144 146 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 194 195 199 200 201 202 203
;; live  kill	 14 [lr] 24 [cc]
;; rd  in  	(10)
7, 13, 19, 23, 24, 28, 29, 33, 94, 95
;; rd  gen 	(56)
5, 71, 404, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483
;; rd  kill	(88)
0, 1, 2, 3, 4, 5, 6, 7, 30, 31, 32, 33, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 144 148 186
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 148 186
;; rd  out 	(64)
5, 13, 19, 23, 24, 28, 29, 71, 94, 95, 404, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483
;;  UD chains for artificial uses
;;   reg 11 { d24(bb 0 insn -1) }
;;   reg 13 { d29(bb 0 insn -1) }
;;   reg 25 { d94(bb 0 insn -1) }
;;   reg 26 { d95(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d7(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 3
;;      reg 1 { d13(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 4
;;      reg 2 { d19(bb 0 insn -1) }
;;   UD chains for insn luid 3 uid 8
;;      reg 149 { d435(bb 2 insn 3) }
;;   UD chains for insn luid 4 uid 9
;;      reg 148 { d434(bb 2 insn 2) }
;;   UD chains for insn luid 6 uid 11
;;      reg 151 { d437(bb 2 insn 8) }
;;      reg 152 { d438(bb 2 insn 9) }
;;      reg 153 { d439(bb 2 insn 10) }
;;   UD chains for insn luid 7 uid 12
;;      reg 149 { d435(bb 2 insn 3) }
;;   UD chains for insn luid 8 uid 13
;;      reg 148 { d434(bb 2 insn 2) }
;;   UD chains for insn luid 9 uid 14
;;      reg 134 { d424(bb 2 insn 11) }
;;      reg 154 { d440(bb 2 insn 12) }
;;      reg 155 { d441(bb 2 insn 13) }
;;   UD chains for insn luid 10 uid 15
;;      reg 149 { d435(bb 2 insn 3) }
;;   UD chains for insn luid 11 uid 16
;;      reg 148 { d434(bb 2 insn 2) }
;;   UD chains for insn luid 12 uid 17
;;      reg 134 { d423(bb 2 insn 14) }
;;      reg 156 { d442(bb 2 insn 15) }
;;      reg 157 { d443(bb 2 insn 16) }
;;   UD chains for insn luid 13 uid 18
;;      reg 149 { d435(bb 2 insn 3) }
;;   UD chains for insn luid 14 uid 19
;;      reg 148 { d434(bb 2 insn 2) }
;;   UD chains for insn luid 15 uid 20
;;      reg 134 { d422(bb 2 insn 17) }
;;      reg 158 { d444(bb 2 insn 18) }
;;      reg 159 { d445(bb 2 insn 19) }
;;   UD chains for insn luid 16 uid 21
;;      reg 149 { d435(bb 2 insn 3) }
;;   UD chains for insn luid 17 uid 22
;;      reg 148 { d434(bb 2 insn 2) }
;;   UD chains for insn luid 18 uid 23
;;      reg 134 { d421(bb 2 insn 20) }
;;      reg 160 { d446(bb 2 insn 21) }
;;      reg 161 { d447(bb 2 insn 22) }
;;   UD chains for insn luid 19 uid 24
;;      reg 149 { d435(bb 2 insn 3) }
;;   UD chains for insn luid 20 uid 25
;;      reg 148 { d434(bb 2 insn 2) }
;;   UD chains for insn luid 21 uid 26
;;      reg 134 { d420(bb 2 insn 23) }
;;      reg 162 { d448(bb 2 insn 24) }
;;      reg 163 { d449(bb 2 insn 25) }
;;   UD chains for insn luid 22 uid 27
;;      reg 149 { d435(bb 2 insn 3) }
;;   UD chains for insn luid 23 uid 28
;;      reg 148 { d434(bb 2 insn 2) }
;;   UD chains for insn luid 24 uid 29
;;      reg 134 { d419(bb 2 insn 26) }
;;      reg 164 { d450(bb 2 insn 27) }
;;      reg 165 { d451(bb 2 insn 28) }
;;   UD chains for insn luid 25 uid 30
;;      reg 149 { d435(bb 2 insn 3) }
;;   UD chains for insn luid 26 uid 31
;;      reg 148 { d434(bb 2 insn 2) }
;;   UD chains for insn luid 27 uid 32
;;      reg 134 { d418(bb 2 insn 29) }
;;      reg 166 { d452(bb 2 insn 30) }
;;      reg 167 { d453(bb 2 insn 31) }
;;   UD chains for insn luid 28 uid 33
;;      reg 149 { d435(bb 2 insn 3) }
;;   UD chains for insn luid 29 uid 34
;;      reg 148 { d434(bb 2 insn 2) }
;;   UD chains for insn luid 30 uid 35
;;      reg 134 { d417(bb 2 insn 32) }
;;      reg 168 { d454(bb 2 insn 33) }
;;      reg 169 { d455(bb 2 insn 34) }
;;   UD chains for insn luid 31 uid 36
;;      reg 149 { d435(bb 2 insn 3) }
;;   UD chains for insn luid 32 uid 37
;;      reg 148 { d434(bb 2 insn 2) }
;;   UD chains for insn luid 33 uid 38
;;      reg 134 { d416(bb 2 insn 35) }
;;      reg 170 { d456(bb 2 insn 36) }
;;      reg 171 { d457(bb 2 insn 37) }
;;   UD chains for insn luid 34 uid 39
;;      reg 149 { d435(bb 2 insn 3) }
;;   UD chains for insn luid 35 uid 40
;;      reg 148 { d434(bb 2 insn 2) }
;;   UD chains for insn luid 36 uid 41
;;      reg 134 { d415(bb 2 insn 38) }
;;      reg 172 { d458(bb 2 insn 39) }
;;      reg 173 { d459(bb 2 insn 40) }
;;   UD chains for insn luid 37 uid 42
;;      reg 149 { d435(bb 2 insn 3) }
;;   UD chains for insn luid 38 uid 43
;;      reg 148 { d434(bb 2 insn 2) }
;;   UD chains for insn luid 39 uid 44
;;      reg 134 { d414(bb 2 insn 41) }
;;      reg 174 { d460(bb 2 insn 42) }
;;      reg 175 { d461(bb 2 insn 43) }
;;   UD chains for insn luid 40 uid 45
;;      reg 149 { d435(bb 2 insn 3) }
;;   UD chains for insn luid 41 uid 46
;;      reg 148 { d434(bb 2 insn 2) }
;;   UD chains for insn luid 42 uid 47
;;      reg 134 { d413(bb 2 insn 44) }
;;      reg 176 { d462(bb 2 insn 45) }
;;      reg 177 { d463(bb 2 insn 46) }
;;   UD chains for insn luid 43 uid 48
;;      reg 149 { d435(bb 2 insn 3) }
;;   UD chains for insn luid 44 uid 49
;;      reg 148 { d434(bb 2 insn 2) }
;;   UD chains for insn luid 45 uid 50
;;      reg 134 { d412(bb 2 insn 47) }
;;      reg 178 { d464(bb 2 insn 48) }
;;      reg 179 { d465(bb 2 insn 49) }
;;   UD chains for insn luid 46 uid 51
;;      reg 149 { d435(bb 2 insn 3) }
;;   UD chains for insn luid 47 uid 52
;;      reg 148 { d434(bb 2 insn 2) }
;;   UD chains for insn luid 48 uid 53
;;      reg 134 { d411(bb 2 insn 50) }
;;      reg 180 { d466(bb 2 insn 51) }
;;      reg 181 { d467(bb 2 insn 52) }
;;   UD chains for insn luid 49 uid 54
;;      reg 149 { d435(bb 2 insn 3) }
;;   UD chains for insn luid 50 uid 55
;;      reg 148 { d434(bb 2 insn 2) }
;;   UD chains for insn luid 51 uid 56
;;      reg 134 { d410(bb 2 insn 53) }
;;      reg 182 { d468(bb 2 insn 54) }
;;      reg 183 { d469(bb 2 insn 55) }
;;   UD chains for insn luid 52 uid 57
;;      reg 149 { d435(bb 2 insn 3) }
;;   UD chains for insn luid 53 uid 58
;;      reg 148 { d434(bb 2 insn 2) }
;;   UD chains for insn luid 54 uid 59
;;      reg 134 { d409(bb 2 insn 56) }
;;      reg 184 { d470(bb 2 insn 57) }
;;      reg 185 { d471(bb 2 insn 58) }
;;   UD chains for insn luid 55 uid 61
;;      reg 13 { d29(bb 0 insn -1) }
;;   UD chains for insn luid 56 uid 62
;;      reg 187 { d473(bb 2 insn 61) }
;;   eq_note reg 13 { }
;;   UD chains for insn luid 57 uid 63
;;      reg 186 { d472(bb 2 insn 62) }
;;   UD chains for insn luid 58 uid 64
;;      reg 188 { d474(bb 2 insn 63) }
;;   UD chains for insn luid 59 uid 65
;;      reg 148 { d434(bb 2 insn 2) }
;;   UD chains for insn luid 60 uid 66
;;      reg 134 { d408(bb 2 insn 59) }
;;      reg 189 { d475(bb 2 insn 64) }
;;      reg 190 { d476(bb 2 insn 65) }
;;   UD chains for insn luid 61 uid 71
;;      reg 188 { d474(bb 2 insn 63) }
;;   UD chains for insn luid 62 uid 72
;;      reg 148 { d434(bb 2 insn 2) }
;;   UD chains for insn luid 63 uid 73
;;      reg 134 { d407(bb 2 insn 66) }
;;      reg 194 { d477(bb 2 insn 71) }
;;      reg 195 { d478(bb 2 insn 72) }
;;   UD chains for insn luid 64 uid 78
;;      reg 188 { d474(bb 2 insn 63) }
;;   UD chains for insn luid 65 uid 79
;;      reg 148 { d434(bb 2 insn 2) }
;;   UD chains for insn luid 66 uid 80
;;      reg 134 { d406(bb 2 insn 73) }
;;      reg 199 { d479(bb 2 insn 78) }
;;      reg 200 { d480(bb 2 insn 79) }
;;   UD chains for insn luid 67 uid 81
;;      reg 150 { d436(bb 2 insn 4) }
;;   UD chains for insn luid 68 uid 82
;;      reg 148 { d434(bb 2 insn 2) }
;;   UD chains for insn luid 69 uid 83
;;      reg 134 { d405(bb 2 insn 80) }
;;      reg 201 { d481(bb 2 insn 81) }
;;      reg 202 { d482(bb 2 insn 82) }
;;   UD chains for insn luid 70 uid 84
;;      reg 148 { d434(bb 2 insn 2) }
;;   UD chains for insn luid 71 uid 85
;;      reg 203 { d483(bb 2 insn 84) }
;;   UD chains for insn luid 72 uid 86
;;      reg 150 { d436(bb 2 insn 4) }
;;   UD chains for insn luid 74 uid 88
;;      reg 13 { d29(bb 0 insn -1) }
;;      reg 0 { d6(bb 2 insn 85) }
;;      reg 1 { d12(bb 2 insn 86) }
;;      reg 2 { d18(bb 2 insn 87) }
;;   UD chains for insn luid 75 uid 89
;;      reg 0 { d5(bb 2 insn 88) }
;;   UD chains for insn luid 76 uid 90
;;      reg 134 { d404(bb 2 insn 83) }
;;      reg 146 { d433(bb 2 insn 89) }
;;   UD chains for insn luid 77 uid 92
;;      reg 148 { d434(bb 2 insn 2) }
;;   UD chains for insn luid 78 uid 93
;;      reg 143 { d430(bb 2 insn 90) }
;;   UD chains for insn luid 79 uid 94
;;      reg 24 { d71(bb 2 insn 93) }

( 2 )->[3]->( 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u129(11){ d24(bb 0 insn -1) }u130(13){ d29(bb 0 insn -1) }u131(25){ d94(bb 0 insn -1) }u132(26){ d95(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 148 186
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 148 186
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 135 136 138 143 205 207 208 209 210 211 212 213 214 215 216 217 218
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 148 186
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 133 135 136 138 143 205 207 208 209 210 211 212 213 214 215 216 217 218
;; live  kill	 14 [lr] 24 [cc]
;; rd  in  	(64)
5, 13, 19, 23, 24, 28, 29, 71, 94, 95, 404, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483
;; rd  gen 	(20)
2, 64, 400, 425, 426, 428, 429, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496
;; rd  kill	(37)
0, 1, 2, 3, 4, 5, 6, 7, 30, 31, 32, 33, 399, 400, 401, 402, 403, 425, 426, 427, 428, 429, 430, 431, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144
;; rd  out 	(81)
2, 13, 19, 23, 24, 28, 29, 64, 94, 95, 400, 404, 425, 426, 428, 429, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496
;;  UD chains for artificial uses
;;   reg 11 { d24(bb 0 insn -1) }
;;   reg 13 { d29(bb 0 insn -1) }
;;   reg 25 { d94(bb 0 insn -1) }
;;   reg 26 { d95(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 99
;;      reg 186 { d472(bb 2 insn 62) }
;;   UD chains for insn luid 1 uid 100
;;      reg 13 { d29(bb 0 insn -1) }
;;      reg 0 { d1(bb 3 insn 99) }
;;   UD chains for insn luid 3 uid 103
;;      reg 143 { d430(bb 2 insn 90) }
;;      reg 144 { d432(bb 2 insn 92) }
;;      reg 205 { d484(bb 3 insn 101) }
;;   UD chains for insn luid 5 uid 105
;;      reg 148 { d434(bb 2 insn 2) }
;;   UD chains for insn luid 6 uid 106
;;      reg 138 { d427(bb 3 insn 103) }
;;      reg 207 { d485(bb 3 insn 104) }
;;      reg 208 { d486(bb 3 insn 105) }
;;   UD chains for insn luid 7 uid 107
;;      reg 148 { d434(bb 2 insn 2) }
;;   UD chains for insn luid 8 uid 108
;;      reg 186 { d472(bb 2 insn 62) }
;;   UD chains for insn luid 9 uid 109
;;      reg 209 { d487(bb 3 insn 107) }
;;   UD chains for insn luid 10 uid 110
;;      reg 210 { d488(bb 3 insn 108) }
;;   UD chains for insn luid 12 uid 112
;;      reg 13 { d29(bb 0 insn -1) }
;;      reg 0 { d3(bb 3 insn 109) }
;;      reg 1 { d9(bb 3 insn 110) }
;;      reg 2 { d15(bb 3 insn 111) }
;;   UD chains for insn luid 13 uid 113
;;      reg 0 { d2(bb 3 insn 112) }
;;   UD chains for insn luid 14 uid 114
;;      reg 135 { d425(bb 3 insn 113) }
;;      reg 138 { d428(bb 3 insn 106) }
;;   UD chains for insn luid 15 uid 115
;;      reg 136 { d426(bb 3 insn 114) }
;;   UD chains for insn luid 16 uid 116
;;      reg 186 { d472(bb 2 insn 62) }
;;   UD chains for insn luid 17 uid 117
;;      reg 148 { d434(bb 2 insn 2) }
;;   UD chains for insn luid 18 uid 118
;;      reg 136 { d426(bb 3 insn 114) }
;;      reg 211 { d489(bb 3 insn 116) }
;;      reg 212 { d490(bb 3 insn 117) }
;;   UD chains for insn luid 19 uid 119
;;      reg 186 { d472(bb 2 insn 62) }
;;   UD chains for insn luid 20 uid 120
;;      reg 148 { d434(bb 2 insn 2) }
;;   UD chains for insn luid 21 uid 121
;;      reg 133 { d399(bb 3 insn 118) }
;;      reg 213 { d491(bb 3 insn 119) }
;;      reg 214 { d492(bb 3 insn 120) }
;;   UD chains for insn luid 22 uid 122
;;      reg 186 { d472(bb 2 insn 62) }
;;   UD chains for insn luid 23 uid 123
;;      reg 148 { d434(bb 2 insn 2) }
;;   UD chains for insn luid 24 uid 124
;;      reg 133 { d402(bb 3 insn 121) }
;;      reg 215 { d493(bb 3 insn 122) }
;;      reg 216 { d494(bb 3 insn 123) }
;;   UD chains for insn luid 25 uid 125
;;      reg 186 { d472(bb 2 insn 62) }
;;   UD chains for insn luid 26 uid 126
;;      reg 148 { d434(bb 2 insn 2) }
;;   UD chains for insn luid 27 uid 127
;;      reg 133 { d401(bb 3 insn 124) }
;;      reg 217 { d495(bb 3 insn 125) }
;;      reg 218 { d496(bb 3 insn 126) }
;;   UD chains for insn luid 28 uid 128
;;      reg 133 { d400(bb 3 insn 127) }
;;   UD chains for insn luid 29 uid 152
;;      reg 24 { d64(bb 3 insn 128) }

( 2 3 )->[4]->( 1 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u177(11){ d24(bb 0 insn -1) }u178(13){ d29(bb 0 insn -1) }u179(25){ d94(bb 0 insn -1) }u180(26){ d95(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144
;; lr  def 	 0 [r0] 24 [cc] 143 219 220
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144
;; live  gen 	 0 [r0] 143 219 220
;; live  kill	 24 [cc]
;; rd  in  	(84)
2, 5, 13, 19, 23, 24, 28, 29, 64, 71, 94, 95, 400, 404, 425, 426, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496
;; rd  gen 	(4)
0, 431, 497, 498
;; rd  kill	(13)
0, 1, 2, 3, 4, 5, 6, 7, 429, 430, 431, 497, 498
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(82)
0, 13, 19, 23, 24, 28, 29, 94, 95, 400, 404, 425, 426, 428, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498
;;  UD chains for artificial uses
;;   reg 11 { d24(bb 0 insn -1) }
;;   reg 13 { d29(bb 0 insn -1) }
;;   reg 25 { d94(bb 0 insn -1) }
;;   reg 26 { d95(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 135
;;      reg 144 { d432(bb 2 insn 92) }
;;   UD chains for insn luid 2 uid 136
;;      reg 143 { d430(bb 2 insn 90) d429(bb 3 insn 152) }
;;      reg 219 { d497(bb 4 insn 134) }
;;      reg 220 { d498(bb 4 insn 135) }
;;   UD chains for insn luid 3 uid 141
;;      reg 143 { d431(bb 4 insn 136) }
;;   UD chains for insn luid 4 uid 147
;;      reg 0 { d0(bb 4 insn 141) }

( 4 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u187(0){ d0(bb 4 insn 141) }u188(11){ d24(bb 0 insn -1) }u189(13){ d29(bb 0 insn -1) }u190(14){ }u191(25){ d94(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(82)
0, 13, 19, 23, 24, 28, 29, 94, 95, 400, 404, 425, 426, 428, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(82)
0, 13, 19, 23, 24, 28, 29, 94, 95, 400, 404, 425, 426, 428, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498
;;  UD chains for artificial uses
;;   reg 0 { d0(bb 4 insn 141) }
;;   reg 11 { d24(bb 0 insn -1) }
;;   reg 13 { d29(bb 0 insn -1) }
;;   reg 14 { }
;;   reg 25 { d94(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 94 to worklist
  Adding insn 88 to worklist
  Adding insn 83 to worklist
  Adding insn 80 to worklist
  Adding insn 73 to worklist
  Adding insn 66 to worklist
  Adding insn 59 to worklist
  Adding insn 56 to worklist
  Adding insn 53 to worklist
  Adding insn 50 to worklist
  Adding insn 47 to worklist
  Adding insn 44 to worklist
  Adding insn 41 to worklist
  Adding insn 38 to worklist
  Adding insn 35 to worklist
  Adding insn 32 to worklist
  Adding insn 29 to worklist
  Adding insn 26 to worklist
  Adding insn 23 to worklist
  Adding insn 20 to worklist
  Adding insn 17 to worklist
  Adding insn 14 to worklist
  Adding insn 11 to worklist
  Adding insn 127 to worklist
  Adding insn 124 to worklist
  Adding insn 121 to worklist
  Adding insn 118 to worklist
  Adding insn 112 to worklist
  Adding insn 106 to worklist
  Adding insn 103 to worklist
  Adding insn 100 to worklist
  Adding insn 147 to worklist
  Adding insn 136 to worklist
Finished finding needed instructions:
  Adding insn 141 to worklist
Processing use of (reg 143 [ err ]) in insn 141:
Processing use of (reg 143 [ err ]) in insn 136:
  Adding insn 90 to worklist
  Adding insn 152 to worklist
Processing use of (reg 219) in insn 136:
  Adding insn 134 to worklist
Processing use of (reg 220) in insn 136:
  Adding insn 135 to worklist
Processing use of (reg 144 [ aux ]) in insn 135:
  Adding insn 92 to worklist
Processing use of (reg 148 [ sf ]) in insn 92:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 24 cc) in insn 152:
  Adding insn 128 to worklist
Processing use of (reg 133 [ err.383 ]) in insn 128:
Processing use of (reg 134 [ err.382 ]) in insn 90:
Processing use of (reg 146 [ D.24755 ]) in insn 90:
  Adding insn 89 to worklist
Processing use of (reg 0 r0) in insn 89:
Processing use of (reg 0 r0) in insn 147:
Processing use of (reg 13 sp) in insn 100:
Processing use of (reg 0 r0) in insn 100:
  Adding insn 99 to worklist
Processing use of (reg 186) in insn 99:
  Adding insn 62 to worklist
Processing use of (reg 187) in insn 62:
  Adding insn 61 to worklist
Processing use of (reg 13 sp) in insn 61:
Processing use of (reg 143 [ err ]) in insn 103:
Processing use of (reg 144 [ aux ]) in insn 103:
Processing use of (reg 205) in insn 103:
  Adding insn 101 to worklist
Processing use of (reg 138 [ err ]) in insn 106:
Processing use of (reg 207) in insn 106:
  Adding insn 104 to worklist
Processing use of (reg 208) in insn 106:
  Adding insn 105 to worklist
Processing use of (reg 148 [ sf ]) in insn 105:
Processing use of (reg 13 sp) in insn 112:
Processing use of (reg 0 r0) in insn 112:
  Adding insn 109 to worklist
Processing use of (reg 1 r1) in insn 112:
  Adding insn 110 to worklist
Processing use of (reg 2 r2) in insn 112:
  Adding insn 111 to worklist
Processing use of (reg 210) in insn 110:
  Adding insn 108 to worklist
Processing use of (reg 186) in insn 108:
Processing use of (reg 209) in insn 109:
  Adding insn 107 to worklist
Processing use of (reg 148 [ sf ]) in insn 107:
Processing use of (reg 136 [ D.25344 ]) in insn 118:
  Adding insn 114 to worklist
Processing use of (reg 211 [ <variable>.vfpstate.hard.fpscr ]) in insn 118:
  Adding insn 116 to worklist
Processing use of (reg 212) in insn 118:
  Adding insn 117 to worklist
Processing use of (reg 148 [ sf ]) in insn 117:
Processing use of (reg 186) in insn 116:
Processing use of (reg 135 [ D.25345 ]) in insn 114:
  Adding insn 113 to worklist
Processing use of (reg 138 [ err ]) in insn 114:
Processing use of (reg 0 r0) in insn 113:
Processing use of (reg 133 [ err.383 ]) in insn 121:
Processing use of (reg 213 [ <variable>.vfpstate.hard.fpexc ]) in insn 121:
  Adding insn 119 to worklist
Processing use of (reg 214) in insn 121:
  Adding insn 120 to worklist
Processing use of (reg 148 [ sf ]) in insn 120:
Processing use of (reg 186) in insn 119:
Processing use of (reg 133 [ err.383 ]) in insn 124:
Processing use of (reg 215 [ <variable>.vfpstate.hard.fpinst ]) in insn 124:
  Adding insn 122 to worklist
Processing use of (reg 216) in insn 124:
  Adding insn 123 to worklist
Processing use of (reg 148 [ sf ]) in insn 123:
Processing use of (reg 186) in insn 122:
Processing use of (reg 133 [ err.383 ]) in insn 127:
Processing use of (reg 217 [ <variable>.vfpstate.hard.fpinst2 ]) in insn 127:
  Adding insn 125 to worklist
Processing use of (reg 218) in insn 127:
  Adding insn 126 to worklist
Processing use of (reg 148 [ sf ]) in insn 126:
Processing use of (reg 186) in insn 125:
Processing use of (reg 151 [ <variable>.uregs ]) in insn 11:
  Adding insn 8 to worklist
Processing use of (reg 152) in insn 11:
  Adding insn 9 to worklist
Processing use of (reg 153) in insn 11:
  Adding insn 10 to worklist
Processing use of (reg 148 [ sf ]) in insn 9:
Processing use of (reg 149 [ regs ]) in insn 8:
  Adding insn 3 to worklist
Processing use of (reg 1 r1) in insn 3:
Processing use of (reg 134 [ err.382 ]) in insn 14:
Processing use of (reg 154 [ <variable>.uregs+4 ]) in insn 14:
  Adding insn 12 to worklist
Processing use of (reg 155) in insn 14:
  Adding insn 13 to worklist
Processing use of (reg 148 [ sf ]) in insn 13:
Processing use of (reg 149 [ regs ]) in insn 12:
Processing use of (reg 134 [ err.382 ]) in insn 17:
Processing use of (reg 156 [ <variable>.uregs+8 ]) in insn 17:
  Adding insn 15 to worklist
Processing use of (reg 157) in insn 17:
  Adding insn 16 to worklist
Processing use of (reg 148 [ sf ]) in insn 16:
Processing use of (reg 149 [ regs ]) in insn 15:
Processing use of (reg 134 [ err.382 ]) in insn 20:
Processing use of (reg 158 [ <variable>.uregs+12 ]) in insn 20:
  Adding insn 18 to worklist
Processing use of (reg 159) in insn 20:
  Adding insn 19 to worklist
Processing use of (reg 148 [ sf ]) in insn 19:
Processing use of (reg 149 [ regs ]) in insn 18:
Processing use of (reg 134 [ err.382 ]) in insn 23:
Processing use of (reg 160 [ <variable>.uregs+16 ]) in insn 23:
  Adding insn 21 to worklist
Processing use of (reg 161) in insn 23:
  Adding insn 22 to worklist
Processing use of (reg 148 [ sf ]) in insn 22:
Processing use of (reg 149 [ regs ]) in insn 21:
Processing use of (reg 134 [ err.382 ]) in insn 26:
Processing use of (reg 162 [ <variable>.uregs+20 ]) in insn 26:
  Adding insn 24 to worklist
Processing use of (reg 163) in insn 26:
  Adding insn 25 to worklist
Processing use of (reg 148 [ sf ]) in insn 25:
Processing use of (reg 149 [ regs ]) in insn 24:
Processing use of (reg 134 [ err.382 ]) in insn 29:
Processing use of (reg 164 [ <variable>.uregs+24 ]) in insn 29:
  Adding insn 27 to worklist
Processing use of (reg 165) in insn 29:
  Adding insn 28 to worklist
Processing use of (reg 148 [ sf ]) in insn 28:
Processing use of (reg 149 [ regs ]) in insn 27:
Processing use of (reg 134 [ err.382 ]) in insn 32:
Processing use of (reg 166 [ <variable>.uregs+28 ]) in insn 32:
  Adding insn 30 to worklist
Processing use of (reg 167) in insn 32:
  Adding insn 31 to worklist
Processing use of (reg 148 [ sf ]) in insn 31:
Processing use of (reg 149 [ regs ]) in insn 30:
Processing use of (reg 134 [ err.382 ]) in insn 35:
Processing use of (reg 168 [ <variable>.uregs+32 ]) in insn 35:
  Adding insn 33 to worklist
Processing use of (reg 169) in insn 35:
  Adding insn 34 to worklist
Processing use of (reg 148 [ sf ]) in insn 34:
Processing use of (reg 149 [ regs ]) in insn 33:
Processing use of (reg 134 [ err.382 ]) in insn 38:
Processing use of (reg 170 [ <variable>.uregs+36 ]) in insn 38:
  Adding insn 36 to worklist
Processing use of (reg 171) in insn 38:
  Adding insn 37 to worklist
Processing use of (reg 148 [ sf ]) in insn 37:
Processing use of (reg 149 [ regs ]) in insn 36:
Processing use of (reg 134 [ err.382 ]) in insn 41:
Processing use of (reg 172 [ <variable>.uregs+40 ]) in insn 41:
  Adding insn 39 to worklist
Processing use of (reg 173) in insn 41:
  Adding insn 40 to worklist
Processing use of (reg 148 [ sf ]) in insn 40:
Processing use of (reg 149 [ regs ]) in insn 39:
Processing use of (reg 134 [ err.382 ]) in insn 44:
Processing use of (reg 174 [ <variable>.uregs+44 ]) in insn 44:
  Adding insn 42 to worklist
Processing use of (reg 175) in insn 44:
  Adding insn 43 to worklist
Processing use of (reg 148 [ sf ]) in insn 43:
Processing use of (reg 149 [ regs ]) in insn 42:
Processing use of (reg 134 [ err.382 ]) in insn 47:
Processing use of (reg 176 [ <variable>.uregs+48 ]) in insn 47:
  Adding insn 45 to worklist
Processing use of (reg 177) in insn 47:
  Adding insn 46 to worklist
Processing use of (reg 148 [ sf ]) in insn 46:
Processing use of (reg 149 [ regs ]) in insn 45:
Processing use of (reg 134 [ err.382 ]) in insn 50:
Processing use of (reg 178 [ <variable>.uregs+52 ]) in insn 50:
  Adding insn 48 to worklist
Processing use of (reg 179) in insn 50:
  Adding insn 49 to worklist
Processing use of (reg 148 [ sf ]) in insn 49:
Processing use of (reg 149 [ regs ]) in insn 48:
Processing use of (reg 134 [ err.382 ]) in insn 53:
Processing use of (reg 180 [ <variable>.uregs+56 ]) in insn 53:
  Adding insn 51 to worklist
Processing use of (reg 181) in insn 53:
  Adding insn 52 to worklist
Processing use of (reg 148 [ sf ]) in insn 52:
Processing use of (reg 149 [ regs ]) in insn 51:
Processing use of (reg 134 [ err.382 ]) in insn 56:
Processing use of (reg 182 [ <variable>.uregs+60 ]) in insn 56:
  Adding insn 54 to worklist
Processing use of (reg 183) in insn 56:
  Adding insn 55 to worklist
Processing use of (reg 148 [ sf ]) in insn 55:
Processing use of (reg 149 [ regs ]) in insn 54:
Processing use of (reg 134 [ err.382 ]) in insn 59:
Processing use of (reg 184 [ <variable>.uregs+64 ]) in insn 59:
  Adding insn 57 to worklist
Processing use of (reg 185) in insn 59:
  Adding insn 58 to worklist
Processing use of (reg 148 [ sf ]) in insn 58:
Processing use of (reg 149 [ regs ]) in insn 57:
Processing use of (reg 134 [ err.382 ]) in insn 66:
Processing use of (reg 189 [ <variable>.thread.trap_no ]) in insn 66:
  Adding insn 64 to worklist
Processing use of (reg 190) in insn 66:
  Adding insn 65 to worklist
Processing use of (reg 148 [ sf ]) in insn 65:
Processing use of (reg 188 [ <variable>.task ]) in insn 64:
  Adding insn 63 to worklist
Processing use of (reg 186) in insn 63:
Processing use of (reg 134 [ err.382 ]) in insn 73:
Processing use of (reg 194 [ <variable>.thread.error_code ]) in insn 73:
  Adding insn 71 to worklist
Processing use of (reg 195) in insn 73:
  Adding insn 72 to worklist
Processing use of (reg 148 [ sf ]) in insn 72:
Processing use of (reg 188 [ <variable>.task ]) in insn 71:
Processing use of (reg 134 [ err.382 ]) in insn 80:
Processing use of (reg 199 [ <variable>.thread.address ]) in insn 80:
  Adding insn 78 to worklist
Processing use of (reg 200) in insn 80:
  Adding insn 79 to worklist
Processing use of (reg 148 [ sf ]) in insn 79:
Processing use of (reg 188 [ <variable>.task ]) in insn 78:
Processing use of (reg 134 [ err.382 ]) in insn 83:
Processing use of (reg 201 [ <variable>.sig ]) in insn 83:
  Adding insn 81 to worklist
Processing use of (reg 202) in insn 83:
  Adding insn 82 to worklist
Processing use of (reg 148 [ sf ]) in insn 82:
Processing use of (reg 150 [ set ]) in insn 81:
  Adding insn 4 to worklist
Processing use of (reg 2 r2) in insn 4:
Processing use of (reg 13 sp) in insn 88:
Processing use of (reg 0 r0) in insn 88:
  Adding insn 85 to worklist
Processing use of (reg 1 r1) in insn 88:
  Adding insn 86 to worklist
Processing use of (reg 2 r2) in insn 88:
  Adding insn 87 to worklist
Processing use of (reg 150 [ set ]) in insn 86:
Processing use of (reg 203) in insn 85:
  Adding insn 84 to worklist
Processing use of (reg 148 [ sf ]) in insn 84:
Processing use of (reg 24 cc) in insn 94:
  Adding insn 93 to worklist
Processing use of (reg 143 [ err ]) in insn 93:
DCE: Deleting insn 115
deleting insn with uid = 115.


setup_sigframe

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={8d,8u} r1={6d,3u} r2={6d,3u} r3={4d} r11={1d,4u} r12={4d} r13={1d,8u,1d} r14={4d,1u} r15={3d} r16={3d} r17={3d} r18={3d} r19={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={33d,2u} r25={1d,4u} r26={1d,3u} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r81={3d} r82={3d} r83={3d} r84={3d} r85={3d} r86={3d} r87={3d} r88={3d} r89={3d} r90={3d} r91={3d} r92={3d} r93={3d} r94={3d} r95={3d} r96={3d} r97={3d} r98={3d} r99={3d} r100={3d} r101={3d} r102={3d} r103={3d} r104={3d} r105={3d} r106={3d} r107={3d} r108={3d} r109={3d} r110={3d} r111={3d} r112={3d} r113={3d} r114={3d} r115={3d} r116={3d} r117={3d} r118={3d} r119={3d} r120={3d} r121={3d} r122={3d} r123={3d} r124={3d} r125={3d} r126={3d} r127={3d} r133={4d,4u} r134={21d,21u} r135={1d,1u} r136={1d,1u} r138={2d,2u} r143={3d,4u} r144={1d,2u} r146={1d,1u} r148={1d,29u} r149={1d,17u} r150={1d,2u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r171={1d,1u} r172={1d,1u} r173={1d,1u} r174={1d,1u} r175={1d,1u} r176={1d,1u} r177={1d,1u} r178={1d,1u} r179={1d,1u} r180={1d,1u} r181={1d,1u} r182={1d,1u} r183={1d,1u} r184={1d,1u} r185={1d,1u} r186={1d,7u} r187={1d,1u} r188={1d,3u} r189={1d,1u} r190={1d,1u} r194={1d,1u} r195={1d,1u} r199={1d,1u} r200={1d,1u} r201={1d,1u} r202={1d,1u} r203={1d,1u} r205={1d,1u} r207={1d,1u} r208={1d,1u} r209={1d,1u} r210={1d,1u} r211={1d,1u} r212={1d,1u} r213={1d,1u} r214={1d,1u} r215={1d,1u} r216={1d,1u} r217={1d,1u} r218={1d,1u} r219={1d,1u} r220={1d,1u} 
;;    total ref usage 689{498d,190u,1e} in 114{111 regular + 3 call} insns.
;; Reaching defs:

  sparse invalidated 	24
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398
0[0,8] 1[8,6] 2[14,6] 3[20,4] 11[24,1] 12[25,4] 13[29,1] 14[30,4] 15[34,3] 16[37,3] 17[40,3] 18[43,3] 19[46,3] 20[49,3] 21[52,3] 22[55,3] 23[58,3] 24[61,33] 25[94,1] 26[95,1] 27[96,3] 28[99,3] 29[102,3] 30[105,3] 31[108,3] 32[111,3] 33[114,3] 34[117,3] 35[120,3] 36[123,3] 37[126,3] 38[129,3] 39[132,3] 40[135,3] 41[138,3] 42[141,3] 43[144,3] 44[147,3] 45[150,3] 46[153,3] 47[156,3] 48[159,3] 49[162,3] 50[165,3] 51[168,3] 52[171,3] 53[174,3] 54[177,3] 55[180,3] 56[183,3] 57[186,3] 58[189,3] 59[192,3] 60[195,3] 61[198,3] 62[201,3] 63[204,3] 64[207,3] 65[210,3] 66[213,3] 67[216,3] 68[219,3] 69[222,3] 70[225,3] 71[228,3] 72[231,3] 73[234,3] 74[237,3] 75[240,3] 76[243,3] 77[246,3] 78[249,3] 79[252,3] 80[255,3] 81[258,3] 82[261,3] 83[264,3] 84[267,3] 85[270,3] 86[273,3] 87[276,3] 88[279,3] 89[282,3] 90[285,3] 91[288,3] 92[291,3] 93[294,3] 94[297,3] 95[300,3] 96[303,3] 97[306,3] 98[309,3] 99[312,3] 100[315,3] 101[318,3] 102[321,3] 103[324,3] 104[327,3] 105[330,3] 106[333,3] 107[336,3] 108[339,3] 109[342,3] 110[345,3] 111[348,3] 112[351,3] 113[354,3] 114[357,3] 115[360,3] 116[363,3] 117[366,3] 118[369,3] 119[372,3] 120[375,3] 121[378,3] 122[381,3] 123[384,3] 124[387,3] 125[390,3] 126[393,3] 127[396,3] 133[399,5] 134[404,21] 135[425,1] 136[426,1] 138[427,2] 143[429,3] 144[432,1] 146[433,1] 148[434,1] 149[435,1] 150[436,1] 151[437,1] 152[438,1] 153[439,1] 154[440,1] 155[441,1] 156[442,1] 157[443,1] 158[444,1] 159[445,1] 160[446,1] 161[447,1] 162[448,1] 163[449,1] 164[450,1] 165[451,1] 166[452,1] 167[453,1] 168[454,1] 169[455,1] 170[456,1] 171[457,1] 172[458,1] 173[459,1] 174[460,1] 175[461,1] 176[462,1] 177[463,1] 178[464,1] 179[465,1] 180[466,1] 181[467,1] 182[468,1] 183[469,1] 184[470,1] 185[471,1] 186[472,1] 187[473,1] 188[474,1] 189[475,1] 190[476,1] 194[477,1] 195[478,1] 199[479,1] 200[480,1] 201[481,1] 202[482,1] 203[483,1] 205[484,1] 207[485,1] 208[486,1] 209[487,1] 210[488,1] 211[489,1] 212[490,1] 213[491,1] 214[492,1] 215[493,1] 216[494,1] 217[495,1] 218[496,1] 219[497,1] 220[498,1] 
(note 1 0 6 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 143 144 146 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 194 195 199 200 201 202 203
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 134 143 144 146 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 194 195 199 200 201 202 203
;; live  kill	 14 [lr] 24 [cc]
;; rd  in  	(10)
7, 13, 19, 23, 24, 28, 29, 33, 94, 95
;; rd  gen 	(56)
5, 71, 404, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483
;; rd  kill	(88)
0, 1, 2, 3, 4, 5, 6, 7, 30, 31, 32, 33, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 6 3 2 arch/arm/kernel/signal.c:392 (set (reg/v/f:SI 148 [ sf ])
        (reg:SI 0 r0 [ sf ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ sf ])
        (nil)))

(insn 3 2 4 2 arch/arm/kernel/signal.c:392 (set (reg/v/f:SI 149 [ regs ])
        (reg:SI 1 r1 [ regs ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ regs ])
        (nil)))

(insn 4 3 5 2 arch/arm/kernel/signal.c:392 (set (reg/v/f:SI 150 [ set ])
        (reg:SI 2 r2 [ set ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ set ])
        (nil)))

(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)

(insn 8 5 9 2 arch/arm/kernel/signal.c:396 discrim 4 (set (reg:SI 151 [ <variable>.uregs ])
        (mem/s/j:SI (reg/v/f:SI 149 [ regs ]) [0 <variable>.uregs+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 9 8 10 2 arch/arm/kernel/signal.c:396 discrim 4 (set (reg/f:SI 152)
        (plus:SI (reg/v/f:SI 148 [ sf ])
            (const_int 32 [0x20]))) 4 {*arm_addsi3} (nil))

(insn 10 9 11 2 arch/arm/kernel/signal.c:396 discrim 4 (set (reg:SI 153)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 11 10 12 2 arch/arm/kernel/signal.c:396 discrim 4 (parallel [
            (set (reg/v:SI 134 [ err.382 ])
                (asm_operands/v:SI ("1:	str	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg:SI 151 [ <variable>.uregs ])
                        (reg/f:SI 152)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg:SI 153)
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8690863))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg:SI 153)
        (expr_list:REG_DEAD (reg/f:SI 152)
            (expr_list:REG_DEAD (reg:SI 151 [ <variable>.uregs ])
                (expr_list:REG_UNUSED (reg:QI 24 cc)
                    (nil))))))

(insn 12 11 13 2 arch/arm/kernel/signal.c:397 discrim 4 (set (reg:SI 154 [ <variable>.uregs+4 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 149 [ regs ])
                (const_int 4 [0x4])) [0 <variable>.uregs+4 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 13 12 14 2 arch/arm/kernel/signal.c:397 discrim 4 (set (reg/f:SI 155)
        (plus:SI (reg/v/f:SI 148 [ sf ])
            (const_int 36 [0x24]))) 4 {*arm_addsi3} (nil))

(insn 14 13 15 2 arch/arm/kernel/signal.c:397 discrim 4 (parallel [
            (set (reg/v:SI 134 [ err.382 ])
                (asm_operands/v:SI ("1:	str	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg:SI 154 [ <variable>.uregs+4 ])
                        (reg/f:SI 155)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 134 [ err.382 ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8690868))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/f:SI 155)
        (expr_list:REG_DEAD (reg:SI 154 [ <variable>.uregs+4 ])
            (expr_list:REG_UNUSED (reg:QI 24 cc)
                (nil)))))

(insn 15 14 16 2 arch/arm/kernel/signal.c:398 discrim 4 (set (reg:SI 156 [ <variable>.uregs+8 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 149 [ regs ])
                (const_int 8 [0x8])) [0 <variable>.uregs+8 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 16 15 17 2 arch/arm/kernel/signal.c:398 discrim 4 (set (reg/f:SI 157)
        (plus:SI (reg/v/f:SI 148 [ sf ])
            (const_int 40 [0x28]))) 4 {*arm_addsi3} (nil))

(insn 17 16 18 2 arch/arm/kernel/signal.c:398 discrim 4 (parallel [
            (set (reg/v:SI 134 [ err.382 ])
                (asm_operands/v:SI ("1:	str	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg:SI 156 [ <variable>.uregs+8 ])
                        (reg/f:SI 157)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 134 [ err.382 ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8690873))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/f:SI 157)
        (expr_list:REG_DEAD (reg:SI 156 [ <variable>.uregs+8 ])
            (expr_list:REG_UNUSED (reg:QI 24 cc)
                (nil)))))

(insn 18 17 19 2 arch/arm/kernel/signal.c:399 discrim 4 (set (reg:SI 158 [ <variable>.uregs+12 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 149 [ regs ])
                (const_int 12 [0xc])) [0 <variable>.uregs+12 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 19 18 20 2 arch/arm/kernel/signal.c:399 discrim 4 (set (reg/f:SI 159)
        (plus:SI (reg/v/f:SI 148 [ sf ])
            (const_int 44 [0x2c]))) 4 {*arm_addsi3} (nil))

(insn 20 19 21 2 arch/arm/kernel/signal.c:399 discrim 4 (parallel [
            (set (reg/v:SI 134 [ err.382 ])
                (asm_operands/v:SI ("1:	str	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg:SI 158 [ <variable>.uregs+12 ])
                        (reg/f:SI 159)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 134 [ err.382 ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8690878))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/f:SI 159)
        (expr_list:REG_DEAD (reg:SI 158 [ <variable>.uregs+12 ])
            (expr_list:REG_UNUSED (reg:QI 24 cc)
                (nil)))))

(insn 21 20 22 2 arch/arm/kernel/signal.c:400 discrim 4 (set (reg:SI 160 [ <variable>.uregs+16 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 149 [ regs ])
                (const_int 16 [0x10])) [0 <variable>.uregs+16 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 22 21 23 2 arch/arm/kernel/signal.c:400 discrim 4 (set (reg/f:SI 161)
        (plus:SI (reg/v/f:SI 148 [ sf ])
            (const_int 48 [0x30]))) 4 {*arm_addsi3} (nil))

(insn 23 22 24 2 arch/arm/kernel/signal.c:400 discrim 4 (parallel [
            (set (reg/v:SI 134 [ err.382 ])
                (asm_operands/v:SI ("1:	str	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg:SI 160 [ <variable>.uregs+16 ])
                        (reg/f:SI 161)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 134 [ err.382 ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8690883))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/f:SI 161)
        (expr_list:REG_DEAD (reg:SI 160 [ <variable>.uregs+16 ])
            (expr_list:REG_UNUSED (reg:QI 24 cc)
                (nil)))))

(insn 24 23 25 2 arch/arm/kernel/signal.c:401 discrim 4 (set (reg:SI 162 [ <variable>.uregs+20 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 149 [ regs ])
                (const_int 20 [0x14])) [0 <variable>.uregs+20 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 25 24 26 2 arch/arm/kernel/signal.c:401 discrim 4 (set (reg/f:SI 163)
        (plus:SI (reg/v/f:SI 148 [ sf ])
            (const_int 52 [0x34]))) 4 {*arm_addsi3} (nil))

(insn 26 25 27 2 arch/arm/kernel/signal.c:401 discrim 4 (parallel [
            (set (reg/v:SI 134 [ err.382 ])
                (asm_operands/v:SI ("1:	str	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg:SI 162 [ <variable>.uregs+20 ])
                        (reg/f:SI 163)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 134 [ err.382 ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8690888))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/f:SI 163)
        (expr_list:REG_DEAD (reg:SI 162 [ <variable>.uregs+20 ])
            (expr_list:REG_UNUSED (reg:QI 24 cc)
                (nil)))))

(insn 27 26 28 2 arch/arm/kernel/signal.c:402 discrim 4 (set (reg:SI 164 [ <variable>.uregs+24 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 149 [ regs ])
                (const_int 24 [0x18])) [0 <variable>.uregs+24 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 28 27 29 2 arch/arm/kernel/signal.c:402 discrim 4 (set (reg/f:SI 165)
        (plus:SI (reg/v/f:SI 148 [ sf ])
            (const_int 56 [0x38]))) 4 {*arm_addsi3} (nil))

(insn 29 28 30 2 arch/arm/kernel/signal.c:402 discrim 4 (parallel [
            (set (reg/v:SI 134 [ err.382 ])
                (asm_operands/v:SI ("1:	str	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg:SI 164 [ <variable>.uregs+24 ])
                        (reg/f:SI 165)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 134 [ err.382 ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8690893))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/f:SI 165)
        (expr_list:REG_DEAD (reg:SI 164 [ <variable>.uregs+24 ])
            (expr_list:REG_UNUSED (reg:QI 24 cc)
                (nil)))))

(insn 30 29 31 2 arch/arm/kernel/signal.c:403 discrim 4 (set (reg:SI 166 [ <variable>.uregs+28 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 149 [ regs ])
                (const_int 28 [0x1c])) [0 <variable>.uregs+28 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 31 30 32 2 arch/arm/kernel/signal.c:403 discrim 4 (set (reg/f:SI 167)
        (plus:SI (reg/v/f:SI 148 [ sf ])
            (const_int 60 [0x3c]))) 4 {*arm_addsi3} (nil))

(insn 32 31 33 2 arch/arm/kernel/signal.c:403 discrim 4 (parallel [
            (set (reg/v:SI 134 [ err.382 ])
                (asm_operands/v:SI ("1:	str	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg:SI 166 [ <variable>.uregs+28 ])
                        (reg/f:SI 167)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 134 [ err.382 ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8690898))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/f:SI 167)
        (expr_list:REG_DEAD (reg:SI 166 [ <variable>.uregs+28 ])
            (expr_list:REG_UNUSED (reg:QI 24 cc)
                (nil)))))

(insn 33 32 34 2 arch/arm/kernel/signal.c:404 discrim 4 (set (reg:SI 168 [ <variable>.uregs+32 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 149 [ regs ])
                (const_int 32 [0x20])) [0 <variable>.uregs+32 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 34 33 35 2 arch/arm/kernel/signal.c:404 discrim 4 (set (reg/f:SI 169)
        (plus:SI (reg/v/f:SI 148 [ sf ])
            (const_int 64 [0x40]))) 4 {*arm_addsi3} (nil))

(insn 35 34 36 2 arch/arm/kernel/signal.c:404 discrim 4 (parallel [
            (set (reg/v:SI 134 [ err.382 ])
                (asm_operands/v:SI ("1:	str	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg:SI 168 [ <variable>.uregs+32 ])
                        (reg/f:SI 169)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 134 [ err.382 ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8690903))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/f:SI 169)
        (expr_list:REG_DEAD (reg:SI 168 [ <variable>.uregs+32 ])
            (expr_list:REG_UNUSED (reg:QI 24 cc)
                (nil)))))

(insn 36 35 37 2 arch/arm/kernel/signal.c:405 discrim 4 (set (reg:SI 170 [ <variable>.uregs+36 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 149 [ regs ])
                (const_int 36 [0x24])) [0 <variable>.uregs+36 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 37 36 38 2 arch/arm/kernel/signal.c:405 discrim 4 (set (reg/f:SI 171)
        (plus:SI (reg/v/f:SI 148 [ sf ])
            (const_int 68 [0x44]))) 4 {*arm_addsi3} (nil))

(insn 38 37 39 2 arch/arm/kernel/signal.c:405 discrim 4 (parallel [
            (set (reg/v:SI 134 [ err.382 ])
                (asm_operands/v:SI ("1:	str	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg:SI 170 [ <variable>.uregs+36 ])
                        (reg/f:SI 171)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 134 [ err.382 ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8690908))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/f:SI 171)
        (expr_list:REG_DEAD (reg:SI 170 [ <variable>.uregs+36 ])
            (expr_list:REG_UNUSED (reg:QI 24 cc)
                (nil)))))

(insn 39 38 40 2 arch/arm/kernel/signal.c:406 discrim 4 (set (reg:SI 172 [ <variable>.uregs+40 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 149 [ regs ])
                (const_int 40 [0x28])) [0 <variable>.uregs+40 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 40 39 41 2 arch/arm/kernel/signal.c:406 discrim 4 (set (reg/f:SI 173)
        (plus:SI (reg/v/f:SI 148 [ sf ])
            (const_int 72 [0x48]))) 4 {*arm_addsi3} (nil))

(insn 41 40 42 2 arch/arm/kernel/signal.c:406 discrim 4 (parallel [
            (set (reg/v:SI 134 [ err.382 ])
                (asm_operands/v:SI ("1:	str	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg:SI 172 [ <variable>.uregs+40 ])
                        (reg/f:SI 173)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 134 [ err.382 ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8690913))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/f:SI 173)
        (expr_list:REG_DEAD (reg:SI 172 [ <variable>.uregs+40 ])
            (expr_list:REG_UNUSED (reg:QI 24 cc)
                (nil)))))

(insn 42 41 43 2 arch/arm/kernel/signal.c:407 discrim 4 (set (reg:SI 174 [ <variable>.uregs+44 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 149 [ regs ])
                (const_int 44 [0x2c])) [0 <variable>.uregs+44 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 43 42 44 2 arch/arm/kernel/signal.c:407 discrim 4 (set (reg/f:SI 175)
        (plus:SI (reg/v/f:SI 148 [ sf ])
            (const_int 76 [0x4c]))) 4 {*arm_addsi3} (nil))

(insn 44 43 45 2 arch/arm/kernel/signal.c:407 discrim 4 (parallel [
            (set (reg/v:SI 134 [ err.382 ])
                (asm_operands/v:SI ("1:	str	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg:SI 174 [ <variable>.uregs+44 ])
                        (reg/f:SI 175)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 134 [ err.382 ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8690918))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/f:SI 175)
        (expr_list:REG_DEAD (reg:SI 174 [ <variable>.uregs+44 ])
            (expr_list:REG_UNUSED (reg:QI 24 cc)
                (nil)))))

(insn 45 44 46 2 arch/arm/kernel/signal.c:408 discrim 4 (set (reg:SI 176 [ <variable>.uregs+48 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 149 [ regs ])
                (const_int 48 [0x30])) [0 <variable>.uregs+48 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 46 45 47 2 arch/arm/kernel/signal.c:408 discrim 4 (set (reg/f:SI 177)
        (plus:SI (reg/v/f:SI 148 [ sf ])
            (const_int 80 [0x50]))) 4 {*arm_addsi3} (nil))

(insn 47 46 48 2 arch/arm/kernel/signal.c:408 discrim 4 (parallel [
            (set (reg/v:SI 134 [ err.382 ])
                (asm_operands/v:SI ("1:	str	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg:SI 176 [ <variable>.uregs+48 ])
                        (reg/f:SI 177)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 134 [ err.382 ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8690923))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/f:SI 177)
        (expr_list:REG_DEAD (reg:SI 176 [ <variable>.uregs+48 ])
            (expr_list:REG_UNUSED (reg:QI 24 cc)
                (nil)))))

(insn 48 47 49 2 arch/arm/kernel/signal.c:409 discrim 4 (set (reg:SI 178 [ <variable>.uregs+52 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 149 [ regs ])
                (const_int 52 [0x34])) [0 <variable>.uregs+52 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 49 48 50 2 arch/arm/kernel/signal.c:409 discrim 4 (set (reg/f:SI 179)
        (plus:SI (reg/v/f:SI 148 [ sf ])
            (const_int 84 [0x54]))) 4 {*arm_addsi3} (nil))

(insn 50 49 51 2 arch/arm/kernel/signal.c:409 discrim 4 (parallel [
            (set (reg/v:SI 134 [ err.382 ])
                (asm_operands/v:SI ("1:	str	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg:SI 178 [ <variable>.uregs+52 ])
                        (reg/f:SI 179)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 134 [ err.382 ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8690928))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/f:SI 179)
        (expr_list:REG_DEAD (reg:SI 178 [ <variable>.uregs+52 ])
            (expr_list:REG_UNUSED (reg:QI 24 cc)
                (nil)))))

(insn 51 50 52 2 arch/arm/kernel/signal.c:410 discrim 4 (set (reg:SI 180 [ <variable>.uregs+56 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 149 [ regs ])
                (const_int 56 [0x38])) [0 <variable>.uregs+56 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 52 51 53 2 arch/arm/kernel/signal.c:410 discrim 4 (set (reg/f:SI 181)
        (plus:SI (reg/v/f:SI 148 [ sf ])
            (const_int 88 [0x58]))) 4 {*arm_addsi3} (nil))

(insn 53 52 54 2 arch/arm/kernel/signal.c:410 discrim 4 (parallel [
            (set (reg/v:SI 134 [ err.382 ])
                (asm_operands/v:SI ("1:	str	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg:SI 180 [ <variable>.uregs+56 ])
                        (reg/f:SI 181)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 134 [ err.382 ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8690933))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/f:SI 181)
        (expr_list:REG_DEAD (reg:SI 180 [ <variable>.uregs+56 ])
            (expr_list:REG_UNUSED (reg:QI 24 cc)
                (nil)))))

(insn 54 53 55 2 arch/arm/kernel/signal.c:411 discrim 4 (set (reg:SI 182 [ <variable>.uregs+60 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 149 [ regs ])
                (const_int 60 [0x3c])) [0 <variable>.uregs+60 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 55 54 56 2 arch/arm/kernel/signal.c:411 discrim 4 (set (reg/f:SI 183)
        (plus:SI (reg/v/f:SI 148 [ sf ])
            (const_int 92 [0x5c]))) 4 {*arm_addsi3} (nil))

(insn 56 55 57 2 arch/arm/kernel/signal.c:411 discrim 4 (parallel [
            (set (reg/v:SI 134 [ err.382 ])
                (asm_operands/v:SI ("1:	str	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg:SI 182 [ <variable>.uregs+60 ])
                        (reg/f:SI 183)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 134 [ err.382 ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8690938))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/f:SI 183)
        (expr_list:REG_DEAD (reg:SI 182 [ <variable>.uregs+60 ])
            (expr_list:REG_UNUSED (reg:QI 24 cc)
                (nil)))))

(insn 57 56 58 2 arch/arm/kernel/signal.c:412 discrim 4 (set (reg:SI 184 [ <variable>.uregs+64 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 149 [ regs ])
                (const_int 64 [0x40])) [0 <variable>.uregs+64 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 149 [ regs ])
        (nil)))

(insn 58 57 59 2 arch/arm/kernel/signal.c:412 discrim 4 (set (reg/f:SI 185)
        (plus:SI (reg/v/f:SI 148 [ sf ])
            (const_int 96 [0x60]))) 4 {*arm_addsi3} (nil))

(insn 59 58 61 2 arch/arm/kernel/signal.c:412 discrim 4 (parallel [
            (set (reg/v:SI 134 [ err.382 ])
                (asm_operands/v:SI ("1:	str	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg:SI 184 [ <variable>.uregs+64 ])
                        (reg/f:SI 185)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 134 [ err.382 ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8690943))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/f:SI 185)
        (expr_list:REG_DEAD (reg:SI 184 [ <variable>.uregs+64 ])
            (expr_list:REG_UNUSED (reg:QI 24 cc)
                (nil)))))

(insn 61 59 62 2 arch/arm/kernel/signal.c:414 discrim 4 (set (reg:SI 187)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 62 61 63 2 arch/arm/kernel/signal.c:414 discrim 4 (set (reg:SI 186)
        (and:SI (reg:SI 187)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 187)
        (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
                (const_int -8192 [0xffffffffffffe000]))
            (nil))))

(insn 63 62 64 2 arch/arm/kernel/signal.c:414 discrim 4 (set (reg/f:SI 188 [ <variable>.task ])
        (mem/s/f/j:SI (plus:SI (reg:SI 186)
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 64 63 65 2 arch/arm/kernel/signal.c:414 discrim 4 (set (reg:SI 189 [ <variable>.thread.trap_no ])
        (mem/s/j:SI (plus:SI (reg/f:SI 188 [ <variable>.task ])
                (const_int 788 [0x314])) [0 <variable>.thread.trap_no+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 65 64 66 2 arch/arm/kernel/signal.c:414 discrim 4 (set (reg/f:SI 190)
        (plus:SI (reg/v/f:SI 148 [ sf ])
            (const_int 20 [0x14]))) 4 {*arm_addsi3} (nil))

(insn 66 65 71 2 arch/arm/kernel/signal.c:414 discrim 4 (parallel [
            (set (reg/v:SI 134 [ err.382 ])
                (asm_operands/v:SI ("1:	str	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg:SI 189 [ <variable>.thread.trap_no ])
                        (reg/f:SI 190)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 134 [ err.382 ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8690948))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/f:SI 190)
        (expr_list:REG_DEAD (reg:SI 189 [ <variable>.thread.trap_no ])
            (expr_list:REG_UNUSED (reg:QI 24 cc)
                (nil)))))

(insn 71 66 72 2 arch/arm/kernel/signal.c:415 discrim 4 (set (reg:SI 194 [ <variable>.thread.error_code ])
        (mem/s/j:SI (plus:SI (reg/f:SI 188 [ <variable>.task ])
                (const_int 792 [0x318])) [0 <variable>.thread.error_code+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 72 71 73 2 arch/arm/kernel/signal.c:415 discrim 4 (set (reg/f:SI 195)
        (plus:SI (reg/v/f:SI 148 [ sf ])
            (const_int 24 [0x18]))) 4 {*arm_addsi3} (nil))

(insn 73 72 78 2 arch/arm/kernel/signal.c:415 discrim 4 (parallel [
            (set (reg/v:SI 134 [ err.382 ])
                (asm_operands/v:SI ("1:	str	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg:SI 194 [ <variable>.thread.error_code ])
                        (reg/f:SI 195)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 134 [ err.382 ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8690953))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/f:SI 195)
        (expr_list:REG_DEAD (reg:SI 194 [ <variable>.thread.error_code ])
            (expr_list:REG_UNUSED (reg:QI 24 cc)
                (nil)))))

(insn 78 73 79 2 arch/arm/kernel/signal.c:416 discrim 4 (set (reg:SI 199 [ <variable>.thread.address ])
        (mem/s/j:SI (plus:SI (reg/f:SI 188 [ <variable>.task ])
                (const_int 784 [0x310])) [0 <variable>.thread.address+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 188 [ <variable>.task ])
        (nil)))

(insn 79 78 80 2 arch/arm/kernel/signal.c:416 discrim 4 (set (reg/f:SI 200)
        (plus:SI (reg/v/f:SI 148 [ sf ])
            (const_int 100 [0x64]))) 4 {*arm_addsi3} (nil))

(insn 80 79 81 2 arch/arm/kernel/signal.c:416 discrim 4 (parallel [
            (set (reg/v:SI 134 [ err.382 ])
                (asm_operands/v:SI ("1:	str	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg:SI 199 [ <variable>.thread.address ])
                        (reg/f:SI 200)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 134 [ err.382 ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8690958))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/f:SI 200)
        (expr_list:REG_DEAD (reg:SI 199 [ <variable>.thread.address ])
            (expr_list:REG_UNUSED (reg:QI 24 cc)
                (nil)))))

(insn 81 80 82 2 arch/arm/kernel/signal.c:417 discrim 4 (set (reg:SI 201 [ <variable>.sig ])
        (mem/s/j:SI (reg/v/f:SI 150 [ set ]) [0 <variable>.sig+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 82 81 83 2 arch/arm/kernel/signal.c:417 discrim 4 (set (reg/f:SI 202)
        (plus:SI (reg/v/f:SI 148 [ sf ])
            (const_int 28 [0x1c]))) 4 {*arm_addsi3} (nil))

(insn 83 82 84 2 arch/arm/kernel/signal.c:417 discrim 4 (parallel [
            (set (reg/v:SI 134 [ err.382 ])
                (asm_operands/v:SI ("1:	str	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg:SI 201 [ <variable>.sig ])
                        (reg/f:SI 202)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 134 [ err.382 ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8690963))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/f:SI 202)
        (expr_list:REG_DEAD (reg:SI 201 [ <variable>.sig ])
            (expr_list:REG_UNUSED (reg:QI 24 cc)
                (nil)))))

(insn 84 83 85 2 arch/arm/kernel/signal.c:419 (set (reg/f:SI 203)
        (plus:SI (reg/v/f:SI 148 [ sf ])
            (const_int 104 [0x68]))) 4 {*arm_addsi3} (nil))

(insn 85 84 86 2 arch/arm/kernel/signal.c:419 (set (reg:SI 0 r0)
        (reg/f:SI 203)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 203)
        (nil)))

(insn 86 85 87 2 arch/arm/kernel/signal.c:419 (set (reg:SI 1 r1)
        (reg/v/f:SI 150 [ set ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 150 [ set ])
        (nil)))

(insn 87 86 88 2 arch/arm/kernel/signal.c:419 (set (reg:SI 2 r2)
        (const_int 8 [0x8])) 167 {*arm_movsi_insn} (nil))

(call_insn 88 87 89 2 arch/arm/kernel/signal.c:419 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__copy_to_user") [flags 0x41] <function_decl 0x10f3df00 __copy_to_user>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 89 88 90 2 arch/arm/kernel/signal.c:419 (set (reg:SI 146 [ D.24755 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 90 89 92 2 arch/arm/kernel/signal.c:419 (set (reg/v:SI 143 [ err ])
        (ior:SI (reg/v:SI 134 [ err.382 ])
            (reg:SI 146 [ D.24755 ]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 146 [ D.24755 ])
        (expr_list:REG_DEAD (reg/v:SI 134 [ err.382 ])
            (nil))))

(insn 92 90 93 2 arch/arm/kernel/signal.c:421 (set (reg/v/f:SI 144 [ aux ])
        (plus:SI (reg/v/f:SI 148 [ sf ])
            (const_int 232 [0xe8]))) 4 {*arm_addsi3} (nil))

(insn 93 92 94 2 arch/arm/kernel/signal.c:431 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 143 [ err ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 94 93 95 2 arch/arm/kernel/signal.c:431 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 132)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6102 [0x17d6])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 144 148 186
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 148 186
;; rd  out 	(64)
5, 13, 19, 23, 24, 28, 29, 71, 94, 95, 404, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483


;; Succ edge  3 [39.0%]  (fallthru)
;; Succ edge  4 [61.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u129(11){ }u130(13){ }u131(25){ }u132(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 148 186
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 148 186
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 135 136 138 143 205 207 208 209 210 211 212 213 214 215 216 217 218
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 148 186
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 133 135 136 138 143 205 207 208 209 210 211 212 213 214 215 216 217 218
;; live  kill	 14 [lr] 24 [cc]
;; rd  in  	(64)
5, 13, 19, 23, 24, 28, 29, 71, 94, 95, 404, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483
;; rd  gen 	(20)
2, 64, 400, 425, 426, 428, 429, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496
;; rd  kill	(37)
0, 1, 2, 3, 4, 5, 6, 7, 30, 31, 32, 33, 399, 400, 401, 402, 403, 425, 426, 427, 428, 429, 430, 431, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496

;; Pred edge  2 [39.0%]  (fallthru)
(note 95 94 99 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 99 95 100 3 arch/arm/kernel/signal.c:188 (set (reg:SI 0 r0)
        (reg:SI 186)) 167 {*arm_movsi_insn} (nil))

(call_insn 100 99 101 3 arch/arm/kernel/signal.c:188 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_sync_hwstate") [flags 0x41] <function_decl 0x10b07680 vfp_sync_hwstate>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 101 100 103 3 arch/arm/kernel/signal.c:189 discrim 4 (set (reg:SI 205)
        (const_int 1447448577 [0x56465001])) 167 {*arm_movsi_insn} (nil))

(insn 103 101 104 3 arch/arm/kernel/signal.c:189 discrim 4 (parallel [
            (set (reg/v:SI 138 [ err ])
                (asm_operands/v:SI ("1:	str	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg:SI 205)
                        (reg/v/f:SI 144 [ aux ])
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 143 [ err ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8690973))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg:SI 205)
        (expr_list:REG_DEAD (reg/v:SI 143 [ err ])
            (expr_list:REG_UNUSED (reg:QI 24 cc)
                (nil)))))

(insn 104 103 105 3 arch/arm/kernel/signal.c:190 discrim 4 (set (reg:SI 207)
        (const_int 288 [0x120])) 167 {*arm_movsi_insn} (nil))

(insn 105 104 106 3 arch/arm/kernel/signal.c:190 discrim 4 (set (reg/f:SI 208)
        (plus:SI (reg/v/f:SI 148 [ sf ])
            (const_int 236 [0xec]))) 4 {*arm_addsi3} (nil))

(insn 106 105 107 3 arch/arm/kernel/signal.c:190 discrim 4 (parallel [
            (set (reg/v:SI 138 [ err ])
                (asm_operands/v:SI ("1:	str	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg:SI 207)
                        (reg/f:SI 208)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 138 [ err ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8690978))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/f:SI 208)
        (expr_list:REG_DEAD (reg:SI 207)
            (expr_list:REG_UNUSED (reg:QI 24 cc)
                (nil)))))

(insn 107 106 108 3 arch/arm/kernel/signal.c:196 (set (reg/f:SI 209)
        (plus:SI (reg/v/f:SI 148 [ sf ])
            (const_int 240 [0xf0]))) 4 {*arm_addsi3} (nil))

(insn 108 107 109 3 arch/arm/kernel/signal.c:196 (set (reg/f:SI 210)
        (plus:SI (reg:SI 186)
            (const_int 432 [0x1b0]))) 4 {*arm_addsi3} (nil))

(insn 109 108 110 3 arch/arm/kernel/signal.c:196 (set (reg:SI 0 r0)
        (reg/f:SI 209)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 209)
        (nil)))

(insn 110 109 111 3 arch/arm/kernel/signal.c:196 (set (reg:SI 1 r1)
        (reg/f:SI 210)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 210)
        (nil)))

(insn 111 110 112 3 arch/arm/kernel/signal.c:196 (set (reg:SI 2 r2)
        (const_int 256 [0x100])) 167 {*arm_movsi_insn} (nil))

(call_insn 112 111 113 3 arch/arm/kernel/signal.c:196 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__copy_to_user") [flags 0x41] <function_decl 0x10f3df00 __copy_to_user>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 113 112 114 3 arch/arm/kernel/signal.c:196 (set (reg:SI 135 [ D.25345 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 114 113 116 3 arch/arm/kernel/signal.c:196 (set (reg:SI 136 [ D.25344 ])
        (ior:SI (reg/v:SI 138 [ err ])
            (reg:SI 135 [ D.25345 ]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg/v:SI 138 [ err ])
        (expr_list:REG_DEAD (reg:SI 135 [ D.25345 ])
            (nil))))

(insn 116 114 117 3 arch/arm/kernel/signal.c:201 discrim 4 (set (reg:SI 211 [ <variable>.vfpstate.hard.fpscr ])
        (mem/s/j:SI (plus:SI (reg:SI 186)
                (const_int 692 [0x2b4])) [0 <variable>.vfpstate.hard.fpscr+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 117 116 118 3 arch/arm/kernel/signal.c:201 discrim 4 (set (reg/f:SI 212)
        (plus:SI (reg/v/f:SI 148 [ sf ])
            (const_int 496 [0x1f0]))) 4 {*arm_addsi3} (nil))

(insn 118 117 119 3 arch/arm/kernel/signal.c:201 discrim 4 (parallel [
            (set (reg/v:SI 133 [ err.383 ])
                (asm_operands/v:SI ("1:	str	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg:SI 211 [ <variable>.vfpstate.hard.fpscr ])
                        (reg/f:SI 212)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg:SI 136 [ D.25344 ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8690983))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/f:SI 212)
        (expr_list:REG_DEAD (reg:SI 211 [ <variable>.vfpstate.hard.fpscr ])
            (expr_list:REG_DEAD (reg:SI 136 [ D.25344 ])
                (expr_list:REG_UNUSED (reg:QI 24 cc)
                    (nil))))))

(insn 119 118 120 3 arch/arm/kernel/signal.c:206 discrim 4 (set (reg:SI 213 [ <variable>.vfpstate.hard.fpexc ])
        (mem/s/j:SI (plus:SI (reg:SI 186)
                (const_int 688 [0x2b0])) [0 <variable>.vfpstate.hard.fpexc+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 120 119 121 3 arch/arm/kernel/signal.c:206 discrim 4 (set (reg/f:SI 214)
        (plus:SI (reg/v/f:SI 148 [ sf ])
            (const_int 504 [0x1f8]))) 4 {*arm_addsi3} (nil))

(insn 121 120 122 3 arch/arm/kernel/signal.c:206 discrim 4 (parallel [
            (set (reg/v:SI 133 [ err.383 ])
                (asm_operands/v:SI ("1:	str	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg:SI 213 [ <variable>.vfpstate.hard.fpexc ])
                        (reg/f:SI 214)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 133 [ err.383 ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8690988))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/f:SI 214)
        (expr_list:REG_DEAD (reg:SI 213 [ <variable>.vfpstate.hard.fpexc ])
            (expr_list:REG_UNUSED (reg:QI 24 cc)
                (nil)))))

(insn 122 121 123 3 arch/arm/kernel/signal.c:207 discrim 4 (set (reg:SI 215 [ <variable>.vfpstate.hard.fpinst ])
        (mem/s/j:SI (plus:SI (reg:SI 186)
                (const_int 696 [0x2b8])) [0 <variable>.vfpstate.hard.fpinst+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 123 122 124 3 arch/arm/kernel/signal.c:207 discrim 4 (set (reg/f:SI 216)
        (plus:SI (reg/v/f:SI 148 [ sf ])
            (const_int 508 [0x1fc]))) 4 {*arm_addsi3} (nil))

(insn 124 123 125 3 arch/arm/kernel/signal.c:207 discrim 4 (parallel [
            (set (reg/v:SI 133 [ err.383 ])
                (asm_operands/v:SI ("1:	str	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg:SI 215 [ <variable>.vfpstate.hard.fpinst ])
                        (reg/f:SI 216)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 133 [ err.383 ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8690993))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/f:SI 216)
        (expr_list:REG_DEAD (reg:SI 215 [ <variable>.vfpstate.hard.fpinst ])
            (expr_list:REG_UNUSED (reg:QI 24 cc)
                (nil)))))

(insn 125 124 126 3 arch/arm/kernel/signal.c:208 discrim 4 (set (reg:SI 217 [ <variable>.vfpstate.hard.fpinst2 ])
        (mem/s/j:SI (plus:SI (reg:SI 186)
                (const_int 700 [0x2bc])) [0 <variable>.vfpstate.hard.fpinst2+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 186)
        (nil)))

(insn 126 125 127 3 arch/arm/kernel/signal.c:208 discrim 4 (set (reg/f:SI 218)
        (plus:SI (reg/v/f:SI 148 [ sf ])
            (const_int 512 [0x200]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/v/f:SI 148 [ sf ])
        (nil)))

(insn 127 126 128 3 arch/arm/kernel/signal.c:208 discrim 4 (parallel [
            (set (reg/v:SI 133 [ err.383 ])
                (asm_operands/v:SI ("1:	str	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg:SI 217 [ <variable>.vfpstate.hard.fpinst2 ])
                        (reg/f:SI 218)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 133 [ err.383 ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8690998))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/f:SI 218)
        (expr_list:REG_DEAD (reg:SI 217 [ <variable>.vfpstate.hard.fpinst2 ])
            (expr_list:REG_UNUSED (reg:QI 24 cc)
                (nil)))))

(insn 128 127 152 3 arch/arm/kernel/signal.c:210 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 133 [ err.383 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 133 [ err.383 ])
        (nil)))

(insn 152 128 132 3 arch/arm/kernel/signal.c:210 discrim 1 (set (reg/v:SI 143 [ err ])
        (if_then_else:SI (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (const_int 0 [0x0])
            (const_int -14 [0xfffffffffffffff2]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144
;; rd  out 	(81)
2, 13, 19, 23, 24, 28, 29, 64, 94, 95, 400, 404, 425, 426, 428, 429, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u177(11){ }u178(13){ }u179(25){ }u180(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144
;; lr  def 	 0 [r0] 24 [cc] 143 219 220
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144
;; live  gen 	 0 [r0] 143 219 220
;; live  kill	 24 [cc]
;; rd  in  	(84)
2, 5, 13, 19, 23, 24, 28, 29, 64, 71, 94, 95, 400, 404, 425, 426, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496
;; rd  gen 	(4)
0, 431, 497, 498
;; rd  kill	(13)
0, 1, 2, 3, 4, 5, 6, 7, 429, 430, 431, 497, 498

;; Pred edge  2 [61.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 132 152 133 4 17 "" [1 uses])

(note 133 132 134 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 134 133 135 4 arch/arm/kernel/signal.c:434 discrim 4 (set (reg:SI 219)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 135 134 136 4 arch/arm/kernel/signal.c:434 discrim 4 (set (reg/f:SI 220)
        (plus:SI (reg/v/f:SI 144 [ aux ])
            (const_int 288 [0x120]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/v/f:SI 144 [ aux ])
        (nil)))

(insn 136 135 141 4 arch/arm/kernel/signal.c:434 discrim 4 (parallel [
            (set (reg/v:SI 143 [ err ])
                (asm_operands/v:SI ("1:	str	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg:SI 219)
                        (reg/f:SI 220)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 143 [ err ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8690968))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/f:SI 220)
        (expr_list:REG_DEAD (reg:SI 219)
            (expr_list:REG_UNUSED (reg:QI 24 cc)
                (nil)))))

(insn 141 136 147 4 arch/arm/kernel/signal.c:437 (set (reg/i:SI 0 r0)
        (reg/v:SI 143 [ err ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 143 [ err ])
        (nil)))

(insn 147 141 0 4 arch/arm/kernel/signal.c:437 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 4 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(82)
0, 13, 19, 23, 24, 28, 29, 94, 95, 400, 404, 425, 426, 428, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function do_signal (do_signal)[0:1452]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 73 n_edges 116 count 142 (  1.9)
df_worklist_dataflow_doublequeue:n_basic_blocks 73 n_edges 116 count 144 (    2)
df_worklist_dataflow_doublequeue:n_basic_blocks 73 n_edges 116 count 144 (    2)


do_signal

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={31d,22u} r1={29d,13u} r2={24d,7u} r3={20d,3u} r11={1d,72u} r12={17d} r13={1d,102u,12d} r14={17d,1u} r15={16d} r16={16d} r17={16d} r18={16d} r19={16d} r20={16d} r21={16d} r22={16d} r23={16d} r24={68d,48u} r25={1d,87u,7d} r26={1d,71u} r27={16d} r28={16d} r29={16d} r30={16d} r31={16d} r32={16d} r33={16d} r34={16d} r35={16d} r36={16d} r37={16d} r38={16d} r39={16d} r40={16d} r41={16d} r42={16d} r43={16d} r44={16d} r45={16d} r46={16d} r47={16d} r48={16d} r49={16d} r50={16d} r51={16d} r52={16d} r53={16d} r54={16d} r55={16d} r56={16d} r57={16d} r58={16d} r59={16d} r60={16d} r61={16d} r62={16d} r63={16d} r64={16d} r65={16d} r66={16d} r67={16d} r68={16d} r69={16d} r70={16d} r71={16d} r72={16d} r73={16d} r74={16d} r75={16d} r76={16d} r77={16d} r78={16d} r79={16d} r80={16d} r81={16d} r82={16d} r83={16d} r84={16d} r85={16d} r86={16d} r87={16d} r88={16d} r89={16d} r90={16d} r91={16d} r92={16d} r93={16d} r94={16d} r95={16d} r96={16d} r97={16d} r98={16d} r99={16d} r100={16d} r101={16d} r102={16d} r103={16d} r104={16d} r105={16d} r106={16d} r107={16d} r108={16d} r109={16d} r110={16d} r111={16d} r112={16d} r113={16d} r114={16d} r115={16d} r116={16d} r117={16d} r118={16d} r119={16d} r120={16d} r121={16d} r122={16d} r123={16d} r124={16d} r125={16d} r126={16d} r127={16d} r133={2d,2u} r136={1d,3u} r137={1d,1u} r140={1d,2u} r141={1d,1u} r143={1d,2u} r144={1d,2u} r146={1d,2u} r147={1d,9u} r148={5d,4u} r156={3d,1u} r158={2d,3u} r159={2d,11u} r160={1d,1u} r161={1d} r169={2d,2u} r171={1d,1u} r172={1d,1u} r173={1d,1u} r174={1d,2u} r175={1d,1u} r177={2d,3u} r178={1d,6u} r179={1d,2u} r180={1d} r188={1d,1u} r190={1d,1u} r191={3d,1u} r192={1d,2u} r193={1d,2u} r194={1d,2u} r195={1d,3u} r196={1d,1u} r197={1d,2u} r200={1d,2u} r201={1d,1u} r204={1d,1u} r205={1d,1u} r206={2d,2u} r207={1d,6u} r208={2d,2u} r209={2d,5u} r210={2d,5u,2d} r211={1d,1u} r212={1d,2u} r213={1d,29u,2d} r214={1d,5u} r215={1d,1u} r216={1d,1u} r217={1d,1u} r218={1d,1u} r219={1d,1u} r220={1d,1u} r221={1d,1u} r222={1d,1u} r223={1d,1u} r224={1d,2u} r225={1d,1u} r226={1d,1u} r227={1d,1u} r228={1d,1u} r229={1d,1u} r230={1d,1u} r231={1d,1u} r232={1d,1u} r233={1d,1u} r240={1d,2u} r241={1d,1u} r244={1d,1u} r246={1d,1u} r247={1d,1u} r248={1d,2u} r249={1d,2u} r253={1d,2u} r257={1d,1u} r263={1d,1u} r264={1d,2u} r265={1d,1u} r266={1d,1u} r267={1d,1u} r268={1d,3u} r269={1d,1u} r271={1d,1u} r272={1d,1u} r275={1d,3u} r276={1d,1u} r280={1d,2u} r284={1d,2u} r288={1d,1u} r296={1d,1u} r297={1d,1u} r298={1d,1u} r299={1d,1u} r300={1d,1u} r301={1d,1u} r302={1d,2u} r303={1d,1u} r304={1d,1u} r307={1d,1u} r308={1d,1u} r309={1d,2u} r310={1d,2u} r314={1d,2u} r318={1d,1u} r324={1d,1u} r325={1d,1u} r326={1d,1u} r327={1d,1u} r328={1d,1u} r330={1d,1u} r331={1d,1u} r332={1d,1u} r334={1d,1u} r335={1d,1u} r336={1d,1u} r337={1d,1u} r339={1d,1u} r341={1d,1u} r342={1d,1u} r343={1d,1u} r344={1d,1u} r345={1d,2u} r346={1d,1u} r347={1d,1u} r348={1d,1u} r349={1d,1u} r350={1d,1u} r351={1d,1u,1d} r352={1d,1u} r353={1d,1u} r354={1d,1u} r355={1d,1u} r356={1d,1u} r357={1d,1u} r358={1d,1u} r359={1d,1u} r360={1d,1u} r361={1d,2u} r363={1d,1u,1d} r364={1d,1u} r365={1d,1u} r366={1d,1u} r367={1d,1u} r368={1d,1u} r369={1d,1u,1d} r370={1d,1u} r371={1d,1u} r372={1d,1u} r375={1d,1u} r376={1d,2u} r377={1d,1u} r378={1d,1u} r380={1d,1u} r383={1d,1u} r384={1d,1u} r385={1d,1u} r390={1d,1u} r391={1d,1u} r392={1d,1u} r393={1d,1u} r394={1d,2u} r398={1d,1u} r399={1d,1u} r400={1d,1u} r401={1d,1u} r402={1d,2u} r406={1d,1u} r407={1d,1u} r408={1d,2u} r409={1d,2u} r410={1d,2u} 
;;    total ref usage 2898{2158d,714u,26e} in 368{352 regular + 16 call} insns.
;; Reaching defs:

  sparse invalidated 	24
  dense invalidated 	
0[0,31] 1[31,29] 2[60,24] 3[84,20] 11[104,1] 12[105,17] 13[122,1] 14[123,17] 15[140,16] 16[156,16] 17[172,16] 18[188,16] 19[204,16] 20[220,16] 21[236,16] 22[252,16] 23[268,16] 24[284,68] 25[352,1] 26[353,1] 27[354,16] 28[370,16] 29[386,16] 30[402,16] 31[418,16] 32[434,16] 33[450,16] 34[466,16] 35[482,16] 36[498,16] 37[514,16] 38[530,16] 39[546,16] 40[562,16] 41[578,16] 42[594,16] 43[610,16] 44[626,16] 45[642,16] 46[658,16] 47[674,16] 48[690,16] 49[706,16] 50[722,16] 51[738,16] 52[754,16] 53[770,16] 54[786,16] 55[802,16] 56[818,16] 57[834,16] 58[850,16] 59[866,16] 60[882,16] 61[898,16] 62[914,16] 63[930,16] 64[946,16] 65[962,16] 66[978,16] 67[994,16] 68[1010,16] 69[1026,16] 70[1042,16] 71[1058,16] 72[1074,16] 73[1090,16] 74[1106,16] 75[1122,16] 76[1138,16] 77[1154,16] 78[1170,16] 79[1186,16] 80[1202,16] 81[1218,16] 82[1234,16] 83[1250,16] 84[1266,16] 85[1282,16] 86[1298,16] 87[1314,16] 88[1330,16] 89[1346,16] 90[1362,16] 91[1378,16] 92[1394,16] 93[1410,16] 94[1426,16] 95[1442,16] 96[1458,16] 97[1474,16] 98[1490,16] 99[1506,16] 100[1522,16] 101[1538,16] 102[1554,16] 103[1570,16] 104[1586,16] 105[1602,16] 106[1618,16] 107[1634,16] 108[1650,16] 109[1666,16] 110[1682,16] 111[1698,16] 112[1714,16] 113[1730,16] 114[1746,16] 115[1762,16] 116[1778,16] 117[1794,16] 118[1810,16] 119[1826,16] 120[1842,16] 121[1858,16] 122[1874,16] 123[1890,16] 124[1906,16] 125[1922,16] 126[1938,16] 127[1954,16] 133[1970,2] 136[1972,1] 137[1973,1] 140[1974,1] 141[1975,1] 143[1976,1] 144[1977,1] 146[1978,1] 147[1979,1] 148[1980,5] 156[1985,3] 158[1988,2] 159[1990,2] 160[1992,1] 161[1993,1] 169[1994,2] 171[1996,1] 172[1997,1] 173[1998,1] 174[1999,1] 175[2000,1] 177[2001,2] 178[2003,1] 179[2004,1] 180[2005,1] 188[2006,1] 190[2007,1] 191[2008,3] 192[2011,1] 193[2012,1] 194[2013,1] 195[2014,1] 196[2015,1] 197[2016,1] 200[2017,1] 201[2018,1] 204[2019,1] 205[2020,1] 206[2021,2] 207[2023,1] 208[2024,2] 209[2026,2] 210[2028,2] 211[2030,1] 212[2031,1] 213[2032,1] 214[2033,1] 215[2034,1] 216[2035,1] 217[2036,1] 218[2037,1] 219[2038,1] 220[2039,1] 221[2040,1] 222[2041,1] 223[2042,1] 224[2043,1] 225[2044,1] 226[2045,1] 227[2046,1] 228[2047,1] 229[2048,1] 230[2049,1] 231[2050,1] 232[2051,1] 233[2052,1] 240[2053,1] 241[2054,1] 244[2055,1] 246[2056,1] 247[2057,1] 248[2058,1] 249[2059,1] 253[2060,1] 257[2061,1] 263[2062,1] 264[2063,1] 265[2064,1] 266[2065,1] 267[2066,1] 268[2067,1] 269[2068,1] 271[2069,1] 272[2070,1] 275[2071,1] 276[2072,1] 280[2073,1] 284[2074,1] 288[2075,1] 296[2076,1] 297[2077,1] 298[2078,1] 299[2079,1] 300[2080,1] 301[2081,1] 302[2082,1] 303[2083,1] 304[2084,1] 307[2085,1] 308[2086,1] 309[2087,1] 310[2088,1] 314[2089,1] 318[2090,1] 324[2091,1] 325[2092,1] 326[2093,1] 327[2094,1] 328[2095,1] 330[2096,1] 331[2097,1] 332[2098,1] 334[2099,1] 335[2100,1] 336[2101,1] 337[2102,1] 339[2103,1] 341[2104,1] 342[2105,1] 343[2106,1] 344[2107,1] 345[2108,1] 346[2109,1] 347[2110,1] 348[2111,1] 349[2112,1] 350[2113,1] 351[2114,1] 352[2115,1] 353[2116,1] 354[2117,1] 355[2118,1] 356[2119,1] 357[2120,1] 358[2121,1] 359[2122,1] 360[2123,1] 361[2124,1] 363[2125,1] 364[2126,1] 365[2127,1] 366[2128,1] 367[2129,1] 368[2130,1] 369[2131,1] 370[2132,1] 371[2133,1] 372[2134,1] 375[2135,1] 376[2136,1] 377[2137,1] 378[2138,1] 380[2139,1] 383[2140,1] 384[2141,1] 385[2142,1] 390[2143,1] 391[2144,1] 392[2145,1] 393[2146,1] 394[2147,1] 398[2148,1] 399[2149,1] 400[2150,1] 401[2151,1] 402[2152,1] 406[2153,1] 407[2154,1] 408[2155,1] 409[2156,1] 410[2157,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d30(0){ }d59(1){ }d83(2){ }d103(3){ }d104(11){ }d121(12){ }d122(13){ }d139(14){ }d352(25){ }d353(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
30, 59, 83, 103, 104, 121, 122, 139, 352, 353
;; rd  kill	(142)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 352, 353
;; lr  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
30, 59, 83, 103, 104, 121, 122, 139, 352, 353

( 0 )->[2]->( 72 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d104(bb 0 insn -1) }u1(13){ d122(bb 0 insn -1) }u2(25){ d352(bb 0 insn -1) }u3(26){ d353(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 212 213 214 215
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 212 213 214 215
;; live  kill	
;; rd  in  	(10)
30, 59, 83, 103, 104, 121, 122, 139, 352, 353
;; rd  gen 	(5)
351, 2031, 2032, 2033, 2034
;; rd  kill	(4)
2031, 2032, 2033, 2034
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 212 213 214
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 212 213 214
;; rd  out 	(15)
30, 59, 83, 103, 104, 121, 122, 139, 351, 352, 353, 2031, 2032, 2033, 2034
;;  UD chains for artificial uses
;;   reg 11 { d104(bb 0 insn -1) }
;;   reg 13 { d122(bb 0 insn -1) }
;;   reg 25 { d352(bb 0 insn -1) }
;;   reg 26 { d353(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d30(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 3
;;      reg 1 { d59(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 7
;;      reg 213 { d2032(bb 2 insn 2) }
;;   UD chains for insn luid 3 uid 8
;;      reg 212 { d2031(bb 2 insn 7) }
;;   UD chains for insn luid 4 uid 9
;;      reg 215 { d2034(bb 2 insn 8) }
;;   UD chains for insn luid 5 uid 10
;;      reg 24 { d351(bb 2 insn 9) }

( 2 )->[3]->( 5 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u10(11){ d104(bb 0 insn -1) }u11(13){ d122(bb 0 insn -1) }u12(25){ d352(bb 0 insn -1) }u13(26){ d353(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 212 213 214
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 214
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 212 213 214
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(15)
30, 59, 83, 103, 104, 121, 122, 139, 351, 352, 353, 2031, 2032, 2033, 2034
;; rd  gen 	(1)
350
;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 212 213 214
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 212 213 214
;; rd  out 	(15)
30, 59, 83, 103, 104, 121, 122, 139, 350, 352, 353, 2031, 2032, 2033, 2034
;;  UD chains for artificial uses
;;   reg 11 { d104(bb 0 insn -1) }
;;   reg 13 { d122(bb 0 insn -1) }
;;   reg 25 { d352(bb 0 insn -1) }
;;   reg 26 { d353(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 12
;;      reg 214 { d2033(bb 2 insn 3) }
;;   UD chains for insn luid 1 uid 13
;;      reg 24 { d350(bb 3 insn 12) }

( 3 )->[4]->( 10 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u16(11){ d104(bb 0 insn -1) }u17(13){ d122(bb 0 insn -1) }u18(25){ d352(bb 0 insn -1) }u19(26){ d353(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 213 214
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 214
;; lr  def 	 208 209 210
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 213 214
;; live  gen 	 208 209 210
;; live  kill	
;; rd  in  	(15)
30, 59, 83, 103, 104, 121, 122, 139, 350, 352, 353, 2031, 2032, 2033, 2034
;; rd  gen 	(3)
2024, 2026, 2028
;; rd  kill	(6)
2024, 2025, 2026, 2027, 2028, 2029
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 208 209 210 213 214
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 208 209 210 213 214
;; rd  out 	(18)
30, 59, 83, 103, 104, 121, 122, 139, 350, 352, 353, 2024, 2026, 2028, 2031, 2032, 2033, 2034
;;  UD chains for artificial uses
;;   reg 11 { d104(bb 0 insn -1) }
;;   reg 13 { d122(bb 0 insn -1) }
;;   reg 25 { d352(bb 0 insn -1) }
;;   reg 26 { d353(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 15
;;      reg 214 { d2033(bb 2 insn 3) }
;;   UD chains for insn luid 1 uid 16
;;      reg 214 { d2033(bb 2 insn 3) }
;;   UD chains for insn luid 2 uid 17
;;      reg 214 { d2033(bb 2 insn 3) }

( 3 )->[5]->( 9 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u23(11){ d104(bb 0 insn -1) }u24(13){ d122(bb 0 insn -1) }u25(25){ d352(bb 0 insn -1) }u26(26){ d353(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 212 213 214
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 212 213
;; lr  def 	 24 [cc] 208 209 210 211 216
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 212 213 214
;; live  gen 	 24 [cc] 208 209 210 211 216
;; live  kill	
;; rd  in  	(15)
30, 59, 83, 103, 104, 121, 122, 139, 350, 352, 353, 2031, 2032, 2033, 2034
;; rd  gen 	(6)
348, 2025, 2027, 2029, 2030, 2035
;; rd  kill	(8)
2024, 2025, 2026, 2027, 2028, 2029, 2030, 2035
;; lr  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 208 209 210 213 214
;; live  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 208 209 210 213 214
;; rd  out 	(20)
30, 59, 83, 103, 104, 121, 122, 139, 348, 352, 353, 2025, 2027, 2029, 2030, 2031, 2032, 2033, 2034, 2035
;;  UD chains for artificial uses
;;   reg 11 { d104(bb 0 insn -1) }
;;   reg 13 { d122(bb 0 insn -1) }
;;   reg 25 { d352(bb 0 insn -1) }
;;   reg 26 { d353(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 22
;;      reg 213 { d2032(bb 2 insn 2) }
;;   UD chains for insn luid 1 uid 23
;;      reg 212 { d2031(bb 2 insn 7) }
;;   UD chains for insn luid 2 uid 24
;;      reg 216 { d2035(bb 5 insn 23) }
;;   UD chains for insn luid 3 uid 635
;;      reg 24 { d349(bb 5 insn 24) }
;;   UD chains for insn luid 4 uid 35
;;      reg 209 { d2027(bb 5 insn 22) }
;;      reg 211 { d2030(bb 5 insn 635) }
;;   UD chains for insn luid 5 uid 36
;;      reg 213 { d2032(bb 2 insn 2) }
;;   UD chains for insn luid 6 uid 37
;;      reg 210 { d2029(bb 5 insn 36) }
;;   UD chains for insn luid 7 uid 38
;;      reg 24 { d348(bb 5 insn 37) }

( 5 )->[6]->( 10 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u36(11){ d104(bb 0 insn -1) }u37(13){ d122(bb 0 insn -1) }u38(25){ d352(bb 0 insn -1) }u39(26){ d353(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 208 209 210 213 214
;; lr  use 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 208 209 210 213 214
;; live  gen 	
;; live  kill	
;; rd  in  	(20)
30, 59, 83, 103, 104, 121, 122, 139, 348, 352, 353, 2025, 2027, 2029, 2030, 2031, 2032, 2033, 2034, 2035
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 208 209 210 213 214
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 208 209 210 213 214
;; rd  out 	(20)
30, 59, 83, 103, 104, 121, 122, 139, 348, 352, 353, 2025, 2027, 2029, 2030, 2031, 2032, 2033, 2034, 2035
;;  UD chains for artificial uses
;;   reg 11 { d104(bb 0 insn -1) }
;;   reg 13 { d122(bb 0 insn -1) }
;;   reg 25 { d352(bb 0 insn -1) }
;;   reg 26 { d353(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 40
;;      reg 24 { d348(bb 5 insn 37) }

( 6 )->[7]->( 10 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u41(11){ d104(bb 0 insn -1) }u42(13){ d122(bb 0 insn -1) }u43(25){ d352(bb 0 insn -1) }u44(26){ d353(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 208 209 210 213 214
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 210
;; lr  def 	 24 [cc] 217 218
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 208 209 210 213 214
;; live  gen 	 24 [cc] 217 218
;; live  kill	
;; rd  in  	(20)
30, 59, 83, 103, 104, 121, 122, 139, 348, 352, 353, 2025, 2027, 2029, 2030, 2031, 2032, 2033, 2034, 2035
;; rd  gen 	(3)
347, 2036, 2037
;; rd  kill	(2)
2036, 2037
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 208 209 210 213 214
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 208 209 210 213 214
;; rd  out 	(22)
30, 59, 83, 103, 104, 121, 122, 139, 347, 352, 353, 2025, 2027, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037
;;  UD chains for artificial uses
;;   reg 11 { d104(bb 0 insn -1) }
;;   reg 13 { d122(bb 0 insn -1) }
;;   reg 25 { d352(bb 0 insn -1) }
;;   reg 26 { d353(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 41
;;      reg 210 { d2029(bb 5 insn 36) }
;;   UD chains for insn luid 1 uid 42
;;      reg 218 { d2037(bb 7 insn 41) }
;;   eq_note reg 210 { }
;;   UD chains for insn luid 2 uid 43
;;      reg 217 { d2036(bb 7 insn 42) }
;;   UD chains for insn luid 3 uid 44
;;      reg 24 { d347(bb 7 insn 43) }

( 7 )->[8]->( 10 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u50(11){ d104(bb 0 insn -1) }u51(13){ d122(bb 0 insn -1) }u52(25){ d352(bb 0 insn -1) }u53(26){ d353(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 208 209 210 213 214
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 208 213
;; lr  def 	 219
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 208 209 210 213 214
;; live  gen 	 219
;; live  kill	
;; rd  in  	(22)
30, 59, 83, 103, 104, 121, 122, 139, 347, 352, 353, 2025, 2027, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037
;; rd  gen 	(1)
2038
;; rd  kill	(1)
2038
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 208 209 210 213 214
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 208 209 210 213 214
;; rd  out 	(23)
30, 59, 83, 103, 104, 121, 122, 139, 347, 352, 353, 2025, 2027, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038
;;  UD chains for artificial uses
;;   reg 11 { d104(bb 0 insn -1) }
;;   reg 13 { d122(bb 0 insn -1) }
;;   reg 25 { d352(bb 0 insn -1) }
;;   reg 26 { d353(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 51
;;      reg 213 { d2032(bb 2 insn 2) }
;;   UD chains for insn luid 1 uid 52
;;      reg 213 { d2032(bb 2 insn 2) }
;;      reg 219 { d2038(bb 8 insn 51) }
;;   UD chains for insn luid 2 uid 53
;;      reg 208 { d2025(bb 5 insn 35) }
;;      reg 213 { d2032(bb 2 insn 2) }

( 5 )->[9]->( 10 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u59(11){ d104(bb 0 insn -1) }u60(13){ d122(bb 0 insn -1) }u61(25){ d352(bb 0 insn -1) }u62(26){ d353(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 208 209 210 213 214
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 213
;; lr  def 	 220
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 208 209 210 213 214
;; live  gen 	 220
;; live  kill	
;; rd  in  	(20)
30, 59, 83, 103, 104, 121, 122, 139, 348, 352, 353, 2025, 2027, 2029, 2030, 2031, 2032, 2033, 2034, 2035
;; rd  gen 	(1)
2039
;; rd  kill	(1)
2039
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 208 209 210 213 214
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 208 209 210 213 214
;; rd  out 	(21)
30, 59, 83, 103, 104, 121, 122, 139, 348, 352, 353, 2025, 2027, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2039
;;  UD chains for artificial uses
;;   reg 11 { d104(bb 0 insn -1) }
;;   reg 13 { d122(bb 0 insn -1) }
;;   reg 25 { d352(bb 0 insn -1) }
;;   reg 26 { d353(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 59
;;      reg 213 { d2032(bb 2 insn 2) }
;;      reg 220 { d2039(bb 9 insn 58) }

( 6 7 4 9 8 )->[10]->( 11 12 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u65(11){ d104(bb 0 insn -1) }u66(13){ d122(bb 0 insn -1) }u67(25){ d352(bb 0 insn -1) }u68(26){ d353(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 208 209 210 213 214
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 204 205 221 222 223 224
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 208 209 210 213 214
;; live  gen 	 24 [cc] 204 205 221 222 223 224
;; live  kill	
;; rd  in  	(29)
30, 59, 83, 103, 104, 121, 122, 139, 347, 348, 350, 352, 353, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039
;; rd  gen 	(7)
346, 2019, 2020, 2040, 2041, 2042, 2043
;; rd  kill	(6)
2019, 2020, 2040, 2041, 2042, 2043
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 208 209 210 213 214 224
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 208 209 210 213 214 224
;; rd  out 	(33)
30, 59, 83, 103, 104, 121, 122, 139, 346, 352, 353, 2019, 2020, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043
;;  UD chains for artificial uses
;;   reg 11 { d104(bb 0 insn -1) }
;;   reg 13 { d122(bb 0 insn -1) }
;;   reg 25 { d352(bb 0 insn -1) }
;;   reg 26 { d353(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 63
;;      reg 13 { d122(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 64
;;      reg 222 { d2041(bb 10 insn 63) }
;;   eq_note reg 13 { }
;;   UD chains for insn luid 2 uid 65
;;      reg 221 { d2040(bb 10 insn 64) }
;;   UD chains for insn luid 3 uid 66
;;      reg 223 { d2042(bb 10 insn 65) }
;;   UD chains for insn luid 4 uid 67
;;      reg 205 { d2020(bb 10 insn 66) }
;;   UD chains for insn luid 5 uid 68
;;      reg 204 { d2019(bb 10 insn 67) }
;;   UD chains for insn luid 6 uid 69
;;      reg 224 { d2043(bb 10 insn 68) }
;;   UD chains for insn luid 7 uid 70
;;      reg 24 { d346(bb 10 insn 69) }

( 10 )->[11]->( 62 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u78(11){ d104(bb 0 insn -1) }u79(13){ d122(bb 0 insn -1) }u80(25){ d352(bb 0 insn -1) }u81(26){ d353(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 209 210 213 214
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 209 210 213 214
;; live  gen 	
;; live  kill	 14 [lr]
;; rd  in  	(33)
30, 59, 83, 103, 104, 121, 122, 139, 346, 352, 353, 2019, 2020, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043
;; rd  gen 	(0)

;; rd  kill	(17)
123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 209 210 213 214
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 209 210 213 214
;; rd  out 	(32)
30, 59, 83, 103, 104, 121, 122, 346, 352, 353, 2019, 2020, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043
;;  UD chains for artificial uses
;;   reg 11 { d104(bb 0 insn -1) }
;;   reg 13 { d122(bb 0 insn -1) }
;;   reg 25 { d352(bb 0 insn -1) }
;;   reg 26 { d353(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 72
;;      reg 13 { d122(bb 0 insn -1) }

( 10 )->[12]->( 13 62 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u83(11){ d104(bb 0 insn -1) }u84(13){ d122(bb 0 insn -1) }u85(25){ d352(bb 0 insn -1) }u86(26){ d353(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 208 209 210 213 214 224
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 213 224
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 207 225 226
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 208 209 210 213 214 224
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc] 207 225 226
;; live  kill	 14 [lr]
;; rd  in  	(33)
30, 59, 83, 103, 104, 121, 122, 139, 346, 352, 353, 2019, 2020, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043
;; rd  gen 	(5)
27, 343, 2023, 2044, 2045
;; rd  kill	(51)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 2023, 2044, 2045
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 207 208 209 210 213 214
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 208 209 210 213 214
;; rd  out 	(35)
27, 59, 83, 103, 104, 121, 122, 343, 352, 353, 2019, 2020, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045
;;  UD chains for artificial uses
;;   reg 11 { d104(bb 0 insn -1) }
;;   reg 13 { d122(bb 0 insn -1) }
;;   reg 25 { d352(bb 0 insn -1) }
;;   reg 26 { d353(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 77
;;      reg 25 { d352(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 78
;;      reg 25 { d352(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 79
;;      reg 225 { d2044(bb 12 insn 77) }
;;   eq_note reg 25 { }
;;   UD chains for insn luid 3 uid 80
;;      reg 226 { d2045(bb 12 insn 78) }
;;   eq_note reg 25 { }
;;   UD chains for insn luid 4 uid 81
;;      reg 213 { d2032(bb 2 insn 2) }
;;   UD chains for insn luid 5 uid 82
;;      reg 224 { d2043(bb 10 insn 68) }
;;   UD chains for insn luid 6 uid 83
;;      reg 13 { d122(bb 0 insn -1) }
;;      reg 0 { d28(bb 12 insn 79) }
;;      reg 1 { d57(bb 12 insn 80) }
;;      reg 2 { d81(bb 12 insn 81) }
;;      reg 3 { d86(bb 12 insn 82) }
;;   UD chains for insn luid 7 uid 84
;;      reg 0 { d27(bb 12 insn 83) }
;;   UD chains for insn luid 8 uid 85
;;      reg 207 { d2023(bb 12 insn 84) }
;;   UD chains for insn luid 9 uid 86
;;      reg 24 { d343(bb 12 insn 85) }

( 12 )->[13]->( 14 18 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u103(11){ d104(bb 0 insn -1) }u104(13){ d122(bb 0 insn -1) }u105(25){ d352(bb 0 insn -1) }u106(26){ d353(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 208 209 210 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 208 213
;; lr  def 	 24 [cc] 227
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 208 209 210 213
;; live  gen 	 24 [cc] 227
;; live  kill	
;; rd  in  	(35)
27, 59, 83, 103, 104, 121, 122, 343, 352, 353, 2019, 2020, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045
;; rd  gen 	(2)
342, 2046
;; rd  kill	(1)
2046
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 209 210 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 209 210 213
;; rd  out 	(36)
27, 59, 83, 103, 104, 121, 122, 342, 352, 353, 2019, 2020, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046
;;  UD chains for artificial uses
;;   reg 11 { d104(bb 0 insn -1) }
;;   reg 13 { d122(bb 0 insn -1) }
;;   reg 25 { d352(bb 0 insn -1) }
;;   reg 26 { d353(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 88
;;      reg 213 { d2032(bb 2 insn 2) }
;;   UD chains for insn luid 1 uid 89
;;      reg 208 { d2025(bb 5 insn 35) d2024(bb 4 insn 15) }
;;      reg 227 { d2046(bb 13 insn 88) }
;;   UD chains for insn luid 2 uid 90
;;      reg 24 { d342(bb 13 insn 89) }

( 13 )->[14]->( 17 15 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u111(11){ d104(bb 0 insn -1) }u112(13){ d122(bb 0 insn -1) }u113(25){ d352(bb 0 insn -1) }u114(26){ d353(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 209 210 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 210
;; lr  def 	 24 [cc] 228
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 209 210 213
;; live  gen 	 24 [cc] 228
;; live  kill	
;; rd  in  	(36)
27, 59, 83, 103, 104, 121, 122, 342, 352, 353, 2019, 2020, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046
;; rd  gen 	(2)
341, 2047
;; rd  kill	(1)
2047
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 209 210 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 209 210 213
;; rd  out 	(37)
27, 59, 83, 103, 104, 121, 122, 341, 352, 353, 2019, 2020, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047
;;  UD chains for artificial uses
;;   reg 11 { d104(bb 0 insn -1) }
;;   reg 13 { d122(bb 0 insn -1) }
;;   reg 25 { d352(bb 0 insn -1) }
;;   reg 26 { d353(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 93
;;      reg 210 { d2029(bb 5 insn 36) d2028(bb 4 insn 17) }
;;      reg 228 { d2047(bb 14 insn 92) }
;;   eq_note reg 210 { }
;;   UD chains for insn luid 2 uid 94
;;      reg 24 { d341(bb 14 insn 93) }

( 14 )->[15]->( 16 18 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u119(11){ d104(bb 0 insn -1) }u120(13){ d122(bb 0 insn -1) }u121(25){ d352(bb 0 insn -1) }u122(26){ d353(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 209 210 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 210
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 209 210 213
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(37)
27, 59, 83, 103, 104, 121, 122, 341, 352, 353, 2019, 2020, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047
;; rd  gen 	(1)
340
;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 209 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 209 213
;; rd  out 	(37)
27, 59, 83, 103, 104, 121, 122, 340, 352, 353, 2019, 2020, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047
;;  UD chains for artificial uses
;;   reg 11 { d104(bb 0 insn -1) }
;;   reg 13 { d122(bb 0 insn -1) }
;;   reg 25 { d352(bb 0 insn -1) }
;;   reg 26 { d353(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 96
;;      reg 210 { d2029(bb 5 insn 36) d2028(bb 4 insn 17) }
;;   UD chains for insn luid 1 uid 97
;;      reg 24 { d340(bb 15 insn 96) }

( 15 )->[16]->( 17 18 )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u125(11){ d104(bb 0 insn -1) }u126(13){ d122(bb 0 insn -1) }u127(25){ d352(bb 0 insn -1) }u128(26){ d353(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 209 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 229 230
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 209 213
;; live  gen 	 24 [cc] 229 230
;; live  kill	
;; rd  in  	(37)
27, 59, 83, 103, 104, 121, 122, 340, 352, 353, 2019, 2020, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047
;; rd  gen 	(3)
339, 2048, 2049
;; rd  kill	(2)
2048, 2049
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 209 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 209 213
;; rd  out 	(39)
27, 59, 83, 103, 104, 121, 122, 339, 352, 353, 2019, 2020, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049
;;  UD chains for artificial uses
;;   reg 11 { d104(bb 0 insn -1) }
;;   reg 13 { d122(bb 0 insn -1) }
;;   reg 25 { d352(bb 0 insn -1) }
;;   reg 26 { d353(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 99
;;      reg 25 { d352(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 100
;;      reg 230 { d2049(bb 16 insn 99) }
;;   UD chains for insn luid 2 uid 101
;;      reg 229 { d2048(bb 16 insn 100) }
;;   UD chains for insn luid 3 uid 102
;;      reg 24 { d339(bb 16 insn 101) }

( 14 16 )->[17]->( 18 )
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u133(11){ d104(bb 0 insn -1) }u134(13){ d122(bb 0 insn -1) }u135(25){ d352(bb 0 insn -1) }u136(26){ d353(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 209 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 209 213
;; lr  def 	 231
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 209 213
;; live  gen 	 231
;; live  kill	
;; rd  in  	(40)
27, 59, 83, 103, 104, 121, 122, 339, 341, 352, 353, 2019, 2020, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049
;; rd  gen 	(1)
2050
;; rd  kill	(1)
2050
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 213
;; rd  out 	(41)
27, 59, 83, 103, 104, 121, 122, 339, 341, 352, 353, 2019, 2020, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050
;;  UD chains for artificial uses
;;   reg 11 { d104(bb 0 insn -1) }
;;   reg 13 { d122(bb 0 insn -1) }
;;   reg 25 { d352(bb 0 insn -1) }
;;   reg 26 { d353(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 106
;;      reg 213 { d2032(bb 2 insn 2) }
;;      reg 231 { d2050(bb 17 insn 105) }
;;   UD chains for insn luid 2 uid 107
;;      reg 209 { d2027(bb 5 insn 22) d2026(bb 4 insn 16) }
;;      reg 213 { d2032(bb 2 insn 2) }

( 15 13 17 16 )->[18]->( 19 20 )
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u141(11){ d104(bb 0 insn -1) }u142(13){ d122(bb 0 insn -1) }u143(25){ d352(bb 0 insn -1) }u144(26){ d353(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 200 201 232 233 408
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 213
;; live  gen 	 24 [cc] 200 201 232 233 408
;; live  kill	
;; rd  in  	(43)
27, 59, 83, 103, 104, 121, 122, 339, 340, 341, 342, 352, 353, 2019, 2020, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050
;; rd  gen 	(6)
338, 2017, 2018, 2051, 2052, 2155
;; rd  kill	(5)
2017, 2018, 2051, 2052, 2155
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 213 408
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 213 408
;; rd  out 	(45)
27, 59, 83, 103, 104, 121, 122, 338, 352, 353, 2017, 2018, 2019, 2020, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2155
;;  UD chains for artificial uses
;;   reg 11 { d104(bb 0 insn -1) }
;;   reg 13 { d122(bb 0 insn -1) }
;;   reg 25 { d352(bb 0 insn -1) }
;;   reg 26 { d353(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 111
;;      reg 13 { d122(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 112
;;      reg 232 { d2051(bb 18 insn 111) }
;;   eq_note reg 13 { }
;;   UD chains for insn luid 2 uid 113
;;      reg 200 { d2017(bb 18 insn 112) }
;;   UD chains for insn luid 3 uid 114
;;      reg 201 { d2018(bb 18 insn 113) }
;;   UD chains for insn luid 4 uid 115
;;      reg 233 { d2052(bb 18 insn 114) }
;;   UD chains for insn luid 5 uid 625
;;      reg 200 { d2017(bb 18 insn 112) }
;;   UD chains for insn luid 6 uid 116
;;      reg 24 { d338(bb 18 insn 115) }

( 18 )->[19]->( 21 )
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u153(11){ d104(bb 0 insn -1) }u154(13){ d122(bb 0 insn -1) }u155(25){ d352(bb 0 insn -1) }u156(26){ d353(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 213 408
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 408
;; lr  def 	 206
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 213 408
;; live  gen 	 206
;; live  kill	
;; rd  in  	(45)
27, 59, 83, 103, 104, 121, 122, 338, 352, 353, 2017, 2018, 2019, 2020, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2155
;; rd  gen 	(1)
2022
;; rd  kill	(2)
2021, 2022
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 206 207 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 206 207 213
;; rd  out 	(46)
27, 59, 83, 103, 104, 121, 122, 338, 352, 353, 2017, 2018, 2019, 2020, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2155
;;  UD chains for artificial uses
;;   reg 11 { d104(bb 0 insn -1) }
;;   reg 13 { d122(bb 0 insn -1) }
;;   reg 25 { d352(bb 0 insn -1) }
;;   reg 26 { d353(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 122
;;      reg 408 { d2155(bb 18 insn 625) }

( 18 )->[20]->( 21 )
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u158(11){ d104(bb 0 insn -1) }u159(13){ d122(bb 0 insn -1) }u160(25){ d352(bb 0 insn -1) }u161(26){ d353(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 213 408
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 408
;; lr  def 	 206
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 213 408
;; live  gen 	 206
;; live  kill	
;; rd  in  	(45)
27, 59, 83, 103, 104, 121, 122, 338, 352, 353, 2017, 2018, 2019, 2020, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2155
;; rd  gen 	(1)
2021
;; rd  kill	(2)
2021, 2022
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 206 207 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 206 207 213
;; rd  out 	(46)
27, 59, 83, 103, 104, 121, 122, 338, 352, 353, 2017, 2018, 2019, 2020, 2021, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2155
;;  UD chains for artificial uses
;;   reg 11 { d104(bb 0 insn -1) }
;;   reg 13 { d122(bb 0 insn -1) }
;;   reg 25 { d352(bb 0 insn -1) }
;;   reg 26 { d353(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 131
;;      reg 408 { d2155(bb 18 insn 625) }

( 20 19 )->[21]->( 22 25 )
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u163(11){ d104(bb 0 insn -1) }u164(13){ d122(bb 0 insn -1) }u165(25){ d352(bb 0 insn -1) }u166(26){ d353(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 206 207 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207
;; lr  def 	 24 [cc] 147 240 241
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 206 207 213
;; live  gen 	 24 [cc] 147 240 241
;; live  kill	
;; rd  in  	(47)
27, 59, 83, 103, 104, 121, 122, 338, 352, 353, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2155
;; rd  gen 	(4)
337, 1979, 2053, 2054
;; rd  kill	(3)
1979, 2053, 2054
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 206 207 213 240
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 206 207 213 240
;; rd  out 	(50)
27, 59, 83, 103, 104, 121, 122, 337, 352, 353, 1979, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2155
;;  UD chains for artificial uses
;;   reg 11 { d104(bb 0 insn -1) }
;;   reg 13 { d122(bb 0 insn -1) }
;;   reg 25 { d352(bb 0 insn -1) }
;;   reg 26 { d353(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 136
;;      reg 13 { d122(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 137
;;      reg 241 { d2054(bb 21 insn 136) }
;;   eq_note reg 13 { }
;;   UD chains for insn luid 2 uid 138
;;      reg 240 { d2053(bb 21 insn 137) }
;;   UD chains for insn luid 3 uid 139
;;      reg 207 { d2023(bb 12 insn 84) }
;;   UD chains for insn luid 4 uid 140
;;      reg 24 { d337(bb 21 insn 139) }

( 21 )->[22]->( 23 25 )
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u173(11){ d104(bb 0 insn -1) }u174(13){ d122(bb 0 insn -1) }u175(25){ d352(bb 0 insn -1) }u176(26){ d353(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 206 207 213 240
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 240
;; lr  def 	 24 [cc] 143
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 206 207 213 240
;; live  gen 	 24 [cc] 143
;; live  kill	
;; rd  in  	(50)
27, 59, 83, 103, 104, 121, 122, 337, 352, 353, 1979, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2155
;; rd  gen 	(2)
336, 1976
;; rd  kill	(1)
1976
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 147 206 207 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 147 206 207 213
;; rd  out 	(51)
27, 59, 83, 103, 104, 121, 122, 336, 352, 353, 1976, 1979, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2155
;;  UD chains for artificial uses
;;   reg 11 { d104(bb 0 insn -1) }
;;   reg 13 { d122(bb 0 insn -1) }
;;   reg 25 { d352(bb 0 insn -1) }
;;   reg 26 { d353(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 144
;;      reg 240 { d2053(bb 21 insn 137) }
;;   UD chains for insn luid 1 uid 145
;;      reg 143 { d1976(bb 22 insn 144) }
;;   UD chains for insn luid 2 uid 146
;;      reg 24 { d336(bb 22 insn 145) }

( 22 )->[23]->( 24 25 )
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u180(11){ d104(bb 0 insn -1) }u181(13){ d122(bb 0 insn -1) }u182(25){ d352(bb 0 insn -1) }u183(26){ d353(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 147 206 207 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 24 [cc] 144
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 147 206 207 213
;; live  gen 	 24 [cc] 144
;; live  kill	
;; rd  in  	(51)
27, 59, 83, 103, 104, 121, 122, 336, 352, 353, 1976, 1979, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2155
;; rd  gen 	(2)
335, 1977
;; rd  kill	(1)
1977
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 147 206 207 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 147 206 207 213
;; rd  out 	(52)
27, 59, 83, 103, 104, 121, 122, 335, 352, 353, 1976, 1977, 1979, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2155
;;  UD chains for artificial uses
;;   reg 11 { d104(bb 0 insn -1) }
;;   reg 13 { d122(bb 0 insn -1) }
;;   reg 25 { d352(bb 0 insn -1) }
;;   reg 26 { d353(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 148
;;      reg 143 { d1976(bb 22 insn 144) }
;;   UD chains for insn luid 1 uid 149
;;      reg 144 { d1977(bb 23 insn 148) }
;;   UD chains for insn luid 2 uid 150
;;      reg 24 { d335(bb 23 insn 149) }

( 23 )->[24]->( 26 )
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u187(11){ d104(bb 0 insn -1) }u188(13){ d122(bb 0 insn -1) }u189(25){ d352(bb 0 insn -1) }u190(26){ d353(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 147 206 207 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 207
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 147 206 207 213
;; live  gen 	 133
;; live  kill	
;; rd  in  	(52)
27, 59, 83, 103, 104, 121, 122, 335, 352, 353, 1976, 1977, 1979, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2155
;; rd  gen 	(1)
1970
;; rd  kill	(2)
1970, 1971
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 206 207 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 206 207 213
;; rd  out 	(53)
27, 59, 83, 103, 104, 121, 122, 335, 352, 353, 1970, 1976, 1977, 1979, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2155
;;  UD chains for artificial uses
;;   reg 11 { d104(bb 0 insn -1) }
;;   reg 13 { d122(bb 0 insn -1) }
;;   reg 25 { d352(bb 0 insn -1) }
;;   reg 26 { d353(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 152
;;      reg 144 { d1977(bb 23 insn 148) }
;;      reg 207 { d2023(bb 12 insn 84) }

( 21 22 23 )->[25]->( 26 )
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u193(11){ d104(bb 0 insn -1) }u194(13){ d122(bb 0 insn -1) }u195(25){ d352(bb 0 insn -1) }u196(26){ d353(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 206 207 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 206 207 213
;; live  gen 	 133
;; live  kill	
;; rd  in  	(54)
27, 59, 83, 103, 104, 121, 122, 335, 336, 337, 352, 353, 1976, 1977, 1979, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2155
;; rd  gen 	(1)
1971
;; rd  kill	(2)
1970, 1971
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 206 207 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 206 207 213
;; rd  out 	(55)
27, 59, 83, 103, 104, 121, 122, 335, 336, 337, 352, 353, 1971, 1976, 1977, 1979, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2155
;;  UD chains for artificial uses
;;   reg 11 { d104(bb 0 insn -1) }
;;   reg 13 { d122(bb 0 insn -1) }
;;   reg 25 { d352(bb 0 insn -1) }
;;   reg 26 { d353(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 158
;;      reg 207 { d2023(bb 12 insn 84) }

( 25 24 )->[26]->( 27 40 )
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u198(11){ d104(bb 0 insn -1) }u199(13){ d122(bb 0 insn -1) }u200(25){ d352(bb 0 insn -1) }u201(26){ d353(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 206 207 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 213
;; lr  def 	 24 [cc] 146 244 409 410
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 206 207 213
;; live  gen 	 24 [cc] 146 244 409 410
;; live  kill	
;; rd  in  	(56)
27, 59, 83, 103, 104, 121, 122, 335, 336, 337, 352, 353, 1970, 1971, 1976, 1977, 1979, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2155
;; rd  gen 	(5)
334, 1978, 2055, 2156, 2157
;; rd  kill	(4)
1978, 2055, 2156, 2157
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 206 207 213 409 410
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 206 207 213 409 410
;; rd  out 	(58)
27, 59, 83, 103, 104, 121, 122, 334, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2155, 2156, 2157
;;  UD chains for artificial uses
;;   reg 11 { d104(bb 0 insn -1) }
;;   reg 13 { d122(bb 0 insn -1) }
;;   reg 25 { d352(bb 0 insn -1) }
;;   reg 26 { d353(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 161
;;      reg 25 { d352(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 162
;;      reg 146 { d1978(bb 26 insn 161) }
;;   UD chains for insn luid 2 uid 163
;;      reg 244 { d2055(bb 26 insn 162) }
;;   UD chains for insn luid 3 uid 628
;;      reg 213 { d2032(bb 2 insn 2) }
;;   UD chains for insn luid 4 uid 631
;;      reg 146 { d1978(bb 26 insn 161) }
;;   UD chains for insn luid 5 uid 164
;;      reg 24 { d334(bb 26 insn 163) }

( 26 )->[27]->( 28 31 )
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u208(11){ d104(bb 0 insn -1) }u209(13){ d122(bb 0 insn -1) }u210(25){ d352(bb 0 insn -1) }u211(26){ d353(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 206 207 213 409 410
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 409 410
;; lr  def 	 24 [cc] 158
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 206 207 213 409 410
;; live  gen 	 24 [cc] 158
;; live  kill	
;; rd  in  	(58)
27, 59, 83, 103, 104, 121, 122, 334, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2155, 2156, 2157
;; rd  gen 	(2)
288, 1988
;; rd  kill	(2)
1988, 1989
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 158 206 207 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 158 206 207 213
;; rd  out 	(59)
27, 59, 83, 103, 104, 121, 122, 288, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 1988, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2155, 2156, 2157
;;  UD chains for artificial uses
;;   reg 11 { d104(bb 0 insn -1) }
;;   reg 13 { d122(bb 0 insn -1) }
;;   reg 25 { d352(bb 0 insn -1) }
;;   reg 26 { d353(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 629
;;      reg 409 { d2156(bb 26 insn 628) }
;;   eq_note reg 213 { }
;;   UD chains for insn luid 1 uid 168
;;      reg 410 { d2157(bb 26 insn 631) }
;;   UD chains for insn luid 2 uid 169
;;      reg 24 { d288(bb 27 insn 168) }

( 27 )->[28]->( 29 31 )
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u216(11){ d104(bb 0 insn -1) }u217(13){ d122(bb 0 insn -1) }u218(25){ d352(bb 0 insn -1) }u219(26){ d353(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 158 206 207 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 246 247 248 249
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 158 206 207 213
;; live  gen 	 24 [cc] 246 247 248 249
;; live  kill	
;; rd  in  	(59)
27, 59, 83, 103, 104, 121, 122, 288, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 1988, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2155, 2156, 2157
;; rd  gen 	(5)
333, 2056, 2057, 2058, 2059
;; rd  kill	(4)
2056, 2057, 2058, 2059
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 158 206 207 213 248 249
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 158 206 207 213 248 249
;; rd  out 	(63)
27, 59, 83, 103, 104, 121, 122, 333, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 1988, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2155, 2156, 2157
;;  UD chains for artificial uses
;;   reg 11 { d104(bb 0 insn -1) }
;;   reg 13 { d122(bb 0 insn -1) }
;;   reg 25 { d352(bb 0 insn -1) }
;;   reg 26 { d353(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 172
;;      reg 13 { d122(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 173
;;      reg 247 { d2057(bb 28 insn 172) }
;;   eq_note reg 13 { }
;;   UD chains for insn luid 2 uid 174
;;      reg 246 { d2056(bb 28 insn 173) }
;;   UD chains for insn luid 3 uid 175
;;      reg 248 { d2058(bb 28 insn 174) }
;;   UD chains for insn luid 4 uid 176
;;      reg 249 { d2059(bb 28 insn 175) }
;;   UD chains for insn luid 5 uid 177
;;      reg 24 { d333(bb 28 insn 176) }

( 28 )->[29]->( 30 70 )
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u227(11){ d104(bb 0 insn -1) }u228(13){ d122(bb 0 insn -1) }u229(25){ d352(bb 0 insn -1) }u230(26){ d353(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 158 206 207 213 248 249
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158 248
;; lr  def 	 24 [cc] 253
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 158 206 207 213 248 249
;; live  gen 	 24 [cc] 253
;; live  kill	
;; rd  in  	(63)
27, 59, 83, 103, 104, 121, 122, 333, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 1988, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2155, 2156, 2157
;; rd  gen 	(2)
286, 2060
;; rd  kill	(1)
2060
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 158 206 207 213 249 253
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 158 206 207 213 249 253
;; rd  out 	(64)
27, 59, 83, 103, 104, 121, 122, 286, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 1988, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2155, 2156, 2157
;;  UD chains for artificial uses
;;   reg 11 { d104(bb 0 insn -1) }
;;   reg 13 { d122(bb 0 insn -1) }
;;   reg 25 { d352(bb 0 insn -1) }
;;   reg 26 { d353(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 183
;;      reg 248 { d2058(bb 28 insn 174) }
;;   UD chains for insn luid 1 uid 184
;;      reg 158 { d1988(bb 27 insn 629) }
;;      reg 253 { d2060(bb 29 insn 183) }
;;   UD chains for insn luid 2 uid 185
;;      reg 24 { d286(bb 29 insn 184) }

( 29 )->[30]->( 31 70 )
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u235(11){ d104(bb 0 insn -1) }u236(13){ d122(bb 0 insn -1) }u237(25){ d352(bb 0 insn -1) }u238(26){ d353(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 158 206 207 213 249 253
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158 249 253
;; lr  def 	 24 [cc] 257
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 158 206 207 213 249 253
;; live  gen 	 24 [cc] 257
;; live  kill	
;; rd  in  	(64)
27, 59, 83, 103, 104, 121, 122, 286, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 1988, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2155, 2156, 2157
;; rd  gen 	(2)
293, 2061
;; rd  kill	(1)
2061
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 158 206 207 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 158 206 207 213
;; rd  out 	(65)
27, 59, 83, 103, 104, 121, 122, 293, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 1988, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2155, 2156, 2157
;;  UD chains for artificial uses
;;   reg 11 { d104(bb 0 insn -1) }
;;   reg 13 { d122(bb 0 insn -1) }
;;   reg 25 { d352(bb 0 insn -1) }
;;   reg 26 { d353(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 193
;;      reg 158 { d1988(bb 27 insn 629) }
;;      reg 253 { d2060(bb 29 insn 183) }
;;   UD chains for insn luid 1 uid 198
;;      reg 249 { d2059(bb 28 insn 175) }
;;      reg 257 { d2061(bb 30 insn 193) }
;;   UD chains for insn luid 2 uid 199
;;      reg 24 { d293(bb 30 insn 198) }

( 27 30 28 70 )->[31]->( 48 32 )
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u244(11){ d104(bb 0 insn -1) }u245(13){ d122(bb 0 insn -1) }u246(25){ d352(bb 0 insn -1) }u247(26){ d353(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 158 206 207 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158
;; lr  def 	 24 [cc] 159 160 161 263 264 265 266
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 158 206 207 213
;; live  gen 	 24 [cc] 159 160 161 263 264 265 266
;; live  kill	 24 [cc]
;; rd  in  	(74)
27, 59, 83, 103, 104, 121, 122, 286, 288, 293, 333, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 1988, 1989, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2145, 2146, 2147, 2148, 2149, 2155, 2156, 2157
;; rd  gen 	(8)
330, 1990, 1992, 1993, 2062, 2063, 2064, 2065
;; rd  kill	(8)
1990, 1991, 1992, 1993, 2062, 2063, 2064, 2065
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 159 206 207 213 264
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 159 206 207 213 264
;; rd  out 	(78)
27, 59, 83, 103, 104, 121, 122, 330, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 1988, 1989, 1990, 1992, 1993, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2145, 2146, 2147, 2148, 2149, 2155, 2156, 2157
;;  UD chains for artificial uses
;;   reg 11 { d104(bb 0 insn -1) }
;;   reg 13 { d122(bb 0 insn -1) }
;;   reg 25 { d352(bb 0 insn -1) }
;;   reg 26 { d353(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 202
;;      reg 158 { d1989(bb 70 insn 595) d1988(bb 27 insn 629) }
;;   UD chains for insn luid 1 uid 203
;;      reg 263 { d2062(bb 31 insn 202) }
;;   UD chains for insn luid 2 uid 205
;;      reg 13 { d122(bb 0 insn -1) }
;;   UD chains for insn luid 3 uid 206
;;      reg 265 { d2064(bb 31 insn 205) }
;;   eq_note reg 13 { }
;;   UD chains for insn luid 4 uid 207
;;      reg 264 { d2063(bb 31 insn 206) }
;;   UD chains for insn luid 5 uid 208
;;      reg 159 { d1991(bb 31 insn 203) }
;;      reg 266 { d2065(bb 31 insn 207) }
;;   UD chains for insn luid 6 uid 209
;;      reg 160 { d1992(bb 31 insn 208) }
;;   UD chains for insn luid 7 uid 637
;;      reg 24 { d331(bb 31 insn 209) }
;;      reg 159 { d1991(bb 31 insn 203) }
;;   UD chains for insn luid 8 uid 216
;;      reg 159 { d1990(bb 31 insn 637) }
;;   UD chains for insn luid 9 uid 217
;;      reg 24 { d330(bb 31 insn 216) }

( 31 )->[32]->( 34 33 )
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u261(11){ d104(bb 0 insn -1) }u262(13){ d122(bb 0 insn -1) }u263(25){ d352(bb 0 insn -1) }u264(26){ d353(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 159 206 207 213 264
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 159 213 264
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 169 174 175 267 268 269 271 272 275 276 280
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 159 206 207 213 264
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 169 174 175 267 268 269 271 272 275 276 280
;; live  kill	 14 [lr] 24 [cc]
;; rd  in  	(78)
27, 59, 83, 103, 104, 121, 122, 330, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 1988, 1989, 1990, 1992, 1993, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2145, 2146, 2147, 2148, 2149, 2155, 2156, 2157
;; rd  gen 	(12)
326, 1994, 1999, 2000, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073
;; rd  kill	(29)
123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 1994, 1995, 1999, 2000, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 159 169 174 206 207 213 268 275 280
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 159 169 174 206 207 213 268 275 280
;; rd  out 	(89)
27, 59, 83, 103, 104, 121, 122, 326, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 1988, 1989, 1990, 1992, 1993, 1994, 1999, 2000, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2145, 2146, 2147, 2148, 2149, 2155, 2156, 2157
;;  UD chains for artificial uses
;;   reg 11 { d104(bb 0 insn -1) }
;;   reg 13 { d122(bb 0 insn -1) }
;;   reg 25 { d352(bb 0 insn -1) }
;;   reg 26 { d353(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 220
;;      reg 25 { d352(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 221
;;      reg 159 { d1990(bb 31 insn 637) }
;;   UD chains for insn luid 2 uid 222
;;      reg 267 { d2066(bb 32 insn 220) }
;;   eq_note reg 25 { }
;;   UD chains for insn luid 3 uid 223
;;      reg 13 { d122(bb 0 insn -1) }
;;      reg 0 { d1(bb 32 insn 221) }
;;      reg 1 { d55(bb 32 insn 222) }
;;   UD chains for insn luid 4 uid 224
;;      reg 0 { d26(bb 32 insn 223) }
;;   UD chains for insn luid 6 uid 226
;;      reg 159 { d1990(bb 31 insn 637) }
;;   UD chains for insn luid 7 uid 227
;;      reg 175 { d2000(bb 32 insn 224) }
;;      reg 268 { d2067(bb 32 insn 225) }
;;      reg 269 { d2068(bb 32 insn 226) }
;;   UD chains for insn luid 8 uid 229
;;      reg 159 { d1990(bb 31 insn 637) }
;;   UD chains for insn luid 9 uid 230
;;      reg 169 { d1995(bb 32 insn 227) }
;;      reg 268 { d2067(bb 32 insn 225) }
;;      reg 271 { d2069(bb 32 insn 229) }
;;   UD chains for insn luid 10 uid 231
;;      reg 25 { d352(bb 0 insn -1) }
;;   UD chains for insn luid 11 uid 232
;;      reg 272 { d2070(bb 32 insn 231) }
;;   eq_note reg 25 { }
;;   UD chains for insn luid 13 uid 234
;;      reg 13 { d122(bb 0 insn -1) }
;;      reg 0 { d25(bb 32 insn 232) }
;;      reg 1 { d53(bb 32 insn 233) }
;;   UD chains for insn luid 14 uid 238
;;      reg 264 { d2063(bb 31 insn 206) }
;;   UD chains for insn luid 15 uid 239
;;      reg 275 { d2071(bb 32 insn 238) }
;;   UD chains for insn luid 16 uid 240
;;      reg 25 { d352(bb 0 insn -1) }
;;      reg 276 { d2072(bb 32 insn 239) }
;;   UD chains for insn luid 17 uid 241
;;      reg 213 { d2032(bb 2 insn 2) }
;;   UD chains for insn luid 18 uid 246
;;      reg 275 { d2071(bb 32 insn 238) }
;;   UD chains for insn luid 19 uid 247
;;      reg 280 { d2073(bb 32 insn 246) }
;;   UD chains for insn luid 20 uid 248
;;      reg 24 { d326(bb 32 insn 247) }

( 32 )->[33]->( 37 )
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u295(11){ d104(bb 0 insn -1) }u296(13){ d122(bb 0 insn -1) }u297(25){ d352(bb 0 insn -1) }u298(26){ d353(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 159 169 206 207 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 156
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 159 169 206 207 213
;; live  gen 	 156
;; live  kill	
;; rd  in  	(89)
27, 59, 83, 103, 104, 121, 122, 326, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 1988, 1989, 1990, 1992, 1993, 1994, 1999, 2000, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2145, 2146, 2147, 2148, 2149, 2155, 2156, 2157
;; rd  gen 	(1)
1987
;; rd  kill	(3)
1985, 1986, 1987
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 156 159 169 206 207 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 156 159 169 206 207 213
;; rd  out 	(90)
27, 59, 83, 103, 104, 121, 122, 326, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 1987, 1988, 1989, 1990, 1992, 1993, 1994, 1999, 2000, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2145, 2146, 2147, 2148, 2149, 2155, 2156, 2157
;;  UD chains for artificial uses
;;   reg 11 { d104(bb 0 insn -1) }
;;   reg 13 { d122(bb 0 insn -1) }
;;   reg 25 { d352(bb 0 insn -1) }
;;   reg 26 { d353(bb 0 insn -1) }

( 32 )->[34]->( 36 35 )
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u299(11){ d104(bb 0 insn -1) }u300(13){ d122(bb 0 insn -1) }u301(25){ d352(bb 0 insn -1) }u302(26){ d353(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 159 169 174 206 207 213 268 275 280
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 174 275
;; lr  def 	 24 [cc] 284
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 159 169 174 206 207 213 268 275 280
;; live  gen 	 24 [cc] 284
;; live  kill	
;; rd  in  	(89)
27, 59, 83, 103, 104, 121, 122, 326, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 1988, 1989, 1990, 1992, 1993, 1994, 1999, 2000, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2145, 2146, 2147, 2148, 2149, 2155, 2156, 2157
;; rd  gen 	(2)
325, 2074
;; rd  kill	(1)
2074
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 159 169 174 206 207 213 268 280 284
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 159 169 174 206 207 213 268 280 284
;; rd  out 	(90)
27, 59, 83, 103, 104, 121, 122, 325, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 1988, 1989, 1990, 1992, 1993, 1994, 1999, 2000, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2145, 2146, 2147, 2148, 2149, 2155, 2156, 2157
;;  UD chains for artificial uses
;;   reg 11 { d104(bb 0 insn -1) }
;;   reg 13 { d122(bb 0 insn -1) }
;;   reg 25 { d352(bb 0 insn -1) }
;;   reg 26 { d353(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 259
;;      reg 275 { d2071(bb 32 insn 238) }
;;   UD chains for insn luid 1 uid 260
;;      reg 174 { d1999(bb 32 insn 241) }
;;      reg 284 { d2074(bb 34 insn 259) }
;;   UD chains for insn luid 2 uid 261
;;      reg 24 { d325(bb 34 insn 260) }

( 34 )->[35]->( 37 )
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u307(11){ d104(bb 0 insn -1) }u308(13){ d122(bb 0 insn -1) }u309(25){ d352(bb 0 insn -1) }u310(26){ d353(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 159 169 206 207 213 268
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 268
;; lr  def 	 156
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 159 169 206 207 213 268
;; live  gen 	 156
;; live  kill	
;; rd  in  	(90)
27, 59, 83, 103, 104, 121, 122, 325, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 1988, 1989, 1990, 1992, 1993, 1994, 1999, 2000, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2145, 2146, 2147, 2148, 2149, 2155, 2156, 2157
;; rd  gen 	(1)
1985
;; rd  kill	(3)
1985, 1986, 1987
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 156 159 169 206 207 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 156 159 169 206 207 213
;; rd  out 	(91)
27, 59, 83, 103, 104, 121, 122, 325, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 1985, 1988, 1989, 1990, 1992, 1993, 1994, 1999, 2000, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2145, 2146, 2147, 2148, 2149, 2155, 2156, 2157
;;  UD chains for artificial uses
;;   reg 11 { d104(bb 0 insn -1) }
;;   reg 13 { d122(bb 0 insn -1) }
;;   reg 25 { d352(bb 0 insn -1) }
;;   reg 26 { d353(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 263
;;      reg 268 { d2067(bb 32 insn 225) }

( 34 )->[36]->( 37 )
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u312(11){ d104(bb 0 insn -1) }u313(13){ d122(bb 0 insn -1) }u314(25){ d352(bb 0 insn -1) }u315(26){ d353(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 159 169 174 206 207 213 280 284
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 174 280 284
;; lr  def 	 24 [cc] 156 288
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 159 169 174 206 207 213 280 284
;; live  gen 	 24 [cc] 156 288
;; live  kill	
;; rd  in  	(90)
27, 59, 83, 103, 104, 121, 122, 325, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 1988, 1989, 1990, 1992, 1993, 1994, 1999, 2000, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2145, 2146, 2147, 2148, 2149, 2155, 2156, 2157
;; rd  gen 	(3)
291, 1986, 2075
;; rd  kill	(4)
1985, 1986, 1987, 2075
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 156 159 169 206 207 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 156 159 169 206 207 213
;; rd  out 	(92)
27, 59, 83, 103, 104, 121, 122, 291, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 1986, 1988, 1989, 1990, 1992, 1993, 1994, 1999, 2000, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2145, 2146, 2147, 2148, 2149, 2155, 2156, 2157
;;  UD chains for artificial uses
;;   reg 11 { d104(bb 0 insn -1) }
;;   reg 13 { d122(bb 0 insn -1) }
;;   reg 25 { d352(bb 0 insn -1) }
;;   reg 26 { d353(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 274
;;      reg 174 { d1999(bb 32 insn 241) }
;;      reg 284 { d2074(bb 34 insn 259) }
;;   UD chains for insn luid 1 uid 279
;;      reg 280 { d2073(bb 32 insn 246) }
;;      reg 288 { d2075(bb 36 insn 274) }
;;   UD chains for insn luid 2 uid 280
;;      reg 24 { d291(bb 36 insn 279) }

( 36 33 35 )->[37]->( 38 49 )
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u321(11){ d104(bb 0 insn -1) }u322(13){ d122(bb 0 insn -1) }u323(25){ d352(bb 0 insn -1) }u324(26){ d353(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 156 159 169 206 207 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 159 169 206 213
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 148 171 172 173 296 297 298 299 300 301 302
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 156 159 169 206 207 213
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 148 171 172 173 296 297 298 299 300 301 302
;; live  kill	 14 [lr]
;; rd  in  	(96)
27, 59, 83, 103, 104, 121, 122, 291, 325, 326, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 1985, 1986, 1987, 1988, 1989, 1990, 1992, 1993, 1994, 1999, 2000, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2145, 2146, 2147, 2148, 2149, 2155, 2156, 2157
;; rd  gen 	(13)
20, 322, 1984, 1996, 1997, 1998, 2076, 2077, 2078, 2079, 2080, 2081, 2082
;; rd  kill	(63)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 1980, 1981, 1982, 1983, 1984, 1996, 1997, 1998, 2076, 2077, 2078, 2079, 2080, 2081, 2082
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 148 159 207 213 302
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 148 159 207 213 302
;; rd  out 	(105)
20, 59, 83, 103, 104, 121, 122, 322, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1992, 1993, 1994, 1996, 1997, 1998, 1999, 2000, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2145, 2146, 2147, 2148, 2149, 2155, 2156, 2157
;;  UD chains for artificial uses
;;   reg 11 { d104(bb 0 insn -1) }
;;   reg 13 { d122(bb 0 insn -1) }
;;   reg 25 { d352(bb 0 insn -1) }
;;   reg 26 { d353(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 284
;;      reg 25 { d352(bb 0 insn -1) }
;;      reg 156 { d1987(bb 33 insn 250) d1986(bb 36 insn 280) d1985(bb 35 insn 263) }
;;   UD chains for insn luid 1 uid 286
;;      reg 13 { d122(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 287
;;      reg 297 { d2077(bb 37 insn 286) }
;;   eq_note reg 13 { }
;;   UD chains for insn luid 3 uid 288
;;      reg 296 { d2076(bb 37 insn 287) }
;;   UD chains for insn luid 4 uid 289
;;      reg 298 { d2078(bb 37 insn 288) }
;;   UD chains for insn luid 5 uid 290
;;      reg 25 { d352(bb 0 insn -1) }
;;      reg 299 { d2079(bb 37 insn 289) }
;;   UD chains for insn luid 6 uid 291
;;      reg 159 { d1990(bb 31 insn 637) }
;;   UD chains for insn luid 7 uid 292
;;      reg 25 { d352(bb 0 insn -1) }
;;   UD chains for insn luid 8 uid 293
;;      reg 300 { d2080(bb 37 insn 291) }
;;   UD chains for insn luid 9 uid 294
;;      reg 301 { d2081(bb 37 insn 292) }
;;   eq_note reg 25 { }
;;   UD chains for insn luid 11 uid 296
;;      reg 13 { d122(bb 0 insn -1) }
;;      reg 0 { d23(bb 37 insn 293) }
;;      reg 1 { d51(bb 37 insn 294) }
;;      reg 2 { d77(bb 37 insn 295) }
;;   UD chains for insn luid 12 uid 297
;;      reg 0 { d22(bb 37 insn 296) }
;;   UD chains for insn luid 13 uid 298
;;      reg 169 { d1994(bb 32 insn 230) }
;;      reg 173 { d1998(bb 37 insn 297) }
;;   UD chains for insn luid 14 uid 299
;;      reg 159 { d1990(bb 31 insn 637) }
;;   UD chains for insn luid 15 uid 300
;;      reg 302 { d2082(bb 37 insn 299) }
;;   UD chains for insn luid 16 uid 301
;;      reg 213 { d2032(bb 2 insn 2) }
;;   UD chains for insn luid 17 uid 302
;;      reg 206 { d2022(bb 19 insn 122) d2021(bb 20 insn 131) }
;;   UD chains for insn luid 18 uid 303
;;      reg 13 { d122(bb 0 insn -1) }
;;      reg 0 { d21(bb 37 insn 300) }
;;      reg 1 { d49(bb 37 insn 301) }
;;      reg 2 { d75(bb 37 insn 302) }
;;   UD chains for insn luid 19 uid 304
;;      reg 0 { d20(bb 37 insn 303) }
;;   UD chains for insn luid 20 uid 305
;;      reg 171 { d1996(bb 37 insn 304) }
;;      reg 172 { d1997(bb 37 insn 298) }
;;   UD chains for insn luid 21 uid 306
;;      reg 148 { d1984(bb 37 insn 305) }
;;   UD chains for insn luid 22 uid 307
;;      reg 24 { d322(bb 37 insn 306) }

( 37 )->[38]->( 39 49 )
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u359(11){ d104(bb 0 insn -1) }u360(13){ d122(bb 0 insn -1) }u361(25){ d352(bb 0 insn -1) }u362(26){ d353(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 159 207 213 302
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 159 213
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 148 303 304
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 159 207 213 302
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc] 148 303 304
;; live  kill	 14 [lr]
;; rd  in  	(105)
20, 59, 83, 103, 104, 121, 122, 322, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1992, 1993, 1994, 1996, 1997, 1998, 1999, 2000, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2145, 2146, 2147, 2148, 2149, 2155, 2156, 2157
;; rd  gen 	(5)
18, 320, 1983, 2083, 2084
;; rd  kill	(55)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 1980, 1981, 1982, 1983, 1984, 2083, 2084
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 159 207 213 302
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 159 207 213 302
;; rd  out 	(107)
18, 59, 83, 103, 104, 121, 122, 320, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 1983, 1985, 1986, 1987, 1988, 1989, 1990, 1992, 1993, 1994, 1996, 1997, 1998, 1999, 2000, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2145, 2146, 2147, 2148, 2149, 2155, 2156, 2157
;;  UD chains for artificial uses
;;   reg 11 { d104(bb 0 insn -1) }
;;   reg 13 { d122(bb 0 insn -1) }
;;   reg 25 { d352(bb 0 insn -1) }
;;   reg 26 { d353(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 309
;;      reg 25 { d352(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 310
;;      reg 159 { d1990(bb 31 insn 637) }
;;   UD chains for insn luid 2 uid 311
;;      reg 13 { d122(bb 0 insn -1) }
;;      reg 133 { d1971(bb 25 insn 158) d1970(bb 24 insn 152) }
;;   UD chains for insn luid 3 uid 312
;;      reg 213 { d2032(bb 2 insn 2) }
;;   UD chains for insn luid 4 uid 313
;;      reg 303 { d2083(bb 38 insn 309) }
;;   eq_note reg 25 { }
;;   UD chains for insn luid 5 uid 314
;;      reg 304 { d2084(bb 38 insn 310) }
;;   UD chains for insn luid 6 uid 315
;;      reg 159 { d1990(bb 31 insn 637) }
;;   UD chains for insn luid 7 uid 316
;;      reg 13 { d122(bb 0 insn -1) }
;;      reg 0 { d19(bb 38 insn 312) }
;;      reg 1 { d47(bb 38 insn 313) }
;;      reg 2 { d73(bb 38 insn 314) }
;;      reg 3 { d84(bb 38 insn 315) }
;;   UD chains for insn luid 8 uid 317
;;      reg 0 { d18(bb 38 insn 316) }
;;   UD chains for insn luid 9 uid 318
;;      reg 148 { d1983(bb 38 insn 317) }
;;   UD chains for insn luid 10 uid 319
;;      reg 24 { d320(bb 38 insn 318) }

( 38 )->[39]->( 49 )
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u380(11){ d104(bb 0 insn -1) }u381(13){ d122(bb 0 insn -1) }u382(25){ d352(bb 0 insn -1) }u383(26){ d353(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 159 207 213 302
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 159 213 302
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 159 207 213 302
;; live  gen 	
;; live  kill	
;; rd  in  	(107)
18, 59, 83, 103, 104, 121, 122, 320, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 1983, 1985, 1986, 1987, 1988, 1989, 1990, 1992, 1993, 1994, 1996, 1997, 1998, 1999, 2000, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2145, 2146, 2147, 2148, 2149, 2155, 2156, 2157
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 207 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 207 213
;; rd  out 	(107)
18, 59, 83, 103, 104, 121, 122, 320, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 1983, 1985, 1986, 1987, 1988, 1989, 1990, 1992, 1993, 1994, 1996, 1997, 1998, 1999, 2000, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2145, 2146, 2147, 2148, 2149, 2155, 2156, 2157
;;  UD chains for artificial uses
;;   reg 11 { d104(bb 0 insn -1) }
;;   reg 13 { d122(bb 0 insn -1) }
;;   reg 25 { d352(bb 0 insn -1) }
;;   reg 26 { d353(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 321
;;      reg 159 { d1990(bb 31 insn 637) }
;;      reg 213 { d2032(bb 2 insn 2) }
;;   UD chains for insn luid 1 uid 323
;;      reg 213 { d2032(bb 2 insn 2) }
;;      reg 302 { d2082(bb 37 insn 299) }

( 26 )->[40]->( 41 44 )
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u388(11){ d104(bb 0 insn -1) }u389(13){ d122(bb 0 insn -1) }u390(25){ d352(bb 0 insn -1) }u391(26){ d353(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 206 207 213 409 410
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 409 410
;; lr  def 	 24 [cc] 177
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 206 207 213 409 410
;; live  gen 	 24 [cc] 177
;; live  kill	
;; rd  in  	(58)
27, 59, 83, 103, 104, 121, 122, 334, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2155, 2156, 2157
;; rd  gen 	(2)
287, 2001
;; rd  kill	(2)
2001, 2002
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 177 206 207 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 177 206 207 213
;; rd  out 	(59)
27, 59, 83, 103, 104, 121, 122, 287, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 2001, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2155, 2156, 2157
;;  UD chains for artificial uses
;;   reg 11 { d104(bb 0 insn -1) }
;;   reg 13 { d122(bb 0 insn -1) }
;;   reg 25 { d352(bb 0 insn -1) }
;;   reg 26 { d353(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 627
;;      reg 409 { d2156(bb 26 insn 628) }
;;   eq_note reg 213 { }
;;   UD chains for insn luid 1 uid 330
;;      reg 410 { d2157(bb 26 insn 631) }
;;   UD chains for insn luid 2 uid 331
;;      reg 24 { d287(bb 40 insn 330) }

( 40 )->[41]->( 42 44 )
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u396(11){ d104(bb 0 insn -1) }u397(13){ d122(bb 0 insn -1) }u398(25){ d352(bb 0 insn -1) }u399(26){ d353(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 177 206 207 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 307 308 309 310
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 177 206 207 213
;; live  gen 	 24 [cc] 307 308 309 310
;; live  kill	
;; rd  in  	(59)
27, 59, 83, 103, 104, 121, 122, 287, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 2001, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2155, 2156, 2157
;; rd  gen 	(5)
319, 2085, 2086, 2087, 2088
;; rd  kill	(4)
2085, 2086, 2087, 2088
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 177 206 207 213 309 310
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 177 206 207 213 309 310
;; rd  out 	(63)
27, 59, 83, 103, 104, 121, 122, 319, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 2001, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2085, 2086, 2087, 2088, 2155, 2156, 2157
;;  UD chains for artificial uses
;;   reg 11 { d104(bb 0 insn -1) }
;;   reg 13 { d122(bb 0 insn -1) }
;;   reg 25 { d352(bb 0 insn -1) }
;;   reg 26 { d353(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 334
;;      reg 13 { d122(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 335
;;      reg 308 { d2086(bb 41 insn 334) }
;;   eq_note reg 13 { }
;;   UD chains for insn luid 2 uid 336
;;      reg 307 { d2085(bb 41 insn 335) }
;;   UD chains for insn luid 3 uid 337
;;      reg 309 { d2087(bb 41 insn 336) }
;;   UD chains for insn luid 4 uid 338
;;      reg 310 { d2088(bb 41 insn 337) }
;;   UD chains for insn luid 5 uid 339
;;      reg 24 { d319(bb 41 insn 338) }

( 41 )->[42]->( 43 71 )
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u407(11){ d104(bb 0 insn -1) }u408(13){ d122(bb 0 insn -1) }u409(25){ d352(bb 0 insn -1) }u410(26){ d353(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 177 206 207 213 309 310
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 177 309
;; lr  def 	 24 [cc] 314
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 177 206 207 213 309 310
;; live  gen 	 24 [cc] 314
;; live  kill	
;; rd  in  	(63)
27, 59, 83, 103, 104, 121, 122, 319, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 2001, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2085, 2086, 2087, 2088, 2155, 2156, 2157
;; rd  gen 	(2)
285, 2089
;; rd  kill	(1)
2089
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 177 206 207 213 310 314
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 177 206 207 213 310 314
;; rd  out 	(64)
27, 59, 83, 103, 104, 121, 122, 285, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 2001, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2085, 2086, 2087, 2088, 2089, 2155, 2156, 2157
;;  UD chains for artificial uses
;;   reg 11 { d104(bb 0 insn -1) }
;;   reg 13 { d122(bb 0 insn -1) }
;;   reg 25 { d352(bb 0 insn -1) }
;;   reg 26 { d353(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 345
;;      reg 309 { d2087(bb 41 insn 336) }
;;   UD chains for insn luid 1 uid 346
;;      reg 177 { d2001(bb 40 insn 627) }
;;      reg 314 { d2089(bb 42 insn 345) }
;;   UD chains for insn luid 2 uid 347
;;      reg 24 { d285(bb 42 insn 346) }

( 42 )->[43]->( 44 71 )
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u415(11){ d104(bb 0 insn -1) }u416(13){ d122(bb 0 insn -1) }u417(25){ d352(bb 0 insn -1) }u418(26){ d353(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 177 206 207 213 310 314
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 177 310 314
;; lr  def 	 24 [cc] 318
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 177 206 207 213 310 314
;; live  gen 	 24 [cc] 318
;; live  kill	
;; rd  in  	(64)
27, 59, 83, 103, 104, 121, 122, 285, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 2001, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2085, 2086, 2087, 2088, 2089, 2155, 2156, 2157
;; rd  gen 	(2)
290, 2090
;; rd  kill	(1)
2090
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 177 206 207 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 177 206 207 213
;; rd  out 	(65)
27, 59, 83, 103, 104, 121, 122, 290, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 2001, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2085, 2086, 2087, 2088, 2089, 2090, 2155, 2156, 2157
;;  UD chains for artificial uses
;;   reg 11 { d104(bb 0 insn -1) }
;;   reg 13 { d122(bb 0 insn -1) }
;;   reg 25 { d352(bb 0 insn -1) }
;;   reg 26 { d353(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 355
;;      reg 177 { d2001(bb 40 insn 627) }
;;      reg 314 { d2089(bb 42 insn 345) }
;;   UD chains for insn luid 1 uid 360
;;      reg 310 { d2088(bb 41 insn 337) }
;;      reg 318 { d2090(bb 43 insn 355) }
;;   UD chains for insn luid 2 uid 361
;;      reg 24 { d290(bb 43 insn 360) }

( 40 43 41 71 )->[44]->( 48 45 )
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u424(11){ d104(bb 0 insn -1) }u425(13){ d122(bb 0 insn -1) }u426(25){ d352(bb 0 insn -1) }u427(26){ d353(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 177 206 207 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 177
;; lr  def 	 24 [cc] 178 179 180 324 325 326 327
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 177 206 207 213
;; live  gen 	 24 [cc] 178 179 180 324 325 326 327
;; live  kill	 24 [cc]
;; rd  in  	(74)
27, 59, 83, 103, 104, 121, 122, 285, 287, 290, 319, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 2001, 2002, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2085, 2086, 2087, 2088, 2089, 2090, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157
;; rd  gen 	(8)
317, 2003, 2004, 2005, 2091, 2092, 2093, 2094
;; rd  kill	(7)
2003, 2004, 2005, 2091, 2092, 2093, 2094
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 178 179 206 207 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 178 179 206 207 213
;; rd  out 	(78)
27, 59, 83, 103, 104, 121, 122, 317, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 2001, 2002, 2003, 2004, 2005, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157
;;  UD chains for artificial uses
;;   reg 11 { d104(bb 0 insn -1) }
;;   reg 13 { d122(bb 0 insn -1) }
;;   reg 25 { d352(bb 0 insn -1) }
;;   reg 26 { d353(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 364
;;      reg 177 { d2002(bb 71 insn 610) d2001(bb 40 insn 627) }
;;   UD chains for insn luid 1 uid 365
;;      reg 324 { d2091(bb 44 insn 364) }
;;   UD chains for insn luid 2 uid 367
;;      reg 13 { d122(bb 0 insn -1) }
;;   UD chains for insn luid 3 uid 368
;;      reg 326 { d2093(bb 44 insn 367) }
;;   eq_note reg 13 { }
;;   UD chains for insn luid 4 uid 369
;;      reg 325 { d2092(bb 44 insn 368) }
;;   UD chains for insn luid 5 uid 370
;;      reg 178 { d2003(bb 44 insn 365) }
;;      reg 327 { d2094(bb 44 insn 369) }
;;   UD chains for insn luid 6 uid 371
;;      reg 179 { d2004(bb 44 insn 370) }
;;   UD chains for insn luid 7 uid 372
;;      reg 24 { d317(bb 44 insn 371) }

( 44 )->[45]->( 48 46 )
;; bb 45 artificial_defs: { }
;; bb 45 artificial_uses: { u438(11){ d104(bb 0 insn -1) }u439(13){ d122(bb 0 insn -1) }u440(25){ d352(bb 0 insn -1) }u441(26){ d353(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 178 179 206 207 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 178
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 178 179 206 207 213
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(78)
27, 59, 83, 103, 104, 121, 122, 317, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 2001, 2002, 2003, 2004, 2005, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157
;; rd  gen 	(1)
289
;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 178 179 206 207 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 178 179 206 207 213
;; rd  out 	(78)
27, 59, 83, 103, 104, 121, 122, 289, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 2001, 2002, 2003, 2004, 2005, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157
;;  UD chains for artificial uses
;;   reg 11 { d104(bb 0 insn -1) }
;;   reg 13 { d122(bb 0 insn -1) }
;;   reg 25 { d352(bb 0 insn -1) }
;;   reg 26 { d353(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 378
;;      reg 178 { d2003(bb 44 insn 365) }
;;   UD chains for insn luid 1 uid 379
;;      reg 24 { d289(bb 45 insn 378) }

( 45 )->[46]->( 47 49 )
;; bb 46 artificial_defs: { }
;; bb 46 artificial_uses: { u444(11){ d104(bb 0 insn -1) }u445(13){ d122(bb 0 insn -1) }u446(25){ d352(bb 0 insn -1) }u447(26){ d353(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 178 179 206 207 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 178 179 206 213
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 148 188 190 328
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 178 179 206 207 213
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 148 188 190 328
;; live  kill	 14 [lr] 24 [cc]
;; rd  in  	(78)
27, 59, 83, 103, 104, 121, 122, 289, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 2001, 2002, 2003, 2004, 2005, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157
;; rd  gen 	(6)
17, 315, 1982, 2006, 2007, 2095
;; rd  kill	(56)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 1980, 1981, 1982, 1983, 1984, 2006, 2007, 2095
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 148 178 207 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 148 178 207 213
;; rd  out 	(82)
17, 59, 83, 103, 104, 121, 122, 315, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 1982, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157
;;  UD chains for artificial uses
;;   reg 11 { d104(bb 0 insn -1) }
;;   reg 13 { d122(bb 0 insn -1) }
;;   reg 25 { d352(bb 0 insn -1) }
;;   reg 26 { d353(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 383
;;      reg 178 { d2003(bb 44 insn 365) }
;;      reg 179 { d2004(bb 44 insn 370) }
;;      reg 328 { d2095(bb 46 insn 381) }
;;   UD chains for insn luid 2 uid 384
;;      reg 178 { d2003(bb 44 insn 365) }
;;   UD chains for insn luid 3 uid 385
;;      reg 213 { d2032(bb 2 insn 2) }
;;   UD chains for insn luid 4 uid 386
;;      reg 206 { d2022(bb 19 insn 122) d2021(bb 20 insn 131) }
;;   UD chains for insn luid 5 uid 387
;;      reg 13 { d122(bb 0 insn -1) }
;;      reg 0 { d0(bb 46 insn 384) }
;;      reg 1 { d45(bb 46 insn 385) }
;;      reg 2 { d71(bb 46 insn 386) }
;;   UD chains for insn luid 6 uid 388
;;      reg 0 { d17(bb 46 insn 387) }
;;   UD chains for insn luid 7 uid 389
;;      reg 188 { d2006(bb 46 insn 383) }
;;      reg 190 { d2007(bb 46 insn 388) }
;;   UD chains for insn luid 8 uid 390
;;      reg 148 { d1982(bb 46 insn 389) }
;;   UD chains for insn luid 9 uid 391
;;      reg 24 { d315(bb 46 insn 390) }

( 46 )->[47]->( 49 )
;; bb 47 artificial_defs: { }
;; bb 47 artificial_uses: { u463(11){ d104(bb 0 insn -1) }u464(13){ d122(bb 0 insn -1) }u465(25){ d352(bb 0 insn -1) }u466(26){ d353(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 178 207 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 178 213
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 148 330 331
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 178 207 213
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 148 330 331
;; live  kill	 14 [lr]
;; rd  in  	(82)
17, 59, 83, 103, 104, 121, 122, 315, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 1982, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157
;; rd  gen 	(4)
15, 1981, 2096, 2097
;; rd  kill	(55)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 1980, 1981, 1982, 1983, 1984, 2096, 2097
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 207 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 207 213
;; rd  out 	(84)
15, 59, 83, 103, 104, 121, 122, 315, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 1981, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157
;;  UD chains for artificial uses
;;   reg 11 { d104(bb 0 insn -1) }
;;   reg 13 { d122(bb 0 insn -1) }
;;   reg 25 { d352(bb 0 insn -1) }
;;   reg 26 { d353(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 393
;;      reg 25 { d352(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 394
;;      reg 178 { d2003(bb 44 insn 365) }
;;   UD chains for insn luid 2 uid 395
;;      reg 13 { d122(bb 0 insn -1) }
;;      reg 133 { d1971(bb 25 insn 158) d1970(bb 24 insn 152) }
;;   UD chains for insn luid 3 uid 396
;;      reg 213 { d2032(bb 2 insn 2) }
;;   UD chains for insn luid 4 uid 397
;;      reg 330 { d2096(bb 47 insn 393) }
;;   eq_note reg 25 { }
;;   UD chains for insn luid 5 uid 398
;;      reg 331 { d2097(bb 47 insn 394) }
;;   UD chains for insn luid 6 uid 399
;;      reg 178 { d2003(bb 44 insn 365) }
;;   UD chains for insn luid 7 uid 400
;;      reg 13 { d122(bb 0 insn -1) }
;;      reg 0 { d16(bb 47 insn 396) }
;;      reg 1 { d43(bb 47 insn 397) }
;;      reg 2 { d69(bb 47 insn 398) }
;;      reg 3 { d85(bb 47 insn 399) }
;;   UD chains for insn luid 8 uid 401
;;      reg 0 { d15(bb 47 insn 400) }

( 31 45 44 )->[48]->( 49 )
;; bb 48 artificial_defs: { }
;; bb 48 artificial_uses: { u482(11){ d104(bb 0 insn -1) }u483(13){ d122(bb 0 insn -1) }u484(25){ d352(bb 0 insn -1) }u485(26){ d353(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 207 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 148
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 207 213
;; live  gen 	 148
;; live  kill	
;; rd  in  	(100)
27, 59, 83, 103, 104, 121, 122, 289, 317, 330, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 1988, 1989, 1990, 1992, 1993, 2001, 2002, 2003, 2004, 2005, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157
;; rd  gen 	(1)
1980
;; rd  kill	(5)
1980, 1981, 1982, 1983, 1984
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 207 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 207 213
;; rd  out 	(101)
27, 59, 83, 103, 104, 121, 122, 289, 317, 330, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 1980, 1988, 1989, 1990, 1992, 1993, 2001, 2002, 2003, 2004, 2005, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157
;;  UD chains for artificial uses
;;   reg 11 { d104(bb 0 insn -1) }
;;   reg 13 { d122(bb 0 insn -1) }
;;   reg 25 { d352(bb 0 insn -1) }
;;   reg 26 { d353(bb 0 insn -1) }

( 48 37 38 39 46 47 )->[49]->( 50 52 )
;; bb 49 artificial_defs: { }
;; bb 49 artificial_uses: { u486(11){ d104(bb 0 insn -1) }u487(13){ d122(bb 0 insn -1) }u488(25){ d352(bb 0 insn -1) }u489(26){ d353(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 207 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 213
;; lr  def 	 24 [cc] 194 195 332
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 207 213
;; live  gen 	 24 [cc] 194 195 332
;; live  kill	
;; rd  in  	(145)
15, 17, 18, 20, 27, 59, 83, 103, 104, 121, 122, 289, 315, 317, 320, 322, 330, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1992, 1993, 1994, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157
;; rd  gen 	(4)
313, 2013, 2014, 2098
;; rd  kill	(3)
2013, 2014, 2098
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 194 195 207 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 194 195 207 213
;; rd  out 	(143)
15, 17, 18, 20, 27, 59, 83, 103, 104, 121, 122, 313, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1992, 1993, 1994, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2013, 2014, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157
;;  UD chains for artificial uses
;;   reg 11 { d104(bb 0 insn -1) }
;;   reg 13 { d122(bb 0 insn -1) }
;;   reg 25 { d352(bb 0 insn -1) }
;;   reg 26 { d353(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 409
;;      reg 213 { d2032(bb 2 insn 2) }
;;   UD chains for insn luid 1 uid 410
;;      reg 195 { d2014(bb 49 insn 409) }
;;   UD chains for insn luid 2 uid 411
;;      reg 194 { d2013(bb 49 insn 410) }
;;      reg 213 { d2032(bb 2 insn 2) }
;;   UD chains for insn luid 3 uid 412
;;      reg 195 { d2014(bb 49 insn 409) }
;;   UD chains for insn luid 4 uid 413
;;      reg 332 { d2098(bb 49 insn 412) }
;;   UD chains for insn luid 5 uid 414
;;      reg 24 { d313(bb 49 insn 413) }

( 49 )->[50]->( 55 51 )
;; bb 50 artificial_defs: { }
;; bb 50 artificial_uses: { u497(11){ d104(bb 0 insn -1) }u498(13){ d122(bb 0 insn -1) }u499(25){ d352(bb 0 insn -1) }u500(26){ d353(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 194 195 207 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 195
;; lr  def 	 24 [cc] 192
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 194 195 207 213
;; live  gen 	 24 [cc] 192
;; live  kill	
;; rd  in  	(143)
15, 17, 18, 20, 27, 59, 83, 103, 104, 121, 122, 313, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1992, 1993, 1994, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2013, 2014, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157
;; rd  gen 	(2)
312, 2011
;; rd  kill	(1)
2011
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 192 194 207 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 192 194 207 213
;; rd  out 	(144)
15, 17, 18, 20, 27, 59, 83, 103, 104, 121, 122, 312, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1992, 1993, 1994, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2011, 2013, 2014, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157
;;  UD chains for artificial uses
;;   reg 11 { d104(bb 0 insn -1) }
;;   reg 13 { d122(bb 0 insn -1) }
;;   reg 25 { d352(bb 0 insn -1) }
;;   reg 26 { d353(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 416
;;      reg 195 { d2014(bb 49 insn 409) }
;;   UD chains for insn luid 1 uid 417
;;      reg 192 { d2011(bb 50 insn 416) }
;;   UD chains for insn luid 2 uid 418
;;      reg 24 { d312(bb 50 insn 417) }

( 50 )->[51]->( 55 52 )
;; bb 51 artificial_defs: { }
;; bb 51 artificial_uses: { u504(11){ d104(bb 0 insn -1) }u505(13){ d122(bb 0 insn -1) }u506(25){ d352(bb 0 insn -1) }u507(26){ d353(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 192 194 207 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 192
;; lr  def 	 24 [cc] 334 335 336 337 339 341 342 343
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 192 194 207 213
;; live  gen 	 24 [cc] 334 335 336 337 339 341 342 343
;; live  kill	
;; rd  in  	(144)
15, 17, 18, 20, 27, 59, 83, 103, 104, 121, 122, 312, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1992, 1993, 1994, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2011, 2013, 2014, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157
;; rd  gen 	(9)
310, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106
;; rd  kill	(8)
2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 194 207 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 194 207 213
;; rd  out 	(152)
15, 17, 18, 20, 27, 59, 83, 103, 104, 121, 122, 310, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1992, 1993, 1994, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2011, 2013, 2014, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157
;;  UD chains for artificial uses
;;   reg 11 { d104(bb 0 insn -1) }
;;   reg 13 { d122(bb 0 insn -1) }
;;   reg 25 { d352(bb 0 insn -1) }
;;   reg 26 { d353(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 420
;;      reg 192 { d2011(bb 50 insn 416) }
;;   UD chains for insn luid 1 uid 421
;;      reg 24 { d311(bb 51 insn 420) }
;;   UD chains for insn luid 3 uid 424
;;      reg 335 { d2100(bb 51 insn 423) }
;;   UD chains for insn luid 4 uid 425
;;      reg 337 { d2102(bb 51 insn 424) }
;;   UD chains for insn luid 5 uid 427
;;      reg 336 { d2101(bb 51 insn 425) }
;;   UD chains for insn luid 6 uid 429
;;      reg 334 { d2099(bb 51 insn 421) }
;;      reg 339 { d2103(bb 51 insn 427) }
;;   UD chains for insn luid 7 uid 430
;;      reg 341 { d2104(bb 51 insn 429) }
;;   UD chains for insn luid 8 uid 431
;;      reg 342 { d2105(bb 51 insn 430) }
;;   UD chains for insn luid 9 uid 432
;;      reg 343 { d2106(bb 51 insn 431) }
;;   UD chains for insn luid 10 uid 433
;;      reg 24 { d310(bb 51 insn 432) }

( 49 51 )->[52]->( 54 53 )
;; bb 52 artificial_defs: { }
;; bb 52 artificial_uses: { u519(11){ d104(bb 0 insn -1) }u520(13){ d122(bb 0 insn -1) }u521(25){ d352(bb 0 insn -1) }u522(26){ d353(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 194 207 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 194 213
;; lr  def 	 24 [cc] 193 344 345 346
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 194 207 213
;; live  gen 	 24 [cc] 193 344 345 346
;; live  kill	
;; rd  in  	(153)
15, 17, 18, 20, 27, 59, 83, 103, 104, 121, 122, 310, 313, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1992, 1993, 1994, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2011, 2013, 2014, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157
;; rd  gen 	(5)
309, 2012, 2107, 2108, 2109
;; rd  kill	(4)
2012, 2107, 2108, 2109
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 193 207 213 345
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 193 207 213 345
;; rd  out 	(156)
15, 17, 18, 20, 27, 59, 83, 103, 104, 121, 122, 309, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1992, 1993, 1994, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2011, 2012, 2013, 2014, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157
;;  UD chains for artificial uses
;;   reg 11 { d104(bb 0 insn -1) }
;;   reg 13 { d122(bb 0 insn -1) }
;;   reg 25 { d352(bb 0 insn -1) }
;;   reg 26 { d353(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 436
;;      reg 194 { d2013(bb 49 insn 410) }
;;   UD chains for insn luid 1 uid 437
;;      reg 193 { d2012(bb 52 insn 436) }
;;      reg 213 { d2032(bb 2 insn 2) }
;;   UD chains for insn luid 3 uid 439
;;      reg 344 { d2107(bb 52 insn 438) }
;;   UD chains for insn luid 4 uid 440
;;      reg 346 { d2109(bb 52 insn 439) }
;;   UD chains for insn luid 5 uid 441
;;      reg 345 { d2108(bb 52 insn 440) }
;;   UD chains for insn luid 6 uid 442
;;      reg 24 { d309(bb 52 insn 441) }

( 52 )->[53]->( 56 )
;; bb 53 artificial_defs: { }
;; bb 53 artificial_uses: { u530(11){ d104(bb 0 insn -1) }u531(13){ d122(bb 0 insn -1) }u532(25){ d352(bb 0 insn -1) }u533(26){ d353(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 207
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 191
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 207
;; live  gen 	 191
;; live  kill	
;; rd  in  	(156)
15, 17, 18, 20, 27, 59, 83, 103, 104, 121, 122, 309, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1992, 1993, 1994, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2011, 2012, 2013, 2014, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157
;; rd  gen 	(1)
2010
;; rd  kill	(3)
2008, 2009, 2010
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 191 207
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 191 207
;; rd  out 	(157)
15, 17, 18, 20, 27, 59, 83, 103, 104, 121, 122, 309, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1992, 1993, 1994, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2010, 2011, 2012, 2013, 2014, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157
;;  UD chains for artificial uses
;;   reg 11 { d104(bb 0 insn -1) }
;;   reg 13 { d122(bb 0 insn -1) }
;;   reg 25 { d352(bb 0 insn -1) }
;;   reg 26 { d353(bb 0 insn -1) }

( 52 )->[54]->( 56 )
;; bb 54 artificial_defs: { }
;; bb 54 artificial_uses: { u534(11){ d104(bb 0 insn -1) }u535(13){ d122(bb 0 insn -1) }u536(25){ d352(bb 0 insn -1) }u537(26){ d353(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 193 207 213 345
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 193 213 345
;; lr  def 	 191 347
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 193 207 213 345
;; live  gen 	 191 347
;; live  kill	
;; rd  in  	(156)
15, 17, 18, 20, 27, 59, 83, 103, 104, 121, 122, 309, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1992, 1993, 1994, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2011, 2012, 2013, 2014, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157
;; rd  gen 	(2)
2008, 2110
;; rd  kill	(4)
2008, 2009, 2010, 2110
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 191 207
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 191 207
;; rd  out 	(158)
15, 17, 18, 20, 27, 59, 83, 103, 104, 121, 122, 309, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1992, 1993, 1994, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2011, 2012, 2013, 2014, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157
;;  UD chains for artificial uses
;;   reg 11 { d104(bb 0 insn -1) }
;;   reg 13 { d122(bb 0 insn -1) }
;;   reg 25 { d352(bb 0 insn -1) }
;;   reg 26 { d353(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 449
;;      reg 193 { d2012(bb 52 insn 436) }
;;   UD chains for insn luid 1 uid 450
;;      reg 213 { d2032(bb 2 insn 2) }
;;      reg 347 { d2110(bb 54 insn 449) }
;;   UD chains for insn luid 2 uid 451
;;      reg 345 { d2108(bb 52 insn 440) }

( 50 51 )->[55]->( 56 )
;; bb 55 artificial_defs: { }
;; bb 55 artificial_uses: { u542(11){ d104(bb 0 insn -1) }u543(13){ d122(bb 0 insn -1) }u544(25){ d352(bb 0 insn -1) }u545(26){ d353(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 207
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 191
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 207
;; live  gen 	 191
;; live  kill	
;; rd  in  	(153)
15, 17, 18, 20, 27, 59, 83, 103, 104, 121, 122, 310, 312, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1992, 1993, 1994, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2011, 2013, 2014, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157
;; rd  gen 	(1)
2009
;; rd  kill	(3)
2008, 2009, 2010
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 191 207
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 191 207
;; rd  out 	(154)
15, 17, 18, 20, 27, 59, 83, 103, 104, 121, 122, 310, 312, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1992, 1993, 1994, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2009, 2011, 2013, 2014, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157
;;  UD chains for artificial uses
;;   reg 11 { d104(bb 0 insn -1) }
;;   reg 13 { d122(bb 0 insn -1) }
;;   reg 25 { d352(bb 0 insn -1) }
;;   reg 26 { d353(bb 0 insn -1) }

( 55 53 54 )->[56]->( 57 58 )
;; bb 56 artificial_defs: { }
;; bb 56 artificial_uses: { u546(11){ d104(bb 0 insn -1) }u547(13){ d122(bb 0 insn -1) }u548(25){ d352(bb 0 insn -1) }u549(26){ d353(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 191 207
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 191
;; lr  def 	 24 [cc] 348 349
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 191 207
;; live  gen 	 24 [cc] 348 349
;; live  kill	
;; rd  in  	(162)
15, 17, 18, 20, 27, 59, 83, 103, 104, 121, 122, 309, 310, 312, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1992, 1993, 1994, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157
;; rd  gen 	(3)
308, 2111, 2112
;; rd  kill	(2)
2111, 2112
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 207
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 207
;; rd  out 	(162)
15, 17, 18, 20, 27, 59, 83, 103, 104, 121, 122, 308, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1992, 1993, 1994, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157
;;  UD chains for artificial uses
;;   reg 11 { d104(bb 0 insn -1) }
;;   reg 13 { d122(bb 0 insn -1) }
;;   reg 25 { d352(bb 0 insn -1) }
;;   reg 26 { d353(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 459
;;      reg 191 { d2010(bb 53 insn 444) d2009(bb 55 insn 456) d2008(bb 54 insn 451) }
;;   UD chains for insn luid 1 uid 460
;;      reg 148 { d1984(bb 37 insn 305) d1983(bb 38 insn 317) d1982(bb 46 insn 389) d1981(bb 47 insn 401) d1980(bb 48 insn 406) }
;;      reg 348 { d2111(bb 56 insn 459) }
;;   UD chains for insn luid 2 uid 461
;;      reg 349 { d2112(bb 56 insn 460) }
;;   UD chains for insn luid 3 uid 462
;;      reg 24 { d308(bb 56 insn 461) }

( 56 )->[57]->( 72 )
;; bb 57 artificial_defs: { }
;; bb 57 artificial_uses: { u555(11){ d104(bb 0 insn -1) }u556(13){ d122(bb 0 insn -1) }u557(25){ d352(bb 0 insn -1) }u558(26){ d353(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 207
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 207
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 207
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]
;; rd  in  	(162)
15, 17, 18, 20, 27, 59, 83, 103, 104, 121, 122, 308, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1992, 1993, 1994, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157
;; rd  gen 	(1)
13
;; rd  kill	(48)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(158)
13, 59, 83, 103, 104, 121, 122, 308, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1992, 1993, 1994, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157
;;  UD chains for artificial uses
;;   reg 11 { d104(bb 0 insn -1) }
;;   reg 13 { d122(bb 0 insn -1) }
;;   reg 25 { d352(bb 0 insn -1) }
;;   reg 26 { d353(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 464
;;      reg 207 { d2023(bb 12 insn 84) }
;;   UD chains for insn luid 1 uid 465
;;      reg 147 { d1979(bb 21 insn 138) }
;;   UD chains for insn luid 2 uid 466
;;      reg 13 { d122(bb 0 insn -1) }
;;      reg 0 { d14(bb 57 insn 464) }
;;      reg 1 { d41(bb 57 insn 465) }

( 56 )->[58]->( 59 60 )
;; bb 58 artificial_defs: { }
;; bb 58 artificial_uses: { u564(11){ d104(bb 0 insn -1) }u565(13){ d122(bb 0 insn -1) }u566(25){ d352(bb 0 insn -1) }u567(26){ d353(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 207
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 350 351 352 353 354 355 356 357 358 359 360
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 207
;; live  gen 	 0 [r0] 24 [cc] 350 351 352 353 354 355 356 357 358 359 360
;; live  kill	 14 [lr]
;; rd  in  	(162)
15, 17, 18, 20, 27, 59, 83, 103, 104, 121, 122, 308, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1992, 1993, 1994, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157
;; rd  gen 	(12)
305, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123
;; rd  kill	(28)
123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 207
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 207
;; rd  out 	(173)
15, 17, 18, 20, 27, 59, 83, 103, 104, 121, 122, 305, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1992, 1993, 1994, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157
;;  UD chains for artificial uses
;;   reg 11 { d104(bb 0 insn -1) }
;;   reg 13 { d122(bb 0 insn -1) }
;;   reg 25 { d352(bb 0 insn -1) }
;;   reg 26 { d353(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 471
;;      reg 147 { d1979(bb 21 insn 138) }
;;   UD chains for insn luid 1 uid 472
;;      reg 351 { d2114(bb 58 insn 471) }
;;   UD chains for insn luid 2 uid 473
;;      reg 352 { d2115(bb 58 insn 472) }
;;   eq_note reg 351 { }
;;   UD chains for insn luid 3 uid 474
;;      reg 350 { d2113(bb 58 insn 473) }
;;   UD chains for insn luid 4 uid 475
;;      reg 13 { d122(bb 0 insn -1) }
;;      reg 0 { d12(bb 58 insn 474) }
;;   UD chains for insn luid 5 uid 476
;;      reg 147 { d1979(bb 21 insn 138) }
;;   UD chains for insn luid 6 uid 477
;;      reg 25 { d352(bb 0 insn -1) }
;;   UD chains for insn luid 7 uid 478
;;      reg 353 { d2116(bb 58 insn 476) }
;;      reg 354 { d2117(bb 58 insn 477) }
;;   UD chains for insn luid 8 uid 479
;;      reg 147 { d1979(bb 21 insn 138) }
;;      reg 355 { d2118(bb 58 insn 478) }
;;   UD chains for insn luid 9 uid 480
;;      reg 147 { d1979(bb 21 insn 138) }
;;   UD chains for insn luid 10 uid 481
;;      reg 25 { d352(bb 0 insn -1) }
;;   UD chains for insn luid 11 uid 482
;;      reg 356 { d2119(bb 58 insn 480) }
;;      reg 357 { d2120(bb 58 insn 481) }
;;   UD chains for insn luid 12 uid 483
;;      reg 147 { d1979(bb 21 insn 138) }
;;      reg 358 { d2121(bb 58 insn 482) }
;;   UD chains for insn luid 13 uid 484
;;      reg 25 { d352(bb 0 insn -1) }
;;   UD chains for insn luid 14 uid 485
;;      reg 360 { d2123(bb 58 insn 484) }
;;   UD chains for insn luid 15 uid 486
;;      reg 359 { d2122(bb 58 insn 485) }
;;   UD chains for insn luid 16 uid 487
;;      reg 24 { d305(bb 58 insn 486) }

( 58 )->[59]->( 60 )
;; bb 59 artificial_defs: { }
;; bb 59 artificial_uses: { u591(11){ d104(bb 0 insn -1) }u592(13){ d122(bb 0 insn -1) }u593(25){ d352(bb 0 insn -1) }u594(26){ d353(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 207
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 207
;; lr  def 	 196 197 361 363 364 365 366 367
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 207
;; live  gen 	 196 197 361 363 364 365 366 367
;; live  kill	
;; rd  in  	(173)
15, 17, 18, 20, 27, 59, 83, 103, 104, 121, 122, 305, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1992, 1993, 1994, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157
;; rd  gen 	(8)
2015, 2016, 2124, 2125, 2126, 2127, 2128, 2129
;; rd  kill	(8)
2015, 2016, 2124, 2125, 2126, 2127, 2128, 2129
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; rd  out 	(181)
15, 17, 18, 20, 27, 59, 83, 103, 104, 121, 122, 305, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1992, 1993, 1994, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157
;;  UD chains for artificial uses
;;   reg 11 { d104(bb 0 insn -1) }
;;   reg 13 { d122(bb 0 insn -1) }
;;   reg 25 { d352(bb 0 insn -1) }
;;   reg 26 { d353(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 489
;;      reg 207 { d2023(bb 12 insn 84) }
;;   UD chains for insn luid 1 uid 490
;;      reg 197 { d2016(bb 59 insn 489) }
;;   UD chains for insn luid 2 uid 491
;;      reg 196 { d2015(bb 59 insn 490) }
;;   UD chains for insn luid 3 uid 493
;;      reg 197 { d2016(bb 59 insn 489) }
;;   UD chains for insn luid 5 uid 495
;;      reg 363 { d2125(bb 59 insn 493) }
;;      reg 365 { d2127(bb 59 insn 494) }
;;   eq_note reg 363 { }
;;   UD chains for insn luid 6 uid 496
;;      reg 147 { d1979(bb 21 insn 138) }
;;      reg 361 { d2124(bb 59 insn 491) }
;;   UD chains for insn luid 7 uid 497
;;      reg 364 { d2126(bb 59 insn 495) }
;;      reg 366 { d2128(bb 59 insn 496) }
;;   UD chains for insn luid 8 uid 498
;;      reg 147 { d1979(bb 21 insn 138) }
;;      reg 361 { d2124(bb 59 insn 491) }
;;      reg 367 { d2129(bb 59 insn 497) }

( 58 59 )->[60]->( 61 72 )
;; bb 60 artificial_defs: { }
;; bb 60 artificial_uses: { u609(11){ d104(bb 0 insn -1) }u610(13){ d122(bb 0 insn -1) }u611(25){ d352(bb 0 insn -1) }u612(26){ d353(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 140 141 368 369 370 371 372
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; live  gen 	 0 [r0] 24 [cc] 140 141 368 369 370 371 372
;; live  kill	 14 [lr]
;; rd  in  	(181)
15, 17, 18, 20, 27, 59, 83, 103, 104, 121, 122, 305, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1992, 1993, 1994, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157
;; rd  gen 	(8)
302, 1974, 1975, 2130, 2131, 2132, 2133, 2134
;; rd  kill	(24)
123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 1974, 1975, 2130, 2131, 2132, 2133, 2134
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; rd  out 	(188)
15, 17, 18, 20, 27, 59, 83, 103, 104, 121, 122, 302, 352, 353, 1970, 1971, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1992, 1993, 1994, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157
;;  UD chains for artificial uses
;;   reg 11 { d104(bb 0 insn -1) }
;;   reg 13 { d122(bb 0 insn -1) }
;;   reg 25 { d352(bb 0 insn -1) }
;;   reg 26 { d353(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 501
;;      reg 13 { d122(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 502
;;      reg 147 { d1979(bb 21 insn 138) }
;;   UD chains for insn luid 2 uid 503
;;      reg 369 { d2131(bb 60 insn 502) }
;;   UD chains for insn luid 3 uid 504
;;      reg 370 { d2132(bb 60 insn 503) }
;;   eq_note reg 369 { }
;;   UD chains for insn luid 4 uid 505
;;      reg 368 { d2130(bb 60 insn 504) }
;;   UD chains for insn luid 5 uid 506
;;      reg 13 { d122(bb 0 insn -1) }
;;      reg 0 { d9(bb 60 insn 505) }
;;   UD chains for insn luid 6 uid 508
;;      reg 13 { d122(bb 0 insn -1) }
;;   UD chains for insn luid 7 uid 509
;;      reg 371 { d2133(bb 60 insn 508) }
;;   eq_note reg 13 { }
;;   UD chains for insn luid 8 uid 510
;;      reg 140 { d1974(bb 60 insn 509) }
;;   UD chains for insn luid 9 uid 511
;;      reg 141 { d1975(bb 60 insn 510) }
;;   UD chains for insn luid 10 uid 512
;;      reg 372 { d2134(bb 60 insn 511) }
;;   UD chains for insn luid 11 uid 513
;;      reg 24 { d302(bb 60 insn 512) }

( 60 )->[61]->( 72 )
;; bb 61 artificial_defs: { }
;; bb 61 artificial_uses: { u628(11){ d104(bb 0 insn -1) }u629(13){ d122(bb 0 insn -1) }u630(25){ d352(bb 0 insn -1) }u631(26){ d353(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]
;; rd  in  	(188)
15, 17, 18, 20, 27, 59, 83, 103, 104, 121, 122, 302, 352, 353, 1970, 1971, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1992, 1993, 1994, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157
;; rd  gen 	(0)

;; rd  kill	(17)
123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(188)
15, 17, 18, 20, 27, 59, 83, 103, 104, 121, 122, 302, 352, 353, 1970, 1971, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1992, 1993, 1994, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157
;;  UD chains for artificial uses
;;   reg 11 { d104(bb 0 insn -1) }
;;   reg 13 { d122(bb 0 insn -1) }
;;   reg 25 { d352(bb 0 insn -1) }
;;   reg 26 { d353(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 519
;;      reg 140 { d1974(bb 60 insn 509) }
;;   UD chains for insn luid 2 uid 520
;;      reg 13 { d122(bb 0 insn -1) }
;;      reg 0 { d7(bb 61 insn 518) }
;;      reg 1 { d32(bb 61 insn 519) }

( 12 11 )->[62]->( 63 72 )
;; bb 62 artificial_defs: { }
;; bb 62 artificial_uses: { u636(11){ d104(bb 0 insn -1) }u637(13){ d122(bb 0 insn -1) }u638(25){ d352(bb 0 insn -1) }u639(26){ d353(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 209 210 213 214
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 214
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 209 210 213 214
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(37)
27, 30, 59, 83, 103, 104, 121, 122, 343, 346, 352, 353, 2019, 2020, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045
;; rd  gen 	(1)
300
;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 209 210 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 209 210 213
;; rd  out 	(36)
27, 30, 59, 83, 103, 104, 121, 122, 300, 352, 353, 2019, 2020, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045
;;  UD chains for artificial uses
;;   reg 11 { d104(bb 0 insn -1) }
;;   reg 13 { d122(bb 0 insn -1) }
;;   reg 25 { d352(bb 0 insn -1) }
;;   reg 26 { d353(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 525
;;      reg 214 { d2033(bb 2 insn 3) }
;;   UD chains for insn luid 1 uid 526
;;      reg 24 { d300(bb 62 insn 525) }

( 62 )->[63]->( 64 68 )
;; bb 63 artificial_defs: { }
;; bb 63 artificial_uses: { u642(11){ d104(bb 0 insn -1) }u643(13){ d122(bb 0 insn -1) }u644(25){ d352(bb 0 insn -1) }u645(26){ d353(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 209 210 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 210
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 209 210 213
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(36)
27, 30, 59, 83, 103, 104, 121, 122, 300, 352, 353, 2019, 2020, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045
;; rd  gen 	(1)
299
;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 209 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 209 213
;; rd  out 	(36)
27, 30, 59, 83, 103, 104, 121, 122, 299, 352, 353, 2019, 2020, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045
;;  UD chains for artificial uses
;;   reg 11 { d104(bb 0 insn -1) }
;;   reg 13 { d122(bb 0 insn -1) }
;;   reg 25 { d352(bb 0 insn -1) }
;;   reg 26 { d353(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 528
;;      reg 210 { d2029(bb 5 insn 36) d2028(bb 4 insn 17) }
;;   UD chains for insn luid 1 uid 529
;;      reg 24 { d299(bb 63 insn 528) }

( 63 )->[64]->( 65 68 )
;; bb 64 artificial_defs: { }
;; bb 64 artificial_uses: { u648(11){ d104(bb 0 insn -1) }u649(13){ d122(bb 0 insn -1) }u650(25){ d352(bb 0 insn -1) }u651(26){ d353(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 209 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 209 213
;; lr  def 	 24 [cc] 375
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 209 213
;; live  gen 	 24 [cc] 375
;; live  kill	
;; rd  in  	(36)
27, 30, 59, 83, 103, 104, 121, 122, 299, 352, 353, 2019, 2020, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045
;; rd  gen 	(2)
298, 2135
;; rd  kill	(1)
2135
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 209 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 209 213
;; rd  out 	(37)
27, 30, 59, 83, 103, 104, 121, 122, 298, 352, 353, 2019, 2020, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2135
;;  UD chains for artificial uses
;;   reg 11 { d104(bb 0 insn -1) }
;;   reg 13 { d122(bb 0 insn -1) }
;;   reg 25 { d352(bb 0 insn -1) }
;;   reg 26 { d353(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 531
;;      reg 213 { d2032(bb 2 insn 2) }
;;   UD chains for insn luid 1 uid 532
;;      reg 209 { d2027(bb 5 insn 22) d2026(bb 4 insn 16) }
;;      reg 375 { d2135(bb 64 insn 531) }
;;   UD chains for insn luid 2 uid 533
;;      reg 24 { d298(bb 64 insn 532) }

( 64 )->[65]->( 66 67 )
;; bb 65 artificial_defs: { }
;; bb 65 artificial_uses: { u656(11){ d104(bb 0 insn -1) }u657(13){ d122(bb 0 insn -1) }u658(25){ d352(bb 0 insn -1) }u659(26){ d353(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 209 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 213
;; lr  def 	 24 [cc] 376 377
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 209 213
;; live  gen 	 24 [cc] 376 377
;; live  kill	
;; rd  in  	(37)
27, 30, 59, 83, 103, 104, 121, 122, 298, 352, 353, 2019, 2020, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2135
;; rd  gen 	(3)
297, 2136, 2137
;; rd  kill	(2)
2136, 2137
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 209 213 376
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 209 213 376
;; rd  out 	(39)
27, 30, 59, 83, 103, 104, 121, 122, 297, 352, 353, 2019, 2020, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2135, 2136, 2137
;;  UD chains for artificial uses
;;   reg 11 { d104(bb 0 insn -1) }
;;   reg 13 { d122(bb 0 insn -1) }
;;   reg 25 { d352(bb 0 insn -1) }
;;   reg 26 { d353(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 535
;;      reg 213 { d2032(bb 2 insn 2) }
;;   UD chains for insn luid 1 uid 536
;;      reg 377 { d2137(bb 65 insn 535) }
;;   UD chains for insn luid 2 uid 537
;;      reg 376 { d2136(bb 65 insn 536) }
;;   UD chains for insn luid 3 uid 538
;;      reg 24 { d297(bb 65 insn 537) }

( 65 )->[66]->( 68 )
;; bb 66 artificial_defs: { }
;; bb 66 artificial_uses: { u664(11){ d104(bb 0 insn -1) }u665(13){ d122(bb 0 insn -1) }u666(25){ d352(bb 0 insn -1) }u667(26){ d353(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 209 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 209 213
;; lr  def 	 378 380
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 209 213
;; live  gen 	 378 380
;; live  kill	
;; rd  in  	(39)
27, 30, 59, 83, 103, 104, 121, 122, 297, 352, 353, 2019, 2020, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2135, 2136, 2137
;; rd  gen 	(2)
2138, 2139
;; rd  kill	(2)
2138, 2139
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(41)
27, 30, 59, 83, 103, 104, 121, 122, 297, 352, 353, 2019, 2020, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2135, 2136, 2137, 2138, 2139
;;  UD chains for artificial uses
;;   reg 11 { d104(bb 0 insn -1) }
;;   reg 13 { d122(bb 0 insn -1) }
;;   reg 25 { d352(bb 0 insn -1) }
;;   reg 26 { d353(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 541
;;      reg 213 { d2032(bb 2 insn 2) }
;;      reg 378 { d2138(bb 66 insn 540) }
;;   UD chains for insn luid 2 uid 543
;;      reg 209 { d2027(bb 5 insn 22) d2026(bb 4 insn 16) }
;;   UD chains for insn luid 3 uid 544
;;      reg 213 { d2032(bb 2 insn 2) }
;;      reg 380 { d2139(bb 66 insn 543) }

( 65 )->[67]->( 68 )
;; bb 67 artificial_defs: { }
;; bb 67 artificial_uses: { u673(11){ d104(bb 0 insn -1) }u674(13){ d122(bb 0 insn -1) }u675(25){ d352(bb 0 insn -1) }u676(26){ d353(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 209 213 376
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 209 213 376
;; lr  def 	 383
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 209 213 376
;; live  gen 	 383
;; live  kill	
;; rd  in  	(39)
27, 30, 59, 83, 103, 104, 121, 122, 297, 352, 353, 2019, 2020, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2135, 2136, 2137
;; rd  gen 	(1)
2140
;; rd  kill	(1)
2140
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(40)
27, 30, 59, 83, 103, 104, 121, 122, 297, 352, 353, 2019, 2020, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2135, 2136, 2137, 2140
;;  UD chains for artificial uses
;;   reg 11 { d104(bb 0 insn -1) }
;;   reg 13 { d122(bb 0 insn -1) }
;;   reg 25 { d352(bb 0 insn -1) }
;;   reg 26 { d353(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 550
;;      reg 213 { d2032(bb 2 insn 2) }
;;      reg 376 { d2136(bb 65 insn 536) }
;;   UD chains for insn luid 1 uid 552
;;      reg 209 { d2027(bb 5 insn 22) d2026(bb 4 insn 16) }
;;   UD chains for insn luid 2 uid 553
;;      reg 213 { d2032(bb 2 insn 2) }
;;      reg 383 { d2140(bb 67 insn 552) }

( 64 63 67 66 )->[68]->( 69 72 )
;; bb 68 artificial_defs: { }
;; bb 68 artificial_uses: { u682(11){ d104(bb 0 insn -1) }u683(13){ d122(bb 0 insn -1) }u684(25){ d352(bb 0 insn -1) }u685(26){ d353(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 136 137 384 385
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 136 137 384 385
;; live  kill	
;; rd  in  	(44)
27, 30, 59, 83, 103, 104, 121, 122, 297, 298, 299, 352, 353, 2019, 2020, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2135, 2136, 2137, 2138, 2139, 2140
;; rd  gen 	(5)
296, 1972, 1973, 2141, 2142
;; rd  kill	(4)
1972, 1973, 2141, 2142
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; rd  out 	(46)
27, 30, 59, 83, 103, 104, 121, 122, 296, 352, 353, 1972, 1973, 2019, 2020, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142
;;  UD chains for artificial uses
;;   reg 11 { d104(bb 0 insn -1) }
;;   reg 13 { d122(bb 0 insn -1) }
;;   reg 25 { d352(bb 0 insn -1) }
;;   reg 26 { d353(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 557
;;      reg 13 { d122(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 558
;;      reg 384 { d2141(bb 68 insn 557) }
;;   eq_note reg 13 { }
;;   UD chains for insn luid 2 uid 559
;;      reg 136 { d1972(bb 68 insn 558) }
;;   UD chains for insn luid 3 uid 560
;;      reg 137 { d1973(bb 68 insn 559) }
;;   UD chains for insn luid 4 uid 561
;;      reg 385 { d2142(bb 68 insn 560) }
;;   UD chains for insn luid 5 uid 562
;;      reg 24 { d296(bb 68 insn 561) }

( 68 )->[69]->( 72 )
;; bb 69 artificial_defs: { }
;; bb 69 artificial_uses: { u693(11){ d104(bb 0 insn -1) }u694(13){ d122(bb 0 insn -1) }u695(25){ d352(bb 0 insn -1) }u696(26){ d353(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 390 391
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 390 391
;; live  kill	 14 [lr]
;; rd  in  	(46)
27, 30, 59, 83, 103, 104, 121, 122, 296, 352, 353, 1972, 1973, 2019, 2020, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142
;; rd  gen 	(3)
2, 2143, 2144
;; rd  kill	(50)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 2143, 2144
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(47)
2, 59, 83, 103, 104, 121, 122, 296, 352, 353, 1972, 1973, 2019, 2020, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144
;;  UD chains for artificial uses
;;   reg 11 { d104(bb 0 insn -1) }
;;   reg 13 { d122(bb 0 insn -1) }
;;   reg 25 { d352(bb 0 insn -1) }
;;   reg 26 { d353(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 568
;;      reg 136 { d1972(bb 68 insn 558) }
;;   UD chains for insn luid 2 uid 569
;;      reg 13 { d122(bb 0 insn -1) }
;;      reg 0 { d5(bb 69 insn 567) }
;;      reg 1 { d31(bb 69 insn 568) }
;;   UD chains for insn luid 3 uid 573
;;      reg 136 { d1972(bb 68 insn 558) }
;;   UD chains for insn luid 4 uid 574
;;      reg 391 { d2144(bb 69 insn 573) }
;;   UD chains for insn luid 6 uid 576
;;      reg 390 { d2143(bb 69 insn 574) }
;;   UD chains for insn luid 8 uid 578
;;      reg 13 { d122(bb 0 insn -1) }
;;      reg 0 { d3(bb 69 insn 575) }
;;      reg 1 { d34(bb 69 insn 576) }
;;      reg 2 { d61(bb 69 insn 577) }

( 29 30 )->[70]->( 31 )
;; bb 70 artificial_defs: { }
;; bb 70 artificial_uses: { u708(11){ d104(bb 0 insn -1) }u709(13){ d122(bb 0 insn -1) }u710(25){ d352(bb 0 insn -1) }u711(26){ d353(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 206 207 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 158 392 393 394 398 399
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 206 207 213
;; live  gen 	 158 392 393 394 398 399
;; live  kill	
;; rd  in  	(66)
27, 59, 83, 103, 104, 121, 122, 286, 293, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 1988, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2155, 2156, 2157
;; rd  gen 	(6)
1989, 2145, 2146, 2147, 2148, 2149
;; rd  kill	(7)
1988, 1989, 2145, 2146, 2147, 2148, 2149
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 158 206 207 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 158 206 207 213
;; rd  out 	(71)
27, 59, 83, 103, 104, 121, 122, 286, 293, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 1989, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2145, 2146, 2147, 2148, 2149, 2155, 2156, 2157
;;  UD chains for artificial uses
;;   reg 11 { d104(bb 0 insn -1) }
;;   reg 13 { d122(bb 0 insn -1) }
;;   reg 25 { d352(bb 0 insn -1) }
;;   reg 26 { d353(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 587
;;      reg 13 { d122(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 588
;;      reg 393 { d2146(bb 70 insn 587) }
;;   eq_note reg 13 { }
;;   UD chains for insn luid 2 uid 589
;;      reg 392 { d2145(bb 70 insn 588) }
;;   UD chains for insn luid 3 uid 593
;;      reg 394 { d2147(bb 70 insn 589) }
;;   UD chains for insn luid 4 uid 594
;;      reg 394 { d2147(bb 70 insn 589) }
;;   UD chains for insn luid 5 uid 595
;;      reg 398 { d2148(bb 70 insn 593) }
;;      reg 399 { d2149(bb 70 insn 594) }

( 42 43 )->[71]->( 44 )
;; bb 71 artificial_defs: { }
;; bb 71 artificial_uses: { u720(11){ d104(bb 0 insn -1) }u721(13){ d122(bb 0 insn -1) }u722(25){ d352(bb 0 insn -1) }u723(26){ d353(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 206 207 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 177 400 401 402 406 407
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 206 207 213
;; live  gen 	 177 400 401 402 406 407
;; live  kill	
;; rd  in  	(66)
27, 59, 83, 103, 104, 121, 122, 285, 290, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 2001, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2085, 2086, 2087, 2088, 2089, 2090, 2155, 2156, 2157
;; rd  gen 	(6)
2002, 2150, 2151, 2152, 2153, 2154
;; rd  kill	(7)
2001, 2002, 2150, 2151, 2152, 2153, 2154
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 177 206 207 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 177 206 207 213
;; rd  out 	(71)
27, 59, 83, 103, 104, 121, 122, 285, 290, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 2002, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2085, 2086, 2087, 2088, 2089, 2090, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157
;;  UD chains for artificial uses
;;   reg 11 { d104(bb 0 insn -1) }
;;   reg 13 { d122(bb 0 insn -1) }
;;   reg 25 { d352(bb 0 insn -1) }
;;   reg 26 { d353(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 602
;;      reg 13 { d122(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 603
;;      reg 401 { d2151(bb 71 insn 602) }
;;   eq_note reg 13 { }
;;   UD chains for insn luid 2 uid 604
;;      reg 400 { d2150(bb 71 insn 603) }
;;   UD chains for insn luid 3 uid 608
;;      reg 402 { d2152(bb 71 insn 604) }
;;   UD chains for insn luid 4 uid 609
;;      reg 402 { d2152(bb 71 insn 604) }
;;   UD chains for insn luid 5 uid 610
;;      reg 406 { d2153(bb 71 insn 608) }
;;      reg 407 { d2154(bb 71 insn 609) }

( 61 2 68 60 57 62 69 )->[72]->( 1 )
;; bb 72 artificial_defs: { }
;; bb 72 artificial_uses: { u732(11){ d104(bb 0 insn -1) }u733(13){ d122(bb 0 insn -1) }u734(25){ d352(bb 0 insn -1) }u735(26){ d353(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(208)
2, 13, 15, 17, 18, 20, 27, 30, 59, 83, 103, 104, 121, 122, 139, 296, 300, 302, 308, 351, 352, 353, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1992, 1993, 1994, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(208)
2, 13, 15, 17, 18, 20, 27, 30, 59, 83, 103, 104, 121, 122, 139, 296, 300, 302, 308, 351, 352, 353, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1992, 1993, 1994, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157
;;  UD chains for artificial uses
;;   reg 11 { d104(bb 0 insn -1) }
;;   reg 13 { d122(bb 0 insn -1) }
;;   reg 25 { d352(bb 0 insn -1) }
;;   reg 26 { d353(bb 0 insn -1) }

( 72 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u736(11){ d104(bb 0 insn -1) }u737(13){ d122(bb 0 insn -1) }u738(14){ d139(bb 0 insn -1) }u739(25){ d352(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(208)
2, 13, 15, 17, 18, 20, 27, 30, 59, 83, 103, 104, 121, 122, 139, 296, 300, 302, 308, 351, 352, 353, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1992, 1993, 1994, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(208)
2, 13, 15, 17, 18, 20, 27, 30, 59, 83, 103, 104, 121, 122, 139, 296, 300, 302, 308, 351, 352, 353, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1992, 1993, 1994, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157
;;  UD chains for artificial uses
;;   reg 11 { d104(bb 0 insn -1) }
;;   reg 13 { d122(bb 0 insn -1) }
;;   reg 14 { d139(bb 0 insn -1) }
;;   reg 25 { d352(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 10 to worklist
  Adding insn 13 to worklist
  Adding insn 638 to worklist
  Adding insn 38 to worklist
  Adding insn 40 to worklist
  Adding insn 44 to worklist
  Adding insn 640 to worklist
  Adding insn 53 to worklist
  Adding insn 52 to worklist
  Adding insn 59 to worklist
  Adding insn 70 to worklist
  Adding insn 67 to worklist
  Adding insn 642 to worklist
  Adding insn 72 to worklist
  Adding insn 86 to worklist
  Adding insn 83 to worklist
  Adding insn 90 to worklist
  Adding insn 94 to worklist
  Adding insn 97 to worklist
  Adding insn 102 to worklist
  Adding insn 107 to worklist
  Adding insn 106 to worklist
  Adding insn 116 to worklist
  Adding insn 113 to worklist
  Adding insn 644 to worklist
  Adding insn 140 to worklist
  Adding insn 146 to worklist
  Adding insn 150 to worklist
  Adding insn 646 to worklist
  Adding insn 164 to worklist
  Adding insn 169 to worklist
  Adding insn 177 to worklist
  Adding insn 185 to worklist
  Adding insn 199 to worklist
  Adding insn 217 to worklist
  Adding insn 248 to worklist
  Adding insn 240 to worklist
  Adding insn 234 to worklist
  Adding insn 230 to worklist
  Adding insn 227 to worklist
  Adding insn 223 to worklist
  Adding insn 648 to worklist
  Adding insn 261 to worklist
  Adding insn 650 to worklist
  Adding insn 307 to worklist
  Adding insn 303 to worklist
  Adding insn 296 to worklist
  Adding insn 290 to worklist
  Adding insn 284 to worklist
  Adding insn 319 to worklist
  Adding insn 316 to worklist
  Adding insn 311 to worklist
  Adding insn 652 to worklist
  Adding insn 323 to worklist
  Adding insn 321 to worklist
  Adding insn 331 to worklist
  Adding insn 339 to worklist
  Adding insn 347 to worklist
  Adding insn 361 to worklist
  Adding insn 372 to worklist
  Adding insn 379 to worklist
  Adding insn 391 to worklist
  Adding insn 387 to worklist
  Adding insn 383 to worklist
  Adding insn 654 to worklist
  Adding insn 400 to worklist
  Adding insn 395 to worklist
  Adding insn 414 to worklist
  Adding insn 411 to worklist
  Adding insn 418 to worklist
  Adding insn 433 to worklist
  Adding insn 442 to worklist
  Adding insn 437 to worklist
  Adding insn 656 to worklist
  Adding insn 658 to worklist
  Adding insn 450 to worklist
  Adding insn 462 to worklist
  Adding insn 660 to worklist
  Adding insn 466 to worklist
  Adding insn 487 to worklist
  Adding insn 483 to worklist
  Adding insn 479 to worklist
  Adding insn 475 to worklist
  Adding insn 498 to worklist
  Adding insn 513 to worklist
  Adding insn 510 to worklist
  Adding insn 506 to worklist
  Adding insn 501 to worklist
  Adding insn 662 to worklist
  Adding insn 520 to worklist
  Adding insn 526 to worklist
  Adding insn 529 to worklist
  Adding insn 533 to worklist
  Adding insn 538 to worklist
  Adding insn 664 to worklist
  Adding insn 544 to worklist
  Adding insn 541 to worklist
  Adding insn 553 to worklist
  Adding insn 550 to worklist
  Adding insn 562 to worklist
  Adding insn 559 to worklist
  Adding insn 666 to worklist
  Adding insn 578 to worklist
  Adding insn 569 to worklist
  Adding insn 668 to worklist
  Adding insn 670 to worklist
Finished finding needed instructions:
Processing use of (reg 13 sp) in insn 569:
Processing use of (reg 0 r0) in insn 569:
  Adding insn 567 to worklist
Processing use of (reg 1 r1) in insn 569:
  Adding insn 568 to worklist
Processing use of (reg 136 [ D.26069 ]) in insn 568:
  Adding insn 558 to worklist
Processing use of (reg 384) in insn 558:
  Adding insn 557 to worklist
Processing use of (reg 13 sp) in insn 557:
Processing use of (reg 13 sp) in insn 578:
Processing use of (reg 0 r0) in insn 578:
  Adding insn 575 to worklist
Processing use of (reg 1 r1) in insn 578:
  Adding insn 576 to worklist
Processing use of (reg 2 r2) in insn 578:
  Adding insn 577 to worklist
Processing use of (reg 390) in insn 576:
  Adding insn 574 to worklist
Processing use of (reg 391 [ <variable>.task ]) in insn 574:
  Adding insn 573 to worklist
Processing use of (reg 136 [ D.26069 ]) in insn 573:
Processing use of (reg 136 [ D.26069 ]) in insn 559:
Processing use of (reg 24 cc) in insn 562:
  Adding insn 561 to worklist
Processing use of (reg 385) in insn 561:
  Adding insn 560 to worklist
Processing use of (reg 137 [ D.26064 ]) in insn 560:
Processing use of (reg 213 [ regs ]) in insn 550:
  Adding insn 2 to worklist
Processing use of (reg 376) in insn 550:
  Adding insn 536 to worklist
Processing use of (reg 377 [ <variable>.uregs+64 ]) in insn 536:
  Adding insn 535 to worklist
Processing use of (reg 213 [ regs ]) in insn 535:
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 213 [ regs ]) in insn 553:
Processing use of (reg 383) in insn 553:
  Adding insn 552 to worklist
Processing use of (reg 209 [ continue_addr ]) in insn 552:
  Adding insn 22 to worklist
  Adding insn 16 to worklist
Processing use of (reg 214 [ syscall ]) in insn 16:
  Adding insn 3 to worklist
Processing use of (reg 1 r1) in insn 3:
Processing use of (reg 213 [ regs ]) in insn 22:
Processing use of (reg 213 [ regs ]) in insn 541:
Processing use of (reg 378) in insn 541:
  Adding insn 540 to worklist
Processing use of (reg 213 [ regs ]) in insn 544:
Processing use of (reg 380) in insn 544:
  Adding insn 543 to worklist
Processing use of (reg 209 [ continue_addr ]) in insn 543:
Processing use of (reg 24 cc) in insn 538:
  Adding insn 537 to worklist
Processing use of (reg 376) in insn 537:
Processing use of (reg 24 cc) in insn 533:
  Adding insn 532 to worklist
Processing use of (reg 209 [ continue_addr ]) in insn 532:
Processing use of (reg 375 [ <variable>.uregs+60 ]) in insn 532:
  Adding insn 531 to worklist
Processing use of (reg 213 [ regs ]) in insn 531:
Processing use of (reg 24 cc) in insn 529:
  Adding insn 528 to worklist
Processing use of (reg 210 [ retval ]) in insn 528:
  Adding insn 36 to worklist
  Adding insn 17 to worklist
Processing use of (reg 214 [ syscall ]) in insn 17:
Processing use of (reg 213 [ regs ]) in insn 36:
Processing use of (reg 24 cc) in insn 526:
  Adding insn 525 to worklist
Processing use of (reg 214 [ syscall ]) in insn 525:
Processing use of (reg 13 sp) in insn 520:
Processing use of (reg 0 r0) in insn 520:
  Adding insn 518 to worklist
Processing use of (reg 1 r1) in insn 520:
  Adding insn 519 to worklist
Processing use of (reg 140 [ D.26039 ]) in insn 519:
  Adding insn 509 to worklist
Processing use of (reg 371) in insn 509:
  Adding insn 508 to worklist
Processing use of (reg 13 sp) in insn 508:
Processing use of (reg 13 sp) in insn 501:
Processing use of (reg 13 sp) in insn 506:
Processing use of (reg 0 r0) in insn 506:
  Adding insn 505 to worklist
Processing use of (reg 368) in insn 505:
  Adding insn 504 to worklist
Processing use of (reg 370) in insn 504:
  Adding insn 503 to worklist
Processing use of (reg 369 [ <variable>.sighand ]) in insn 503:
  Adding insn 502 to worklist
Processing use of (reg 147 [ tsk ]) in insn 502:
  Adding insn 138 to worklist
Processing use of (reg 240) in insn 138:
  Adding insn 137 to worklist
Processing use of (reg 241) in insn 137:
  Adding insn 136 to worklist
Processing use of (reg 13 sp) in insn 136:
Processing use of (reg 140 [ D.26039 ]) in insn 510:
Processing use of (reg 24 cc) in insn 513:
  Adding insn 512 to worklist
Processing use of (reg 372) in insn 512:
  Adding insn 511 to worklist
Processing use of (reg 141 [ D.26034 ]) in insn 511:
Processing use of (reg 147 [ tsk ]) in insn 498:
Processing use of (reg 361) in insn 498:
  Adding insn 491 to worklist
Processing use of (reg 367) in insn 498:
  Adding insn 497 to worklist
Processing use of (reg 364) in insn 497:
  Adding insn 495 to worklist
Processing use of (reg 366) in insn 497:
  Adding insn 496 to worklist
Processing use of (reg 147 [ tsk ]) in insn 496:
Processing use of (reg 361) in insn 496:
Processing use of (reg 363) in insn 495:
  Adding insn 493 to worklist
Processing use of (reg 365) in insn 495:
  Adding insn 494 to worklist
Processing use of (reg 197 [ D.25851 ]) in insn 493:
  Adding insn 489 to worklist
Processing use of (reg 207 [ signr ]) in insn 489:
  Adding insn 84 to worklist
Processing use of (reg 0 r0) in insn 84:
Processing use of (reg 196 [ D.25853 ]) in insn 491:
  Adding insn 490 to worklist
Processing use of (reg 197 [ D.25851 ]) in insn 490:
Processing use of (reg 13 sp) in insn 475:
Processing use of (reg 0 r0) in insn 475:
  Adding insn 474 to worklist
Processing use of (reg 350) in insn 474:
  Adding insn 473 to worklist
Processing use of (reg 352) in insn 473:
  Adding insn 472 to worklist
Processing use of (reg 351 [ <variable>.sighand ]) in insn 472:
  Adding insn 471 to worklist
Processing use of (reg 147 [ tsk ]) in insn 471:
Processing use of (reg 147 [ tsk ]) in insn 479:
Processing use of (reg 355) in insn 479:
  Adding insn 478 to worklist
Processing use of (reg 353 [ <variable>.blocked.sig+4 ]) in insn 478:
  Adding insn 476 to worklist
Processing use of (reg 354 [ ka.sa.sa_mask.sig+4 ]) in insn 478:
  Adding insn 477 to worklist
Processing use of (reg 25 sfp) in insn 477:
Processing use of (reg 147 [ tsk ]) in insn 476:
Processing use of (reg 147 [ tsk ]) in insn 483:
Processing use of (reg 358) in insn 483:
  Adding insn 482 to worklist
Processing use of (reg 356 [ <variable>.blocked.sig ]) in insn 482:
  Adding insn 480 to worklist
Processing use of (reg 357 [ ka.sa.sa_mask.sig ]) in insn 482:
  Adding insn 481 to worklist
Processing use of (reg 25 sfp) in insn 481:
Processing use of (reg 147 [ tsk ]) in insn 480:
Processing use of (reg 24 cc) in insn 487:
  Adding insn 486 to worklist
Processing use of (reg 359) in insn 486:
  Adding insn 485 to worklist
Processing use of (reg 360 [ ka.sa.sa_flags ]) in insn 485:
  Adding insn 484 to worklist
Processing use of (reg 25 sfp) in insn 484:
Processing use of (reg 13 sp) in insn 466:
Processing use of (reg 0 r0) in insn 466:
  Adding insn 464 to worklist
Processing use of (reg 1 r1) in insn 466:
  Adding insn 465 to worklist
Processing use of (reg 147 [ tsk ]) in insn 465:
Processing use of (reg 207 [ signr ]) in insn 464:
Processing use of (reg 24 cc) in insn 462:
  Adding insn 461 to worklist
Processing use of (reg 349) in insn 461:
  Adding insn 460 to worklist
Processing use of (reg 148 [ ret ]) in insn 460:
  Adding insn 305 to worklist
  Adding insn 317 to worklist
  Adding insn 389 to worklist
  Adding insn 401 to worklist
  Adding insn 406 to worklist
Processing use of (reg 348) in insn 460:
  Adding insn 459 to worklist
Processing use of (reg 191 [ D.25871 ]) in insn 459:
  Adding insn 444 to worklist
  Adding insn 456 to worklist
  Adding insn 451 to worklist
Processing use of (reg 345) in insn 451:
  Adding insn 440 to worklist
Processing use of (reg 346 [ elf_hwcap ]) in insn 440:
  Adding insn 439 to worklist
Processing use of (reg 344) in insn 439:
  Adding insn 438 to worklist
Processing use of (reg 0 r0) in insn 401:
Processing use of (reg 188 [ err ]) in insn 389:
Processing use of (reg 190 [ D.25873 ]) in insn 389:
  Adding insn 388 to worklist
Processing use of (reg 0 r0) in insn 388:
Processing use of (reg 0 r0) in insn 317:
Processing use of (reg 171 [ D.25928 ]) in insn 305:
  Adding insn 304 to worklist
Processing use of (reg 172 [ D.25926 ]) in insn 305:
  Adding insn 298 to worklist
Processing use of (reg 169 [ err ]) in insn 298:
Processing use of (reg 173 [ D.25925 ]) in insn 298:
  Adding insn 297 to worklist
Processing use of (reg 0 r0) in insn 297:
Processing use of (reg 0 r0) in insn 304:
Processing use of (reg 213 [ regs ]) in insn 450:
Processing use of (reg 347) in insn 450:
  Adding insn 449 to worklist
Processing use of (reg 193 [ D.25869 ]) in insn 449:
  Adding insn 436 to worklist
Processing use of (reg 194 [ D.25862 ]) in insn 436:
  Adding insn 410 to worklist
Processing use of (reg 195 [ D.25861 ]) in insn 410:
  Adding insn 409 to worklist
Processing use of (reg 213 [ regs ]) in insn 409:
Processing use of (reg 193 [ D.25869 ]) in insn 437:
Processing use of (reg 213 [ regs ]) in insn 437:
Processing use of (reg 24 cc) in insn 442:
  Adding insn 441 to worklist
Processing use of (reg 345) in insn 441:
Processing use of (reg 24 cc) in insn 433:
  Adding insn 432 to worklist
Processing use of (reg 343) in insn 432:
  Adding insn 431 to worklist
Processing use of (reg 342) in insn 431:
  Adding insn 430 to worklist
Processing use of (subreg (reg 341) 0) in insn 430:
  Adding insn 429 to worklist
Processing use of (reg 334) in insn 429:
  Adding insn 421 to worklist
Processing use of (reg 339) in insn 429:
  Adding insn 427 to worklist
Processing use of (reg 336) in insn 427:
  Adding insn 425 to worklist
Processing use of (reg 337 [ elf_hwcap ]) in insn 425:
  Adding insn 424 to worklist
Processing use of (reg 335) in insn 424:
  Adding insn 423 to worklist
Processing use of (reg 24 cc) in insn 421:
  Adding insn 420 to worklist
Processing use of (reg 192 [ mode ]) in insn 420:
  Adding insn 416 to worklist
Processing use of (reg 195 [ D.25861 ]) in insn 416:
Processing use of (reg 24 cc) in insn 418:
  Adding insn 417 to worklist
Processing use of (reg 192 [ mode ]) in insn 417:
Processing use of (reg 194 [ D.25862 ]) in insn 411:
Processing use of (reg 213 [ regs ]) in insn 411:
Processing use of (reg 24 cc) in insn 414:
  Adding insn 413 to worklist
Processing use of (reg 332) in insn 413:
  Adding insn 412 to worklist
Processing use of (reg 195 [ D.25861 ]) in insn 412:
Processing use of (reg 13 sp) in insn 395:
Processing use of (reg 133 [ signr.423 ]) in insn 395:
  Adding insn 158 to worklist
  Adding insn 152 to worklist
Processing use of (reg 144 [ D.26018 ]) in insn 152:
  Adding insn 148 to worklist
Processing use of (reg 207 [ signr ]) in insn 152:
Processing use of (reg 143 [ D.26019 ]) in insn 148:
  Adding insn 144 to worklist
Processing use of (reg 240) in insn 144:
Processing use of (reg 207 [ signr ]) in insn 158:
Processing use of (reg 13 sp) in insn 400:
Processing use of (reg 0 r0) in insn 400:
  Adding insn 396 to worklist
Processing use of (reg 1 r1) in insn 400:
  Adding insn 397 to worklist
Processing use of (reg 2 r2) in insn 400:
  Adding insn 398 to worklist
Processing use of (reg 3 r3) in insn 400:
  Adding insn 399 to worklist
Processing use of (reg 178 [ frame ]) in insn 399:
  Adding insn 365 to worklist
Processing use of (reg 324) in insn 365:
  Adding insn 364 to worklist
Processing use of (reg 177 [ sp ]) in insn 364:
  Adding insn 610 to worklist
  Adding insn 627 to worklist
Processing use of (reg 409 [ sp ]) in insn 627:
  Adding insn 628 to worklist
Processing use of (reg 213 [ regs ]) in insn 628:
Processing use of (reg 406 [ <variable>.sas_ss_size ]) in insn 610:
  Adding insn 608 to worklist
Processing use of (reg 407 [ <variable>.sas_ss_sp ]) in insn 610:
  Adding insn 609 to worklist
Processing use of (reg 402 [ <variable>.task ]) in insn 609:
  Adding insn 604 to worklist
Processing use of (reg 400) in insn 604:
  Adding insn 603 to worklist
Processing use of (reg 401) in insn 603:
  Adding insn 602 to worklist
Processing use of (reg 13 sp) in insn 602:
Processing use of (reg 402 [ <variable>.task ]) in insn 608:
Processing use of (reg 331) in insn 398:
  Adding insn 394 to worklist
Processing use of (reg 178 [ frame ]) in insn 394:
Processing use of (reg 330) in insn 397:
  Adding insn 393 to worklist
Processing use of (reg 25 sfp) in insn 393:
Processing use of (reg 213 [ regs ]) in insn 396:
Processing use of (reg 178 [ frame ]) in insn 383:
Processing use of (reg 179 [ flag ]) in insn 383:
  Adding insn 370 to worklist
Processing use of (reg 328) in insn 383:
  Adding insn 381 to worklist
Processing use of (reg 178 [ frame ]) in insn 370:
Processing use of (reg 327 [ <variable>.addr_limit ]) in insn 370:
  Adding insn 369 to worklist
Processing use of (reg 325) in insn 369:
  Adding insn 368 to worklist
Processing use of (reg 326) in insn 368:
  Adding insn 367 to worklist
Processing use of (reg 13 sp) in insn 367:
Processing use of (reg 13 sp) in insn 387:
Processing use of (reg 0 r0) in insn 387:
  Adding insn 384 to worklist
Processing use of (reg 1 r1) in insn 387:
  Adding insn 385 to worklist
Processing use of (reg 2 r2) in insn 387:
  Adding insn 386 to worklist
Processing use of (reg 206 [ oldset ]) in insn 386:
  Adding insn 122 to worklist
  Adding insn 131 to worklist
Processing use of (reg 408 [ <variable>.task ]) in insn 131:
  Adding insn 625 to worklist
Processing use of (reg 200 [ D.25774 ]) in insn 625:
  Adding insn 112 to worklist
Processing use of (reg 232) in insn 112:
  Adding insn 111 to worklist
Processing use of (reg 13 sp) in insn 111:
Processing use of (reg 408 [ <variable>.task ]) in insn 122:
Processing use of (reg 213 [ regs ]) in insn 385:
Processing use of (reg 178 [ frame ]) in insn 384:
Processing use of (reg 24 cc) in insn 391:
  Adding insn 390 to worklist
Processing use of (reg 148 [ ret ]) in insn 390:
Processing use of (reg 24 cc) in insn 379:
  Adding insn 378 to worklist
Processing use of (reg 178 [ frame ]) in insn 378:
Processing use of (reg 24 cc) in insn 372:
  Adding insn 371 to worklist
Processing use of (reg 179 [ flag ]) in insn 371:
Processing use of (reg 24 cc) in insn 361:
  Adding insn 360 to worklist
Processing use of (reg 310 [ <variable>.sas_ss_size ]) in insn 360:
  Adding insn 337 to worklist
Processing use of (reg 318) in insn 360:
  Adding insn 355 to worklist
Processing use of (reg 177 [ sp ]) in insn 355:
Processing use of (reg 314 [ <variable>.sas_ss_sp ]) in insn 355:
  Adding insn 345 to worklist
Processing use of (reg 309 [ <variable>.task ]) in insn 345:
  Adding insn 336 to worklist
Processing use of (reg 307) in insn 336:
  Adding insn 335 to worklist
Processing use of (reg 308) in insn 335:
  Adding insn 334 to worklist
Processing use of (reg 13 sp) in insn 334:
Processing use of (reg 309 [ <variable>.task ]) in insn 337:
Processing use of (reg 24 cc) in insn 347:
  Adding insn 346 to worklist
Processing use of (reg 177 [ sp ]) in insn 346:
Processing use of (reg 314 [ <variable>.sas_ss_sp ]) in insn 346:
Processing use of (reg 24 cc) in insn 339:
  Adding insn 338 to worklist
Processing use of (reg 310 [ <variable>.sas_ss_size ]) in insn 338:
Processing use of (reg 24 cc) in insn 331:
  Adding insn 330 to worklist
Processing use of (reg 410) in insn 330:
  Adding insn 631 to worklist
Processing use of (reg 146 [ D.26013 ]) in insn 631:
  Adding insn 161 to worklist
Processing use of (reg 25 sfp) in insn 161:
Processing use of (reg 159 [ frame ]) in insn 321:
  Adding insn 637 to worklist
Processing use of (reg 213 [ regs ]) in insn 321:
Processing use of (reg 24 cc) in insn 637:
  Adding insn 209 to worklist
Processing use of (reg 159 [ frame ]) in insn 637:
  Adding insn 203 to worklist
Processing use of (reg 263) in insn 203:
  Adding insn 202 to worklist
Processing use of (reg 158 [ sp ]) in insn 202:
  Adding insn 595 to worklist
  Adding insn 629 to worklist
Processing use of (reg 409 [ sp ]) in insn 629:
Processing use of (reg 398 [ <variable>.sas_ss_size ]) in insn 595:
  Adding insn 593 to worklist
Processing use of (reg 399 [ <variable>.sas_ss_sp ]) in insn 595:
  Adding insn 594 to worklist
Processing use of (reg 394 [ <variable>.task ]) in insn 594:
  Adding insn 589 to worklist
Processing use of (reg 392) in insn 589:
  Adding insn 588 to worklist
Processing use of (reg 393) in insn 588:
  Adding insn 587 to worklist
Processing use of (reg 13 sp) in insn 587:
Processing use of (reg 394 [ <variable>.task ]) in insn 593:
Processing use of (reg 160 [ flag ]) in insn 209:
  Adding insn 208 to worklist
Processing use of (reg 159 [ frame ]) in insn 208:
Processing use of (reg 266 [ <variable>.addr_limit ]) in insn 208:
  Adding insn 207 to worklist
Processing use of (reg 264) in insn 207:
  Adding insn 206 to worklist
Processing use of (reg 265) in insn 206:
  Adding insn 205 to worklist
Processing use of (reg 13 sp) in insn 205:
Processing use of (reg 213 [ regs ]) in insn 323:
Processing use of (reg 302) in insn 323:
  Adding insn 299 to worklist
Processing use of (reg 159 [ frame ]) in insn 299:
Processing use of (reg 13 sp) in insn 311:
Processing use of (reg 133 [ signr.423 ]) in insn 311:
Processing use of (reg 13 sp) in insn 316:
Processing use of (reg 0 r0) in insn 316:
  Adding insn 312 to worklist
Processing use of (reg 1 r1) in insn 316:
  Adding insn 313 to worklist
Processing use of (reg 2 r2) in insn 316:
  Adding insn 314 to worklist
Processing use of (reg 3 r3) in insn 316:
  Adding insn 315 to worklist
Processing use of (reg 159 [ frame ]) in insn 315:
Processing use of (reg 304) in insn 314:
  Adding insn 310 to worklist
Processing use of (reg 159 [ frame ]) in insn 310:
Processing use of (reg 303) in insn 313:
  Adding insn 309 to worklist
Processing use of (reg 25 sfp) in insn 309:
Processing use of (reg 213 [ regs ]) in insn 312:
Processing use of (reg 24 cc) in insn 319:
  Adding insn 318 to worklist
Processing use of (reg 148 [ ret ]) in insn 318:
Processing use of (reg 25 sfp) in insn 284:
Processing use of (reg 156 [ D.25977 ]) in insn 284:
  Adding insn 250 to worklist
  Adding insn 280 to worklist
  Adding insn 263 to worklist
Processing use of (reg 268) in insn 263:
  Adding insn 225 to worklist
Processing use of (reg 24 cc) in insn 280:
  Adding insn 279 to worklist
Processing use of (reg 280 [ <variable>.sas_ss_size ]) in insn 279:
  Adding insn 246 to worklist
Processing use of (reg 288) in insn 279:
  Adding insn 274 to worklist
Processing use of (reg 174 [ D.25921 ]) in insn 274:
  Adding insn 241 to worklist
Processing use of (reg 284 [ <variable>.sas_ss_sp ]) in insn 274:
  Adding insn 259 to worklist
Processing use of (reg 275 [ <variable>.task ]) in insn 259:
  Adding insn 238 to worklist
Processing use of (reg 264) in insn 238:
Processing use of (reg 213 [ regs ]) in insn 241:
Processing use of (reg 275 [ <variable>.task ]) in insn 246:
Processing use of (reg 25 sfp) in insn 290:
Processing use of (reg 299 [ <variable>.sas_ss_size ]) in insn 290:
  Adding insn 289 to worklist
Processing use of (reg 298 [ <variable>.task ]) in insn 289:
  Adding insn 288 to worklist
Processing use of (reg 296) in insn 288:
  Adding insn 287 to worklist
Processing use of (reg 297) in insn 287:
  Adding insn 286 to worklist
Processing use of (reg 13 sp) in insn 286:
Processing use of (reg 13 sp) in insn 296:
Processing use of (reg 0 r0) in insn 296:
  Adding insn 293 to worklist
Processing use of (reg 1 r1) in insn 296:
  Adding insn 294 to worklist
Processing use of (reg 2 r2) in insn 296:
  Adding insn 295 to worklist
Processing use of (reg 301) in insn 294:
  Adding insn 292 to worklist
Processing use of (reg 25 sfp) in insn 292:
Processing use of (reg 300) in insn 293:
  Adding insn 291 to worklist
Processing use of (reg 159 [ frame ]) in insn 291:
Processing use of (reg 13 sp) in insn 303:
Processing use of (reg 0 r0) in insn 303:
  Adding insn 300 to worklist
Processing use of (reg 1 r1) in insn 303:
  Adding insn 301 to worklist
Processing use of (reg 2 r2) in insn 303:
  Adding insn 302 to worklist
Processing use of (reg 206 [ oldset ]) in insn 302:
Processing use of (reg 213 [ regs ]) in insn 301:
Processing use of (reg 302) in insn 300:
Processing use of (reg 24 cc) in insn 307:
  Adding insn 306 to worklist
Processing use of (reg 148 [ ret ]) in insn 306:
Processing use of (reg 24 cc) in insn 261:
  Adding insn 260 to worklist
Processing use of (reg 174 [ D.25921 ]) in insn 260:
Processing use of (reg 284 [ <variable>.sas_ss_sp ]) in insn 260:
Processing use of (reg 13 sp) in insn 223:
Processing use of (reg 0 r0) in insn 223:
  Adding insn 221 to worklist
Processing use of (reg 1 r1) in insn 223:
  Adding insn 222 to worklist
Processing use of (reg 267) in insn 222:
  Adding insn 220 to worklist
Processing use of (reg 25 sfp) in insn 220:
Processing use of (reg 159 [ frame ]) in insn 221:
Processing use of (reg 175 [ D.25916 ]) in insn 227:
  Adding insn 224 to worklist
Processing use of (reg 268) in insn 227:
Processing use of (reg 269) in insn 227:
  Adding insn 226 to worklist
Processing use of (reg 159 [ frame ]) in insn 226:
Processing use of (reg 0 r0) in insn 224:
Processing use of (reg 169 [ err ]) in insn 230:
Processing use of (reg 268) in insn 230:
Processing use of (reg 271) in insn 230:
  Adding insn 229 to worklist
Processing use of (reg 159 [ frame ]) in insn 229:
Processing use of (reg 13 sp) in insn 234:
Processing use of (reg 0 r0) in insn 234:
  Adding insn 232 to worklist
Processing use of (reg 1 r1) in insn 234:
  Adding insn 233 to worklist
Processing use of (reg 272) in insn 232:
  Adding insn 231 to worklist
Processing use of (reg 25 sfp) in insn 231:
Processing use of (reg 25 sfp) in insn 240:
Processing use of (reg 276 [ <variable>.sas_ss_sp ]) in insn 240:
  Adding insn 239 to worklist
Processing use of (reg 275 [ <variable>.task ]) in insn 239:
Processing use of (reg 24 cc) in insn 248:
  Adding insn 247 to worklist
Processing use of (reg 280 [ <variable>.sas_ss_size ]) in insn 247:
Processing use of (reg 24 cc) in insn 217:
  Adding insn 216 to worklist
Processing use of (reg 159 [ frame ]) in insn 216:
Processing use of (reg 24 cc) in insn 199:
  Adding insn 198 to worklist
Processing use of (reg 249 [ <variable>.sas_ss_size ]) in insn 198:
  Adding insn 175 to worklist
Processing use of (reg 257) in insn 198:
  Adding insn 193 to worklist
Processing use of (reg 158 [ sp ]) in insn 193:
Processing use of (reg 253 [ <variable>.sas_ss_sp ]) in insn 193:
  Adding insn 183 to worklist
Processing use of (reg 248 [ <variable>.task ]) in insn 183:
  Adding insn 174 to worklist
Processing use of (reg 246) in insn 174:
  Adding insn 173 to worklist
Processing use of (reg 247) in insn 173:
  Adding insn 172 to worklist
Processing use of (reg 13 sp) in insn 172:
Processing use of (reg 248 [ <variable>.task ]) in insn 175:
Processing use of (reg 24 cc) in insn 185:
  Adding insn 184 to worklist
Processing use of (reg 158 [ sp ]) in insn 184:
Processing use of (reg 253 [ <variable>.sas_ss_sp ]) in insn 184:
Processing use of (reg 24 cc) in insn 177:
  Adding insn 176 to worklist
Processing use of (reg 249 [ <variable>.sas_ss_size ]) in insn 176:
Processing use of (reg 24 cc) in insn 169:
  Adding insn 168 to worklist
Processing use of (reg 410) in insn 168:
Processing use of (reg 24 cc) in insn 164:
  Adding insn 163 to worklist
Processing use of (reg 244) in insn 163:
  Adding insn 162 to worklist
Processing use of (reg 146 [ D.26013 ]) in insn 162:
Processing use of (reg 24 cc) in insn 150:
  Adding insn 149 to worklist
Processing use of (reg 144 [ D.26018 ]) in insn 149:
Processing use of (reg 24 cc) in insn 146:
  Adding insn 145 to worklist
Processing use of (reg 143 [ D.26019 ]) in insn 145:
Processing use of (reg 24 cc) in insn 140:
  Adding insn 139 to worklist
Processing use of (reg 207 [ signr ]) in insn 139:
Processing use of (reg 200 [ D.25774 ]) in insn 113:
Processing use of (reg 24 cc) in insn 116:
  Adding insn 115 to worklist
Processing use of (reg 233) in insn 115:
  Adding insn 114 to worklist
Processing use of (reg 201 [ D.25769 ]) in insn 114:
Processing use of (reg 213 [ regs ]) in insn 106:
Processing use of (reg 231) in insn 106:
  Adding insn 105 to worklist
Processing use of (reg 209 [ continue_addr ]) in insn 107:
Processing use of (reg 213 [ regs ]) in insn 107:
Processing use of (reg 24 cc) in insn 102:
  Adding insn 101 to worklist
Processing use of (reg 229) in insn 101:
  Adding insn 100 to worklist
Processing use of (reg 230 [ ka.sa.sa_flags ]) in insn 100:
  Adding insn 99 to worklist
Processing use of (reg 25 sfp) in insn 99:
Processing use of (reg 24 cc) in insn 97:
  Adding insn 96 to worklist
Processing use of (reg 210 [ retval ]) in insn 96:
Processing use of (reg 24 cc) in insn 94:
  Adding insn 93 to worklist
Processing use of (reg 210 [ retval ]) in insn 93:
Processing use of (reg 228) in insn 93:
  Adding insn 92 to worklist
Processing use of (reg 24 cc) in insn 90:
  Adding insn 89 to worklist
Processing use of (reg 208 [ restart_addr ]) in insn 89:
  Adding insn 35 to worklist
  Adding insn 15 to worklist
Processing use of (reg 227 [ <variable>.uregs+60 ]) in insn 89:
  Adding insn 88 to worklist
Processing use of (reg 213 [ regs ]) in insn 88:
Processing use of (reg 214 [ syscall ]) in insn 15:
Processing use of (reg 209 [ continue_addr ]) in insn 35:
Processing use of (reg 211 [ iftmp.331 ]) in insn 35:
  Adding insn 635 to worklist
Processing use of (reg 24 cc) in insn 635:
  Adding insn 24 to worklist
Processing use of (reg 216) in insn 24:
  Adding insn 23 to worklist
Processing use of (reg 212 [ D.25035 ]) in insn 23:
  Adding insn 7 to worklist
Processing use of (reg 213 [ regs ]) in insn 7:
Processing use of (reg 13 sp) in insn 83:
Processing use of (reg 0 r0) in insn 83:
  Adding insn 79 to worklist
Processing use of (reg 1 r1) in insn 83:
  Adding insn 80 to worklist
Processing use of (reg 2 r2) in insn 83:
  Adding insn 81 to worklist
Processing use of (reg 3 r3) in insn 83:
  Adding insn 82 to worklist
Processing use of (reg 224) in insn 82:
  Adding insn 68 to worklist
Processing use of (reg 204 [ D.25746 ]) in insn 68:
Processing use of (reg 213 [ regs ]) in insn 81:
Processing use of (reg 226) in insn 80:
  Adding insn 78 to worklist
Processing use of (reg 25 sfp) in insn 78:
Processing use of (reg 225) in insn 79:
  Adding insn 77 to worklist
Processing use of (reg 25 sfp) in insn 77:
Processing use of (reg 24 cc) in insn 86:
  Adding insn 85 to worklist
Processing use of (reg 207 [ signr ]) in insn 85:
Processing use of (reg 13 sp) in insn 72:
Processing use of (reg 205 [ D.25743 ]) in insn 67:
  Adding insn 66 to worklist
Processing use of (reg 223 [ <variable>.task ]) in insn 66:
  Adding insn 65 to worklist
Processing use of (reg 221) in insn 65:
  Adding insn 64 to worklist
Processing use of (reg 222) in insn 64:
  Adding insn 63 to worklist
Processing use of (reg 13 sp) in insn 63:
Processing use of (reg 24 cc) in insn 70:
  Adding insn 69 to worklist
Processing use of (reg 224) in insn 69:
Processing use of (reg 213 [ regs ]) in insn 59:
Processing use of (reg 220) in insn 59:
  Adding insn 58 to worklist
Processing use of (reg 213 [ regs ]) in insn 52:
Processing use of (reg 219 [ <variable>.uregs+68 ]) in insn 52:
  Adding insn 51 to worklist
Processing use of (reg 213 [ regs ]) in insn 51:
Processing use of (reg 208 [ restart_addr ]) in insn 53:
Processing use of (reg 213 [ regs ]) in insn 53:
Processing use of (reg 24 cc) in insn 44:
  Adding insn 43 to worklist
Processing use of (reg 217) in insn 43:
  Adding insn 42 to worklist
Processing use of (reg 218) in insn 42:
  Adding insn 41 to worklist
Processing use of (reg 210 [ retval ]) in insn 41:
Processing use of (reg 24 cc) in insn 40:
  Adding insn 37 to worklist
Processing use of (reg 210 [ retval ]) in insn 37:
Processing use of (reg 24 cc) in insn 38:
Processing use of (reg 24 cc) in insn 13:
  Adding insn 12 to worklist
Processing use of (reg 214 [ syscall ]) in insn 12:
Processing use of (reg 24 cc) in insn 10:
  Adding insn 9 to worklist
Processing use of (reg 215) in insn 9:
  Adding insn 8 to worklist
Processing use of (reg 212 [ D.25035 ]) in insn 8:


do_signal

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={31d,22u} r1={29d,13u} r2={24d,7u} r3={20d,3u} r11={1d,72u} r12={17d} r13={1d,102u,12d} r14={17d,1u} r15={16d} r16={16d} r17={16d} r18={16d} r19={16d} r20={16d} r21={16d} r22={16d} r23={16d} r24={68d,48u} r25={1d,87u,7d} r26={1d,71u} r27={16d} r28={16d} r29={16d} r30={16d} r31={16d} r32={16d} r33={16d} r34={16d} r35={16d} r36={16d} r37={16d} r38={16d} r39={16d} r40={16d} r41={16d} r42={16d} r43={16d} r44={16d} r45={16d} r46={16d} r47={16d} r48={16d} r49={16d} r50={16d} r51={16d} r52={16d} r53={16d} r54={16d} r55={16d} r56={16d} r57={16d} r58={16d} r59={16d} r60={16d} r61={16d} r62={16d} r63={16d} r64={16d} r65={16d} r66={16d} r67={16d} r68={16d} r69={16d} r70={16d} r71={16d} r72={16d} r73={16d} r74={16d} r75={16d} r76={16d} r77={16d} r78={16d} r79={16d} r80={16d} r81={16d} r82={16d} r83={16d} r84={16d} r85={16d} r86={16d} r87={16d} r88={16d} r89={16d} r90={16d} r91={16d} r92={16d} r93={16d} r94={16d} r95={16d} r96={16d} r97={16d} r98={16d} r99={16d} r100={16d} r101={16d} r102={16d} r103={16d} r104={16d} r105={16d} r106={16d} r107={16d} r108={16d} r109={16d} r110={16d} r111={16d} r112={16d} r113={16d} r114={16d} r115={16d} r116={16d} r117={16d} r118={16d} r119={16d} r120={16d} r121={16d} r122={16d} r123={16d} r124={16d} r125={16d} r126={16d} r127={16d} r133={2d,2u} r136={1d,3u} r137={1d,1u} r140={1d,2u} r141={1d,1u} r143={1d,2u} r144={1d,2u} r146={1d,2u} r147={1d,9u} r148={5d,4u} r156={3d,1u} r158={2d,3u} r159={2d,11u} r160={1d,1u} r161={1d} r169={2d,2u} r171={1d,1u} r172={1d,1u} r173={1d,1u} r174={1d,2u} r175={1d,1u} r177={2d,3u} r178={1d,6u} r179={1d,2u} r180={1d} r188={1d,1u} r190={1d,1u} r191={3d,1u} r192={1d,2u} r193={1d,2u} r194={1d,2u} r195={1d,3u} r196={1d,1u} r197={1d,2u} r200={1d,2u} r201={1d,1u} r204={1d,1u} r205={1d,1u} r206={2d,2u} r207={1d,6u} r208={2d,2u} r209={2d,5u} r210={2d,5u,2d} r211={1d,1u} r212={1d,2u} r213={1d,29u,2d} r214={1d,5u} r215={1d,1u} r216={1d,1u} r217={1d,1u} r218={1d,1u} r219={1d,1u} r220={1d,1u} r221={1d,1u} r222={1d,1u} r223={1d,1u} r224={1d,2u} r225={1d,1u} r226={1d,1u} r227={1d,1u} r228={1d,1u} r229={1d,1u} r230={1d,1u} r231={1d,1u} r232={1d,1u} r233={1d,1u} r240={1d,2u} r241={1d,1u} r244={1d,1u} r246={1d,1u} r247={1d,1u} r248={1d,2u} r249={1d,2u} r253={1d,2u} r257={1d,1u} r263={1d,1u} r264={1d,2u} r265={1d,1u} r266={1d,1u} r267={1d,1u} r268={1d,3u} r269={1d,1u} r271={1d,1u} r272={1d,1u} r275={1d,3u} r276={1d,1u} r280={1d,2u} r284={1d,2u} r288={1d,1u} r296={1d,1u} r297={1d,1u} r298={1d,1u} r299={1d,1u} r300={1d,1u} r301={1d,1u} r302={1d,2u} r303={1d,1u} r304={1d,1u} r307={1d,1u} r308={1d,1u} r309={1d,2u} r310={1d,2u} r314={1d,2u} r318={1d,1u} r324={1d,1u} r325={1d,1u} r326={1d,1u} r327={1d,1u} r328={1d,1u} r330={1d,1u} r331={1d,1u} r332={1d,1u} r334={1d,1u} r335={1d,1u} r336={1d,1u} r337={1d,1u} r339={1d,1u} r341={1d,1u} r342={1d,1u} r343={1d,1u} r344={1d,1u} r345={1d,2u} r346={1d,1u} r347={1d,1u} r348={1d,1u} r349={1d,1u} r350={1d,1u} r351={1d,1u,1d} r352={1d,1u} r353={1d,1u} r354={1d,1u} r355={1d,1u} r356={1d,1u} r357={1d,1u} r358={1d,1u} r359={1d,1u} r360={1d,1u} r361={1d,2u} r363={1d,1u,1d} r364={1d,1u} r365={1d,1u} r366={1d,1u} r367={1d,1u} r368={1d,1u} r369={1d,1u,1d} r370={1d,1u} r371={1d,1u} r372={1d,1u} r375={1d,1u} r376={1d,2u} r377={1d,1u} r378={1d,1u} r380={1d,1u} r383={1d,1u} r384={1d,1u} r385={1d,1u} r390={1d,1u} r391={1d,1u} r392={1d,1u} r393={1d,1u} r394={1d,2u} r398={1d,1u} r399={1d,1u} r400={1d,1u} r401={1d,1u} r402={1d,2u} r406={1d,1u} r407={1d,1u} r408={1d,2u} r409={1d,2u} r410={1d,2u} 
;;    total ref usage 2898{2158d,714u,26e} in 368{352 regular + 16 call} insns.
;; Reaching defs:

  sparse invalidated 	24
  dense invalidated 	
0[0,31] 1[31,29] 2[60,24] 3[84,20] 11[104,1] 12[105,17] 13[122,1] 14[123,17] 15[140,16] 16[156,16] 17[172,16] 18[188,16] 19[204,16] 20[220,16] 21[236,16] 22[252,16] 23[268,16] 24[284,68] 25[352,1] 26[353,1] 27[354,16] 28[370,16] 29[386,16] 30[402,16] 31[418,16] 32[434,16] 33[450,16] 34[466,16] 35[482,16] 36[498,16] 37[514,16] 38[530,16] 39[546,16] 40[562,16] 41[578,16] 42[594,16] 43[610,16] 44[626,16] 45[642,16] 46[658,16] 47[674,16] 48[690,16] 49[706,16] 50[722,16] 51[738,16] 52[754,16] 53[770,16] 54[786,16] 55[802,16] 56[818,16] 57[834,16] 58[850,16] 59[866,16] 60[882,16] 61[898,16] 62[914,16] 63[930,16] 64[946,16] 65[962,16] 66[978,16] 67[994,16] 68[1010,16] 69[1026,16] 70[1042,16] 71[1058,16] 72[1074,16] 73[1090,16] 74[1106,16] 75[1122,16] 76[1138,16] 77[1154,16] 78[1170,16] 79[1186,16] 80[1202,16] 81[1218,16] 82[1234,16] 83[1250,16] 84[1266,16] 85[1282,16] 86[1298,16] 87[1314,16] 88[1330,16] 89[1346,16] 90[1362,16] 91[1378,16] 92[1394,16] 93[1410,16] 94[1426,16] 95[1442,16] 96[1458,16] 97[1474,16] 98[1490,16] 99[1506,16] 100[1522,16] 101[1538,16] 102[1554,16] 103[1570,16] 104[1586,16] 105[1602,16] 106[1618,16] 107[1634,16] 108[1650,16] 109[1666,16] 110[1682,16] 111[1698,16] 112[1714,16] 113[1730,16] 114[1746,16] 115[1762,16] 116[1778,16] 117[1794,16] 118[1810,16] 119[1826,16] 120[1842,16] 121[1858,16] 122[1874,16] 123[1890,16] 124[1906,16] 125[1922,16] 126[1938,16] 127[1954,16] 133[1970,2] 136[1972,1] 137[1973,1] 140[1974,1] 141[1975,1] 143[1976,1] 144[1977,1] 146[1978,1] 147[1979,1] 148[1980,5] 156[1985,3] 158[1988,2] 159[1990,2] 160[1992,1] 161[1993,1] 169[1994,2] 171[1996,1] 172[1997,1] 173[1998,1] 174[1999,1] 175[2000,1] 177[2001,2] 178[2003,1] 179[2004,1] 180[2005,1] 188[2006,1] 190[2007,1] 191[2008,3] 192[2011,1] 193[2012,1] 194[2013,1] 195[2014,1] 196[2015,1] 197[2016,1] 200[2017,1] 201[2018,1] 204[2019,1] 205[2020,1] 206[2021,2] 207[2023,1] 208[2024,2] 209[2026,2] 210[2028,2] 211[2030,1] 212[2031,1] 213[2032,1] 214[2033,1] 215[2034,1] 216[2035,1] 217[2036,1] 218[2037,1] 219[2038,1] 220[2039,1] 221[2040,1] 222[2041,1] 223[2042,1] 224[2043,1] 225[2044,1] 226[2045,1] 227[2046,1] 228[2047,1] 229[2048,1] 230[2049,1] 231[2050,1] 232[2051,1] 233[2052,1] 240[2053,1] 241[2054,1] 244[2055,1] 246[2056,1] 247[2057,1] 248[2058,1] 249[2059,1] 253[2060,1] 257[2061,1] 263[2062,1] 264[2063,1] 265[2064,1] 266[2065,1] 267[2066,1] 268[2067,1] 269[2068,1] 271[2069,1] 272[2070,1] 275[2071,1] 276[2072,1] 280[2073,1] 284[2074,1] 288[2075,1] 296[2076,1] 297[2077,1] 298[2078,1] 299[2079,1] 300[2080,1] 301[2081,1] 302[2082,1] 303[2083,1] 304[2084,1] 307[2085,1] 308[2086,1] 309[2087,1] 310[2088,1] 314[2089,1] 318[2090,1] 324[2091,1] 325[2092,1] 326[2093,1] 327[2094,1] 328[2095,1] 330[2096,1] 331[2097,1] 332[2098,1] 334[2099,1] 335[2100,1] 336[2101,1] 337[2102,1] 339[2103,1] 341[2104,1] 342[2105,1] 343[2106,1] 344[2107,1] 345[2108,1] 346[2109,1] 347[2110,1] 348[2111,1] 349[2112,1] 350[2113,1] 351[2114,1] 352[2115,1] 353[2116,1] 354[2117,1] 355[2118,1] 356[2119,1] 357[2120,1] 358[2121,1] 359[2122,1] 360[2123,1] 361[2124,1] 363[2125,1] 364[2126,1] 365[2127,1] 366[2128,1] 367[2129,1] 368[2130,1] 369[2131,1] 370[2132,1] 371[2133,1] 372[2134,1] 375[2135,1] 376[2136,1] 377[2137,1] 378[2138,1] 380[2139,1] 383[2140,1] 384[2141,1] 385[2142,1] 390[2143,1] 391[2144,1] 392[2145,1] 393[2146,1] 394[2147,1] 398[2148,1] 399[2149,1] 400[2150,1] 401[2151,1] 402[2152,1] 406[2153,1] 407[2154,1] 408[2155,1] 409[2156,1] 410[2157,1] 
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 212 213 214 215
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 212 213 214 215
;; live  kill	
;; rd  in  	(10)
30, 59, 83, 103, 104, 121, 122, 139, 352, 353
;; rd  gen 	(5)
351, 2031, 2032, 2033, 2034
;; rd  kill	(4)
2031, 2032, 2033, 2034

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 5 3 2 arch/arm/kernel/signal.c:661 (set (reg/v/f:SI 213 [ regs ])
        (reg:SI 0 r0 [ regs ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ regs ])
        (nil)))

(insn 3 2 4 2 arch/arm/kernel/signal.c:661 (set (reg/v:SI 214 [ syscall ])
        (reg:SI 1 r1 [ syscall ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ syscall ])
        (nil)))

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 8 2 arch/arm/kernel/signal.c:673 (set (reg:SI 212 [ D.25035 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 213 [ regs ])
                (const_int 64 [0x40])) [0 <variable>.uregs+64 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 8 7 9 2 arch/arm/kernel/signal.c:673 (set (reg:SI 215)
        (and:SI (reg:SI 212 [ D.25035 ])
            (const_int 15 [0xf]))) 67 {*arm_andsi3_insn} (nil))

(insn 9 8 10 2 arch/arm/kernel/signal.c:673 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 215)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 215)
        (nil)))

(jump_insn 10 9 11 2 arch/arm/kernel/signal.c:673 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 616)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 2 -> ( 72 3)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 212 213 214
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 212 213 214
;; rd  out 	(15)
30, 59, 83, 103, 104, 121, 122, 139, 351, 352, 353, 2031, 2032, 2033, 2034


;; Succ edge  72 [39.0%] 
;; Succ edge  3 [61.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u10(11){ }u11(13){ }u12(25){ }u13(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 212 213 214
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 214
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 212 213 214
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(15)
30, 59, 83, 103, 104, 121, 122, 139, 351, 352, 353, 2031, 2032, 2033, 2034
;; rd  gen 	(1)
350
;; rd  kill	(0)


;; Pred edge  2 [61.0%]  (fallthru)
(note 11 10 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 12 11 13 3 arch/arm/kernel/signal.c:679 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 214 [ syscall ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 13 12 14 3 arch/arm/kernel/signal.c:679 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 20)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 3 -> ( 5 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 212 213 214
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 212 213 214
;; rd  out 	(15)
30, 59, 83, 103, 104, 121, 122, 139, 350, 352, 353, 2031, 2032, 2033, 2034


;; Succ edge  5 [50.0%] 
;; Succ edge  4 [50.0%]  (fallthru)

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u16(11){ }u17(13){ }u18(25){ }u19(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 213 214
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 214
;; lr  def 	 208 209 210
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 213 214
;; live  gen 	 208 209 210
;; live  kill	
;; rd  in  	(15)
30, 59, 83, 103, 104, 121, 122, 139, 350, 352, 353, 2031, 2032, 2033, 2034
;; rd  gen 	(3)
2024, 2026, 2028
;; rd  kill	(6)
2024, 2025, 2026, 2027, 2028, 2029

;; Pred edge  3 [50.0%]  (fallthru)
(note 14 13 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 15 14 16 4 arch/arm/kernel/signal.c:662 (set (reg/v:SI 208 [ restart_addr ])
        (reg/v:SI 214 [ syscall ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 16 15 17 4 arch/arm/kernel/signal.c:662 (set (reg/v:SI 209 [ continue_addr ])
        (reg/v:SI 214 [ syscall ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 17 16 638 4 arch/arm/kernel/signal.c:662 (set (reg/v:SI 210 [ retval ])
        (reg/v:SI 214 [ syscall ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(jump_insn 638 17 639 4 (set (pc)
        (label_ref 60)) -1 (nil))
;; End of basic block 4 -> ( 10)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 208 209 210 213 214
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 208 209 210 213 214
;; rd  out 	(18)
30, 59, 83, 103, 104, 121, 122, 139, 350, 352, 353, 2024, 2026, 2028, 2031, 2032, 2033, 2034


;; Succ edge  10 [100.0%] 

(barrier 639 638 20)

;; Start of basic block ( 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u23(11){ }u24(13){ }u25(25){ }u26(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 212 213 214
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 212 213
;; lr  def 	 24 [cc] 208 209 210 211 216
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 212 213 214
;; live  gen 	 24 [cc] 208 209 210 211 216
;; live  kill	
;; rd  in  	(15)
30, 59, 83, 103, 104, 121, 122, 139, 350, 352, 353, 2031, 2032, 2033, 2034
;; rd  gen 	(6)
348, 2025, 2027, 2029, 2030, 2035
;; rd  kill	(8)
2024, 2025, 2026, 2027, 2028, 2029, 2030, 2035

;; Pred edge  3 [50.0%] 
(code_label 20 639 21 5 23 "" [1 uses])

(note 21 20 22 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 22 21 23 5 arch/arm/kernel/signal.c:680 (set (reg/v:SI 209 [ continue_addr ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 213 [ regs ])
                (const_int 60 [0x3c])) [0 <variable>.uregs+60 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 23 22 24 5 arch/arm/kernel/signal.c:681 (set (reg:SI 216)
        (and:SI (reg:SI 212 [ D.25035 ])
            (const_int 32 [0x20]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 212 [ D.25035 ])
        (nil)))

(insn 24 23 635 5 arch/arm/kernel/signal.c:681 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 216)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 216)
        (nil)))

(insn 635 24 35 5 arch/arm/kernel/signal.c:681 discrim 2 (set (reg:SI 211 [ iftmp.331 ])
        (if_then_else:SI (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (const_int 2 [0x2])
            (const_int 4 [0x4]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 35 635 36 5 arch/arm/kernel/signal.c:681 discrim 3 (set (reg/v:SI 208 [ restart_addr ])
        (minus:SI (reg/v:SI 209 [ continue_addr ])
            (reg:SI 211 [ iftmp.331 ]))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg:SI 211 [ iftmp.331 ])
        (nil)))

(insn 36 35 37 5 arch/arm/kernel/signal.c:682 (set (reg/v:SI 210 [ retval ])
        (mem/s/j:SI (reg/v/f:SI 213 [ regs ]) [0 <variable>.uregs+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 37 36 38 5 arch/arm/kernel/signal.c:688 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 210 [ retval ])
            (const_int -516 [0xfffffffffffffdfc]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 38 37 618 5 arch/arm/kernel/signal.c:688 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 56)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
        (nil)))
;; End of basic block 5 -> ( 9 6)
;; lr  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 208 209 210 213 214
;; live  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 208 209 210 213 214
;; rd  out 	(20)
30, 59, 83, 103, 104, 121, 122, 139, 348, 352, 353, 2025, 2027, 2029, 2030, 2031, 2032, 2033, 2034, 2035


;; Succ edge  9 [29.0%] 
;; Succ edge  6 [71.0%]  (fallthru)

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u36(11){ }u37(13){ }u38(25){ }u39(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 208 209 210 213 214
;; lr  use 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 208 209 210 213 214
;; live  gen 	
;; live  kill	
;; rd  in  	(20)
30, 59, 83, 103, 104, 121, 122, 139, 348, 352, 353, 2025, 2027, 2029, 2030, 2031, 2032, 2033, 2034, 2035
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  5 [71.0%]  (fallthru)
(note 618 38 40 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(jump_insn 40 618 619 6 arch/arm/kernel/signal.c:688 (set (pc)
        (if_then_else (ltu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 60)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 6 -> ( 10 7)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 208 209 210 213 214
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 208 209 210 213 214
;; rd  out 	(20)
30, 59, 83, 103, 104, 121, 122, 139, 348, 352, 353, 2025, 2027, 2029, 2030, 2031, 2032, 2033, 2034, 2035


;; Succ edge  10 [50.0%] 
;; Succ edge  7 [50.0%]  (fallthru)

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u41(11){ }u42(13){ }u43(25){ }u44(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 208 209 210 213 214
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 210
;; lr  def 	 24 [cc] 217 218
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 208 209 210 213 214
;; live  gen 	 24 [cc] 217 218
;; live  kill	
;; rd  in  	(20)
30, 59, 83, 103, 104, 121, 122, 139, 348, 352, 353, 2025, 2027, 2029, 2030, 2031, 2032, 2033, 2034, 2035
;; rd  gen 	(3)
347, 2036, 2037
;; rd  kill	(2)
2036, 2037

;; Pred edge  6 [50.0%]  (fallthru)
(note 619 40 41 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 41 619 42 7 arch/arm/kernel/signal.c:688 (set (reg:SI 218)
        (plus:SI (reg/v:SI 210 [ retval ])
            (const_int 512 [0x200]))) 4 {*arm_addsi3} (nil))

(insn 42 41 43 7 arch/arm/kernel/signal.c:688 (set (reg:SI 217)
        (plus:SI (reg:SI 218)
            (const_int 2 [0x2]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 218)
        (expr_list:REG_EQUAL (plus:SI (reg/v:SI 210 [ retval ])
                (const_int 514 [0x202]))
            (nil))))

(insn 43 42 44 7 arch/arm/kernel/signal.c:688 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 217)
            (const_int 2 [0x2]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 217)
        (nil)))

(jump_insn 44 43 50 7 arch/arm/kernel/signal.c:688 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 60)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 7 -> ( 10 8)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 208 209 210 213 214
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 208 209 210 213 214
;; rd  out 	(22)
30, 59, 83, 103, 104, 121, 122, 139, 347, 352, 353, 2025, 2027, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037


;; Succ edge  10 [50.0%] 
;; Succ edge  8 [50.0%]  (fallthru)

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u50(11){ }u51(13){ }u52(25){ }u53(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 208 209 210 213 214
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 208 213
;; lr  def 	 219
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 208 209 210 213 214
;; live  gen 	 219
;; live  kill	
;; rd  in  	(22)
30, 59, 83, 103, 104, 121, 122, 139, 347, 352, 353, 2025, 2027, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037
;; rd  gen 	(1)
2038
;; rd  kill	(1)
2038

;; Pred edge  7 [50.0%]  (fallthru)
(note 50 44 51 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 51 50 52 8 arch/arm/kernel/signal.c:692 (set (reg:SI 219 [ <variable>.uregs+68 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 213 [ regs ])
                (const_int 68 [0x44])) [0 <variable>.uregs+68 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 52 51 53 8 arch/arm/kernel/signal.c:692 (set (mem/s/j:SI (reg/v/f:SI 213 [ regs ]) [0 <variable>.uregs+0 S4 A32])
        (reg:SI 219 [ <variable>.uregs+68 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 219 [ <variable>.uregs+68 ])
        (nil)))

(insn 53 52 640 8 arch/arm/kernel/signal.c:693 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 213 [ regs ])
                (const_int 60 [0x3c])) [0 <variable>.uregs+60 S4 A32])
        (reg/v:SI 208 [ restart_addr ])) 167 {*arm_movsi_insn} (nil))

(jump_insn 640 53 641 8 arch/arm/kernel/signal.c:694 (set (pc)
        (label_ref 60)) -1 (nil))
;; End of basic block 8 -> ( 10)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 208 209 210 213 214
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 208 209 210 213 214
;; rd  out 	(23)
30, 59, 83, 103, 104, 121, 122, 139, 347, 352, 353, 2025, 2027, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038


;; Succ edge  10 [100.0%] 

(barrier 641 640 56)

;; Start of basic block ( 5) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u59(11){ }u60(13){ }u61(25){ }u62(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 208 209 210 213 214
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 213
;; lr  def 	 220
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 208 209 210 213 214
;; live  gen 	 220
;; live  kill	
;; rd  in  	(20)
30, 59, 83, 103, 104, 121, 122, 139, 348, 352, 353, 2025, 2027, 2029, 2030, 2031, 2032, 2033, 2034, 2035
;; rd  gen 	(1)
2039
;; rd  kill	(1)
2039

;; Pred edge  5 [29.0%] 
(code_label 56 641 57 9 27 "" [1 uses])

(note 57 56 58 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 58 57 59 9 arch/arm/kernel/signal.c:696 (set (reg:SI 220)
        (const_int -4 [0xfffffffffffffffc])) 167 {*arm_movsi_insn} (nil))

(insn 59 58 60 9 arch/arm/kernel/signal.c:696 (set (mem/s/j:SI (reg/v/f:SI 213 [ regs ]) [0 <variable>.uregs+0 S4 A32])
        (reg:SI 220)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 220)
        (expr_list:REG_EQUAL (const_int -4 [0xfffffffffffffffc])
            (nil))))
;; End of basic block 9 -> ( 10)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 208 209 210 213 214
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 208 209 210 213 214
;; rd  out 	(21)
30, 59, 83, 103, 104, 121, 122, 139, 348, 352, 353, 2025, 2027, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2039


;; Succ edge  10 [100.0%]  (fallthru)

;; Start of basic block ( 6 7 4 9 8) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u65(11){ }u66(13){ }u67(25){ }u68(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 208 209 210 213 214
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 204 205 221 222 223 224
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 208 209 210 213 214
;; live  gen 	 24 [cc] 204 205 221 222 223 224
;; live  kill	
;; rd  in  	(29)
30, 59, 83, 103, 104, 121, 122, 139, 347, 348, 350, 352, 353, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039
;; rd  gen 	(7)
346, 2019, 2020, 2040, 2041, 2042, 2043
;; rd  kill	(6)
2019, 2020, 2040, 2041, 2042, 2043

;; Pred edge  6 [50.0%] 
;; Pred edge  7 [50.0%] 
;; Pred edge  4 [100.0%] 
;; Pred edge  9 [100.0%]  (fallthru)
;; Pred edge  8 [100.0%] 
(code_label 60 59 61 10 24 "" [4 uses])

(note 61 60 63 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 63 61 64 10 include/linux/thread_info.h:84 (set (reg:SI 222)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 64 63 65 10 include/linux/thread_info.h:84 (set (reg:SI 221)
        (and:SI (reg:SI 222)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 222)
        (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
                (const_int -8192 [0xffffffffffffe000]))
            (nil))))

(insn 65 64 66 10 include/linux/thread_info.h:84 (set (reg/f:SI 223 [ <variable>.task ])
        (mem/s/f/j:SI (plus:SI (reg:SI 221)
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 221)
        (nil)))

(insn 66 65 67 10 include/linux/thread_info.h:84 (set (reg/f:SI 205 [ D.25743 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 223 [ <variable>.task ])
                (const_int 4 [0x4])) [0 <variable>.stack+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 223 [ <variable>.task ])
        (nil)))

(insn 67 66 68 10 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 204 [ D.25746 ])
        (mem/v:SI (reg/f:SI 205 [ D.25743 ]) [0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 205 [ D.25743 ])
        (nil)))

(insn 68 67 69 10 include/linux/freezer.h:56 (set (reg:SI 224)
        (and:SI (reg:SI 204 [ D.25746 ])
            (const_int 524288 [0x80000]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 204 [ D.25746 ])
        (nil)))

(insn 69 68 70 10 include/linux/freezer.h:56 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 224)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 70 69 71 10 include/linux/freezer.h:56 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 75)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 10 -> ( 11 12)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 208 209 210 213 214 224
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 208 209 210 213 214 224
;; rd  out 	(33)
30, 59, 83, 103, 104, 121, 122, 139, 346, 352, 353, 2019, 2020, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043


;; Succ edge  11 [29.0%]  (fallthru)
;; Succ edge  12 [71.0%] 

;; Start of basic block ( 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u78(11){ }u79(13){ }u80(25){ }u81(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 209 210 213 214
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 209 210 213 214
;; live  gen 	
;; live  kill	 14 [lr]
;; rd  in  	(33)
30, 59, 83, 103, 104, 121, 122, 139, 346, 352, 353, 2019, 2020, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043
;; rd  gen 	(0)

;; rd  kill	(17)
123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139

;; Pred edge  10 [29.0%]  (fallthru)
(note 71 70 72 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(call_insn 72 71 642 11 include/linux/freezer.h:57 (parallel [
            (call (mem:SI (symbol_ref:SI ("refrigerator") [flags 0x41] <function_decl 0x10f34f80 refrigerator>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(jump_insn 642 72 643 11 (set (pc)
        (label_ref 523)) -1 (nil))
;; End of basic block 11 -> ( 62)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 209 210 213 214
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 209 210 213 214
;; rd  out 	(32)
30, 59, 83, 103, 104, 121, 122, 346, 352, 353, 2019, 2020, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043


;; Succ edge  62 [100.0%] 

(barrier 643 642 75)

;; Start of basic block ( 10) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u83(11){ }u84(13){ }u85(25){ }u86(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 208 209 210 213 214 224
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 213 224
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 207 225 226
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 208 209 210 213 214 224
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc] 207 225 226
;; live  kill	 14 [lr]
;; rd  in  	(33)
30, 59, 83, 103, 104, 121, 122, 139, 346, 352, 353, 2019, 2020, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043
;; rd  gen 	(5)
27, 343, 2023, 2044, 2045
;; rd  kill	(51)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 2023, 2044, 2045

;; Pred edge  10 [71.0%] 
(code_label 75 643 76 12 29 "" [1 uses])

(note 76 75 77 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 77 76 78 12 arch/arm/kernel/signal.c:708 (set (reg/f:SI 225)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -160 [0xffffffffffffff60]))) 4 {*arm_addsi3} (nil))

(insn 78 77 79 12 arch/arm/kernel/signal.c:708 (set (reg/f:SI 226)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -32 [0xffffffffffffffe0]))) 4 {*arm_addsi3} (nil))

(insn 79 78 80 12 arch/arm/kernel/signal.c:708 (set (reg:SI 0 r0)
        (reg/f:SI 225)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 225)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -160 [0xffffffffffffff60]))
            (nil))))

(insn 80 79 81 12 arch/arm/kernel/signal.c:708 (set (reg:SI 1 r1)
        (reg/f:SI 226)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 226)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -32 [0xffffffffffffffe0]))
            (nil))))

(insn 81 80 82 12 arch/arm/kernel/signal.c:708 (set (reg:SI 2 r2)
        (reg/v/f:SI 213 [ regs ])) 167 {*arm_movsi_insn} (nil))

(insn 82 81 83 12 arch/arm/kernel/signal.c:708 (set (reg:SI 3 r3)
        (reg:SI 224)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 224)
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(call_insn 83 82 84 12 arch/arm/kernel/signal.c:708 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("get_signal_to_deliver") [flags 0x41] <function_decl 0x10a8d580 get_signal_to_deliver>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 84 83 85 12 arch/arm/kernel/signal.c:708 (set (reg/v:SI 207 [ signr ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 85 84 86 12 arch/arm/kernel/signal.c:709 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 207 [ signr ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 86 85 87 12 arch/arm/kernel/signal.c:709 (set (pc)
        (if_then_else (le (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 523)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2700 [0xa8c])
            (nil))))
;; End of basic block 12 -> ( 13 62)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 207 208 209 210 213 214
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 208 209 210 213 214
;; rd  out 	(35)
27, 59, 83, 103, 104, 121, 122, 343, 352, 353, 2019, 2020, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045


;; Succ edge  13 [73.0%]  (fallthru)
;; Succ edge  62 [27.0%] 

;; Start of basic block ( 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u103(11){ }u104(13){ }u105(25){ }u106(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 208 209 210 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 208 213
;; lr  def 	 24 [cc] 227
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 208 209 210 213
;; live  gen 	 24 [cc] 227
;; live  kill	
;; rd  in  	(35)
27, 59, 83, 103, 104, 121, 122, 343, 352, 353, 2019, 2020, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045
;; rd  gen 	(2)
342, 2046
;; rd  kill	(1)
2046

;; Pred edge  12 [73.0%]  (fallthru)
(note 87 86 88 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 88 87 89 13 arch/arm/kernel/signal.c:717 (set (reg:SI 227 [ <variable>.uregs+60 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 213 [ regs ])
                (const_int 60 [0x3c])) [0 <variable>.uregs+60 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 89 88 90 13 arch/arm/kernel/signal.c:717 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 227 [ <variable>.uregs+60 ])
            (reg/v:SI 208 [ restart_addr ]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 227 [ <variable>.uregs+60 ])
        (expr_list:REG_DEAD (reg/v:SI 208 [ restart_addr ])
            (nil))))

(jump_insn 90 89 91 13 arch/arm/kernel/signal.c:717 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 108)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 13 -> ( 14 18)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 209 210 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 209 210 213
;; rd  out 	(36)
27, 59, 83, 103, 104, 121, 122, 342, 352, 353, 2019, 2020, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046


;; Succ edge  14 [28.0%]  (fallthru)
;; Succ edge  18 [72.0%] 

;; Start of basic block ( 13) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u111(11){ }u112(13){ }u113(25){ }u114(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 209 210 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 210
;; lr  def 	 24 [cc] 228
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 209 210 213
;; live  gen 	 24 [cc] 228
;; live  kill	
;; rd  in  	(36)
27, 59, 83, 103, 104, 121, 122, 342, 352, 353, 2019, 2020, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046
;; rd  gen 	(2)
341, 2047
;; rd  kill	(1)
2047

;; Pred edge  13 [28.0%]  (fallthru)
(note 91 90 92 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 92 91 93 14 arch/arm/kernel/signal.c:718 (set (reg:SI 228)
        (const_int -514 [0xfffffffffffffdfe])) 167 {*arm_movsi_insn} (nil))

(insn 93 92 94 14 arch/arm/kernel/signal.c:718 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 210 [ retval ])
            (reg:SI 228))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 228)
        (expr_list:REG_EQUAL (compare:CC (reg/v:SI 210 [ retval ])
                (const_int -514 [0xfffffffffffffdfe]))
            (nil))))

(jump_insn 94 93 95 14 arch/arm/kernel/signal.c:718 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 103)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2800 [0xaf0])
            (nil))))
;; End of basic block 14 -> ( 17 15)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 209 210 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 209 210 213
;; rd  out 	(37)
27, 59, 83, 103, 104, 121, 122, 341, 352, 353, 2019, 2020, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047


;; Succ edge  17 [28.0%] 
;; Succ edge  15 [72.0%]  (fallthru)

;; Start of basic block ( 14) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u119(11){ }u120(13){ }u121(25){ }u122(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 209 210 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 210
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 209 210 213
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(37)
27, 59, 83, 103, 104, 121, 122, 341, 352, 353, 2019, 2020, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047
;; rd  gen 	(1)
340
;; rd  kill	(0)


;; Pred edge  14 [72.0%]  (fallthru)
(note 95 94 96 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 96 95 97 15 arch/arm/kernel/signal.c:718 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 210 [ retval ])
            (const_int -512 [0xfffffffffffffe00]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 210 [ retval ])
        (nil)))

(jump_insn 97 96 98 15 arch/arm/kernel/signal.c:718 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 108)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 15 -> ( 16 18)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 209 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 209 213
;; rd  out 	(37)
27, 59, 83, 103, 104, 121, 122, 340, 352, 353, 2019, 2020, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047


;; Succ edge  16 [28.0%]  (fallthru)
;; Succ edge  18 [72.0%] 

;; Start of basic block ( 15) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u125(11){ }u126(13){ }u127(25){ }u128(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 209 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 229 230
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 209 213
;; live  gen 	 24 [cc] 229 230
;; live  kill	
;; rd  in  	(37)
27, 59, 83, 103, 104, 121, 122, 340, 352, 353, 2019, 2020, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047
;; rd  gen 	(3)
339, 2048, 2049
;; rd  kill	(2)
2048, 2049

;; Pred edge  15 [28.0%]  (fallthru)
(note 98 97 99 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 99 98 100 16 arch/arm/kernel/signal.c:720 (set (reg:SI 230 [ ka.sa.sa_flags ])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -28 [0xffffffffffffffe4])) [0 ka.sa.sa_flags+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 100 99 101 16 arch/arm/kernel/signal.c:720 (set (reg:SI 229)
        (and:SI (reg:SI 230 [ ka.sa.sa_flags ])
            (const_int 268435456 [0x10000000]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 230 [ ka.sa.sa_flags ])
        (nil)))

(insn 101 100 102 16 arch/arm/kernel/signal.c:720 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 229)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 229)
        (nil)))

(jump_insn 102 101 103 16 arch/arm/kernel/signal.c:720 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 108)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 16 -> ( 17 18)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 209 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 209 213
;; rd  out 	(39)
27, 59, 83, 103, 104, 121, 122, 339, 352, 353, 2019, 2020, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049


;; Succ edge  17 [50.0%]  (fallthru)
;; Succ edge  18 [50.0%] 

;; Start of basic block ( 14 16) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u133(11){ }u134(13){ }u135(25){ }u136(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 209 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 209 213
;; lr  def 	 231
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 209 213
;; live  gen 	 231
;; live  kill	
;; rd  in  	(40)
27, 59, 83, 103, 104, 121, 122, 339, 341, 352, 353, 2019, 2020, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049
;; rd  gen 	(1)
2050
;; rd  kill	(1)
2050

;; Pred edge  14 [28.0%] 
;; Pred edge  16 [50.0%]  (fallthru)
(code_label 103 102 104 17 32 "" [1 uses])

(note 104 103 105 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 105 104 106 17 arch/arm/kernel/signal.c:721 (set (reg:SI 231)
        (const_int -4 [0xfffffffffffffffc])) 167 {*arm_movsi_insn} (nil))

(insn 106 105 107 17 arch/arm/kernel/signal.c:721 (set (mem/s/j:SI (reg/v/f:SI 213 [ regs ]) [0 <variable>.uregs+0 S4 A32])
        (reg:SI 231)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 231)
        (expr_list:REG_EQUAL (const_int -4 [0xfffffffffffffffc])
            (nil))))

(insn 107 106 108 17 arch/arm/kernel/signal.c:722 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 213 [ regs ])
                (const_int 60 [0x3c])) [0 <variable>.uregs+60 S4 A32])
        (reg/v:SI 209 [ continue_addr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 209 [ continue_addr ])
        (nil)))
;; End of basic block 17 -> ( 18)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 213
;; rd  out 	(41)
27, 59, 83, 103, 104, 121, 122, 339, 341, 352, 353, 2019, 2020, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050


;; Succ edge  18 [100.0%]  (fallthru)

;; Start of basic block ( 15 13 17 16) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u141(11){ }u142(13){ }u143(25){ }u144(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 200 201 232 233 408
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 213
;; live  gen 	 24 [cc] 200 201 232 233 408
;; live  kill	
;; rd  in  	(43)
27, 59, 83, 103, 104, 121, 122, 339, 340, 341, 342, 352, 353, 2019, 2020, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050
;; rd  gen 	(6)
338, 2017, 2018, 2051, 2052, 2155
;; rd  kill	(5)
2017, 2018, 2051, 2052, 2155

;; Pred edge  15 [72.0%] 
;; Pred edge  13 [72.0%] 
;; Pred edge  17 [100.0%]  (fallthru)
;; Pred edge  16 [50.0%] 
(code_label 108 107 109 18 31 "" [3 uses])

(note 109 108 111 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 111 109 112 18 include/linux/thread_info.h:84 (set (reg:SI 232)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 112 111 113 18 include/linux/thread_info.h:84 (set (reg/f:SI 200 [ D.25774 ])
        (and:SI (reg:SI 232)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 232)
        (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
                (const_int -8192 [0xffffffffffffe000]))
            (nil))))

(insn 113 112 114 18 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 201 [ D.25769 ])
        (mem/v:SI (reg/f:SI 200 [ D.25774 ]) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 114 113 115 18 arch/arm/kernel/signal.c:726 (set (reg:SI 233)
        (and:SI (reg:SI 201 [ D.25769 ])
            (const_int 1048576 [0x100000]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 201 [ D.25769 ])
        (nil)))

(insn 115 114 625 18 arch/arm/kernel/signal.c:726 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 233)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 233)
        (nil)))

(insn 625 115 116 18 (set (reg/f:SI 408 [ <variable>.task ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 200 [ D.25774 ])
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) -1 (expr_list:REG_DEAD (reg/f:SI 200 [ D.25774 ])
        (nil)))

(jump_insn 116 625 117 18 arch/arm/kernel/signal.c:726 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 125)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 18 -> ( 19 20)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 213 408
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 213 408
;; rd  out 	(45)
27, 59, 83, 103, 104, 121, 122, 338, 352, 353, 2017, 2018, 2019, 2020, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2155


;; Succ edge  19 [50.0%]  (fallthru)
;; Succ edge  20 [50.0%] 

;; Start of basic block ( 18) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u153(11){ }u154(13){ }u155(25){ }u156(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 213 408
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 408
;; lr  def 	 206
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 213 408
;; live  gen 	 206
;; live  kill	
;; rd  in  	(45)
27, 59, 83, 103, 104, 121, 122, 338, 352, 353, 2017, 2018, 2019, 2020, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2155
;; rd  gen 	(1)
2022
;; rd  kill	(2)
2021, 2022

;; Pred edge  18 [50.0%]  (fallthru)
(note 117 116 122 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 122 117 644 19 arch/arm/kernel/signal.c:727 (set (reg/v/f:SI 206 [ oldset ])
        (plus:SI (reg/f:SI 408 [ <variable>.task ])
            (const_int 960 [0x3c0]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 408 [ <variable>.task ])
        (nil)))

(jump_insn 644 122 645 19 (set (pc)
        (label_ref 132)) -1 (nil))
;; End of basic block 19 -> ( 21)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 206 207 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 206 207 213
;; rd  out 	(46)
27, 59, 83, 103, 104, 121, 122, 338, 352, 353, 2017, 2018, 2019, 2020, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2155


;; Succ edge  21 [100.0%] 

(barrier 645 644 125)

;; Start of basic block ( 18) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u158(11){ }u159(13){ }u160(25){ }u161(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 213 408
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 408
;; lr  def 	 206
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 213 408
;; live  gen 	 206
;; live  kill	
;; rd  in  	(45)
27, 59, 83, 103, 104, 121, 122, 338, 352, 353, 2017, 2018, 2019, 2020, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2155
;; rd  gen 	(1)
2021
;; rd  kill	(2)
2021, 2022

;; Pred edge  18 [50.0%] 
(code_label 125 645 126 20 33 "" [1 uses])

(note 126 125 131 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn 131 126 132 20 arch/arm/kernel/signal.c:729 (set (reg/v/f:SI 206 [ oldset ])
        (plus:SI (reg/f:SI 408 [ <variable>.task ])
            (const_int 944 [0x3b0]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 408 [ <variable>.task ])
        (nil)))
;; End of basic block 20 -> ( 21)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 206 207 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 206 207 213
;; rd  out 	(46)
27, 59, 83, 103, 104, 121, 122, 338, 352, 353, 2017, 2018, 2019, 2020, 2021, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2155


;; Succ edge  21 [100.0%]  (fallthru)

;; Start of basic block ( 20 19) -> 21
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u163(11){ }u164(13){ }u165(25){ }u166(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 206 207 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207
;; lr  def 	 24 [cc] 147 240 241
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 206 207 213
;; live  gen 	 24 [cc] 147 240 241
;; live  kill	
;; rd  in  	(47)
27, 59, 83, 103, 104, 121, 122, 338, 352, 353, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2155
;; rd  gen 	(4)
337, 1979, 2053, 2054
;; rd  kill	(3)
1979, 2053, 2054

;; Pred edge  20 [100.0%]  (fallthru)
;; Pred edge  19 [100.0%] 
(code_label 132 131 133 21 34 "" [1 uses])

(note 133 132 136 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn 136 133 137 21 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/current.h:10 (set (reg:SI 241)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 137 136 138 21 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/current.h:10 (set (reg:SI 240)
        (and:SI (reg:SI 241)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 241)
        (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
                (const_int -8192 [0xffffffffffffe000]))
            (nil))))

(insn 138 137 139 21 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/current.h:10 (set (reg/v/f:SI 147 [ tsk ])
        (mem/s/f/j:SI (plus:SI (reg:SI 240)
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 139 138 140 21 arch/arm/kernel/signal.c:616 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 207 [ signr ])
            (const_int 31 [0x1f]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 140 139 141 21 arch/arm/kernel/signal.c:616 (set (pc)
        (if_then_else (gt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 156)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 21 -> ( 22 25)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 206 207 213 240
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 206 207 213 240
;; rd  out 	(50)
27, 59, 83, 103, 104, 121, 122, 337, 352, 353, 1979, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2155


;; Succ edge  22 [50.0%]  (fallthru)
;; Succ edge  25 [50.0%] 

;; Start of basic block ( 21) -> 22
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u173(11){ }u174(13){ }u175(25){ }u176(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 206 207 213 240
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 240
;; lr  def 	 24 [cc] 143
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 206 207 213 240
;; live  gen 	 24 [cc] 143
;; live  kill	
;; rd  in  	(50)
27, 59, 83, 103, 104, 121, 122, 337, 352, 353, 1979, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2155
;; rd  gen 	(2)
336, 1976
;; rd  kill	(1)
1976

;; Pred edge  21 [50.0%]  (fallthru)
(note 141 140 144 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(insn 144 141 145 22 arch/arm/kernel/signal.c:616 discrim 1 (set (reg/f:SI 143 [ D.26019 ])
        (mem/s/f/j:SI (plus:SI (reg:SI 240)
                (const_int 16 [0x10])) [0 <variable>.exec_domain+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 240)
        (nil)))

(insn 145 144 146 22 arch/arm/kernel/signal.c:616 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 143 [ D.26019 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 146 145 147 22 arch/arm/kernel/signal.c:616 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 156)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
            (nil))))
;; End of basic block 22 -> ( 23 25)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 147 206 207 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 147 206 207 213
;; rd  out 	(51)
27, 59, 83, 103, 104, 121, 122, 336, 352, 353, 1976, 1979, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2155


;; Succ edge  23 [85.0%]  (fallthru)
;; Succ edge  25 [15.0%] 

;; Start of basic block ( 22) -> 23
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u180(11){ }u181(13){ }u182(25){ }u183(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 147 206 207 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 24 [cc] 144
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 147 206 207 213
;; live  gen 	 24 [cc] 144
;; live  kill	
;; rd  in  	(51)
27, 59, 83, 103, 104, 121, 122, 336, 352, 353, 1976, 1979, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2155
;; rd  gen 	(2)
335, 1977
;; rd  kill	(1)
1977

;; Pred edge  22 [85.0%]  (fallthru)
(note 147 146 148 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(insn 148 147 149 23 arch/arm/kernel/signal.c:616 discrim 2 (set (reg/f:SI 144 [ D.26018 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 143 [ D.26019 ])
                (const_int 16 [0x10])) [0 <variable>.signal_invmap+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 143 [ D.26019 ])
        (nil)))

(insn 149 148 150 23 arch/arm/kernel/signal.c:616 discrim 2 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 144 [ D.26018 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 150 149 151 23 arch/arm/kernel/signal.c:616 discrim 2 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 156)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
            (nil))))
;; End of basic block 23 -> ( 24 25)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 147 206 207 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 147 206 207 213
;; rd  out 	(52)
27, 59, 83, 103, 104, 121, 122, 335, 352, 353, 1976, 1977, 1979, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2155


;; Succ edge  24 [85.0%]  (fallthru)
;; Succ edge  25 [15.0%] 

;; Start of basic block ( 23) -> 24
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u187(11){ }u188(13){ }u189(25){ }u190(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 147 206 207 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 207
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 147 206 207 213
;; live  gen 	 133
;; live  kill	
;; rd  in  	(52)
27, 59, 83, 103, 104, 121, 122, 335, 352, 353, 1976, 1977, 1979, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2155
;; rd  gen 	(1)
1970
;; rd  kill	(2)
1970, 1971

;; Pred edge  23 [85.0%]  (fallthru)
(note 151 150 152 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(insn 152 151 646 24 arch/arm/kernel/signal.c:617 (set (reg/v:SI 133 [ signr.423 ])
        (mem:SI (plus:SI (mult:SI (reg/v:SI 207 [ signr ])
                    (const_int 4 [0x4]))
                (reg/f:SI 144 [ D.26018 ])) [0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 144 [ D.26018 ])
        (nil)))

(jump_insn 646 152 647 24 (set (pc)
        (label_ref 159)) -1 (nil))
;; End of basic block 24 -> ( 26)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 206 207 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 206 207 213
;; rd  out 	(53)
27, 59, 83, 103, 104, 121, 122, 335, 352, 353, 1970, 1976, 1977, 1979, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2155


;; Succ edge  26 [100.0%] 

(barrier 647 646 156)

;; Start of basic block ( 21 22 23) -> 25
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u193(11){ }u194(13){ }u195(25){ }u196(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 206 207 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 206 207 213
;; live  gen 	 133
;; live  kill	
;; rd  in  	(54)
27, 59, 83, 103, 104, 121, 122, 335, 336, 337, 352, 353, 1976, 1977, 1979, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2155
;; rd  gen 	(1)
1971
;; rd  kill	(2)
1970, 1971

;; Pred edge  21 [50.0%] 
;; Pred edge  22 [15.0%] 
;; Pred edge  23 [15.0%] 
(code_label 156 647 157 25 35 "" [3 uses])

(note 157 156 158 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(insn 158 157 159 25 arch/arm/kernel/signal.c:617 (set (reg/v:SI 133 [ signr.423 ])
        (reg/v:SI 207 [ signr ])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 25 -> ( 26)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 206 207 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 206 207 213
;; rd  out 	(55)
27, 59, 83, 103, 104, 121, 122, 335, 336, 337, 352, 353, 1971, 1976, 1977, 1979, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2155


;; Succ edge  26 [100.0%]  (fallthru)

;; Start of basic block ( 25 24) -> 26
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u198(11){ }u199(13){ }u200(25){ }u201(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 206 207 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 213
;; lr  def 	 24 [cc] 146 244 409 410
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 206 207 213
;; live  gen 	 24 [cc] 146 244 409 410
;; live  kill	
;; rd  in  	(56)
27, 59, 83, 103, 104, 121, 122, 335, 336, 337, 352, 353, 1970, 1971, 1976, 1977, 1979, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2155
;; rd  gen 	(5)
334, 1978, 2055, 2156, 2157
;; rd  kill	(4)
1978, 2055, 2156, 2157

;; Pred edge  25 [100.0%]  (fallthru)
;; Pred edge  24 [100.0%] 
(code_label 159 158 160 26 36 "" [1 uses])

(note 160 159 161 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(insn 161 160 162 26 arch/arm/kernel/signal.c:622 (set (reg:SI 146 [ D.26013 ])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -28 [0xffffffffffffffe4])) [0 ka.sa.sa_flags+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 162 161 163 26 arch/arm/kernel/signal.c:622 (set (reg:SI 244)
        (and:SI (reg:SI 146 [ D.26013 ])
            (const_int 4 [0x4]))) 67 {*arm_andsi3_insn} (nil))

(insn 163 162 628 26 arch/arm/kernel/signal.c:622 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 244)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 244)
        (nil)))

(insn 628 163 631 26 (set (reg:SI 409 [ sp ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 213 [ regs ])
                (const_int 52 [0x34])) [0 <variable>.uregs+52 S4 A32])) -1 (nil))

(insn 631 628 164 26 (set (reg:SI 410)
        (and:SI (reg:SI 146 [ D.26013 ])
            (const_int 134217728 [0x8000000]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 146 [ D.26013 ])
        (nil)))

(jump_insn 164 631 165 26 arch/arm/kernel/signal.c:622 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 326)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 26 -> ( 27 40)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 206 207 213 409 410
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 206 207 213 409 410
;; rd  out 	(58)
27, 59, 83, 103, 104, 121, 122, 334, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2155, 2156, 2157


;; Succ edge  27 [50.0%]  (fallthru)
;; Succ edge  40 [50.0%] 

;; Start of basic block ( 26) -> 27
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u208(11){ }u209(13){ }u210(25){ }u211(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 206 207 213 409 410
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 409 410
;; lr  def 	 24 [cc] 158
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 206 207 213 409 410
;; live  gen 	 24 [cc] 158
;; live  kill	
;; rd  in  	(58)
27, 59, 83, 103, 104, 121, 122, 334, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2155, 2156, 2157
;; rd  gen 	(2)
288, 1988
;; rd  kill	(2)
1988, 1989

;; Pred edge  26 [50.0%]  (fallthru)
(note 165 164 629 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(insn 629 165 168 27 arch/arm/kernel/signal.c:442 (set (reg/v:SI 158 [ sp ])
        (reg:SI 409 [ sp ])) -1 (expr_list:REG_DEAD (reg:SI 409 [ sp ])
        (expr_list:REG_EQUAL (mem/s/j:SI (plus:SI (reg/v/f:SI 213 [ regs ])
                    (const_int 52 [0x34])) [0 <variable>.uregs+52 S4 A32])
            (nil))))

(insn 168 629 169 27 arch/arm/kernel/signal.c:448 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 410)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 410)
        (nil)))

(jump_insn 169 168 170 27 arch/arm/kernel/signal.c:448 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 200)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 27 -> ( 28 31)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 158 206 207 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 158 206 207 213
;; rd  out 	(59)
27, 59, 83, 103, 104, 121, 122, 288, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 1988, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2155, 2156, 2157


;; Succ edge  28 [50.0%]  (fallthru)
;; Succ edge  31 [50.0%] 

;; Start of basic block ( 27) -> 28
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u216(11){ }u217(13){ }u218(25){ }u219(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 158 206 207 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 246 247 248 249
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 158 206 207 213
;; live  gen 	 24 [cc] 246 247 248 249
;; live  kill	
;; rd  in  	(59)
27, 59, 83, 103, 104, 121, 122, 288, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 1988, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2155, 2156, 2157
;; rd  gen 	(5)
333, 2056, 2057, 2058, 2059
;; rd  kill	(4)
2056, 2057, 2058, 2059

;; Pred edge  27 [50.0%]  (fallthru)
(note 170 169 172 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(insn 172 170 173 28 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 247)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 173 172 174 28 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 246)
        (and:SI (reg:SI 247)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 247)
        (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
                (const_int -8192 [0xffffffffffffe000]))
            (nil))))

(insn 174 173 175 28 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 248 [ <variable>.task ])
        (mem/s/f/j:SI (plus:SI (reg:SI 246)
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 246)
        (nil)))

(insn 175 174 176 28 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 249 [ <variable>.sas_ss_size ])
        (mem/s/j:SI (plus:SI (reg/f:SI 248 [ <variable>.task ])
                (const_int 988 [0x3dc])) [0 <variable>.sas_ss_size+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 176 175 177 28 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 249 [ <variable>.sas_ss_size ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 177 176 178 28 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 200)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 28 -> ( 29 31)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 158 206 207 213 248 249
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 158 206 207 213 248 249
;; rd  out 	(63)
27, 59, 83, 103, 104, 121, 122, 333, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 1988, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2155, 2156, 2157


;; Succ edge  29 [50.0%]  (fallthru)
;; Succ edge  31 [50.0%] 

;; Start of basic block ( 28) -> 29
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u227(11){ }u228(13){ }u229(25){ }u230(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 158 206 207 213 248 249
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158 248
;; lr  def 	 24 [cc] 253
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 158 206 207 213 248 249
;; live  gen 	 24 [cc] 253
;; live  kill	
;; rd  in  	(63)
27, 59, 83, 103, 104, 121, 122, 333, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 1988, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2155, 2156, 2157
;; rd  gen 	(2)
286, 2060
;; rd  kill	(1)
2060

;; Pred edge  28 [50.0%]  (fallthru)
(note 178 177 183 29 [bb 29] NOTE_INSN_BASIC_BLOCK)

(insn 183 178 184 29 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 253 [ <variable>.sas_ss_sp ])
        (mem/s/j:SI (plus:SI (reg/f:SI 248 [ <variable>.task ])
                (const_int 984 [0x3d8])) [0 <variable>.sas_ss_sp+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 248 [ <variable>.task ])
        (nil)))

(insn 184 183 185 29 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 158 [ sp ])
            (reg:SI 253 [ <variable>.sas_ss_sp ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 185 184 186 29 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 583)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 29 -> ( 30 70)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 158 206 207 213 249 253
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 158 206 207 213 249 253
;; rd  out 	(64)
27, 59, 83, 103, 104, 121, 122, 286, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 1988, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2155, 2156, 2157


;; Succ edge  30 [50.0%]  (fallthru)
;; Succ edge  70 [50.0%] 

;; Start of basic block ( 29) -> 30
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u235(11){ }u236(13){ }u237(25){ }u238(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 158 206 207 213 249 253
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158 249 253
;; lr  def 	 24 [cc] 257
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 158 206 207 213 249 253
;; live  gen 	 24 [cc] 257
;; live  kill	
;; rd  in  	(64)
27, 59, 83, 103, 104, 121, 122, 286, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 1988, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2155, 2156, 2157
;; rd  gen 	(2)
293, 2061
;; rd  kill	(1)
2061

;; Pred edge  29 [50.0%]  (fallthru)
(note 186 185 193 30 [bb 30] NOTE_INSN_BASIC_BLOCK)

(insn 193 186 198 30 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 257)
        (minus:SI (reg/v:SI 158 [ sp ])
            (reg:SI 253 [ <variable>.sas_ss_sp ]))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg:SI 253 [ <variable>.sas_ss_sp ])
        (nil)))

(insn 198 193 199 30 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 257)
            (reg:SI 249 [ <variable>.sas_ss_size ]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 257)
        (expr_list:REG_DEAD (reg:SI 249 [ <variable>.sas_ss_size ])
            (nil))))

(jump_insn 199 198 200 30 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 583)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 30 -> ( 31 70)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 158 206 207 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 158 206 207 213
;; rd  out 	(65)
27, 59, 83, 103, 104, 121, 122, 293, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 1988, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2155, 2156, 2157


;; Succ edge  31 [50.0%]  (fallthru)
;; Succ edge  70 [50.0%] 

;; Start of basic block ( 27 30 28 70) -> 31
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u244(11){ }u245(13){ }u246(25){ }u247(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 158 206 207 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158
;; lr  def 	 24 [cc] 159 160 161 263 264 265 266
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 158 206 207 213
;; live  gen 	 24 [cc] 159 160 161 263 264 265 266
;; live  kill	 24 [cc]
;; rd  in  	(74)
27, 59, 83, 103, 104, 121, 122, 286, 288, 293, 333, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 1988, 1989, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2145, 2146, 2147, 2148, 2149, 2155, 2156, 2157
;; rd  gen 	(8)
330, 1990, 1992, 1993, 2062, 2063, 2064, 2065
;; rd  kill	(8)
1990, 1991, 1992, 1993, 2062, 2063, 2064, 2065

;; Pred edge  27 [50.0%] 
;; Pred edge  30 [50.0%]  (fallthru)
;; Pred edge  28 [50.0%] 
;; Pred edge  70 [100.0%] 
(code_label 200 199 201 31 38 "" [3 uses])

(note 201 200 202 31 [bb 31] NOTE_INSN_BASIC_BLOCK)

(insn 202 201 203 31 arch/arm/kernel/signal.c:454 (set (reg:SI 263)
        (plus:SI (reg/v:SI 158 [ sp ])
            (const_int -880 [0xfffffffffffffc90]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/v:SI 158 [ sp ])
        (nil)))

(insn 203 202 205 31 arch/arm/kernel/signal.c:454 (set (reg/v/f:SI 159 [ frame ])
        (and:SI (reg:SI 263)
            (const_int -8 [0xfffffffffffffff8]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 263)
        (nil)))

(insn 205 203 206 31 arch/arm/kernel/signal.c:459 (set (reg:SI 265)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 206 205 207 31 arch/arm/kernel/signal.c:459 (set (reg:SI 264)
        (and:SI (reg:SI 265)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 265)
        (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
                (const_int -8192 [0xffffffffffffe000]))
            (nil))))

(insn 207 206 208 31 arch/arm/kernel/signal.c:459 (set (reg:SI 266 [ <variable>.addr_limit ])
        (mem/s/j:SI (plus:SI (reg:SI 264)
                (const_int 8 [0x8])) [0 <variable>.addr_limit+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 208 207 209 31 arch/arm/kernel/signal.c:459 (parallel [
            (set (reg/v:SI 160 [ flag ])
                (asm_operands:SI ("adds %1, %2, %3; sbcccs %1, %1, %0; movcc %0, #0") ("=&r") 0 [
                        (reg/v/f:SI 159 [ frame ])
                        (const_int 880 [0x370])
                        (reg:SI 266 [ <variable>.addr_limit ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("Ir") 0)
                        (asm_input:SI ("0") 0)
                    ] 8647573))
            (set (reg/v:SI 161 [ roksum ])
                (asm_operands:SI ("adds %1, %2, %3; sbcccs %1, %1, %0; movcc %0, #0") ("=&r") 1 [
                        (reg/v/f:SI 159 [ frame ])
                        (const_int 880 [0x370])
                        (reg:SI 266 [ <variable>.addr_limit ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("Ir") 0)
                        (asm_input:SI ("0") 0)
                    ] 8647573))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg:SI 266 [ <variable>.addr_limit ])
        (expr_list:REG_UNUSED (reg/v:SI 161 [ roksum ])
            (expr_list:REG_UNUSED (reg:QI 24 cc)
                (nil)))))

(insn 209 208 637 31 arch/arm/kernel/signal.c:459 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 160 [ flag ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 160 [ flag ])
        (nil)))

(insn 637 209 216 31 arch/arm/kernel/signal.c:460 (set (reg/v/f:SI 159 [ frame ])
        (if_then_else:SI (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (reg/v/f:SI 159 [ frame ])
            (const_int 0 [0x0]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 216 637 217 31 arch/arm/kernel/signal.c:569 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 159 [ frame ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 217 216 218 31 arch/arm/kernel/signal.c:569 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 404)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3017 [0xbc9])
            (nil))))
;; End of basic block 31 -> ( 48 32)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 159 206 207 213 264
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 159 206 207 213 264
;; rd  out 	(78)
27, 59, 83, 103, 104, 121, 122, 330, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 1988, 1989, 1990, 1992, 1993, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2145, 2146, 2147, 2148, 2149, 2155, 2156, 2157


;; Succ edge  48 [30.2%] 
;; Succ edge  32 [69.8%]  (fallthru)

;; Start of basic block ( 31) -> 32
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u261(11){ }u262(13){ }u263(25){ }u264(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 159 206 207 213 264
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 159 213 264
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 169 174 175 267 268 269 271 272 275 276 280
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 159 206 207 213 264
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 169 174 175 267 268 269 271 272 275 276 280
;; live  kill	 14 [lr] 24 [cc]
;; rd  in  	(78)
27, 59, 83, 103, 104, 121, 122, 330, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 1988, 1989, 1990, 1992, 1993, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2145, 2146, 2147, 2148, 2149, 2155, 2156, 2157
;; rd  gen 	(12)
326, 1994, 1999, 2000, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073
;; rd  kill	(29)
123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 1994, 1995, 1999, 2000, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073

;; Pred edge  31 [69.8%]  (fallthru)
(note 218 217 220 32 [bb 32] NOTE_INSN_BASIC_BLOCK)

(insn 220 218 221 32 arch/arm/kernel/signal.c:572 (set (reg/f:SI 267)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -160 [0xffffffffffffff60]))) 4 {*arm_addsi3} (nil))

(insn 221 220 222 32 arch/arm/kernel/signal.c:572 (set (reg:SI 0 r0)
        (reg/v/f:SI 159 [ frame ])) 167 {*arm_movsi_insn} (nil))

(insn 222 221 223 32 arch/arm/kernel/signal.c:572 (set (reg:SI 1 r1)
        (reg/f:SI 267)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 267)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -160 [0xffffffffffffff60]))
            (nil))))

(call_insn 223 222 224 32 arch/arm/kernel/signal.c:572 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("copy_siginfo_to_user") [flags 0x41] <function_decl 0x512b7280 copy_siginfo_to_user>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 224 223 225 32 arch/arm/kernel/signal.c:572 (set (reg:SI 175 [ D.25916 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 225 224 226 32 arch/arm/kernel/signal.c:574 discrim 4 (set (reg:SI 268)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 226 225 227 32 arch/arm/kernel/signal.c:574 discrim 4 (set (reg/f:SI 269)
        (plus:SI (reg/v/f:SI 159 [ frame ])
            (const_int 128 [0x80]))) 4 {*arm_addsi3} (nil))

(insn 227 226 229 32 arch/arm/kernel/signal.c:574 discrim 4 (parallel [
            (set (reg/v:SI 169 [ err ])
                (asm_operands/v:SI ("1:	str	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg:SI 268)
                        (reg/f:SI 269)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg:SI 175 [ D.25916 ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8690844))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/f:SI 269)
        (expr_list:REG_DEAD (reg:SI 175 [ D.25916 ])
            (expr_list:REG_UNUSED (reg:QI 24 cc)
                (nil)))))

(insn 229 227 230 32 arch/arm/kernel/signal.c:575 discrim 4 (set (reg/f:SI 271)
        (plus:SI (reg/v/f:SI 159 [ frame ])
            (const_int 132 [0x84]))) 4 {*arm_addsi3} (nil))

(insn 230 229 231 32 arch/arm/kernel/signal.c:575 discrim 4 (parallel [
            (set (reg/v:SI 169 [ err ])
                (asm_operands/v:SI ("1:	str	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg:SI 268)
                        (reg/f:SI 271)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 169 [ err ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8690849))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/f:SI 271)
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))

(insn 231 230 232 32 arch/arm/kernel/signal.c:577 discrim 1 (set (reg/f:SI 272)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -12 [0xfffffffffffffff4]))) 4 {*arm_addsi3} (nil))

(insn 232 231 233 32 arch/arm/kernel/signal.c:577 discrim 1 (set (reg:SI 0 r0)
        (reg/f:SI 272)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 272)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -12 [0xfffffffffffffff4]))
            (nil))))

(insn 233 232 234 32 arch/arm/kernel/signal.c:577 discrim 1 (set (reg:SI 1 r1)
        (const_int 12 [0xc])) 167 {*arm_movsi_insn} (nil))

(call_insn 234 233 238 32 arch/arm/kernel/signal.c:577 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("__memzero") [flags 0x41] <function_decl 0x5118a980 __memzero>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 238 234 239 32 arch/arm/kernel/signal.c:578 (set (reg/f:SI 275 [ <variable>.task ])
        (mem/s/f/j:SI (plus:SI (reg:SI 264)
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 264)
        (nil)))

(insn 239 238 240 32 arch/arm/kernel/signal.c:578 (set (reg:SI 276 [ <variable>.sas_ss_sp ])
        (mem/s/j:SI (plus:SI (reg/f:SI 275 [ <variable>.task ])
                (const_int 984 [0x3d8])) [0 <variable>.sas_ss_sp+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 240 239 241 32 arch/arm/kernel/signal.c:578 (set (mem/s/f/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -12 [0xfffffffffffffff4])) [0 stack.ss_sp+0 S4 A32])
        (reg:SI 276 [ <variable>.sas_ss_sp ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 276 [ <variable>.sas_ss_sp ])
        (nil)))

(insn 241 240 246 32 arch/arm/kernel/signal.c:579 (set (reg:SI 174 [ D.25921 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 213 [ regs ])
                (const_int 52 [0x34])) [0 <variable>.uregs+52 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 246 241 247 32 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 280 [ <variable>.sas_ss_size ])
        (mem/s/j:SI (plus:SI (reg/f:SI 275 [ <variable>.task ])
                (const_int 988 [0x3dc])) [0 <variable>.sas_ss_size+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 247 246 248 32 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 280 [ <variable>.sas_ss_size ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 248 247 249 32 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 253)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 32 -> ( 34 33)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 159 169 174 206 207 213 268 275 280
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 159 169 174 206 207 213 268 275 280
;; rd  out 	(89)
27, 59, 83, 103, 104, 121, 122, 326, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 1988, 1989, 1990, 1992, 1993, 1994, 1999, 2000, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2145, 2146, 2147, 2148, 2149, 2155, 2156, 2157


;; Succ edge  34 [50.0%] 
;; Succ edge  33 [50.0%]  (fallthru)

;; Start of basic block ( 32) -> 33
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u295(11){ }u296(13){ }u297(25){ }u298(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 159 169 206 207 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 156
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 159 169 206 207 213
;; live  gen 	 156
;; live  kill	
;; rd  in  	(89)
27, 59, 83, 103, 104, 121, 122, 326, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 1988, 1989, 1990, 1992, 1993, 1994, 1999, 2000, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2145, 2146, 2147, 2148, 2149, 2155, 2156, 2157
;; rd  gen 	(1)
1987
;; rd  kill	(3)
1985, 1986, 1987

;; Pred edge  32 [50.0%]  (fallthru)
(note 249 248 250 33 [bb 33] NOTE_INSN_BASIC_BLOCK)

(insn 250 249 648 33 include/linux/sched.h:2213 discrim 1 (set (reg:SI 156 [ D.25977 ])
        (const_int 2 [0x2])) 167 {*arm_movsi_insn} (nil))

(jump_insn 648 250 649 33 (set (pc)
        (label_ref 282)) -1 (nil))
;; End of basic block 33 -> ( 37)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 156 159 169 206 207 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 156 159 169 206 207 213
;; rd  out 	(90)
27, 59, 83, 103, 104, 121, 122, 326, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 1987, 1988, 1989, 1990, 1992, 1993, 1994, 1999, 2000, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2145, 2146, 2147, 2148, 2149, 2155, 2156, 2157


;; Succ edge  37 [100.0%] 

(barrier 649 648 253)

;; Start of basic block ( 32) -> 34
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u299(11){ }u300(13){ }u301(25){ }u302(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 159 169 174 206 207 213 268 275 280
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 174 275
;; lr  def 	 24 [cc] 284
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 159 169 174 206 207 213 268 275 280
;; live  gen 	 24 [cc] 284
;; live  kill	
;; rd  in  	(89)
27, 59, 83, 103, 104, 121, 122, 326, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 1988, 1989, 1990, 1992, 1993, 1994, 1999, 2000, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2145, 2146, 2147, 2148, 2149, 2155, 2156, 2157
;; rd  gen 	(2)
325, 2074
;; rd  kill	(1)
2074

;; Pred edge  32 [50.0%] 
(code_label 253 649 254 34 42 "" [1 uses])

(note 254 253 259 34 [bb 34] NOTE_INSN_BASIC_BLOCK)

(insn 259 254 260 34 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 284 [ <variable>.sas_ss_sp ])
        (mem/s/j:SI (plus:SI (reg/f:SI 275 [ <variable>.task ])
                (const_int 984 [0x3d8])) [0 <variable>.sas_ss_sp+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 275 [ <variable>.task ])
        (nil)))

(insn 260 259 261 34 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 174 [ D.25921 ])
            (reg:SI 284 [ <variable>.sas_ss_sp ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 261 260 262 34 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 266)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 34 -> ( 36 35)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 159 169 174 206 207 213 268 280 284
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 159 169 174 206 207 213 268 280 284
;; rd  out 	(90)
27, 59, 83, 103, 104, 121, 122, 325, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 1988, 1989, 1990, 1992, 1993, 1994, 1999, 2000, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2145, 2146, 2147, 2148, 2149, 2155, 2156, 2157


;; Succ edge  36 [50.0%] 
;; Succ edge  35 [50.0%]  (fallthru)

;; Start of basic block ( 34) -> 35
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u307(11){ }u308(13){ }u309(25){ }u310(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 159 169 206 207 213 268
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 268
;; lr  def 	 156
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 159 169 206 207 213 268
;; live  gen 	 156
;; live  kill	
;; rd  in  	(90)
27, 59, 83, 103, 104, 121, 122, 325, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 1988, 1989, 1990, 1992, 1993, 1994, 1999, 2000, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2145, 2146, 2147, 2148, 2149, 2155, 2156, 2157
;; rd  gen 	(1)
1985
;; rd  kill	(3)
1985, 1986, 1987

;; Pred edge  34 [50.0%]  (fallthru)
(note 262 261 263 35 [bb 35] NOTE_INSN_BASIC_BLOCK)

(insn 263 262 650 35 include/linux/sched.h:2206 discrim 2 (set (reg:SI 156 [ D.25977 ])
        (reg:SI 268)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 268)
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(jump_insn 650 263 651 35 (set (pc)
        (label_ref 282)) -1 (nil))
;; End of basic block 35 -> ( 37)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 156 159 169 206 207 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 156 159 169 206 207 213
;; rd  out 	(91)
27, 59, 83, 103, 104, 121, 122, 325, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 1985, 1988, 1989, 1990, 1992, 1993, 1994, 1999, 2000, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2145, 2146, 2147, 2148, 2149, 2155, 2156, 2157


;; Succ edge  37 [100.0%] 

(barrier 651 650 266)

;; Start of basic block ( 34) -> 36
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u312(11){ }u313(13){ }u314(25){ }u315(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 159 169 174 206 207 213 280 284
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 174 280 284
;; lr  def 	 24 [cc] 156 288
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 159 169 174 206 207 213 280 284
;; live  gen 	 24 [cc] 156 288
;; live  kill	
;; rd  in  	(90)
27, 59, 83, 103, 104, 121, 122, 325, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 1988, 1989, 1990, 1992, 1993, 1994, 1999, 2000, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2145, 2146, 2147, 2148, 2149, 2155, 2156, 2157
;; rd  gen 	(3)
291, 1986, 2075
;; rd  kill	(4)
1985, 1986, 1987, 2075

;; Pred edge  34 [50.0%] 
(code_label 266 651 267 36 44 "" [1 uses])

(note 267 266 274 36 [bb 36] NOTE_INSN_BASIC_BLOCK)

(insn 274 267 279 36 include/linux/sched.h:2206 discrim 3 (set (reg:SI 288)
        (minus:SI (reg:SI 174 [ D.25921 ])
            (reg:SI 284 [ <variable>.sas_ss_sp ]))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg:SI 284 [ <variable>.sas_ss_sp ])
        (expr_list:REG_DEAD (reg:SI 174 [ D.25921 ])
            (nil))))

(insn 279 274 280 36 include/linux/sched.h:2206 discrim 3 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 288)
            (reg:SI 280 [ <variable>.sas_ss_size ]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 288)
        (expr_list:REG_DEAD (reg:SI 280 [ <variable>.sas_ss_size ])
            (nil))))

(insn 280 279 282 36 include/linux/sched.h:2206 discrim 3 (set (reg:SI 156 [ D.25977 ])
        (leu:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))
;; End of basic block 36 -> ( 37)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 156 159 169 206 207 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 156 159 169 206 207 213
;; rd  out 	(92)
27, 59, 83, 103, 104, 121, 122, 291, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 1986, 1988, 1989, 1990, 1992, 1993, 1994, 1999, 2000, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2145, 2146, 2147, 2148, 2149, 2155, 2156, 2157


;; Succ edge  37 [100.0%]  (fallthru)

;; Start of basic block ( 36 33 35) -> 37
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u321(11){ }u322(13){ }u323(25){ }u324(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 156 159 169 206 207 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 159 169 206 213
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 148 171 172 173 296 297 298 299 300 301 302
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 156 159 169 206 207 213
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 148 171 172 173 296 297 298 299 300 301 302
;; live  kill	 14 [lr]
;; rd  in  	(96)
27, 59, 83, 103, 104, 121, 122, 291, 325, 326, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 1985, 1986, 1987, 1988, 1989, 1990, 1992, 1993, 1994, 1999, 2000, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2145, 2146, 2147, 2148, 2149, 2155, 2156, 2157
;; rd  gen 	(13)
20, 322, 1984, 1996, 1997, 1998, 2076, 2077, 2078, 2079, 2080, 2081, 2082
;; rd  kill	(63)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 1980, 1981, 1982, 1983, 1984, 1996, 1997, 1998, 2076, 2077, 2078, 2079, 2080, 2081, 2082

;; Pred edge  36 [100.0%]  (fallthru)
;; Pred edge  33 [100.0%] 
;; Pred edge  35 [100.0%] 
(code_label 282 280 283 37 43 "" [2 uses])

(note 283 282 284 37 [bb 37] NOTE_INSN_BASIC_BLOCK)

(insn 284 283 286 37 arch/arm/kernel/signal.c:579 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0 stack.ss_flags+0 S4 A32])
        (reg:SI 156 [ D.25977 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 156 [ D.25977 ])
        (nil)))

(insn 286 284 287 37 arch/arm/kernel/signal.c:580 (set (reg:SI 297)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 287 286 288 37 arch/arm/kernel/signal.c:580 (set (reg:SI 296)
        (and:SI (reg:SI 297)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 297)
        (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
                (const_int -8192 [0xffffffffffffe000]))
            (nil))))

(insn 288 287 289 37 arch/arm/kernel/signal.c:580 (set (reg/f:SI 298 [ <variable>.task ])
        (mem/s/f/j:SI (plus:SI (reg:SI 296)
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 296)
        (nil)))

(insn 289 288 290 37 arch/arm/kernel/signal.c:580 (set (reg:SI 299 [ <variable>.sas_ss_size ])
        (mem/s/j:SI (plus:SI (reg/f:SI 298 [ <variable>.task ])
                (const_int 988 [0x3dc])) [0 <variable>.sas_ss_size+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 298 [ <variable>.task ])
        (nil)))

(insn 290 289 291 37 arch/arm/kernel/signal.c:580 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 stack.ss_size+0 S4 A32])
        (reg:SI 299 [ <variable>.sas_ss_size ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 299 [ <variable>.sas_ss_size ])
        (nil)))

(insn 291 290 292 37 arch/arm/kernel/signal.c:581 (set (reg/f:SI 300)
        (plus:SI (reg/v/f:SI 159 [ frame ])
            (const_int 136 [0x88]))) 4 {*arm_addsi3} (nil))

(insn 292 291 293 37 arch/arm/kernel/signal.c:581 (set (reg/f:SI 301)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -12 [0xfffffffffffffff4]))) 4 {*arm_addsi3} (nil))

(insn 293 292 294 37 arch/arm/kernel/signal.c:581 (set (reg:SI 0 r0)
        (reg/f:SI 300)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 300)
        (nil)))

(insn 294 293 295 37 arch/arm/kernel/signal.c:581 (set (reg:SI 1 r1)
        (reg/f:SI 301)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 301)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -12 [0xfffffffffffffff4]))
            (nil))))

(insn 295 294 296 37 arch/arm/kernel/signal.c:581 (set (reg:SI 2 r2)
        (const_int 12 [0xc])) 167 {*arm_movsi_insn} (nil))

(call_insn 296 295 297 37 arch/arm/kernel/signal.c:581 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__copy_to_user") [flags 0x41] <function_decl 0x10f3df00 __copy_to_user>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 297 296 298 37 arch/arm/kernel/signal.c:581 (set (reg:SI 173 [ D.25925 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 298 297 299 37 arch/arm/kernel/signal.c:581 (set (reg:SI 172 [ D.25926 ])
        (ior:SI (reg:SI 173 [ D.25925 ])
            (reg/v:SI 169 [ err ]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 173 [ D.25925 ])
        (expr_list:REG_DEAD (reg/v:SI 169 [ err ])
            (nil))))

(insn 299 298 300 37 arch/arm/kernel/signal.c:583 (set (reg/f:SI 302)
        (plus:SI (reg/v/f:SI 159 [ frame ])
            (const_int 128 [0x80]))) 4 {*arm_addsi3} (nil))

(insn 300 299 301 37 arch/arm/kernel/signal.c:583 (set (reg:SI 0 r0)
        (reg/f:SI 302)) 167 {*arm_movsi_insn} (nil))

(insn 301 300 302 37 arch/arm/kernel/signal.c:583 (set (reg:SI 1 r1)
        (reg/v/f:SI 213 [ regs ])) 167 {*arm_movsi_insn} (nil))

(insn 302 301 303 37 arch/arm/kernel/signal.c:583 (set (reg:SI 2 r2)
        (reg/v/f:SI 206 [ oldset ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 206 [ oldset ])
        (nil)))

(call_insn 303 302 304 37 arch/arm/kernel/signal.c:583 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("setup_sigframe") [flags 0x3] <function_decl 0x1140a680 setup_sigframe>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 304 303 305 37 arch/arm/kernel/signal.c:583 (set (reg:SI 171 [ D.25928 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 305 304 306 37 arch/arm/kernel/signal.c:583 (set (reg/v:SI 148 [ ret ])
        (ior:SI (reg:SI 172 [ D.25926 ])
            (reg:SI 171 [ D.25928 ]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 172 [ D.25926 ])
        (expr_list:REG_DEAD (reg:SI 171 [ D.25928 ])
            (nil))))

(insn 306 305 307 37 arch/arm/kernel/signal.c:584 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 148 [ ret ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 307 306 308 37 arch/arm/kernel/signal.c:584 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 407)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 37 -> ( 38 49)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 148 159 207 213 302
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 148 159 207 213 302
;; rd  out 	(105)
20, 59, 83, 103, 104, 121, 122, 322, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1992, 1993, 1994, 1996, 1997, 1998, 1999, 2000, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2145, 2146, 2147, 2148, 2149, 2155, 2156, 2157


;; Succ edge  38 [29.0%]  (fallthru)
;; Succ edge  49 [71.0%] 

;; Start of basic block ( 37) -> 38
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u359(11){ }u360(13){ }u361(25){ }u362(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 159 207 213 302
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 159 213
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 148 303 304
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 159 207 213 302
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc] 148 303 304
;; live  kill	 14 [lr]
;; rd  in  	(105)
20, 59, 83, 103, 104, 121, 122, 322, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1992, 1993, 1994, 1996, 1997, 1998, 1999, 2000, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2145, 2146, 2147, 2148, 2149, 2155, 2156, 2157
;; rd  gen 	(5)
18, 320, 1983, 2083, 2084
;; rd  kill	(55)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 1980, 1981, 1982, 1983, 1984, 2083, 2084

;; Pred edge  37 [29.0%]  (fallthru)
(note 308 307 309 38 [bb 38] NOTE_INSN_BASIC_BLOCK)

(insn 309 308 310 38 arch/arm/kernel/signal.c:585 (set (reg/f:SI 303)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -32 [0xffffffffffffffe0]))) 4 {*arm_addsi3} (nil))

(insn 310 309 311 38 arch/arm/kernel/signal.c:585 (set (reg/f:SI 304)
        (plus:SI (reg/v/f:SI 159 [ frame ])
            (const_int 872 [0x368]))) 4 {*arm_addsi3} (nil))

(insn 311 310 312 38 arch/arm/kernel/signal.c:585 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg/v:SI 133 [ signr.423 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 133 [ signr.423 ])
        (nil)))

(insn 312 311 313 38 arch/arm/kernel/signal.c:585 (set (reg:SI 0 r0)
        (reg/v/f:SI 213 [ regs ])) 167 {*arm_movsi_insn} (nil))

(insn 313 312 314 38 arch/arm/kernel/signal.c:585 (set (reg:SI 1 r1)
        (reg/f:SI 303)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 303)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -32 [0xffffffffffffffe0]))
            (nil))))

(insn 314 313 315 38 arch/arm/kernel/signal.c:585 (set (reg:SI 2 r2)
        (reg/f:SI 304)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 304)
        (nil)))

(insn 315 314 316 38 arch/arm/kernel/signal.c:585 (set (reg:SI 3 r3)
        (reg/v/f:SI 159 [ frame ])) 167 {*arm_movsi_insn} (nil))

(call_insn 316 315 317 38 arch/arm/kernel/signal.c:585 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("setup_return") [flags 0x3] <function_decl 0x1140a880 setup_return>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 317 316 318 38 arch/arm/kernel/signal.c:585 (set (reg/v:SI 148 [ ret ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 318 317 319 38 arch/arm/kernel/signal.c:587 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 148 [ ret ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 319 318 320 38 arch/arm/kernel/signal.c:587 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 407)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 0 [0x0])
            (nil))))
;; End of basic block 38 -> ( 39 49)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 159 207 213 302
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 159 207 213 302
;; rd  out 	(107)
18, 59, 83, 103, 104, 121, 122, 320, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 1983, 1985, 1986, 1987, 1988, 1989, 1990, 1992, 1993, 1994, 1996, 1997, 1998, 1999, 2000, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2145, 2146, 2147, 2148, 2149, 2155, 2156, 2157


;; Succ edge  39 [100.0%]  (fallthru)
;; Succ edge  49

;; Start of basic block ( 38) -> 39
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u380(11){ }u381(13){ }u382(25){ }u383(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 159 207 213 302
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 159 213 302
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 159 207 213 302
;; live  gen 	
;; live  kill	
;; rd  in  	(107)
18, 59, 83, 103, 104, 121, 122, 320, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 1983, 1985, 1986, 1987, 1988, 1989, 1990, 1992, 1993, 1994, 1996, 1997, 1998, 1999, 2000, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2145, 2146, 2147, 2148, 2149, 2155, 2156, 2157
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  38 [100.0%]  (fallthru)
(note 320 319 321 39 [bb 39] NOTE_INSN_BASIC_BLOCK)

(insn 321 320 323 39 arch/arm/kernel/signal.c:593 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 213 [ regs ])
                (const_int 4 [0x4])) [0 <variable>.uregs+4 S4 A32])
        (reg/v/f:SI 159 [ frame ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 159 [ frame ])
        (nil)))

(insn 323 321 652 39 arch/arm/kernel/signal.c:594 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 213 [ regs ])
                (const_int 8 [0x8])) [0 <variable>.uregs+8 S4 A32])
        (reg/f:SI 302)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 302)
        (nil)))

(jump_insn 652 323 653 39 (set (pc)
        (label_ref 407)) -1 (nil))
;; End of basic block 39 -> ( 49)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 207 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 207 213
;; rd  out 	(107)
18, 59, 83, 103, 104, 121, 122, 320, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 1983, 1985, 1986, 1987, 1988, 1989, 1990, 1992, 1993, 1994, 1996, 1997, 1998, 1999, 2000, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2145, 2146, 2147, 2148, 2149, 2155, 2156, 2157


;; Succ edge  49 [100.0%] 

(barrier 653 652 326)

;; Start of basic block ( 26) -> 40
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u388(11){ }u389(13){ }u390(25){ }u391(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 206 207 213 409 410
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 409 410
;; lr  def 	 24 [cc] 177
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 206 207 213 409 410
;; live  gen 	 24 [cc] 177
;; live  kill	
;; rd  in  	(58)
27, 59, 83, 103, 104, 121, 122, 334, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2155, 2156, 2157
;; rd  gen 	(2)
287, 2001
;; rd  kill	(2)
2001, 2002

;; Pred edge  26 [50.0%] 
(code_label 326 653 327 40 37 "" [1 uses])

(note 327 326 627 40 [bb 40] NOTE_INSN_BASIC_BLOCK)

(insn 627 327 330 40 arch/arm/kernel/signal.c:442 (set (reg/v:SI 177 [ sp ])
        (reg:SI 409 [ sp ])) -1 (expr_list:REG_DEAD (reg:SI 409 [ sp ])
        (expr_list:REG_EQUAL (mem/s/j:SI (plus:SI (reg/v/f:SI 213 [ regs ])
                    (const_int 52 [0x34])) [0 <variable>.uregs+52 S4 A32])
            (nil))))

(insn 330 627 331 40 arch/arm/kernel/signal.c:448 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 410)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 410)
        (nil)))

(jump_insn 331 330 332 40 arch/arm/kernel/signal.c:448 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 362)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 40 -> ( 41 44)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 177 206 207 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 177 206 207 213
;; rd  out 	(59)
27, 59, 83, 103, 104, 121, 122, 287, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 2001, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2155, 2156, 2157


;; Succ edge  41 [50.0%]  (fallthru)
;; Succ edge  44 [50.0%] 

;; Start of basic block ( 40) -> 41
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u396(11){ }u397(13){ }u398(25){ }u399(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 177 206 207 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 307 308 309 310
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 177 206 207 213
;; live  gen 	 24 [cc] 307 308 309 310
;; live  kill	
;; rd  in  	(59)
27, 59, 83, 103, 104, 121, 122, 287, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 2001, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2155, 2156, 2157
;; rd  gen 	(5)
319, 2085, 2086, 2087, 2088
;; rd  kill	(4)
2085, 2086, 2087, 2088

;; Pred edge  40 [50.0%]  (fallthru)
(note 332 331 334 41 [bb 41] NOTE_INSN_BASIC_BLOCK)

(insn 334 332 335 41 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 308)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 335 334 336 41 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 307)
        (and:SI (reg:SI 308)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 308)
        (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
                (const_int -8192 [0xffffffffffffe000]))
            (nil))))

(insn 336 335 337 41 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 309 [ <variable>.task ])
        (mem/s/f/j:SI (plus:SI (reg:SI 307)
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 307)
        (nil)))

(insn 337 336 338 41 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 310 [ <variable>.sas_ss_size ])
        (mem/s/j:SI (plus:SI (reg/f:SI 309 [ <variable>.task ])
                (const_int 988 [0x3dc])) [0 <variable>.sas_ss_size+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 338 337 339 41 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 310 [ <variable>.sas_ss_size ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 339 338 340 41 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 362)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 41 -> ( 42 44)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 177 206 207 213 309 310
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 177 206 207 213 309 310
;; rd  out 	(63)
27, 59, 83, 103, 104, 121, 122, 319, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 2001, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2085, 2086, 2087, 2088, 2155, 2156, 2157


;; Succ edge  42 [50.0%]  (fallthru)
;; Succ edge  44 [50.0%] 

;; Start of basic block ( 41) -> 42
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u407(11){ }u408(13){ }u409(25){ }u410(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 177 206 207 213 309 310
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 177 309
;; lr  def 	 24 [cc] 314
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 177 206 207 213 309 310
;; live  gen 	 24 [cc] 314
;; live  kill	
;; rd  in  	(63)
27, 59, 83, 103, 104, 121, 122, 319, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 2001, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2085, 2086, 2087, 2088, 2155, 2156, 2157
;; rd  gen 	(2)
285, 2089
;; rd  kill	(1)
2089

;; Pred edge  41 [50.0%]  (fallthru)
(note 340 339 345 42 [bb 42] NOTE_INSN_BASIC_BLOCK)

(insn 345 340 346 42 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 314 [ <variable>.sas_ss_sp ])
        (mem/s/j:SI (plus:SI (reg/f:SI 309 [ <variable>.task ])
                (const_int 984 [0x3d8])) [0 <variable>.sas_ss_sp+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 309 [ <variable>.task ])
        (nil)))

(insn 346 345 347 42 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 177 [ sp ])
            (reg:SI 314 [ <variable>.sas_ss_sp ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 347 346 348 42 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 598)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 42 -> ( 43 71)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 177 206 207 213 310 314
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 177 206 207 213 310 314
;; rd  out 	(64)
27, 59, 83, 103, 104, 121, 122, 285, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 2001, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2085, 2086, 2087, 2088, 2089, 2155, 2156, 2157


;; Succ edge  43 [50.0%]  (fallthru)
;; Succ edge  71 [50.0%] 

;; Start of basic block ( 42) -> 43
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u415(11){ }u416(13){ }u417(25){ }u418(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 177 206 207 213 310 314
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 177 310 314
;; lr  def 	 24 [cc] 318
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 177 206 207 213 310 314
;; live  gen 	 24 [cc] 318
;; live  kill	
;; rd  in  	(64)
27, 59, 83, 103, 104, 121, 122, 285, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 2001, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2085, 2086, 2087, 2088, 2089, 2155, 2156, 2157
;; rd  gen 	(2)
290, 2090
;; rd  kill	(1)
2090

;; Pred edge  42 [50.0%]  (fallthru)
(note 348 347 355 43 [bb 43] NOTE_INSN_BASIC_BLOCK)

(insn 355 348 360 43 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 318)
        (minus:SI (reg/v:SI 177 [ sp ])
            (reg:SI 314 [ <variable>.sas_ss_sp ]))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg:SI 314 [ <variable>.sas_ss_sp ])
        (nil)))

(insn 360 355 361 43 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 318)
            (reg:SI 310 [ <variable>.sas_ss_size ]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 318)
        (expr_list:REG_DEAD (reg:SI 310 [ <variable>.sas_ss_size ])
            (nil))))

(jump_insn 361 360 362 43 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 598)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 43 -> ( 44 71)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 177 206 207 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 177 206 207 213
;; rd  out 	(65)
27, 59, 83, 103, 104, 121, 122, 290, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 2001, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2085, 2086, 2087, 2088, 2089, 2090, 2155, 2156, 2157


;; Succ edge  44 [50.0%]  (fallthru)
;; Succ edge  71 [50.0%] 

;; Start of basic block ( 40 43 41 71) -> 44
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u424(11){ }u425(13){ }u426(25){ }u427(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 177 206 207 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 177
;; lr  def 	 24 [cc] 178 179 180 324 325 326 327
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 177 206 207 213
;; live  gen 	 24 [cc] 178 179 180 324 325 326 327
;; live  kill	 24 [cc]
;; rd  in  	(74)
27, 59, 83, 103, 104, 121, 122, 285, 287, 290, 319, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 2001, 2002, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2085, 2086, 2087, 2088, 2089, 2090, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157
;; rd  gen 	(8)
317, 2003, 2004, 2005, 2091, 2092, 2093, 2094
;; rd  kill	(7)
2003, 2004, 2005, 2091, 2092, 2093, 2094

;; Pred edge  40 [50.0%] 
;; Pred edge  43 [50.0%]  (fallthru)
;; Pred edge  41 [50.0%] 
;; Pred edge  71 [100.0%] 
(code_label 362 361 363 44 46 "" [3 uses])

(note 363 362 364 44 [bb 44] NOTE_INSN_BASIC_BLOCK)

(insn 364 363 365 44 arch/arm/kernel/signal.c:454 (set (reg:SI 324)
        (plus:SI (reg/v:SI 177 [ sp ])
            (const_int -752 [0xfffffffffffffd10]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/v:SI 177 [ sp ])
        (nil)))

(insn 365 364 367 44 arch/arm/kernel/signal.c:454 (set (reg/v/f:SI 178 [ frame ])
        (and:SI (reg:SI 324)
            (const_int -8 [0xfffffffffffffff8]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 324)
        (nil)))

(insn 367 365 368 44 arch/arm/kernel/signal.c:459 (set (reg:SI 326)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 368 367 369 44 arch/arm/kernel/signal.c:459 (set (reg:SI 325)
        (and:SI (reg:SI 326)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 326)
        (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
                (const_int -8192 [0xffffffffffffe000]))
            (nil))))

(insn 369 368 370 44 arch/arm/kernel/signal.c:459 (set (reg:SI 327 [ <variable>.addr_limit ])
        (mem/s/j:SI (plus:SI (reg:SI 325)
                (const_int 8 [0x8])) [0 <variable>.addr_limit+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 325)
        (nil)))

(insn 370 369 371 44 arch/arm/kernel/signal.c:459 (parallel [
            (set (reg/v:SI 179 [ flag ])
                (asm_operands:SI ("adds %1, %2, %3; sbcccs %1, %1, %0; movcc %0, #0") ("=&r") 0 [
                        (reg/v/f:SI 178 [ frame ])
                        (const_int 752 [0x2f0])
                        (reg:SI 327 [ <variable>.addr_limit ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("Ir") 0)
                        (asm_input:SI ("0") 0)
                    ] 8647573))
            (set (reg/v:SI 180 [ roksum ])
                (asm_operands:SI ("adds %1, %2, %3; sbcccs %1, %1, %0; movcc %0, #0") ("=&r") 1 [
                        (reg/v/f:SI 178 [ frame ])
                        (const_int 752 [0x2f0])
                        (reg:SI 327 [ <variable>.addr_limit ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("Ir") 0)
                        (asm_input:SI ("0") 0)
                    ] 8647573))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg:SI 327 [ <variable>.addr_limit ])
        (expr_list:REG_UNUSED (reg/v:SI 180 [ roksum ])
            (expr_list:REG_UNUSED (reg:QI 24 cc)
                (nil)))))

(insn 371 370 372 44 arch/arm/kernel/signal.c:459 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 179 [ flag ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 372 371 375 44 arch/arm/kernel/signal.c:459 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 404)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 44 -> ( 48 45)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 178 179 206 207 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 178 179 206 207 213
;; rd  out 	(78)
27, 59, 83, 103, 104, 121, 122, 317, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 2001, 2002, 2003, 2004, 2005, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157


;; Succ edge  48 [50.0%] 
;; Succ edge  45 [50.0%]  (fallthru)

;; Start of basic block ( 44) -> 45
;; bb 45 artificial_defs: { }
;; bb 45 artificial_uses: { u438(11){ }u439(13){ }u440(25){ }u441(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 178 179 206 207 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 178
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 178 179 206 207 213
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(78)
27, 59, 83, 103, 104, 121, 122, 317, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 2001, 2002, 2003, 2004, 2005, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157
;; rd  gen 	(1)
289
;; rd  kill	(0)


;; Pred edge  44 [50.0%]  (fallthru)
(code_label 375 372 376 45 48 "" [0 uses])

(note 376 375 378 45 [bb 45] NOTE_INSN_BASIC_BLOCK)

(insn 378 376 379 45 arch/arm/kernel/signal.c:546 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 178 [ frame ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 379 378 380 45 arch/arm/kernel/signal.c:546 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 404)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3017 [0xbc9])
            (nil))))
;; End of basic block 45 -> ( 48 46)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 178 179 206 207 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 178 179 206 207 213
;; rd  out 	(78)
27, 59, 83, 103, 104, 121, 122, 289, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 2001, 2002, 2003, 2004, 2005, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157


;; Succ edge  48 [30.2%] 
;; Succ edge  46 [69.8%]  (fallthru)

;; Start of basic block ( 45) -> 46
;; bb 46 artificial_defs: { }
;; bb 46 artificial_uses: { u444(11){ }u445(13){ }u446(25){ }u447(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 178 179 206 207 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 178 179 206 213
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 148 188 190 328
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 178 179 206 207 213
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 148 188 190 328
;; live  kill	 14 [lr] 24 [cc]
;; rd  in  	(78)
27, 59, 83, 103, 104, 121, 122, 289, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 2001, 2002, 2003, 2004, 2005, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157
;; rd  gen 	(6)
17, 315, 1982, 2006, 2007, 2095
;; rd  kill	(56)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 1980, 1981, 1982, 1983, 1984, 2006, 2007, 2095

;; Pred edge  45 [69.8%]  (fallthru)
(note 380 379 381 46 [bb 46] NOTE_INSN_BASIC_BLOCK)

(insn 381 380 383 46 arch/arm/kernel/signal.c:552 discrim 4 (set (reg:SI 328)
        (const_int 1522778970 [0x5ac3c35a])) 167 {*arm_movsi_insn} (nil))

(insn 383 381 384 46 arch/arm/kernel/signal.c:552 discrim 4 (parallel [
            (set (reg/v:SI 188 [ err ])
                (asm_operands/v:SI ("1:	str	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg:SI 328)
                        (reg/v/f:SI 178 [ frame ])
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 179 [ flag ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691018))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg:SI 328)
        (expr_list:REG_DEAD (reg/v:SI 179 [ flag ])
            (expr_list:REG_UNUSED (reg:QI 24 cc)
                (nil)))))

(insn 384 383 385 46 arch/arm/kernel/signal.c:554 (set (reg:SI 0 r0)
        (reg/v/f:SI 178 [ frame ])) 167 {*arm_movsi_insn} (nil))

(insn 385 384 386 46 arch/arm/kernel/signal.c:554 (set (reg:SI 1 r1)
        (reg/v/f:SI 213 [ regs ])) 167 {*arm_movsi_insn} (nil))

(insn 386 385 387 46 arch/arm/kernel/signal.c:554 (set (reg:SI 2 r2)
        (reg/v/f:SI 206 [ oldset ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 206 [ oldset ])
        (nil)))

(call_insn 387 386 388 46 arch/arm/kernel/signal.c:554 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("setup_sigframe") [flags 0x3] <function_decl 0x1140a680 setup_sigframe>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 388 387 389 46 arch/arm/kernel/signal.c:554 (set (reg:SI 190 [ D.25873 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 389 388 390 46 arch/arm/kernel/signal.c:554 (set (reg/v:SI 148 [ ret ])
        (ior:SI (reg:SI 190 [ D.25873 ])
            (reg/v:SI 188 [ err ]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 190 [ D.25873 ])
        (expr_list:REG_DEAD (reg/v:SI 188 [ err ])
            (nil))))

(insn 390 389 391 46 arch/arm/kernel/signal.c:555 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 148 [ ret ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 391 390 392 46 arch/arm/kernel/signal.c:555 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 407)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 46 -> ( 47 49)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 148 178 207 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 148 178 207 213
;; rd  out 	(82)
17, 59, 83, 103, 104, 121, 122, 315, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 1982, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157


;; Succ edge  47 [29.0%]  (fallthru)
;; Succ edge  49 [71.0%] 

;; Start of basic block ( 46) -> 47
;; bb 47 artificial_defs: { }
;; bb 47 artificial_uses: { u463(11){ }u464(13){ }u465(25){ }u466(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 178 207 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 178 213
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 148 330 331
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 178 207 213
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 148 330 331
;; live  kill	 14 [lr]
;; rd  in  	(82)
17, 59, 83, 103, 104, 121, 122, 315, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 1982, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157
;; rd  gen 	(4)
15, 1981, 2096, 2097
;; rd  kill	(55)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 1980, 1981, 1982, 1983, 1984, 2096, 2097

;; Pred edge  46 [29.0%]  (fallthru)
(note 392 391 393 47 [bb 47] NOTE_INSN_BASIC_BLOCK)

(insn 393 392 394 47 arch/arm/kernel/signal.c:556 (set (reg/f:SI 330)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -32 [0xffffffffffffffe0]))) 4 {*arm_addsi3} (nil))

(insn 394 393 395 47 arch/arm/kernel/signal.c:556 (set (reg/f:SI 331)
        (plus:SI (reg/v/f:SI 178 [ frame ])
            (const_int 744 [0x2e8]))) 4 {*arm_addsi3} (nil))

(insn 395 394 396 47 arch/arm/kernel/signal.c:556 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg/v:SI 133 [ signr.423 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 133 [ signr.423 ])
        (nil)))

(insn 396 395 397 47 arch/arm/kernel/signal.c:556 (set (reg:SI 0 r0)
        (reg/v/f:SI 213 [ regs ])) 167 {*arm_movsi_insn} (nil))

(insn 397 396 398 47 arch/arm/kernel/signal.c:556 (set (reg:SI 1 r1)
        (reg/f:SI 330)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 330)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -32 [0xffffffffffffffe0]))
            (nil))))

(insn 398 397 399 47 arch/arm/kernel/signal.c:556 (set (reg:SI 2 r2)
        (reg/f:SI 331)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 331)
        (nil)))

(insn 399 398 400 47 arch/arm/kernel/signal.c:556 (set (reg:SI 3 r3)
        (reg/v/f:SI 178 [ frame ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 178 [ frame ])
        (nil)))

(call_insn 400 399 401 47 arch/arm/kernel/signal.c:556 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("setup_return") [flags 0x3] <function_decl 0x1140a880 setup_return>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 401 400 654 47 arch/arm/kernel/signal.c:556 (set (reg/v:SI 148 [ ret ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(jump_insn 654 401 655 47 (set (pc)
        (label_ref 407)) -1 (nil))
;; End of basic block 47 -> ( 49)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 207 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 207 213
;; rd  out 	(84)
15, 59, 83, 103, 104, 121, 122, 315, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 1981, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157


;; Succ edge  49 [100.0%] 

(barrier 655 654 404)

;; Start of basic block ( 31 45 44) -> 48
;; bb 48 artificial_defs: { }
;; bb 48 artificial_uses: { u482(11){ }u483(13){ }u484(25){ }u485(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 207 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 148
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 207 213
;; live  gen 	 148
;; live  kill	
;; rd  in  	(100)
27, 59, 83, 103, 104, 121, 122, 289, 317, 330, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 1988, 1989, 1990, 1992, 1993, 2001, 2002, 2003, 2004, 2005, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157
;; rd  gen 	(1)
1980
;; rd  kill	(5)
1980, 1981, 1982, 1983, 1984

;; Pred edge  31 [30.2%] 
;; Pred edge  45 [30.2%] 
;; Pred edge  44 [50.0%] 
(code_label 404 655 405 48 41 "" [3 uses])

(note 405 404 406 48 [bb 48] NOTE_INSN_BASIC_BLOCK)

(insn 406 405 407 48 arch/arm/kernel/signal.c:547 (set (reg/v:SI 148 [ ret ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 48 -> ( 49)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 207 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 207 213
;; rd  out 	(101)
27, 59, 83, 103, 104, 121, 122, 289, 317, 330, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 1980, 1988, 1989, 1990, 1992, 1993, 2001, 2002, 2003, 2004, 2005, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157


;; Succ edge  49 [100.0%]  (fallthru)

;; Start of basic block ( 48 37 38 39 46 47) -> 49
;; bb 49 artificial_defs: { }
;; bb 49 artificial_uses: { u486(11){ }u487(13){ }u488(25){ }u489(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 207 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 213
;; lr  def 	 24 [cc] 194 195 332
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 207 213
;; live  gen 	 24 [cc] 194 195 332
;; live  kill	
;; rd  in  	(145)
15, 17, 18, 20, 27, 59, 83, 103, 104, 121, 122, 289, 315, 317, 320, 322, 330, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1992, 1993, 1994, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157
;; rd  gen 	(4)
313, 2013, 2014, 2098
;; rd  kill	(3)
2013, 2014, 2098

;; Pred edge  48 [100.0%]  (fallthru)
;; Pred edge  37 [71.0%] 
;; Pred edge  38
;; Pred edge  39 [100.0%] 
;; Pred edge  46 [71.0%] 
;; Pred edge  47 [100.0%] 
(code_label 407 406 408 49 45 "" [5 uses])

(note 408 407 409 49 [bb 49] NOTE_INSN_BASIC_BLOCK)

(insn 409 408 410 49 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:168 (set (reg:SI 195 [ D.25861 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 213 [ regs ])
                (const_int 64 [0x40])) [0 <variable>.uregs+64 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 410 409 411 49 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:173 (set (reg:SI 194 [ D.25862 ])
        (and:SI (reg:SI 195 [ D.25861 ])
            (const_int -321 [0xfffffffffffffebf]))) 67 {*arm_andsi3_insn} (nil))

(insn 411 410 412 49 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:173 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 213 [ regs ])
                (const_int 64 [0x40])) [0 <variable>.uregs+64 S4 A32])
        (reg:SI 194 [ D.25862 ])) 167 {*arm_movsi_insn} (nil))

(insn 412 411 413 49 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:175 (set (reg:SI 332)
        (and:SI (reg:SI 195 [ D.25861 ])
            (const_int 128 [0x80]))) 67 {*arm_andsi3_insn} (nil))

(insn 413 412 414 49 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:175 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 332)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 332)
        (nil)))

(jump_insn 414 413 415 49 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:175 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 434)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 49 -> ( 50 52)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 194 195 207 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 194 195 207 213
;; rd  out 	(143)
15, 17, 18, 20, 27, 59, 83, 103, 104, 121, 122, 313, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1992, 1993, 1994, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2013, 2014, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157


;; Succ edge  50 [50.0%]  (fallthru)
;; Succ edge  52 [50.0%] 

;; Start of basic block ( 49) -> 50
;; bb 50 artificial_defs: { }
;; bb 50 artificial_uses: { u497(11){ }u498(13){ }u499(25){ }u500(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 194 195 207 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 195
;; lr  def 	 24 [cc] 192
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 194 195 207 213
;; live  gen 	 24 [cc] 192
;; live  kill	
;; rd  in  	(143)
15, 17, 18, 20, 27, 59, 83, 103, 104, 121, 122, 313, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1992, 1993, 1994, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2013, 2014, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157
;; rd  gen 	(2)
312, 2011
;; rd  kill	(1)
2011

;; Pred edge  49 [50.0%]  (fallthru)
(note 415 414 416 50 [bb 50] NOTE_INSN_BASIC_BLOCK)

(insn 416 415 417 50 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:168 (set (reg/v:SI 192 [ mode ])
        (and:SI (reg:SI 195 [ D.25861 ])
            (const_int 31 [0x1f]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 195 [ D.25861 ])
        (nil)))

(insn 417 416 418 50 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:176 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 192 [ mode ])
            (const_int 16 [0x10]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 418 417 419 50 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:176 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 454)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2800 [0xaf0])
            (nil))))
;; End of basic block 50 -> ( 55 51)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 192 194 207 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 192 194 207 213
;; rd  out 	(144)
15, 17, 18, 20, 27, 59, 83, 103, 104, 121, 122, 312, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1992, 1993, 1994, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2011, 2013, 2014, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157


;; Succ edge  55 [28.0%] 
;; Succ edge  51 [72.0%]  (fallthru)

;; Start of basic block ( 50) -> 51
;; bb 51 artificial_defs: { }
;; bb 51 artificial_uses: { u504(11){ }u505(13){ }u506(25){ }u507(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 192 194 207 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 192
;; lr  def 	 24 [cc] 334 335 336 337 339 341 342 343
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 192 194 207 213
;; live  gen 	 24 [cc] 334 335 336 337 339 341 342 343
;; live  kill	
;; rd  in  	(144)
15, 17, 18, 20, 27, 59, 83, 103, 104, 121, 122, 312, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1992, 1993, 1994, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2011, 2013, 2014, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157
;; rd  gen 	(9)
310, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106
;; rd  kill	(8)
2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106

;; Pred edge  50 [72.0%]  (fallthru)
(note 419 418 420 51 [bb 51] NOTE_INSN_BASIC_BLOCK)

(insn 420 419 421 51 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 192 [ mode ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 192 [ mode ])
        (nil)))

(insn 421 420 423 51 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg:SI 334)
        (eq:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 423 421 424 51 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg/f:SI 335)
        (symbol_ref:SI ("elf_hwcap") [flags 0xc0] <var_decl 0x512dc3c0 elf_hwcap>)) 167 {*arm_movsi_insn} (nil))

(insn 424 423 425 51 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg:SI 337 [ elf_hwcap ])
        (mem/c/i:SI (reg/f:SI 335) [0 elf_hwcap+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 335)
        (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("elf_hwcap") [flags 0xc0] <var_decl 0x512dc3c0 elf_hwcap>) [0 elf_hwcap+0 S4 A32])
            (nil))))

(insn 425 424 427 51 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg:SI 336)
        (lshiftrt:SI (reg:SI 337 [ elf_hwcap ])
            (const_int 3 [0x3]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 337 [ elf_hwcap ])
        (nil)))

(insn 427 425 429 51 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg:SI 339)
        (and:SI (reg:SI 336)
            (const_int 1 [0x1]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 336)
        (nil)))

(insn 429 427 430 51 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg:SI 341)
        (and:SI (reg:SI 334)
            (reg:SI 339))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 339)
        (expr_list:REG_DEAD (reg:SI 334)
            (nil))))

(insn 430 429 431 51 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg:QI 342)
        (subreg:QI (reg:SI 341) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 341)
        (nil)))

(insn 431 430 432 51 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg:SI 343)
        (zero_extend:SI (reg:QI 342))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 342)
        (nil)))

(insn 432 431 433 51 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 343)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 343)
        (nil)))

(jump_insn 433 432 434 51 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 454)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 51 -> ( 55 52)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 194 207 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 194 207 213
;; rd  out 	(152)
15, 17, 18, 20, 27, 59, 83, 103, 104, 121, 122, 310, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1992, 1993, 1994, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2011, 2013, 2014, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157


;; Succ edge  55 [50.0%] 
;; Succ edge  52 [50.0%]  (fallthru)

;; Start of basic block ( 49 51) -> 52
;; bb 52 artificial_defs: { }
;; bb 52 artificial_uses: { u519(11){ }u520(13){ }u521(25){ }u522(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 194 207 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 194 213
;; lr  def 	 24 [cc] 193 344 345 346
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 194 207 213
;; live  gen 	 24 [cc] 193 344 345 346
;; live  kill	
;; rd  in  	(153)
15, 17, 18, 20, 27, 59, 83, 103, 104, 121, 122, 310, 313, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1992, 1993, 1994, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2011, 2013, 2014, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157
;; rd  gen 	(5)
309, 2012, 2107, 2108, 2109
;; rd  kill	(4)
2012, 2107, 2108, 2109

;; Pred edge  49 [50.0%] 
;; Pred edge  51 [50.0%]  (fallthru)
(code_label 434 433 435 52 49 "" [1 uses])

(note 435 434 436 52 [bb 52] NOTE_INSN_BASIC_BLOCK)

(insn 436 435 437 52 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:185 (set (reg:SI 193 [ D.25869 ])
        (and:SI (reg:SI 194 [ D.25862 ])
            (const_int -208 [0xffffffffffffff30]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 194 [ D.25862 ])
        (nil)))

(insn 437 436 438 52 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:185 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 213 [ regs ])
                (const_int 64 [0x40])) [0 <variable>.uregs+64 S4 A32])
        (reg:SI 193 [ D.25869 ])) 167 {*arm_movsi_insn} (nil))

(insn 438 437 439 52 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:186 (set (reg/f:SI 344)
        (symbol_ref:SI ("elf_hwcap") [flags 0xc0] <var_decl 0x512dc3c0 elf_hwcap>)) 167 {*arm_movsi_insn} (nil))

(insn 439 438 440 52 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:186 (set (reg:SI 346 [ elf_hwcap ])
        (mem/c/i:SI (reg/f:SI 344) [0 elf_hwcap+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 344)
        (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("elf_hwcap") [flags 0xc0] <var_decl 0x512dc3c0 elf_hwcap>) [0 elf_hwcap+0 S4 A32])
            (nil))))

(insn 440 439 441 52 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:186 (set (reg:SI 345)
        (and:SI (reg:SI 346 [ elf_hwcap ])
            (const_int 8 [0x8]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 346 [ elf_hwcap ])
        (nil)))

(insn 441 440 442 52 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:186 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 345)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 442 441 443 52 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:186 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 447)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 52 -> ( 54 53)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 193 207 213 345
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 193 207 213 345
;; rd  out 	(156)
15, 17, 18, 20, 27, 59, 83, 103, 104, 121, 122, 309, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1992, 1993, 1994, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2011, 2012, 2013, 2014, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157


;; Succ edge  54 [50.0%] 
;; Succ edge  53 [50.0%]  (fallthru)

;; Start of basic block ( 52) -> 53
;; bb 53 artificial_defs: { }
;; bb 53 artificial_uses: { u530(11){ }u531(13){ }u532(25){ }u533(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 207
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 191
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 207
;; live  gen 	 191
;; live  kill	
;; rd  in  	(156)
15, 17, 18, 20, 27, 59, 83, 103, 104, 121, 122, 309, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1992, 1993, 1994, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2011, 2012, 2013, 2014, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157
;; rd  gen 	(1)
2010
;; rd  kill	(3)
2008, 2009, 2010

;; Pred edge  52 [50.0%]  (fallthru)
(note 443 442 444 53 [bb 53] NOTE_INSN_BASIC_BLOCK)

(insn 444 443 656 53 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:189 (set (reg:SI 191 [ D.25871 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(jump_insn 656 444 657 53 (set (pc)
        (label_ref 457)) -1 (nil))
;; End of basic block 53 -> ( 56)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 191 207
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 191 207
;; rd  out 	(157)
15, 17, 18, 20, 27, 59, 83, 103, 104, 121, 122, 309, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1992, 1993, 1994, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2010, 2011, 2012, 2013, 2014, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157


;; Succ edge  56 [100.0%] 

(barrier 657 656 447)

;; Start of basic block ( 52) -> 54
;; bb 54 artificial_defs: { }
;; bb 54 artificial_uses: { u534(11){ }u535(13){ }u536(25){ }u537(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 193 207 213 345
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 193 213 345
;; lr  def 	 191 347
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 193 207 213 345
;; live  gen 	 191 347
;; live  kill	
;; rd  in  	(156)
15, 17, 18, 20, 27, 59, 83, 103, 104, 121, 122, 309, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1992, 1993, 1994, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2011, 2012, 2013, 2014, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157
;; rd  gen 	(2)
2008, 2110
;; rd  kill	(4)
2008, 2009, 2010, 2110

;; Pred edge  52 [50.0%] 
(code_label 447 657 448 54 51 "" [1 uses])

(note 448 447 449 54 [bb 54] NOTE_INSN_BASIC_BLOCK)

(insn 449 448 450 54 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:187 (set (reg:SI 347)
        (ior:SI (reg:SI 193 [ D.25869 ])
            (const_int 16 [0x10]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 193 [ D.25869 ])
        (nil)))

(insn 450 449 451 54 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:187 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 213 [ regs ])
                (const_int 64 [0x40])) [0 <variable>.uregs+64 S4 A32])
        (reg:SI 347)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 347)
        (expr_list:REG_DEAD (reg/v/f:SI 213 [ regs ])
            (nil))))

(insn 451 450 658 54 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:189 (set (reg:SI 191 [ D.25871 ])
        (reg:SI 345)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 345)
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(jump_insn 658 451 659 54 (set (pc)
        (label_ref 457)) -1 (nil))
;; End of basic block 54 -> ( 56)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 191 207
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 191 207
;; rd  out 	(158)
15, 17, 18, 20, 27, 59, 83, 103, 104, 121, 122, 309, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1992, 1993, 1994, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2011, 2012, 2013, 2014, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157


;; Succ edge  56 [100.0%] 

(barrier 659 658 454)

;; Start of basic block ( 50 51) -> 55
;; bb 55 artificial_defs: { }
;; bb 55 artificial_uses: { u542(11){ }u543(13){ }u544(25){ }u545(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 207
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 191
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 207
;; live  gen 	 191
;; live  kill	
;; rd  in  	(153)
15, 17, 18, 20, 27, 59, 83, 103, 104, 121, 122, 310, 312, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1992, 1993, 1994, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2011, 2013, 2014, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157
;; rd  gen 	(1)
2009
;; rd  kill	(3)
2008, 2009, 2010

;; Pred edge  50 [28.0%] 
;; Pred edge  51 [50.0%] 
(code_label 454 659 455 55 50 "" [2 uses])

(note 455 454 456 55 [bb 55] NOTE_INSN_BASIC_BLOCK)

(insn 456 455 457 55 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:177 (set (reg:SI 191 [ D.25871 ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 55 -> ( 56)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 191 207
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 191 207
;; rd  out 	(154)
15, 17, 18, 20, 27, 59, 83, 103, 104, 121, 122, 310, 312, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1992, 1993, 1994, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2009, 2011, 2013, 2014, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157


;; Succ edge  56 [100.0%]  (fallthru)

;; Start of basic block ( 55 53 54) -> 56
;; bb 56 artificial_defs: { }
;; bb 56 artificial_uses: { u546(11){ }u547(13){ }u548(25){ }u549(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 191 207
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 191
;; lr  def 	 24 [cc] 348 349
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 191 207
;; live  gen 	 24 [cc] 348 349
;; live  kill	
;; rd  in  	(162)
15, 17, 18, 20, 27, 59, 83, 103, 104, 121, 122, 309, 310, 312, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1992, 1993, 1994, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157
;; rd  gen 	(3)
308, 2111, 2112
;; rd  kill	(2)
2111, 2112

;; Pred edge  55 [100.0%]  (fallthru)
;; Pred edge  53 [100.0%] 
;; Pred edge  54 [100.0%] 
(code_label 457 456 458 56 52 "" [2 uses])

(note 458 457 459 56 [bb 56] NOTE_INSN_BASIC_BLOCK)

(insn 459 458 460 56 arch/arm/kernel/signal.c:630 (set (reg:SI 348)
        (xor:SI (reg:SI 191 [ D.25871 ])
            (const_int 1 [0x1]))) 96 {*arm_xorsi3} (expr_list:REG_DEAD (reg:SI 191 [ D.25871 ])
        (nil)))

(insn 460 459 461 56 arch/arm/kernel/signal.c:630 (set (reg:SI 349)
        (ior:SI (reg:SI 348)
            (reg/v:SI 148 [ ret ]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 348)
        (expr_list:REG_DEAD (reg/v:SI 148 [ ret ])
            (nil))))

(insn 461 460 462 56 arch/arm/kernel/signal.c:630 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 349)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 349)
        (nil)))

(jump_insn 462 461 463 56 arch/arm/kernel/signal.c:630 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 469)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 56 -> ( 57 58)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 207
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 207
;; rd  out 	(162)
15, 17, 18, 20, 27, 59, 83, 103, 104, 121, 122, 308, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1992, 1993, 1994, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157


;; Succ edge  57 [50.0%]  (fallthru)
;; Succ edge  58 [50.0%] 

;; Start of basic block ( 56) -> 57
;; bb 57 artificial_defs: { }
;; bb 57 artificial_uses: { u555(11){ }u556(13){ }u557(25){ }u558(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 207
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 207
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 207
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]
;; rd  in  	(162)
15, 17, 18, 20, 27, 59, 83, 103, 104, 121, 122, 308, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1992, 1993, 1994, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157
;; rd  gen 	(1)
13
;; rd  kill	(48)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139

;; Pred edge  56 [50.0%]  (fallthru)
(note 463 462 464 57 [bb 57] NOTE_INSN_BASIC_BLOCK)

(insn 464 463 465 57 arch/arm/kernel/signal.c:633 (set (reg:SI 0 r0)
        (reg/v:SI 207 [ signr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 207 [ signr ])
        (nil)))

(insn 465 464 466 57 arch/arm/kernel/signal.c:633 (set (reg:SI 1 r1)
        (reg/v/f:SI 147 [ tsk ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 147 [ tsk ])
        (nil)))

(call_insn 466 465 660 57 arch/arm/kernel/signal.c:633 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("force_sigsegv") [flags 0x41] <function_decl 0x10f06780 force_sigsegv>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(jump_insn 660 466 661 57 (set (pc)
        (label_ref 616)) -1 (nil))
;; End of basic block 57 -> ( 72)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(158)
13, 59, 83, 103, 104, 121, 122, 308, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1992, 1993, 1994, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157


;; Succ edge  72 [100.0%] 

(barrier 661 660 469)

;; Start of basic block ( 56) -> 58
;; bb 58 artificial_defs: { }
;; bb 58 artificial_uses: { u564(11){ }u565(13){ }u566(25){ }u567(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 207
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 350 351 352 353 354 355 356 357 358 359 360
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 207
;; live  gen 	 0 [r0] 24 [cc] 350 351 352 353 354 355 356 357 358 359 360
;; live  kill	 14 [lr]
;; rd  in  	(162)
15, 17, 18, 20, 27, 59, 83, 103, 104, 121, 122, 308, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1992, 1993, 1994, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157
;; rd  gen 	(12)
305, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123
;; rd  kill	(28)
123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123

;; Pred edge  56 [50.0%] 
(code_label 469 661 470 58 53 "" [1 uses])

(note 470 469 471 58 [bb 58] NOTE_INSN_BASIC_BLOCK)

(insn 471 470 472 58 include/linux/spinlock.h:310 (set (reg/f:SI 351 [ <variable>.sighand ])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 147 [ tsk ])
                (const_int 940 [0x3ac])) [0 <variable>.sighand+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 472 471 473 58 include/linux/spinlock.h:310 (set (reg/f:SI 352)
        (plus:SI (reg/f:SI 351 [ <variable>.sighand ])
            (const_int 1280 [0x500]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 351 [ <variable>.sighand ])
        (nil)))

(insn 473 472 474 58 include/linux/spinlock.h:310 (set (reg/f:SI 350)
        (plus:SI (reg/f:SI 352)
            (const_int 4 [0x4]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 352)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 351 [ <variable>.sighand ])
                (const_int 1284 [0x504]))
            (nil))))

(insn 474 473 475 58 include/linux/spinlock.h:310 (set (reg:SI 0 r0)
        (reg/f:SI 350)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 350)
        (nil)))

(call_insn 475 474 476 58 include/linux/spinlock.h:310 (parallel [
            (call (mem:SI (symbol_ref:SI ("_raw_spin_lock_irq") [flags 0x41] <function_decl 0x10b48280 _raw_spin_lock_irq>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 476 475 477 58 include/linux/signal.h:123 discrim 3 (set (reg:SI 353 [ <variable>.blocked.sig+4 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 147 [ tsk ])
                (const_int 948 [0x3b4])) [0 <variable>.blocked.sig+4 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 477 476 478 58 include/linux/signal.h:123 discrim 3 (set (reg:SI 354 [ ka.sa.sa_mask.sig+4 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -16 [0xfffffffffffffff0])) [0 ka.sa.sa_mask.sig+4 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 478 477 479 58 include/linux/signal.h:123 discrim 3 (set (reg:SI 355)
        (ior:SI (reg:SI 353 [ <variable>.blocked.sig+4 ])
            (reg:SI 354 [ ka.sa.sa_mask.sig+4 ]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 354 [ ka.sa.sa_mask.sig+4 ])
        (expr_list:REG_DEAD (reg:SI 353 [ <variable>.blocked.sig+4 ])
            (nil))))

(insn 479 478 480 58 include/linux/signal.h:123 discrim 3 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 147 [ tsk ])
                (const_int 948 [0x3b4])) [0 <variable>.blocked.sig+4 S4 A32])
        (reg:SI 355)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 355)
        (nil)))

(insn 480 479 481 58 include/linux/signal.h:123 discrim 2 (set (reg:SI 356 [ <variable>.blocked.sig ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 147 [ tsk ])
                (const_int 944 [0x3b0])) [0 <variable>.blocked.sig+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 481 480 482 58 include/linux/signal.h:123 discrim 2 (set (reg:SI 357 [ ka.sa.sa_mask.sig ])
        (mem/s/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -20 [0xffffffffffffffec])) [0 ka.sa.sa_mask.sig+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 482 481 483 58 include/linux/signal.h:123 discrim 2 (set (reg:SI 358)
        (ior:SI (reg:SI 356 [ <variable>.blocked.sig ])
            (reg:SI 357 [ ka.sa.sa_mask.sig ]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 357 [ ka.sa.sa_mask.sig ])
        (expr_list:REG_DEAD (reg:SI 356 [ <variable>.blocked.sig ])
            (nil))))

(insn 483 482 484 58 include/linux/signal.h:123 discrim 2 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 147 [ tsk ])
                (const_int 944 [0x3b0])) [0 <variable>.blocked.sig+0 S4 A64])
        (reg:SI 358)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 358)
        (nil)))

(insn 484 483 485 58 arch/arm/kernel/signal.c:643 (set (reg:SI 360 [ ka.sa.sa_flags ])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -28 [0xffffffffffffffe4])) [0 ka.sa.sa_flags+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 485 484 486 58 arch/arm/kernel/signal.c:643 (set (reg:SI 359)
        (and:SI (reg:SI 360 [ ka.sa.sa_flags ])
            (const_int 1073741824 [0x40000000]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 360 [ ka.sa.sa_flags ])
        (nil)))

(insn 486 485 487 58 arch/arm/kernel/signal.c:643 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 359)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 359)
        (nil)))

(jump_insn 487 486 488 58 arch/arm/kernel/signal.c:643 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 499)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 58 -> ( 59 60)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 207
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 207
;; rd  out 	(173)
15, 17, 18, 20, 27, 59, 83, 103, 104, 121, 122, 305, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1992, 1993, 1994, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157


;; Succ edge  59 [50.0%]  (fallthru)
;; Succ edge  60 [50.0%] 

;; Start of basic block ( 58) -> 59
;; bb 59 artificial_defs: { }
;; bb 59 artificial_uses: { u591(11){ }u592(13){ }u593(25){ }u594(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 207
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 207
;; lr  def 	 196 197 361 363 364 365 366 367
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 207
;; live  gen 	 196 197 361 363 364 365 366 367
;; live  kill	
;; rd  in  	(173)
15, 17, 18, 20, 27, 59, 83, 103, 104, 121, 122, 305, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1992, 1993, 1994, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157
;; rd  gen 	(8)
2015, 2016, 2124, 2125, 2126, 2127, 2128, 2129
;; rd  kill	(8)
2015, 2016, 2124, 2125, 2126, 2127, 2128, 2129

;; Pred edge  58 [50.0%]  (fallthru)
(note 488 487 489 59 [bb 59] NOTE_INSN_BASIC_BLOCK)

(insn 489 488 490 59 include/linux/signal.h:44 (set (reg:SI 197 [ D.25851 ])
        (plus:SI (reg/v:SI 207 [ signr ])
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/v:SI 207 [ signr ])
        (nil)))

(insn 490 489 491 59 include/linux/signal.h:48 (set (reg:SI 196 [ D.25853 ])
        (lshiftrt:SI (reg:SI 197 [ D.25851 ])
            (const_int 5 [0x5]))) 117 {*arm_shiftsi3} (nil))

(insn 491 490 493 59 include/linux/signal.h:48 (set (reg:SI 361)
        (plus:SI (reg:SI 196 [ D.25853 ])
            (const_int 236 [0xec]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 196 [ D.25853 ])
        (nil)))

(insn 493 491 494 59 include/linux/signal.h:48 (set (reg:SI 363)
        (and:SI (reg:SI 197 [ D.25851 ])
            (const_int 31 [0x1f]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 197 [ D.25851 ])
        (nil)))

(insn 494 493 495 59 include/linux/signal.h:48 (set (reg:SI 365)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 495 494 496 59 include/linux/signal.h:48 (set (reg:SI 364)
        (ashift:SI (reg:SI 365)
            (reg:SI 363))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 365)
        (expr_list:REG_DEAD (reg:SI 363)
            (expr_list:REG_EQUAL (ashift:SI (const_int 1 [0x1])
                    (reg:SI 363))
                (nil)))))

(insn 496 495 497 59 include/linux/signal.h:48 (set (reg:SI 366)
        (mem/s/j:SI (plus:SI (mult:SI (reg:SI 361)
                    (const_int 4 [0x4]))
                (reg/v/f:SI 147 [ tsk ])) [0 <variable>.blocked.sig S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 497 496 498 59 include/linux/signal.h:48 (set (reg:SI 367)
        (ior:SI (reg:SI 366)
            (reg:SI 364))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 366)
        (expr_list:REG_DEAD (reg:SI 364)
            (nil))))

(insn 498 497 499 59 include/linux/signal.h:48 (set (mem/s/j:SI (plus:SI (mult:SI (reg:SI 361)
                    (const_int 4 [0x4]))
                (reg/v/f:SI 147 [ tsk ])) [0 <variable>.blocked.sig S4 A32])
        (reg:SI 367)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 367)
        (expr_list:REG_DEAD (reg:SI 361)
            (nil))))
;; End of basic block 59 -> ( 60)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; rd  out 	(181)
15, 17, 18, 20, 27, 59, 83, 103, 104, 121, 122, 305, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1992, 1993, 1994, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157


;; Succ edge  60 [100.0%]  (fallthru)

;; Start of basic block ( 58 59) -> 60
;; bb 60 artificial_defs: { }
;; bb 60 artificial_uses: { u609(11){ }u610(13){ }u611(25){ }u612(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 140 141 368 369 370 371 372
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; live  gen 	 0 [r0] 24 [cc] 140 141 368 369 370 371 372
;; live  kill	 14 [lr]
;; rd  in  	(181)
15, 17, 18, 20, 27, 59, 83, 103, 104, 121, 122, 305, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1992, 1993, 1994, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157
;; rd  gen 	(8)
302, 1974, 1975, 2130, 2131, 2132, 2133, 2134
;; rd  kill	(24)
123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 1974, 1975, 2130, 2131, 2132, 2133, 2134

;; Pred edge  58 [50.0%] 
;; Pred edge  59 [100.0%]  (fallthru)
(code_label 499 498 500 60 54 "" [1 uses])

(note 500 499 501 60 [bb 60] NOTE_INSN_BASIC_BLOCK)

(call_insn 501 500 502 60 arch/arm/kernel/signal.c:645 (parallel [
            (call (mem:SI (symbol_ref:SI ("recalc_sigpending") [flags 0x41] <function_decl 0x10f2c680 recalc_sigpending>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(insn 502 501 503 60 include/linux/spinlock.h:335 (set (reg/f:SI 369 [ <variable>.sighand ])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 147 [ tsk ])
                (const_int 940 [0x3ac])) [0 <variable>.sighand+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 147 [ tsk ])
        (nil)))

(insn 503 502 504 60 include/linux/spinlock.h:335 (set (reg/f:SI 370)
        (plus:SI (reg/f:SI 369 [ <variable>.sighand ])
            (const_int 1280 [0x500]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 369 [ <variable>.sighand ])
        (nil)))

(insn 504 503 505 60 include/linux/spinlock.h:335 (set (reg/f:SI 368)
        (plus:SI (reg/f:SI 370)
            (const_int 4 [0x4]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 370)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 369 [ <variable>.sighand ])
                (const_int 1284 [0x504]))
            (nil))))

(insn 505 504 506 60 include/linux/spinlock.h:335 (set (reg:SI 0 r0)
        (reg/f:SI 368)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 368)
        (nil)))

(call_insn 506 505 508 60 include/linux/spinlock.h:335 (parallel [
            (call (mem:SI (symbol_ref:SI ("_raw_spin_unlock_irq") [flags 0x41] <function_decl 0x10b48600 _raw_spin_unlock_irq>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 508 506 509 60 include/linux/thread_info.h:84 (set (reg:SI 371)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 509 508 510 60 include/linux/thread_info.h:84 (set (reg/f:SI 140 [ D.26039 ])
        (and:SI (reg:SI 371)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 371)
        (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
                (const_int -8192 [0xffffffffffffe000]))
            (nil))))

(insn 510 509 511 60 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 141 [ D.26034 ])
        (mem/v:SI (reg/f:SI 140 [ D.26039 ]) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 511 510 512 60 arch/arm/kernel/signal.c:737 (set (reg:SI 372)
        (and:SI (reg:SI 141 [ D.26034 ])
            (const_int 1048576 [0x100000]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 141 [ D.26034 ])
        (nil)))

(insn 512 511 513 60 arch/arm/kernel/signal.c:737 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 372)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 372)
        (nil)))

(jump_insn 513 512 514 60 arch/arm/kernel/signal.c:737 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 616)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 60 -> ( 61 72)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; rd  out 	(188)
15, 17, 18, 20, 27, 59, 83, 103, 104, 121, 122, 302, 352, 353, 1970, 1971, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1992, 1993, 1994, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157


;; Succ edge  61 [29.0%]  (fallthru)
;; Succ edge  72 [71.0%] 

;; Start of basic block ( 60) -> 61
;; bb 61 artificial_defs: { }
;; bb 61 artificial_uses: { u628(11){ }u629(13){ }u630(25){ }u631(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]
;; rd  in  	(188)
15, 17, 18, 20, 27, 59, 83, 103, 104, 121, 122, 302, 352, 353, 1970, 1971, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1992, 1993, 1994, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157
;; rd  gen 	(0)

;; rd  kill	(17)
123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139

;; Pred edge  60 [29.0%]  (fallthru)
(note 514 513 518 61 [bb 61] NOTE_INSN_BASIC_BLOCK)

(insn 518 514 519 61 include/linux/thread_info.h:69 (set (reg:SI 0 r0)
        (const_int 20 [0x14])) 167 {*arm_movsi_insn} (nil))

(insn 519 518 520 61 include/linux/thread_info.h:69 (set (reg:SI 1 r1)
        (reg/f:SI 140 [ D.26039 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 140 [ D.26039 ])
        (nil)))

(call_insn 520 519 662 61 include/linux/thread_info.h:69 (parallel [
            (call (mem:SI (symbol_ref:SI ("_clear_bit") [flags 0x41] <function_decl 0x109cef00 _clear_bit>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(jump_insn 662 520 663 61 (set (pc)
        (label_ref 616)) -1 (nil))
;; End of basic block 61 -> ( 72)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(188)
15, 17, 18, 20, 27, 59, 83, 103, 104, 121, 122, 302, 352, 353, 1970, 1971, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1992, 1993, 1994, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157


;; Succ edge  72 [100.0%] 

(barrier 663 662 523)

;; Start of basic block ( 12 11) -> 62
;; bb 62 artificial_defs: { }
;; bb 62 artificial_uses: { u636(11){ }u637(13){ }u638(25){ }u639(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 209 210 213 214
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 214
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 209 210 213 214
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(37)
27, 30, 59, 83, 103, 104, 121, 122, 343, 346, 352, 353, 2019, 2020, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045
;; rd  gen 	(1)
300
;; rd  kill	(0)


;; Pred edge  12 [27.0%] 
;; Pred edge  11 [100.0%] 
(code_label 523 663 524 62 30 ("no_signal") [2 uses])

(note 524 523 525 62 [bb 62] NOTE_INSN_BASIC_BLOCK)

(insn 525 524 526 62 arch/arm/kernel/signal.c:744 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 214 [ syscall ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 214 [ syscall ])
        (nil)))

(jump_insn 526 525 527 62 arch/arm/kernel/signal.c:744 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 616)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 62 -> ( 63 72)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 209 210 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 209 210 213
;; rd  out 	(36)
27, 30, 59, 83, 103, 104, 121, 122, 300, 352, 353, 2019, 2020, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045


;; Succ edge  63 [61.0%]  (fallthru)
;; Succ edge  72 [39.0%] 

;; Start of basic block ( 62) -> 63
;; bb 63 artificial_defs: { }
;; bb 63 artificial_uses: { u642(11){ }u643(13){ }u644(25){ }u645(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 209 210 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 210
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 209 210 213
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(36)
27, 30, 59, 83, 103, 104, 121, 122, 300, 352, 353, 2019, 2020, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045
;; rd  gen 	(1)
299
;; rd  kill	(0)


;; Pred edge  62 [61.0%]  (fallthru)
(note 527 526 528 63 [bb 63] NOTE_INSN_BASIC_BLOCK)

(insn 528 527 529 63 arch/arm/kernel/signal.c:750 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 210 [ retval ])
            (const_int -516 [0xfffffffffffffdfc]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 210 [ retval ])
        (nil)))

(jump_insn 529 528 530 63 arch/arm/kernel/signal.c:750 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 554)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 63 -> ( 64 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 209 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 209 213
;; rd  out 	(36)
27, 30, 59, 83, 103, 104, 121, 122, 299, 352, 353, 2019, 2020, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045


;; Succ edge  64 [28.0%]  (fallthru)
;; Succ edge  68 [72.0%] 

;; Start of basic block ( 63) -> 64
;; bb 64 artificial_defs: { }
;; bb 64 artificial_uses: { u648(11){ }u649(13){ }u650(25){ }u651(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 209 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 209 213
;; lr  def 	 24 [cc] 375
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 209 213
;; live  gen 	 24 [cc] 375
;; live  kill	
;; rd  in  	(36)
27, 30, 59, 83, 103, 104, 121, 122, 299, 352, 353, 2019, 2020, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045
;; rd  gen 	(2)
298, 2135
;; rd  kill	(1)
2135

;; Pred edge  63 [28.0%]  (fallthru)
(note 530 529 531 64 [bb 64] NOTE_INSN_BASIC_BLOCK)

(insn 531 530 532 64 arch/arm/kernel/signal.c:751 (set (reg:SI 375 [ <variable>.uregs+60 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 213 [ regs ])
                (const_int 60 [0x3c])) [0 <variable>.uregs+60 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 532 531 533 64 arch/arm/kernel/signal.c:751 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 375 [ <variable>.uregs+60 ])
            (reg/v:SI 209 [ continue_addr ]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 375 [ <variable>.uregs+60 ])
        (nil)))

(jump_insn 533 532 534 64 arch/arm/kernel/signal.c:751 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 554)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 64 -> ( 65 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 209 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 209 213
;; rd  out 	(37)
27, 30, 59, 83, 103, 104, 121, 122, 298, 352, 353, 2019, 2020, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2135


;; Succ edge  65 [28.0%]  (fallthru)
;; Succ edge  68 [72.0%] 

;; Start of basic block ( 64) -> 65
;; bb 65 artificial_defs: { }
;; bb 65 artificial_uses: { u656(11){ }u657(13){ }u658(25){ }u659(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 209 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 213
;; lr  def 	 24 [cc] 376 377
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 209 213
;; live  gen 	 24 [cc] 376 377
;; live  kill	
;; rd  in  	(37)
27, 30, 59, 83, 103, 104, 121, 122, 298, 352, 353, 2019, 2020, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2135
;; rd  gen 	(3)
297, 2136, 2137
;; rd  kill	(2)
2136, 2137

;; Pred edge  64 [28.0%]  (fallthru)
(note 534 533 535 65 [bb 65] NOTE_INSN_BASIC_BLOCK)

(insn 535 534 536 65 arch/arm/kernel/signal.c:752 (set (reg:SI 377 [ <variable>.uregs+64 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 213 [ regs ])
                (const_int 64 [0x40])) [0 <variable>.uregs+64 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 536 535 537 65 arch/arm/kernel/signal.c:752 (set (reg:SI 376)
        (and:SI (reg:SI 377 [ <variable>.uregs+64 ])
            (const_int 32 [0x20]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 377 [ <variable>.uregs+64 ])
        (nil)))

(insn 537 536 538 65 arch/arm/kernel/signal.c:752 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 376)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 538 537 539 65 arch/arm/kernel/signal.c:752 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 547)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 65 -> ( 66 67)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 209 213 376
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 209 213 376
;; rd  out 	(39)
27, 30, 59, 83, 103, 104, 121, 122, 297, 352, 353, 2019, 2020, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2135, 2136, 2137


;; Succ edge  66 [50.0%]  (fallthru)
;; Succ edge  67 [50.0%] 

;; Start of basic block ( 65) -> 66
;; bb 66 artificial_defs: { }
;; bb 66 artificial_uses: { u664(11){ }u665(13){ }u666(25){ }u667(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 209 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 209 213
;; lr  def 	 378 380
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 209 213
;; live  gen 	 378 380
;; live  kill	
;; rd  in  	(39)
27, 30, 59, 83, 103, 104, 121, 122, 297, 352, 353, 2019, 2020, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2135, 2136, 2137
;; rd  gen 	(2)
2138, 2139
;; rd  kill	(2)
2138, 2139

;; Pred edge  65 [50.0%]  (fallthru)
(note 539 538 540 66 [bb 66] NOTE_INSN_BASIC_BLOCK)

(insn 540 539 541 66 arch/arm/kernel/signal.c:753 (set (reg:SI 378)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 541 540 543 66 arch/arm/kernel/signal.c:753 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 213 [ regs ])
                (const_int 28 [0x1c])) [0 <variable>.uregs+28 S4 A32])
        (reg:SI 378)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 378)
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn 543 541 544 66 arch/arm/kernel/signal.c:754 (set (reg:SI 380)
        (plus:SI (reg/v:SI 209 [ continue_addr ])
            (const_int -2 [0xfffffffffffffffe]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/v:SI 209 [ continue_addr ])
        (nil)))

(insn 544 543 664 66 arch/arm/kernel/signal.c:754 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 213 [ regs ])
                (const_int 60 [0x3c])) [0 <variable>.uregs+60 S4 A32])
        (reg:SI 380)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 380)
        (expr_list:REG_DEAD (reg/v/f:SI 213 [ regs ])
            (nil))))

(jump_insn 664 544 665 66 (set (pc)
        (label_ref 554)) -1 (nil))
;; End of basic block 66 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(41)
27, 30, 59, 83, 103, 104, 121, 122, 297, 352, 353, 2019, 2020, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2135, 2136, 2137, 2138, 2139


;; Succ edge  68 [100.0%] 

(barrier 665 664 547)

;; Start of basic block ( 65) -> 67
;; bb 67 artificial_defs: { }
;; bb 67 artificial_uses: { u673(11){ }u674(13){ }u675(25){ }u676(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 209 213 376
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 209 213 376
;; lr  def 	 383
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 209 213 376
;; live  gen 	 383
;; live  kill	
;; rd  in  	(39)
27, 30, 59, 83, 103, 104, 121, 122, 297, 352, 353, 2019, 2020, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2135, 2136, 2137
;; rd  gen 	(1)
2140
;; rd  kill	(1)
2140

;; Pred edge  65 [50.0%] 
(code_label 547 665 548 67 56 "" [1 uses])

(note 548 547 550 67 [bb 67] NOTE_INSN_BASIC_BLOCK)

(insn 550 548 552 67 arch/arm/kernel/signal.c:757 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 213 [ regs ])
                (const_int 28 [0x1c])) [0 <variable>.uregs+28 S4 A32])
        (reg:SI 376)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 376)
        (nil)))

(insn 552 550 553 67 arch/arm/kernel/signal.c:758 (set (reg:SI 383)
        (plus:SI (reg/v:SI 209 [ continue_addr ])
            (const_int -4 [0xfffffffffffffffc]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/v:SI 209 [ continue_addr ])
        (nil)))

(insn 553 552 554 67 arch/arm/kernel/signal.c:758 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 213 [ regs ])
                (const_int 60 [0x3c])) [0 <variable>.uregs+60 S4 A32])
        (reg:SI 383)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 383)
        (expr_list:REG_DEAD (reg/v/f:SI 213 [ regs ])
            (nil))))
;; End of basic block 67 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(40)
27, 30, 59, 83, 103, 104, 121, 122, 297, 352, 353, 2019, 2020, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2135, 2136, 2137, 2140


;; Succ edge  68 [100.0%]  (fallthru)

;; Start of basic block ( 64 63 67 66) -> 68
;; bb 68 artificial_defs: { }
;; bb 68 artificial_uses: { u682(11){ }u683(13){ }u684(25){ }u685(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 136 137 384 385
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 136 137 384 385
;; live  kill	
;; rd  in  	(44)
27, 30, 59, 83, 103, 104, 121, 122, 297, 298, 299, 352, 353, 2019, 2020, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2135, 2136, 2137, 2138, 2139, 2140
;; rd  gen 	(5)
296, 1972, 1973, 2141, 2142
;; rd  kill	(4)
1972, 1973, 2141, 2142

;; Pred edge  64 [72.0%] 
;; Pred edge  63 [72.0%] 
;; Pred edge  67 [100.0%]  (fallthru)
;; Pred edge  66 [100.0%] 
(code_label 554 553 555 68 55 "" [3 uses])

(note 555 554 557 68 [bb 68] NOTE_INSN_BASIC_BLOCK)

(insn 557 555 558 68 include/linux/thread_info.h:84 (set (reg:SI 384)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 558 557 559 68 include/linux/thread_info.h:84 (set (reg/f:SI 136 [ D.26069 ])
        (and:SI (reg:SI 384)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 384)
        (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
                (const_int -8192 [0xffffffffffffe000]))
            (nil))))

(insn 559 558 560 68 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 137 [ D.26064 ])
        (mem/v:SI (reg/f:SI 136 [ D.26069 ]) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 560 559 561 68 arch/arm/kernel/signal.c:778 (set (reg:SI 385)
        (and:SI (reg:SI 137 [ D.26064 ])
            (const_int 1048576 [0x100000]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 137 [ D.26064 ])
        (nil)))

(insn 561 560 562 68 arch/arm/kernel/signal.c:778 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 385)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 385)
        (nil)))

(jump_insn 562 561 563 68 arch/arm/kernel/signal.c:778 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 616)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6102 [0x17d6])
            (nil))))
;; End of basic block 68 -> ( 69 72)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; rd  out 	(46)
27, 30, 59, 83, 103, 104, 121, 122, 296, 352, 353, 1972, 1973, 2019, 2020, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142


;; Succ edge  69 [39.0%]  (fallthru)
;; Succ edge  72 [61.0%] 

;; Start of basic block ( 68) -> 69
;; bb 69 artificial_defs: { }
;; bb 69 artificial_uses: { u693(11){ }u694(13){ }u695(25){ }u696(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 390 391
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 390 391
;; live  kill	 14 [lr]
;; rd  in  	(46)
27, 30, 59, 83, 103, 104, 121, 122, 296, 352, 353, 1972, 1973, 2019, 2020, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142
;; rd  gen 	(3)
2, 2143, 2144
;; rd  kill	(50)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 2143, 2144

;; Pred edge  68 [39.0%]  (fallthru)
(note 563 562 567 69 [bb 69] NOTE_INSN_BASIC_BLOCK)

(insn 567 563 568 69 include/linux/thread_info.h:69 (set (reg:SI 0 r0)
        (const_int 20 [0x14])) 167 {*arm_movsi_insn} (nil))

(insn 568 567 569 69 include/linux/thread_info.h:69 (set (reg:SI 1 r1)
        (reg/f:SI 136 [ D.26069 ])) 167 {*arm_movsi_insn} (nil))

(call_insn 569 568 573 69 include/linux/thread_info.h:69 (parallel [
            (call (mem:SI (symbol_ref:SI ("_clear_bit") [flags 0x41] <function_decl 0x109cef00 _clear_bit>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 573 569 574 69 arch/arm/kernel/signal.c:780 (set (reg/f:SI 391 [ <variable>.task ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 136 [ D.26069 ])
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 136 [ D.26069 ])
        (nil)))

(insn 574 573 575 69 arch/arm/kernel/signal.c:780 (set (reg/f:SI 390)
        (plus:SI (reg/f:SI 391 [ <variable>.task ])
            (const_int 960 [0x3c0]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 391 [ <variable>.task ])
        (nil)))

(insn 575 574 576 69 arch/arm/kernel/signal.c:780 (set (reg:SI 0 r0)
        (const_int 2 [0x2])) 167 {*arm_movsi_insn} (nil))

(insn 576 575 577 69 arch/arm/kernel/signal.c:780 (set (reg:SI 1 r1)
        (reg/f:SI 390)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 390)
        (nil)))

(insn 577 576 578 69 arch/arm/kernel/signal.c:780 (set (reg:SI 2 r2)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(call_insn 578 577 666 69 arch/arm/kernel/signal.c:780 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sigprocmask") [flags 0x41] <function_decl 0x10a8d480 sigprocmask>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(jump_insn 666 578 667 69 (set (pc)
        (label_ref 616)) -1 (nil))
;; End of basic block 69 -> ( 72)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(47)
2, 59, 83, 103, 104, 121, 122, 296, 352, 353, 1972, 1973, 2019, 2020, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144


;; Succ edge  72 [100.0%] 

(barrier 667 666 583)

;; Start of basic block ( 29 30) -> 70
;; bb 70 artificial_defs: { }
;; bb 70 artificial_uses: { u708(11){ }u709(13){ }u710(25){ }u711(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 206 207 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 158 392 393 394 398 399
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 206 207 213
;; live  gen 	 158 392 393 394 398 399
;; live  kill	
;; rd  in  	(66)
27, 59, 83, 103, 104, 121, 122, 286, 293, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 1988, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2155, 2156, 2157
;; rd  gen 	(6)
1989, 2145, 2146, 2147, 2148, 2149
;; rd  kill	(7)
1988, 1989, 2145, 2146, 2147, 2148, 2149

;; Pred edge  29 [50.0%] 
;; Pred edge  30 [50.0%] 
(code_label 583 667 584 70 39 "" [2 uses])

(note 584 583 587 70 [bb 70] NOTE_INSN_BASIC_BLOCK)

(insn 587 584 588 70 arch/arm/kernel/signal.c:449 (set (reg:SI 393)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 588 587 589 70 arch/arm/kernel/signal.c:449 (set (reg:SI 392)
        (and:SI (reg:SI 393)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 393)
        (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
                (const_int -8192 [0xffffffffffffe000]))
            (nil))))

(insn 589 588 593 70 arch/arm/kernel/signal.c:449 (set (reg/f:SI 394 [ <variable>.task ])
        (mem/s/f/j:SI (plus:SI (reg:SI 392)
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 392)
        (nil)))

(insn 593 589 594 70 arch/arm/kernel/signal.c:449 (set (reg:SI 398 [ <variable>.sas_ss_size ])
        (mem/s/j:SI (plus:SI (reg/f:SI 394 [ <variable>.task ])
                (const_int 988 [0x3dc])) [0 <variable>.sas_ss_size+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 594 593 595 70 arch/arm/kernel/signal.c:449 (set (reg:SI 399 [ <variable>.sas_ss_sp ])
        (mem/s/j:SI (plus:SI (reg/f:SI 394 [ <variable>.task ])
                (const_int 984 [0x3d8])) [0 <variable>.sas_ss_sp+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 394 [ <variable>.task ])
        (nil)))

(insn 595 594 668 70 arch/arm/kernel/signal.c:449 (set (reg/v:SI 158 [ sp ])
        (plus:SI (reg:SI 398 [ <variable>.sas_ss_size ])
            (reg:SI 399 [ <variable>.sas_ss_sp ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 399 [ <variable>.sas_ss_sp ])
        (expr_list:REG_DEAD (reg:SI 398 [ <variable>.sas_ss_size ])
            (nil))))

(jump_insn 668 595 669 70 (set (pc)
        (label_ref 200)) -1 (nil))
;; End of basic block 70 -> ( 31)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 158 206 207 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 158 206 207 213
;; rd  out 	(71)
27, 59, 83, 103, 104, 121, 122, 286, 293, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 1989, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2145, 2146, 2147, 2148, 2149, 2155, 2156, 2157


;; Succ edge  31 [100.0%] 

(barrier 669 668 598)

;; Start of basic block ( 42 43) -> 71
;; bb 71 artificial_defs: { }
;; bb 71 artificial_uses: { u720(11){ }u721(13){ }u722(25){ }u723(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 206 207 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 177 400 401 402 406 407
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 206 207 213
;; live  gen 	 177 400 401 402 406 407
;; live  kill	
;; rd  in  	(66)
27, 59, 83, 103, 104, 121, 122, 285, 290, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 2001, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2085, 2086, 2087, 2088, 2089, 2090, 2155, 2156, 2157
;; rd  gen 	(6)
2002, 2150, 2151, 2152, 2153, 2154
;; rd  kill	(7)
2001, 2002, 2150, 2151, 2152, 2153, 2154

;; Pred edge  42 [50.0%] 
;; Pred edge  43 [50.0%] 
(code_label 598 669 599 71 47 "" [2 uses])

(note 599 598 602 71 [bb 71] NOTE_INSN_BASIC_BLOCK)

(insn 602 599 603 71 arch/arm/kernel/signal.c:449 (set (reg:SI 401)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 603 602 604 71 arch/arm/kernel/signal.c:449 (set (reg:SI 400)
        (and:SI (reg:SI 401)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 401)
        (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
                (const_int -8192 [0xffffffffffffe000]))
            (nil))))

(insn 604 603 608 71 arch/arm/kernel/signal.c:449 (set (reg/f:SI 402 [ <variable>.task ])
        (mem/s/f/j:SI (plus:SI (reg:SI 400)
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 400)
        (nil)))

(insn 608 604 609 71 arch/arm/kernel/signal.c:449 (set (reg:SI 406 [ <variable>.sas_ss_size ])
        (mem/s/j:SI (plus:SI (reg/f:SI 402 [ <variable>.task ])
                (const_int 988 [0x3dc])) [0 <variable>.sas_ss_size+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 609 608 610 71 arch/arm/kernel/signal.c:449 (set (reg:SI 407 [ <variable>.sas_ss_sp ])
        (mem/s/j:SI (plus:SI (reg/f:SI 402 [ <variable>.task ])
                (const_int 984 [0x3d8])) [0 <variable>.sas_ss_sp+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 402 [ <variable>.task ])
        (nil)))

(insn 610 609 670 71 arch/arm/kernel/signal.c:449 (set (reg/v:SI 177 [ sp ])
        (plus:SI (reg:SI 406 [ <variable>.sas_ss_size ])
            (reg:SI 407 [ <variable>.sas_ss_sp ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 407 [ <variable>.sas_ss_sp ])
        (expr_list:REG_DEAD (reg:SI 406 [ <variable>.sas_ss_size ])
            (nil))))

(jump_insn 670 610 671 71 (set (pc)
        (label_ref 362)) -1 (nil))
;; End of basic block 71 -> ( 44)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 177 206 207 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 177 206 207 213
;; rd  out 	(71)
27, 59, 83, 103, 104, 121, 122, 285, 290, 352, 353, 1970, 1971, 1976, 1977, 1978, 1979, 2002, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2085, 2086, 2087, 2088, 2089, 2090, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157


;; Succ edge  44 [100.0%] 

(barrier 671 670 616)

;; Start of basic block ( 61 2 68 60 57 62 69) -> 72
;; bb 72 artificial_defs: { }
;; bb 72 artificial_uses: { u732(11){ }u733(13){ }u734(25){ }u735(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(208)
2, 13, 15, 17, 18, 20, 27, 30, 59, 83, 103, 104, 121, 122, 139, 296, 300, 302, 308, 351, 352, 353, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1992, 1993, 1994, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  61 [100.0%] 
;; Pred edge  2 [39.0%] 
;; Pred edge  68 [61.0%] 
;; Pred edge  60 [71.0%] 
;; Pred edge  57 [100.0%] 
;; Pred edge  62 [39.0%] 
;; Pred edge  69 [100.0%] 
(code_label 616 671 623 72 57 "" [7 uses])

(note 623 616 0 72 [bb 72] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 72 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(208)
2, 13, 15, 17, 18, 20, 27, 30, 59, 83, 103, 104, 121, 122, 139, 296, 300, 302, 308, 351, 352, 353, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1992, 1993, 1994, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function do_notify_resume (do_notify_resume)[0:1453]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 12 (  1.7)


do_notify_resume

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={4d,2u} r1={5d,3u} r2={3d,1u} r3={3d} r11={1d,6u} r12={3d} r13={1d,9u,1d} r14={2d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={4d,2u} r25={1d,6u} r26={1d,5u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r135={1d,2u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} 
;;    total ref usage 297{254d,42u,1e} in 15{13 regular + 2 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247
0[0,4] 1[4,5] 2[9,3] 3[12,3] 11[15,1] 12[16,3] 13[19,1] 14[20,2] 15[22,2] 16[24,2] 17[26,2] 18[28,2] 19[30,2] 20[32,2] 21[34,2] 22[36,2] 23[38,2] 24[40,4] 25[44,1] 26[45,1] 27[46,2] 28[48,2] 29[50,2] 30[52,2] 31[54,2] 32[56,2] 33[58,2] 34[60,2] 35[62,2] 36[64,2] 37[66,2] 38[68,2] 39[70,2] 40[72,2] 41[74,2] 42[76,2] 43[78,2] 44[80,2] 45[82,2] 46[84,2] 47[86,2] 48[88,2] 49[90,2] 50[92,2] 51[94,2] 52[96,2] 53[98,2] 54[100,2] 55[102,2] 56[104,2] 57[106,2] 58[108,2] 59[110,2] 60[112,2] 61[114,2] 62[116,2] 63[118,2] 64[120,2] 65[122,2] 66[124,2] 67[126,2] 68[128,2] 69[130,2] 70[132,2] 71[134,2] 72[136,2] 73[138,2] 74[140,2] 75[142,2] 76[144,2] 77[146,2] 78[148,2] 79[150,2] 80[152,2] 81[154,2] 82[156,2] 83[158,2] 84[160,2] 85[162,2] 86[164,2] 87[166,2] 88[168,2] 89[170,2] 90[172,2] 91[174,2] 92[176,2] 93[178,2] 94[180,2] 95[182,2] 96[184,2] 97[186,2] 98[188,2] 99[190,2] 100[192,2] 101[194,2] 102[196,2] 103[198,2] 104[200,2] 105[202,2] 106[204,2] 107[206,2] 108[208,2] 109[210,2] 110[212,2] 111[214,2] 112[216,2] 113[218,2] 114[220,2] 115[222,2] 116[224,2] 117[226,2] 118[228,2] 119[230,2] 120[232,2] 121[234,2] 122[236,2] 123[238,2] 124[240,2] 125[242,2] 126[244,2] 127[246,2] 135[248,1] 136[249,1] 137[250,1] 138[251,1] 139[252,1] 140[253,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d3(0){ }d8(1){ }d11(2){ }d14(3){ }d15(11){ }d18(12){ }d19(13){ }d21(14){ }d44(25){ }d45(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
3, 8, 11, 14, 15, 18, 19, 21, 44, 45
;; rd  kill	(24)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 44, 45
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
3, 8, 11, 14, 15, 18, 19, 21, 44, 45

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d15(bb 0 insn -1) }u1(13){ d19(bb 0 insn -1) }u2(25){ d44(bb 0 insn -1) }u3(26){ d45(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 135 136 137
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 135 136 137
;; live  kill	
;; rd  in  	(10)
3, 8, 11, 14, 15, 18, 19, 21, 44, 45
;; rd  gen 	(4)
43, 248, 249, 250
;; rd  kill	(7)
40, 41, 42, 43, 248, 249, 250
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 136
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 136
;; rd  out 	(14)
3, 8, 11, 14, 15, 18, 19, 21, 43, 44, 45, 248, 249, 250
;;  UD chains for artificial uses
;;   reg 11 { d15(bb 0 insn -1) }
;;   reg 13 { d19(bb 0 insn -1) }
;;   reg 25 { d44(bb 0 insn -1) }
;;   reg 26 { d45(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 3
;;      reg 1 { d8(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 4
;;      reg 2 { d11(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 8
;;      reg 135 { d248(bb 2 insn 3) }
;;   UD chains for insn luid 3 uid 9
;;      reg 137 { d250(bb 2 insn 8) }
;;   UD chains for insn luid 4 uid 10
;;      reg 24 { d43(bb 2 insn 9) }

( 2 )->[3]->( 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u9(11){ d15(bb 0 insn -1) }u10(13){ d19(bb 0 insn -1) }u11(25){ d44(bb 0 insn -1) }u12(26){ d45(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136
;; live  gen 	 1 [r1]
;; live  kill	 14 [lr]
;; rd  in  	(14)
3, 8, 11, 14, 15, 18, 19, 21, 43, 44, 45, 248, 249, 250
;; rd  gen 	(0)

;; rd  kill	(2)
20, 21
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; rd  out 	(13)
3, 8, 11, 14, 15, 18, 19, 43, 44, 45, 248, 249, 250
;;  UD chains for artificial uses
;;   reg 11 { d15(bb 0 insn -1) }
;;   reg 13 { d19(bb 0 insn -1) }
;;   reg 25 { d44(bb 0 insn -1) }
;;   reg 26 { d45(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 13
;;      reg 136 { d249(bb 2 insn 4) }
;;   UD chains for insn luid 1 uid 14
;;      reg 13 { d19(bb 0 insn -1) }
;;      reg 0 { d3(bb 0 insn -1) }
;;      reg 1 { d7(bb 3 insn 13) }

( 2 3 )->[4]->( 5 6 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u17(11){ d15(bb 0 insn -1) }u18(13){ d19(bb 0 insn -1) }u19(25){ d44(bb 0 insn -1) }u20(26){ d45(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc] 138
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  gen 	 24 [cc] 138
;; live  kill	
;; rd  in  	(14)
3, 8, 11, 14, 15, 18, 19, 21, 43, 44, 45, 248, 249, 250
;; rd  gen 	(2)
41, 251
;; rd  kill	(5)
40, 41, 42, 43, 251
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(15)
3, 8, 11, 14, 15, 18, 19, 21, 41, 44, 45, 248, 249, 250, 251
;;  UD chains for artificial uses
;;   reg 11 { d15(bb 0 insn -1) }
;;   reg 13 { d19(bb 0 insn -1) }
;;   reg 25 { d44(bb 0 insn -1) }
;;   reg 26 { d45(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 17
;;      reg 135 { d248(bb 2 insn 3) }
;;   UD chains for insn luid 1 uid 18
;;      reg 138 { d251(bb 4 insn 17) }
;;   UD chains for insn luid 2 uid 19
;;      reg 24 { d41(bb 4 insn 18) }

( 4 )->[5]->( 1 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u24(11){ d15(bb 0 insn -1) }u25(13){ d19(bb 0 insn -1) }u26(25){ d44(bb 0 insn -1) }u27(26){ d45(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 139 140
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 139 140
;; live  kill	
;; rd  in  	(15)
3, 8, 11, 14, 15, 18, 19, 21, 41, 44, 45, 248, 249, 250, 251
;; rd  gen 	(2)
252, 253
;; rd  kill	(2)
252, 253
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(17)
3, 8, 11, 14, 15, 18, 19, 21, 41, 44, 45, 248, 249, 250, 251, 252, 253
;;  UD chains for artificial uses
;;   reg 11 { d15(bb 0 insn -1) }
;;   reg 13 { d19(bb 0 insn -1) }
;;   reg 25 { d44(bb 0 insn -1) }
;;   reg 26 { d45(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 22
;;      reg 13 { d19(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 23
;;      reg 140 { d253(bb 5 insn 22) }
;;   eq_note reg 13 { }
;;   UD chains for insn luid 3 uid 25
;;      reg 139 { d252(bb 5 insn 23) }
;;   UD chains for insn luid 4 uid 26
;;      reg 13 { d19(bb 0 insn -1) }
;;      reg 0 { d1(bb 5 insn 24) }
;;      reg 1 { d5(bb 5 insn 25) }

( 4 )->[6]->( 1 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u35(11){ d15(bb 0 insn -1) }u36(13){ d19(bb 0 insn -1) }u37(25){ d44(bb 0 insn -1) }u38(26){ d45(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(15)
3, 8, 11, 14, 15, 18, 19, 21, 41, 44, 45, 248, 249, 250, 251
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(15)
3, 8, 11, 14, 15, 18, 19, 21, 41, 44, 45, 248, 249, 250, 251
;;  UD chains for artificial uses
;;   reg 11 { d15(bb 0 insn -1) }
;;   reg 13 { d19(bb 0 insn -1) }
;;   reg 25 { d44(bb 0 insn -1) }
;;   reg 26 { d45(bb 0 insn -1) }

( 5 6 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u39(11){ d15(bb 0 insn -1) }u40(13){ d19(bb 0 insn -1) }u41(14){ d21(bb 0 insn -1) }u42(25){ d44(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(17)
3, 8, 11, 14, 15, 18, 19, 21, 41, 44, 45, 248, 249, 250, 251, 252, 253
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(17)
3, 8, 11, 14, 15, 18, 19, 21, 41, 44, 45, 248, 249, 250, 251, 252, 253
;;  UD chains for artificial uses
;;   reg 11 { d15(bb 0 insn -1) }
;;   reg 13 { d19(bb 0 insn -1) }
;;   reg 14 { d21(bb 0 insn -1) }
;;   reg 25 { d44(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 10 to worklist
  Adding insn 14 to worklist
  Adding insn 19 to worklist
  Adding insn 26 to worklist
Finished finding needed instructions:
Processing use of (reg 13 sp) in insn 26:
Processing use of (reg 0 r0) in insn 26:
  Adding insn 24 to worklist
Processing use of (reg 1 r1) in insn 26:
  Adding insn 25 to worklist
Processing use of (reg 139) in insn 25:
  Adding insn 23 to worklist
Processing use of (reg 140) in insn 23:
  Adding insn 22 to worklist
Processing use of (reg 13 sp) in insn 22:
Processing use of (reg 24 cc) in insn 19:
  Adding insn 18 to worklist
Processing use of (reg 138) in insn 18:
  Adding insn 17 to worklist
Processing use of (reg 135 [ thread_flags ]) in insn 17:
  Adding insn 3 to worklist
Processing use of (reg 1 r1) in insn 3:
Processing use of (reg 13 sp) in insn 14:
Processing use of (reg 0 r0) in insn 14:
Processing use of (reg 1 r1) in insn 14:
  Adding insn 13 to worklist
Processing use of (reg 136 [ syscall ]) in insn 13:
  Adding insn 4 to worklist
Processing use of (reg 2 r2) in insn 4:
Processing use of (reg 24 cc) in insn 10:
  Adding insn 9 to worklist
Processing use of (reg 137) in insn 9:
  Adding insn 8 to worklist
Processing use of (reg 135 [ thread_flags ]) in insn 8:


do_notify_resume

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={4d,2u} r1={5d,3u} r2={3d,1u} r3={3d} r11={1d,6u} r12={3d} r13={1d,9u,1d} r14={2d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={4d,2u} r25={1d,6u} r26={1d,5u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r135={1d,2u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} 
;;    total ref usage 297{254d,42u,1e} in 15{13 regular + 2 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247
0[0,4] 1[4,5] 2[9,3] 3[12,3] 11[15,1] 12[16,3] 13[19,1] 14[20,2] 15[22,2] 16[24,2] 17[26,2] 18[28,2] 19[30,2] 20[32,2] 21[34,2] 22[36,2] 23[38,2] 24[40,4] 25[44,1] 26[45,1] 27[46,2] 28[48,2] 29[50,2] 30[52,2] 31[54,2] 32[56,2] 33[58,2] 34[60,2] 35[62,2] 36[64,2] 37[66,2] 38[68,2] 39[70,2] 40[72,2] 41[74,2] 42[76,2] 43[78,2] 44[80,2] 45[82,2] 46[84,2] 47[86,2] 48[88,2] 49[90,2] 50[92,2] 51[94,2] 52[96,2] 53[98,2] 54[100,2] 55[102,2] 56[104,2] 57[106,2] 58[108,2] 59[110,2] 60[112,2] 61[114,2] 62[116,2] 63[118,2] 64[120,2] 65[122,2] 66[124,2] 67[126,2] 68[128,2] 69[130,2] 70[132,2] 71[134,2] 72[136,2] 73[138,2] 74[140,2] 75[142,2] 76[144,2] 77[146,2] 78[148,2] 79[150,2] 80[152,2] 81[154,2] 82[156,2] 83[158,2] 84[160,2] 85[162,2] 86[164,2] 87[166,2] 88[168,2] 89[170,2] 90[172,2] 91[174,2] 92[176,2] 93[178,2] 94[180,2] 95[182,2] 96[184,2] 97[186,2] 98[188,2] 99[190,2] 100[192,2] 101[194,2] 102[196,2] 103[198,2] 104[200,2] 105[202,2] 106[204,2] 107[206,2] 108[208,2] 109[210,2] 110[212,2] 111[214,2] 112[216,2] 113[218,2] 114[220,2] 115[222,2] 116[224,2] 117[226,2] 118[228,2] 119[230,2] 120[232,2] 121[234,2] 122[236,2] 123[238,2] 124[240,2] 125[242,2] 126[244,2] 127[246,2] 135[248,1] 136[249,1] 137[250,1] 138[251,1] 139[252,1] 140[253,1] 
(note 1 0 6 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 135 136 137
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 135 136 137
;; live  kill	
;; rd  in  	(10)
3, 8, 11, 14, 15, 18, 19, 21, 44, 45
;; rd  gen 	(4)
43, 248, 249, 250
;; rd  kill	(7)
40, 41, 42, 43, 248, 249, 250

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 3 6 4 2 arch/arm/kernel/signal.c:787 (set (reg/v:SI 135 [ thread_flags ])
        (reg:SI 1 r1 [ thread_flags ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ thread_flags ])
        (nil)))

(insn 4 3 5 2 arch/arm/kernel/signal.c:787 (set (reg/v:SI 136 [ syscall ])
        (reg:SI 2 r2 [ syscall ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ syscall ])
        (nil)))

(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)

(insn 8 5 9 2 arch/arm/kernel/signal.c:788 (set (reg:SI 137)
        (and:SI (reg/v:SI 135 [ thread_flags ])
            (const_int 1 [0x1]))) 67 {*arm_andsi3_insn} (nil))

(insn 9 8 10 2 arch/arm/kernel/signal.c:788 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 137)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 137)
        (nil)))

(jump_insn 10 9 11 2 arch/arm/kernel/signal.c:788 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 15)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 136
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 136
;; rd  out 	(14)
3, 8, 11, 14, 15, 18, 19, 21, 43, 44, 45, 248, 249, 250


;; Succ edge  3 [29.0%]  (fallthru)
;; Succ edge  4 [71.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u9(11){ }u10(13){ }u11(25){ }u12(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136
;; live  gen 	 1 [r1]
;; live  kill	 14 [lr]
;; rd  in  	(14)
3, 8, 11, 14, 15, 18, 19, 21, 43, 44, 45, 248, 249, 250
;; rd  gen 	(0)

;; rd  kill	(2)
20, 21

;; Pred edge  2 [29.0%]  (fallthru)
(note 11 10 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 13 11 14 3 arch/arm/kernel/signal.c:789 (set (reg:SI 1 r1)
        (reg/v:SI 136 [ syscall ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 136 [ syscall ])
        (nil)))

(call_insn 14 13 15 3 arch/arm/kernel/signal.c:789 (parallel [
            (call (mem:SI (symbol_ref:SI ("do_signal") [flags 0x3] <function_decl 0x1140ac80 do_signal>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; rd  out 	(13)
3, 8, 11, 14, 15, 18, 19, 43, 44, 45, 248, 249, 250


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u17(11){ }u18(13){ }u19(25){ }u20(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc] 138
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  gen 	 24 [cc] 138
;; live  kill	
;; rd  in  	(14)
3, 8, 11, 14, 15, 18, 19, 21, 43, 44, 45, 248, 249, 250
;; rd  gen 	(2)
41, 251
;; rd  kill	(5)
40, 41, 42, 43, 251

;; Pred edge  2 [71.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 15 14 16 4 62 "" [1 uses])

(note 16 15 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 17 16 18 4 arch/arm/kernel/signal.c:791 (set (reg:SI 138)
        (and:SI (reg/v:SI 135 [ thread_flags ])
            (const_int 4 [0x4]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg/v:SI 135 [ thread_flags ])
        (nil)))

(insn 18 17 19 4 arch/arm/kernel/signal.c:791 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 138)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 138)
        (nil)))

(jump_insn 19 18 20 4 arch/arm/kernel/signal.c:791 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 33)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6102 [0x17d6])
            (nil))))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(15)
3, 8, 11, 14, 15, 18, 19, 21, 41, 44, 45, 248, 249, 250, 251


;; Succ edge  5 [39.0%]  (fallthru)
;; Succ edge  6 [61.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u24(11){ }u25(13){ }u26(25){ }u27(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 139 140
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 139 140
;; live  kill	
;; rd  in  	(15)
3, 8, 11, 14, 15, 18, 19, 21, 41, 44, 45, 248, 249, 250, 251
;; rd  gen 	(2)
252, 253
;; rd  kill	(2)
252, 253

;; Pred edge  4 [39.0%]  (fallthru)
(note 20 19 22 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 22 20 23 5 include/linux/thread_info.h:69 (set (reg:SI 140)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 23 22 24 5 include/linux/thread_info.h:69 (set (reg:SI 139)
        (and:SI (reg:SI 140)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 140)
        (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
                (const_int -8192 [0xffffffffffffe000]))
            (nil))))

(insn 24 23 25 5 include/linux/thread_info.h:69 (set (reg:SI 0 r0)
        (const_int 2 [0x2])) 167 {*arm_movsi_insn} (nil))

(insn 25 24 26 5 include/linux/thread_info.h:69 (set (reg:SI 1 r1)
        (reg:SI 139)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 139)
        (nil)))

(call_insn/j 26 25 27 5 include/linux/thread_info.h:69 (parallel [
            (call (mem:SI (symbol_ref:SI ("_clear_bit") [flags 0x41] <function_decl 0x109cef00 _clear_bit>) [0 S4 A32])
                (const_int 0 [0x0]))
            (return)
            (use (const_int 0 [0x0]))
        ]) 258 {*sibcall_insn} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 5 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(17)
3, 8, 11, 14, 15, 18, 19, 21, 41, 44, 45, 248, 249, 250, 251, 252, 253


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 27 26 33)

;; Start of basic block ( 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u35(11){ }u36(13){ }u37(25){ }u38(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(15)
3, 8, 11, 14, 15, 18, 19, 21, 41, 44, 45, 248, 249, 250, 251
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  4 [61.0%] 
(code_label 33 27 36 6 64 "" [1 uses])

(note 36 33 0 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 6 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(15)
3, 8, 11, 14, 15, 18, 19, 21, 41, 44, 45, 248, 249, 250, 251


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function restore_sigframe (restore_sigframe)[0:1443]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 19 n_edges 27 count 35 (  1.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 19 n_edges 27 count 36 (  1.9)
df_worklist_dataflow_doublequeue:n_basic_blocks 19 n_edges 27 count 36 (  1.9)


restore_sigframe

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={14d,11u} r1={10d,4u} r2={9d,2u} r3={7d} r11={1d,18u} r12={7d} r13={1d,26u,2d} r14={7d,1u} r15={6d} r16={6d} r17={6d} r18={6d} r19={6d} r20={6d} r21={6d} r22={6d} r23={6d} r24={41d,12u} r25={1d,21u,1d} r26={1d,17u} r27={6d} r28={6d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={6d} r38={6d} r39={6d} r40={6d} r41={6d} r42={6d} r43={6d} r44={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r76={6d} r77={6d} r78={6d} r79={6d} r80={6d} r81={6d} r82={6d} r83={6d} r84={6d} r85={6d} r86={6d} r87={6d} r88={6d} r89={6d} r90={6d} r91={6d} r92={6d} r93={6d} r94={6d} r95={6d} r96={6d} r97={6d} r98={6d} r99={6d} r100={6d} r101={6d} r102={6d} r103={6d} r104={6d} r105={6d} r106={6d} r107={6d} r108={6d} r109={6d} r110={6d} r111={6d} r112={6d} r113={6d} r114={6d} r115={6d} r116={6d} r117={6d} r118={6d} r119={6d} r120={6d} r121={6d} r122={6d} r123={6d} r124={6d} r125={6d} r126={6d} r127={6d} r133={5d,4u} r134={3d,3u} r135={1d,2u} r136={1d,6u} r137={1d,1u} r138={2d,2u} r139={1d,1u,1d} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r146={1d,2u} r147={1d,2u} r148={1d,2u} r149={3d,1u} r153={1d,3u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={18d,19u} r171={1d,1u} r174={1d,19u} r175={1d,25u} r176={1d,3u} r177={1d,1u} r178={1d,1u,1d} r179={1d,1u} r180={1d,1u} r181={1d,3u} r182={1d,1u} r183={1d,1u} r184={1d,1u} r185={1d,1u,1d} r186={1d,1u} r189={1d,1u} r190={1d,2u} r194={1d,1u} r195={1d,1u} r196={1d,1u,1d} r197={1d,1u} r198={1d,1u} r199={1d,1u} r200={1d,1u} r201={1d,1u} r202={1d,1u} r203={1d,1u} r204={1d,1u} r205={1d,1u} r206={1d,1u} r207={1d,1u} r208={1d,1u} r209={1d,1u} r210={1d,1u} r211={1d,1u} r212={1d,1u} r213={1d,1u} r214={1d,1u} r215={1d,1u} r217={1d,1u} r218={1d,1u} r219={1d,1u} r220={1d,1u} r222={1d,1u} r224={1d,1u} r225={1d,1u} r226={1d,1u} r227={1d,1u} r228={1d,2u} r229={1d,1u} r230={1d,1u} r231={1d,1u} r233={1d,1u} r235={1d,1u} r237={1d,1u} r238={1d,1u} r239={1d,1u} r240={1d,1u} r241={1d,1u} r242={1d,1u} r243={1d,1u} r244={1d,1u} r245={1d,1u} r246={1d,1u} r247={1d,1u} r248={1d,1u} r249={1d,1u} 
;;    total ref usage 1187{885d,295u,7e} in 171{165 regular + 6 call} insns.
;; Reaching defs:

  sparse invalidated 	24
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758
0[0,14] 1[14,10] 2[24,9] 3[33,7] 11[40,1] 12[41,7] 13[48,1] 14[49,7] 15[56,6] 16[62,6] 17[68,6] 18[74,6] 19[80,6] 20[86,6] 21[92,6] 22[98,6] 23[104,6] 24[110,41] 25[151,1] 26[152,1] 27[153,6] 28[159,6] 29[165,6] 30[171,6] 31[177,6] 32[183,6] 33[189,6] 34[195,6] 35[201,6] 36[207,6] 37[213,6] 38[219,6] 39[225,6] 40[231,6] 41[237,6] 42[243,6] 43[249,6] 44[255,6] 45[261,6] 46[267,6] 47[273,6] 48[279,6] 49[285,6] 50[291,6] 51[297,6] 52[303,6] 53[309,6] 54[315,6] 55[321,6] 56[327,6] 57[333,6] 58[339,6] 59[345,6] 60[351,6] 61[357,6] 62[363,6] 63[369,6] 64[375,6] 65[381,6] 66[387,6] 67[393,6] 68[399,6] 69[405,6] 70[411,6] 71[417,6] 72[423,6] 73[429,6] 74[435,6] 75[441,6] 76[447,6] 77[453,6] 78[459,6] 79[465,6] 80[471,6] 81[477,6] 82[483,6] 83[489,6] 84[495,6] 85[501,6] 86[507,6] 87[513,6] 88[519,6] 89[525,6] 90[531,6] 91[537,6] 92[543,6] 93[549,6] 94[555,6] 95[561,6] 96[567,6] 97[573,6] 98[579,6] 99[585,6] 100[591,6] 101[597,6] 102[603,6] 103[609,6] 104[615,6] 105[621,6] 106[627,6] 107[633,6] 108[639,6] 109[645,6] 110[651,6] 111[657,6] 112[663,6] 113[669,6] 114[675,6] 115[681,6] 116[687,6] 117[693,6] 118[699,6] 119[705,6] 120[711,6] 121[717,6] 122[723,6] 123[729,6] 124[735,6] 125[741,6] 126[747,6] 127[753,6] 133[759,5] 134[764,3] 135[767,1] 136[768,1] 137[769,1] 138[770,2] 139[772,1] 140[773,1] 141[774,1] 142[775,1] 143[776,1] 144[777,1] 146[778,1] 147[779,1] 148[780,1] 149[781,3] 153[784,1] 154[785,1] 155[786,1] 156[787,1] 157[788,1] 158[789,1] 159[790,1] 160[791,1] 161[792,1] 162[793,1] 163[794,1] 164[795,1] 165[796,1] 166[797,1] 167[798,1] 168[799,1] 169[800,1] 170[801,18] 171[819,1] 174[820,1] 175[821,1] 176[822,1] 177[823,1] 178[824,1] 179[825,1] 180[826,1] 181[827,1] 182[828,1] 183[829,1] 184[830,1] 185[831,1] 186[832,1] 189[833,1] 190[834,1] 194[835,1] 195[836,1] 196[837,1] 197[838,1] 198[839,1] 199[840,1] 200[841,1] 201[842,1] 202[843,1] 203[844,1] 204[845,1] 205[846,1] 206[847,1] 207[848,1] 208[849,1] 209[850,1] 210[851,1] 211[852,1] 212[853,1] 213[854,1] 214[855,1] 215[856,1] 217[857,1] 218[858,1] 219[859,1] 220[860,1] 222[861,1] 224[862,1] 225[863,1] 226[864,1] 227[865,1] 228[866,1] 229[867,1] 230[868,1] 231[869,1] 233[870,1] 235[871,1] 237[872,1] 238[873,1] 239[874,1] 240[875,1] 241[876,1] 242[877,1] 243[878,1] 244[879,1] 245[880,1] 246[881,1] 247[882,1] 248[883,1] 249[884,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d13(0){ }d23(1){ }d32(2){ }d39(3){ }d40(11){ }d47(12){ }d48(13){ }d55(14){ }d151(25){ }d152(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
13, 23, 32, 39, 40, 47, 48, 55, 151, 152
;; rd  kill	(58)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 151, 152
;; lr  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(10)
13, 23, 32, 39, 40, 47, 48, 55, 151, 152

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d40(bb 0 insn -1) }u1(13){ d48(bb 0 insn -1) }u2(25){ d151(bb 0 insn -1) }u3(26){ d152(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 170 174 175 176 177
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 170 174 175 176 177
;; live  kill	 14 [lr]
;; rd  in  	(10)
13, 23, 32, 39, 40, 47, 48, 55, 151, 152
;; rd  gen 	(7)
11, 149, 801, 820, 821, 822, 823
;; rd  kill	(43)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 49, 50, 51, 52, 53, 54, 55, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 820, 821, 822, 823
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 170 174 175 176
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 170 174 175 176
;; rd  out 	(15)
11, 23, 32, 39, 40, 47, 48, 149, 151, 152, 801, 820, 821, 822, 823
;;  UD chains for artificial uses
;;   reg 11 { d40(bb 0 insn -1) }
;;   reg 13 { d48(bb 0 insn -1) }
;;   reg 25 { d151(bb 0 insn -1) }
;;   reg 26 { d152(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d13(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 3
;;      reg 1 { d23(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 7
;;      reg 25 { d151(bb 0 insn -1) }
;;   UD chains for insn luid 3 uid 8
;;      reg 175 { d821(bb 2 insn 3) }
;;   UD chains for insn luid 4 uid 9
;;      reg 176 { d822(bb 2 insn 7) }
;;   eq_note reg 25 { }
;;   UD chains for insn luid 5 uid 10
;;      reg 177 { d823(bb 2 insn 8) }
;;   UD chains for insn luid 7 uid 12
;;      reg 13 { d48(bb 0 insn -1) }
;;      reg 0 { d12(bb 2 insn 9) }
;;      reg 1 { d22(bb 2 insn 10) }
;;      reg 2 { d31(bb 2 insn 11) }
;;   UD chains for insn luid 8 uid 13
;;      reg 0 { d11(bb 2 insn 12) }
;;   UD chains for insn luid 9 uid 15
;;      reg 170 { d801(bb 2 insn 13) }
;;   UD chains for insn luid 10 uid 16
;;      reg 24 { d149(bb 2 insn 15) }

( 2 )->[3]->( 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u18(11){ d40(bb 0 insn -1) }u19(13){ d48(bb 0 insn -1) }u20(25){ d151(bb 0 insn -1) }u21(26){ d152(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 170 174 175 176
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 176
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 178 179 180 181 182 183 184 185 186 189 190 194 195 196 197
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 170 174 175 176
;; live  gen 	 0 [r0] 1 [r1] 178 179 180 181 182 183 184 185 186 189 190 194 195 196 197
;; live  kill	 14 [lr]
;; rd  in  	(15)
11, 23, 32, 39, 40, 47, 48, 149, 151, 152, 801, 820, 821, 822, 823
;; rd  gen 	(15)
824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838
;; rd  kill	(22)
49, 50, 51, 52, 53, 54, 55, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 170 174 175
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 170 174 175
;; rd  out 	(30)
11, 23, 32, 39, 40, 47, 48, 149, 151, 152, 801, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838
;;  UD chains for artificial uses
;;   reg 11 { d40(bb 0 insn -1) }
;;   reg 13 { d48(bb 0 insn -1) }
;;   reg 25 { d151(bb 0 insn -1) }
;;   reg 26 { d152(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 18
;;      reg 25 { d151(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 19
;;      reg 178 { d824(bb 3 insn 18) }
;;   UD chains for insn luid 2 uid 20
;;      reg 180 { d826(bb 3 insn 19) }
;;   eq_note reg 178 { }
;;   UD chains for insn luid 3 uid 21
;;      reg 25 { d151(bb 0 insn -1) }
;;      reg 179 { d825(bb 3 insn 20) }
;;   UD chains for insn luid 4 uid 23
;;      reg 13 { d48(bb 0 insn -1) }
;;   UD chains for insn luid 5 uid 24
;;      reg 182 { d828(bb 3 insn 23) }
;;   eq_note reg 13 { }
;;   UD chains for insn luid 6 uid 25
;;      reg 181 { d827(bb 3 insn 24) }
;;   UD chains for insn luid 7 uid 26
;;      reg 183 { d829(bb 3 insn 25) }
;;   UD chains for insn luid 8 uid 27
;;      reg 185 { d831(bb 3 insn 26) }
;;   UD chains for insn luid 9 uid 28
;;      reg 186 { d832(bb 3 insn 27) }
;;   eq_note reg 185 { }
;;   UD chains for insn luid 10 uid 29
;;      reg 184 { d830(bb 3 insn 28) }
;;   UD chains for insn luid 11 uid 30
;;      reg 13 { d48(bb 0 insn -1) }
;;      reg 0 { d10(bb 3 insn 29) }
;;   UD chains for insn luid 12 uid 34
;;      reg 181 { d827(bb 3 insn 24) }
;;   UD chains for insn luid 13 uid 35
;;      reg 189 { d833(bb 3 insn 34) }
;;   UD chains for insn luid 14 uid 37
;;      reg 176 { d822(bb 2 insn 7) }
;;      reg 176 { d822(bb 2 insn 7) }
;;   UD chains for insn luid 15 uid 38
;;      reg 0 { d1(bb 3 insn 37) }
;;      reg 1 { d14(bb 3 insn 37) }
;;      reg 190 { d834(bb 3 insn 35) }
;;      reg 190 { d834(bb 3 insn 35) }
;;   UD chains for insn luid 16 uid 39
;;      reg 13 { d48(bb 0 insn -1) }
;;   UD chains for insn luid 17 uid 43
;;      reg 181 { d827(bb 3 insn 24) }
;;   UD chains for insn luid 18 uid 44
;;      reg 194 { d835(bb 3 insn 43) }
;;   UD chains for insn luid 19 uid 45
;;      reg 196 { d837(bb 3 insn 44) }
;;   UD chains for insn luid 20 uid 46
;;      reg 197 { d838(bb 3 insn 45) }
;;   eq_note reg 196 { }
;;   UD chains for insn luid 21 uid 47
;;      reg 195 { d836(bb 3 insn 46) }
;;   UD chains for insn luid 22 uid 48
;;      reg 13 { d48(bb 0 insn -1) }
;;      reg 0 { d7(bb 3 insn 47) }

( 2 3 )->[4]->( 5 7 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u56(11){ d40(bb 0 insn -1) }u57(13){ d48(bb 0 insn -1) }u58(25){ d151(bb 0 insn -1) }u59(26){ d152(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 170 174 175
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 170 174 175
;; lr  def 	 24 [cc] 146 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 170 174 175
;; live  gen 	 24 [cc] 146 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215
;; live  kill	 24 [cc]
;; rd  in  	(30)
11, 23, 32, 39, 40, 47, 48, 149, 151, 152, 801, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838
;; rd  gen 	(38)
128, 778, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 802, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856
;; rd  kill	(54)
778, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 153 170 174 175
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 153 170 174 175
;; rd  out 	(66)
11, 23, 32, 39, 40, 47, 48, 128, 151, 152, 778, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 802, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856
;;  UD chains for artificial uses
;;   reg 11 { d40(bb 0 insn -1) }
;;   reg 13 { d48(bb 0 insn -1) }
;;   reg 25 { d151(bb 0 insn -1) }
;;   reg 26 { d152(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 51
;;      reg 175 { d821(bb 2 insn 3) }
;;   UD chains for insn luid 1 uid 52
;;      reg 170 { d801(bb 2 insn 13) }
;;      reg 198 { d839(bb 4 insn 51) }
;;   UD chains for insn luid 2 uid 53
;;      reg 169 { d800(bb 4 insn 52) }
;;      reg 174 { d820(bb 2 insn 2) }
;;   UD chains for insn luid 3 uid 54
;;      reg 175 { d821(bb 2 insn 3) }
;;   UD chains for insn luid 4 uid 55
;;      reg 170 { d818(bb 4 insn 52) }
;;      reg 199 { d840(bb 4 insn 54) }
;;   UD chains for insn luid 5 uid 56
;;      reg 168 { d799(bb 4 insn 55) }
;;      reg 174 { d820(bb 2 insn 2) }
;;   UD chains for insn luid 6 uid 57
;;      reg 175 { d821(bb 2 insn 3) }
;;   UD chains for insn luid 7 uid 58
;;      reg 170 { d817(bb 4 insn 55) }
;;      reg 200 { d841(bb 4 insn 57) }
;;   UD chains for insn luid 8 uid 59
;;      reg 167 { d798(bb 4 insn 58) }
;;      reg 174 { d820(bb 2 insn 2) }
;;   UD chains for insn luid 9 uid 60
;;      reg 175 { d821(bb 2 insn 3) }
;;   UD chains for insn luid 10 uid 61
;;      reg 170 { d816(bb 4 insn 58) }
;;      reg 201 { d842(bb 4 insn 60) }
;;   UD chains for insn luid 11 uid 62
;;      reg 166 { d797(bb 4 insn 61) }
;;      reg 174 { d820(bb 2 insn 2) }
;;   UD chains for insn luid 12 uid 63
;;      reg 175 { d821(bb 2 insn 3) }
;;   UD chains for insn luid 13 uid 64
;;      reg 170 { d815(bb 4 insn 61) }
;;      reg 202 { d843(bb 4 insn 63) }
;;   UD chains for insn luid 14 uid 65
;;      reg 165 { d796(bb 4 insn 64) }
;;      reg 174 { d820(bb 2 insn 2) }
;;   UD chains for insn luid 15 uid 66
;;      reg 175 { d821(bb 2 insn 3) }
;;   UD chains for insn luid 16 uid 67
;;      reg 170 { d814(bb 4 insn 64) }
;;      reg 203 { d844(bb 4 insn 66) }
;;   UD chains for insn luid 17 uid 68
;;      reg 164 { d795(bb 4 insn 67) }
;;      reg 174 { d820(bb 2 insn 2) }
;;   UD chains for insn luid 18 uid 69
;;      reg 175 { d821(bb 2 insn 3) }
;;   UD chains for insn luid 19 uid 70
;;      reg 170 { d813(bb 4 insn 67) }
;;      reg 204 { d845(bb 4 insn 69) }
;;   UD chains for insn luid 20 uid 71
;;      reg 163 { d794(bb 4 insn 70) }
;;      reg 174 { d820(bb 2 insn 2) }
;;   UD chains for insn luid 21 uid 72
;;      reg 175 { d821(bb 2 insn 3) }
;;   UD chains for insn luid 22 uid 73
;;      reg 170 { d812(bb 4 insn 70) }
;;      reg 205 { d846(bb 4 insn 72) }
;;   UD chains for insn luid 23 uid 74
;;      reg 162 { d793(bb 4 insn 73) }
;;      reg 174 { d820(bb 2 insn 2) }
;;   UD chains for insn luid 24 uid 75
;;      reg 175 { d821(bb 2 insn 3) }
;;   UD chains for insn luid 25 uid 76
;;      reg 170 { d811(bb 4 insn 73) }
;;      reg 206 { d847(bb 4 insn 75) }
;;   UD chains for insn luid 26 uid 77
;;      reg 161 { d792(bb 4 insn 76) }
;;      reg 174 { d820(bb 2 insn 2) }
;;   UD chains for insn luid 27 uid 78
;;      reg 175 { d821(bb 2 insn 3) }
;;   UD chains for insn luid 28 uid 79
;;      reg 170 { d810(bb 4 insn 76) }
;;      reg 207 { d848(bb 4 insn 78) }
;;   UD chains for insn luid 29 uid 80
;;      reg 160 { d791(bb 4 insn 79) }
;;      reg 174 { d820(bb 2 insn 2) }
;;   UD chains for insn luid 30 uid 81
;;      reg 175 { d821(bb 2 insn 3) }
;;   UD chains for insn luid 31 uid 82
;;      reg 170 { d809(bb 4 insn 79) }
;;      reg 208 { d849(bb 4 insn 81) }
;;   UD chains for insn luid 32 uid 83
;;      reg 159 { d790(bb 4 insn 82) }
;;      reg 174 { d820(bb 2 insn 2) }
;;   UD chains for insn luid 33 uid 84
;;      reg 175 { d821(bb 2 insn 3) }
;;   UD chains for insn luid 34 uid 85
;;      reg 170 { d808(bb 4 insn 82) }
;;      reg 209 { d850(bb 4 insn 84) }
;;   UD chains for insn luid 35 uid 86
;;      reg 158 { d789(bb 4 insn 85) }
;;      reg 174 { d820(bb 2 insn 2) }
;;   UD chains for insn luid 36 uid 87
;;      reg 175 { d821(bb 2 insn 3) }
;;   UD chains for insn luid 37 uid 88
;;      reg 170 { d807(bb 4 insn 85) }
;;      reg 210 { d851(bb 4 insn 87) }
;;   UD chains for insn luid 38 uid 89
;;      reg 157 { d788(bb 4 insn 88) }
;;      reg 174 { d820(bb 2 insn 2) }
;;   UD chains for insn luid 39 uid 90
;;      reg 175 { d821(bb 2 insn 3) }
;;   UD chains for insn luid 40 uid 91
;;      reg 170 { d806(bb 4 insn 88) }
;;      reg 211 { d852(bb 4 insn 90) }
;;   UD chains for insn luid 41 uid 92
;;      reg 156 { d787(bb 4 insn 91) }
;;      reg 174 { d820(bb 2 insn 2) }
;;   UD chains for insn luid 42 uid 93
;;      reg 175 { d821(bb 2 insn 3) }
;;   UD chains for insn luid 43 uid 94
;;      reg 170 { d805(bb 4 insn 91) }
;;      reg 212 { d853(bb 4 insn 93) }
;;   UD chains for insn luid 44 uid 95
;;      reg 155 { d786(bb 4 insn 94) }
;;      reg 174 { d820(bb 2 insn 2) }
;;   UD chains for insn luid 45 uid 96
;;      reg 175 { d821(bb 2 insn 3) }
;;   UD chains for insn luid 46 uid 97
;;      reg 170 { d804(bb 4 insn 94) }
;;      reg 213 { d854(bb 4 insn 96) }
;;   UD chains for insn luid 47 uid 98
;;      reg 154 { d785(bb 4 insn 97) }
;;      reg 174 { d820(bb 2 insn 2) }
;;   UD chains for insn luid 48 uid 99
;;      reg 175 { d821(bb 2 insn 3) }
;;   UD chains for insn luid 49 uid 100
;;      reg 170 { d803(bb 4 insn 97) }
;;      reg 214 { d855(bb 4 insn 99) }
;;   UD chains for insn luid 50 uid 101
;;      reg 153 { d784(bb 4 insn 100) }
;;   UD chains for insn luid 51 uid 102
;;      reg 146 { d778(bb 4 insn 101) }
;;      reg 174 { d820(bb 2 insn 2) }
;;   UD chains for insn luid 52 uid 103
;;      reg 153 { d784(bb 4 insn 100) }
;;   UD chains for insn luid 53 uid 104
;;      reg 215 { d856(bb 4 insn 103) }
;;   UD chains for insn luid 54 uid 105
;;      reg 24 { d128(bb 4 insn 104) }

( 4 )->[5]->( 10 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u149(11){ d40(bb 0 insn -1) }u150(13){ d48(bb 0 insn -1) }u151(25){ d151(bb 0 insn -1) }u152(26){ d152(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 153 170 174 175
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153
;; lr  def 	 24 [cc] 148
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 153 170 174 175
;; live  gen 	 24 [cc] 148
;; live  kill	
;; rd  in  	(66)
11, 23, 32, 39, 40, 47, 48, 128, 151, 152, 778, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 802, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856
;; rd  gen 	(2)
127, 780
;; rd  kill	(1)
780
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 148 170 174 175
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 148 170 174 175
;; rd  out 	(67)
11, 23, 32, 39, 40, 47, 48, 127, 151, 152, 778, 780, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 802, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856
;;  UD chains for artificial uses
;;   reg 11 { d40(bb 0 insn -1) }
;;   reg 13 { d48(bb 0 insn -1) }
;;   reg 25 { d151(bb 0 insn -1) }
;;   reg 26 { d152(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 107
;;      reg 153 { d784(bb 4 insn 100) }
;;   UD chains for insn luid 1 uid 108
;;      reg 148 { d780(bb 5 insn 107) }
;;   UD chains for insn luid 2 uid 109
;;      reg 24 { d127(bb 5 insn 108) }

( 5 )->[6]->( 10 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u156(11){ d40(bb 0 insn -1) }u157(13){ d48(bb 0 insn -1) }u158(25){ d151(bb 0 insn -1) }u159(26){ d152(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 148 170 174 175
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148
;; lr  def 	 24 [cc] 217 218 219 220 222 224 225 226
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 148 170 174 175
;; live  gen 	 24 [cc] 217 218 219 220 222 224 225 226
;; live  kill	
;; rd  in  	(67)
11, 23, 32, 39, 40, 47, 48, 127, 151, 152, 778, 780, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 802, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856
;; rd  gen 	(9)
125, 857, 858, 859, 860, 861, 862, 863, 864
;; rd  kill	(8)
857, 858, 859, 860, 861, 862, 863, 864
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 170 174 175
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 170 174 175
;; rd  out 	(75)
11, 23, 32, 39, 40, 47, 48, 125, 151, 152, 778, 780, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 802, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864
;;  UD chains for artificial uses
;;   reg 11 { d40(bb 0 insn -1) }
;;   reg 13 { d48(bb 0 insn -1) }
;;   reg 25 { d151(bb 0 insn -1) }
;;   reg 26 { d152(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 111
;;      reg 148 { d780(bb 5 insn 107) }
;;   UD chains for insn luid 1 uid 112
;;      reg 24 { d126(bb 6 insn 111) }
;;   UD chains for insn luid 3 uid 115
;;      reg 218 { d858(bb 6 insn 114) }
;;   UD chains for insn luid 4 uid 116
;;      reg 220 { d860(bb 6 insn 115) }
;;   UD chains for insn luid 5 uid 118
;;      reg 219 { d859(bb 6 insn 116) }
;;   UD chains for insn luid 6 uid 120
;;      reg 217 { d857(bb 6 insn 112) }
;;      reg 222 { d861(bb 6 insn 118) }
;;   UD chains for insn luid 7 uid 121
;;      reg 224 { d862(bb 6 insn 120) }
;;   UD chains for insn luid 8 uid 122
;;      reg 225 { d863(bb 6 insn 121) }
;;   UD chains for insn luid 9 uid 123
;;      reg 226 { d864(bb 6 insn 122) }
;;   UD chains for insn luid 10 uid 124
;;      reg 24 { d125(bb 6 insn 123) }

( 4 6 )->[7]->( 9 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u171(11){ d40(bb 0 insn -1) }u172(13){ d48(bb 0 insn -1) }u173(25){ d151(bb 0 insn -1) }u174(26){ d152(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 170 174 175
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 174
;; lr  def 	 24 [cc] 147 227 228 229
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 170 174 175
;; live  gen 	 24 [cc] 147 227 228 229
;; live  kill	
;; rd  in  	(76)
11, 23, 32, 39, 40, 47, 48, 125, 128, 151, 152, 778, 780, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 802, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864
;; rd  gen 	(5)
124, 779, 865, 866, 867
;; rd  kill	(4)
779, 865, 866, 867
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147 170 174 175 228
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 170 174 175 228
;; rd  out 	(79)
11, 23, 32, 39, 40, 47, 48, 124, 151, 152, 778, 779, 780, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 802, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867
;;  UD chains for artificial uses
;;   reg 11 { d40(bb 0 insn -1) }
;;   reg 13 { d48(bb 0 insn -1) }
;;   reg 25 { d151(bb 0 insn -1) }
;;   reg 26 { d152(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 127
;;      reg 146 { d778(bb 4 insn 101) }
;;   UD chains for insn luid 1 uid 128
;;      reg 147 { d779(bb 7 insn 127) }
;;      reg 174 { d820(bb 2 insn 2) }
;;   UD chains for insn luid 3 uid 130
;;      reg 227 { d865(bb 7 insn 129) }
;;   UD chains for insn luid 4 uid 131
;;      reg 229 { d867(bb 7 insn 130) }
;;   UD chains for insn luid 5 uid 132
;;      reg 228 { d866(bb 7 insn 131) }
;;   UD chains for insn luid 6 uid 133
;;      reg 24 { d124(bb 7 insn 132) }

( 7 )->[8]->( 11 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u182(11){ d40(bb 0 insn -1) }u183(13){ d48(bb 0 insn -1) }u184(25){ d151(bb 0 insn -1) }u185(26){ d152(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 170 175
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 149
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 170 175
;; live  gen 	 149
;; live  kill	
;; rd  in  	(79)
11, 23, 32, 39, 40, 47, 48, 124, 151, 152, 778, 779, 780, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 802, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867
;; rd  gen 	(1)
783
;; rd  kill	(3)
781, 782, 783
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 170 175
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 170 175
;; rd  out 	(80)
11, 23, 32, 39, 40, 47, 48, 124, 151, 152, 778, 779, 780, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 802, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867
;;  UD chains for artificial uses
;;   reg 11 { d40(bb 0 insn -1) }
;;   reg 13 { d48(bb 0 insn -1) }
;;   reg 25 { d151(bb 0 insn -1) }
;;   reg 26 { d152(bb 0 insn -1) }

( 7 )->[9]->( 11 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u186(11){ d40(bb 0 insn -1) }u187(13){ d48(bb 0 insn -1) }u188(25){ d151(bb 0 insn -1) }u189(26){ d152(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147 170 174 175 228
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 174 228
;; lr  def 	 149 230
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 170 174 175 228
;; live  gen 	 149 230
;; live  kill	
;; rd  in  	(79)
11, 23, 32, 39, 40, 47, 48, 124, 151, 152, 778, 779, 780, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 802, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867
;; rd  gen 	(2)
781, 868
;; rd  kill	(4)
781, 782, 783, 868
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 170 175
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 170 175
;; rd  out 	(81)
11, 23, 32, 39, 40, 47, 48, 124, 151, 152, 778, 779, 780, 781, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 802, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868
;;  UD chains for artificial uses
;;   reg 11 { d40(bb 0 insn -1) }
;;   reg 13 { d48(bb 0 insn -1) }
;;   reg 25 { d151(bb 0 insn -1) }
;;   reg 26 { d152(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 140
;;      reg 147 { d779(bb 7 insn 127) }
;;   UD chains for insn luid 1 uid 141
;;      reg 174 { d820(bb 2 insn 2) }
;;      reg 230 { d868(bb 9 insn 140) }
;;   UD chains for insn luid 2 uid 142
;;      reg 228 { d866(bb 7 insn 131) }

( 5 6 )->[10]->( 11 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u194(11){ d40(bb 0 insn -1) }u195(13){ d48(bb 0 insn -1) }u196(25){ d151(bb 0 insn -1) }u197(26){ d152(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 170 175
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 149
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 170 175
;; live  gen 	 149
;; live  kill	
;; rd  in  	(76)
11, 23, 32, 39, 40, 47, 48, 125, 127, 151, 152, 778, 780, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 802, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864
;; rd  gen 	(1)
782
;; rd  kill	(3)
781, 782, 783
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 170 175
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 170 175
;; rd  out 	(77)
11, 23, 32, 39, 40, 47, 48, 125, 127, 151, 152, 778, 780, 782, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 802, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864
;;  UD chains for artificial uses
;;   reg 11 { d40(bb 0 insn -1) }
;;   reg 13 { d48(bb 0 insn -1) }
;;   reg 25 { d151(bb 0 insn -1) }
;;   reg 26 { d152(bb 0 insn -1) }

( 10 8 9 )->[11]->( 12 18 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u198(11){ d40(bb 0 insn -1) }u199(13){ d48(bb 0 insn -1) }u200(25){ d151(bb 0 insn -1) }u201(26){ d152(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 170 175
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 170
;; lr  def 	 24 [cc] 134 231
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 170 175
;; live  gen 	 24 [cc] 134 231
;; live  kill	
;; rd  in  	(85)
11, 23, 32, 39, 40, 47, 48, 124, 125, 127, 151, 152, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 802, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868
;; rd  gen 	(3)
123, 766, 869
;; rd  kill	(4)
764, 765, 766, 869
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 175
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 175
;; rd  out 	(85)
11, 23, 32, 39, 40, 47, 48, 123, 151, 152, 766, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 802, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869
;;  UD chains for artificial uses
;;   reg 11 { d40(bb 0 insn -1) }
;;   reg 13 { d48(bb 0 insn -1) }
;;   reg 25 { d151(bb 0 insn -1) }
;;   reg 26 { d152(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 150
;;      reg 149 { d783(bb 8 insn 135) d782(bb 10 insn 147) d781(bb 9 insn 142) }
;;   UD chains for insn luid 1 uid 151
;;      reg 170 { d802(bb 4 insn 100) }
;;      reg 231 { d869(bb 11 insn 150) }
;;   UD chains for insn luid 2 uid 152
;;      reg 134 { d766(bb 11 insn 151) }
;;   UD chains for insn luid 3 uid 153
;;      reg 24 { d123(bb 11 insn 152) }

( 11 )->[12]->( 17 13 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u207(11){ d40(bb 0 insn -1) }u208(13){ d48(bb 0 insn -1) }u209(25){ d151(bb 0 insn -1) }u210(26){ d152(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 175
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 175
;; lr  def 	 24 [cc] 138 139 140 171 233
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 175
;; live  gen 	 24 [cc] 138 139 140 171 233
;; live  kill	 24 [cc]
;; rd  in  	(85)
11, 23, 32, 39, 40, 47, 48, 123, 151, 152, 766, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 802, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869
;; rd  gen 	(6)
121, 771, 772, 773, 819, 870
;; rd  kill	(6)
770, 771, 772, 773, 819, 870
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 139 140 175
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 139 140 175
;; rd  out 	(90)
11, 23, 32, 39, 40, 47, 48, 121, 151, 152, 766, 771, 772, 773, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 802, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870
;;  UD chains for artificial uses
;;   reg 11 { d40(bb 0 insn -1) }
;;   reg 13 { d48(bb 0 insn -1) }
;;   reg 25 { d151(bb 0 insn -1) }
;;   reg 26 { d152(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 155
;;      reg 175 { d821(bb 2 insn 3) }
;;   UD chains for insn luid 1 uid 158
;;      reg 134 { d766(bb 11 insn 151) }
;;      reg 171 { d819(bb 12 insn 155) }
;;   UD chains for insn luid 2 uid 159
;;      reg 175 { d821(bb 2 insn 3) }
;;   UD chains for insn luid 3 uid 160
;;      reg 138 { d770(bb 12 insn 158) }
;;      reg 233 { d870(bb 12 insn 159) }
;;   UD chains for insn luid 4 uid 161
;;      reg 138 { d771(bb 12 insn 160) }
;;   UD chains for insn luid 5 uid 162
;;      reg 24 { d121(bb 12 insn 161) }

( 12 )->[13]->( 14 15 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u219(11){ d40(bb 0 insn -1) }u220(13){ d48(bb 0 insn -1) }u221(25){ d151(bb 0 insn -1) }u222(26){ d152(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 139 140 175
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140
;; lr  def 	 24 [cc] 235 237 238 239 240 241
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 139 140 175
;; live  gen 	 24 [cc] 235 237 238 239 240 241
;; live  kill	
;; rd  in  	(90)
11, 23, 32, 39, 40, 47, 48, 121, 151, 152, 766, 771, 772, 773, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 802, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870
;; rd  gen 	(7)
118, 871, 872, 873, 874, 875, 876
;; rd  kill	(6)
871, 872, 873, 874, 875, 876
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 175
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 175
;; rd  out 	(96)
11, 23, 32, 39, 40, 47, 48, 118, 151, 152, 766, 771, 772, 773, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 802, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876
;;  UD chains for artificial uses
;;   reg 11 { d40(bb 0 insn -1) }
;;   reg 13 { d48(bb 0 insn -1) }
;;   reg 25 { d151(bb 0 insn -1) }
;;   reg 26 { d152(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 164
;;      reg 140 { d773(bb 12 insn 160) }
;;   UD chains for insn luid 1 uid 165
;;      reg 24 { d120(bb 13 insn 164) }
;;   UD chains for insn luid 3 uid 168
;;      reg 139 { d772(bb 12 insn 158) }
;;      reg 237 { d872(bb 13 insn 167) }
;;   eq_note reg 139 { }
;;   UD chains for insn luid 4 uid 169
;;      reg 24 { d119(bb 13 insn 168) }
;;   UD chains for insn luid 5 uid 171
;;      reg 235 { d871(bb 13 insn 165) }
;;      reg 238 { d873(bb 13 insn 169) }
;;   UD chains for insn luid 6 uid 172
;;      reg 239 { d874(bb 13 insn 171) }
;;   UD chains for insn luid 7 uid 173
;;      reg 240 { d875(bb 13 insn 172) }
;;   UD chains for insn luid 8 uid 174
;;      reg 241 { d876(bb 13 insn 173) }
;;   UD chains for insn luid 9 uid 175
;;      reg 24 { d118(bb 13 insn 174) }

( 13 )->[14]->( 18 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u235(11){ d40(bb 0 insn -1) }u236(13){ d48(bb 0 insn -1) }u237(25){ d151(bb 0 insn -1) }u238(26){ d152(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 134
;; live  kill	
;; rd  in  	(96)
11, 23, 32, 39, 40, 47, 48, 118, 151, 152, 766, 771, 772, 773, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 802, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876
;; rd  gen 	(1)
765
;; rd  kill	(3)
764, 765, 766
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; rd  out 	(96)
11, 23, 32, 39, 40, 47, 48, 118, 151, 152, 765, 771, 772, 773, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 802, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876
;;  UD chains for artificial uses
;;   reg 11 { d40(bb 0 insn -1) }
;;   reg 13 { d48(bb 0 insn -1) }
;;   reg 25 { d151(bb 0 insn -1) }
;;   reg 26 { d152(bb 0 insn -1) }

( 13 )->[15]->( 16 17 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u239(11){ d40(bb 0 insn -1) }u240(13){ d48(bb 0 insn -1) }u241(25){ d151(bb 0 insn -1) }u242(26){ d152(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 175
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 175
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 135 136 137 141 142 143 144 242 243 244 245 246 247 248 249
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 175
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 133 135 136 137 141 142 143 144 242 243 244 245 246 247 248 249
;; live  kill	 14 [lr] 24 [cc]
;; rd  in  	(96)
11, 23, 32, 39, 40, 47, 48, 118, 151, 152, 766, 771, 772, 773, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 802, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876
;; rd  gen 	(18)
4, 113, 760, 767, 768, 769, 774, 775, 776, 777, 877, 878, 879, 880, 881, 882, 883, 884
;; rd  kill	(41)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 49, 50, 51, 52, 53, 54, 55, 759, 760, 761, 762, 763, 767, 768, 769, 774, 775, 776, 777, 877, 878, 879, 880, 881, 882, 883, 884
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 136
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136
;; rd  out 	(112)
4, 23, 32, 39, 40, 47, 48, 113, 151, 152, 760, 766, 767, 768, 769, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 802, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884
;;  UD chains for artificial uses
;;   reg 11 { d40(bb 0 insn -1) }
;;   reg 13 { d48(bb 0 insn -1) }
;;   reg 25 { d151(bb 0 insn -1) }
;;   reg 26 { d152(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 182
;;      reg 13 { d48(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 183
;;      reg 242 { d877(bb 15 insn 182) }
;;   eq_note reg 13 { }
;;   UD chains for insn luid 2 uid 184
;;      reg 136 { d768(bb 15 insn 183) }
;;   UD chains for insn luid 3 uid 185
;;      reg 175 { d821(bb 2 insn 3) }
;;   UD chains for insn luid 4 uid 186
;;      reg 243 { d878(bb 15 insn 184) }
;;   UD chains for insn luid 5 uid 187
;;      reg 244 { d879(bb 15 insn 185) }
;;   UD chains for insn luid 7 uid 189
;;      reg 13 { d48(bb 0 insn -1) }
;;      reg 0 { d5(bb 15 insn 186) }
;;      reg 1 { d17(bb 15 insn 187) }
;;      reg 2 { d26(bb 15 insn 188) }
;;   UD chains for insn luid 8 uid 190
;;      reg 0 { d4(bb 15 insn 189) }
;;   UD chains for insn luid 9 uid 191
;;      reg 135 { d767(bb 15 insn 190) }
;;   UD chains for insn luid 10 uid 192
;;      reg 175 { d821(bb 2 insn 3) }
;;   UD chains for insn luid 11 uid 193
;;      reg 135 { d767(bb 15 insn 190) }
;;      reg 245 { d880(bb 15 insn 192) }
;;   UD chains for insn luid 12 uid 194
;;      reg 136 { d768(bb 15 insn 183) }
;;      reg 141 { d774(bb 15 insn 193) }
;;   UD chains for insn luid 13 uid 195
;;      reg 175 { d821(bb 2 insn 3) }
;;   UD chains for insn luid 14 uid 196
;;      reg 133 { d759(bb 15 insn 193) }
;;      reg 246 { d881(bb 15 insn 195) }
;;   UD chains for insn luid 15 uid 197
;;      reg 142 { d775(bb 15 insn 196) }
;;   UD chains for insn luid 16 uid 198
;;      reg 137 { d769(bb 15 insn 197) }
;;   UD chains for insn luid 17 uid 199
;;      reg 136 { d768(bb 15 insn 183) }
;;      reg 247 { d882(bb 15 insn 198) }
;;   UD chains for insn luid 18 uid 200
;;      reg 175 { d821(bb 2 insn 3) }
;;   UD chains for insn luid 19 uid 201
;;      reg 133 { d762(bb 15 insn 196) }
;;      reg 248 { d883(bb 15 insn 200) }
;;   UD chains for insn luid 20 uid 202
;;      reg 136 { d768(bb 15 insn 183) }
;;      reg 143 { d776(bb 15 insn 201) }
;;   UD chains for insn luid 21 uid 203
;;      reg 175 { d821(bb 2 insn 3) }
;;   UD chains for insn luid 22 uid 204
;;      reg 133 { d761(bb 15 insn 201) }
;;      reg 249 { d884(bb 15 insn 203) }
;;   UD chains for insn luid 23 uid 205
;;      reg 136 { d768(bb 15 insn 183) }
;;      reg 144 { d777(bb 15 insn 204) }
;;   UD chains for insn luid 24 uid 206
;;      reg 133 { d760(bb 15 insn 204) }
;;   UD chains for insn luid 25 uid 207
;;      reg 24 { d113(bb 15 insn 206) }

( 15 )->[16]->( 18 )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u280(11){ d40(bb 0 insn -1) }u281(13){ d48(bb 0 insn -1) }u282(25){ d151(bb 0 insn -1) }u283(26){ d152(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]
;; rd  in  	(112)
4, 23, 32, 39, 40, 47, 48, 113, 151, 152, 760, 766, 767, 768, 769, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 802, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884
;; rd  gen 	(0)

;; rd  kill	(7)
49, 50, 51, 52, 53, 54, 55
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; rd  out 	(112)
4, 23, 32, 39, 40, 47, 48, 113, 151, 152, 760, 766, 767, 768, 769, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 802, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884
;;  UD chains for artificial uses
;;   reg 11 { d40(bb 0 insn -1) }
;;   reg 13 { d48(bb 0 insn -1) }
;;   reg 25 { d151(bb 0 insn -1) }
;;   reg 26 { d152(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 209
;;      reg 136 { d768(bb 15 insn 183) }
;;   UD chains for insn luid 1 uid 210
;;      reg 13 { d48(bb 0 insn -1) }
;;      reg 0 { d3(bb 16 insn 209) }

( 12 15 )->[17]->( 18 )
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u287(11){ d40(bb 0 insn -1) }u288(13){ d48(bb 0 insn -1) }u289(25){ d151(bb 0 insn -1) }u290(26){ d152(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 134
;; live  kill	
;; rd  in  	(114)
4, 11, 23, 32, 39, 40, 47, 48, 113, 121, 151, 152, 760, 766, 767, 768, 769, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 802, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884
;; rd  gen 	(1)
764
;; rd  kill	(3)
764, 765, 766
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; rd  out 	(114)
4, 11, 23, 32, 39, 40, 47, 48, 113, 121, 151, 152, 760, 764, 767, 768, 769, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 802, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884
;;  UD chains for artificial uses
;;   reg 11 { d40(bb 0 insn -1) }
;;   reg 13 { d48(bb 0 insn -1) }
;;   reg 25 { d151(bb 0 insn -1) }
;;   reg 26 { d152(bb 0 insn -1) }

( 11 14 17 16 )->[18]->( 1 )
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u291(11){ d40(bb 0 insn -1) }u292(13){ d48(bb 0 insn -1) }u293(25){ d151(bb 0 insn -1) }u294(26){ d152(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(118)
4, 11, 23, 32, 39, 40, 47, 48, 113, 118, 121, 123, 151, 152, 760, 764, 765, 766, 767, 768, 769, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 802, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884
;; rd  gen 	(1)
0
;; rd  kill	(14)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(117)
0, 23, 32, 39, 40, 47, 48, 113, 118, 121, 123, 151, 152, 760, 764, 765, 766, 767, 768, 769, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 802, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884
;;  UD chains for artificial uses
;;   reg 11 { d40(bb 0 insn -1) }
;;   reg 13 { d48(bb 0 insn -1) }
;;   reg 25 { d151(bb 0 insn -1) }
;;   reg 26 { d152(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 222
;;      reg 134 { d766(bb 11 insn 151) d765(bb 14 insn 177) d764(bb 17 insn 215) }
;;   UD chains for insn luid 1 uid 228
;;      reg 0 { d0(bb 18 insn 222) }

( 18 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u297(0){ d0(bb 18 insn 222) }u298(11){ d40(bb 0 insn -1) }u299(13){ d48(bb 0 insn -1) }u300(14){ }u301(25){ d151(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(117)
0, 23, 32, 39, 40, 47, 48, 113, 118, 121, 123, 151, 152, 760, 764, 765, 766, 767, 768, 769, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 802, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(117)
0, 23, 32, 39, 40, 47, 48, 113, 118, 121, 123, 151, 152, 760, 764, 765, 766, 767, 768, 769, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 802, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884
;;  UD chains for artificial uses
;;   reg 0 { d0(bb 18 insn 222) }
;;   reg 11 { d40(bb 0 insn -1) }
;;   reg 13 { d48(bb 0 insn -1) }
;;   reg 14 { }
;;   reg 25 { d151(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 16 to worklist
  Adding insn 12 to worklist
  Adding insn 48 to worklist
  Adding insn 39 to worklist
  Adding insn 38 to worklist
  Adding insn 30 to worklist
  Adding insn 21 to worklist
  Adding insn 105 to worklist
  Adding insn 102 to worklist
  Adding insn 100 to worklist
  Adding insn 98 to worklist
  Adding insn 97 to worklist
  Adding insn 95 to worklist
  Adding insn 94 to worklist
  Adding insn 92 to worklist
  Adding insn 91 to worklist
  Adding insn 89 to worklist
  Adding insn 88 to worklist
  Adding insn 86 to worklist
  Adding insn 85 to worklist
  Adding insn 83 to worklist
  Adding insn 82 to worklist
  Adding insn 80 to worklist
  Adding insn 79 to worklist
  Adding insn 77 to worklist
  Adding insn 76 to worklist
  Adding insn 74 to worklist
  Adding insn 73 to worklist
  Adding insn 71 to worklist
  Adding insn 70 to worklist
  Adding insn 68 to worklist
  Adding insn 67 to worklist
  Adding insn 65 to worklist
  Adding insn 64 to worklist
  Adding insn 62 to worklist
  Adding insn 61 to worklist
  Adding insn 59 to worklist
  Adding insn 58 to worklist
  Adding insn 56 to worklist
  Adding insn 55 to worklist
  Adding insn 53 to worklist
  Adding insn 52 to worklist
  Adding insn 109 to worklist
  Adding insn 124 to worklist
  Adding insn 133 to worklist
  Adding insn 128 to worklist
  Adding insn 232 to worklist
  Adding insn 234 to worklist
  Adding insn 141 to worklist
  Adding insn 153 to worklist
  Adding insn 162 to worklist
  Adding insn 160 to worklist
  Adding insn 158 to worklist
  Adding insn 175 to worklist
  Adding insn 236 to worklist
  Adding insn 207 to worklist
  Adding insn 205 to worklist
  Adding insn 204 to worklist
  Adding insn 202 to worklist
  Adding insn 201 to worklist
  Adding insn 199 to worklist
  Adding insn 196 to worklist
  Adding insn 194 to worklist
  Adding insn 193 to worklist
  Adding insn 189 to worklist
  Adding insn 238 to worklist
  Adding insn 210 to worklist
  Adding insn 228 to worklist
Finished finding needed instructions:
  Adding insn 222 to worklist
Processing use of (reg 134 [ err.477 ]) in insn 222:
  Adding insn 151 to worklist
  Adding insn 177 to worklist
  Adding insn 215 to worklist
Processing use of (reg 170 [ err ]) in insn 151:
Processing use of (reg 231) in insn 151:
  Adding insn 150 to worklist
Processing use of (reg 149 [ D.26136 ]) in insn 150:
  Adding insn 135 to worklist
  Adding insn 147 to worklist
  Adding insn 142 to worklist
Processing use of (reg 228) in insn 142:
  Adding insn 131 to worklist
Processing use of (reg 229 [ elf_hwcap ]) in insn 131:
  Adding insn 130 to worklist
Processing use of (reg 227) in insn 130:
  Adding insn 129 to worklist
Processing use of (reg 0 r0) in insn 228:
Processing use of (reg 13 sp) in insn 210:
Processing use of (reg 0 r0) in insn 210:
  Adding insn 209 to worklist
Processing use of (reg 136 [ thread ]) in insn 209:
  Adding insn 183 to worklist
Processing use of (reg 242) in insn 183:
  Adding insn 182 to worklist
Processing use of (reg 13 sp) in insn 182:
Processing use of (reg 13 sp) in insn 189:
Processing use of (reg 0 r0) in insn 189:
  Adding insn 186 to worklist
Processing use of (reg 1 r1) in insn 189:
  Adding insn 187 to worklist
Processing use of (reg 2 r2) in insn 189:
  Adding insn 188 to worklist
Processing use of (reg 244) in insn 187:
  Adding insn 185 to worklist
Processing use of (reg 175 [ sf ]) in insn 185:
  Adding insn 3 to worklist
Processing use of (reg 1 r1) in insn 3:
Processing use of (reg 243) in insn 186:
  Adding insn 184 to worklist
Processing use of (reg 136 [ thread ]) in insn 184:
Processing use of (reg 135 [ D.26174 ]) in insn 193:
  Adding insn 190 to worklist
Processing use of (reg 245) in insn 193:
  Adding insn 192 to worklist
Processing use of (reg 175 [ sf ]) in insn 192:
Processing use of (reg 0 r0) in insn 190:
Processing use of (reg 136 [ thread ]) in insn 194:
Processing use of (reg 141 [ __gu_val ]) in insn 194:
Processing use of (reg 133 [ err.480 ]) in insn 196:
Processing use of (reg 246) in insn 196:
  Adding insn 195 to worklist
Processing use of (reg 175 [ sf ]) in insn 195:
Processing use of (reg 136 [ thread ]) in insn 199:
Processing use of (reg 247) in insn 199:
  Adding insn 198 to worklist
Processing use of (reg 137 [ fpexc ]) in insn 198:
  Adding insn 197 to worklist
Processing use of (reg 142 [ __gu_val ]) in insn 197:
Processing use of (reg 133 [ err.480 ]) in insn 201:
Processing use of (reg 248) in insn 201:
  Adding insn 200 to worklist
Processing use of (reg 175 [ sf ]) in insn 200:
Processing use of (reg 136 [ thread ]) in insn 202:
Processing use of (reg 143 [ __gu_val ]) in insn 202:
Processing use of (reg 133 [ err.480 ]) in insn 204:
Processing use of (reg 249) in insn 204:
  Adding insn 203 to worklist
Processing use of (reg 175 [ sf ]) in insn 203:
Processing use of (reg 136 [ thread ]) in insn 205:
Processing use of (reg 144 [ __gu_val ]) in insn 205:
Processing use of (reg 24 cc) in insn 207:
  Adding insn 206 to worklist
Processing use of (reg 133 [ err.480 ]) in insn 206:
Processing use of (reg 24 cc) in insn 175:
  Adding insn 174 to worklist
Processing use of (reg 241) in insn 174:
  Adding insn 173 to worklist
Processing use of (reg 240) in insn 173:
  Adding insn 172 to worklist
Processing use of (subreg (reg 239) 0) in insn 172:
  Adding insn 171 to worklist
Processing use of (reg 235) in insn 171:
  Adding insn 165 to worklist
Processing use of (reg 238) in insn 171:
  Adding insn 169 to worklist
Processing use of (reg 24 cc) in insn 169:
  Adding insn 168 to worklist
Processing use of (reg 139 [ __gu_val ]) in insn 168:
Processing use of (reg 237) in insn 168:
  Adding insn 167 to worklist
Processing use of (reg 24 cc) in insn 165:
  Adding insn 164 to worklist
Processing use of (reg 140 [ __gu_val ]) in insn 164:
Processing use of (reg 134 [ err.477 ]) in insn 158:
Processing use of (reg 171 [ aux ]) in insn 158:
  Adding insn 155 to worklist
Processing use of (reg 175 [ sf ]) in insn 155:
Processing use of (reg 138 [ err ]) in insn 160:
Processing use of (reg 233) in insn 160:
  Adding insn 159 to worklist
Processing use of (reg 175 [ sf ]) in insn 159:
Processing use of (reg 24 cc) in insn 162:
  Adding insn 161 to worklist
Processing use of (reg 138 [ err ]) in insn 161:
Processing use of (reg 24 cc) in insn 153:
  Adding insn 152 to worklist
Processing use of (reg 134 [ err.477 ]) in insn 152:
Processing use of (reg 174 [ regs ]) in insn 141:
  Adding insn 2 to worklist
Processing use of (reg 230) in insn 141:
  Adding insn 140 to worklist
Processing use of (reg 147 [ D.26138 ]) in insn 140:
  Adding insn 127 to worklist
Processing use of (reg 146 [ D.26146 ]) in insn 127:
  Adding insn 101 to worklist
Processing use of (reg 153 [ __gu_val ]) in insn 101:
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 147 [ D.26138 ]) in insn 128:
Processing use of (reg 174 [ regs ]) in insn 128:
Processing use of (reg 24 cc) in insn 133:
  Adding insn 132 to worklist
Processing use of (reg 228) in insn 132:
Processing use of (reg 24 cc) in insn 124:
  Adding insn 123 to worklist
Processing use of (reg 226) in insn 123:
  Adding insn 122 to worklist
Processing use of (reg 225) in insn 122:
  Adding insn 121 to worklist
Processing use of (subreg (reg 224) 0) in insn 121:
  Adding insn 120 to worklist
Processing use of (reg 217) in insn 120:
  Adding insn 112 to worklist
Processing use of (reg 222) in insn 120:
  Adding insn 118 to worklist
Processing use of (reg 219) in insn 118:
  Adding insn 116 to worklist
Processing use of (reg 220 [ elf_hwcap ]) in insn 116:
  Adding insn 115 to worklist
Processing use of (reg 218) in insn 115:
  Adding insn 114 to worklist
Processing use of (reg 24 cc) in insn 112:
  Adding insn 111 to worklist
Processing use of (reg 148 [ mode ]) in insn 111:
  Adding insn 107 to worklist
Processing use of (reg 153 [ __gu_val ]) in insn 107:
Processing use of (reg 24 cc) in insn 109:
  Adding insn 108 to worklist
Processing use of (reg 148 [ mode ]) in insn 108:
Processing use of (reg 170 [ err ]) in insn 52:
  Adding insn 13 to worklist
Processing use of (reg 198) in insn 52:
  Adding insn 51 to worklist
Processing use of (reg 175 [ sf ]) in insn 51:
Processing use of (reg 0 r0) in insn 13:
Processing use of (reg 169 [ __gu_val ]) in insn 53:
Processing use of (reg 174 [ regs ]) in insn 53:
Processing use of (reg 170 [ err ]) in insn 55:
Processing use of (reg 199) in insn 55:
  Adding insn 54 to worklist
Processing use of (reg 175 [ sf ]) in insn 54:
Processing use of (reg 168 [ __gu_val ]) in insn 56:
Processing use of (reg 174 [ regs ]) in insn 56:
Processing use of (reg 170 [ err ]) in insn 58:
Processing use of (reg 200) in insn 58:
  Adding insn 57 to worklist
Processing use of (reg 175 [ sf ]) in insn 57:
Processing use of (reg 167 [ __gu_val ]) in insn 59:
Processing use of (reg 174 [ regs ]) in insn 59:
Processing use of (reg 170 [ err ]) in insn 61:
Processing use of (reg 201) in insn 61:
  Adding insn 60 to worklist
Processing use of (reg 175 [ sf ]) in insn 60:
Processing use of (reg 166 [ __gu_val ]) in insn 62:
Processing use of (reg 174 [ regs ]) in insn 62:
Processing use of (reg 170 [ err ]) in insn 64:
Processing use of (reg 202) in insn 64:
  Adding insn 63 to worklist
Processing use of (reg 175 [ sf ]) in insn 63:
Processing use of (reg 165 [ __gu_val ]) in insn 65:
Processing use of (reg 174 [ regs ]) in insn 65:
Processing use of (reg 170 [ err ]) in insn 67:
Processing use of (reg 203) in insn 67:
  Adding insn 66 to worklist
Processing use of (reg 175 [ sf ]) in insn 66:
Processing use of (reg 164 [ __gu_val ]) in insn 68:
Processing use of (reg 174 [ regs ]) in insn 68:
Processing use of (reg 170 [ err ]) in insn 70:
Processing use of (reg 204) in insn 70:
  Adding insn 69 to worklist
Processing use of (reg 175 [ sf ]) in insn 69:
Processing use of (reg 163 [ __gu_val ]) in insn 71:
Processing use of (reg 174 [ regs ]) in insn 71:
Processing use of (reg 170 [ err ]) in insn 73:
Processing use of (reg 205) in insn 73:
  Adding insn 72 to worklist
Processing use of (reg 175 [ sf ]) in insn 72:
Processing use of (reg 162 [ __gu_val ]) in insn 74:
Processing use of (reg 174 [ regs ]) in insn 74:
Processing use of (reg 170 [ err ]) in insn 76:
Processing use of (reg 206) in insn 76:
  Adding insn 75 to worklist
Processing use of (reg 175 [ sf ]) in insn 75:
Processing use of (reg 161 [ __gu_val ]) in insn 77:
Processing use of (reg 174 [ regs ]) in insn 77:
Processing use of (reg 170 [ err ]) in insn 79:
Processing use of (reg 207) in insn 79:
  Adding insn 78 to worklist
Processing use of (reg 175 [ sf ]) in insn 78:
Processing use of (reg 160 [ __gu_val ]) in insn 80:
Processing use of (reg 174 [ regs ]) in insn 80:
Processing use of (reg 170 [ err ]) in insn 82:
Processing use of (reg 208) in insn 82:
  Adding insn 81 to worklist
Processing use of (reg 175 [ sf ]) in insn 81:
Processing use of (reg 159 [ __gu_val ]) in insn 83:
Processing use of (reg 174 [ regs ]) in insn 83:
Processing use of (reg 170 [ err ]) in insn 85:
Processing use of (reg 209) in insn 85:
  Adding insn 84 to worklist
Processing use of (reg 175 [ sf ]) in insn 84:
Processing use of (reg 158 [ __gu_val ]) in insn 86:
Processing use of (reg 174 [ regs ]) in insn 86:
Processing use of (reg 170 [ err ]) in insn 88:
Processing use of (reg 210) in insn 88:
  Adding insn 87 to worklist
Processing use of (reg 175 [ sf ]) in insn 87:
Processing use of (reg 157 [ __gu_val ]) in insn 89:
Processing use of (reg 174 [ regs ]) in insn 89:
Processing use of (reg 170 [ err ]) in insn 91:
Processing use of (reg 211) in insn 91:
  Adding insn 90 to worklist
Processing use of (reg 175 [ sf ]) in insn 90:
Processing use of (reg 156 [ __gu_val ]) in insn 92:
Processing use of (reg 174 [ regs ]) in insn 92:
Processing use of (reg 170 [ err ]) in insn 94:
Processing use of (reg 212) in insn 94:
  Adding insn 93 to worklist
Processing use of (reg 175 [ sf ]) in insn 93:
Processing use of (reg 155 [ __gu_val ]) in insn 95:
Processing use of (reg 174 [ regs ]) in insn 95:
Processing use of (reg 170 [ err ]) in insn 97:
Processing use of (reg 213) in insn 97:
  Adding insn 96 to worklist
Processing use of (reg 175 [ sf ]) in insn 96:
Processing use of (reg 154 [ __gu_val ]) in insn 98:
Processing use of (reg 174 [ regs ]) in insn 98:
Processing use of (reg 170 [ err ]) in insn 100:
Processing use of (reg 214) in insn 100:
  Adding insn 99 to worklist
Processing use of (reg 175 [ sf ]) in insn 99:
Processing use of (reg 146 [ D.26146 ]) in insn 102:
Processing use of (reg 174 [ regs ]) in insn 102:
Processing use of (reg 24 cc) in insn 105:
  Adding insn 104 to worklist
Processing use of (reg 215) in insn 104:
  Adding insn 103 to worklist
Processing use of (reg 153 [ __gu_val ]) in insn 103:
Processing use of (reg 25 sfp) in insn 21:
Processing use of (reg 179) in insn 21:
  Adding insn 20 to worklist
Processing use of (reg 180) in insn 20:
  Adding insn 19 to worklist
Processing use of (reg 178 [ set.sig ]) in insn 19:
  Adding insn 18 to worklist
Processing use of (reg 25 sfp) in insn 18:
Processing use of (reg 13 sp) in insn 30:
Processing use of (reg 0 r0) in insn 30:
  Adding insn 29 to worklist
Processing use of (reg 184) in insn 29:
  Adding insn 28 to worklist
Processing use of (reg 186) in insn 28:
  Adding insn 27 to worklist
Processing use of (reg 185 [ <variable>.sighand ]) in insn 27:
  Adding insn 26 to worklist
Processing use of (reg 183 [ <variable>.task ]) in insn 26:
  Adding insn 25 to worklist
Processing use of (reg 181) in insn 25:
  Adding insn 24 to worklist
Processing use of (reg 182) in insn 24:
  Adding insn 23 to worklist
Processing use of (reg 13 sp) in insn 23:
Processing use of (reg 0 r0) in insn 38:
  Adding insn 37 to worklist
Processing use of (reg 1 r1) in insn 38:
Processing use of (reg 190) in insn 38:
  Adding insn 35 to worklist
Processing use of (reg 190) in insn 38:
Processing use of (reg 189 [ <variable>.task ]) in insn 35:
  Adding insn 34 to worklist
Processing use of (reg 181) in insn 34:
Processing use of (reg 176) in insn 37:
  Adding insn 7 to worklist
Processing use of (reg 176) in insn 37:
Processing use of (reg 25 sfp) in insn 7:
Processing use of (reg 13 sp) in insn 39:
Processing use of (reg 13 sp) in insn 48:
Processing use of (reg 0 r0) in insn 48:
  Adding insn 47 to worklist
Processing use of (reg 195) in insn 47:
  Adding insn 46 to worklist
Processing use of (reg 197) in insn 46:
  Adding insn 45 to worklist
Processing use of (reg 196 [ <variable>.sighand ]) in insn 45:
  Adding insn 44 to worklist
Processing use of (reg 194 [ <variable>.task ]) in insn 44:
  Adding insn 43 to worklist
Processing use of (reg 181) in insn 43:
Processing use of (reg 13 sp) in insn 12:
Processing use of (reg 0 r0) in insn 12:
  Adding insn 9 to worklist
Processing use of (reg 1 r1) in insn 12:
  Adding insn 10 to worklist
Processing use of (reg 2 r2) in insn 12:
  Adding insn 11 to worklist
Processing use of (reg 177) in insn 10:
  Adding insn 8 to worklist
Processing use of (reg 175 [ sf ]) in insn 8:
Processing use of (reg 176) in insn 9:
Processing use of (reg 24 cc) in insn 16:
  Adding insn 15 to worklist
Processing use of (reg 170 [ err ]) in insn 15:
DCE: Deleting insn 191
deleting insn with uid = 191.


restore_sigframe

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={14d,11u} r1={10d,4u} r2={9d,2u} r3={7d} r11={1d,18u} r12={7d} r13={1d,26u,2d} r14={7d,1u} r15={6d} r16={6d} r17={6d} r18={6d} r19={6d} r20={6d} r21={6d} r22={6d} r23={6d} r24={41d,12u} r25={1d,21u,1d} r26={1d,17u} r27={6d} r28={6d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={6d} r38={6d} r39={6d} r40={6d} r41={6d} r42={6d} r43={6d} r44={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r76={6d} r77={6d} r78={6d} r79={6d} r80={6d} r81={6d} r82={6d} r83={6d} r84={6d} r85={6d} r86={6d} r87={6d} r88={6d} r89={6d} r90={6d} r91={6d} r92={6d} r93={6d} r94={6d} r95={6d} r96={6d} r97={6d} r98={6d} r99={6d} r100={6d} r101={6d} r102={6d} r103={6d} r104={6d} r105={6d} r106={6d} r107={6d} r108={6d} r109={6d} r110={6d} r111={6d} r112={6d} r113={6d} r114={6d} r115={6d} r116={6d} r117={6d} r118={6d} r119={6d} r120={6d} r121={6d} r122={6d} r123={6d} r124={6d} r125={6d} r126={6d} r127={6d} r133={4d,4u} r134={3d,3u} r135={1d,1u} r136={1d,6u} r137={1d,1u} r138={2d,2u} r139={1d,1u,1d} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r146={1d,2u} r147={1d,2u} r148={1d,2u} r149={3d,1u} r153={1d,3u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={18d,19u} r171={1d,1u} r174={1d,19u} r175={1d,25u} r176={1d,3u} r177={1d,1u} r178={1d,1u,1d} r179={1d,1u} r180={1d,1u} r181={1d,3u} r182={1d,1u} r183={1d,1u} r184={1d,1u} r185={1d,1u,1d} r186={1d,1u} r189={1d,1u} r190={1d,2u} r194={1d,1u} r195={1d,1u} r196={1d,1u,1d} r197={1d,1u} r198={1d,1u} r199={1d,1u} r200={1d,1u} r201={1d,1u} r202={1d,1u} r203={1d,1u} r204={1d,1u} r205={1d,1u} r206={1d,1u} r207={1d,1u} r208={1d,1u} r209={1d,1u} r210={1d,1u} r211={1d,1u} r212={1d,1u} r213={1d,1u} r214={1d,1u} r215={1d,1u} r217={1d,1u} r218={1d,1u} r219={1d,1u} r220={1d,1u} r222={1d,1u} r224={1d,1u} r225={1d,1u} r226={1d,1u} r227={1d,1u} r228={1d,2u} r229={1d,1u} r230={1d,1u} r231={1d,1u} r233={1d,1u} r235={1d,1u} r237={1d,1u} r238={1d,1u} r239={1d,1u} r240={1d,1u} r241={1d,1u} r242={1d,1u} r243={1d,1u} r244={1d,1u} r245={1d,1u} r246={1d,1u} r247={1d,1u} r248={1d,1u} r249={1d,1u} 
;;    total ref usage 1185{884d,294u,7e} in 170{164 regular + 6 call} insns.
;; Reaching defs:

  sparse invalidated 	24
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758
0[0,14] 1[14,10] 2[24,9] 3[33,7] 11[40,1] 12[41,7] 13[48,1] 14[49,7] 15[56,6] 16[62,6] 17[68,6] 18[74,6] 19[80,6] 20[86,6] 21[92,6] 22[98,6] 23[104,6] 24[110,41] 25[151,1] 26[152,1] 27[153,6] 28[159,6] 29[165,6] 30[171,6] 31[177,6] 32[183,6] 33[189,6] 34[195,6] 35[201,6] 36[207,6] 37[213,6] 38[219,6] 39[225,6] 40[231,6] 41[237,6] 42[243,6] 43[249,6] 44[255,6] 45[261,6] 46[267,6] 47[273,6] 48[279,6] 49[285,6] 50[291,6] 51[297,6] 52[303,6] 53[309,6] 54[315,6] 55[321,6] 56[327,6] 57[333,6] 58[339,6] 59[345,6] 60[351,6] 61[357,6] 62[363,6] 63[369,6] 64[375,6] 65[381,6] 66[387,6] 67[393,6] 68[399,6] 69[405,6] 70[411,6] 71[417,6] 72[423,6] 73[429,6] 74[435,6] 75[441,6] 76[447,6] 77[453,6] 78[459,6] 79[465,6] 80[471,6] 81[477,6] 82[483,6] 83[489,6] 84[495,6] 85[501,6] 86[507,6] 87[513,6] 88[519,6] 89[525,6] 90[531,6] 91[537,6] 92[543,6] 93[549,6] 94[555,6] 95[561,6] 96[567,6] 97[573,6] 98[579,6] 99[585,6] 100[591,6] 101[597,6] 102[603,6] 103[609,6] 104[615,6] 105[621,6] 106[627,6] 107[633,6] 108[639,6] 109[645,6] 110[651,6] 111[657,6] 112[663,6] 113[669,6] 114[675,6] 115[681,6] 116[687,6] 117[693,6] 118[699,6] 119[705,6] 120[711,6] 121[717,6] 122[723,6] 123[729,6] 124[735,6] 125[741,6] 126[747,6] 127[753,6] 133[759,5] 134[764,3] 135[767,1] 136[768,1] 137[769,1] 138[770,2] 139[772,1] 140[773,1] 141[774,1] 142[775,1] 143[776,1] 144[777,1] 146[778,1] 147[779,1] 148[780,1] 149[781,3] 153[784,1] 154[785,1] 155[786,1] 156[787,1] 157[788,1] 158[789,1] 159[790,1] 160[791,1] 161[792,1] 162[793,1] 163[794,1] 164[795,1] 165[796,1] 166[797,1] 167[798,1] 168[799,1] 169[800,1] 170[801,18] 171[819,1] 174[820,1] 175[821,1] 176[822,1] 177[823,1] 178[824,1] 179[825,1] 180[826,1] 181[827,1] 182[828,1] 183[829,1] 184[830,1] 185[831,1] 186[832,1] 189[833,1] 190[834,1] 194[835,1] 195[836,1] 196[837,1] 197[838,1] 198[839,1] 199[840,1] 200[841,1] 201[842,1] 202[843,1] 203[844,1] 204[845,1] 205[846,1] 206[847,1] 207[848,1] 208[849,1] 209[850,1] 210[851,1] 211[852,1] 212[853,1] 213[854,1] 214[855,1] 215[856,1] 217[857,1] 218[858,1] 219[859,1] 220[860,1] 222[861,1] 224[862,1] 225[863,1] 226[864,1] 227[865,1] 228[866,1] 229[867,1] 230[868,1] 231[869,1] 233[870,1] 235[871,1] 237[872,1] 238[873,1] 239[874,1] 240[875,1] 241[876,1] 242[877,1] 243[878,1] 244[879,1] 245[880,1] 246[881,1] 247[882,1] 248[883,1] 249[884,1] 
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 170 174 175 176 177
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 170 174 175 176 177
;; live  kill	 14 [lr]
;; rd  in  	(10)
13, 23, 32, 39, 40, 47, 48, 55, 151, 152
;; rd  gen 	(7)
11, 149, 801, 820, 821, 822, 823
;; rd  kill	(43)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 49, 50, 51, 52, 53, 54, 55, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 820, 821, 822, 823

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 5 3 2 arch/arm/kernel/signal.c:276 (set (reg/v/f:SI 174 [ regs ])
        (reg:SI 0 r0 [ regs ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ regs ])
        (nil)))

(insn 3 2 4 2 arch/arm/kernel/signal.c:276 (set (reg/v/f:SI 175 [ sf ])
        (reg:SI 1 r1 [ sf ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ sf ])
        (nil)))

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 8 2 arch/arm/kernel/signal.c:281 (set (reg/f:SI 176)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -8 [0xfffffffffffffff8]))) 4 {*arm_addsi3} (nil))

(insn 8 7 9 2 arch/arm/kernel/signal.c:281 (set (reg/f:SI 177)
        (plus:SI (reg/v/f:SI 175 [ sf ])
            (const_int 104 [0x68]))) 4 {*arm_addsi3} (nil))

(insn 9 8 10 2 arch/arm/kernel/signal.c:281 (set (reg:SI 0 r0)
        (reg/f:SI 176)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -8 [0xfffffffffffffff8]))
        (nil)))

(insn 10 9 11 2 arch/arm/kernel/signal.c:281 (set (reg:SI 1 r1)
        (reg/f:SI 177)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 177)
        (nil)))

(insn 11 10 12 2 arch/arm/kernel/signal.c:281 (set (reg:SI 2 r2)
        (const_int 8 [0x8])) 167 {*arm_movsi_insn} (nil))

(call_insn 12 11 13 2 arch/arm/kernel/signal.c:281 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__copy_from_user") [flags 0x41] <function_decl 0x10f3de80 __copy_from_user>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 13 12 15 2 arch/arm/kernel/signal.c:281 (set (reg/v:SI 170 [ err ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 15 13 16 2 arch/arm/kernel/signal.c:282 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 170 [ err ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 16 15 17 2 arch/arm/kernel/signal.c:282 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 49)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 170 174 175 176
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 170 174 175 176
;; rd  out 	(15)
11, 23, 32, 39, 40, 47, 48, 149, 151, 152, 801, 820, 821, 822, 823


;; Succ edge  3 [29.0%]  (fallthru)
;; Succ edge  4 [71.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u18(11){ }u19(13){ }u20(25){ }u21(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 170 174 175 176
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 176
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 178 179 180 181 182 183 184 185 186 189 190 194 195 196 197
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 170 174 175 176
;; live  gen 	 0 [r0] 1 [r1] 178 179 180 181 182 183 184 185 186 189 190 194 195 196 197
;; live  kill	 14 [lr]
;; rd  in  	(15)
11, 23, 32, 39, 40, 47, 48, 149, 151, 152, 801, 820, 821, 822, 823
;; rd  gen 	(15)
824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838
;; rd  kill	(22)
49, 50, 51, 52, 53, 54, 55, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838

;; Pred edge  2 [29.0%]  (fallthru)
(note 17 16 18 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 18 17 19 3 include/linux/signal.h:191 (set (reg:SI 178 [ set.sig ])
        (mem/s/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0 set.sig+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 19 18 20 3 include/linux/signal.h:191 (set (reg:SI 180)
        (and:SI (reg:SI 178 [ set.sig ])
            (const_int -262145 [0xfffffffffffbffff]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 178 [ set.sig ])
        (nil)))

(insn 20 19 21 3 include/linux/signal.h:191 (set (reg:SI 179)
        (and:SI (reg:SI 180)
            (const_int -257 [0xfffffffffffffeff]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 180)
        (expr_list:REG_EQUAL (and:SI (reg:SI 178 [ set.sig ])
                (const_int -262401 [0xfffffffffffbfeff]))
            (nil))))

(insn 21 20 23 3 include/linux/signal.h:191 (set (mem/s/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0 set.sig+0 S4 A64])
        (reg:SI 179)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 179)
        (nil)))

(insn 23 21 24 3 include/linux/spinlock.h:310 (set (reg:SI 182)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 24 23 25 3 include/linux/spinlock.h:310 (set (reg:SI 181)
        (and:SI (reg:SI 182)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 182)
        (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
                (const_int -8192 [0xffffffffffffe000]))
            (nil))))

(insn 25 24 26 3 include/linux/spinlock.h:310 (set (reg/f:SI 183 [ <variable>.task ])
        (mem/s/f/j:SI (plus:SI (reg:SI 181)
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 26 25 27 3 include/linux/spinlock.h:310 (set (reg/f:SI 185 [ <variable>.sighand ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 183 [ <variable>.task ])
                (const_int 940 [0x3ac])) [0 <variable>.sighand+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 183 [ <variable>.task ])
        (nil)))

(insn 27 26 28 3 include/linux/spinlock.h:310 (set (reg/f:SI 186)
        (plus:SI (reg/f:SI 185 [ <variable>.sighand ])
            (const_int 1280 [0x500]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 185 [ <variable>.sighand ])
        (nil)))

(insn 28 27 29 3 include/linux/spinlock.h:310 (set (reg/f:SI 184)
        (plus:SI (reg/f:SI 186)
            (const_int 4 [0x4]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 186)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 185 [ <variable>.sighand ])
                (const_int 1284 [0x504]))
            (nil))))

(insn 29 28 30 3 include/linux/spinlock.h:310 (set (reg:SI 0 r0)
        (reg/f:SI 184)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 184)
        (nil)))

(call_insn 30 29 34 3 include/linux/spinlock.h:310 (parallel [
            (call (mem:SI (symbol_ref:SI ("_raw_spin_lock_irq") [flags 0x41] <function_decl 0x10b48280 _raw_spin_lock_irq>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 34 30 35 3 arch/arm/kernel/signal.c:285 (set (reg/f:SI 189 [ <variable>.task ])
        (mem/s/f/j:SI (plus:SI (reg:SI 181)
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 35 34 37 3 arch/arm/kernel/signal.c:285 (set (reg/f:SI 190)
        (plus:SI (reg/f:SI 189 [ <variable>.task ])
            (const_int 944 [0x3b0]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 189 [ <variable>.task ])
        (nil)))

(insn 37 35 38 3 arch/arm/kernel/signal.c:285 (parallel [
            (set (reg:SI 0 r0)
                (mem/s/c:SI (reg/f:SI 176) [0 set+0 S4 A64]))
            (set (reg:SI 1 r1)
                (mem/s/c:SI (plus:SI (reg/f:SI 176)
                        (const_int 4 [0x4])) [0 set+4 S4 A32]))
        ]) 190 {*ldmsi2} (expr_list:REG_DEAD (reg/f:SI 176)
        (nil)))

(insn 38 37 39 3 arch/arm/kernel/signal.c:285 (parallel [
            (set (mem/s/j:SI (reg/f:SI 190) [0 <variable>.blocked+0 S4 A64])
                (reg:SI 0 r0))
            (set (mem/s/j:SI (plus:SI (reg/f:SI 190)
                        (const_int 4 [0x4])) [0 <variable>.blocked+4 S4 A32])
                (reg:SI 1 r1))
        ]) 197 {*stmsi2} (expr_list:REG_DEAD (reg/f:SI 190)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_DEAD (reg:SI 0 r0)
                (nil)))))

(call_insn 39 38 43 3 arch/arm/kernel/signal.c:286 (parallel [
            (call (mem:SI (symbol_ref:SI ("recalc_sigpending") [flags 0x41] <function_decl 0x10f2c680 recalc_sigpending>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(insn 43 39 44 3 include/linux/spinlock.h:335 (set (reg/f:SI 194 [ <variable>.task ])
        (mem/s/f/j:SI (plus:SI (reg:SI 181)
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 181)
        (nil)))

(insn 44 43 45 3 include/linux/spinlock.h:335 (set (reg/f:SI 196 [ <variable>.sighand ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 194 [ <variable>.task ])
                (const_int 940 [0x3ac])) [0 <variable>.sighand+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 194 [ <variable>.task ])
        (nil)))

(insn 45 44 46 3 include/linux/spinlock.h:335 (set (reg/f:SI 197)
        (plus:SI (reg/f:SI 196 [ <variable>.sighand ])
            (const_int 1280 [0x500]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 196 [ <variable>.sighand ])
        (nil)))

(insn 46 45 47 3 include/linux/spinlock.h:335 (set (reg/f:SI 195)
        (plus:SI (reg/f:SI 197)
            (const_int 4 [0x4]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 197)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 196 [ <variable>.sighand ])
                (const_int 1284 [0x504]))
            (nil))))

(insn 47 46 48 3 include/linux/spinlock.h:335 (set (reg:SI 0 r0)
        (reg/f:SI 195)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 195)
        (nil)))

(call_insn 48 47 49 3 include/linux/spinlock.h:335 (parallel [
            (call (mem:SI (symbol_ref:SI ("_raw_spin_unlock_irq") [flags 0x41] <function_decl 0x10b48600 _raw_spin_unlock_irq>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 170 174 175
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 170 174 175
;; rd  out 	(30)
11, 23, 32, 39, 40, 47, 48, 149, 151, 152, 801, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u56(11){ }u57(13){ }u58(25){ }u59(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 170 174 175
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 170 174 175
;; lr  def 	 24 [cc] 146 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 170 174 175
;; live  gen 	 24 [cc] 146 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215
;; live  kill	 24 [cc]
;; rd  in  	(30)
11, 23, 32, 39, 40, 47, 48, 149, 151, 152, 801, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838
;; rd  gen 	(38)
128, 778, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 802, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856
;; rd  kill	(54)
778, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856

;; Pred edge  2 [71.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 49 48 50 4 66 "" [1 uses])

(note 50 49 51 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 51 50 52 4 arch/arm/kernel/signal.c:290 discrim 4 (set (reg/f:SI 198)
        (plus:SI (reg/v/f:SI 175 [ sf ])
            (const_int 32 [0x20]))) 4 {*arm_addsi3} (nil))

(insn 52 51 53 4 arch/arm/kernel/signal.c:290 discrim 4 (parallel [
            (set (reg/v:SI 170 [ err ])
                (asm_operands/v:SI ("1:	ldr	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg/f:SI 198)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 170 [ err ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691028))
            (set (reg/v:SI 169 [ __gu_val ])
                (asm_operands/v:SI ("1:	ldr	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=&r") 1 [
                        (reg/f:SI 198)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 170 [ err ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691028))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/f:SI 198)
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))

(insn 53 52 54 4 arch/arm/kernel/signal.c:290 discrim 5 (set (mem/s/j:SI (reg/v/f:SI 174 [ regs ]) [0 <variable>.uregs+0 S4 A32])
        (reg/v:SI 169 [ __gu_val ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 169 [ __gu_val ])
        (nil)))

(insn 54 53 55 4 arch/arm/kernel/signal.c:291 discrim 4 (set (reg/f:SI 199)
        (plus:SI (reg/v/f:SI 175 [ sf ])
            (const_int 36 [0x24]))) 4 {*arm_addsi3} (nil))

(insn 55 54 56 4 arch/arm/kernel/signal.c:291 discrim 4 (parallel [
            (set (reg/v:SI 170 [ err ])
                (asm_operands/v:SI ("1:	ldr	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg/f:SI 199)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 170 [ err ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691033))
            (set (reg/v:SI 168 [ __gu_val ])
                (asm_operands/v:SI ("1:	ldr	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=&r") 1 [
                        (reg/f:SI 199)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 170 [ err ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691033))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/f:SI 199)
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))

(insn 56 55 57 4 arch/arm/kernel/signal.c:291 discrim 5 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 174 [ regs ])
                (const_int 4 [0x4])) [0 <variable>.uregs+4 S4 A32])
        (reg/v:SI 168 [ __gu_val ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 168 [ __gu_val ])
        (nil)))

(insn 57 56 58 4 arch/arm/kernel/signal.c:292 discrim 4 (set (reg/f:SI 200)
        (plus:SI (reg/v/f:SI 175 [ sf ])
            (const_int 40 [0x28]))) 4 {*arm_addsi3} (nil))

(insn 58 57 59 4 arch/arm/kernel/signal.c:292 discrim 4 (parallel [
            (set (reg/v:SI 170 [ err ])
                (asm_operands/v:SI ("1:	ldr	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg/f:SI 200)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 170 [ err ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691038))
            (set (reg/v:SI 167 [ __gu_val ])
                (asm_operands/v:SI ("1:	ldr	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=&r") 1 [
                        (reg/f:SI 200)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 170 [ err ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691038))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/f:SI 200)
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))

(insn 59 58 60 4 arch/arm/kernel/signal.c:292 discrim 5 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 174 [ regs ])
                (const_int 8 [0x8])) [0 <variable>.uregs+8 S4 A32])
        (reg/v:SI 167 [ __gu_val ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 167 [ __gu_val ])
        (nil)))

(insn 60 59 61 4 arch/arm/kernel/signal.c:293 discrim 4 (set (reg/f:SI 201)
        (plus:SI (reg/v/f:SI 175 [ sf ])
            (const_int 44 [0x2c]))) 4 {*arm_addsi3} (nil))

(insn 61 60 62 4 arch/arm/kernel/signal.c:293 discrim 4 (parallel [
            (set (reg/v:SI 170 [ err ])
                (asm_operands/v:SI ("1:	ldr	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg/f:SI 201)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 170 [ err ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691043))
            (set (reg/v:SI 166 [ __gu_val ])
                (asm_operands/v:SI ("1:	ldr	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=&r") 1 [
                        (reg/f:SI 201)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 170 [ err ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691043))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/f:SI 201)
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))

(insn 62 61 63 4 arch/arm/kernel/signal.c:293 discrim 5 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 174 [ regs ])
                (const_int 12 [0xc])) [0 <variable>.uregs+12 S4 A32])
        (reg/v:SI 166 [ __gu_val ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 166 [ __gu_val ])
        (nil)))

(insn 63 62 64 4 arch/arm/kernel/signal.c:294 discrim 4 (set (reg/f:SI 202)
        (plus:SI (reg/v/f:SI 175 [ sf ])
            (const_int 48 [0x30]))) 4 {*arm_addsi3} (nil))

(insn 64 63 65 4 arch/arm/kernel/signal.c:294 discrim 4 (parallel [
            (set (reg/v:SI 170 [ err ])
                (asm_operands/v:SI ("1:	ldr	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg/f:SI 202)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 170 [ err ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691048))
            (set (reg/v:SI 165 [ __gu_val ])
                (asm_operands/v:SI ("1:	ldr	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=&r") 1 [
                        (reg/f:SI 202)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 170 [ err ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691048))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/f:SI 202)
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))

(insn 65 64 66 4 arch/arm/kernel/signal.c:294 discrim 5 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 174 [ regs ])
                (const_int 16 [0x10])) [0 <variable>.uregs+16 S4 A32])
        (reg/v:SI 165 [ __gu_val ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 165 [ __gu_val ])
        (nil)))

(insn 66 65 67 4 arch/arm/kernel/signal.c:295 discrim 4 (set (reg/f:SI 203)
        (plus:SI (reg/v/f:SI 175 [ sf ])
            (const_int 52 [0x34]))) 4 {*arm_addsi3} (nil))

(insn 67 66 68 4 arch/arm/kernel/signal.c:295 discrim 4 (parallel [
            (set (reg/v:SI 170 [ err ])
                (asm_operands/v:SI ("1:	ldr	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg/f:SI 203)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 170 [ err ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691053))
            (set (reg/v:SI 164 [ __gu_val ])
                (asm_operands/v:SI ("1:	ldr	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=&r") 1 [
                        (reg/f:SI 203)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 170 [ err ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691053))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/f:SI 203)
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))

(insn 68 67 69 4 arch/arm/kernel/signal.c:295 discrim 5 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 174 [ regs ])
                (const_int 20 [0x14])) [0 <variable>.uregs+20 S4 A32])
        (reg/v:SI 164 [ __gu_val ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 164 [ __gu_val ])
        (nil)))

(insn 69 68 70 4 arch/arm/kernel/signal.c:296 discrim 4 (set (reg/f:SI 204)
        (plus:SI (reg/v/f:SI 175 [ sf ])
            (const_int 56 [0x38]))) 4 {*arm_addsi3} (nil))

(insn 70 69 71 4 arch/arm/kernel/signal.c:296 discrim 4 (parallel [
            (set (reg/v:SI 170 [ err ])
                (asm_operands/v:SI ("1:	ldr	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg/f:SI 204)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 170 [ err ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691058))
            (set (reg/v:SI 163 [ __gu_val ])
                (asm_operands/v:SI ("1:	ldr	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=&r") 1 [
                        (reg/f:SI 204)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 170 [ err ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691058))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/f:SI 204)
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))

(insn 71 70 72 4 arch/arm/kernel/signal.c:296 discrim 5 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 174 [ regs ])
                (const_int 24 [0x18])) [0 <variable>.uregs+24 S4 A32])
        (reg/v:SI 163 [ __gu_val ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 163 [ __gu_val ])
        (nil)))

(insn 72 71 73 4 arch/arm/kernel/signal.c:297 discrim 4 (set (reg/f:SI 205)
        (plus:SI (reg/v/f:SI 175 [ sf ])
            (const_int 60 [0x3c]))) 4 {*arm_addsi3} (nil))

(insn 73 72 74 4 arch/arm/kernel/signal.c:297 discrim 4 (parallel [
            (set (reg/v:SI 170 [ err ])
                (asm_operands/v:SI ("1:	ldr	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg/f:SI 205)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 170 [ err ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691063))
            (set (reg/v:SI 162 [ __gu_val ])
                (asm_operands/v:SI ("1:	ldr	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=&r") 1 [
                        (reg/f:SI 205)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 170 [ err ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691063))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/f:SI 205)
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))

(insn 74 73 75 4 arch/arm/kernel/signal.c:297 discrim 5 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 174 [ regs ])
                (const_int 28 [0x1c])) [0 <variable>.uregs+28 S4 A32])
        (reg/v:SI 162 [ __gu_val ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 162 [ __gu_val ])
        (nil)))

(insn 75 74 76 4 arch/arm/kernel/signal.c:298 discrim 4 (set (reg/f:SI 206)
        (plus:SI (reg/v/f:SI 175 [ sf ])
            (const_int 64 [0x40]))) 4 {*arm_addsi3} (nil))

(insn 76 75 77 4 arch/arm/kernel/signal.c:298 discrim 4 (parallel [
            (set (reg/v:SI 170 [ err ])
                (asm_operands/v:SI ("1:	ldr	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg/f:SI 206)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 170 [ err ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691068))
            (set (reg/v:SI 161 [ __gu_val ])
                (asm_operands/v:SI ("1:	ldr	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=&r") 1 [
                        (reg/f:SI 206)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 170 [ err ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691068))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/f:SI 206)
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))

(insn 77 76 78 4 arch/arm/kernel/signal.c:298 discrim 5 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 174 [ regs ])
                (const_int 32 [0x20])) [0 <variable>.uregs+32 S4 A32])
        (reg/v:SI 161 [ __gu_val ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 161 [ __gu_val ])
        (nil)))

(insn 78 77 79 4 arch/arm/kernel/signal.c:299 discrim 4 (set (reg/f:SI 207)
        (plus:SI (reg/v/f:SI 175 [ sf ])
            (const_int 68 [0x44]))) 4 {*arm_addsi3} (nil))

(insn 79 78 80 4 arch/arm/kernel/signal.c:299 discrim 4 (parallel [
            (set (reg/v:SI 170 [ err ])
                (asm_operands/v:SI ("1:	ldr	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg/f:SI 207)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 170 [ err ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691073))
            (set (reg/v:SI 160 [ __gu_val ])
                (asm_operands/v:SI ("1:	ldr	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=&r") 1 [
                        (reg/f:SI 207)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 170 [ err ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691073))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/f:SI 207)
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))

(insn 80 79 81 4 arch/arm/kernel/signal.c:299 discrim 5 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 174 [ regs ])
                (const_int 36 [0x24])) [0 <variable>.uregs+36 S4 A32])
        (reg/v:SI 160 [ __gu_val ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 160 [ __gu_val ])
        (nil)))

(insn 81 80 82 4 arch/arm/kernel/signal.c:300 discrim 4 (set (reg/f:SI 208)
        (plus:SI (reg/v/f:SI 175 [ sf ])
            (const_int 72 [0x48]))) 4 {*arm_addsi3} (nil))

(insn 82 81 83 4 arch/arm/kernel/signal.c:300 discrim 4 (parallel [
            (set (reg/v:SI 170 [ err ])
                (asm_operands/v:SI ("1:	ldr	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg/f:SI 208)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 170 [ err ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691078))
            (set (reg/v:SI 159 [ __gu_val ])
                (asm_operands/v:SI ("1:	ldr	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=&r") 1 [
                        (reg/f:SI 208)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 170 [ err ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691078))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/f:SI 208)
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))

(insn 83 82 84 4 arch/arm/kernel/signal.c:300 discrim 5 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 174 [ regs ])
                (const_int 40 [0x28])) [0 <variable>.uregs+40 S4 A32])
        (reg/v:SI 159 [ __gu_val ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 159 [ __gu_val ])
        (nil)))

(insn 84 83 85 4 arch/arm/kernel/signal.c:301 discrim 4 (set (reg/f:SI 209)
        (plus:SI (reg/v/f:SI 175 [ sf ])
            (const_int 76 [0x4c]))) 4 {*arm_addsi3} (nil))

(insn 85 84 86 4 arch/arm/kernel/signal.c:301 discrim 4 (parallel [
            (set (reg/v:SI 170 [ err ])
                (asm_operands/v:SI ("1:	ldr	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg/f:SI 209)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 170 [ err ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691083))
            (set (reg/v:SI 158 [ __gu_val ])
                (asm_operands/v:SI ("1:	ldr	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=&r") 1 [
                        (reg/f:SI 209)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 170 [ err ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691083))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/f:SI 209)
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))

(insn 86 85 87 4 arch/arm/kernel/signal.c:301 discrim 5 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 174 [ regs ])
                (const_int 44 [0x2c])) [0 <variable>.uregs+44 S4 A32])
        (reg/v:SI 158 [ __gu_val ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 158 [ __gu_val ])
        (nil)))

(insn 87 86 88 4 arch/arm/kernel/signal.c:302 discrim 4 (set (reg/f:SI 210)
        (plus:SI (reg/v/f:SI 175 [ sf ])
            (const_int 80 [0x50]))) 4 {*arm_addsi3} (nil))

(insn 88 87 89 4 arch/arm/kernel/signal.c:302 discrim 4 (parallel [
            (set (reg/v:SI 170 [ err ])
                (asm_operands/v:SI ("1:	ldr	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg/f:SI 210)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 170 [ err ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691088))
            (set (reg/v:SI 157 [ __gu_val ])
                (asm_operands/v:SI ("1:	ldr	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=&r") 1 [
                        (reg/f:SI 210)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 170 [ err ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691088))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/f:SI 210)
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))

(insn 89 88 90 4 arch/arm/kernel/signal.c:302 discrim 5 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 174 [ regs ])
                (const_int 48 [0x30])) [0 <variable>.uregs+48 S4 A32])
        (reg/v:SI 157 [ __gu_val ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 157 [ __gu_val ])
        (nil)))

(insn 90 89 91 4 arch/arm/kernel/signal.c:303 discrim 4 (set (reg/f:SI 211)
        (plus:SI (reg/v/f:SI 175 [ sf ])
            (const_int 84 [0x54]))) 4 {*arm_addsi3} (nil))

(insn 91 90 92 4 arch/arm/kernel/signal.c:303 discrim 4 (parallel [
            (set (reg/v:SI 170 [ err ])
                (asm_operands/v:SI ("1:	ldr	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg/f:SI 211)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 170 [ err ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691093))
            (set (reg/v:SI 156 [ __gu_val ])
                (asm_operands/v:SI ("1:	ldr	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=&r") 1 [
                        (reg/f:SI 211)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 170 [ err ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691093))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/f:SI 211)
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))

(insn 92 91 93 4 arch/arm/kernel/signal.c:303 discrim 5 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 174 [ regs ])
                (const_int 52 [0x34])) [0 <variable>.uregs+52 S4 A32])
        (reg/v:SI 156 [ __gu_val ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 156 [ __gu_val ])
        (nil)))

(insn 93 92 94 4 arch/arm/kernel/signal.c:304 discrim 4 (set (reg/f:SI 212)
        (plus:SI (reg/v/f:SI 175 [ sf ])
            (const_int 88 [0x58]))) 4 {*arm_addsi3} (nil))

(insn 94 93 95 4 arch/arm/kernel/signal.c:304 discrim 4 (parallel [
            (set (reg/v:SI 170 [ err ])
                (asm_operands/v:SI ("1:	ldr	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg/f:SI 212)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 170 [ err ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691098))
            (set (reg/v:SI 155 [ __gu_val ])
                (asm_operands/v:SI ("1:	ldr	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=&r") 1 [
                        (reg/f:SI 212)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 170 [ err ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691098))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/f:SI 212)
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))

(insn 95 94 96 4 arch/arm/kernel/signal.c:304 discrim 5 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 174 [ regs ])
                (const_int 56 [0x38])) [0 <variable>.uregs+56 S4 A32])
        (reg/v:SI 155 [ __gu_val ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 155 [ __gu_val ])
        (nil)))

(insn 96 95 97 4 arch/arm/kernel/signal.c:305 discrim 4 (set (reg/f:SI 213)
        (plus:SI (reg/v/f:SI 175 [ sf ])
            (const_int 92 [0x5c]))) 4 {*arm_addsi3} (nil))

(insn 97 96 98 4 arch/arm/kernel/signal.c:305 discrim 4 (parallel [
            (set (reg/v:SI 170 [ err ])
                (asm_operands/v:SI ("1:	ldr	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg/f:SI 213)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 170 [ err ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691103))
            (set (reg/v:SI 154 [ __gu_val ])
                (asm_operands/v:SI ("1:	ldr	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=&r") 1 [
                        (reg/f:SI 213)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 170 [ err ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691103))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/f:SI 213)
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))

(insn 98 97 99 4 arch/arm/kernel/signal.c:305 discrim 5 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 174 [ regs ])
                (const_int 60 [0x3c])) [0 <variable>.uregs+60 S4 A32])
        (reg/v:SI 154 [ __gu_val ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 154 [ __gu_val ])
        (nil)))

(insn 99 98 100 4 arch/arm/kernel/signal.c:306 discrim 4 (set (reg/f:SI 214)
        (plus:SI (reg/v/f:SI 175 [ sf ])
            (const_int 96 [0x60]))) 4 {*arm_addsi3} (nil))

(insn 100 99 101 4 arch/arm/kernel/signal.c:306 discrim 4 (parallel [
            (set (reg/v:SI 170 [ err ])
                (asm_operands/v:SI ("1:	ldr	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg/f:SI 214)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 170 [ err ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691108))
            (set (reg/v:SI 153 [ __gu_val ])
                (asm_operands/v:SI ("1:	ldr	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=&r") 1 [
                        (reg/f:SI 214)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 170 [ err ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691108))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/f:SI 214)
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))

(insn 101 100 102 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:173 (set (reg:SI 146 [ D.26146 ])
        (and:SI (reg/v:SI 153 [ __gu_val ])
            (const_int -321 [0xfffffffffffffebf]))) 67 {*arm_andsi3_insn} (nil))

(insn 102 101 103 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:173 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 174 [ regs ])
                (const_int 64 [0x40])) [0 <variable>.uregs+64 S4 A32])
        (reg:SI 146 [ D.26146 ])) 167 {*arm_movsi_insn} (nil))

(insn 103 102 104 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:175 (set (reg:SI 215)
        (and:SI (reg/v:SI 153 [ __gu_val ])
            (const_int 128 [0x80]))) 67 {*arm_andsi3_insn} (nil))

(insn 104 103 105 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:175 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 215)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 215)
        (nil)))

(jump_insn 105 104 106 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:175 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 125)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 4 -> ( 5 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 153 170 174 175
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 153 170 174 175
;; rd  out 	(66)
11, 23, 32, 39, 40, 47, 48, 128, 151, 152, 778, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 802, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856


;; Succ edge  5 [50.0%]  (fallthru)
;; Succ edge  7 [50.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u149(11){ }u150(13){ }u151(25){ }u152(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 153 170 174 175
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153
;; lr  def 	 24 [cc] 148
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 153 170 174 175
;; live  gen 	 24 [cc] 148
;; live  kill	
;; rd  in  	(66)
11, 23, 32, 39, 40, 47, 48, 128, 151, 152, 778, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 802, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856
;; rd  gen 	(2)
127, 780
;; rd  kill	(1)
780

;; Pred edge  4 [50.0%]  (fallthru)
(note 106 105 107 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 107 106 108 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:168 (set (reg/v:SI 148 [ mode ])
        (and:SI (reg/v:SI 153 [ __gu_val ])
            (const_int 31 [0x1f]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg/v:SI 153 [ __gu_val ])
        (nil)))

(insn 108 107 109 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:176 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 148 [ mode ])
            (const_int 16 [0x10]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 109 108 110 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:176 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 145)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2800 [0xaf0])
            (nil))))
;; End of basic block 5 -> ( 10 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 148 170 174 175
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 148 170 174 175
;; rd  out 	(67)
11, 23, 32, 39, 40, 47, 48, 127, 151, 152, 778, 780, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 802, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856


;; Succ edge  10 [28.0%] 
;; Succ edge  6 [72.0%]  (fallthru)

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u156(11){ }u157(13){ }u158(25){ }u159(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 148 170 174 175
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148
;; lr  def 	 24 [cc] 217 218 219 220 222 224 225 226
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 148 170 174 175
;; live  gen 	 24 [cc] 217 218 219 220 222 224 225 226
;; live  kill	
;; rd  in  	(67)
11, 23, 32, 39, 40, 47, 48, 127, 151, 152, 778, 780, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 802, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856
;; rd  gen 	(9)
125, 857, 858, 859, 860, 861, 862, 863, 864
;; rd  kill	(8)
857, 858, 859, 860, 861, 862, 863, 864

;; Pred edge  5 [72.0%]  (fallthru)
(note 110 109 111 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 111 110 112 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 148 [ mode ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 148 [ mode ])
        (nil)))

(insn 112 111 114 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg:SI 217)
        (eq:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 114 112 115 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg/f:SI 218)
        (symbol_ref:SI ("elf_hwcap") [flags 0xc0] <var_decl 0x512dc3c0 elf_hwcap>)) 167 {*arm_movsi_insn} (nil))

(insn 115 114 116 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg:SI 220 [ elf_hwcap ])
        (mem/c/i:SI (reg/f:SI 218) [0 elf_hwcap+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 218)
        (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("elf_hwcap") [flags 0xc0] <var_decl 0x512dc3c0 elf_hwcap>) [0 elf_hwcap+0 S4 A32])
            (nil))))

(insn 116 115 118 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg:SI 219)
        (lshiftrt:SI (reg:SI 220 [ elf_hwcap ])
            (const_int 3 [0x3]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 220 [ elf_hwcap ])
        (nil)))

(insn 118 116 120 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg:SI 222)
        (and:SI (reg:SI 219)
            (const_int 1 [0x1]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 219)
        (nil)))

(insn 120 118 121 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg:SI 224)
        (and:SI (reg:SI 217)
            (reg:SI 222))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 222)
        (expr_list:REG_DEAD (reg:SI 217)
            (nil))))

(insn 121 120 122 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg:QI 225)
        (subreg:QI (reg:SI 224) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 224)
        (nil)))

(insn 122 121 123 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg:SI 226)
        (zero_extend:SI (reg:QI 225))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 225)
        (nil)))

(insn 123 122 124 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 226)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 226)
        (nil)))

(jump_insn 124 123 125 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 145)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 6 -> ( 10 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 170 174 175
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 170 174 175
;; rd  out 	(75)
11, 23, 32, 39, 40, 47, 48, 125, 151, 152, 778, 780, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 802, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864


;; Succ edge  10 [50.0%] 
;; Succ edge  7 [50.0%]  (fallthru)

;; Start of basic block ( 4 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u171(11){ }u172(13){ }u173(25){ }u174(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 170 174 175
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 174
;; lr  def 	 24 [cc] 147 227 228 229
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 170 174 175
;; live  gen 	 24 [cc] 147 227 228 229
;; live  kill	
;; rd  in  	(76)
11, 23, 32, 39, 40, 47, 48, 125, 128, 151, 152, 778, 780, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 802, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864
;; rd  gen 	(5)
124, 779, 865, 866, 867
;; rd  kill	(4)
779, 865, 866, 867

;; Pred edge  4 [50.0%] 
;; Pred edge  6 [50.0%]  (fallthru)
(code_label 125 124 126 7 67 "" [1 uses])

(note 126 125 127 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 127 126 128 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:185 (set (reg:SI 147 [ D.26138 ])
        (and:SI (reg:SI 146 [ D.26146 ])
            (const_int -208 [0xffffffffffffff30]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 146 [ D.26146 ])
        (nil)))

(insn 128 127 129 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:185 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 174 [ regs ])
                (const_int 64 [0x40])) [0 <variable>.uregs+64 S4 A32])
        (reg:SI 147 [ D.26138 ])) 167 {*arm_movsi_insn} (nil))

(insn 129 128 130 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:186 (set (reg/f:SI 227)
        (symbol_ref:SI ("elf_hwcap") [flags 0xc0] <var_decl 0x512dc3c0 elf_hwcap>)) 167 {*arm_movsi_insn} (nil))

(insn 130 129 131 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:186 (set (reg:SI 229 [ elf_hwcap ])
        (mem/c/i:SI (reg/f:SI 227) [0 elf_hwcap+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 227)
        (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("elf_hwcap") [flags 0xc0] <var_decl 0x512dc3c0 elf_hwcap>) [0 elf_hwcap+0 S4 A32])
            (nil))))

(insn 131 130 132 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:186 (set (reg:SI 228)
        (and:SI (reg:SI 229 [ elf_hwcap ])
            (const_int 8 [0x8]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 229 [ elf_hwcap ])
        (nil)))

(insn 132 131 133 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:186 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 228)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 133 132 134 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:186 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 138)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 7 -> ( 9 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147 170 174 175 228
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 170 174 175 228
;; rd  out 	(79)
11, 23, 32, 39, 40, 47, 48, 124, 151, 152, 778, 779, 780, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 802, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867


;; Succ edge  9 [50.0%] 
;; Succ edge  8 [50.0%]  (fallthru)

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u182(11){ }u183(13){ }u184(25){ }u185(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 170 175
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 149
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 170 175
;; live  gen 	 149
;; live  kill	
;; rd  in  	(79)
11, 23, 32, 39, 40, 47, 48, 124, 151, 152, 778, 779, 780, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 802, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867
;; rd  gen 	(1)
783
;; rd  kill	(3)
781, 782, 783

;; Pred edge  7 [50.0%]  (fallthru)
(note 134 133 135 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 135 134 232 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:189 (set (reg:SI 149 [ D.26136 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(jump_insn 232 135 233 8 (set (pc)
        (label_ref 148)) -1 (nil))
;; End of basic block 8 -> ( 11)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 170 175
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 170 175
;; rd  out 	(80)
11, 23, 32, 39, 40, 47, 48, 124, 151, 152, 778, 779, 780, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 802, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867


;; Succ edge  11 [100.0%] 

(barrier 233 232 138)

;; Start of basic block ( 7) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u186(11){ }u187(13){ }u188(25){ }u189(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147 170 174 175 228
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 174 228
;; lr  def 	 149 230
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 170 174 175 228
;; live  gen 	 149 230
;; live  kill	
;; rd  in  	(79)
11, 23, 32, 39, 40, 47, 48, 124, 151, 152, 778, 779, 780, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 802, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867
;; rd  gen 	(2)
781, 868
;; rd  kill	(4)
781, 782, 783, 868

;; Pred edge  7 [50.0%] 
(code_label 138 233 139 9 69 "" [1 uses])

(note 139 138 140 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 140 139 141 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:187 (set (reg:SI 230)
        (ior:SI (reg:SI 147 [ D.26138 ])
            (const_int 16 [0x10]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 147 [ D.26138 ])
        (nil)))

(insn 141 140 142 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:187 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 174 [ regs ])
                (const_int 64 [0x40])) [0 <variable>.uregs+64 S4 A32])
        (reg:SI 230)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 230)
        (expr_list:REG_DEAD (reg/v/f:SI 174 [ regs ])
            (nil))))

(insn 142 141 234 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:189 (set (reg:SI 149 [ D.26136 ])
        (reg:SI 228)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 228)
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(jump_insn 234 142 235 9 (set (pc)
        (label_ref 148)) -1 (nil))
;; End of basic block 9 -> ( 11)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 170 175
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 170 175
;; rd  out 	(81)
11, 23, 32, 39, 40, 47, 48, 124, 151, 152, 778, 779, 780, 781, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 802, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868


;; Succ edge  11 [100.0%] 

(barrier 235 234 145)

;; Start of basic block ( 5 6) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u194(11){ }u195(13){ }u196(25){ }u197(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 170 175
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 149
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 170 175
;; live  gen 	 149
;; live  kill	
;; rd  in  	(76)
11, 23, 32, 39, 40, 47, 48, 125, 127, 151, 152, 778, 780, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 802, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864
;; rd  gen 	(1)
782
;; rd  kill	(3)
781, 782, 783

;; Pred edge  5 [28.0%] 
;; Pred edge  6 [50.0%] 
(code_label 145 235 146 10 68 "" [2 uses])

(note 146 145 147 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 147 146 148 10 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:177 (set (reg:SI 149 [ D.26136 ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 10 -> ( 11)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 170 175
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 170 175
;; rd  out 	(77)
11, 23, 32, 39, 40, 47, 48, 125, 127, 151, 152, 778, 780, 782, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 802, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864


;; Succ edge  11 [100.0%]  (fallthru)

;; Start of basic block ( 10 8 9) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u198(11){ }u199(13){ }u200(25){ }u201(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 170 175
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 170
;; lr  def 	 24 [cc] 134 231
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 170 175
;; live  gen 	 24 [cc] 134 231
;; live  kill	
;; rd  in  	(85)
11, 23, 32, 39, 40, 47, 48, 124, 125, 127, 151, 152, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 802, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868
;; rd  gen 	(3)
123, 766, 869
;; rd  kill	(4)
764, 765, 766, 869

;; Pred edge  10 [100.0%]  (fallthru)
;; Pred edge  8 [100.0%] 
;; Pred edge  9 [100.0%] 
(code_label 148 147 149 11 70 "" [2 uses])

(note 149 148 150 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 150 149 151 11 arch/arm/kernel/signal.c:308 (set (reg:SI 231)
        (xor:SI (reg:SI 149 [ D.26136 ])
            (const_int 1 [0x1]))) 96 {*arm_xorsi3} (expr_list:REG_DEAD (reg:SI 149 [ D.26136 ])
        (nil)))

(insn 151 150 152 11 arch/arm/kernel/signal.c:308 (set (reg/v:SI 134 [ err.477 ])
        (ior:SI (reg:SI 231)
            (reg/v:SI 170 [ err ]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 231)
        (expr_list:REG_DEAD (reg/v:SI 170 [ err ])
            (nil))))

(insn 152 151 153 11 arch/arm/kernel/signal.c:320 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 134 [ err.477 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 153 152 154 11 arch/arm/kernel/signal.c:320 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 216)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 11 -> ( 12 18)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 175
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 175
;; rd  out 	(85)
11, 23, 32, 39, 40, 47, 48, 123, 151, 152, 766, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 802, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869


;; Succ edge  12 [61.0%]  (fallthru)
;; Succ edge  18 [39.0%] 

;; Start of basic block ( 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u207(11){ }u208(13){ }u209(25){ }u210(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 175
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 175
;; lr  def 	 24 [cc] 138 139 140 171 233
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 175
;; live  gen 	 24 [cc] 138 139 140 171 233
;; live  kill	 24 [cc]
;; rd  in  	(85)
11, 23, 32, 39, 40, 47, 48, 123, 151, 152, 766, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 802, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869
;; rd  gen 	(6)
121, 771, 772, 773, 819, 870
;; rd  kill	(6)
770, 771, 772, 773, 819, 870

;; Pred edge  11 [61.0%]  (fallthru)
(note 154 153 155 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 155 154 158 12 arch/arm/kernel/signal.c:310 (set (reg/v/f:SI 171 [ aux ])
        (plus:SI (reg/v/f:SI 175 [ sf ])
            (const_int 232 [0xe8]))) 4 {*arm_addsi3} (nil))

(insn 158 155 159 12 arch/arm/kernel/signal.c:222 discrim 4 (parallel [
            (set (reg/v:SI 138 [ err ])
                (asm_operands/v:SI ("1:	ldr	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg/v/f:SI 171 [ aux ])
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 134 [ err.477 ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691113))
            (set (reg/v:SI 139 [ __gu_val ])
                (asm_operands/v:SI ("1:	ldr	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=&r") 1 [
                        (reg/v/f:SI 171 [ aux ])
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 134 [ err.477 ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691113))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/v/f:SI 171 [ aux ])
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))

(insn 159 158 160 12 arch/arm/kernel/signal.c:223 discrim 4 (set (reg/f:SI 233)
        (plus:SI (reg/v/f:SI 175 [ sf ])
            (const_int 236 [0xec]))) 4 {*arm_addsi3} (nil))

(insn 160 159 161 12 arch/arm/kernel/signal.c:223 discrim 4 (parallel [
            (set (reg/v:SI 138 [ err ])
                (asm_operands/v:SI ("1:	ldr	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg/f:SI 233)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 138 [ err ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691118))
            (set (reg/v:SI 140 [ __gu_val ])
                (asm_operands/v:SI ("1:	ldr	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=&r") 1 [
                        (reg/f:SI 233)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 138 [ err ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691118))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/f:SI 233)
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))

(insn 161 160 162 12 arch/arm/kernel/signal.c:225 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 138 [ err ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 138 [ err ])
        (nil)))

(jump_insn 162 161 163 12 arch/arm/kernel/signal.c:225 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 213)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 12 -> ( 17 13)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 139 140 175
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 139 140 175
;; rd  out 	(90)
11, 23, 32, 39, 40, 47, 48, 121, 151, 152, 766, 771, 772, 773, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 802, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870


;; Succ edge  17 [50.0%] 
;; Succ edge  13 [50.0%]  (fallthru)

;; Start of basic block ( 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u219(11){ }u220(13){ }u221(25){ }u222(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 139 140 175
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140
;; lr  def 	 24 [cc] 235 237 238 239 240 241
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 139 140 175
;; live  gen 	 24 [cc] 235 237 238 239 240 241
;; live  kill	
;; rd  in  	(90)
11, 23, 32, 39, 40, 47, 48, 121, 151, 152, 766, 771, 772, 773, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 802, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870
;; rd  gen 	(7)
118, 871, 872, 873, 874, 875, 876
;; rd  kill	(6)
871, 872, 873, 874, 875, 876

;; Pred edge  12 [50.0%]  (fallthru)
(note 163 162 164 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 164 163 165 13 arch/arm/kernel/signal.c:227 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 140 [ __gu_val ])
            (const_int 288 [0x120]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 140 [ __gu_val ])
        (nil)))

(insn 165 164 167 13 arch/arm/kernel/signal.c:227 (set (reg:SI 235)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 167 165 168 13 arch/arm/kernel/signal.c:227 (set (reg:SI 237)
        (const_int 1447448577 [0x56465001])) 167 {*arm_movsi_insn} (nil))

(insn 168 167 169 13 arch/arm/kernel/signal.c:227 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 139 [ __gu_val ])
            (reg:SI 237))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 237)
        (expr_list:REG_DEAD (reg/v:SI 139 [ __gu_val ])
            (expr_list:REG_EQUAL (compare:CC (reg/v:SI 139 [ __gu_val ])
                    (const_int 1447448577 [0x56465001]))
                (nil)))))

(insn 169 168 171 13 arch/arm/kernel/signal.c:227 (set (reg:SI 238)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 171 169 172 13 arch/arm/kernel/signal.c:227 (set (reg:SI 239)
        (ior:SI (reg:SI 235)
            (reg:SI 238))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 238)
        (expr_list:REG_DEAD (reg:SI 235)
            (nil))))

(insn 172 171 173 13 arch/arm/kernel/signal.c:227 (set (reg:QI 240)
        (subreg:QI (reg:SI 239) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 239)
        (nil)))

(insn 173 172 174 13 arch/arm/kernel/signal.c:227 (set (reg:SI 241)
        (zero_extend:SI (reg:QI 240))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 240)
        (nil)))

(insn 174 173 175 13 arch/arm/kernel/signal.c:227 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 241)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 241)
        (nil)))

(jump_insn 175 174 176 13 arch/arm/kernel/signal.c:227 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 180)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
            (nil))))
;; End of basic block 13 -> ( 14 15)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 175
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 175
;; rd  out 	(96)
11, 23, 32, 39, 40, 47, 48, 118, 151, 152, 766, 771, 772, 773, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 802, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876


;; Succ edge  14 [71.0%]  (fallthru)
;; Succ edge  15 [29.0%] 

;; Start of basic block ( 13) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u235(11){ }u236(13){ }u237(25){ }u238(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 134
;; live  kill	
;; rd  in  	(96)
11, 23, 32, 39, 40, 47, 48, 118, 151, 152, 766, 771, 772, 773, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 802, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876
;; rd  gen 	(1)
765
;; rd  kill	(3)
764, 765, 766

;; Pred edge  13 [71.0%]  (fallthru)
(note 176 175 177 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 177 176 236 14 arch/arm/kernel/signal.c:228 (set (reg/v:SI 134 [ err.477 ])
        (const_int -22 [0xffffffffffffffea])) 167 {*arm_movsi_insn} (nil))

(jump_insn 236 177 237 14 (set (pc)
        (label_ref 216)) -1 (nil))
;; End of basic block 14 -> ( 18)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; rd  out 	(96)
11, 23, 32, 39, 40, 47, 48, 118, 151, 152, 765, 771, 772, 773, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 802, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876


;; Succ edge  18 [100.0%] 

(barrier 237 236 180)

;; Start of basic block ( 13) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u239(11){ }u240(13){ }u241(25){ }u242(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 175
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 175
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 135 136 137 141 142 143 144 242 243 244 245 246 247 248 249
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 175
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 133 135 136 137 141 142 143 144 242 243 244 245 246 247 248 249
;; live  kill	 14 [lr] 24 [cc]
;; rd  in  	(96)
11, 23, 32, 39, 40, 47, 48, 118, 151, 152, 766, 771, 772, 773, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 802, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876
;; rd  gen 	(18)
4, 113, 760, 767, 768, 769, 774, 775, 776, 777, 877, 878, 879, 880, 881, 882, 883, 884
;; rd  kill	(41)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 49, 50, 51, 52, 53, 54, 55, 759, 760, 761, 762, 763, 767, 768, 769, 774, 775, 776, 777, 877, 878, 879, 880, 881, 882, 883, 884

;; Pred edge  13 [29.0%] 
(code_label 180 237 181 15 73 "" [1 uses])

(note 181 180 182 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 182 181 183 15 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 242)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 183 182 184 15 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/v/f:SI 136 [ thread ])
        (and:SI (reg:SI 242)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 242)
        (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
                (const_int -8192 [0xffffffffffffe000]))
            (nil))))

(insn 184 183 185 15 arch/arm/kernel/signal.c:234 (set (reg/f:SI 243)
        (plus:SI (reg/v/f:SI 136 [ thread ])
            (const_int 432 [0x1b0]))) 4 {*arm_addsi3} (nil))

(insn 185 184 186 15 arch/arm/kernel/signal.c:234 (set (reg/f:SI 244)
        (plus:SI (reg/v/f:SI 175 [ sf ])
            (const_int 240 [0xf0]))) 4 {*arm_addsi3} (nil))

(insn 186 185 187 15 arch/arm/kernel/signal.c:234 (set (reg:SI 0 r0)
        (reg/f:SI 243)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 243)
        (nil)))

(insn 187 186 188 15 arch/arm/kernel/signal.c:234 (set (reg:SI 1 r1)
        (reg/f:SI 244)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 244)
        (nil)))

(insn 188 187 189 15 arch/arm/kernel/signal.c:234 (set (reg:SI 2 r2)
        (const_int 256 [0x100])) 167 {*arm_movsi_insn} (nil))

(call_insn 189 188 190 15 arch/arm/kernel/signal.c:234 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__copy_from_user") [flags 0x41] <function_decl 0x10f3de80 __copy_from_user>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 190 189 192 15 arch/arm/kernel/signal.c:234 (set (reg:SI 135 [ D.26174 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 192 190 193 15 arch/arm/kernel/signal.c:239 discrim 4 (set (reg/f:SI 245)
        (plus:SI (reg/v/f:SI 175 [ sf ])
            (const_int 496 [0x1f0]))) 4 {*arm_addsi3} (nil))

(insn 193 192 194 15 arch/arm/kernel/signal.c:239 discrim 4 (parallel [
            (set (reg/v:SI 133 [ err.480 ])
                (asm_operands/v:SI ("1:	ldr	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg/f:SI 245)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg:SI 135 [ D.26174 ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691123))
            (set (reg/v:SI 141 [ __gu_val ])
                (asm_operands/v:SI ("1:	ldr	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=&r") 1 [
                        (reg/f:SI 245)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg:SI 135 [ D.26174 ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691123))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/f:SI 245)
        (expr_list:REG_DEAD (reg:SI 135 [ D.26174 ])
            (expr_list:REG_UNUSED (reg:QI 24 cc)
                (nil)))))

(insn 194 193 195 15 arch/arm/kernel/signal.c:239 discrim 5 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 136 [ thread ])
                (const_int 692 [0x2b4])) [0 <variable>.vfpstate.hard.fpscr+0 S4 A32])
        (reg/v:SI 141 [ __gu_val ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 141 [ __gu_val ])
        (nil)))

(insn 195 194 196 15 arch/arm/kernel/signal.c:244 discrim 4 (set (reg/f:SI 246)
        (plus:SI (reg/v/f:SI 175 [ sf ])
            (const_int 504 [0x1f8]))) 4 {*arm_addsi3} (nil))

(insn 196 195 197 15 arch/arm/kernel/signal.c:244 discrim 4 (parallel [
            (set (reg/v:SI 133 [ err.480 ])
                (asm_operands/v:SI ("1:	ldr	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg/f:SI 246)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 133 [ err.480 ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691128))
            (set (reg/v:SI 142 [ __gu_val ])
                (asm_operands/v:SI ("1:	ldr	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=&r") 1 [
                        (reg/f:SI 246)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 133 [ err.480 ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691128))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/f:SI 246)
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))

(insn 197 196 198 15 arch/arm/kernel/signal.c:246 (set (reg/v:SI 137 [ fpexc ])
        (ior:SI (reg/v:SI 142 [ __gu_val ])
            (const_int 1073741824 [0x40000000]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg/v:SI 142 [ __gu_val ])
        (nil)))

(insn 198 197 199 15 arch/arm/kernel/signal.c:249 (set (reg:SI 247)
        (and:SI (reg/v:SI 137 [ fpexc ])
            (const_int 1879048191 [0x6fffffff]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg/v:SI 137 [ fpexc ])
        (nil)))

(insn 199 198 200 15 arch/arm/kernel/signal.c:249 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 136 [ thread ])
                (const_int 688 [0x2b0])) [0 <variable>.vfpstate.hard.fpexc+0 S4 A64])
        (reg:SI 247)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 247)
        (nil)))

(insn 200 199 201 15 arch/arm/kernel/signal.c:251 discrim 4 (set (reg/f:SI 248)
        (plus:SI (reg/v/f:SI 175 [ sf ])
            (const_int 508 [0x1fc]))) 4 {*arm_addsi3} (nil))

(insn 201 200 202 15 arch/arm/kernel/signal.c:251 discrim 4 (parallel [
            (set (reg/v:SI 133 [ err.480 ])
                (asm_operands/v:SI ("1:	ldr	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg/f:SI 248)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 133 [ err.480 ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691133))
            (set (reg/v:SI 143 [ __gu_val ])
                (asm_operands/v:SI ("1:	ldr	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=&r") 1 [
                        (reg/f:SI 248)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 133 [ err.480 ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691133))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/f:SI 248)
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))

(insn 202 201 203 15 arch/arm/kernel/signal.c:251 discrim 5 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 136 [ thread ])
                (const_int 696 [0x2b8])) [0 <variable>.vfpstate.hard.fpinst+0 S4 A64])
        (reg/v:SI 143 [ __gu_val ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 143 [ __gu_val ])
        (nil)))

(insn 203 202 204 15 arch/arm/kernel/signal.c:252 discrim 4 (set (reg/f:SI 249)
        (plus:SI (reg/v/f:SI 175 [ sf ])
            (const_int 512 [0x200]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/v/f:SI 175 [ sf ])
        (nil)))

(insn 204 203 205 15 arch/arm/kernel/signal.c:252 discrim 4 (parallel [
            (set (reg/v:SI 133 [ err.480 ])
                (asm_operands/v:SI ("1:	ldr	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg/f:SI 249)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 133 [ err.480 ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691138))
            (set (reg/v:SI 144 [ __gu_val ])
                (asm_operands/v:SI ("1:	ldr	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=&r") 1 [
                        (reg/f:SI 249)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 133 [ err.480 ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691138))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/f:SI 249)
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))

(insn 205 204 206 15 arch/arm/kernel/signal.c:252 discrim 5 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 136 [ thread ])
                (const_int 700 [0x2bc])) [0 <variable>.vfpstate.hard.fpinst2+0 S4 A32])
        (reg/v:SI 144 [ __gu_val ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 144 [ __gu_val ])
        (nil)))

(insn 206 205 207 15 arch/arm/kernel/signal.c:254 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 133 [ err.480 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 133 [ err.480 ])
        (nil)))

(jump_insn 207 206 208 15 arch/arm/kernel/signal.c:254 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 213)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 15 -> ( 16 17)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 136
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136
;; rd  out 	(112)
4, 23, 32, 39, 40, 47, 48, 113, 151, 152, 760, 766, 767, 768, 769, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 802, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884


;; Succ edge  16 [29.0%]  (fallthru)
;; Succ edge  17 [71.0%] 

;; Start of basic block ( 15) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u280(11){ }u281(13){ }u282(25){ }u283(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]
;; rd  in  	(112)
4, 23, 32, 39, 40, 47, 48, 113, 151, 152, 760, 766, 767, 768, 769, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 802, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884
;; rd  gen 	(0)

;; rd  kill	(7)
49, 50, 51, 52, 53, 54, 55

;; Pred edge  15 [29.0%]  (fallthru)
(note 208 207 209 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 209 208 210 16 arch/arm/kernel/signal.c:255 (set (reg:SI 0 r0)
        (reg/v/f:SI 136 [ thread ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 136 [ thread ])
        (nil)))

(call_insn 210 209 238 16 arch/arm/kernel/signal.c:255 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_flush_hwstate") [flags 0x41] <function_decl 0x10b07700 vfp_flush_hwstate>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(jump_insn 238 210 239 16 (set (pc)
        (label_ref 216)) -1 (nil))
;; End of basic block 16 -> ( 18)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; rd  out 	(112)
4, 23, 32, 39, 40, 47, 48, 113, 151, 152, 760, 766, 767, 768, 769, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 802, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884


;; Succ edge  18 [100.0%] 

(barrier 239 238 213)

;; Start of basic block ( 12 15) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u287(11){ }u288(13){ }u289(25){ }u290(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 134
;; live  kill	
;; rd  in  	(114)
4, 11, 23, 32, 39, 40, 47, 48, 113, 121, 151, 152, 760, 766, 767, 768, 769, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 802, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884
;; rd  gen 	(1)
764
;; rd  kill	(3)
764, 765, 766

;; Pred edge  12 [50.0%] 
;; Pred edge  15 [71.0%] 
(code_label 213 239 214 17 72 "" [2 uses])

(note 214 213 215 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 215 214 216 17 arch/arm/kernel/signal.c:226 (set (reg/v:SI 134 [ err.477 ])
        (const_int -14 [0xfffffffffffffff2])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 17 -> ( 18)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; rd  out 	(114)
4, 11, 23, 32, 39, 40, 47, 48, 113, 121, 151, 152, 760, 764, 767, 768, 769, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 802, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884


;; Succ edge  18 [100.0%]  (fallthru)

;; Start of basic block ( 11 14 17 16) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u291(11){ }u292(13){ }u293(25){ }u294(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(118)
4, 11, 23, 32, 39, 40, 47, 48, 113, 118, 121, 123, 151, 152, 760, 764, 765, 766, 767, 768, 769, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 802, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884
;; rd  gen 	(1)
0
;; rd  kill	(14)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13

;; Pred edge  11 [39.0%] 
;; Pred edge  14 [100.0%] 
;; Pred edge  17 [100.0%]  (fallthru)
;; Pred edge  16 [100.0%] 
(code_label 216 215 217 18 71 "" [3 uses])

(note 217 216 222 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 222 217 228 18 arch/arm/kernel/signal.c:325 (set (reg/i:SI 0 r0)
        (reg/v:SI 134 [ err.477 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 134 [ err.477 ])
        (nil)))

(insn 228 222 0 18 arch/arm/kernel/signal.c:325 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 18 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(117)
0, 23, 32, 39, 40, 47, 48, 113, 118, 121, 123, 151, 152, 760, 764, 765, 766, 767, 768, 769, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 802, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function sys_rt_sigreturn (sys_rt_sigreturn)[0:1445]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 9 n_edges 12 count 14 (  1.6)
df_worklist_dataflow_doublequeue:n_basic_blocks 9 n_edges 12 count 16 (  1.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 9 n_edges 12 count 16 (  1.8)


sys_rt_sigreturn

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={7d,8u} r1={7d,3u} r2={5d,1u} r3={4d} r11={1d,8u} r12={4d} r13={1d,13u,2d} r14={4d,1u} r15={3d} r16={3d} r17={3d} r18={3d} r19={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={8d,4u} r25={1d,8u} r26={1d,7u} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r81={3d} r82={3d} r83={3d} r84={3d} r85={3d} r86={3d} r87={3d} r88={3d} r89={3d} r90={3d} r91={3d} r92={3d} r93={3d} r94={3d} r95={3d} r96={3d} r97={3d} r98={3d} r99={3d} r100={3d} r101={3d} r102={3d} r103={3d} r104={3d} r105={3d} r106={3d} r107={3d} r108={3d} r109={3d} r110={3d} r111={3d} r112={3d} r113={3d} r114={3d} r115={3d} r116={3d} r117={3d} r118={3d} r119={3d} r120={3d} r121={3d} r122={3d} r123={3d} r124={3d} r125={3d} r126={3d} r127={3d} r136={1d} r137={1d,1u} r139={2d,1u} r140={1d,1u} r141={1d,2u} r142={1d,4u} r144={1d,3u} r145={1d,2u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} 
;;    total ref usage 467{390d,75u,2e} in 37{34 regular + 3 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372
0[0,7] 1[7,7] 2[14,5] 3[19,4] 11[23,1] 12[24,4] 13[28,1] 14[29,4] 15[33,3] 16[36,3] 17[39,3] 18[42,3] 19[45,3] 20[48,3] 21[51,3] 22[54,3] 23[57,3] 24[60,8] 25[68,1] 26[69,1] 27[70,3] 28[73,3] 29[76,3] 30[79,3] 31[82,3] 32[85,3] 33[88,3] 34[91,3] 35[94,3] 36[97,3] 37[100,3] 38[103,3] 39[106,3] 40[109,3] 41[112,3] 42[115,3] 43[118,3] 44[121,3] 45[124,3] 46[127,3] 47[130,3] 48[133,3] 49[136,3] 50[139,3] 51[142,3] 52[145,3] 53[148,3] 54[151,3] 55[154,3] 56[157,3] 57[160,3] 58[163,3] 59[166,3] 60[169,3] 61[172,3] 62[175,3] 63[178,3] 64[181,3] 65[184,3] 66[187,3] 67[190,3] 68[193,3] 69[196,3] 70[199,3] 71[202,3] 72[205,3] 73[208,3] 74[211,3] 75[214,3] 76[217,3] 77[220,3] 78[223,3] 79[226,3] 80[229,3] 81[232,3] 82[235,3] 83[238,3] 84[241,3] 85[244,3] 86[247,3] 87[250,3] 88[253,3] 89[256,3] 90[259,3] 91[262,3] 92[265,3] 93[268,3] 94[271,3] 95[274,3] 96[277,3] 97[280,3] 98[283,3] 99[286,3] 100[289,3] 101[292,3] 102[295,3] 103[298,3] 104[301,3] 105[304,3] 106[307,3] 107[310,3] 108[313,3] 109[316,3] 110[319,3] 111[322,3] 112[325,3] 113[328,3] 114[331,3] 115[334,3] 116[337,3] 117[340,3] 118[343,3] 119[346,3] 120[349,3] 121[352,3] 122[355,3] 123[358,3] 124[361,3] 125[364,3] 126[367,3] 127[370,3] 136[373,1] 137[374,1] 139[375,2] 140[377,1] 141[378,1] 142[379,1] 144[380,1] 145[381,1] 146[382,1] 147[383,1] 148[384,1] 151[385,1] 152[386,1] 153[387,1] 154[388,1] 155[389,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d6(0){ }d13(1){ }d18(2){ }d22(3){ }d23(11){ }d27(12){ }d28(13){ }d32(14){ }d68(25){ }d69(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
6, 13, 18, 22, 23, 27, 28, 32, 68, 69
;; rd  kill	(35)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 68, 69
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(10)
6, 13, 18, 22, 23, 27, 28, 32, 68, 69

( 0 )->[2]->( 7 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d23(bb 0 insn -1) }u1(13){ d28(bb 0 insn -1) }u2(25){ d68(bb 0 insn -1) }u3(26){ d69(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 142 144 145 146 147 148
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 142 144 145 146 147 148
;; live  kill	
;; rd  in  	(10)
6, 13, 18, 22, 23, 27, 28, 32, 68, 69
;; rd  gen 	(7)
67, 379, 380, 381, 382, 383, 384
;; rd  kill	(14)
60, 61, 62, 63, 64, 65, 66, 67, 379, 380, 381, 382, 383, 384
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 144 145
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 144 145
;; rd  out 	(17)
6, 13, 18, 22, 23, 27, 28, 32, 67, 68, 69, 379, 380, 381, 382, 383, 384
;;  UD chains for artificial uses
;;   reg 11 { d23(bb 0 insn -1) }
;;   reg 13 { d28(bb 0 insn -1) }
;;   reg 25 { d68(bb 0 insn -1) }
;;   reg 26 { d69(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d6(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 7
;;      reg 13 { d28(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 8
;;      reg 146 { d382(bb 2 insn 7) }
;;   eq_note reg 13 { }
;;   UD chains for insn luid 4 uid 10
;;      reg 145 { d381(bb 2 insn 8) }
;;      reg 147 { d383(bb 2 insn 9) }
;;   UD chains for insn luid 5 uid 11
;;      reg 144 { d380(bb 2 insn 2) }
;;   UD chains for insn luid 6 uid 12
;;      reg 142 { d379(bb 2 insn 11) }
;;   UD chains for insn luid 7 uid 13
;;      reg 148 { d384(bb 2 insn 12) }
;;   UD chains for insn luid 8 uid 14
;;      reg 24 { d67(bb 2 insn 13) }

( 2 )->[3]->( 7 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u14(11){ d23(bb 0 insn -1) }u15(13){ d28(bb 0 insn -1) }u16(25){ d68(bb 0 insn -1) }u17(26){ d69(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145
;; lr  def 	 24 [cc] 136 137 151
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 144 145
;; live  gen 	 24 [cc] 136 137 151
;; live  kill	 24 [cc]
;; rd  in  	(17)
6, 13, 18, 22, 23, 27, 28, 32, 67, 68, 69, 379, 380, 381, 382, 383, 384
;; rd  gen 	(4)
66, 373, 374, 385
;; rd  kill	(11)
60, 61, 62, 63, 64, 65, 66, 67, 373, 374, 385
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 144
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 144
;; rd  out 	(20)
6, 13, 18, 22, 23, 27, 28, 32, 66, 68, 69, 373, 374, 379, 380, 381, 382, 383, 384, 385
;;  UD chains for artificial uses
;;   reg 11 { d23(bb 0 insn -1) }
;;   reg 13 { d28(bb 0 insn -1) }
;;   reg 25 { d68(bb 0 insn -1) }
;;   reg 26 { d69(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 20
;;      reg 145 { d381(bb 2 insn 8) }
;;   UD chains for insn luid 1 uid 21
;;      reg 142 { d379(bb 2 insn 11) }
;;      reg 151 { d385(bb 3 insn 20) }
;;   UD chains for insn luid 2 uid 22
;;      reg 137 { d374(bb 3 insn 21) }
;;   UD chains for insn luid 3 uid 23
;;      reg 24 { d66(bb 3 insn 22) }

( 3 )->[4]->( 7 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u23(11){ d23(bb 0 insn -1) }u24(13){ d28(bb 0 insn -1) }u25(25){ d68(bb 0 insn -1) }u26(26){ d69(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 144
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 141 152
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 144
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 141 152
;; live  kill	 14 [lr]
;; rd  in  	(20)
6, 13, 18, 22, 23, 27, 28, 32, 66, 68, 69, 373, 374, 379, 380, 381, 382, 383, 384, 385
;; rd  gen 	(4)
5, 64, 378, 386
;; rd  kill	(21)
0, 1, 2, 3, 4, 5, 6, 29, 30, 31, 32, 60, 61, 62, 63, 64, 65, 66, 67, 378, 386
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 144
;; rd  out 	(21)
5, 13, 18, 22, 23, 27, 28, 64, 68, 69, 373, 374, 378, 379, 380, 381, 382, 383, 384, 385, 386
;;  UD chains for artificial uses
;;   reg 11 { d23(bb 0 insn -1) }
;;   reg 13 { d28(bb 0 insn -1) }
;;   reg 25 { d68(bb 0 insn -1) }
;;   reg 26 { d69(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 25
;;      reg 142 { d379(bb 2 insn 11) }
;;   UD chains for insn luid 1 uid 27
;;      reg 152 { d386(bb 4 insn 25) }
;;   UD chains for insn luid 2 uid 28
;;      reg 13 { d28(bb 0 insn -1) }
;;      reg 0 { d6(bb 0 insn -1) }
;;      reg 1 { d12(bb 4 insn 27) }
;;   UD chains for insn luid 3 uid 29
;;      reg 0 { d5(bb 4 insn 28) }
;;   UD chains for insn luid 4 uid 30
;;      reg 141 { d378(bb 4 insn 29) }
;;   UD chains for insn luid 5 uid 31
;;      reg 24 { d64(bb 4 insn 30) }

( 4 )->[5]->( 7 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u35(11){ d23(bb 0 insn -1) }u36(13){ d28(bb 0 insn -1) }u37(25){ d68(bb 0 insn -1) }u38(26){ d69(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 144
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 140 153
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 144
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 140 153
;; live  kill	 14 [lr]
;; rd  in  	(21)
5, 13, 18, 22, 23, 27, 28, 64, 68, 69, 373, 374, 378, 379, 380, 381, 382, 383, 384, 385, 386
;; rd  gen 	(4)
3, 62, 377, 387
;; rd  kill	(21)
0, 1, 2, 3, 4, 5, 6, 29, 30, 31, 32, 60, 61, 62, 63, 64, 65, 66, 67, 377, 387
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; rd  out 	(23)
3, 13, 18, 22, 23, 27, 28, 62, 68, 69, 373, 374, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387
;;  UD chains for artificial uses
;;   reg 11 { d23(bb 0 insn -1) }
;;   reg 13 { d28(bb 0 insn -1) }
;;   reg 25 { d68(bb 0 insn -1) }
;;   reg 26 { d69(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 33
;;      reg 142 { d379(bb 2 insn 11) }
;;   UD chains for insn luid 1 uid 34
;;      reg 153 { d387(bb 5 insn 33) }
;;   UD chains for insn luid 2 uid 35
;;      reg 141 { d378(bb 4 insn 29) }
;;   UD chains for insn luid 3 uid 36
;;      reg 144 { d380(bb 2 insn 2) }
;;   UD chains for insn luid 4 uid 37
;;      reg 13 { d28(bb 0 insn -1) }
;;      reg 0 { d4(bb 5 insn 34) }
;;      reg 1 { d7(bb 5 insn 35) }
;;      reg 2 { d16(bb 5 insn 36) }
;;   UD chains for insn luid 5 uid 38
;;      reg 0 { d3(bb 5 insn 37) }
;;   UD chains for insn luid 6 uid 39
;;      reg 140 { d377(bb 5 insn 38) }
;;   UD chains for insn luid 7 uid 40
;;      reg 24 { d62(bb 5 insn 39) }

( 5 )->[6]->( 8 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u50(11){ d23(bb 0 insn -1) }u51(13){ d28(bb 0 insn -1) }u52(25){ d68(bb 0 insn -1) }u53(26){ d69(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 139
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; live  gen 	 139
;; live  kill	
;; rd  in  	(23)
3, 13, 18, 22, 23, 27, 28, 62, 68, 69, 373, 374, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387
;; rd  gen 	(1)
376
;; rd  kill	(2)
375, 376
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; rd  out 	(24)
3, 13, 18, 22, 23, 27, 28, 62, 68, 69, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387
;;  UD chains for artificial uses
;;   reg 11 { d23(bb 0 insn -1) }
;;   reg 13 { d28(bb 0 insn -1) }
;;   reg 25 { d68(bb 0 insn -1) }
;;   reg 26 { d69(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 42
;;      reg 144 { d380(bb 2 insn 2) }

( 3 2 5 4 )->[7]->( 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u55(11){ d23(bb 0 insn -1) }u56(13){ d28(bb 0 insn -1) }u57(25){ d68(bb 0 insn -1) }u58(26){ d69(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 139 154 155
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 139 154 155
;; live  kill	 14 [lr]
;; rd  in  	(29)
3, 5, 6, 13, 18, 22, 23, 27, 28, 32, 62, 64, 66, 67, 68, 69, 373, 374, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387
;; rd  gen 	(3)
375, 388, 389
;; rd  kill	(8)
29, 30, 31, 32, 375, 376, 388, 389
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; rd  out 	(31)
3, 5, 6, 13, 18, 22, 23, 27, 28, 62, 64, 66, 67, 68, 69, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389
;;  UD chains for artificial uses
;;   reg 11 { d23(bb 0 insn -1) }
;;   reg 13 { d28(bb 0 insn -1) }
;;   reg 25 { d68(bb 0 insn -1) }
;;   reg 26 { d69(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 48
;;      reg 13 { d28(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 49
;;      reg 155 { d389(bb 7 insn 48) }
;;   eq_note reg 13 { }
;;   UD chains for insn luid 3 uid 51
;;      reg 154 { d388(bb 7 insn 49) }
;;   UD chains for insn luid 4 uid 52
;;      reg 13 { d28(bb 0 insn -1) }
;;      reg 0 { d2(bb 7 insn 50) }
;;      reg 1 { d9(bb 7 insn 51) }

( 7 6 )->[8]->( 1 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u66(11){ d23(bb 0 insn -1) }u67(13){ d28(bb 0 insn -1) }u68(25){ d68(bb 0 insn -1) }u69(26){ d69(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(32)
3, 5, 6, 13, 18, 22, 23, 27, 28, 62, 64, 66, 67, 68, 69, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389
;; rd  gen 	(1)
0
;; rd  kill	(7)
0, 1, 2, 3, 4, 5, 6
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(30)
0, 13, 18, 22, 23, 27, 28, 62, 64, 66, 67, 68, 69, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389
;;  UD chains for artificial uses
;;   reg 11 { d23(bb 0 insn -1) }
;;   reg 13 { d28(bb 0 insn -1) }
;;   reg 25 { d68(bb 0 insn -1) }
;;   reg 26 { d69(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 60
;;      reg 139 { d376(bb 6 insn 42) d375(bb 7 insn 53) }
;;   UD chains for insn luid 1 uid 66
;;      reg 0 { d0(bb 8 insn 60) }

( 8 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u72(0){ d0(bb 8 insn 60) }u73(11){ d23(bb 0 insn -1) }u74(13){ d28(bb 0 insn -1) }u75(14){ }u76(25){ d68(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(30)
0, 13, 18, 22, 23, 27, 28, 62, 64, 66, 67, 68, 69, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(30)
0, 13, 18, 22, 23, 27, 28, 62, 64, 66, 67, 68, 69, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389
;;  UD chains for artificial uses
;;   reg 0 { d0(bb 8 insn 60) }
;;   reg 11 { d23(bb 0 insn -1) }
;;   reg 13 { d28(bb 0 insn -1) }
;;   reg 14 { }
;;   reg 25 { d68(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 14 to worklist
  Adding insn 10 to worklist
  Adding insn 23 to worklist
  Adding insn 31 to worklist
  Adding insn 28 to worklist
  Adding insn 40 to worklist
  Adding insn 37 to worklist
  Adding insn 70 to worklist
  Adding insn 52 to worklist
  Adding insn 66 to worklist
Finished finding needed instructions:
  Adding insn 60 to worklist
Processing use of (reg 139 [ D.24481 ]) in insn 60:
  Adding insn 42 to worklist
  Adding insn 53 to worklist
Processing use of (reg 144 [ regs ]) in insn 42:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 0 r0) in insn 66:
Processing use of (reg 13 sp) in insn 52:
Processing use of (reg 0 r0) in insn 52:
  Adding insn 50 to worklist
Processing use of (reg 1 r1) in insn 52:
  Adding insn 51 to worklist
Processing use of (reg 154) in insn 51:
  Adding insn 49 to worklist
Processing use of (reg 155) in insn 49:
  Adding insn 48 to worklist
Processing use of (reg 13 sp) in insn 48:
Processing use of (reg 13 sp) in insn 37:
Processing use of (reg 0 r0) in insn 37:
  Adding insn 34 to worklist
Processing use of (reg 1 r1) in insn 37:
  Adding insn 35 to worklist
Processing use of (reg 2 r2) in insn 37:
  Adding insn 36 to worklist
Processing use of (reg 144 [ regs ]) in insn 36:
Processing use of (reg 141 [ D.24476 ]) in insn 35:
  Adding insn 29 to worklist
Processing use of (reg 0 r0) in insn 29:
Processing use of (reg 153) in insn 34:
  Adding insn 33 to worklist
Processing use of (reg 142 [ D.24470 ]) in insn 33:
  Adding insn 11 to worklist
Processing use of (reg 144 [ regs ]) in insn 11:
Processing use of (reg 24 cc) in insn 40:
  Adding insn 39 to worklist
Processing use of (reg 140 [ D.24479 ]) in insn 39:
  Adding insn 38 to worklist
Processing use of (reg 0 r0) in insn 38:
Processing use of (reg 13 sp) in insn 28:
Processing use of (reg 0 r0) in insn 28:
Processing use of (reg 1 r1) in insn 28:
  Adding insn 27 to worklist
Processing use of (reg 152) in insn 27:
  Adding insn 25 to worklist
Processing use of (reg 142 [ D.24470 ]) in insn 25:
Processing use of (reg 24 cc) in insn 31:
  Adding insn 30 to worklist
Processing use of (reg 141 [ D.24476 ]) in insn 30:
Processing use of (reg 24 cc) in insn 23:
  Adding insn 22 to worklist
Processing use of (reg 137 [ flag ]) in insn 22:
  Adding insn 21 to worklist
Processing use of (reg 142 [ D.24470 ]) in insn 21:
Processing use of (reg 151 [ <variable>.addr_limit ]) in insn 21:
  Adding insn 20 to worklist
Processing use of (reg 145) in insn 20:
  Adding insn 8 to worklist
Processing use of (reg 146) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 13 sp) in insn 7:
Processing use of (reg 145) in insn 10:
Processing use of (reg 147) in insn 10:
  Adding insn 9 to worklist
Processing use of (reg 24 cc) in insn 14:
  Adding insn 13 to worklist
Processing use of (reg 148) in insn 13:
  Adding insn 12 to worklist
Processing use of (reg 142 [ D.24470 ]) in insn 12:


sys_rt_sigreturn

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={7d,8u} r1={7d,3u} r2={5d,1u} r3={4d} r11={1d,8u} r12={4d} r13={1d,13u,2d} r14={4d,1u} r15={3d} r16={3d} r17={3d} r18={3d} r19={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={8d,4u} r25={1d,8u} r26={1d,7u} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r81={3d} r82={3d} r83={3d} r84={3d} r85={3d} r86={3d} r87={3d} r88={3d} r89={3d} r90={3d} r91={3d} r92={3d} r93={3d} r94={3d} r95={3d} r96={3d} r97={3d} r98={3d} r99={3d} r100={3d} r101={3d} r102={3d} r103={3d} r104={3d} r105={3d} r106={3d} r107={3d} r108={3d} r109={3d} r110={3d} r111={3d} r112={3d} r113={3d} r114={3d} r115={3d} r116={3d} r117={3d} r118={3d} r119={3d} r120={3d} r121={3d} r122={3d} r123={3d} r124={3d} r125={3d} r126={3d} r127={3d} r136={1d} r137={1d,1u} r139={2d,1u} r140={1d,1u} r141={1d,2u} r142={1d,4u} r144={1d,3u} r145={1d,2u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} 
;;    total ref usage 467{390d,75u,2e} in 37{34 regular + 3 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372
0[0,7] 1[7,7] 2[14,5] 3[19,4] 11[23,1] 12[24,4] 13[28,1] 14[29,4] 15[33,3] 16[36,3] 17[39,3] 18[42,3] 19[45,3] 20[48,3] 21[51,3] 22[54,3] 23[57,3] 24[60,8] 25[68,1] 26[69,1] 27[70,3] 28[73,3] 29[76,3] 30[79,3] 31[82,3] 32[85,3] 33[88,3] 34[91,3] 35[94,3] 36[97,3] 37[100,3] 38[103,3] 39[106,3] 40[109,3] 41[112,3] 42[115,3] 43[118,3] 44[121,3] 45[124,3] 46[127,3] 47[130,3] 48[133,3] 49[136,3] 50[139,3] 51[142,3] 52[145,3] 53[148,3] 54[151,3] 55[154,3] 56[157,3] 57[160,3] 58[163,3] 59[166,3] 60[169,3] 61[172,3] 62[175,3] 63[178,3] 64[181,3] 65[184,3] 66[187,3] 67[190,3] 68[193,3] 69[196,3] 70[199,3] 71[202,3] 72[205,3] 73[208,3] 74[211,3] 75[214,3] 76[217,3] 77[220,3] 78[223,3] 79[226,3] 80[229,3] 81[232,3] 82[235,3] 83[238,3] 84[241,3] 85[244,3] 86[247,3] 87[250,3] 88[253,3] 89[256,3] 90[259,3] 91[262,3] 92[265,3] 93[268,3] 94[271,3] 95[274,3] 96[277,3] 97[280,3] 98[283,3] 99[286,3] 100[289,3] 101[292,3] 102[295,3] 103[298,3] 104[301,3] 105[304,3] 106[307,3] 107[310,3] 108[313,3] 109[316,3] 110[319,3] 111[322,3] 112[325,3] 113[328,3] 114[331,3] 115[334,3] 116[337,3] 117[340,3] 118[343,3] 119[346,3] 120[349,3] 121[352,3] 122[355,3] 123[358,3] 124[361,3] 125[364,3] 126[367,3] 127[370,3] 136[373,1] 137[374,1] 139[375,2] 140[377,1] 141[378,1] 142[379,1] 144[380,1] 145[381,1] 146[382,1] 147[383,1] 148[384,1] 151[385,1] 152[386,1] 153[387,1] 154[388,1] 155[389,1] 
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 142 144 145 146 147 148
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 142 144 145 146 147 148
;; live  kill	
;; rd  in  	(10)
6, 13, 18, 22, 23, 27, 28, 32, 68, 69
;; rd  gen 	(7)
67, 379, 380, 381, 382, 383, 384
;; rd  kill	(14)
60, 61, 62, 63, 64, 65, 66, 67, 379, 380, 381, 382, 383, 384

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 arch/arm/kernel/signal.c:358 (set (reg/v/f:SI 144 [ regs ])
        (reg:SI 0 r0 [ regs ])) 167 {*arm_movsi_insn} (nil))

(note 3 2 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 3 8 2 arch/arm/kernel/signal.c:362 (set (reg:SI 146)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 8 7 9 2 arch/arm/kernel/signal.c:362 (set (reg:SI 145)
        (and:SI (reg:SI 146)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 146)
        (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
                (const_int -8192 [0xffffffffffffe000]))
            (nil))))

(insn 9 8 10 2 arch/arm/kernel/signal.c:362 (set (reg/f:SI 147)
        (symbol_ref:SI ("do_no_restart_syscall") [flags 0x41] <function_decl 0x10aeff00 do_no_restart_syscall>)) 167 {*arm_movsi_insn} (nil))

(insn 10 9 11 2 arch/arm/kernel/signal.c:362 (set (mem/s/f/j:SI (plus:SI (reg:SI 145)
                (const_int 712 [0x2c8])) [0 <variable>.restart_block.fn+0 S4 A64])
        (reg/f:SI 147)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 147)
        (expr_list:REG_EQUAL (symbol_ref:SI ("do_no_restart_syscall") [flags 0x41] <function_decl 0x10aeff00 do_no_restart_syscall>)
            (nil))))

(insn 11 10 12 2 arch/arm/kernel/signal.c:369 (set (reg:SI 142 [ D.24470 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 144 [ regs ])
                (const_int 52 [0x34])) [0 <variable>.uregs+52 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 12 11 13 2 arch/arm/kernel/signal.c:369 (set (reg:SI 148)
        (and:SI (reg:SI 142 [ D.24470 ])
            (const_int 7 [0x7]))) 67 {*arm_andsi3_insn} (nil))

(insn 13 12 14 2 arch/arm/kernel/signal.c:369 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 148)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 148)
        (nil)))

(jump_insn 14 13 15 2 arch/arm/kernel/signal.c:369 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 45)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
            (nil))))
;; End of basic block 2 -> ( 7 3)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 144 145
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 144 145
;; rd  out 	(17)
6, 13, 18, 22, 23, 27, 28, 32, 67, 68, 69, 379, 380, 381, 382, 383, 384


;; Succ edge  7 [29.0%] 
;; Succ edge  3 [71.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u14(11){ }u15(13){ }u16(25){ }u17(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145
;; lr  def 	 24 [cc] 136 137 151
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 144 145
;; live  gen 	 24 [cc] 136 137 151
;; live  kill	 24 [cc]
;; rd  in  	(17)
6, 13, 18, 22, 23, 27, 28, 32, 67, 68, 69, 379, 380, 381, 382, 383, 384
;; rd  gen 	(4)
66, 373, 374, 385
;; rd  kill	(11)
60, 61, 62, 63, 64, 65, 66, 67, 373, 374, 385

;; Pred edge  2 [71.0%]  (fallthru)
(note 15 14 20 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 20 15 21 3 arch/arm/kernel/signal.c:374 (set (reg:SI 151 [ <variable>.addr_limit ])
        (mem/s/j:SI (plus:SI (reg:SI 145)
                (const_int 8 [0x8])) [0 <variable>.addr_limit+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 145)
        (nil)))

(insn 21 20 22 3 arch/arm/kernel/signal.c:374 (parallel [
            (set (reg/v:SI 137 [ flag ])
                (asm_operands:SI ("adds %1, %2, %3; sbcccs %1, %1, %0; movcc %0, #0") ("=&r") 0 [
                        (reg:SI 142 [ D.24470 ])
                        (const_int 880 [0x370])
                        (reg:SI 151 [ <variable>.addr_limit ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("Ir") 0)
                        (asm_input:SI ("0") 0)
                    ] 8636693))
            (set (reg/v:SI 136 [ roksum ])
                (asm_operands:SI ("adds %1, %2, %3; sbcccs %1, %1, %0; movcc %0, #0") ("=&r") 1 [
                        (reg:SI 142 [ D.24470 ])
                        (const_int 880 [0x370])
                        (reg:SI 151 [ <variable>.addr_limit ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("Ir") 0)
                        (asm_input:SI ("0") 0)
                    ] 8636693))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg:SI 151 [ <variable>.addr_limit ])
        (expr_list:REG_UNUSED (reg/v:SI 136 [ roksum ])
            (expr_list:REG_UNUSED (reg:QI 24 cc)
                (nil)))))

(insn 22 21 23 3 arch/arm/kernel/signal.c:374 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 137 [ flag ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 137 [ flag ])
        (nil)))

(jump_insn 23 22 24 3 arch/arm/kernel/signal.c:374 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 45)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 3 -> ( 7 4)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 144
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 144
;; rd  out 	(20)
6, 13, 18, 22, 23, 27, 28, 32, 66, 68, 69, 373, 374, 379, 380, 381, 382, 383, 384, 385


;; Succ edge  7 [71.0%] 
;; Succ edge  4 [29.0%]  (fallthru)

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u23(11){ }u24(13){ }u25(25){ }u26(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 144
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 141 152
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 144
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 141 152
;; live  kill	 14 [lr]
;; rd  in  	(20)
6, 13, 18, 22, 23, 27, 28, 32, 66, 68, 69, 373, 374, 379, 380, 381, 382, 383, 384, 385
;; rd  gen 	(4)
5, 64, 378, 386
;; rd  kill	(21)
0, 1, 2, 3, 4, 5, 6, 29, 30, 31, 32, 60, 61, 62, 63, 64, 65, 66, 67, 378, 386

;; Pred edge  3 [29.0%]  (fallthru)
(note 24 23 25 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 25 24 27 4 arch/arm/kernel/signal.c:377 (set (reg/f:SI 152)
        (plus:SI (reg:SI 142 [ D.24470 ])
            (const_int 128 [0x80]))) 4 {*arm_addsi3} (nil))

(insn 27 25 28 4 arch/arm/kernel/signal.c:377 (set (reg:SI 1 r1)
        (reg/f:SI 152)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 152)
        (nil)))

(call_insn 28 27 29 4 arch/arm/kernel/signal.c:377 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("restore_sigframe") [flags 0x3] <function_decl 0x1140a380 restore_sigframe>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 29 28 30 4 arch/arm/kernel/signal.c:377 (set (reg:SI 141 [ D.24476 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 30 29 31 4 arch/arm/kernel/signal.c:377 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 141 [ D.24476 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 31 30 32 4 arch/arm/kernel/signal.c:377 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 45)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 4 -> ( 7 5)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 144
;; rd  out 	(21)
5, 13, 18, 22, 23, 27, 28, 64, 68, 69, 373, 374, 378, 379, 380, 381, 382, 383, 384, 385, 386


;; Succ edge  7 [71.0%] 
;; Succ edge  5 [29.0%]  (fallthru)

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u35(11){ }u36(13){ }u37(25){ }u38(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 144
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 140 153
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 144
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 140 153
;; live  kill	 14 [lr]
;; rd  in  	(21)
5, 13, 18, 22, 23, 27, 28, 64, 68, 69, 373, 374, 378, 379, 380, 381, 382, 383, 384, 385, 386
;; rd  gen 	(4)
3, 62, 377, 387
;; rd  kill	(21)
0, 1, 2, 3, 4, 5, 6, 29, 30, 31, 32, 60, 61, 62, 63, 64, 65, 66, 67, 377, 387

;; Pred edge  4 [29.0%]  (fallthru)
(note 32 31 33 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 33 32 34 5 arch/arm/kernel/signal.c:380 (set (reg/f:SI 153)
        (plus:SI (reg:SI 142 [ D.24470 ])
            (const_int 136 [0x88]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 142 [ D.24470 ])
        (nil)))

(insn 34 33 35 5 arch/arm/kernel/signal.c:380 (set (reg:SI 0 r0)
        (reg/f:SI 153)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 153)
        (nil)))

(insn 35 34 36 5 arch/arm/kernel/signal.c:380 (set (reg:SI 1 r1)
        (reg:SI 141 [ D.24476 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 141 [ D.24476 ])
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn 36 35 37 5 arch/arm/kernel/signal.c:380 (set (reg:SI 2 r2)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 144 [ regs ])
                (const_int 52 [0x34])) [0 <variable>.uregs+52 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn 37 36 38 5 arch/arm/kernel/signal.c:380 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("do_sigaltstack") [flags 0x41] <function_decl 0x10f0e000 do_sigaltstack>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 38 37 39 5 arch/arm/kernel/signal.c:380 (set (reg:SI 140 [ D.24479 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 39 38 40 5 arch/arm/kernel/signal.c:380 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 140 [ D.24479 ])
            (const_int -14 [0xfffffffffffffff2]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 140 [ D.24479 ])
        (nil)))

(jump_insn 40 39 41 5 arch/arm/kernel/signal.c:380 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 45)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3782 [0xec6])
            (nil))))
;; End of basic block 5 -> ( 7 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; rd  out 	(23)
3, 13, 18, 22, 23, 27, 28, 62, 68, 69, 373, 374, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387


;; Succ edge  7 [37.8%] 
;; Succ edge  6 [62.2%]  (fallthru)

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u50(11){ }u51(13){ }u52(25){ }u53(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 139
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; live  gen 	 139
;; live  kill	
;; rd  in  	(23)
3, 13, 18, 22, 23, 27, 28, 62, 68, 69, 373, 374, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387
;; rd  gen 	(1)
376
;; rd  kill	(2)
375, 376

;; Pred edge  5 [62.2%]  (fallthru)
(note 41 40 42 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 42 41 70 6 arch/arm/kernel/signal.c:383 (set (reg:SI 139 [ D.24481 ])
        (mem/s/j:SI (reg/v/f:SI 144 [ regs ]) [0 <variable>.uregs+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 144 [ regs ])
        (nil)))

(jump_insn 70 42 71 6 arch/arm/kernel/signal.c:383 (set (pc)
        (label_ref 54)) -1 (nil))
;; End of basic block 6 -> ( 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; rd  out 	(24)
3, 13, 18, 22, 23, 27, 28, 62, 68, 69, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387


;; Succ edge  8 [100.0%] 

(barrier 71 70 45)

;; Start of basic block ( 3 2 5 4) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u55(11){ }u56(13){ }u57(25){ }u58(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 139 154 155
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 139 154 155
;; live  kill	 14 [lr]
;; rd  in  	(29)
3, 5, 6, 13, 18, 22, 23, 27, 28, 32, 62, 64, 66, 67, 68, 69, 373, 374, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387
;; rd  gen 	(3)
375, 388, 389
;; rd  kill	(8)
29, 30, 31, 32, 375, 376, 388, 389

;; Pred edge  3 [71.0%] 
;; Pred edge  2 [29.0%] 
;; Pred edge  5 [37.8%] 
;; Pred edge  4 [71.0%] 
(code_label 45 71 46 7 78 "" [4 uses])

(note 46 45 48 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 48 46 49 7 arch/arm/kernel/signal.c:386 (set (reg:SI 155)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 49 48 50 7 arch/arm/kernel/signal.c:386 (set (reg:SI 154)
        (and:SI (reg:SI 155)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 155)
        (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
                (const_int -8192 [0xffffffffffffe000]))
            (nil))))

(insn 50 49 51 7 arch/arm/kernel/signal.c:386 (set (reg:SI 0 r0)
        (const_int 11 [0xb])) 167 {*arm_movsi_insn} (nil))

(insn 51 50 52 7 arch/arm/kernel/signal.c:386 (set (reg:SI 1 r1)
        (mem/s/f/j:SI (plus:SI (reg:SI 154)
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 154)
        (nil)))

(call_insn 52 51 53 7 arch/arm/kernel/signal.c:386 (parallel [
            (call (mem:SI (symbol_ref:SI ("force_sig") [flags 0x41] <function_decl 0x10f06c80 force_sig>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 53 52 54 7 arch/arm/kernel/signal.c:387 (set (reg:SI 139 [ D.24481 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 7 -> ( 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; rd  out 	(31)
3, 5, 6, 13, 18, 22, 23, 27, 28, 62, 64, 66, 67, 68, 69, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389


;; Succ edge  8 [100.0%]  (fallthru)

;; Start of basic block ( 7 6) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u66(11){ }u67(13){ }u68(25){ }u69(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(32)
3, 5, 6, 13, 18, 22, 23, 27, 28, 62, 64, 66, 67, 68, 69, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389
;; rd  gen 	(1)
0
;; rd  kill	(7)
0, 1, 2, 3, 4, 5, 6

;; Pred edge  7 [100.0%]  (fallthru)
;; Pred edge  6 [100.0%] 
(code_label 54 53 55 8 79 "" [1 uses])

(note 55 54 60 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 60 55 66 8 arch/arm/kernel/signal.c:388 (set (reg/i:SI 0 r0)
        (reg:SI 139 [ D.24481 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 139 [ D.24481 ])
        (nil)))

(insn 66 60 0 8 arch/arm/kernel/signal.c:388 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 8 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(30)
0, 13, 18, 22, 23, 27, 28, 62, 64, 66, 67, 68, 69, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function sys_sigreturn (sys_sigreturn)[0:1444]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 10 count 13 (  1.6)
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 10 count 14 (  1.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 10 count 14 (  1.8)


sys_sigreturn

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={5d,6u} r1={5d,2u} r2={3d} r3={3d} r11={1d,7u} r12={3d} r13={1d,11u,2d} r14={3d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={6d,3u} r25={1d,7u} r26={1d,6u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r136={1d} r137={1d,1u} r139={2d,1u} r140={1d,1u} r141={1d,3u} r143={1d,2u} r144={1d,2u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} 
;;    total ref usage 327{266d,59u,2e} in 28{26 regular + 2 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251
0[0,5] 1[5,5] 2[10,3] 3[13,3] 11[16,1] 12[17,3] 13[20,1] 14[21,3] 15[24,2] 16[26,2] 17[28,2] 18[30,2] 19[32,2] 20[34,2] 21[36,2] 22[38,2] 23[40,2] 24[42,6] 25[48,1] 26[49,1] 27[50,2] 28[52,2] 29[54,2] 30[56,2] 31[58,2] 32[60,2] 33[62,2] 34[64,2] 35[66,2] 36[68,2] 37[70,2] 38[72,2] 39[74,2] 40[76,2] 41[78,2] 42[80,2] 43[82,2] 44[84,2] 45[86,2] 46[88,2] 47[90,2] 48[92,2] 49[94,2] 50[96,2] 51[98,2] 52[100,2] 53[102,2] 54[104,2] 55[106,2] 56[108,2] 57[110,2] 58[112,2] 59[114,2] 60[116,2] 61[118,2] 62[120,2] 63[122,2] 64[124,2] 65[126,2] 66[128,2] 67[130,2] 68[132,2] 69[134,2] 70[136,2] 71[138,2] 72[140,2] 73[142,2] 74[144,2] 75[146,2] 76[148,2] 77[150,2] 78[152,2] 79[154,2] 80[156,2] 81[158,2] 82[160,2] 83[162,2] 84[164,2] 85[166,2] 86[168,2] 87[170,2] 88[172,2] 89[174,2] 90[176,2] 91[178,2] 92[180,2] 93[182,2] 94[184,2] 95[186,2] 96[188,2] 97[190,2] 98[192,2] 99[194,2] 100[196,2] 101[198,2] 102[200,2] 103[202,2] 104[204,2] 105[206,2] 106[208,2] 107[210,2] 108[212,2] 109[214,2] 110[216,2] 111[218,2] 112[220,2] 113[222,2] 114[224,2] 115[226,2] 116[228,2] 117[230,2] 118[232,2] 119[234,2] 120[236,2] 121[238,2] 122[240,2] 123[242,2] 124[244,2] 125[246,2] 126[248,2] 127[250,2] 136[252,1] 137[253,1] 139[254,2] 140[256,1] 141[257,1] 143[258,1] 144[259,1] 145[260,1] 146[261,1] 147[262,1] 150[263,1] 151[264,1] 152[265,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d4(0){ }d9(1){ }d12(2){ }d15(3){ }d16(11){ }d19(12){ }d20(13){ }d23(14){ }d48(25){ }d49(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
4, 9, 12, 15, 16, 19, 20, 23, 48, 49
;; rd  kill	(26)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 48, 49
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(10)
4, 9, 12, 15, 16, 19, 20, 23, 48, 49

( 0 )->[2]->( 6 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d16(bb 0 insn -1) }u1(13){ d20(bb 0 insn -1) }u2(25){ d48(bb 0 insn -1) }u3(26){ d49(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 141 143 144 145 146 147
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 141 143 144 145 146 147
;; live  kill	
;; rd  in  	(10)
4, 9, 12, 15, 16, 19, 20, 23, 48, 49
;; rd  gen 	(7)
47, 257, 258, 259, 260, 261, 262
;; rd  kill	(12)
42, 43, 44, 45, 46, 47, 257, 258, 259, 260, 261, 262
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 143 144
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 143 144
;; rd  out 	(17)
4, 9, 12, 15, 16, 19, 20, 23, 47, 48, 49, 257, 258, 259, 260, 261, 262
;;  UD chains for artificial uses
;;   reg 11 { d16(bb 0 insn -1) }
;;   reg 13 { d20(bb 0 insn -1) }
;;   reg 25 { d48(bb 0 insn -1) }
;;   reg 26 { d49(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d4(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 7
;;      reg 13 { d20(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 8
;;      reg 145 { d260(bb 2 insn 7) }
;;   eq_note reg 13 { }
;;   UD chains for insn luid 4 uid 10
;;      reg 144 { d259(bb 2 insn 8) }
;;      reg 146 { d261(bb 2 insn 9) }
;;   UD chains for insn luid 5 uid 11
;;      reg 143 { d258(bb 2 insn 2) }
;;   UD chains for insn luid 6 uid 12
;;      reg 141 { d257(bb 2 insn 11) }
;;   UD chains for insn luid 7 uid 13
;;      reg 147 { d262(bb 2 insn 12) }
;;   UD chains for insn luid 8 uid 14
;;      reg 24 { d47(bb 2 insn 13) }

( 2 )->[3]->( 6 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u14(11){ d16(bb 0 insn -1) }u15(13){ d20(bb 0 insn -1) }u16(25){ d48(bb 0 insn -1) }u17(26){ d49(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 143 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144
;; lr  def 	 24 [cc] 136 137 150
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 143 144
;; live  gen 	 24 [cc] 136 137 150
;; live  kill	 24 [cc]
;; rd  in  	(17)
4, 9, 12, 15, 16, 19, 20, 23, 47, 48, 49, 257, 258, 259, 260, 261, 262
;; rd  gen 	(4)
46, 252, 253, 263
;; rd  kill	(9)
42, 43, 44, 45, 46, 47, 252, 253, 263
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 143
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 143
;; rd  out 	(20)
4, 9, 12, 15, 16, 19, 20, 23, 46, 48, 49, 252, 253, 257, 258, 259, 260, 261, 262, 263
;;  UD chains for artificial uses
;;   reg 11 { d16(bb 0 insn -1) }
;;   reg 13 { d20(bb 0 insn -1) }
;;   reg 25 { d48(bb 0 insn -1) }
;;   reg 26 { d49(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 20
;;      reg 144 { d259(bb 2 insn 8) }
;;   UD chains for insn luid 1 uid 21
;;      reg 141 { d257(bb 2 insn 11) }
;;      reg 150 { d263(bb 3 insn 20) }
;;   UD chains for insn luid 2 uid 22
;;      reg 137 { d253(bb 3 insn 21) }
;;   UD chains for insn luid 3 uid 23
;;      reg 24 { d46(bb 3 insn 22) }

( 3 )->[4]->( 6 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u23(11){ d16(bb 0 insn -1) }u24(13){ d20(bb 0 insn -1) }u25(25){ d48(bb 0 insn -1) }u26(26){ d49(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 143
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 140
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 143
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 140
;; live  kill	 14 [lr]
;; rd  in  	(20)
4, 9, 12, 15, 16, 19, 20, 23, 46, 48, 49, 252, 253, 257, 258, 259, 260, 261, 262, 263
;; rd  gen 	(3)
3, 44, 256
;; rd  kill	(15)
0, 1, 2, 3, 4, 21, 22, 23, 42, 43, 44, 45, 46, 47, 256
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; rd  out 	(20)
3, 9, 12, 15, 16, 19, 20, 44, 48, 49, 252, 253, 256, 257, 258, 259, 260, 261, 262, 263
;;  UD chains for artificial uses
;;   reg 11 { d16(bb 0 insn -1) }
;;   reg 13 { d20(bb 0 insn -1) }
;;   reg 25 { d48(bb 0 insn -1) }
;;   reg 26 { d49(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 26
;;      reg 141 { d257(bb 2 insn 11) }
;;   UD chains for insn luid 1 uid 27
;;      reg 13 { d20(bb 0 insn -1) }
;;      reg 0 { d4(bb 0 insn -1) }
;;      reg 1 { d5(bb 4 insn 26) }
;;   UD chains for insn luid 2 uid 28
;;      reg 0 { d3(bb 4 insn 27) }
;;   UD chains for insn luid 3 uid 29
;;      reg 140 { d256(bb 4 insn 28) }
;;   UD chains for insn luid 4 uid 30
;;      reg 24 { d44(bb 4 insn 29) }

( 4 )->[5]->( 7 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u34(11){ d16(bb 0 insn -1) }u35(13){ d20(bb 0 insn -1) }u36(25){ d48(bb 0 insn -1) }u37(26){ d49(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 139
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; live  gen 	 139
;; live  kill	
;; rd  in  	(20)
3, 9, 12, 15, 16, 19, 20, 44, 48, 49, 252, 253, 256, 257, 258, 259, 260, 261, 262, 263
;; rd  gen 	(1)
255
;; rd  kill	(2)
254, 255
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; rd  out 	(21)
3, 9, 12, 15, 16, 19, 20, 44, 48, 49, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263
;;  UD chains for artificial uses
;;   reg 11 { d16(bb 0 insn -1) }
;;   reg 13 { d20(bb 0 insn -1) }
;;   reg 25 { d48(bb 0 insn -1) }
;;   reg 26 { d49(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 32
;;      reg 143 { d258(bb 2 insn 2) }

( 3 2 4 )->[6]->( 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u39(11){ d16(bb 0 insn -1) }u40(13){ d20(bb 0 insn -1) }u41(25){ d48(bb 0 insn -1) }u42(26){ d49(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 139 151 152
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 139 151 152
;; live  kill	 14 [lr]
;; rd  in  	(24)
3, 4, 9, 12, 15, 16, 19, 20, 23, 44, 46, 47, 48, 49, 252, 253, 256, 257, 258, 259, 260, 261, 262, 263
;; rd  gen 	(3)
254, 264, 265
;; rd  kill	(7)
21, 22, 23, 254, 255, 264, 265
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; rd  out 	(26)
3, 4, 9, 12, 15, 16, 19, 20, 44, 46, 47, 48, 49, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265
;;  UD chains for artificial uses
;;   reg 11 { d16(bb 0 insn -1) }
;;   reg 13 { d20(bb 0 insn -1) }
;;   reg 25 { d48(bb 0 insn -1) }
;;   reg 26 { d49(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 38
;;      reg 13 { d20(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 39
;;      reg 152 { d265(bb 6 insn 38) }
;;   eq_note reg 13 { }
;;   UD chains for insn luid 3 uid 41
;;      reg 151 { d264(bb 6 insn 39) }
;;   UD chains for insn luid 4 uid 42
;;      reg 13 { d20(bb 0 insn -1) }
;;      reg 0 { d2(bb 6 insn 40) }
;;      reg 1 { d7(bb 6 insn 41) }

( 6 5 )->[7]->( 1 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u50(11){ d16(bb 0 insn -1) }u51(13){ d20(bb 0 insn -1) }u52(25){ d48(bb 0 insn -1) }u53(26){ d49(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(27)
3, 4, 9, 12, 15, 16, 19, 20, 44, 46, 47, 48, 49, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265
;; rd  gen 	(1)
0
;; rd  kill	(5)
0, 1, 2, 3, 4
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(26)
0, 9, 12, 15, 16, 19, 20, 44, 46, 47, 48, 49, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265
;;  UD chains for artificial uses
;;   reg 11 { d16(bb 0 insn -1) }
;;   reg 13 { d20(bb 0 insn -1) }
;;   reg 25 { d48(bb 0 insn -1) }
;;   reg 26 { d49(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 50
;;      reg 139 { d255(bb 5 insn 32) d254(bb 6 insn 43) }
;;   UD chains for insn luid 1 uid 56
;;      reg 0 { d0(bb 7 insn 50) }

( 7 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u56(0){ d0(bb 7 insn 50) }u57(11){ d16(bb 0 insn -1) }u58(13){ d20(bb 0 insn -1) }u59(14){ }u60(25){ d48(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(26)
0, 9, 12, 15, 16, 19, 20, 44, 46, 47, 48, 49, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(26)
0, 9, 12, 15, 16, 19, 20, 44, 46, 47, 48, 49, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265
;;  UD chains for artificial uses
;;   reg 0 { d0(bb 7 insn 50) }
;;   reg 11 { d16(bb 0 insn -1) }
;;   reg 13 { d20(bb 0 insn -1) }
;;   reg 14 { }
;;   reg 25 { d48(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 14 to worklist
  Adding insn 10 to worklist
  Adding insn 23 to worklist
  Adding insn 30 to worklist
  Adding insn 27 to worklist
  Adding insn 60 to worklist
  Adding insn 42 to worklist
  Adding insn 56 to worklist
Finished finding needed instructions:
  Adding insn 50 to worklist
Processing use of (reg 139 [ D.24458 ]) in insn 50:
  Adding insn 32 to worklist
  Adding insn 43 to worklist
Processing use of (reg 143 [ regs ]) in insn 32:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 0 r0) in insn 56:
Processing use of (reg 13 sp) in insn 42:
Processing use of (reg 0 r0) in insn 42:
  Adding insn 40 to worklist
Processing use of (reg 1 r1) in insn 42:
  Adding insn 41 to worklist
Processing use of (reg 151) in insn 41:
  Adding insn 39 to worklist
Processing use of (reg 152) in insn 39:
  Adding insn 38 to worklist
Processing use of (reg 13 sp) in insn 38:
Processing use of (reg 13 sp) in insn 27:
Processing use of (reg 0 r0) in insn 27:
Processing use of (reg 1 r1) in insn 27:
  Adding insn 26 to worklist
Processing use of (reg 141 [ D.24451 ]) in insn 26:
  Adding insn 11 to worklist
Processing use of (reg 143 [ regs ]) in insn 11:
Processing use of (reg 24 cc) in insn 30:
  Adding insn 29 to worklist
Processing use of (reg 140 [ D.24456 ]) in insn 29:
  Adding insn 28 to worklist
Processing use of (reg 0 r0) in insn 28:
Processing use of (reg 24 cc) in insn 23:
  Adding insn 22 to worklist
Processing use of (reg 137 [ flag ]) in insn 22:
  Adding insn 21 to worklist
Processing use of (reg 141 [ D.24451 ]) in insn 21:
Processing use of (reg 150 [ <variable>.addr_limit ]) in insn 21:
  Adding insn 20 to worklist
Processing use of (reg 144) in insn 20:
  Adding insn 8 to worklist
Processing use of (reg 145) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 13 sp) in insn 7:
Processing use of (reg 144) in insn 10:
Processing use of (reg 146) in insn 10:
  Adding insn 9 to worklist
Processing use of (reg 24 cc) in insn 14:
  Adding insn 13 to worklist
Processing use of (reg 147) in insn 13:
  Adding insn 12 to worklist
Processing use of (reg 141 [ D.24451 ]) in insn 12:


sys_sigreturn

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={5d,6u} r1={5d,2u} r2={3d} r3={3d} r11={1d,7u} r12={3d} r13={1d,11u,2d} r14={3d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={6d,3u} r25={1d,7u} r26={1d,6u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r136={1d} r137={1d,1u} r139={2d,1u} r140={1d,1u} r141={1d,3u} r143={1d,2u} r144={1d,2u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} 
;;    total ref usage 327{266d,59u,2e} in 28{26 regular + 2 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251
0[0,5] 1[5,5] 2[10,3] 3[13,3] 11[16,1] 12[17,3] 13[20,1] 14[21,3] 15[24,2] 16[26,2] 17[28,2] 18[30,2] 19[32,2] 20[34,2] 21[36,2] 22[38,2] 23[40,2] 24[42,6] 25[48,1] 26[49,1] 27[50,2] 28[52,2] 29[54,2] 30[56,2] 31[58,2] 32[60,2] 33[62,2] 34[64,2] 35[66,2] 36[68,2] 37[70,2] 38[72,2] 39[74,2] 40[76,2] 41[78,2] 42[80,2] 43[82,2] 44[84,2] 45[86,2] 46[88,2] 47[90,2] 48[92,2] 49[94,2] 50[96,2] 51[98,2] 52[100,2] 53[102,2] 54[104,2] 55[106,2] 56[108,2] 57[110,2] 58[112,2] 59[114,2] 60[116,2] 61[118,2] 62[120,2] 63[122,2] 64[124,2] 65[126,2] 66[128,2] 67[130,2] 68[132,2] 69[134,2] 70[136,2] 71[138,2] 72[140,2] 73[142,2] 74[144,2] 75[146,2] 76[148,2] 77[150,2] 78[152,2] 79[154,2] 80[156,2] 81[158,2] 82[160,2] 83[162,2] 84[164,2] 85[166,2] 86[168,2] 87[170,2] 88[172,2] 89[174,2] 90[176,2] 91[178,2] 92[180,2] 93[182,2] 94[184,2] 95[186,2] 96[188,2] 97[190,2] 98[192,2] 99[194,2] 100[196,2] 101[198,2] 102[200,2] 103[202,2] 104[204,2] 105[206,2] 106[208,2] 107[210,2] 108[212,2] 109[214,2] 110[216,2] 111[218,2] 112[220,2] 113[222,2] 114[224,2] 115[226,2] 116[228,2] 117[230,2] 118[232,2] 119[234,2] 120[236,2] 121[238,2] 122[240,2] 123[242,2] 124[244,2] 125[246,2] 126[248,2] 127[250,2] 136[252,1] 137[253,1] 139[254,2] 140[256,1] 141[257,1] 143[258,1] 144[259,1] 145[260,1] 146[261,1] 147[262,1] 150[263,1] 151[264,1] 152[265,1] 
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 141 143 144 145 146 147
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 141 143 144 145 146 147
;; live  kill	
;; rd  in  	(10)
4, 9, 12, 15, 16, 19, 20, 23, 48, 49
;; rd  gen 	(7)
47, 257, 258, 259, 260, 261, 262
;; rd  kill	(12)
42, 43, 44, 45, 46, 47, 257, 258, 259, 260, 261, 262

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 arch/arm/kernel/signal.c:328 (set (reg/v/f:SI 143 [ regs ])
        (reg:SI 0 r0 [ regs ])) 167 {*arm_movsi_insn} (nil))

(note 3 2 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 3 8 2 arch/arm/kernel/signal.c:332 (set (reg:SI 145)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 8 7 9 2 arch/arm/kernel/signal.c:332 (set (reg:SI 144)
        (and:SI (reg:SI 145)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 145)
        (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
                (const_int -8192 [0xffffffffffffe000]))
            (nil))))

(insn 9 8 10 2 arch/arm/kernel/signal.c:332 (set (reg/f:SI 146)
        (symbol_ref:SI ("do_no_restart_syscall") [flags 0x41] <function_decl 0x10aeff00 do_no_restart_syscall>)) 167 {*arm_movsi_insn} (nil))

(insn 10 9 11 2 arch/arm/kernel/signal.c:332 (set (mem/s/f/j:SI (plus:SI (reg:SI 144)
                (const_int 712 [0x2c8])) [0 <variable>.restart_block.fn+0 S4 A64])
        (reg/f:SI 146)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 146)
        (expr_list:REG_EQUAL (symbol_ref:SI ("do_no_restart_syscall") [flags 0x41] <function_decl 0x10aeff00 do_no_restart_syscall>)
            (nil))))

(insn 11 10 12 2 arch/arm/kernel/signal.c:339 (set (reg:SI 141 [ D.24451 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 143 [ regs ])
                (const_int 52 [0x34])) [0 <variable>.uregs+52 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 12 11 13 2 arch/arm/kernel/signal.c:339 (set (reg:SI 147)
        (and:SI (reg:SI 141 [ D.24451 ])
            (const_int 7 [0x7]))) 67 {*arm_andsi3_insn} (nil))

(insn 13 12 14 2 arch/arm/kernel/signal.c:339 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 147)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 147)
        (nil)))

(jump_insn 14 13 15 2 arch/arm/kernel/signal.c:339 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 35)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
            (nil))))
;; End of basic block 2 -> ( 6 3)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 143 144
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 143 144
;; rd  out 	(17)
4, 9, 12, 15, 16, 19, 20, 23, 47, 48, 49, 257, 258, 259, 260, 261, 262


;; Succ edge  6 [29.0%] 
;; Succ edge  3 [71.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u14(11){ }u15(13){ }u16(25){ }u17(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 143 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144
;; lr  def 	 24 [cc] 136 137 150
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 143 144
;; live  gen 	 24 [cc] 136 137 150
;; live  kill	 24 [cc]
;; rd  in  	(17)
4, 9, 12, 15, 16, 19, 20, 23, 47, 48, 49, 257, 258, 259, 260, 261, 262
;; rd  gen 	(4)
46, 252, 253, 263
;; rd  kill	(9)
42, 43, 44, 45, 46, 47, 252, 253, 263

;; Pred edge  2 [71.0%]  (fallthru)
(note 15 14 20 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 20 15 21 3 arch/arm/kernel/signal.c:344 (set (reg:SI 150 [ <variable>.addr_limit ])
        (mem/s/j:SI (plus:SI (reg:SI 144)
                (const_int 8 [0x8])) [0 <variable>.addr_limit+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 144)
        (nil)))

(insn 21 20 22 3 arch/arm/kernel/signal.c:344 (parallel [
            (set (reg/v:SI 137 [ flag ])
                (asm_operands:SI ("adds %1, %2, %3; sbcccs %1, %1, %0; movcc %0, #0") ("=&r") 0 [
                        (reg:SI 141 [ D.24451 ])
                        (const_int 752 [0x2f0])
                        (reg:SI 150 [ <variable>.addr_limit ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("Ir") 0)
                        (asm_input:SI ("0") 0)
                    ] 8632853))
            (set (reg/v:SI 136 [ roksum ])
                (asm_operands:SI ("adds %1, %2, %3; sbcccs %1, %1, %0; movcc %0, #0") ("=&r") 1 [
                        (reg:SI 141 [ D.24451 ])
                        (const_int 752 [0x2f0])
                        (reg:SI 150 [ <variable>.addr_limit ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("Ir") 0)
                        (asm_input:SI ("0") 0)
                    ] 8632853))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg:SI 150 [ <variable>.addr_limit ])
        (expr_list:REG_UNUSED (reg/v:SI 136 [ roksum ])
            (expr_list:REG_UNUSED (reg:QI 24 cc)
                (nil)))))

(insn 22 21 23 3 arch/arm/kernel/signal.c:344 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 137 [ flag ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 137 [ flag ])
        (nil)))

(jump_insn 23 22 24 3 arch/arm/kernel/signal.c:344 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 35)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 3 -> ( 6 4)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 143
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 143
;; rd  out 	(20)
4, 9, 12, 15, 16, 19, 20, 23, 46, 48, 49, 252, 253, 257, 258, 259, 260, 261, 262, 263


;; Succ edge  6 [71.0%] 
;; Succ edge  4 [29.0%]  (fallthru)

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u23(11){ }u24(13){ }u25(25){ }u26(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 143
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 140
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 143
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 140
;; live  kill	 14 [lr]
;; rd  in  	(20)
4, 9, 12, 15, 16, 19, 20, 23, 46, 48, 49, 252, 253, 257, 258, 259, 260, 261, 262, 263
;; rd  gen 	(3)
3, 44, 256
;; rd  kill	(15)
0, 1, 2, 3, 4, 21, 22, 23, 42, 43, 44, 45, 46, 47, 256

;; Pred edge  3 [29.0%]  (fallthru)
(note 24 23 26 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 26 24 27 4 arch/arm/kernel/signal.c:347 (set (reg:SI 1 r1)
        (reg:SI 141 [ D.24451 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 141 [ D.24451 ])
        (nil)))

(call_insn 27 26 28 4 arch/arm/kernel/signal.c:347 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("restore_sigframe") [flags 0x3] <function_decl 0x1140a380 restore_sigframe>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 28 27 29 4 arch/arm/kernel/signal.c:347 (set (reg:SI 140 [ D.24456 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 29 28 30 4 arch/arm/kernel/signal.c:347 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 140 [ D.24456 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 140 [ D.24456 ])
        (nil)))

(jump_insn 30 29 31 4 arch/arm/kernel/signal.c:347 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 35)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
            (nil))))
;; End of basic block 4 -> ( 6 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; rd  out 	(20)
3, 9, 12, 15, 16, 19, 20, 44, 48, 49, 252, 253, 256, 257, 258, 259, 260, 261, 262, 263


;; Succ edge  6 [61.0%] 
;; Succ edge  5 [39.0%]  (fallthru)

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u34(11){ }u35(13){ }u36(25){ }u37(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 139
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; live  gen 	 139
;; live  kill	
;; rd  in  	(20)
3, 9, 12, 15, 16, 19, 20, 44, 48, 49, 252, 253, 256, 257, 258, 259, 260, 261, 262, 263
;; rd  gen 	(1)
255
;; rd  kill	(2)
254, 255

;; Pred edge  4 [39.0%]  (fallthru)
(note 31 30 32 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 32 31 60 5 arch/arm/kernel/signal.c:350 (set (reg:SI 139 [ D.24458 ])
        (mem/s/j:SI (reg/v/f:SI 143 [ regs ]) [0 <variable>.uregs+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 143 [ regs ])
        (nil)))

(jump_insn 60 32 61 5 arch/arm/kernel/signal.c:350 (set (pc)
        (label_ref 44)) -1 (nil))
;; End of basic block 5 -> ( 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; rd  out 	(21)
3, 9, 12, 15, 16, 19, 20, 44, 48, 49, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263


;; Succ edge  7 [100.0%] 

(barrier 61 60 35)

;; Start of basic block ( 3 2 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u39(11){ }u40(13){ }u41(25){ }u42(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 139 151 152
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 139 151 152
;; live  kill	 14 [lr]
;; rd  in  	(24)
3, 4, 9, 12, 15, 16, 19, 20, 23, 44, 46, 47, 48, 49, 252, 253, 256, 257, 258, 259, 260, 261, 262, 263
;; rd  gen 	(3)
254, 264, 265
;; rd  kill	(7)
21, 22, 23, 254, 255, 264, 265

;; Pred edge  3 [71.0%] 
;; Pred edge  2 [29.0%] 
;; Pred edge  4 [61.0%] 
(code_label 35 61 36 6 84 "" [3 uses])

(note 36 35 38 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 38 36 39 6 arch/arm/kernel/signal.c:353 (set (reg:SI 152)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 39 38 40 6 arch/arm/kernel/signal.c:353 (set (reg:SI 151)
        (and:SI (reg:SI 152)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 152)
        (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
                (const_int -8192 [0xffffffffffffe000]))
            (nil))))

(insn 40 39 41 6 arch/arm/kernel/signal.c:353 (set (reg:SI 0 r0)
        (const_int 11 [0xb])) 167 {*arm_movsi_insn} (nil))

(insn 41 40 42 6 arch/arm/kernel/signal.c:353 (set (reg:SI 1 r1)
        (mem/s/f/j:SI (plus:SI (reg:SI 151)
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 151)
        (nil)))

(call_insn 42 41 43 6 arch/arm/kernel/signal.c:353 (parallel [
            (call (mem:SI (symbol_ref:SI ("force_sig") [flags 0x41] <function_decl 0x10f06c80 force_sig>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 43 42 44 6 arch/arm/kernel/signal.c:354 (set (reg:SI 139 [ D.24458 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 6 -> ( 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; rd  out 	(26)
3, 4, 9, 12, 15, 16, 19, 20, 44, 46, 47, 48, 49, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 6 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u50(11){ }u51(13){ }u52(25){ }u53(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(27)
3, 4, 9, 12, 15, 16, 19, 20, 44, 46, 47, 48, 49, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265
;; rd  gen 	(1)
0
;; rd  kill	(5)
0, 1, 2, 3, 4

;; Pred edge  6 [100.0%]  (fallthru)
;; Pred edge  5 [100.0%] 
(code_label 44 43 45 7 85 "" [1 uses])

(note 45 44 50 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 50 45 56 7 arch/arm/kernel/signal.c:355 (set (reg/i:SI 0 r0)
        (reg:SI 139 [ D.24458 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 139 [ D.24458 ])
        (nil)))

(insn 56 50 0 7 arch/arm/kernel/signal.c:355 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 7 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(26)
0, 9, 12, 15, 16, 19, 20, 44, 46, 47, 48, 49, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function sys_sigaction (sys_sigaction)[0:1440]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 18 n_edges 26 count 32 (  1.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 18 n_edges 26 count 34 (  1.9)
df_worklist_dataflow_doublequeue:n_basic_blocks 18 n_edges 26 count 34 (  1.9)


sys_sigaction

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={4d,5u} r1={3d,2u} r2={3d,2u} r3={2d} r11={1d,17u} r12={2d} r13={1d,20u,2d} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={22d,11u} r25={1d,28u} r26={1d,16u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r135={1d} r136={1d} r137={1d,4u} r138={1d,2u} r139={1d} r140={1d,2u} r141={1d,1u} r142={1d} r143={1d,1u} r144={1d} r145={1d,1u} r146={1d,4u} r147={1d,1u} r148={1d,2u} r149={1d} r150={1d,2u} r151={3d,2u} r152={2d,1u} r153={2d,1u} r155={1d,1u} r156={1d,7u} r157={1d,8u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r162={1d,1u} r164={1d,1u} r166={1d,1u} r170={1d,1u} r172={1d,1u} r173={1d,1u} r174={1d,1u} r175={1d,1u} r176={1d,1u} r177={1d,1u} r178={1d,1u} r179={1d,1u} r181={1d,1u} r182={1d,1u} r184={1d,1u} r185={1d,1u} r187={1d,1u} r188={1d,1u} 
;;    total ref usage 364{199d,163u,2e} in 75{74 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151
0[0,4] 1[4,3] 2[7,3] 3[10,2] 11[12,1] 12[13,2] 13[15,1] 14[16,2] 15[18,1] 16[19,1] 17[20,1] 18[21,1] 19[22,1] 20[23,1] 21[24,1] 22[25,1] 23[26,1] 24[27,22] 25[49,1] 26[50,1] 27[51,1] 28[52,1] 29[53,1] 30[54,1] 31[55,1] 32[56,1] 33[57,1] 34[58,1] 35[59,1] 36[60,1] 37[61,1] 38[62,1] 39[63,1] 40[64,1] 41[65,1] 42[66,1] 43[67,1] 44[68,1] 45[69,1] 46[70,1] 47[71,1] 48[72,1] 49[73,1] 50[74,1] 51[75,1] 52[76,1] 53[77,1] 54[78,1] 55[79,1] 56[80,1] 57[81,1] 58[82,1] 59[83,1] 60[84,1] 61[85,1] 62[86,1] 63[87,1] 64[88,1] 65[89,1] 66[90,1] 67[91,1] 68[92,1] 69[93,1] 70[94,1] 71[95,1] 72[96,1] 73[97,1] 74[98,1] 75[99,1] 76[100,1] 77[101,1] 78[102,1] 79[103,1] 80[104,1] 81[105,1] 82[106,1] 83[107,1] 84[108,1] 85[109,1] 86[110,1] 87[111,1] 88[112,1] 89[113,1] 90[114,1] 91[115,1] 92[116,1] 93[117,1] 94[118,1] 95[119,1] 96[120,1] 97[121,1] 98[122,1] 99[123,1] 100[124,1] 101[125,1] 102[126,1] 103[127,1] 104[128,1] 105[129,1] 106[130,1] 107[131,1] 108[132,1] 109[133,1] 110[134,1] 111[135,1] 112[136,1] 113[137,1] 114[138,1] 115[139,1] 116[140,1] 117[141,1] 118[142,1] 119[143,1] 120[144,1] 121[145,1] 122[146,1] 123[147,1] 124[148,1] 125[149,1] 126[150,1] 127[151,1] 135[152,1] 136[153,1] 137[154,1] 138[155,1] 139[156,1] 140[157,1] 141[158,1] 142[159,1] 143[160,1] 144[161,1] 145[162,1] 146[163,1] 147[164,1] 148[165,1] 149[166,1] 150[167,1] 151[168,3] 152[171,2] 153[173,2] 155[175,1] 156[176,1] 157[177,1] 158[178,1] 159[179,1] 160[180,1] 162[181,1] 164[182,1] 166[183,1] 170[184,1] 172[185,1] 173[186,1] 174[187,1] 175[188,1] 176[189,1] 177[190,1] 178[191,1] 179[192,1] 181[193,1] 182[194,1] 184[195,1] 185[196,1] 187[197,1] 188[198,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d3(0){ }d6(1){ }d9(2){ }d11(3){ }d12(11){ }d14(12){ }d15(13){ }d17(14){ }d49(25){ }d50(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
3, 6, 9, 11, 12, 14, 15, 17, 49, 50
;; rd  kill	(20)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 49, 50
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
3, 6, 9, 11, 12, 14, 15, 17, 49, 50

( 0 )->[2]->( 4 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d12(bb 0 insn -1) }u1(13){ d15(bb 0 insn -1) }u2(25){ d49(bb 0 insn -1) }u3(26){ d50(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 155 156 157
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 155 156 157
;; live  kill	
;; rd  in  	(10)
3, 6, 9, 11, 12, 14, 15, 17, 49, 50
;; rd  gen 	(4)
48, 175, 176, 177
;; rd  kill	(25)
27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 175, 176, 177
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 156 157
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 156 157
;; rd  out 	(14)
3, 6, 9, 11, 12, 14, 15, 17, 48, 49, 50, 175, 176, 177
;;  UD chains for artificial uses
;;   reg 11 { d12(bb 0 insn -1) }
;;   reg 13 { d15(bb 0 insn -1) }
;;   reg 25 { d49(bb 0 insn -1) }
;;   reg 26 { d50(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d3(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 3
;;      reg 1 { d6(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 4
;;      reg 2 { d9(bb 0 insn -1) }
;;   UD chains for insn luid 3 uid 8
;;      reg 156 { d176(bb 2 insn 3) }
;;   UD chains for insn luid 4 uid 9
;;      reg 24 { d48(bb 2 insn 8) }

( 2 )->[3]->( 8 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u9(11){ d12(bb 0 insn -1) }u10(13){ d15(bb 0 insn -1) }u11(25){ d49(bb 0 insn -1) }u12(26){ d50(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 155 156 157
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156
;; lr  def 	 153
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 155 156 157
;; live  gen 	 153
;; live  kill	
;; rd  in  	(14)
3, 6, 9, 11, 12, 14, 15, 17, 48, 49, 50, 175, 176, 177
;; rd  gen 	(1)
173
;; rd  kill	(2)
173, 174
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153 155 157
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153 155 157
;; rd  out 	(15)
3, 6, 9, 11, 12, 14, 15, 17, 48, 49, 50, 173, 175, 176, 177
;;  UD chains for artificial uses
;;   reg 11 { d12(bb 0 insn -1) }
;;   reg 13 { d15(bb 0 insn -1) }
;;   reg 25 { d49(bb 0 insn -1) }
;;   reg 26 { d50(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 11
;;      reg 156 { d176(bb 2 insn 3) }

( 2 )->[4]->( 16 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u14(11){ d12(bb 0 insn -1) }u15(13){ d15(bb 0 insn -1) }u16(25){ d49(bb 0 insn -1) }u17(26){ d50(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 156 157
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156
;; lr  def 	 24 [cc] 149 150 158 159 160
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 156 157
;; live  gen 	 24 [cc] 149 150 158 159 160
;; live  kill	 24 [cc]
;; rd  in  	(14)
3, 6, 9, 11, 12, 14, 15, 17, 48, 49, 50, 175, 176, 177
;; rd  gen 	(6)
46, 166, 167, 178, 179, 180
;; rd  kill	(27)
27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 166, 167, 178, 179, 180
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 150 155 156 157
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 150 155 156 157
;; rd  out 	(19)
3, 6, 9, 11, 12, 14, 15, 17, 46, 49, 50, 166, 167, 175, 176, 177, 178, 179, 180
;;  UD chains for artificial uses
;;   reg 11 { d12(bb 0 insn -1) }
;;   reg 13 { d15(bb 0 insn -1) }
;;   reg 25 { d49(bb 0 insn -1) }
;;   reg 26 { d50(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 17
;;      reg 13 { d15(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 18
;;      reg 159 { d179(bb 4 insn 17) }
;;   eq_note reg 13 { }
;;   UD chains for insn luid 2 uid 19
;;      reg 158 { d178(bb 4 insn 18) }
;;   UD chains for insn luid 3 uid 20
;;      reg 156 { d176(bb 2 insn 3) }
;;      reg 160 { d180(bb 4 insn 19) }
;;   UD chains for insn luid 4 uid 21
;;      reg 150 { d167(bb 4 insn 20) }
;;   UD chains for insn luid 5 uid 22
;;      reg 24 { d46(bb 4 insn 21) }

( 4 )->[5]->( 16 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u26(11){ d12(bb 0 insn -1) }u27(13){ d15(bb 0 insn -1) }u28(25){ d49(bb 0 insn -1) }u29(26){ d50(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 150 155 156 157
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 156
;; lr  def 	 24 [cc] 147 148
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 150 155 156 157
;; live  gen 	 24 [cc] 147 148
;; live  kill	 24 [cc]
;; rd  in  	(19)
3, 6, 9, 11, 12, 14, 15, 17, 46, 49, 50, 166, 167, 175, 176, 177, 178, 179, 180
;; rd  gen 	(3)
45, 164, 165
;; rd  kill	(24)
27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 164, 165
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147 148 155 156 157
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147 148 155 156 157
;; rd  out 	(21)
3, 6, 9, 11, 12, 14, 15, 17, 45, 49, 50, 164, 165, 166, 167, 175, 176, 177, 178, 179, 180
;;  UD chains for artificial uses
;;   reg 11 { d12(bb 0 insn -1) }
;;   reg 13 { d15(bb 0 insn -1) }
;;   reg 25 { d49(bb 0 insn -1) }
;;   reg 26 { d50(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 25
;;      reg 150 { d167(bb 4 insn 20) }
;;      reg 156 { d176(bb 2 insn 3) }
;;   UD chains for insn luid 1 uid 26
;;      reg 148 { d165(bb 5 insn 25) }
;;   UD chains for insn luid 2 uid 27
;;      reg 24 { d45(bb 5 insn 26) }

( 5 )->[6]->( 16 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u34(11){ d12(bb 0 insn -1) }u35(13){ d15(bb 0 insn -1) }u36(25){ d49(bb 0 insn -1) }u37(26){ d50(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147 148 155 156 157
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 156
;; lr  def 	 24 [cc] 145 146 162
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147 148 155 156 157
;; live  gen 	 24 [cc] 145 146 162
;; live  kill	 24 [cc]
;; rd  in  	(21)
3, 6, 9, 11, 12, 14, 15, 17, 45, 49, 50, 164, 165, 166, 167, 175, 176, 177, 178, 179, 180
;; rd  gen 	(4)
44, 162, 163, 181
;; rd  kill	(25)
27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 162, 163, 181
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 145 146 147 155 156 157
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 145 146 147 155 156 157
;; rd  out 	(24)
3, 6, 9, 11, 12, 14, 15, 17, 44, 49, 50, 162, 163, 164, 165, 166, 167, 175, 176, 177, 178, 179, 180, 181
;;  UD chains for artificial uses
;;   reg 11 { d12(bb 0 insn -1) }
;;   reg 13 { d15(bb 0 insn -1) }
;;   reg 25 { d49(bb 0 insn -1) }
;;   reg 26 { d50(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 29
;;      reg 156 { d176(bb 2 insn 3) }
;;   UD chains for insn luid 1 uid 31
;;      reg 148 { d165(bb 5 insn 25) }
;;      reg 162 { d181(bb 6 insn 29) }
;;   UD chains for insn luid 2 uid 32
;;      reg 146 { d163(bb 6 insn 31) }
;;   UD chains for insn luid 3 uid 33
;;      reg 24 { d44(bb 6 insn 32) }

( 6 )->[7]->( 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u43(11){ d12(bb 0 insn -1) }u44(13){ d15(bb 0 insn -1) }u45(25){ d49(bb 0 insn -1) }u46(26){ d50(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 155 156 157
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 156
;; lr  def 	 24 [cc] 141 142 143 144 153 164 166
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 155 156 157
;; live  gen 	 141 142 143 144 153 164 166
;; live  kill	 24 [cc]
;; rd  in  	(24)
3, 6, 9, 11, 12, 14, 15, 17, 44, 49, 50, 162, 163, 164, 165, 166, 167, 175, 176, 177, 178, 179, 180, 181
;; rd  gen 	(7)
158, 159, 160, 161, 174, 182, 183
;; rd  kill	(30)
27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 158, 159, 160, 161, 173, 174, 182, 183
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153 155 157
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153 155 157
;; rd  out 	(30)
3, 6, 9, 11, 12, 14, 15, 17, 49, 50, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183
;;  UD chains for artificial uses
;;   reg 11 { d12(bb 0 insn -1) }
;;   reg 13 { d15(bb 0 insn -1) }
;;   reg 25 { d49(bb 0 insn -1) }
;;   reg 26 { d50(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 35
;;      reg 156 { d176(bb 2 insn 3) }
;;   UD chains for insn luid 1 uid 37
;;      reg 146 { d163(bb 6 insn 31) }
;;      reg 164 { d182(bb 7 insn 35) }
;;   UD chains for insn luid 2 uid 38
;;      reg 25 { d49(bb 0 insn -1) }
;;      reg 147 { d164(bb 5 insn 25) }
;;   UD chains for insn luid 3 uid 39
;;      reg 25 { d49(bb 0 insn -1) }
;;      reg 145 { d162(bb 6 insn 31) }
;;   UD chains for insn luid 4 uid 40
;;      reg 25 { d49(bb 0 insn -1) }
;;      reg 143 { d160(bb 7 insn 37) }
;;   UD chains for insn luid 5 uid 41
;;      reg 156 { d176(bb 2 insn 3) }
;;   UD chains for insn luid 6 uid 43
;;      reg 146 { d163(bb 6 insn 31) }
;;      reg 166 { d183(bb 7 insn 41) }
;;   UD chains for insn luid 7 uid 44
;;      reg 25 { d49(bb 0 insn -1) }
;;      reg 141 { d158(bb 7 insn 43) }
;;   UD chains for insn luid 8 uid 46
;;      reg 25 { d49(bb 0 insn -1) }
;;      reg 146 { d163(bb 6 insn 31) }
;;   UD chains for insn luid 9 uid 47
;;      reg 25 { d49(bb 0 insn -1) }

( 7 3 )->[8]->( 10 9 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u64(11){ d12(bb 0 insn -1) }u65(13){ d15(bb 0 insn -1) }u66(25){ d49(bb 0 insn -1) }u67(26){ d50(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153 155 157
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153 155 157
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(32)
3, 6, 9, 11, 12, 14, 15, 17, 48, 49, 50, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183
;; rd  gen 	(1)
43
;; rd  kill	(22)
27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153 155 157
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153 155 157
;; rd  out 	(32)
3, 6, 9, 11, 12, 14, 15, 17, 43, 49, 50, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183
;;  UD chains for artificial uses
;;   reg 11 { d12(bb 0 insn -1) }
;;   reg 13 { d15(bb 0 insn -1) }
;;   reg 25 { d49(bb 0 insn -1) }
;;   reg 26 { d50(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 50
;;      reg 157 { d177(bb 2 insn 4) }
;;   UD chains for insn luid 1 uid 51
;;      reg 24 { d43(bb 8 insn 50) }

( 8 )->[9]->( 11 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u70(11){ d12(bb 0 insn -1) }u71(13){ d15(bb 0 insn -1) }u72(25){ d49(bb 0 insn -1) }u73(26){ d50(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153 155 157
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157
;; lr  def 	 152
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153 155 157
;; live  gen 	 152
;; live  kill	
;; rd  in  	(32)
3, 6, 9, 11, 12, 14, 15, 17, 43, 49, 50, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183
;; rd  gen 	(1)
171
;; rd  kill	(2)
171, 172
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 153 155 157
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 153 155 157
;; rd  out 	(33)
3, 6, 9, 11, 12, 14, 15, 17, 43, 49, 50, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183
;;  UD chains for artificial uses
;;   reg 11 { d12(bb 0 insn -1) }
;;   reg 13 { d15(bb 0 insn -1) }
;;   reg 25 { d49(bb 0 insn -1) }
;;   reg 26 { d50(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 53
;;      reg 157 { d177(bb 2 insn 4) }

( 8 )->[10]->( 11 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u75(11){ d12(bb 0 insn -1) }u76(13){ d15(bb 0 insn -1) }u77(25){ d49(bb 0 insn -1) }u78(26){ d50(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153 155 157
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 152
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153 155 157
;; live  gen 	 152
;; live  kill	
;; rd  in  	(32)
3, 6, 9, 11, 12, 14, 15, 17, 43, 49, 50, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183
;; rd  gen 	(1)
172
;; rd  kill	(2)
171, 172
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 153 155 157
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 153 155 157
;; rd  out 	(33)
3, 6, 9, 11, 12, 14, 15, 17, 43, 49, 50, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183
;;  UD chains for artificial uses
;;   reg 11 { d12(bb 0 insn -1) }
;;   reg 13 { d15(bb 0 insn -1) }
;;   reg 25 { d49(bb 0 insn -1) }
;;   reg 26 { d50(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 58
;;      reg 25 { d49(bb 0 insn -1) }

( 10 9 )->[11]->( 12 17 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u80(11){ d12(bb 0 insn -1) }u81(13){ d15(bb 0 insn -1) }u82(25){ d49(bb 0 insn -1) }u83(26){ d50(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 153 155 157
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 153 155 157
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 151 170 172 173 174 175
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 153 155 157
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 151 170 172 173 174 175
;; live  kill	 14 [lr]
;; rd  in  	(34)
3, 6, 9, 11, 12, 14, 15, 17, 43, 49, 50, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183
;; rd  gen 	(8)
1, 39, 170, 184, 185, 186, 187, 188
;; rd  kill	(36)
0, 1, 2, 3, 16, 17, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 168, 169, 170, 184, 185, 186, 187, 188
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 151 157
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 157
;; rd  out 	(39)
1, 6, 9, 11, 12, 14, 15, 39, 49, 50, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188
;;  UD chains for artificial uses
;;   reg 11 { d12(bb 0 insn -1) }
;;   reg 13 { d15(bb 0 insn -1) }
;;   reg 25 { d49(bb 0 insn -1) }
;;   reg 26 { d50(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 61
;;      reg 155 { d175(bb 2 insn 2) }
;;   UD chains for insn luid 1 uid 62
;;      reg 153 { d174(bb 7 insn 47) d173(bb 3 insn 11) }
;;   UD chains for insn luid 2 uid 63
;;      reg 152 { d172(bb 10 insn 58) d171(bb 9 insn 53) }
;;   UD chains for insn luid 3 uid 64
;;      reg 13 { d15(bb 0 insn -1) }
;;      reg 0 { d2(bb 11 insn 61) }
;;      reg 1 { d5(bb 11 insn 62) }
;;      reg 2 { d8(bb 11 insn 63) }
;;   UD chains for insn luid 4 uid 65
;;      reg 0 { d1(bb 11 insn 64) }
;;   UD chains for insn luid 5 uid 66
;;      reg 151 { d170(bb 11 insn 65) }
;;   UD chains for insn luid 6 uid 67
;;      reg 24 { d41(bb 11 insn 66) }
;;   UD chains for insn luid 7 uid 69
;;      reg 157 { d177(bb 2 insn 4) }
;;   UD chains for insn luid 8 uid 70
;;      reg 24 { d40(bb 11 insn 69) }
;;   UD chains for insn luid 9 uid 72
;;      reg 170 { d184(bb 11 insn 67) }
;;      reg 172 { d185(bb 11 insn 70) }
;;   UD chains for insn luid 10 uid 73
;;      reg 173 { d186(bb 11 insn 72) }
;;   UD chains for insn luid 11 uid 74
;;      reg 174 { d187(bb 11 insn 73) }
;;   UD chains for insn luid 12 uid 75
;;      reg 175 { d188(bb 11 insn 74) }
;;   UD chains for insn luid 13 uid 76
;;      reg 24 { d39(bb 11 insn 75) }

( 11 )->[12]->( 16 13 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u102(11){ d12(bb 0 insn -1) }u103(13){ d15(bb 0 insn -1) }u104(25){ d49(bb 0 insn -1) }u105(26){ d50(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 157
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157
;; lr  def 	 24 [cc] 139 140 176 177 178
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157
;; live  gen 	 24 [cc] 139 140 176 177 178
;; live  kill	 24 [cc]
;; rd  in  	(39)
1, 6, 9, 11, 12, 14, 15, 39, 49, 50, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188
;; rd  gen 	(6)
37, 156, 157, 189, 190, 191
;; rd  kill	(27)
27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 156, 157, 189, 190, 191
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 157
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 157
;; rd  out 	(44)
1, 6, 9, 11, 12, 14, 15, 37, 49, 50, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191
;;  UD chains for artificial uses
;;   reg 11 { d12(bb 0 insn -1) }
;;   reg 13 { d15(bb 0 insn -1) }
;;   reg 25 { d49(bb 0 insn -1) }
;;   reg 26 { d50(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 79
;;      reg 13 { d15(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 80
;;      reg 177 { d190(bb 12 insn 79) }
;;   eq_note reg 13 { }
;;   UD chains for insn luid 2 uid 81
;;      reg 176 { d189(bb 12 insn 80) }
;;   UD chains for insn luid 3 uid 82
;;      reg 157 { d177(bb 2 insn 4) }
;;      reg 178 { d191(bb 12 insn 81) }
;;   UD chains for insn luid 4 uid 83
;;      reg 140 { d157(bb 12 insn 82) }
;;   UD chains for insn luid 5 uid 84
;;      reg 24 { d37(bb 12 insn 83) }

( 12 )->[13]->( 16 14 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u114(11){ d12(bb 0 insn -1) }u115(13){ d15(bb 0 insn -1) }u116(25){ d49(bb 0 insn -1) }u117(26){ d50(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 157
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 157
;; lr  def 	 24 [cc] 138 179
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 157
;; live  gen 	 24 [cc] 138 179
;; live  kill	 24 [cc]
;; rd  in  	(44)
1, 6, 9, 11, 12, 14, 15, 37, 49, 50, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191
;; rd  gen 	(3)
36, 155, 192
;; rd  kill	(24)
27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 155, 192
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 157
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 157
;; rd  out 	(46)
1, 6, 9, 11, 12, 14, 15, 36, 49, 50, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192
;;  UD chains for artificial uses
;;   reg 11 { d12(bb 0 insn -1) }
;;   reg 13 { d15(bb 0 insn -1) }
;;   reg 25 { d49(bb 0 insn -1) }
;;   reg 26 { d50(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 86
;;      reg 25 { d49(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 88
;;      reg 140 { d157(bb 12 insn 82) }
;;      reg 157 { d177(bb 2 insn 4) }
;;      reg 179 { d192(bb 13 insn 86) }
;;   UD chains for insn luid 2 uid 89
;;      reg 138 { d155(bb 13 insn 88) }
;;   UD chains for insn luid 3 uid 90
;;      reg 24 { d36(bb 13 insn 89) }

( 13 )->[14]->( 16 15 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u124(11){ d12(bb 0 insn -1) }u125(13){ d15(bb 0 insn -1) }u126(25){ d49(bb 0 insn -1) }u127(26){ d50(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 157
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 157
;; lr  def 	 24 [cc] 137 181 182
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 157
;; live  gen 	 24 [cc] 137 181 182
;; live  kill	 24 [cc]
;; rd  in  	(46)
1, 6, 9, 11, 12, 14, 15, 36, 49, 50, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192
;; rd  gen 	(4)
35, 154, 193, 194
;; rd  kill	(25)
27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 154, 193, 194
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 157
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 157
;; rd  out 	(49)
1, 6, 9, 11, 12, 14, 15, 35, 49, 50, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194
;;  UD chains for artificial uses
;;   reg 11 { d12(bb 0 insn -1) }
;;   reg 13 { d15(bb 0 insn -1) }
;;   reg 25 { d49(bb 0 insn -1) }
;;   reg 26 { d50(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 92
;;      reg 25 { d49(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 93
;;      reg 157 { d177(bb 2 insn 4) }
;;   UD chains for insn luid 2 uid 95
;;      reg 138 { d155(bb 13 insn 88) }
;;      reg 181 { d193(bb 14 insn 92) }
;;      reg 182 { d194(bb 14 insn 93) }
;;   UD chains for insn luid 3 uid 96
;;      reg 137 { d154(bb 14 insn 95) }
;;   UD chains for insn luid 4 uid 97
;;      reg 24 { d35(bb 14 insn 96) }

( 14 )->[15]->( 17 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u135(11){ d12(bb 0 insn -1) }u136(13){ d15(bb 0 insn -1) }u137(25){ d49(bb 0 insn -1) }u138(26){ d50(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 157
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 157
;; lr  def 	 24 [cc] 135 136 151 184 185 187 188
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 157
;; live  gen 	 135 136 151 184 185 187 188
;; live  kill	 24 [cc]
;; rd  in  	(49)
1, 6, 9, 11, 12, 14, 15, 35, 49, 50, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194
;; rd  gen 	(7)
152, 153, 168, 195, 196, 197, 198
;; rd  kill	(31)
27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 152, 153, 168, 169, 170, 195, 196, 197, 198
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 151
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151
;; rd  out 	(54)
1, 6, 9, 11, 12, 14, 15, 49, 50, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198
;;  UD chains for artificial uses
;;   reg 11 { d12(bb 0 insn -1) }
;;   reg 13 { d15(bb 0 insn -1) }
;;   reg 25 { d49(bb 0 insn -1) }
;;   reg 26 { d50(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 99
;;      reg 25 { d49(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 100
;;      reg 157 { d177(bb 2 insn 4) }
;;   UD chains for insn luid 2 uid 102
;;      reg 137 { d154(bb 14 insn 95) }
;;      reg 184 { d195(bb 15 insn 99) }
;;      reg 185 { d196(bb 15 insn 100) }
;;   UD chains for insn luid 3 uid 103
;;      reg 25 { d49(bb 0 insn -1) }
;;   UD chains for insn luid 4 uid 104
;;      reg 157 { d177(bb 2 insn 4) }
;;   UD chains for insn luid 5 uid 106
;;      reg 137 { d154(bb 14 insn 95) }
;;      reg 187 { d197(bb 15 insn 103) }
;;      reg 188 { d198(bb 15 insn 104) }
;;   UD chains for insn luid 6 uid 107
;;      reg 137 { d154(bb 14 insn 95) }

( 5 13 14 4 6 12 )->[16]->( 17 )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u150(11){ d12(bb 0 insn -1) }u151(13){ d15(bb 0 insn -1) }u152(25){ d49(bb 0 insn -1) }u153(26){ d50(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 151
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 151
;; live  kill	
;; rd  in  	(56)
1, 3, 6, 9, 11, 12, 14, 15, 17, 35, 36, 37, 44, 45, 46, 49, 50, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194
;; rd  gen 	(1)
169
;; rd  kill	(3)
168, 169, 170
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 151
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 151
;; rd  out 	(56)
1, 3, 6, 9, 11, 12, 14, 15, 17, 35, 36, 37, 44, 45, 46, 49, 50, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194
;;  UD chains for artificial uses
;;   reg 11 { d12(bb 0 insn -1) }
;;   reg 13 { d15(bb 0 insn -1) }
;;   reg 25 { d49(bb 0 insn -1) }
;;   reg 26 { d50(bb 0 insn -1) }

( 16 11 15 )->[17]->( 1 )
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u154(11){ d12(bb 0 insn -1) }u155(13){ d15(bb 0 insn -1) }u156(25){ d49(bb 0 insn -1) }u157(26){ d50(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 151
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 151
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(65)
1, 3, 6, 9, 11, 12, 14, 15, 17, 35, 36, 37, 39, 44, 45, 46, 49, 50, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198
;; rd  gen 	(1)
0
;; rd  kill	(4)
0, 1, 2, 3
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(64)
0, 6, 9, 11, 12, 14, 15, 17, 35, 36, 37, 39, 44, 45, 46, 49, 50, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198
;;  UD chains for artificial uses
;;   reg 11 { d12(bb 0 insn -1) }
;;   reg 13 { d15(bb 0 insn -1) }
;;   reg 25 { d49(bb 0 insn -1) }
;;   reg 26 { d50(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 119
;;      reg 151 { d170(bb 11 insn 65) d169(bb 16 insn 112) d168(bb 15 insn 107) }
;;   UD chains for insn luid 1 uid 125
;;      reg 0 { d0(bb 17 insn 119) }

( 17 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u160(0){ d0(bb 17 insn 119) }u161(11){ d12(bb 0 insn -1) }u162(13){ d15(bb 0 insn -1) }u163(14){ d17(bb 0 insn -1) }u164(25){ d49(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(64)
0, 6, 9, 11, 12, 14, 15, 17, 35, 36, 37, 39, 44, 45, 46, 49, 50, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(64)
0, 6, 9, 11, 12, 14, 15, 17, 35, 36, 37, 39, 44, 45, 46, 49, 50, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198
;;  UD chains for artificial uses
;;   reg 0 { d0(bb 17 insn 119) }
;;   reg 11 { d12(bb 0 insn -1) }
;;   reg 13 { d15(bb 0 insn -1) }
;;   reg 14 { d17(bb 0 insn -1) }
;;   reg 25 { d49(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 9 to worklist
  Adding insn 129 to worklist
  Adding insn 22 to worklist
  Adding insn 27 to worklist
  Adding insn 25 to worklist
  Adding insn 33 to worklist
  Adding insn 31 to worklist
  Adding insn 46 to worklist
  Adding insn 44 to worklist
  Adding insn 43 to worklist
  Adding insn 40 to worklist
  Adding insn 39 to worklist
  Adding insn 38 to worklist
  Adding insn 37 to worklist
  Adding insn 51 to worklist
  Adding insn 131 to worklist
  Adding insn 76 to worklist
  Adding insn 64 to worklist
  Adding insn 84 to worklist
  Adding insn 90 to worklist
  Adding insn 88 to worklist
  Adding insn 97 to worklist
  Adding insn 95 to worklist
  Adding insn 133 to worklist
  Adding insn 106 to worklist
  Adding insn 102 to worklist
  Adding insn 125 to worklist
Finished finding needed instructions:
  Adding insn 119 to worklist
Processing use of (reg 151 [ ret ]) in insn 119:
  Adding insn 65 to worklist
  Adding insn 112 to worklist
  Adding insn 107 to worklist
Processing use of (reg 137 [ __pu_err ]) in insn 107:
Processing use of (reg 0 r0) in insn 65:
Processing use of (reg 0 r0) in insn 125:
Processing use of (reg 137 [ __pu_err ]) in insn 102:
Processing use of (reg 184 [ old_ka.sa.sa_flags ]) in insn 102:
  Adding insn 99 to worklist
Processing use of (reg 185) in insn 102:
  Adding insn 100 to worklist
Processing use of (reg 157 [ oact ]) in insn 100:
  Adding insn 4 to worklist
Processing use of (reg 2 r2) in insn 4:
Processing use of (reg 25 sfp) in insn 99:
Processing use of (reg 137 [ __pu_err ]) in insn 106:
Processing use of (reg 187 [ old_ka.sa.sa_mask.sig ]) in insn 106:
  Adding insn 103 to worklist
Processing use of (reg 188) in insn 106:
  Adding insn 104 to worklist
Processing use of (reg 157 [ oact ]) in insn 104:
Processing use of (reg 25 sfp) in insn 103:
Processing use of (reg 138 [ __pu_err ]) in insn 95:
Processing use of (reg 181 [ old_ka.sa.sa_restorer ]) in insn 95:
  Adding insn 92 to worklist
Processing use of (reg 182) in insn 95:
  Adding insn 93 to worklist
Processing use of (reg 157 [ oact ]) in insn 93:
Processing use of (reg 25 sfp) in insn 92:
Processing use of (reg 24 cc) in insn 97:
  Adding insn 96 to worklist
Processing use of (reg 137 [ __pu_err ]) in insn 96:
Processing use of (reg 140 [ flag ]) in insn 88:
  Adding insn 82 to worklist
Processing use of (reg 157 [ oact ]) in insn 88:
Processing use of (reg 179 [ old_ka.sa.sa_handler ]) in insn 88:
  Adding insn 86 to worklist
Processing use of (reg 25 sfp) in insn 86:
Processing use of (reg 157 [ oact ]) in insn 82:
Processing use of (reg 178 [ <variable>.addr_limit ]) in insn 82:
  Adding insn 81 to worklist
Processing use of (reg 176) in insn 81:
  Adding insn 80 to worklist
Processing use of (reg 177) in insn 80:
  Adding insn 79 to worklist
Processing use of (reg 13 sp) in insn 79:
Processing use of (reg 24 cc) in insn 90:
  Adding insn 89 to worklist
Processing use of (reg 138 [ __pu_err ]) in insn 89:
Processing use of (reg 24 cc) in insn 84:
  Adding insn 83 to worklist
Processing use of (reg 140 [ flag ]) in insn 83:
Processing use of (reg 13 sp) in insn 64:
Processing use of (reg 0 r0) in insn 64:
  Adding insn 61 to worklist
Processing use of (reg 1 r1) in insn 64:
  Adding insn 62 to worklist
Processing use of (reg 2 r2) in insn 64:
  Adding insn 63 to worklist
Processing use of (reg 152 [ iftmp.308 ]) in insn 63:
  Adding insn 58 to worklist
  Adding insn 53 to worklist
Processing use of (reg 157 [ oact ]) in insn 53:
Processing use of (reg 25 sfp) in insn 58:
Processing use of (reg 153 [ iftmp.307 ]) in insn 62:
  Adding insn 47 to worklist
  Adding insn 11 to worklist
Processing use of (reg 156 [ act ]) in insn 11:
  Adding insn 3 to worklist
Processing use of (reg 1 r1) in insn 3:
Processing use of (reg 25 sfp) in insn 47:
Processing use of (reg 155 [ sig ]) in insn 61:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 24 cc) in insn 76:
  Adding insn 75 to worklist
Processing use of (reg 175) in insn 75:
  Adding insn 74 to worklist
Processing use of (reg 174) in insn 74:
  Adding insn 73 to worklist
Processing use of (subreg (reg 173) 0) in insn 73:
  Adding insn 72 to worklist
Processing use of (reg 170) in insn 72:
  Adding insn 67 to worklist
Processing use of (reg 172) in insn 72:
  Adding insn 70 to worklist
Processing use of (reg 24 cc) in insn 70:
  Adding insn 69 to worklist
Processing use of (reg 157 [ oact ]) in insn 69:
Processing use of (reg 24 cc) in insn 67:
  Adding insn 66 to worklist
Processing use of (reg 151 [ ret ]) in insn 66:
Processing use of (reg 24 cc) in insn 51:
  Adding insn 50 to worklist
Processing use of (reg 157 [ oact ]) in insn 50:
Processing use of (reg 146 [ __gu_err ]) in insn 37:
Processing use of (reg 164) in insn 37:
  Adding insn 35 to worklist
Processing use of (reg 156 [ act ]) in insn 35:
Processing use of (reg 25 sfp) in insn 38:
Processing use of (reg 147 [ __gu_val ]) in insn 38:
Processing use of (reg 25 sfp) in insn 39:
Processing use of (reg 145 [ __gu_val ]) in insn 39:
Processing use of (reg 25 sfp) in insn 40:
Processing use of (reg 143 [ __gu_val ]) in insn 40:
Processing use of (reg 146 [ __gu_err ]) in insn 43:
Processing use of (reg 166) in insn 43:
  Adding insn 41 to worklist
Processing use of (reg 156 [ act ]) in insn 41:
Processing use of (reg 25 sfp) in insn 44:
Processing use of (reg 141 [ __gu_val ]) in insn 44:
Processing use of (reg 25 sfp) in insn 46:
Processing use of (reg 146 [ __gu_err ]) in insn 46:
Processing use of (reg 148 [ __gu_err ]) in insn 31:
Processing use of (reg 162) in insn 31:
  Adding insn 29 to worklist
Processing use of (reg 156 [ act ]) in insn 29:
Processing use of (reg 24 cc) in insn 33:
  Adding insn 32 to worklist
Processing use of (reg 146 [ __gu_err ]) in insn 32:
Processing use of (reg 150 [ flag ]) in insn 25:
  Adding insn 20 to worklist
Processing use of (reg 156 [ act ]) in insn 25:
Processing use of (reg 156 [ act ]) in insn 20:
Processing use of (reg 160 [ <variable>.addr_limit ]) in insn 20:
  Adding insn 19 to worklist
Processing use of (reg 158) in insn 19:
  Adding insn 18 to worklist
Processing use of (reg 159) in insn 18:
  Adding insn 17 to worklist
Processing use of (reg 13 sp) in insn 17:
Processing use of (reg 24 cc) in insn 27:
  Adding insn 26 to worklist
Processing use of (reg 148 [ __gu_err ]) in insn 26:
Processing use of (reg 24 cc) in insn 22:
  Adding insn 21 to worklist
Processing use of (reg 150 [ flag ]) in insn 21:
Processing use of (reg 24 cc) in insn 9:
  Adding insn 8 to worklist
Processing use of (reg 156 [ act ]) in insn 8:


sys_sigaction

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={4d,5u} r1={3d,2u} r2={3d,2u} r3={2d} r11={1d,17u} r12={2d} r13={1d,20u,2d} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={22d,11u} r25={1d,28u} r26={1d,16u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r135={1d} r136={1d} r137={1d,4u} r138={1d,2u} r139={1d} r140={1d,2u} r141={1d,1u} r142={1d} r143={1d,1u} r144={1d} r145={1d,1u} r146={1d,4u} r147={1d,1u} r148={1d,2u} r149={1d} r150={1d,2u} r151={3d,2u} r152={2d,1u} r153={2d,1u} r155={1d,1u} r156={1d,7u} r157={1d,8u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r162={1d,1u} r164={1d,1u} r166={1d,1u} r170={1d,1u} r172={1d,1u} r173={1d,1u} r174={1d,1u} r175={1d,1u} r176={1d,1u} r177={1d,1u} r178={1d,1u} r179={1d,1u} r181={1d,1u} r182={1d,1u} r184={1d,1u} r185={1d,1u} r187={1d,1u} r188={1d,1u} 
;;    total ref usage 364{199d,163u,2e} in 75{74 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151
0[0,4] 1[4,3] 2[7,3] 3[10,2] 11[12,1] 12[13,2] 13[15,1] 14[16,2] 15[18,1] 16[19,1] 17[20,1] 18[21,1] 19[22,1] 20[23,1] 21[24,1] 22[25,1] 23[26,1] 24[27,22] 25[49,1] 26[50,1] 27[51,1] 28[52,1] 29[53,1] 30[54,1] 31[55,1] 32[56,1] 33[57,1] 34[58,1] 35[59,1] 36[60,1] 37[61,1] 38[62,1] 39[63,1] 40[64,1] 41[65,1] 42[66,1] 43[67,1] 44[68,1] 45[69,1] 46[70,1] 47[71,1] 48[72,1] 49[73,1] 50[74,1] 51[75,1] 52[76,1] 53[77,1] 54[78,1] 55[79,1] 56[80,1] 57[81,1] 58[82,1] 59[83,1] 60[84,1] 61[85,1] 62[86,1] 63[87,1] 64[88,1] 65[89,1] 66[90,1] 67[91,1] 68[92,1] 69[93,1] 70[94,1] 71[95,1] 72[96,1] 73[97,1] 74[98,1] 75[99,1] 76[100,1] 77[101,1] 78[102,1] 79[103,1] 80[104,1] 81[105,1] 82[106,1] 83[107,1] 84[108,1] 85[109,1] 86[110,1] 87[111,1] 88[112,1] 89[113,1] 90[114,1] 91[115,1] 92[116,1] 93[117,1] 94[118,1] 95[119,1] 96[120,1] 97[121,1] 98[122,1] 99[123,1] 100[124,1] 101[125,1] 102[126,1] 103[127,1] 104[128,1] 105[129,1] 106[130,1] 107[131,1] 108[132,1] 109[133,1] 110[134,1] 111[135,1] 112[136,1] 113[137,1] 114[138,1] 115[139,1] 116[140,1] 117[141,1] 118[142,1] 119[143,1] 120[144,1] 121[145,1] 122[146,1] 123[147,1] 124[148,1] 125[149,1] 126[150,1] 127[151,1] 135[152,1] 136[153,1] 137[154,1] 138[155,1] 139[156,1] 140[157,1] 141[158,1] 142[159,1] 143[160,1] 144[161,1] 145[162,1] 146[163,1] 147[164,1] 148[165,1] 149[166,1] 150[167,1] 151[168,3] 152[171,2] 153[173,2] 155[175,1] 156[176,1] 157[177,1] 158[178,1] 159[179,1] 160[180,1] 162[181,1] 164[182,1] 166[183,1] 170[184,1] 172[185,1] 173[186,1] 174[187,1] 175[188,1] 176[189,1] 177[190,1] 178[191,1] 179[192,1] 181[193,1] 182[194,1] 184[195,1] 185[196,1] 187[197,1] 188[198,1] 
(note 1 0 6 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 155 156 157
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 155 156 157
;; live  kill	
;; rd  in  	(10)
3, 6, 9, 11, 12, 14, 15, 17, 49, 50
;; rd  gen 	(4)
48, 175, 176, 177
;; rd  kill	(25)
27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 175, 176, 177

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 6 3 2 arch/arm/kernel/signal.c:85 (set (reg/v:SI 155 [ sig ])
        (reg:SI 0 r0 [ sig ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ sig ])
        (nil)))

(insn 3 2 4 2 arch/arm/kernel/signal.c:85 (set (reg/v/f:SI 156 [ act ])
        (reg:SI 1 r1 [ act ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ act ])
        (nil)))

(insn 4 3 5 2 arch/arm/kernel/signal.c:85 (set (reg/v/f:SI 157 [ oact ])
        (reg:SI 2 r2 [ oact ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ oact ])
        (nil)))

(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)

(insn 8 5 9 2 arch/arm/kernel/signal.c:89 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 156 [ act ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 9 8 10 2 arch/arm/kernel/signal.c:89 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 14)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 1910 [0x776])
            (nil))))
;; End of basic block 2 -> ( 4 3)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 156 157
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 156 157
;; rd  out 	(14)
3, 6, 9, 11, 12, 14, 15, 17, 48, 49, 50, 175, 176, 177


;; Succ edge  4 [19.1%] 
;; Succ edge  3 [80.9%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u9(11){ }u10(13){ }u11(25){ }u12(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 155 156 157
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156
;; lr  def 	 153
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 155 156 157
;; live  gen 	 153
;; live  kill	
;; rd  in  	(14)
3, 6, 9, 11, 12, 14, 15, 17, 48, 49, 50, 175, 176, 177
;; rd  gen 	(1)
173
;; rd  kill	(2)
173, 174

;; Pred edge  2 [80.9%]  (fallthru)
(note 10 9 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 11 10 129 3 arch/arm/kernel/signal.c:100 discrim 2 (set (reg/f:SI 153 [ iftmp.307 ])
        (reg/v/f:SI 156 [ act ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 156 [ act ])
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(jump_insn 129 11 130 3 (set (pc)
        (label_ref 48)) -1 (nil))
;; End of basic block 3 -> ( 8)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153 155 157
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153 155 157
;; rd  out 	(15)
3, 6, 9, 11, 12, 14, 15, 17, 48, 49, 50, 173, 175, 176, 177


;; Succ edge  8 [100.0%] 

(barrier 130 129 14)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u14(11){ }u15(13){ }u16(25){ }u17(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 156 157
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156
;; lr  def 	 24 [cc] 149 150 158 159 160
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 156 157
;; live  gen 	 24 [cc] 149 150 158 159 160
;; live  kill	 24 [cc]
;; rd  in  	(14)
3, 6, 9, 11, 12, 14, 15, 17, 48, 49, 50, 175, 176, 177
;; rd  gen 	(6)
46, 166, 167, 178, 179, 180
;; rd  kill	(27)
27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 166, 167, 178, 179, 180

;; Pred edge  2 [19.1%] 
(code_label 14 130 15 4 90 "" [1 uses])

(note 15 14 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 17 15 18 4 arch/arm/kernel/signal.c:91 (set (reg:SI 159)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 18 17 19 4 arch/arm/kernel/signal.c:91 (set (reg:SI 158)
        (and:SI (reg:SI 159)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 159)
        (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
                (const_int -8192 [0xffffffffffffe000]))
            (nil))))

(insn 19 18 20 4 arch/arm/kernel/signal.c:91 (set (reg:SI 160 [ <variable>.addr_limit ])
        (mem/s/j:SI (plus:SI (reg:SI 158)
                (const_int 8 [0x8])) [0 <variable>.addr_limit+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 158)
        (nil)))

(insn 20 19 21 4 arch/arm/kernel/signal.c:91 (parallel [
            (set (reg/v:SI 150 [ flag ])
                (asm_operands:SI ("adds %1, %2, %3; sbcccs %1, %1, %0; movcc %0, #0") ("=&r") 0 [
                        (reg/v/f:SI 156 [ act ])
                        (const_int 16 [0x10])
                        (reg:SI 160 [ <variable>.addr_limit ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("Ir") 0)
                        (asm_input:SI ("0") 0)
                    ] 8600470))
            (set (reg/v:SI 149 [ roksum ])
                (asm_operands:SI ("adds %1, %2, %3; sbcccs %1, %1, %0; movcc %0, #0") ("=&r") 1 [
                        (reg/v/f:SI 156 [ act ])
                        (const_int 16 [0x10])
                        (reg:SI 160 [ <variable>.addr_limit ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("Ir") 0)
                        (asm_input:SI ("0") 0)
                    ] 8600470))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg:SI 160 [ <variable>.addr_limit ])
        (expr_list:REG_UNUSED (reg/v:SI 149 [ roksum ])
            (expr_list:REG_UNUSED (reg:QI 24 cc)
                (nil)))))

(insn 21 20 22 4 arch/arm/kernel/signal.c:91 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 150 [ flag ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 22 21 23 4 arch/arm/kernel/signal.c:91 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 110)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9600 [0x2580])
            (nil))))
;; End of basic block 4 -> ( 16 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 150 155 156 157
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 150 155 156 157
;; rd  out 	(19)
3, 6, 9, 11, 12, 14, 15, 17, 46, 49, 50, 166, 167, 175, 176, 177, 178, 179, 180


;; Succ edge  16 [96.0%] 
;; Succ edge  5 [4.0%]  (fallthru)

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u26(11){ }u27(13){ }u28(25){ }u29(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 150 155 156 157
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 156
;; lr  def 	 24 [cc] 147 148
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 150 155 156 157
;; live  gen 	 24 [cc] 147 148
;; live  kill	 24 [cc]
;; rd  in  	(19)
3, 6, 9, 11, 12, 14, 15, 17, 46, 49, 50, 166, 167, 175, 176, 177, 178, 179, 180
;; rd  gen 	(3)
45, 164, 165
;; rd  kill	(24)
27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 164, 165

;; Pred edge  4 [4.0%]  (fallthru)
(note 23 22 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 25 23 26 5 arch/arm/kernel/signal.c:92 discrim 4 (parallel [
            (set (reg/v:SI 148 [ __gu_err ])
                (asm_operands/v:SI ("1:	ldr	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg/v/f:SI 156 [ act ])
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 150 [ flag ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691146))
            (set (reg/v:SI 147 [ __gu_val ])
                (asm_operands/v:SI ("1:	ldr	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=&r") 1 [
                        (reg/v/f:SI 156 [ act ])
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 150 [ flag ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691146))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/v:SI 150 [ flag ])
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))

(insn 26 25 27 5 arch/arm/kernel/signal.c:91 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 148 [ __gu_err ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 27 26 28 5 arch/arm/kernel/signal.c:91 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 110)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9600 [0x2580])
            (nil))))
;; End of basic block 5 -> ( 16 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147 148 155 156 157
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147 148 155 156 157
;; rd  out 	(21)
3, 6, 9, 11, 12, 14, 15, 17, 45, 49, 50, 164, 165, 166, 167, 175, 176, 177, 178, 179, 180


;; Succ edge  16 [96.0%] 
;; Succ edge  6 [4.0%]  (fallthru)

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u34(11){ }u35(13){ }u36(25){ }u37(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147 148 155 156 157
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 156
;; lr  def 	 24 [cc] 145 146 162
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147 148 155 156 157
;; live  gen 	 24 [cc] 145 146 162
;; live  kill	 24 [cc]
;; rd  in  	(21)
3, 6, 9, 11, 12, 14, 15, 17, 45, 49, 50, 164, 165, 166, 167, 175, 176, 177, 178, 179, 180
;; rd  gen 	(4)
44, 162, 163, 181
;; rd  kill	(25)
27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 162, 163, 181

;; Pred edge  5 [4.0%]  (fallthru)
(note 28 27 29 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 29 28 31 6 arch/arm/kernel/signal.c:93 discrim 4 (set (reg/f:SI 162)
        (plus:SI (reg/v/f:SI 156 [ act ])
            (const_int 12 [0xc]))) 4 {*arm_addsi3} (nil))

(insn 31 29 32 6 arch/arm/kernel/signal.c:93 discrim 4 (parallel [
            (set (reg/v:SI 146 [ __gu_err ])
                (asm_operands/v:SI ("1:	ldr	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg/f:SI 162)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 148 [ __gu_err ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691151))
            (set (reg/v:SI 145 [ __gu_val ])
                (asm_operands/v:SI ("1:	ldr	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=&r") 1 [
                        (reg/f:SI 162)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 148 [ __gu_err ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691151))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/f:SI 162)
        (expr_list:REG_DEAD (reg/v:SI 148 [ __gu_err ])
            (expr_list:REG_UNUSED (reg:QI 24 cc)
                (nil)))))

(insn 32 31 33 6 arch/arm/kernel/signal.c:91 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 146 [ __gu_err ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 33 32 34 6 arch/arm/kernel/signal.c:91 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 110)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 6 -> ( 16 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 145 146 147 155 156 157
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 145 146 147 155 156 157
;; rd  out 	(24)
3, 6, 9, 11, 12, 14, 15, 17, 44, 49, 50, 162, 163, 164, 165, 166, 167, 175, 176, 177, 178, 179, 180, 181


;; Succ edge  16 [39.0%] 
;; Succ edge  7 [61.0%]  (fallthru)

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u43(11){ }u44(13){ }u45(25){ }u46(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 155 156 157
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 156
;; lr  def 	 24 [cc] 141 142 143 144 153 164 166
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 155 156 157
;; live  gen 	 141 142 143 144 153 164 166
;; live  kill	 24 [cc]
;; rd  in  	(24)
3, 6, 9, 11, 12, 14, 15, 17, 44, 49, 50, 162, 163, 164, 165, 166, 167, 175, 176, 177, 178, 179, 180, 181
;; rd  gen 	(7)
158, 159, 160, 161, 174, 182, 183
;; rd  kill	(30)
27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 158, 159, 160, 161, 173, 174, 182, 183

;; Pred edge  6 [61.0%]  (fallthru)
(note 34 33 35 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 35 34 37 7 arch/arm/kernel/signal.c:95 discrim 4 (set (reg/f:SI 164)
        (plus:SI (reg/v/f:SI 156 [ act ])
            (const_int 8 [0x8]))) 4 {*arm_addsi3} (nil))

(insn 37 35 38 7 arch/arm/kernel/signal.c:95 discrim 4 (parallel [
            (set (reg/v:SI 144 [ __gu_err ])
                (asm_operands/v:SI ("1:	ldr	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg/f:SI 164)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 146 [ __gu_err ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691156))
            (set (reg/v:SI 143 [ __gu_val ])
                (asm_operands/v:SI ("1:	ldr	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=&r") 1 [
                        (reg/f:SI 164)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 146 [ __gu_err ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691156))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/f:SI 164)
        (expr_list:REG_UNUSED (reg/v:SI 144 [ __gu_err ])
            (expr_list:REG_UNUSED (reg:QI 24 cc)
                (nil)))))

(insn 38 37 39 7 arch/arm/kernel/signal.c:92 discrim 5 (set (mem/s/f/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -20 [0xffffffffffffffec])) [0 new_ka.sa.sa_handler+0 S4 A32])
        (reg/v:SI 147 [ __gu_val ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 147 [ __gu_val ])
        (nil)))

(insn 39 38 40 7 arch/arm/kernel/signal.c:93 discrim 5 (set (mem/s/f/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -12 [0xfffffffffffffff4])) [0 new_ka.sa.sa_restorer+0 S4 A32])
        (reg/v:SI 145 [ __gu_val ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 145 [ __gu_val ])
        (nil)))

(insn 40 39 41 7 arch/arm/kernel/signal.c:95 discrim 5 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -16 [0xfffffffffffffff0])) [0 new_ka.sa.sa_flags+0 S4 A32])
        (reg/v:SI 143 [ __gu_val ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 143 [ __gu_val ])
        (nil)))

(insn 41 40 43 7 arch/arm/kernel/signal.c:96 discrim 4 (set (reg/f:SI 166)
        (plus:SI (reg/v/f:SI 156 [ act ])
            (const_int 4 [0x4]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/v/f:SI 156 [ act ])
        (nil)))

(insn 43 41 44 7 arch/arm/kernel/signal.c:96 discrim 4 (parallel [
            (set (reg/v:SI 142 [ __gu_err ])
                (asm_operands/v:SI ("1:	ldr	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg/f:SI 166)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 146 [ __gu_err ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691161))
            (set (reg/v:SI 141 [ __gu_val ])
                (asm_operands/v:SI ("1:	ldr	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=&r") 1 [
                        (reg/f:SI 166)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 146 [ __gu_err ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691161))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/f:SI 166)
        (expr_list:REG_UNUSED (reg/v:SI 142 [ __gu_err ])
            (expr_list:REG_UNUSED (reg:QI 24 cc)
                (nil)))))

(insn 44 43 46 7 include/linux/signal.h:201 (set (mem/s/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0 new_ka.sa.sa_mask.sig+0 S4 A32])
        (reg/v:SI 141 [ __gu_val ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 141 [ __gu_val ])
        (nil)))

(insn 46 44 47 7 include/linux/signal.h:206 (set (mem/s/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 new_ka.sa.sa_mask.sig+4 S4 A32])
        (reg/v:SI 146 [ __gu_err ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 146 [ __gu_err ])
        (nil)))

(insn 47 46 48 7 arch/arm/kernel/signal.c:100 discrim 1 (set (reg/f:SI 153 [ iftmp.307 ])
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -20 [0xffffffffffffffec]))) 4 {*arm_addsi3} (nil))
;; End of basic block 7 -> ( 8)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153 155 157
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153 155 157
;; rd  out 	(30)
3, 6, 9, 11, 12, 14, 15, 17, 49, 50, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183


;; Succ edge  8 [100.0%]  (fallthru)

;; Start of basic block ( 7 3) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u64(11){ }u65(13){ }u66(25){ }u67(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153 155 157
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153 155 157
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(32)
3, 6, 9, 11, 12, 14, 15, 17, 48, 49, 50, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183
;; rd  gen 	(1)
43
;; rd  kill	(22)
27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48

;; Pred edge  7 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%] 
(code_label 48 47 49 8 91 "" [1 uses])

(note 49 48 50 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 50 49 51 8 arch/arm/kernel/signal.c:100 discrim 3 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 157 [ oact ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 51 50 52 8 arch/arm/kernel/signal.c:100 discrim 3 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 56)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 8500 [0x2134])
            (nil))))
;; End of basic block 8 -> ( 10 9)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153 155 157
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153 155 157
;; rd  out 	(32)
3, 6, 9, 11, 12, 14, 15, 17, 43, 49, 50, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183


;; Succ edge  10 [85.0%] 
;; Succ edge  9 [15.0%]  (fallthru)

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u70(11){ }u71(13){ }u72(25){ }u73(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153 155 157
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157
;; lr  def 	 152
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153 155 157
;; live  gen 	 152
;; live  kill	
;; rd  in  	(32)
3, 6, 9, 11, 12, 14, 15, 17, 43, 49, 50, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183
;; rd  gen 	(1)
171
;; rd  kill	(2)
171, 172

;; Pred edge  8 [15.0%]  (fallthru)
(note 52 51 53 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 53 52 131 9 arch/arm/kernel/signal.c:100 discrim 5 (set (reg/f:SI 152 [ iftmp.308 ])
        (reg/v/f:SI 157 [ oact ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(jump_insn 131 53 132 9 (set (pc)
        (label_ref 59)) -1 (nil))
;; End of basic block 9 -> ( 11)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 153 155 157
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 153 155 157
;; rd  out 	(33)
3, 6, 9, 11, 12, 14, 15, 17, 43, 49, 50, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183


;; Succ edge  11 [100.0%] 

(barrier 132 131 56)

;; Start of basic block ( 8) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u75(11){ }u76(13){ }u77(25){ }u78(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153 155 157
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 152
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153 155 157
;; live  gen 	 152
;; live  kill	
;; rd  in  	(32)
3, 6, 9, 11, 12, 14, 15, 17, 43, 49, 50, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183
;; rd  gen 	(1)
172
;; rd  kill	(2)
171, 172

;; Pred edge  8 [85.0%] 
(code_label 56 132 57 10 93 "" [1 uses])

(note 57 56 58 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 58 57 59 10 arch/arm/kernel/signal.c:100 discrim 4 (set (reg/f:SI 152 [ iftmp.308 ])
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -40 [0xffffffffffffffd8]))) 4 {*arm_addsi3} (nil))
;; End of basic block 10 -> ( 11)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 153 155 157
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 153 155 157
;; rd  out 	(33)
3, 6, 9, 11, 12, 14, 15, 17, 43, 49, 50, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183


;; Succ edge  11 [100.0%]  (fallthru)

;; Start of basic block ( 10 9) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u80(11){ }u81(13){ }u82(25){ }u83(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 153 155 157
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 153 155 157
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 151 170 172 173 174 175
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 153 155 157
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 151 170 172 173 174 175
;; live  kill	 14 [lr]
;; rd  in  	(34)
3, 6, 9, 11, 12, 14, 15, 17, 43, 49, 50, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183
;; rd  gen 	(8)
1, 39, 170, 184, 185, 186, 187, 188
;; rd  kill	(36)
0, 1, 2, 3, 16, 17, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 168, 169, 170, 184, 185, 186, 187, 188

;; Pred edge  10 [100.0%]  (fallthru)
;; Pred edge  9 [100.0%] 
(code_label 59 58 60 11 94 "" [1 uses])

(note 60 59 61 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 61 60 62 11 arch/arm/kernel/signal.c:100 discrim 6 (set (reg:SI 0 r0)
        (reg/v:SI 155 [ sig ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 155 [ sig ])
        (nil)))

(insn 62 61 63 11 arch/arm/kernel/signal.c:100 discrim 6 (set (reg:SI 1 r1)
        (reg/f:SI 153 [ iftmp.307 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 153 [ iftmp.307 ])
        (nil)))

(insn 63 62 64 11 arch/arm/kernel/signal.c:100 discrim 6 (set (reg:SI 2 r2)
        (reg/f:SI 152 [ iftmp.308 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 152 [ iftmp.308 ])
        (nil)))

(call_insn 64 63 65 11 arch/arm/kernel/signal.c:100 discrim 6 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("do_sigaction") [flags 0x41] <function_decl 0x10f06f80 do_sigaction>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 65 64 66 11 arch/arm/kernel/signal.c:100 discrim 6 (set (reg/v:SI 151 [ ret ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 66 65 67 11 arch/arm/kernel/signal.c:102 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 151 [ ret ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn 67 66 69 11 arch/arm/kernel/signal.c:102 (set (reg:SI 170)
        (eq:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 69 67 70 11 arch/arm/kernel/signal.c:102 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 157 [ oact ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn 70 69 72 11 arch/arm/kernel/signal.c:102 (set (reg:SI 172)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 72 70 73 11 arch/arm/kernel/signal.c:102 (set (reg:SI 173)
        (and:SI (reg:SI 170)
            (reg:SI 172))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 172)
        (expr_list:REG_DEAD (reg:SI 170)
            (nil))))

(insn 73 72 74 11 arch/arm/kernel/signal.c:102 (set (reg:QI 174)
        (subreg:QI (reg:SI 173) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 173)
        (nil)))

(insn 74 73 75 11 arch/arm/kernel/signal.c:102 (set (reg:SI 175)
        (zero_extend:SI (reg:QI 174))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 174)
        (nil)))

(insn 75 74 76 11 arch/arm/kernel/signal.c:102 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 175)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 175)
        (nil)))

(jump_insn 76 75 77 11 arch/arm/kernel/signal.c:102 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 113)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9600 [0x2580])
            (nil))))
;; End of basic block 11 -> ( 12 17)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 151 157
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 157
;; rd  out 	(39)
1, 6, 9, 11, 12, 14, 15, 39, 49, 50, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188


;; Succ edge  12 [4.0%]  (fallthru)
;; Succ edge  17 [96.0%] 

;; Start of basic block ( 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u102(11){ }u103(13){ }u104(25){ }u105(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 157
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157
;; lr  def 	 24 [cc] 139 140 176 177 178
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157
;; live  gen 	 24 [cc] 139 140 176 177 178
;; live  kill	 24 [cc]
;; rd  in  	(39)
1, 6, 9, 11, 12, 14, 15, 39, 49, 50, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188
;; rd  gen 	(6)
37, 156, 157, 189, 190, 191
;; rd  kill	(27)
27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 156, 157, 189, 190, 191

;; Pred edge  11 [4.0%]  (fallthru)
(note 77 76 79 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 79 77 80 12 arch/arm/kernel/signal.c:103 (set (reg:SI 177)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 80 79 81 12 arch/arm/kernel/signal.c:103 (set (reg:SI 176)
        (and:SI (reg:SI 177)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 177)
        (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
                (const_int -8192 [0xffffffffffffe000]))
            (nil))))

(insn 81 80 82 12 arch/arm/kernel/signal.c:103 (set (reg:SI 178 [ <variable>.addr_limit ])
        (mem/s/j:SI (plus:SI (reg:SI 176)
                (const_int 8 [0x8])) [0 <variable>.addr_limit+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 176)
        (nil)))

(insn 82 81 83 12 arch/arm/kernel/signal.c:103 (parallel [
            (set (reg/v:SI 140 [ flag ])
                (asm_operands:SI ("adds %1, %2, %3; sbcccs %1, %1, %0; movcc %0, #0") ("=&r") 0 [
                        (reg/v/f:SI 157 [ oact ])
                        (const_int 16 [0x10])
                        (reg:SI 178 [ <variable>.addr_limit ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("Ir") 0)
                        (asm_input:SI ("0") 0)
                    ] 8602006))
            (set (reg/v:SI 139 [ roksum ])
                (asm_operands:SI ("adds %1, %2, %3; sbcccs %1, %1, %0; movcc %0, #0") ("=&r") 1 [
                        (reg/v/f:SI 157 [ oact ])
                        (const_int 16 [0x10])
                        (reg:SI 178 [ <variable>.addr_limit ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("Ir") 0)
                        (asm_input:SI ("0") 0)
                    ] 8602006))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg:SI 178 [ <variable>.addr_limit ])
        (expr_list:REG_UNUSED (reg/v:SI 139 [ roksum ])
            (expr_list:REG_UNUSED (reg:QI 24 cc)
                (nil)))))

(insn 83 82 84 12 arch/arm/kernel/signal.c:103 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 140 [ flag ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 84 83 85 12 arch/arm/kernel/signal.c:103 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 110)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9600 [0x2580])
            (nil))))
;; End of basic block 12 -> ( 16 13)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 157
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 157
;; rd  out 	(44)
1, 6, 9, 11, 12, 14, 15, 37, 49, 50, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191


;; Succ edge  16 [96.0%] 
;; Succ edge  13 [4.0%]  (fallthru)

;; Start of basic block ( 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u114(11){ }u115(13){ }u116(25){ }u117(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 157
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 157
;; lr  def 	 24 [cc] 138 179
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 157
;; live  gen 	 24 [cc] 138 179
;; live  kill	 24 [cc]
;; rd  in  	(44)
1, 6, 9, 11, 12, 14, 15, 37, 49, 50, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191
;; rd  gen 	(3)
36, 155, 192
;; rd  kill	(24)
27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 155, 192

;; Pred edge  12 [4.0%]  (fallthru)
(note 85 84 86 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 86 85 88 13 arch/arm/kernel/signal.c:104 discrim 4 (set (reg/f:SI 179 [ old_ka.sa.sa_handler ])
        (mem/s/f/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -40 [0xffffffffffffffd8])) [0 old_ka.sa.sa_handler+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 88 86 89 13 arch/arm/kernel/signal.c:104 discrim 4 (parallel [
            (set (reg/v:SI 138 [ __pu_err ])
                (asm_operands/v:SI ("1:	str	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg/f:SI 179 [ old_ka.sa.sa_handler ])
                        (reg/v/f:SI 157 [ oact ])
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 140 [ flag ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691172))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/f:SI 179 [ old_ka.sa.sa_handler ])
        (expr_list:REG_DEAD (reg/v:SI 140 [ flag ])
            (expr_list:REG_UNUSED (reg:QI 24 cc)
                (nil)))))

(insn 89 88 90 13 arch/arm/kernel/signal.c:103 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 138 [ __pu_err ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 90 89 91 13 arch/arm/kernel/signal.c:103 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 110)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9600 [0x2580])
            (nil))))
;; End of basic block 13 -> ( 16 14)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 157
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 157
;; rd  out 	(46)
1, 6, 9, 11, 12, 14, 15, 36, 49, 50, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192


;; Succ edge  16 [96.0%] 
;; Succ edge  14 [4.0%]  (fallthru)

;; Start of basic block ( 13) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u124(11){ }u125(13){ }u126(25){ }u127(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 157
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 157
;; lr  def 	 24 [cc] 137 181 182
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 157
;; live  gen 	 24 [cc] 137 181 182
;; live  kill	 24 [cc]
;; rd  in  	(46)
1, 6, 9, 11, 12, 14, 15, 36, 49, 50, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192
;; rd  gen 	(4)
35, 154, 193, 194
;; rd  kill	(25)
27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 154, 193, 194

;; Pred edge  13 [4.0%]  (fallthru)
(note 91 90 92 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 92 91 93 14 arch/arm/kernel/signal.c:105 discrim 4 (set (reg/f:SI 181 [ old_ka.sa.sa_restorer ])
        (mem/s/f/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -32 [0xffffffffffffffe0])) [0 old_ka.sa.sa_restorer+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 93 92 95 14 arch/arm/kernel/signal.c:105 discrim 4 (set (reg/f:SI 182)
        (plus:SI (reg/v/f:SI 157 [ oact ])
            (const_int 12 [0xc]))) 4 {*arm_addsi3} (nil))

(insn 95 93 96 14 arch/arm/kernel/signal.c:105 discrim 4 (parallel [
            (set (reg/v:SI 137 [ __pu_err ])
                (asm_operands/v:SI ("1:	str	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg/f:SI 181 [ old_ka.sa.sa_restorer ])
                        (reg/f:SI 182)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 138 [ __pu_err ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691178))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/f:SI 182)
        (expr_list:REG_DEAD (reg/f:SI 181 [ old_ka.sa.sa_restorer ])
            (expr_list:REG_DEAD (reg/v:SI 138 [ __pu_err ])
                (expr_list:REG_UNUSED (reg:QI 24 cc)
                    (nil))))))

(insn 96 95 97 14 arch/arm/kernel/signal.c:103 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 137 [ __pu_err ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 97 96 98 14 arch/arm/kernel/signal.c:103 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 110)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 14 -> ( 16 15)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 157
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 157
;; rd  out 	(49)
1, 6, 9, 11, 12, 14, 15, 35, 49, 50, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194


;; Succ edge  16 [39.0%] 
;; Succ edge  15 [61.0%]  (fallthru)

;; Start of basic block ( 14) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u135(11){ }u136(13){ }u137(25){ }u138(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 157
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 157
;; lr  def 	 24 [cc] 135 136 151 184 185 187 188
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 157
;; live  gen 	 135 136 151 184 185 187 188
;; live  kill	 24 [cc]
;; rd  in  	(49)
1, 6, 9, 11, 12, 14, 15, 35, 49, 50, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194
;; rd  gen 	(7)
152, 153, 168, 195, 196, 197, 198
;; rd  kill	(31)
27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 152, 153, 168, 169, 170, 195, 196, 197, 198

;; Pred edge  14 [61.0%]  (fallthru)
(note 98 97 99 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 99 98 100 15 arch/arm/kernel/signal.c:107 discrim 4 (set (reg:SI 184 [ old_ka.sa.sa_flags ])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -36 [0xffffffffffffffdc])) [0 old_ka.sa.sa_flags+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 100 99 102 15 arch/arm/kernel/signal.c:107 discrim 4 (set (reg/f:SI 185)
        (plus:SI (reg/v/f:SI 157 [ oact ])
            (const_int 8 [0x8]))) 4 {*arm_addsi3} (nil))

(insn 102 100 103 15 arch/arm/kernel/signal.c:107 discrim 4 (parallel [
            (set (reg/v:SI 136 [ __pu_err ])
                (asm_operands/v:SI ("1:	str	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg:SI 184 [ old_ka.sa.sa_flags ])
                        (reg/f:SI 185)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 137 [ __pu_err ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691184))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/f:SI 185)
        (expr_list:REG_DEAD (reg:SI 184 [ old_ka.sa.sa_flags ])
            (expr_list:REG_UNUSED (reg/v:SI 136 [ __pu_err ])
                (expr_list:REG_UNUSED (reg:QI 24 cc)
                    (nil))))))

(insn 103 102 104 15 arch/arm/kernel/signal.c:108 discrim 4 (set (reg:SI 187 [ old_ka.sa.sa_mask.sig ])
        (mem/s/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -28 [0xffffffffffffffe4])) [0 old_ka.sa.sa_mask.sig+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 104 103 106 15 arch/arm/kernel/signal.c:108 discrim 4 (set (reg/f:SI 188)
        (plus:SI (reg/v/f:SI 157 [ oact ])
            (const_int 4 [0x4]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/v/f:SI 157 [ oact ])
        (nil)))

(insn 106 104 107 15 arch/arm/kernel/signal.c:108 discrim 4 (parallel [
            (set (reg/v:SI 135 [ __pu_err ])
                (asm_operands/v:SI ("1:	str	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg:SI 187 [ old_ka.sa.sa_mask.sig ])
                        (reg/f:SI 188)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 137 [ __pu_err ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691190))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/f:SI 188)
        (expr_list:REG_DEAD (reg:SI 187 [ old_ka.sa.sa_mask.sig ])
            (expr_list:REG_UNUSED (reg/v:SI 135 [ __pu_err ])
                (expr_list:REG_UNUSED (reg:QI 24 cc)
                    (nil))))))

(insn 107 106 133 15 arch/arm/kernel/signal.c:108 discrim 4 (set (reg/v:SI 151 [ ret ])
        (reg/v:SI 137 [ __pu_err ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 137 [ __pu_err ])
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(jump_insn 133 107 134 15 (set (pc)
        (label_ref 113)) -1 (nil))
;; End of basic block 15 -> ( 17)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 151
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151
;; rd  out 	(54)
1, 6, 9, 11, 12, 14, 15, 49, 50, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198


;; Succ edge  17 [100.0%] 

(barrier 134 133 110)

;; Start of basic block ( 5 13 14 4 6 12) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u150(11){ }u151(13){ }u152(25){ }u153(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 151
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 151
;; live  kill	
;; rd  in  	(56)
1, 3, 6, 9, 11, 12, 14, 15, 17, 35, 36, 37, 44, 45, 46, 49, 50, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194
;; rd  gen 	(1)
169
;; rd  kill	(3)
168, 169, 170

;; Pred edge  5 [96.0%] 
;; Pred edge  13 [96.0%] 
;; Pred edge  14 [39.0%] 
;; Pred edge  4 [96.0%] 
;; Pred edge  6 [39.0%] 
;; Pred edge  12 [96.0%] 
(code_label 110 134 111 16 92 "" [6 uses])

(note 111 110 112 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 112 111 113 16 arch/arm/kernel/signal.c:94 (set (reg/v:SI 151 [ ret ])
        (const_int -14 [0xfffffffffffffff2])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 16 -> ( 17)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 151
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 151
;; rd  out 	(56)
1, 3, 6, 9, 11, 12, 14, 15, 17, 35, 36, 37, 44, 45, 46, 49, 50, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194


;; Succ edge  17 [100.0%]  (fallthru)

;; Start of basic block ( 16 11 15) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u154(11){ }u155(13){ }u156(25){ }u157(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 151
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 151
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(65)
1, 3, 6, 9, 11, 12, 14, 15, 17, 35, 36, 37, 39, 44, 45, 46, 49, 50, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198
;; rd  gen 	(1)
0
;; rd  kill	(4)
0, 1, 2, 3

;; Pred edge  16 [100.0%]  (fallthru)
;; Pred edge  11 [96.0%] 
;; Pred edge  15 [100.0%] 
(code_label 113 112 114 17 95 "" [2 uses])

(note 114 113 119 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 119 114 125 17 arch/arm/kernel/signal.c:112 (set (reg/i:SI 0 r0)
        (reg/v:SI 151 [ ret ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 151 [ ret ])
        (nil)))

(insn 125 119 0 17 arch/arm/kernel/signal.c:112 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 17 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(64)
0, 6, 9, 11, 12, 14, 15, 17, 35, 36, 37, 39, 44, 45, 46, 49, 50, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function sys_sigsuspend (sys_sigsuspend)[0:1439]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


sys_sigsuspend

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr]
;;  ref usage 	r0={13d,7u} r1={10d,3u} r2={7d,1u} r3={7d} r11={1d,2u} r12={7d} r13={1d,9u,1d} r14={7d,1u} r15={6d} r16={6d} r17={6d} r18={6d} r19={6d} r20={6d} r21={6d} r22={6d} r23={6d} r24={6d} r25={1d,2u} r26={1d,1u} r27={6d} r28={6d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={6d} r38={6d} r39={6d} r40={6d} r41={6d} r42={6d} r43={6d} r44={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r76={6d} r77={6d} r78={6d} r79={6d} r80={6d} r81={6d} r82={6d} r83={6d} r84={6d} r85={6d} r86={6d} r87={6d} r88={6d} r89={6d} r90={6d} r91={6d} r92={6d} r93={6d} r94={6d} r95={6d} r96={6d} r97={6d} r98={6d} r99={6d} r100={6d} r101={6d} r102={6d} r103={6d} r104={6d} r105={6d} r106={6d} r107={6d} r108={6d} r109={6d} r110={6d} r111={6d} r112={6d} r113={6d} r114={6d} r115={6d} r116={6d} r117={6d} r118={6d} r119={6d} r120={6d} r121={6d} r122={6d} r123={6d} r124={6d} r125={6d} r126={6d} r127={6d} r136={1d,1u} r139={1d,2u} r141={1d,2u} r143={1d,1u} r146={1d,1u,1d} r147={1d,7u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u,1d} r152={1d,1u} r155={1d,2u} r156={1d,2u} r159={1d,1u} r160={1d,1u} r161={1d,2u} r164={1d,1u} r165={1d,1u} r166={1d,1u,1d} r167={1d,1u} r170={1d,1u} 
;;    total ref usage 804{742d,58u,4e} in 40{34 regular + 6 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720
0[0,13] 1[13,10] 2[23,7] 3[30,7] 11[37,1] 12[38,7] 13[45,1] 14[46,7] 15[53,6] 16[59,6] 17[65,6] 18[71,6] 19[77,6] 20[83,6] 21[89,6] 22[95,6] 23[101,6] 24[107,6] 25[113,1] 26[114,1] 27[115,6] 28[121,6] 29[127,6] 30[133,6] 31[139,6] 32[145,6] 33[151,6] 34[157,6] 35[163,6] 36[169,6] 37[175,6] 38[181,6] 39[187,6] 40[193,6] 41[199,6] 42[205,6] 43[211,6] 44[217,6] 45[223,6] 46[229,6] 47[235,6] 48[241,6] 49[247,6] 50[253,6] 51[259,6] 52[265,6] 53[271,6] 54[277,6] 55[283,6] 56[289,6] 57[295,6] 58[301,6] 59[307,6] 60[313,6] 61[319,6] 62[325,6] 63[331,6] 64[337,6] 65[343,6] 66[349,6] 67[355,6] 68[361,6] 69[367,6] 70[373,6] 71[379,6] 72[385,6] 73[391,6] 74[397,6] 75[403,6] 76[409,6] 77[415,6] 78[421,6] 79[427,6] 80[433,6] 81[439,6] 82[445,6] 83[451,6] 84[457,6] 85[463,6] 86[469,6] 87[475,6] 88[481,6] 89[487,6] 90[493,6] 91[499,6] 92[505,6] 93[511,6] 94[517,6] 95[523,6] 96[529,6] 97[535,6] 98[541,6] 99[547,6] 100[553,6] 101[559,6] 102[565,6] 103[571,6] 104[577,6] 105[583,6] 106[589,6] 107[595,6] 108[601,6] 109[607,6] 110[613,6] 111[619,6] 112[625,6] 113[631,6] 114[637,6] 115[643,6] 116[649,6] 117[655,6] 118[661,6] 119[667,6] 120[673,6] 121[679,6] 122[685,6] 123[691,6] 124[697,6] 125[703,6] 126[709,6] 127[715,6] 136[721,1] 139[722,1] 141[723,1] 143[724,1] 146[725,1] 147[726,1] 148[727,1] 149[728,1] 150[729,1] 151[730,1] 152[731,1] 155[732,1] 156[733,1] 159[734,1] 160[735,1] 161[736,1] 164[737,1] 165[738,1] 166[739,1] 167[740,1] 170[741,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d12(0){ }d22(1){ }d29(2){ }d36(3){ }d37(11){ }d44(12){ }d45(13){ }d52(14){ }d113(25){ }d114(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
12, 22, 29, 36, 37, 44, 45, 52, 113, 114
;; rd  kill	(55)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 113, 114
;; lr  out 	 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(10)
12, 22, 29, 36, 37, 44, 45, 52, 113, 114

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d37(bb 0 insn -1) }u1(13){ d45(bb 0 insn -1) }u2(25){ d113(bb 0 insn -1) }u3(26){ d114(bb 0 insn -1) }}
;; lr  in  	 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 136 139 141 143 146 147 148 149 150 151 152 155 156 159 160 161 164 165 166 167 170
;; live  in  	 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 136 139 141 143 146 147 148 149 150 151 152 155 156 159 160 161 164 165 166 167 170
;; live  kill	 14 [lr]
;; rd  in  	(10)
12, 22, 29, 36, 37, 44, 45, 52, 113, 114
;; rd  gen 	(22)
1, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741
;; rd  kill	(41)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 46, 47, 48, 49, 50, 51, 52, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(30)
1, 22, 29, 36, 37, 44, 45, 113, 114, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741
;;  UD chains for artificial uses
;;   reg 11 { d37(bb 0 insn -1) }
;;   reg 13 { d45(bb 0 insn -1) }
;;   reg 25 { d113(bb 0 insn -1) }
;;   reg 26 { d114(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 4
;;      reg 2 { d29(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 9
;;      reg 13 { d45(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 10
;;      reg 148 { d727(bb 2 insn 9) }
;;   eq_note reg 13 { }
;;   UD chains for insn luid 3 uid 11
;;      reg 147 { d726(bb 2 insn 10) }
;;   UD chains for insn luid 4 uid 12
;;      reg 149 { d728(bb 2 insn 11) }
;;   UD chains for insn luid 5 uid 13
;;      reg 151 { d730(bb 2 insn 12) }
;;   UD chains for insn luid 6 uid 14
;;      reg 152 { d731(bb 2 insn 13) }
;;   eq_note reg 151 { }
;;   UD chains for insn luid 7 uid 15
;;      reg 150 { d729(bb 2 insn 14) }
;;   UD chains for insn luid 8 uid 16
;;      reg 13 { d45(bb 0 insn -1) }
;;      reg 0 { d11(bb 2 insn 15) }
;;   UD chains for insn luid 9 uid 20
;;      reg 147 { d726(bb 2 insn 10) }
;;   UD chains for insn luid 10 uid 21
;;      reg 141 { d723(bb 2 insn 20) }
;;   UD chains for insn luid 11 uid 22
;;      reg 141 { d723(bb 2 insn 20) }
;;   UD chains for insn luid 12 uid 23
;;      reg 156 { d733(bb 2 insn 22) }
;;      reg 156 { d733(bb 2 insn 22) }
;;   UD chains for insn luid 13 uid 24
;;      reg 0 { d9(bb 2 insn 23) }
;;      reg 1 { d20(bb 2 insn 23) }
;;      reg 155 { d732(bb 2 insn 21) }
;;      reg 155 { d732(bb 2 insn 21) }
;;   UD chains for insn luid 14 uid 28
;;      reg 147 { d726(bb 2 insn 10) }
;;   UD chains for insn luid 15 uid 29
;;      reg 146 { d725(bb 2 insn 4) }
;;   UD chains for insn luid 16 uid 30
;;      reg 160 { d735(bb 2 insn 29) }
;;   eq_note reg 146 { }
;;   UD chains for insn luid 17 uid 31
;;      reg 139 { d722(bb 2 insn 28) }
;;      reg 159 { d734(bb 2 insn 30) }
;;   UD chains for insn luid 19 uid 33
;;      reg 139 { d722(bb 2 insn 28) }
;;      reg 161 { d736(bb 2 insn 32) }
;;   UD chains for insn luid 20 uid 34
;;      reg 13 { d45(bb 0 insn -1) }
;;   UD chains for insn luid 21 uid 38
;;      reg 147 { d726(bb 2 insn 10) }
;;   UD chains for insn luid 22 uid 39
;;      reg 164 { d737(bb 2 insn 38) }
;;   UD chains for insn luid 23 uid 40
;;      reg 166 { d739(bb 2 insn 39) }
;;   UD chains for insn luid 24 uid 41
;;      reg 167 { d740(bb 2 insn 40) }
;;   eq_note reg 166 { }
;;   UD chains for insn luid 25 uid 42
;;      reg 165 { d738(bb 2 insn 41) }
;;   UD chains for insn luid 26 uid 43
;;      reg 13 { d45(bb 0 insn -1) }
;;      reg 0 { d7(bb 2 insn 42) }
;;   UD chains for insn luid 27 uid 47
;;      reg 147 { d726(bb 2 insn 10) }
;;   UD chains for insn luid 29 uid 49
;;      reg 136 { d721(bb 2 insn 47) }
;;      reg 170 { d741(bb 2 insn 48) }
;;   UD chains for insn luid 30 uid 50
;;      reg 13 { d45(bb 0 insn -1) }
;;   UD chains for insn luid 32 uid 55
;;      reg 147 { d726(bb 2 insn 10) }
;;   UD chains for insn luid 33 uid 56
;;      reg 13 { d45(bb 0 insn -1) }
;;      reg 0 { d4(bb 2 insn 54) }
;;      reg 1 { d14(bb 2 insn 55) }
;;   UD chains for insn luid 34 uid 60
;;      reg 161 { d736(bb 2 insn 32) }
;;   UD chains for insn luid 35 uid 61
;;      reg 147 { d726(bb 2 insn 10) }
;;   UD chains for insn luid 36 uid 62
;;      reg 13 { d45(bb 0 insn -1) }
;;      reg 0 { d0(bb 2 insn 60) }
;;      reg 1 { d13(bb 2 insn 61) }
;;   UD chains for insn luid 38 uid 67
;;      reg 143 { d724(bb 2 insn 63) }
;;   UD chains for insn luid 39 uid 73
;;      reg 0 { d1(bb 2 insn 67) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u57(0){ d1(bb 2 insn 67) }u58(11){ d37(bb 0 insn -1) }u59(13){ d45(bb 0 insn -1) }u60(14){ }u61(25){ d113(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(30)
1, 22, 29, 36, 37, 44, 45, 113, 114, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(30)
1, 22, 29, 36, 37, 44, 45, 113, 114, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741
;;  UD chains for artificial uses
;;   reg 0 { d1(bb 2 insn 67) }
;;   reg 11 { d37(bb 0 insn -1) }
;;   reg 13 { d45(bb 0 insn -1) }
;;   reg 14 { }
;;   reg 25 { d113(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 73 to worklist
  Adding insn 62 to worklist
  Adding insn 56 to worklist
  Adding insn 50 to worklist
  Adding insn 49 to worklist
  Adding insn 43 to worklist
  Adding insn 34 to worklist
  Adding insn 33 to worklist
  Adding insn 31 to worklist
  Adding insn 24 to worklist
  Adding insn 16 to worklist
Finished finding needed instructions:
  Adding insn 67 to worklist
Processing use of (reg 143 [ <result> ]) in insn 67:
  Adding insn 63 to worklist
Processing use of (reg 13 sp) in insn 16:
Processing use of (reg 0 r0) in insn 16:
  Adding insn 15 to worklist
Processing use of (reg 150) in insn 15:
  Adding insn 14 to worklist
Processing use of (reg 152) in insn 14:
  Adding insn 13 to worklist
Processing use of (reg 151 [ <variable>.sighand ]) in insn 13:
  Adding insn 12 to worklist
Processing use of (reg 149 [ <variable>.task ]) in insn 12:
  Adding insn 11 to worklist
Processing use of (reg 147) in insn 11:
  Adding insn 10 to worklist
Processing use of (reg 148) in insn 10:
  Adding insn 9 to worklist
Processing use of (reg 13 sp) in insn 9:
Processing use of (reg 0 r0) in insn 24:
  Adding insn 23 to worklist
Processing use of (reg 1 r1) in insn 24:
Processing use of (reg 155) in insn 24:
  Adding insn 21 to worklist
Processing use of (reg 155) in insn 24:
Processing use of (reg 141 [ D.26262 ]) in insn 21:
  Adding insn 20 to worklist
Processing use of (reg 147) in insn 20:
Processing use of (reg 156) in insn 23:
  Adding insn 22 to worklist
Processing use of (reg 156) in insn 23:
Processing use of (reg 141 [ D.26262 ]) in insn 22:
Processing use of (reg 139 [ D.26268 ]) in insn 31:
  Adding insn 28 to worklist
Processing use of (reg 159) in insn 31:
  Adding insn 30 to worklist
Processing use of (reg 160) in insn 30:
  Adding insn 29 to worklist
Processing use of (reg 146 [ mask ]) in insn 29:
  Adding insn 4 to worklist
Processing use of (reg 2 r2) in insn 4:
Processing use of (reg 147) in insn 28:
Processing use of (reg 139 [ D.26268 ]) in insn 33:
Processing use of (reg 161) in insn 33:
  Adding insn 32 to worklist
Processing use of (reg 13 sp) in insn 34:
Processing use of (reg 13 sp) in insn 43:
Processing use of (reg 0 r0) in insn 43:
  Adding insn 42 to worklist
Processing use of (reg 165) in insn 42:
  Adding insn 41 to worklist
Processing use of (reg 167) in insn 41:
  Adding insn 40 to worklist
Processing use of (reg 166 [ <variable>.sighand ]) in insn 40:
  Adding insn 39 to worklist
Processing use of (reg 164 [ <variable>.task ]) in insn 39:
  Adding insn 38 to worklist
Processing use of (reg 147) in insn 38:
Processing use of (reg 136 [ D.26284 ]) in insn 49:
  Adding insn 47 to worklist
Processing use of (reg 170) in insn 49:
  Adding insn 48 to worklist
Processing use of (reg 147) in insn 47:
Processing use of (reg 13 sp) in insn 50:
Processing use of (reg 13 sp) in insn 56:
Processing use of (reg 0 r0) in insn 56:
  Adding insn 54 to worklist
Processing use of (reg 1 r1) in insn 56:
  Adding insn 55 to worklist
Processing use of (reg 147) in insn 55:
Processing use of (reg 13 sp) in insn 62:
Processing use of (reg 0 r0) in insn 62:
  Adding insn 60 to worklist
Processing use of (reg 1 r1) in insn 62:
  Adding insn 61 to worklist
Processing use of (reg 147) in insn 61:
Processing use of (reg 161) in insn 60:
Processing use of (reg 0 r0) in insn 73:


sys_sigsuspend

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr]
;;  ref usage 	r0={13d,7u} r1={10d,3u} r2={7d,1u} r3={7d} r11={1d,2u} r12={7d} r13={1d,9u,1d} r14={7d,1u} r15={6d} r16={6d} r17={6d} r18={6d} r19={6d} r20={6d} r21={6d} r22={6d} r23={6d} r24={6d} r25={1d,2u} r26={1d,1u} r27={6d} r28={6d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={6d} r38={6d} r39={6d} r40={6d} r41={6d} r42={6d} r43={6d} r44={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r76={6d} r77={6d} r78={6d} r79={6d} r80={6d} r81={6d} r82={6d} r83={6d} r84={6d} r85={6d} r86={6d} r87={6d} r88={6d} r89={6d} r90={6d} r91={6d} r92={6d} r93={6d} r94={6d} r95={6d} r96={6d} r97={6d} r98={6d} r99={6d} r100={6d} r101={6d} r102={6d} r103={6d} r104={6d} r105={6d} r106={6d} r107={6d} r108={6d} r109={6d} r110={6d} r111={6d} r112={6d} r113={6d} r114={6d} r115={6d} r116={6d} r117={6d} r118={6d} r119={6d} r120={6d} r121={6d} r122={6d} r123={6d} r124={6d} r125={6d} r126={6d} r127={6d} r136={1d,1u} r139={1d,2u} r141={1d,2u} r143={1d,1u} r146={1d,1u,1d} r147={1d,7u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u,1d} r152={1d,1u} r155={1d,2u} r156={1d,2u} r159={1d,1u} r160={1d,1u} r161={1d,2u} r164={1d,1u} r165={1d,1u} r166={1d,1u,1d} r167={1d,1u} r170={1d,1u} 
;;    total ref usage 804{742d,58u,4e} in 40{34 regular + 6 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720
0[0,13] 1[13,10] 2[23,7] 3[30,7] 11[37,1] 12[38,7] 13[45,1] 14[46,7] 15[53,6] 16[59,6] 17[65,6] 18[71,6] 19[77,6] 20[83,6] 21[89,6] 22[95,6] 23[101,6] 24[107,6] 25[113,1] 26[114,1] 27[115,6] 28[121,6] 29[127,6] 30[133,6] 31[139,6] 32[145,6] 33[151,6] 34[157,6] 35[163,6] 36[169,6] 37[175,6] 38[181,6] 39[187,6] 40[193,6] 41[199,6] 42[205,6] 43[211,6] 44[217,6] 45[223,6] 46[229,6] 47[235,6] 48[241,6] 49[247,6] 50[253,6] 51[259,6] 52[265,6] 53[271,6] 54[277,6] 55[283,6] 56[289,6] 57[295,6] 58[301,6] 59[307,6] 60[313,6] 61[319,6] 62[325,6] 63[331,6] 64[337,6] 65[343,6] 66[349,6] 67[355,6] 68[361,6] 69[367,6] 70[373,6] 71[379,6] 72[385,6] 73[391,6] 74[397,6] 75[403,6] 76[409,6] 77[415,6] 78[421,6] 79[427,6] 80[433,6] 81[439,6] 82[445,6] 83[451,6] 84[457,6] 85[463,6] 86[469,6] 87[475,6] 88[481,6] 89[487,6] 90[493,6] 91[499,6] 92[505,6] 93[511,6] 94[517,6] 95[523,6] 96[529,6] 97[535,6] 98[541,6] 99[547,6] 100[553,6] 101[559,6] 102[565,6] 103[571,6] 104[577,6] 105[583,6] 106[589,6] 107[595,6] 108[601,6] 109[607,6] 110[613,6] 111[619,6] 112[625,6] 113[631,6] 114[637,6] 115[643,6] 116[649,6] 117[655,6] 118[661,6] 119[667,6] 120[673,6] 121[679,6] 122[685,6] 123[691,6] 124[697,6] 125[703,6] 126[709,6] 127[715,6] 136[721,1] 139[722,1] 141[723,1] 143[724,1] 146[725,1] 147[726,1] 148[727,1] 149[728,1] 150[729,1] 151[730,1] 152[731,1] 155[732,1] 156[733,1] 159[734,1] 160[735,1] 161[736,1] 164[737,1] 165[738,1] 166[739,1] 167[740,1] 170[741,1] 
(note 1 0 6 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 136 139 141 143 146 147 148 149 150 151 152 155 156 159 160 161 164 165 166 167 170
;; live  in  	 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 136 139 141 143 146 147 148 149 150 151 152 155 156 159 160 161 164 165 166 167 170
;; live  kill	 14 [lr]
;; rd  in  	(10)
12, 22, 29, 36, 37, 44, 45, 52, 113, 114
;; rd  gen 	(22)
1, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741
;; rd  kill	(41)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 46, 47, 48, 49, 50, 51, 52, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 1 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 4 6 5 2 arch/arm/kernel/signal.c:68 (set (reg/v:SI 146 [ mask ])
        (reg:SI 2 r2 [ mask ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ mask ])
        (nil)))

(note 5 4 9 2 NOTE_INSN_FUNCTION_BEG)

(insn 9 5 10 2 include/linux/spinlock.h:310 (set (reg:SI 148)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 10 9 11 2 include/linux/spinlock.h:310 (set (reg:SI 147)
        (and:SI (reg:SI 148)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 148)
        (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
                (const_int -8192 [0xffffffffffffe000]))
            (nil))))

(insn 11 10 12 2 include/linux/spinlock.h:310 (set (reg/f:SI 149 [ <variable>.task ])
        (mem/s/f/j:SI (plus:SI (reg:SI 147)
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 12 11 13 2 include/linux/spinlock.h:310 (set (reg/f:SI 151 [ <variable>.sighand ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 149 [ <variable>.task ])
                (const_int 940 [0x3ac])) [0 <variable>.sighand+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 149 [ <variable>.task ])
        (nil)))

(insn 13 12 14 2 include/linux/spinlock.h:310 (set (reg/f:SI 152)
        (plus:SI (reg/f:SI 151 [ <variable>.sighand ])
            (const_int 1280 [0x500]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 151 [ <variable>.sighand ])
        (nil)))

(insn 14 13 15 2 include/linux/spinlock.h:310 (set (reg/f:SI 150)
        (plus:SI (reg/f:SI 152)
            (const_int 4 [0x4]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 152)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 151 [ <variable>.sighand ])
                (const_int 1284 [0x504]))
            (nil))))

(insn 15 14 16 2 include/linux/spinlock.h:310 (set (reg:SI 0 r0)
        (reg/f:SI 150)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 150)
        (nil)))

(call_insn 16 15 20 2 include/linux/spinlock.h:310 (parallel [
            (call (mem:SI (symbol_ref:SI ("_raw_spin_lock_irq") [flags 0x41] <function_decl 0x10b48280 _raw_spin_lock_irq>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 20 16 21 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/current.h:10 (set (reg/f:SI 141 [ D.26262 ])
        (mem/s/f/j:SI (plus:SI (reg:SI 147)
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 21 20 22 2 arch/arm/kernel/signal.c:71 (set (reg/f:SI 155)
        (plus:SI (reg/f:SI 141 [ D.26262 ])
            (const_int 960 [0x3c0]))) 4 {*arm_addsi3} (nil))

(insn 22 21 23 2 arch/arm/kernel/signal.c:71 (set (reg/f:SI 156)
        (plus:SI (reg/f:SI 141 [ D.26262 ])
            (const_int 944 [0x3b0]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 141 [ D.26262 ])
        (nil)))

(insn 23 22 24 2 arch/arm/kernel/signal.c:71 (parallel [
            (set (reg:SI 0 r0)
                (mem/s/j:SI (reg/f:SI 156) [0 <variable>.blocked+0 S4 A64]))
            (set (reg:SI 1 r1)
                (mem/s/j:SI (plus:SI (reg/f:SI 156)
                        (const_int 4 [0x4])) [0 <variable>.blocked+4 S4 A32]))
        ]) 190 {*ldmsi2} (expr_list:REG_DEAD (reg/f:SI 156)
        (nil)))

(insn 24 23 28 2 arch/arm/kernel/signal.c:71 (parallel [
            (set (mem/s/j:SI (reg/f:SI 155) [0 <variable>.saved_sigmask+0 S4 A64])
                (reg:SI 0 r0))
            (set (mem/s/j:SI (plus:SI (reg/f:SI 155)
                        (const_int 4 [0x4])) [0 <variable>.saved_sigmask+4 S4 A32])
                (reg:SI 1 r1))
        ]) 197 {*stmsi2} (expr_list:REG_DEAD (reg/f:SI 155)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_DEAD (reg:SI 0 r0)
                (nil)))))

(insn 28 24 29 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/current.h:10 (set (reg/f:SI 139 [ D.26268 ])
        (mem/s/f/j:SI (plus:SI (reg:SI 147)
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 29 28 30 2 include/linux/signal.h:201 (set (reg:SI 160)
        (and:SI (reg/v:SI 146 [ mask ])
            (const_int -262145 [0xfffffffffffbffff]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg/v:SI 146 [ mask ])
        (nil)))

(insn 30 29 31 2 include/linux/signal.h:201 (set (reg:SI 159)
        (and:SI (reg:SI 160)
            (const_int -257 [0xfffffffffffffeff]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 160)
        (expr_list:REG_EQUAL (and:SI (reg/v:SI 146 [ mask ])
                (const_int -262401 [0xfffffffffffbfeff]))
            (nil))))

(insn 31 30 32 2 include/linux/signal.h:201 (set (mem/s/j:SI (plus:SI (reg/f:SI 139 [ D.26268 ])
                (const_int 944 [0x3b0])) [0 <variable>.blocked.sig+0 S4 A64])
        (reg:SI 159)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 159)
        (nil)))

(insn 32 31 33 2 include/linux/signal.h:206 (set (reg:SI 161)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 33 32 34 2 include/linux/signal.h:206 (set (mem/s/j:SI (plus:SI (reg/f:SI 139 [ D.26268 ])
                (const_int 948 [0x3b4])) [0 <variable>.blocked.sig+4 S4 A32])
        (reg:SI 161)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 139 [ D.26268 ])
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(call_insn 34 33 38 2 arch/arm/kernel/signal.c:73 (parallel [
            (call (mem:SI (symbol_ref:SI ("recalc_sigpending") [flags 0x41] <function_decl 0x10f2c680 recalc_sigpending>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(insn 38 34 39 2 include/linux/spinlock.h:335 (set (reg/f:SI 164 [ <variable>.task ])
        (mem/s/f/j:SI (plus:SI (reg:SI 147)
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 39 38 40 2 include/linux/spinlock.h:335 (set (reg/f:SI 166 [ <variable>.sighand ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 164 [ <variable>.task ])
                (const_int 940 [0x3ac])) [0 <variable>.sighand+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 164 [ <variable>.task ])
        (nil)))

(insn 40 39 41 2 include/linux/spinlock.h:335 (set (reg/f:SI 167)
        (plus:SI (reg/f:SI 166 [ <variable>.sighand ])
            (const_int 1280 [0x500]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 166 [ <variable>.sighand ])
        (nil)))

(insn 41 40 42 2 include/linux/spinlock.h:335 (set (reg/f:SI 165)
        (plus:SI (reg/f:SI 167)
            (const_int 4 [0x4]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 167)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 166 [ <variable>.sighand ])
                (const_int 1284 [0x504]))
            (nil))))

(insn 42 41 43 2 include/linux/spinlock.h:335 (set (reg:SI 0 r0)
        (reg/f:SI 165)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 165)
        (nil)))

(call_insn 43 42 47 2 include/linux/spinlock.h:335 (parallel [
            (call (mem:SI (symbol_ref:SI ("_raw_spin_unlock_irq") [flags 0x41] <function_decl 0x10b48600 _raw_spin_unlock_irq>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 47 43 48 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/current.h:10 (set (reg/f:SI 136 [ D.26284 ])
        (mem/s/f/j:SI (plus:SI (reg:SI 147)
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 48 47 49 2 arch/arm/kernel/signal.c:76 (set (reg:SI 170)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 49 48 50 2 arch/arm/kernel/signal.c:76 (set (mem/s/v/j:SI (reg/f:SI 136 [ D.26284 ]) [0 <variable>.state+0 S4 A64])
        (reg:SI 170)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 170)
        (expr_list:REG_DEAD (reg/f:SI 136 [ D.26284 ])
            (expr_list:REG_EQUAL (const_int 1 [0x1])
                (nil)))))

(call_insn 50 49 54 2 arch/arm/kernel/signal.c:77 (parallel [
            (call (mem:SI (symbol_ref:SI ("schedule") [flags 0x41] <function_decl 0x10e69680 schedule>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(insn 54 50 55 2 include/linux/thread_info.h:64 (set (reg:SI 0 r0)
        (const_int 20 [0x14])) 167 {*arm_movsi_insn} (nil))

(insn 55 54 56 2 include/linux/thread_info.h:64 (set (reg:SI 1 r1)
        (reg:SI 147)) 167 {*arm_movsi_insn} (nil))

(call_insn 56 55 60 2 include/linux/thread_info.h:64 (parallel [
            (call (mem:SI (symbol_ref:SI ("_set_bit") [flags 0x41] <function_decl 0x109cee80 _set_bit>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 60 56 61 2 include/linux/thread_info.h:64 (set (reg:SI 0 r0)
        (reg:SI 161)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 161)
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn 61 60 62 2 include/linux/thread_info.h:64 (set (reg:SI 1 r1)
        (reg:SI 147)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 147)
        (nil)))

(call_insn 62 61 63 2 include/linux/thread_info.h:64 (parallel [
            (call (mem:SI (symbol_ref:SI ("_set_bit") [flags 0x41] <function_decl 0x109cee80 _set_bit>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 63 62 67 2 arch/arm/kernel/signal.c:80 (set (reg:SI 143 [ <result> ])
        (const_int -514 [0xfffffffffffffdfe])) 167 {*arm_movsi_insn} (nil))

(insn 67 63 73 2 arch/arm/kernel/signal.c:80 (set (reg/i:SI 0 r0)
        (reg:SI 143 [ <result> ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 143 [ <result> ])
        (expr_list:REG_EQUAL (const_int -514 [0xfffffffffffffdfe])
            (nil))))

(insn 73 67 0 2 arch/arm/kernel/signal.c:80 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(30)
1, 22, 29, 36, 37, 44, 45, 113, 114, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns
