
;; Function save_trace (save_trace)[0:792]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 9 n_edges 11 count 16 (  1.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 9 n_edges 11 count 16 (  1.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 9 n_edges 11 count 16 (  1.8)


save_trace

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={4d,5u} r1={2d,1u} r2={2d} r3={2d} r11={1d,8u} r12={2d} r13={1d,9u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={5d,4u} r25={1d,8u} r26={1d,7u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,2u} r134={1d,4u} r136={1d,2u} r137={1d,2u} r138={1d,2u} r139={3d,1u} r140={1d,1u} r142={1d,1u} r143={1d,4u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} 
;;    total ref usage 214{148d,66u,0e} in 31{30 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132
0[0,4] 1[4,2] 2[6,2] 3[8,2] 11[10,1] 12[11,2] 13[13,1] 14[14,2] 15[16,1] 16[17,1] 17[18,1] 18[19,1] 19[20,1] 20[21,1] 21[22,1] 22[23,1] 23[24,1] 24[25,5] 25[30,1] 26[31,1] 27[32,1] 28[33,1] 29[34,1] 30[35,1] 31[36,1] 32[37,1] 33[38,1] 34[39,1] 35[40,1] 36[41,1] 37[42,1] 38[43,1] 39[44,1] 40[45,1] 41[46,1] 42[47,1] 43[48,1] 44[49,1] 45[50,1] 46[51,1] 47[52,1] 48[53,1] 49[54,1] 50[55,1] 51[56,1] 52[57,1] 53[58,1] 54[59,1] 55[60,1] 56[61,1] 57[62,1] 58[63,1] 59[64,1] 60[65,1] 61[66,1] 62[67,1] 63[68,1] 64[69,1] 65[70,1] 66[71,1] 67[72,1] 68[73,1] 69[74,1] 70[75,1] 71[76,1] 72[77,1] 73[78,1] 74[79,1] 75[80,1] 76[81,1] 77[82,1] 78[83,1] 79[84,1] 80[85,1] 81[86,1] 82[87,1] 83[88,1] 84[89,1] 85[90,1] 86[91,1] 87[92,1] 88[93,1] 89[94,1] 90[95,1] 91[96,1] 92[97,1] 93[98,1] 94[99,1] 95[100,1] 96[101,1] 97[102,1] 98[103,1] 99[104,1] 100[105,1] 101[106,1] 102[107,1] 103[108,1] 104[109,1] 105[110,1] 106[111,1] 107[112,1] 108[113,1] 109[114,1] 110[115,1] 111[116,1] 112[117,1] 113[118,1] 114[119,1] 115[120,1] 116[121,1] 117[122,1] 118[123,1] 119[124,1] 120[125,1] 121[126,1] 122[127,1] 123[128,1] 124[129,1] 125[130,1] 126[131,1] 127[132,1] 133[133,1] 134[134,1] 136[135,1] 137[136,1] 138[137,1] 139[138,3] 140[141,1] 142[142,1] 143[143,1] 144[144,1] 145[145,1] 146[146,1] 147[147,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d3(0){ }d5(1){ }d7(2){ }d9(3){ }d10(11){ }d12(12){ }d13(13){ }d15(14){ }d30(25){ }d31(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
3, 5, 7, 9, 10, 12, 13, 15, 30, 31
;; rd  kill	(18)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 30, 31
;; lr  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
3, 5, 7, 9, 10, 12, 13, 15, 30, 31

( 0 )->[2]->( 3 5 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d10(bb 0 insn -1) }u1(13){ d13(bb 0 insn -1) }u2(25){ d30(bb 0 insn -1) }u3(26){ d31(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 133 134 142 143 144
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 133 134 142 143 144
;; live  kill	
;; rd  in  	(10)
3, 5, 7, 9, 10, 12, 13, 15, 30, 31
;; rd  gen 	(6)
29, 133, 134, 142, 143, 144
;; rd  kill	(10)
25, 26, 27, 28, 29, 133, 134, 142, 143, 144
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 143
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 143
;; rd  out 	(16)
3, 5, 7, 9, 10, 12, 13, 15, 29, 30, 31, 133, 134, 142, 143, 144
;;  UD chains for artificial uses
;;   reg 11 { d10(bb 0 insn -1) }
;;   reg 13 { d13(bb 0 insn -1) }
;;   reg 25 { d30(bb 0 insn -1) }
;;   reg 26 { d31(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d3(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 3
;;      reg 1 { d5(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 8
;;      reg 143 { d143(bb 2 insn 3) }
;;   UD chains for insn luid 3 uid 9
;;      reg 142 { d142(bb 2 insn 2) }
;;   UD chains for insn luid 4 uid 10
;;      reg 143 { d143(bb 2 insn 3) }
;;   UD chains for insn luid 5 uid 11
;;      reg 144 { d144(bb 2 insn 10) }
;;   UD chains for insn luid 6 uid 12
;;      reg 24 { d29(bb 2 insn 11) }

( 2 )->[3]->( 4 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u11(11){ d10(bb 0 insn -1) }u12(13){ d13(bb 0 insn -1) }u13(25){ d30(bb 0 insn -1) }u14(26){ d31(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 140
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 143
;; live  gen 	 0 [r0] 24 [cc] 140
;; live  kill	 14 [lr]
;; rd  in  	(16)
3, 5, 7, 9, 10, 12, 13, 15, 29, 30, 31, 133, 134, 142, 143, 144
;; rd  gen 	(3)
1, 27, 141
;; rd  kill	(12)
0, 1, 2, 3, 14, 15, 25, 26, 27, 28, 29, 141
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 143
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 143
;; rd  out 	(16)
1, 5, 7, 9, 10, 12, 13, 27, 30, 31, 133, 134, 141, 142, 143, 144
;;  UD chains for artificial uses
;;   reg 11 { d10(bb 0 insn -1) }
;;   reg 13 { d13(bb 0 insn -1) }
;;   reg 25 { d30(bb 0 insn -1) }
;;   reg 26 { d31(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 14
;;      reg 133 { d133(bb 2 insn 9) }
;;   UD chains for insn luid 1 uid 15
;;      reg 13 { d13(bb 0 insn -1) }
;;      reg 0 { d2(bb 3 insn 14) }
;;   UD chains for insn luid 2 uid 16
;;      reg 0 { d1(bb 3 insn 15) }
;;   UD chains for insn luid 3 uid 17
;;      reg 140 { d141(bb 3 insn 16) }
;;   UD chains for insn luid 4 uid 18
;;      reg 24 { d27(bb 3 insn 17) }

( 3 )->[4]->( 8 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u21(11){ d10(bb 0 insn -1) }u22(13){ d13(bb 0 insn -1) }u23(25){ d30(bb 0 insn -1) }u24(26){ d31(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 139
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 139
;; live  kill	
;; rd  in  	(16)
1, 5, 7, 9, 10, 12, 13, 27, 30, 31, 133, 134, 141, 142, 143, 144
;; rd  gen 	(1)
140
;; rd  kill	(3)
138, 139, 140
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; rd  out 	(17)
1, 5, 7, 9, 10, 12, 13, 27, 30, 31, 133, 134, 140, 141, 142, 143, 144
;;  UD chains for artificial uses
;;   reg 11 { d10(bb 0 insn -1) }
;;   reg 13 { d13(bb 0 insn -1) }
;;   reg 25 { d30(bb 0 insn -1) }
;;   reg 26 { d31(bb 0 insn -1) }

( 2 3 )->[5]->( 6 7 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u25(11){ d10(bb 0 insn -1) }u26(13){ d13(bb 0 insn -1) }u27(25){ d30(bb 0 insn -1) }u28(26){ d31(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 24 [cc] 138
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 143
;; live  gen 	 24 [cc] 138
;; live  kill	
;; rd  in  	(19)
1, 3, 5, 7, 9, 10, 12, 13, 15, 27, 29, 30, 31, 133, 134, 141, 142, 143, 144
;; rd  gen 	(2)
26, 137
;; rd  kill	(6)
25, 26, 27, 28, 29, 137
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 138 143
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 138 143
;; rd  out 	(19)
1, 3, 5, 7, 9, 10, 12, 13, 15, 26, 30, 31, 133, 134, 137, 141, 142, 143, 144
;;  UD chains for artificial uses
;;   reg 11 { d10(bb 0 insn -1) }
;;   reg 13 { d13(bb 0 insn -1) }
;;   reg 25 { d30(bb 0 insn -1) }
;;   reg 26 { d31(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 25
;;      reg 143 { d143(bb 2 insn 3) }
;;   UD chains for insn luid 1 uid 26
;;      reg 138 { d137(bb 5 insn 25) }
;;   UD chains for insn luid 2 uid 27
;;      reg 24 { d26(bb 5 insn 26) }

( 5 )->[6]->( 8 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u32(11){ d10(bb 0 insn -1) }u33(13){ d13(bb 0 insn -1) }u34(25){ d30(bb 0 insn -1) }u35(26){ d31(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 143
;; lr  def 	 139 145
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 143
;; live  gen 	 139 145
;; live  kill	
;; rd  in  	(19)
1, 3, 5, 7, 9, 10, 12, 13, 15, 26, 30, 31, 133, 134, 137, 141, 142, 143, 144
;; rd  gen 	(2)
139, 145
;; rd  kill	(4)
138, 139, 140, 145
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; rd  out 	(21)
1, 3, 5, 7, 9, 10, 12, 13, 15, 26, 30, 31, 133, 134, 137, 139, 141, 142, 143, 144, 145
;;  UD chains for artificial uses
;;   reg 11 { d10(bb 0 insn -1) }
;;   reg 13 { d13(bb 0 insn -1) }
;;   reg 25 { d30(bb 0 insn -1) }
;;   reg 26 { d31(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 29
;;      reg 138 { d137(bb 5 insn 25) }
;;   UD chains for insn luid 1 uid 30
;;      reg 143 { d143(bb 2 insn 3) }
;;      reg 145 { d145(bb 6 insn 29) }

( 5 )->[7]->( 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u39(11){ d10(bb 0 insn -1) }u40(13){ d13(bb 0 insn -1) }u41(25){ d30(bb 0 insn -1) }u42(26){ d31(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134
;; lr  def 	 24 [cc] 136 137 139 146 147
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; live  gen 	 24 [cc] 136 137 139 146 147
;; live  kill	
;; rd  in  	(19)
1, 3, 5, 7, 9, 10, 12, 13, 15, 26, 30, 31, 133, 134, 137, 141, 142, 143, 144
;; rd  gen 	(6)
25, 135, 136, 138, 146, 147
;; rd  kill	(12)
25, 26, 27, 28, 29, 135, 136, 138, 139, 140, 146, 147
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; rd  out 	(24)
1, 3, 5, 7, 9, 10, 12, 13, 15, 25, 30, 31, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 146, 147
;;  UD chains for artificial uses
;;   reg 11 { d10(bb 0 insn -1) }
;;   reg 13 { d13(bb 0 insn -1) }
;;   reg 25 { d30(bb 0 insn -1) }
;;   reg 26 { d31(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 36
;;      reg 134 { d134(bb 2 insn 8) }
;;   UD chains for insn luid 1 uid 37
;;      reg 134 { d134(bb 2 insn 8) }
;;   UD chains for insn luid 2 uid 38
;;      reg 133 { d133(bb 2 insn 9) }
;;      reg 137 { d136(bb 7 insn 36) }
;;      reg 146 { d146(bb 7 insn 37) }
;;   UD chains for insn luid 3 uid 39
;;      reg 137 { d136(bb 7 insn 36) }
;;   UD chains for insn luid 4 uid 40
;;      reg 134 { d134(bb 2 insn 8) }
;;      reg 136 { d135(bb 7 insn 39) }
;;   UD chains for insn luid 5 uid 41
;;      reg 134 { d134(bb 2 insn 8) }
;;   UD chains for insn luid 6 uid 42
;;      reg 136 { d135(bb 7 insn 39) }
;;      reg 147 { d147(bb 7 insn 41) }
;;   UD chains for insn luid 7 uid 43
;;      reg 24 { d25(bb 7 insn 42) }

( 7 4 6 )->[8]->( 1 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u55(11){ d10(bb 0 insn -1) }u56(13){ d13(bb 0 insn -1) }u57(25){ d30(bb 0 insn -1) }u58(26){ d31(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(29)
1, 3, 5, 7, 9, 10, 12, 13, 15, 25, 26, 27, 30, 31, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147
;; rd  gen 	(1)
0
;; rd  kill	(4)
0, 1, 2, 3
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(28)
0, 5, 7, 9, 10, 12, 13, 15, 25, 26, 27, 30, 31, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147
;;  UD chains for artificial uses
;;   reg 11 { d10(bb 0 insn -1) }
;;   reg 13 { d13(bb 0 insn -1) }
;;   reg 25 { d30(bb 0 insn -1) }
;;   reg 26 { d31(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 51
;;      reg 139 { d140(bb 4 insn 20) d139(bb 6 insn 31) d138(bb 7 insn 43) }
;;   UD chains for insn luid 1 uid 57
;;      reg 0 { d0(bb 8 insn 51) }

( 8 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u61(0){ d0(bb 8 insn 51) }u62(11){ d10(bb 0 insn -1) }u63(13){ d13(bb 0 insn -1) }u64(14){ d15(bb 0 insn -1) }u65(25){ d30(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(28)
0, 5, 7, 9, 10, 12, 13, 15, 25, 26, 27, 30, 31, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(28)
0, 5, 7, 9, 10, 12, 13, 15, 25, 26, 27, 30, 31, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147
;;  UD chains for artificial uses
;;   reg 0 { d0(bb 8 insn 51) }
;;   reg 11 { d10(bb 0 insn -1) }
;;   reg 13 { d13(bb 0 insn -1) }
;;   reg 14 { d15(bb 0 insn -1) }
;;   reg 25 { d30(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 12 to worklist
  Adding insn 18 to worklist
  Adding insn 15 to worklist
  Adding insn 80 to worklist
  Adding insn 27 to worklist
  Adding insn 82 to worklist
  Adding insn 30 to worklist
  Adding insn 40 to worklist
  Adding insn 38 to worklist
  Adding insn 57 to worklist
Finished finding needed instructions:
  Adding insn 51 to worklist
Processing use of (reg 139 [ D.14780 ]) in insn 51:
  Adding insn 20 to worklist
  Adding insn 31 to worklist
  Adding insn 43 to worklist
Processing use of (reg 24 cc) in insn 43:
  Adding insn 42 to worklist
Processing use of (reg 136 [ D.14787 ]) in insn 42:
  Adding insn 39 to worklist
Processing use of (reg 147 [ <variable>.max_entries ]) in insn 42:
  Adding insn 41 to worklist
Processing use of (reg 134 [ trace ]) in insn 41:
  Adding insn 8 to worklist
Processing use of (reg 143 [ d ]) in insn 8:
  Adding insn 3 to worklist
Processing use of (reg 1 r1) in insn 3:
Processing use of (reg 137 [ D.14786 ]) in insn 39:
  Adding insn 36 to worklist
Processing use of (reg 134 [ trace ]) in insn 36:
Processing use of (reg 0 r0) in insn 57:
Processing use of (reg 133 [ addr ]) in insn 38:
  Adding insn 9 to worklist
Processing use of (reg 137 [ D.14786 ]) in insn 38:
Processing use of (reg 146 [ <variable>.entries ]) in insn 38:
  Adding insn 37 to worklist
Processing use of (reg 134 [ trace ]) in insn 37:
Processing use of (reg 142 [ frame ]) in insn 9:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 134 [ trace ]) in insn 40:
Processing use of (reg 136 [ D.14787 ]) in insn 40:
Processing use of (reg 143 [ d ]) in insn 30:
Processing use of (reg 145) in insn 30:
  Adding insn 29 to worklist
Processing use of (reg 138 [ D.14781 ]) in insn 29:
  Adding insn 25 to worklist
Processing use of (reg 143 [ d ]) in insn 25:
Processing use of (reg 24 cc) in insn 27:
  Adding insn 26 to worklist
Processing use of (reg 138 [ D.14781 ]) in insn 26:
Processing use of (reg 13 sp) in insn 15:
Processing use of (reg 0 r0) in insn 15:
  Adding insn 14 to worklist
Processing use of (reg 133 [ addr ]) in insn 14:
Processing use of (reg 24 cc) in insn 18:
  Adding insn 17 to worklist
Processing use of (reg 140 [ D.14777 ]) in insn 17:
  Adding insn 16 to worklist
Processing use of (reg 0 r0) in insn 16:
Processing use of (reg 24 cc) in insn 12:
  Adding insn 11 to worklist
Processing use of (reg 144 [ <variable>.no_sched_functions ]) in insn 11:
  Adding insn 10 to worklist
Processing use of (reg 143 [ d ]) in insn 10:


save_trace

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={4d,5u} r1={2d,1u} r2={2d} r3={2d} r11={1d,8u} r12={2d} r13={1d,9u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={5d,4u} r25={1d,8u} r26={1d,7u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,2u} r134={1d,4u} r136={1d,2u} r137={1d,2u} r138={1d,2u} r139={3d,1u} r140={1d,1u} r142={1d,1u} r143={1d,4u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} 
;;    total ref usage 214{148d,66u,0e} in 31{30 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132
0[0,4] 1[4,2] 2[6,2] 3[8,2] 11[10,1] 12[11,2] 13[13,1] 14[14,2] 15[16,1] 16[17,1] 17[18,1] 18[19,1] 19[20,1] 20[21,1] 21[22,1] 22[23,1] 23[24,1] 24[25,5] 25[30,1] 26[31,1] 27[32,1] 28[33,1] 29[34,1] 30[35,1] 31[36,1] 32[37,1] 33[38,1] 34[39,1] 35[40,1] 36[41,1] 37[42,1] 38[43,1] 39[44,1] 40[45,1] 41[46,1] 42[47,1] 43[48,1] 44[49,1] 45[50,1] 46[51,1] 47[52,1] 48[53,1] 49[54,1] 50[55,1] 51[56,1] 52[57,1] 53[58,1] 54[59,1] 55[60,1] 56[61,1] 57[62,1] 58[63,1] 59[64,1] 60[65,1] 61[66,1] 62[67,1] 63[68,1] 64[69,1] 65[70,1] 66[71,1] 67[72,1] 68[73,1] 69[74,1] 70[75,1] 71[76,1] 72[77,1] 73[78,1] 74[79,1] 75[80,1] 76[81,1] 77[82,1] 78[83,1] 79[84,1] 80[85,1] 81[86,1] 82[87,1] 83[88,1] 84[89,1] 85[90,1] 86[91,1] 87[92,1] 88[93,1] 89[94,1] 90[95,1] 91[96,1] 92[97,1] 93[98,1] 94[99,1] 95[100,1] 96[101,1] 97[102,1] 98[103,1] 99[104,1] 100[105,1] 101[106,1] 102[107,1] 103[108,1] 104[109,1] 105[110,1] 106[111,1] 107[112,1] 108[113,1] 109[114,1] 110[115,1] 111[116,1] 112[117,1] 113[118,1] 114[119,1] 115[120,1] 116[121,1] 117[122,1] 118[123,1] 119[124,1] 120[125,1] 121[126,1] 122[127,1] 123[128,1] 124[129,1] 125[130,1] 126[131,1] 127[132,1] 133[133,1] 134[134,1] 136[135,1] 137[136,1] 138[137,1] 139[138,3] 140[141,1] 142[142,1] 143[143,1] 144[144,1] 145[145,1] 146[146,1] 147[147,1] 
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 133 134 142 143 144
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 133 134 142 143 144
;; live  kill	
;; rd  in  	(10)
3, 5, 7, 9, 10, 12, 13, 15, 30, 31
;; rd  gen 	(6)
29, 133, 134, 142, 143, 144
;; rd  kill	(10)
25, 26, 27, 28, 29, 133, 134, 142, 143, 144

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 5 3 2 arch/arm/kernel/stacktrace.c:69 (set (reg/v/f:SI 142 [ frame ])
        (reg:SI 0 r0 [ frame ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ frame ])
        (nil)))

(insn 3 2 4 2 arch/arm/kernel/stacktrace.c:69 (set (reg/v/f:SI 143 [ d ])
        (reg:SI 1 r1 [ d ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ d ])
        (nil)))

(note 4 3 8 2 NOTE_INSN_FUNCTION_BEG)

(insn 8 4 9 2 arch/arm/kernel/stacktrace.c:71 (set (reg/v/f:SI 134 [ trace ])
        (mem/s/f/j:SI (reg/v/f:SI 143 [ d ]) [0 <variable>.trace+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 9 8 10 2 arch/arm/kernel/stacktrace.c:72 (set (reg/v:SI 133 [ addr ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 142 [ frame ])
                (const_int 12 [0xc])) [0 <variable>.pc+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 142 [ frame ])
        (nil)))

(insn 10 9 11 2 arch/arm/kernel/stacktrace.c:74 (set (reg:SI 144 [ <variable>.no_sched_functions ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 143 [ d ])
                (const_int 4 [0x4])) [0 <variable>.no_sched_functions+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 11 10 12 2 arch/arm/kernel/stacktrace.c:74 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 144 [ <variable>.no_sched_functions ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 144 [ <variable>.no_sched_functions ])
        (nil)))

(jump_insn 12 11 13 2 arch/arm/kernel/stacktrace.c:74 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 23)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 2 -> ( 3 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 143
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 143
;; rd  out 	(16)
3, 5, 7, 9, 10, 12, 13, 15, 29, 30, 31, 133, 134, 142, 143, 144


;; Succ edge  3 [29.0%]  (fallthru)
;; Succ edge  5 [71.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u11(11){ }u12(13){ }u13(25){ }u14(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 140
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 143
;; live  gen 	 0 [r0] 24 [cc] 140
;; live  kill	 14 [lr]
;; rd  in  	(16)
3, 5, 7, 9, 10, 12, 13, 15, 29, 30, 31, 133, 134, 142, 143, 144
;; rd  gen 	(3)
1, 27, 141
;; rd  kill	(12)
0, 1, 2, 3, 14, 15, 25, 26, 27, 28, 29, 141

;; Pred edge  2 [29.0%]  (fallthru)
(note 13 12 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 14 13 15 3 arch/arm/kernel/stacktrace.c:74 discrim 1 (set (reg:SI 0 r0)
        (reg/v:SI 133 [ addr ])) 167 {*arm_movsi_insn} (nil))

(call_insn 15 14 16 3 arch/arm/kernel/stacktrace.c:74 discrim 1 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("in_sched_functions") [flags 0x41] <function_decl 0x10f44c00 in_sched_functions>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 16 15 17 3 arch/arm/kernel/stacktrace.c:74 discrim 1 (set (reg:SI 140 [ D.14777 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 17 16 18 3 arch/arm/kernel/stacktrace.c:74 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 140 [ D.14777 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 140 [ D.14777 ])
        (nil)))

(jump_insn 18 17 19 3 arch/arm/kernel/stacktrace.c:74 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 23)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
            (nil))))
;; End of basic block 3 -> ( 4 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 143
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 143
;; rd  out 	(16)
1, 5, 7, 9, 10, 12, 13, 27, 30, 31, 133, 134, 141, 142, 143, 144


;; Succ edge  4 [39.0%]  (fallthru)
;; Succ edge  5 [61.0%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u21(11){ }u22(13){ }u23(25){ }u24(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 139
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 139
;; live  kill	
;; rd  in  	(16)
1, 5, 7, 9, 10, 12, 13, 27, 30, 31, 133, 134, 141, 142, 143, 144
;; rd  gen 	(1)
140
;; rd  kill	(3)
138, 139, 140

;; Pred edge  3 [39.0%]  (fallthru)
(note 19 18 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 20 19 80 4 arch/arm/kernel/stacktrace.c:75 (set (reg:SI 139 [ D.14780 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(jump_insn 80 20 81 4 (set (pc)
        (label_ref 45)) -1 (nil))
;; End of basic block 4 -> ( 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; rd  out 	(17)
1, 5, 7, 9, 10, 12, 13, 27, 30, 31, 133, 134, 140, 141, 142, 143, 144


;; Succ edge  8 [100.0%] 

(barrier 81 80 23)

;; Start of basic block ( 2 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u25(11){ }u26(13){ }u27(25){ }u28(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 24 [cc] 138
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 143
;; live  gen 	 24 [cc] 138
;; live  kill	
;; rd  in  	(19)
1, 3, 5, 7, 9, 10, 12, 13, 15, 27, 29, 30, 31, 133, 134, 141, 142, 143, 144
;; rd  gen 	(2)
26, 137
;; rd  kill	(6)
25, 26, 27, 28, 29, 137

;; Pred edge  2 [71.0%] 
;; Pred edge  3 [61.0%] 
(code_label 23 81 24 5 2 "" [2 uses])

(note 24 23 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 25 24 26 5 arch/arm/kernel/stacktrace.c:76 (set (reg:SI 138 [ D.14781 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 143 [ d ])
                (const_int 8 [0x8])) [0 <variable>.skip+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 26 25 27 5 arch/arm/kernel/stacktrace.c:76 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 138 [ D.14781 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 27 26 28 5 arch/arm/kernel/stacktrace.c:76 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 34)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
            (nil))))
;; End of basic block 5 -> ( 6 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 138 143
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 138 143
;; rd  out 	(19)
1, 3, 5, 7, 9, 10, 12, 13, 15, 26, 30, 31, 133, 134, 137, 141, 142, 143, 144


;; Succ edge  6 [39.0%]  (fallthru)
;; Succ edge  7 [61.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u32(11){ }u33(13){ }u34(25){ }u35(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 143
;; lr  def 	 139 145
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 143
;; live  gen 	 139 145
;; live  kill	
;; rd  in  	(19)
1, 3, 5, 7, 9, 10, 12, 13, 15, 26, 30, 31, 133, 134, 137, 141, 142, 143, 144
;; rd  gen 	(2)
139, 145
;; rd  kill	(4)
138, 139, 140, 145

;; Pred edge  5 [39.0%]  (fallthru)
(note 28 27 29 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 29 28 30 6 arch/arm/kernel/stacktrace.c:77 (set (reg:SI 145)
        (plus:SI (reg:SI 138 [ D.14781 ])
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 138 [ D.14781 ])
        (nil)))

(insn 30 29 31 6 arch/arm/kernel/stacktrace.c:77 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 143 [ d ])
                (const_int 8 [0x8])) [0 <variable>.skip+0 S4 A32])
        (reg:SI 145)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 145)
        (expr_list:REG_DEAD (reg/v/f:SI 143 [ d ])
            (nil))))

(insn 31 30 82 6 arch/arm/kernel/stacktrace.c:78 (set (reg:SI 139 [ D.14780 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(jump_insn 82 31 83 6 arch/arm/kernel/stacktrace.c:78 (set (pc)
        (label_ref 45)) -1 (nil))
;; End of basic block 6 -> ( 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; rd  out 	(21)
1, 3, 5, 7, 9, 10, 12, 13, 15, 26, 30, 31, 133, 134, 137, 139, 141, 142, 143, 144, 145


;; Succ edge  8 [100.0%] 

(barrier 83 82 34)

;; Start of basic block ( 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u39(11){ }u40(13){ }u41(25){ }u42(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134
;; lr  def 	 24 [cc] 136 137 139 146 147
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; live  gen 	 24 [cc] 136 137 139 146 147
;; live  kill	
;; rd  in  	(19)
1, 3, 5, 7, 9, 10, 12, 13, 15, 26, 30, 31, 133, 134, 137, 141, 142, 143, 144
;; rd  gen 	(6)
25, 135, 136, 138, 146, 147
;; rd  kill	(12)
25, 26, 27, 28, 29, 135, 136, 138, 139, 140, 146, 147

;; Pred edge  5 [61.0%] 
(code_label 34 83 35 7 4 "" [1 uses])

(note 35 34 36 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 36 35 37 7 arch/arm/kernel/stacktrace.c:81 (set (reg:SI 137 [ D.14786 ])
        (mem/s/j:SI (reg/v/f:SI 134 [ trace ]) [0 <variable>.nr_entries+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 37 36 38 7 arch/arm/kernel/stacktrace.c:81 (set (reg/f:SI 146 [ <variable>.entries ])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 134 [ trace ])
                (const_int 8 [0x8])) [0 <variable>.entries+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 38 37 39 7 arch/arm/kernel/stacktrace.c:81 (set (mem:SI (plus:SI (mult:SI (reg:SI 137 [ D.14786 ])
                    (const_int 4 [0x4]))
                (reg/f:SI 146 [ <variable>.entries ])) [0 S4 A32])
        (reg/v:SI 133 [ addr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 146 [ <variable>.entries ])
        (expr_list:REG_DEAD (reg/v:SI 133 [ addr ])
            (nil))))

(insn 39 38 40 7 arch/arm/kernel/stacktrace.c:81 (set (reg:SI 136 [ D.14787 ])
        (plus:SI (reg:SI 137 [ D.14786 ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 137 [ D.14786 ])
        (nil)))

(insn 40 39 41 7 arch/arm/kernel/stacktrace.c:81 (set (mem/s/j:SI (reg/v/f:SI 134 [ trace ]) [0 <variable>.nr_entries+0 S4 A32])
        (reg:SI 136 [ D.14787 ])) 167 {*arm_movsi_insn} (nil))

(insn 41 40 42 7 arch/arm/kernel/stacktrace.c:83 (set (reg:SI 147 [ <variable>.max_entries ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 134 [ trace ])
                (const_int 4 [0x4])) [0 <variable>.max_entries+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 134 [ trace ])
        (nil)))

(insn 42 41 43 7 arch/arm/kernel/stacktrace.c:83 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 136 [ D.14787 ])
            (reg:SI 147 [ <variable>.max_entries ]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 147 [ <variable>.max_entries ])
        (expr_list:REG_DEAD (reg:SI 136 [ D.14787 ])
            (nil))))

(insn 43 42 45 7 arch/arm/kernel/stacktrace.c:83 (set (reg:SI 139 [ D.14780 ])
        (geu:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))
;; End of basic block 7 -> ( 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; rd  out 	(24)
1, 3, 5, 7, 9, 10, 12, 13, 15, 25, 30, 31, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 146, 147


;; Succ edge  8 [100.0%]  (fallthru)

;; Start of basic block ( 7 4 6) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u55(11){ }u56(13){ }u57(25){ }u58(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(29)
1, 3, 5, 7, 9, 10, 12, 13, 15, 25, 26, 27, 30, 31, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147
;; rd  gen 	(1)
0
;; rd  kill	(4)
0, 1, 2, 3

;; Pred edge  7 [100.0%]  (fallthru)
;; Pred edge  4 [100.0%] 
;; Pred edge  6 [100.0%] 
(code_label 45 43 46 8 3 "" [2 uses])

(note 46 45 51 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 51 46 57 8 arch/arm/kernel/stacktrace.c:84 (set (reg/i:SI 0 r0)
        (reg:SI 139 [ D.14780 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 139 [ D.14780 ])
        (nil)))

(insn 57 51 0 8 arch/arm/kernel/stacktrace.c:84 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 8 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(28)
0, 5, 7, 9, 10, 12, 13, 15, 25, 26, 27, 30, 31, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function walk_stackframe (walk_stackframe)[0:791]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 7 count 10 (  1.7)


walk_stackframe

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={5d,5u} r1={4d,2u} r2={3d,1u} r3={3d} r11={1d,5u} r12={3d} r13={1d,7u} r14={3d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={4d,2u} r25={1d,5u} r26={1d,4u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r133={1d,1u} r134={1d,1u} r135={1d,2u} r136={1d,1u} r137={1d,1u} 
;;    total ref usage 292{254d,38u,0e} in 14{12 regular + 2 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248
0[0,5] 1[5,4] 2[9,3] 3[12,3] 11[15,1] 12[16,3] 13[19,1] 14[20,3] 15[23,2] 16[25,2] 17[27,2] 18[29,2] 19[31,2] 20[33,2] 21[35,2] 22[37,2] 23[39,2] 24[41,4] 25[45,1] 26[46,1] 27[47,2] 28[49,2] 29[51,2] 30[53,2] 31[55,2] 32[57,2] 33[59,2] 34[61,2] 35[63,2] 36[65,2] 37[67,2] 38[69,2] 39[71,2] 40[73,2] 41[75,2] 42[77,2] 43[79,2] 44[81,2] 45[83,2] 46[85,2] 47[87,2] 48[89,2] 49[91,2] 50[93,2] 51[95,2] 52[97,2] 53[99,2] 54[101,2] 55[103,2] 56[105,2] 57[107,2] 58[109,2] 59[111,2] 60[113,2] 61[115,2] 62[117,2] 63[119,2] 64[121,2] 65[123,2] 66[125,2] 67[127,2] 68[129,2] 69[131,2] 70[133,2] 71[135,2] 72[137,2] 73[139,2] 74[141,2] 75[143,2] 76[145,2] 77[147,2] 78[149,2] 79[151,2] 80[153,2] 81[155,2] 82[157,2] 83[159,2] 84[161,2] 85[163,2] 86[165,2] 87[167,2] 88[169,2] 89[171,2] 90[173,2] 91[175,2] 92[177,2] 93[179,2] 94[181,2] 95[183,2] 96[185,2] 97[187,2] 98[189,2] 99[191,2] 100[193,2] 101[195,2] 102[197,2] 103[199,2] 104[201,2] 105[203,2] 106[205,2] 107[207,2] 108[209,2] 109[211,2] 110[213,2] 111[215,2] 112[217,2] 113[219,2] 114[221,2] 115[223,2] 116[225,2] 117[227,2] 118[229,2] 119[231,2] 120[233,2] 121[235,2] 122[237,2] 123[239,2] 124[241,2] 125[243,2] 126[245,2] 127[247,2] 133[249,1] 134[250,1] 135[251,1] 136[252,1] 137[253,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d4(0){ }d8(1){ }d11(2){ }d14(3){ }d15(11){ }d18(12){ }d19(13){ }d22(14){ }d45(25){ }d46(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
4, 8, 11, 14, 15, 18, 19, 22, 45, 46
;; rd  kill	(25)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 45, 46
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(10)
4, 8, 11, 14, 15, 18, 19, 22, 45, 46

( 0 )->[2]->( 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d15(bb 0 insn -1) }u1(13){ d19(bb 0 insn -1) }u2(25){ d45(bb 0 insn -1) }u3(26){ d46(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 135 136 137
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 135 136 137
;; live  kill	
;; rd  in  	(10)
4, 8, 11, 14, 15, 18, 19, 22, 45, 46
;; rd  gen 	(3)
251, 252, 253
;; rd  kill	(3)
251, 252, 253
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137
;; rd  out 	(13)
4, 8, 11, 14, 15, 18, 19, 22, 45, 46, 251, 252, 253
;;  UD chains for artificial uses
;;   reg 11 { d15(bb 0 insn -1) }
;;   reg 13 { d19(bb 0 insn -1) }
;;   reg 25 { d45(bb 0 insn -1) }
;;   reg 26 { d46(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d4(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 3
;;      reg 1 { d8(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 4
;;      reg 2 { d11(bb 0 insn -1) }

( 2 4 )->[3]->( 5 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u7(11){ d15(bb 0 insn -1) }u8(13){ d19(bb 0 insn -1) }u9(25){ d45(bb 0 insn -1) }u10(26){ d46(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 134
;; live  kill	 14 [lr]
;; rd  in  	(17)
0, 4, 8, 11, 14, 15, 18, 19, 22, 41, 45, 46, 249, 250, 251, 252, 253
;; rd  gen 	(3)
2, 43, 250
;; rd  kill	(13)
0, 1, 2, 3, 4, 20, 21, 22, 41, 42, 43, 44, 250
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 136 137
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137
;; rd  out 	(15)
2, 8, 11, 14, 15, 18, 19, 43, 45, 46, 249, 250, 251, 252, 253
;;  UD chains for artificial uses
;;   reg 11 { d15(bb 0 insn -1) }
;;   reg 13 { d19(bb 0 insn -1) }
;;   reg 25 { d45(bb 0 insn -1) }
;;   reg 26 { d46(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 9
;;      reg 135 { d251(bb 2 insn 2) }
;;   UD chains for insn luid 1 uid 10
;;      reg 137 { d253(bb 2 insn 4) }
;;   UD chains for insn luid 2 uid 11
;;      reg 13 { d19(bb 0 insn -1) }
;;      reg 0 { d3(bb 3 insn 9) }
;;      reg 1 { d7(bb 3 insn 10) }
;;      reg 136 { d252(bb 2 insn 3) }
;;   UD chains for insn luid 3 uid 12
;;      reg 0 { d2(bb 3 insn 11) }
;;   UD chains for insn luid 4 uid 13
;;      reg 134 { d250(bb 3 insn 12) }
;;   UD chains for insn luid 5 uid 14
;;      reg 24 { d43(bb 3 insn 13) }

( 3 )->[4]->( 5 3 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u20(11){ d15(bb 0 insn -1) }u21(13){ d19(bb 0 insn -1) }u22(25){ d45(bb 0 insn -1) }u23(26){ d46(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137
;; live  gen 	 0 [r0] 24 [cc] 133
;; live  kill	 14 [lr]
;; rd  in  	(15)
2, 8, 11, 14, 15, 18, 19, 43, 45, 46, 249, 250, 251, 252, 253
;; rd  gen 	(3)
0, 41, 249
;; rd  kill	(13)
0, 1, 2, 3, 4, 20, 21, 22, 41, 42, 43, 44, 249
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 136 137
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137
;; rd  out 	(15)
0, 8, 11, 14, 15, 18, 19, 41, 45, 46, 249, 250, 251, 252, 253
;;  UD chains for artificial uses
;;   reg 11 { d15(bb 0 insn -1) }
;;   reg 13 { d19(bb 0 insn -1) }
;;   reg 25 { d45(bb 0 insn -1) }
;;   reg 26 { d46(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 16
;;      reg 135 { d251(bb 2 insn 2) }
;;   UD chains for insn luid 1 uid 17
;;      reg 13 { d19(bb 0 insn -1) }
;;      reg 0 { d1(bb 4 insn 16) }
;;   UD chains for insn luid 2 uid 18
;;      reg 0 { d0(bb 4 insn 17) }
;;   UD chains for insn luid 3 uid 20
;;      reg 133 { d249(bb 4 insn 18) }
;;   UD chains for insn luid 4 uid 21
;;      reg 24 { d41(bb 4 insn 20) }

( 4 3 )->[5]->( 1 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u30(11){ d15(bb 0 insn -1) }u31(13){ d19(bb 0 insn -1) }u32(25){ d45(bb 0 insn -1) }u33(26){ d46(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(17)
0, 2, 8, 11, 14, 15, 18, 19, 41, 43, 45, 46, 249, 250, 251, 252, 253
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(17)
0, 2, 8, 11, 14, 15, 18, 19, 41, 43, 45, 46, 249, 250, 251, 252, 253
;;  UD chains for artificial uses
;;   reg 11 { d15(bb 0 insn -1) }
;;   reg 13 { d19(bb 0 insn -1) }
;;   reg 25 { d45(bb 0 insn -1) }
;;   reg 26 { d46(bb 0 insn -1) }

( 5 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u34(11){ d15(bb 0 insn -1) }u35(13){ d19(bb 0 insn -1) }u36(14){ }u37(25){ d45(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(17)
0, 2, 8, 11, 14, 15, 18, 19, 41, 43, 45, 46, 249, 250, 251, 252, 253
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(17)
0, 2, 8, 11, 14, 15, 18, 19, 41, 43, 45, 46, 249, 250, 251, 252, 253
;;  UD chains for artificial uses
;;   reg 11 { d15(bb 0 insn -1) }
;;   reg 13 { d19(bb 0 insn -1) }
;;   reg 14 { }
;;   reg 25 { d45(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 14 to worklist
  Adding insn 11 to worklist
  Adding insn 21 to worklist
  Adding insn 17 to worklist
Finished finding needed instructions:
Processing use of (reg 13 sp) in insn 17:
Processing use of (reg 0 r0) in insn 17:
  Adding insn 16 to worklist
Processing use of (reg 135 [ frame ]) in insn 16:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 24 cc) in insn 21:
  Adding insn 20 to worklist
Processing use of (reg 133 [ ret ]) in insn 20:
  Adding insn 18 to worklist
Processing use of (reg 0 r0) in insn 18:
Processing use of (reg 13 sp) in insn 11:
Processing use of (reg 0 r0) in insn 11:
  Adding insn 9 to worklist
Processing use of (reg 1 r1) in insn 11:
  Adding insn 10 to worklist
Processing use of (reg 136 [ fn ]) in insn 11:
  Adding insn 3 to worklist
Processing use of (reg 1 r1) in insn 3:
Processing use of (reg 137 [ data ]) in insn 10:
  Adding insn 4 to worklist
Processing use of (reg 2 r2) in insn 4:
Processing use of (reg 135 [ frame ]) in insn 9:
Processing use of (reg 24 cc) in insn 14:
  Adding insn 13 to worklist
Processing use of (reg 134 [ D.14756 ]) in insn 13:
  Adding insn 12 to worklist
Processing use of (reg 0 r0) in insn 12:


walk_stackframe

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={5d,5u} r1={4d,2u} r2={3d,1u} r3={3d} r11={1d,5u} r12={3d} r13={1d,7u} r14={3d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={4d,2u} r25={1d,5u} r26={1d,4u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r133={1d,1u} r134={1d,1u} r135={1d,2u} r136={1d,1u} r137={1d,1u} 
;;    total ref usage 292{254d,38u,0e} in 14{12 regular + 2 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248
0[0,5] 1[5,4] 2[9,3] 3[12,3] 11[15,1] 12[16,3] 13[19,1] 14[20,3] 15[23,2] 16[25,2] 17[27,2] 18[29,2] 19[31,2] 20[33,2] 21[35,2] 22[37,2] 23[39,2] 24[41,4] 25[45,1] 26[46,1] 27[47,2] 28[49,2] 29[51,2] 30[53,2] 31[55,2] 32[57,2] 33[59,2] 34[61,2] 35[63,2] 36[65,2] 37[67,2] 38[69,2] 39[71,2] 40[73,2] 41[75,2] 42[77,2] 43[79,2] 44[81,2] 45[83,2] 46[85,2] 47[87,2] 48[89,2] 49[91,2] 50[93,2] 51[95,2] 52[97,2] 53[99,2] 54[101,2] 55[103,2] 56[105,2] 57[107,2] 58[109,2] 59[111,2] 60[113,2] 61[115,2] 62[117,2] 63[119,2] 64[121,2] 65[123,2] 66[125,2] 67[127,2] 68[129,2] 69[131,2] 70[133,2] 71[135,2] 72[137,2] 73[139,2] 74[141,2] 75[143,2] 76[145,2] 77[147,2] 78[149,2] 79[151,2] 80[153,2] 81[155,2] 82[157,2] 83[159,2] 84[161,2] 85[163,2] 86[165,2] 87[167,2] 88[169,2] 89[171,2] 90[173,2] 91[175,2] 92[177,2] 93[179,2] 94[181,2] 95[183,2] 96[185,2] 97[187,2] 98[189,2] 99[191,2] 100[193,2] 101[195,2] 102[197,2] 103[199,2] 104[201,2] 105[203,2] 106[205,2] 107[207,2] 108[209,2] 109[211,2] 110[213,2] 111[215,2] 112[217,2] 113[219,2] 114[221,2] 115[223,2] 116[225,2] 117[227,2] 118[229,2] 119[231,2] 120[233,2] 121[235,2] 122[237,2] 123[239,2] 124[241,2] 125[243,2] 126[245,2] 127[247,2] 133[249,1] 134[250,1] 135[251,1] 136[252,1] 137[253,1] 
(note 1 0 6 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 135 136 137
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 135 136 137
;; live  kill	
;; rd  in  	(10)
4, 8, 11, 14, 15, 18, 19, 22, 45, 46
;; rd  gen 	(3)
251, 252, 253
;; rd  kill	(3)
251, 252, 253

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 6 3 2 arch/arm/kernel/stacktrace.c:48 (set (reg/v/f:SI 135 [ frame ])
        (reg:SI 0 r0 [ frame ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ frame ])
        (nil)))

(insn 3 2 4 2 arch/arm/kernel/stacktrace.c:48 (set (reg/v/f:SI 136 [ fn ])
        (reg:SI 1 r1 [ fn ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ fn ])
        (nil)))

(insn 4 3 5 2 arch/arm/kernel/stacktrace.c:48 (set (reg/v/f:SI 137 [ data ])
        (reg:SI 2 r2 [ data ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ data ])
        (nil)))

(note 5 4 19 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 3)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137
;; rd  out 	(13)
4, 8, 11, 14, 15, 18, 19, 22, 45, 46, 251, 252, 253


;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2 4) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u7(11){ }u8(13){ }u9(25){ }u10(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 134
;; live  kill	 14 [lr]
;; rd  in  	(17)
0, 4, 8, 11, 14, 15, 18, 19, 22, 41, 45, 46, 249, 250, 251, 252, 253
;; rd  gen 	(3)
2, 43, 250
;; rd  kill	(13)
0, 1, 2, 3, 4, 20, 21, 22, 41, 42, 43, 44, 250

;; Pred edge  2 [100.0%]  (fallthru)
;; Pred edge  4 [86.0%]  (dfs_back)
(code_label 19 5 8 3 10 "" [1 uses])

(note 8 19 9 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 9 8 10 3 arch/arm/kernel/stacktrace.c:52 (set (reg:SI 0 r0)
        (reg/v/f:SI 135 [ frame ])) 167 {*arm_movsi_insn} (nil))

(insn 10 9 11 3 arch/arm/kernel/stacktrace.c:52 (set (reg:SI 1 r1)
        (reg/v/f:SI 137 [ data ])) 167 {*arm_movsi_insn} (nil))

(call_insn 11 10 12 3 arch/arm/kernel/stacktrace.c:52 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (reg/v/f:SI 136 [ fn ]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 249 {*call_value_reg_armv5} (expr_list:REG_DEAD (reg:SI 1 r1)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 12 11 13 3 arch/arm/kernel/stacktrace.c:52 (set (reg:SI 134 [ D.14756 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 13 12 14 3 arch/arm/kernel/stacktrace.c:52 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 134 [ D.14756 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 134 [ D.14756 ])
        (nil)))

(jump_insn 14 13 15 3 arch/arm/kernel/stacktrace.c:52 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 27)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 450 [0x1c2])
            (nil))))
;; End of basic block 3 -> ( 5 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 136 137
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137
;; rd  out 	(15)
2, 8, 11, 14, 15, 18, 19, 43, 45, 46, 249, 250, 251, 252, 253


;; Succ edge  5 [4.5%]  (loop_exit)
;; Succ edge  4 [95.5%]  (fallthru)

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u20(11){ }u21(13){ }u22(25){ }u23(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137
;; live  gen 	 0 [r0] 24 [cc] 133
;; live  kill	 14 [lr]
;; rd  in  	(15)
2, 8, 11, 14, 15, 18, 19, 43, 45, 46, 249, 250, 251, 252, 253
;; rd  gen 	(3)
0, 41, 249
;; rd  kill	(13)
0, 1, 2, 3, 4, 20, 21, 22, 41, 42, 43, 44, 249

;; Pred edge  3 [95.5%]  (fallthru)
(note 15 14 16 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 16 15 17 4 arch/arm/kernel/stacktrace.c:54 (set (reg:SI 0 r0)
        (reg/v/f:SI 135 [ frame ])) 167 {*arm_movsi_insn} (nil))

(call_insn 17 16 18 4 arch/arm/kernel/stacktrace.c:54 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("unwind_frame") [flags 0x41] <function_decl 0x10ffbe00 unwind_frame>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 18 17 20 4 arch/arm/kernel/stacktrace.c:54 (set (reg/v:SI 133 [ ret ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 20 18 21 4 arch/arm/kernel/stacktrace.c:55 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 133 [ ret ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 133 [ ret ])
        (nil)))

(jump_insn 21 20 27 4 arch/arm/kernel/stacktrace.c:55 (set (pc)
        (if_then_else (ge (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 19)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 8600 [0x2198])
            (nil))))
;; End of basic block 4 -> ( 5 3)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 136 137
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137
;; rd  out 	(15)
0, 8, 11, 14, 15, 18, 19, 41, 45, 46, 249, 250, 251, 252, 253


;; Succ edge  5 [14.0%]  (fallthru,loop_exit)
;; Succ edge  3 [86.0%]  (dfs_back)

;; Start of basic block ( 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u30(11){ }u31(13){ }u32(25){ }u33(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(17)
0, 2, 8, 11, 14, 15, 18, 19, 41, 43, 45, 46, 249, 250, 251, 252, 253
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  4 [14.0%]  (fallthru,loop_exit)
;; Pred edge  3 [4.5%]  (loop_exit)
(code_label 27 21 30 5 11 "" [1 uses])

(note 30 27 0 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 5 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(17)
0, 2, 8, 11, 14, 15, 18, 19, 41, 43, 45, 46, 249, 250, 251, 252, 253


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function save_stack_trace_tsk (save_stack_trace_tsk)[0:793]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 10 count 13 (  1.6)
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 10 count 14 (  1.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 10 count 14 (  1.8)


save_stack_trace_tsk

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 11[fp] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={3d,2u} r1={3d,2u} r2={3d,1u} r3={2d} r11={1d,8u} r12={2d} r13={1d,10u,1d} r14={2d,2u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={4d,3u} r25={1d,16u,2d} r26={1d,6u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,3u} r138={1d,3u} r139={1d,1u} r140={1d,10u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} 
;;    total ref usage 241{154d,84u,3e} in 43{42 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132
0[0,3] 1[3,3] 2[6,3] 3[9,2] 11[11,1] 12[12,2] 13[14,1] 14[15,2] 15[17,1] 16[18,1] 17[19,1] 18[20,1] 19[21,1] 20[22,1] 21[23,1] 22[24,1] 23[25,1] 24[26,4] 25[30,1] 26[31,1] 27[32,1] 28[33,1] 29[34,1] 30[35,1] 31[36,1] 32[37,1] 33[38,1] 34[39,1] 35[40,1] 36[41,1] 37[42,1] 38[43,1] 39[44,1] 40[45,1] 41[46,1] 42[47,1] 43[48,1] 44[49,1] 45[50,1] 46[51,1] 47[52,1] 48[53,1] 49[54,1] 50[55,1] 51[56,1] 52[57,1] 53[58,1] 54[59,1] 55[60,1] 56[61,1] 57[62,1] 58[63,1] 59[64,1] 60[65,1] 61[66,1] 62[67,1] 63[68,1] 64[69,1] 65[70,1] 66[71,1] 67[72,1] 68[73,1] 69[74,1] 70[75,1] 71[76,1] 72[77,1] 73[78,1] 74[79,1] 75[80,1] 76[81,1] 77[82,1] 78[83,1] 79[84,1] 80[85,1] 81[86,1] 82[87,1] 83[88,1] 84[89,1] 85[90,1] 86[91,1] 87[92,1] 88[93,1] 89[94,1] 90[95,1] 91[96,1] 92[97,1] 93[98,1] 94[99,1] 95[100,1] 96[101,1] 97[102,1] 98[103,1] 99[104,1] 100[105,1] 101[106,1] 102[107,1] 103[108,1] 104[109,1] 105[110,1] 106[111,1] 107[112,1] 108[113,1] 109[114,1] 110[115,1] 111[116,1] 112[117,1] 113[118,1] 114[119,1] 115[120,1] 116[121,1] 117[122,1] 118[123,1] 119[124,1] 120[125,1] 121[126,1] 122[127,1] 123[128,1] 124[129,1] 125[130,1] 126[131,1] 127[132,1] 133[133,1] 138[134,1] 139[135,1] 140[136,1] 141[137,1] 142[138,1] 143[139,1] 144[140,1] 145[141,1] 146[142,1] 147[143,1] 148[144,1] 149[145,1] 150[146,1] 151[147,1] 152[148,1] 154[149,1] 155[150,1] 156[151,1] 157[152,1] 158[153,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d2(0){ }d5(1){ }d8(2){ }d10(3){ }d11(11){ }d13(12){ }d14(13){ }d16(14){ }d30(25){ }d31(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
2, 5, 8, 10, 11, 13, 14, 16, 30, 31
;; rd  kill	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 30, 31
;; lr  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
2, 5, 8, 10, 11, 13, 14, 16, 30, 31

( 0 )->[2]->( 3 5 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d11(bb 0 insn -1) }u1(13){ d14(bb 0 insn -1) }u2(25){ d30(bb 0 insn -1) }u3(26){ d31(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 139 140 141 142 143 144 150
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 139 140 141 142 143 144 150
;; live  kill	
;; rd  in  	(10)
2, 5, 8, 10, 11, 13, 14, 16, 30, 31
;; rd  gen 	(8)
29, 135, 136, 137, 138, 139, 140, 146
;; rd  kill	(11)
26, 27, 28, 29, 135, 136, 137, 138, 139, 140, 146
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 150
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 150
;; rd  out 	(18)
2, 5, 8, 10, 11, 13, 14, 16, 29, 30, 31, 135, 136, 137, 138, 139, 140, 146
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d30(bb 0 insn -1) }
;;   reg 26 { d31(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 67
;;      reg 14 { d16(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 2
;;      reg 0 { d2(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 3
;;      reg 1 { d5(bb 0 insn -1) }
;;   UD chains for insn luid 3 uid 7
;;      reg 25 { d30(bb 0 insn -1) }
;;      reg 140 { d136(bb 2 insn 3) }
;;   UD chains for insn luid 4 uid 8
;;      reg 140 { d136(bb 2 insn 3) }
;;   UD chains for insn luid 5 uid 9
;;      reg 25 { d30(bb 0 insn -1) }
;;      reg 141 { d137(bb 2 insn 8) }
;;   UD chains for insn luid 6 uid 11
;;      reg 13 { d14(bb 0 insn -1) }
;;   UD chains for insn luid 7 uid 12
;;      reg 143 { d139(bb 2 insn 11) }
;;   eq_note reg 13 { }
;;   UD chains for insn luid 8 uid 13
;;      reg 142 { d138(bb 2 insn 12) }
;;   UD chains for insn luid 9 uid 14
;;      reg 139 { d135(bb 2 insn 2) }
;;      reg 144 { d140(bb 2 insn 13) }
;;   UD chains for insn luid 10 uid 15
;;      reg 24 { d29(bb 2 insn 14) }

( 2 )->[3]->( 4 7 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u19(11){ d11(bb 0 insn -1) }u20(13){ d14(bb 0 insn -1) }u21(25){ d30(bb 0 insn -1) }u22(26){ d31(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 24 [cc] 138 145
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
;; live  gen 	 24 [cc] 138 145
;; live  kill	
;; rd  in  	(18)
2, 5, 8, 10, 11, 13, 14, 16, 29, 30, 31, 135, 136, 137, 138, 139, 140, 146
;; rd  gen 	(3)
28, 134, 141
;; rd  kill	(6)
26, 27, 28, 29, 134, 141
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 140
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 140
;; rd  out 	(20)
2, 5, 8, 10, 11, 13, 14, 16, 28, 30, 31, 134, 135, 136, 137, 138, 139, 140, 141, 146
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d30(bb 0 insn -1) }
;;   reg 26 { d31(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 17
;;      reg 140 { d136(bb 2 insn 3) }
;;   UD chains for insn luid 1 uid 18
;;      reg 140 { d136(bb 2 insn 3) }
;;   UD chains for insn luid 2 uid 19
;;      reg 138 { d134(bb 3 insn 17) }
;;      reg 145 { d141(bb 3 insn 18) }
;;   UD chains for insn luid 3 uid 20
;;      reg 24 { d28(bb 3 insn 19) }

( 3 )->[4]->( 7 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u28(11){ d11(bb 0 insn -1) }u29(13){ d14(bb 0 insn -1) }u30(25){ d30(bb 0 insn -1) }u31(26){ d31(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 140
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 140
;; lr  def 	 146 147 148
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 140
;; live  gen 	 146 147 148
;; live  kill	
;; rd  in  	(20)
2, 5, 8, 10, 11, 13, 14, 16, 28, 30, 31, 134, 135, 136, 137, 138, 139, 140, 141, 146
;; rd  gen 	(3)
142, 143, 144
;; rd  kill	(3)
142, 143, 144
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(23)
2, 5, 8, 10, 11, 13, 14, 16, 28, 30, 31, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d30(bb 0 insn -1) }
;;   reg 26 { d31(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 22
;;      reg 140 { d136(bb 2 insn 3) }
;;   UD chains for insn luid 2 uid 24
;;      reg 138 { d134(bb 3 insn 17) }
;;      reg 146 { d142(bb 4 insn 22) }
;;      reg 147 { d143(bb 4 insn 23) }
;;   UD chains for insn luid 3 uid 25
;;      reg 138 { d134(bb 3 insn 17) }
;;   UD chains for insn luid 4 uid 26
;;      reg 140 { d136(bb 2 insn 3) }
;;      reg 148 { d144(bb 4 insn 25) }

( 2 )->[5]->( 6 7 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u39(11){ d11(bb 0 insn -1) }u40(13){ d14(bb 0 insn -1) }u41(25){ d30(bb 0 insn -1) }u42(26){ d31(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 150
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 149 151 152 154 155
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 150
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 133 149 151 152 154 155
;; live  kill	 14 [lr]
;; rd  in  	(18)
2, 5, 8, 10, 11, 13, 14, 16, 29, 30, 31, 135, 136, 137, 138, 139, 140, 146
;; rd  gen 	(7)
26, 133, 145, 147, 148, 149, 150
;; rd  kill	(12)
15, 16, 26, 27, 28, 29, 133, 145, 147, 148, 149, 150
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 140
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 140
;; rd  out 	(23)
2, 5, 8, 10, 11, 13, 14, 26, 30, 31, 133, 135, 136, 137, 138, 139, 140, 145, 146, 147, 148, 149, 150
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d30(bb 0 insn -1) }
;;   reg 26 { d31(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 32
;;      reg 25 { d30(bb 0 insn -1) }
;;      reg 149 { d145(bb 5 insn 31) }
;;   UD chains for insn luid 2 uid 34
;;      reg 11 { d11(bb 0 insn -1) }
;;      reg 25 { d30(bb 0 insn -1) }
;;   UD chains for insn luid 3 uid 36
;;      reg 13 { d14(bb 0 insn -1) }
;;      reg 25 { d30(bb 0 insn -1) }
;;   UD chains for insn luid 4 uid 38
;;      reg 25 { d30(bb 0 insn -1) }
;;      reg 150 { d146(bb 2 insn 67) }
;;   UD chains for insn luid 6 uid 40
;;      reg 25 { d30(bb 0 insn -1) }
;;      reg 151 { d147(bb 5 insn 39) }
;;   UD chains for insn luid 7 uid 41
;;      reg 25 { d30(bb 0 insn -1) }
;;   UD chains for insn luid 8 uid 43
;;      reg 25 { d30(bb 0 insn -1) }
;;   UD chains for insn luid 9 uid 44
;;      reg 152 { d148(bb 5 insn 41) }
;;   eq_note reg 25 { }
;;   UD chains for insn luid 11 uid 46
;;      reg 154 { d149(bb 5 insn 43) }
;;   eq_note reg 25 { }
;;   UD chains for insn luid 12 uid 47
;;      reg 13 { d14(bb 0 insn -1) }
;;      reg 0 { d1(bb 5 insn 44) }
;;      reg 1 { d3(bb 5 insn 45) }
;;      reg 2 { d7(bb 5 insn 46) }
;;   UD chains for insn luid 13 uid 48
;;      reg 140 { d136(bb 2 insn 3) }
;;   UD chains for insn luid 14 uid 49
;;      reg 140 { d136(bb 2 insn 3) }
;;   UD chains for insn luid 15 uid 50
;;      reg 133 { d133(bb 5 insn 48) }
;;      reg 155 { d150(bb 5 insn 49) }
;;   UD chains for insn luid 16 uid 51
;;      reg 24 { d26(bb 5 insn 50) }

( 5 )->[6]->( 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u68(11){ d11(bb 0 insn -1) }u69(13){ d14(bb 0 insn -1) }u70(25){ d30(bb 0 insn -1) }u71(26){ d31(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 140
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 140
;; lr  def 	 156 157 158
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 140
;; live  gen 	 156 157 158
;; live  kill	
;; rd  in  	(23)
2, 5, 8, 10, 11, 13, 14, 26, 30, 31, 133, 135, 136, 137, 138, 139, 140, 145, 146, 147, 148, 149, 150
;; rd  gen 	(3)
151, 152, 153
;; rd  kill	(3)
151, 152, 153
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(26)
2, 5, 8, 10, 11, 13, 14, 26, 30, 31, 133, 135, 136, 137, 138, 139, 140, 145, 146, 147, 148, 149, 150, 151, 152, 153
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d30(bb 0 insn -1) }
;;   reg 26 { d31(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 53
;;      reg 140 { d136(bb 2 insn 3) }
;;   UD chains for insn luid 2 uid 55
;;      reg 133 { d133(bb 5 insn 48) }
;;      reg 156 { d151(bb 6 insn 53) }
;;      reg 157 { d152(bb 6 insn 54) }
;;   UD chains for insn luid 3 uid 56
;;      reg 133 { d133(bb 5 insn 48) }
;;   UD chains for insn luid 4 uid 57
;;      reg 140 { d136(bb 2 insn 3) }
;;      reg 158 { d153(bb 6 insn 56) }

( 6 3 5 4 )->[7]->( 1 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u79(11){ d11(bb 0 insn -1) }u80(13){ d14(bb 0 insn -1) }u81(25){ d30(bb 0 insn -1) }u82(26){ d31(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(33)
2, 5, 8, 10, 11, 13, 14, 16, 26, 28, 30, 31, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(33)
2, 5, 8, 10, 11, 13, 14, 16, 26, 28, 30, 31, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d30(bb 0 insn -1) }
;;   reg 26 { d31(bb 0 insn -1) }

( 7 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u83(11){ d11(bb 0 insn -1) }u84(13){ d14(bb 0 insn -1) }u85(14){ d16(bb 0 insn -1) }u86(25){ d30(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(33)
2, 5, 8, 10, 11, 13, 14, 16, 26, 28, 30, 31, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(33)
2, 5, 8, 10, 11, 13, 14, 16, 26, 28, 30, 31, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 14 { d16(bb 0 insn -1) }
;;   reg 25 { d30(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 15 to worklist
  Adding insn 9 to worklist
  Adding insn 7 to worklist
  Adding insn 20 to worklist
  Adding insn 68 to worklist
  Adding insn 26 to worklist
  Adding insn 24 to worklist
  Adding insn 51 to worklist
  Adding insn 47 to worklist
  Adding insn 40 to worklist
  Adding insn 38 to worklist
  Adding insn 36 to worklist
  Adding insn 34 to worklist
  Adding insn 32 to worklist
  Adding insn 57 to worklist
  Adding insn 55 to worklist
Finished finding needed instructions:
Processing use of (reg 133 [ temp.280 ]) in insn 55:
  Adding insn 48 to worklist
Processing use of (reg 156 [ <variable>.entries ]) in insn 55:
  Adding insn 53 to worklist
Processing use of (reg 157) in insn 55:
  Adding insn 54 to worklist
Processing use of (reg 140 [ trace ]) in insn 53:
  Adding insn 3 to worklist
Processing use of (reg 1 r1) in insn 3:
Processing use of (reg 140 [ trace ]) in insn 48:
Processing use of (reg 140 [ trace ]) in insn 57:
Processing use of (reg 158) in insn 57:
  Adding insn 56 to worklist
Processing use of (reg 133 [ temp.280 ]) in insn 56:
Processing use of (reg 25 sfp) in insn 32:
Processing use of (reg 149) in insn 32:
  Adding insn 31 to worklist
Processing use of (reg 11 fp) in insn 34:
Processing use of (reg 25 sfp) in insn 34:
Processing use of (reg 13 sp) in insn 36:
Processing use of (reg 25 sfp) in insn 36:
Processing use of (reg 25 sfp) in insn 38:
Processing use of (reg 150) in insn 38:
  Adding insn 67 to worklist
Processing use of (reg 14 lr) in insn 67:
Processing use of (reg 25 sfp) in insn 40:
Processing use of (reg 151) in insn 40:
  Adding insn 39 to worklist
Processing use of (reg 13 sp) in insn 47:
Processing use of (reg 0 r0) in insn 47:
  Adding insn 44 to worklist
Processing use of (reg 1 r1) in insn 47:
  Adding insn 45 to worklist
Processing use of (reg 2 r2) in insn 47:
  Adding insn 46 to worklist
Processing use of (reg 154) in insn 46:
  Adding insn 43 to worklist
Processing use of (reg 25 sfp) in insn 43:
Processing use of (reg 152) in insn 44:
  Adding insn 41 to worklist
Processing use of (reg 25 sfp) in insn 41:
Processing use of (reg 24 cc) in insn 51:
  Adding insn 50 to worklist
Processing use of (reg 133 [ temp.280 ]) in insn 50:
Processing use of (reg 155 [ <variable>.max_entries ]) in insn 50:
  Adding insn 49 to worklist
Processing use of (reg 140 [ trace ]) in insn 49:
Processing use of (reg 138 [ D.14803 ]) in insn 24:
  Adding insn 17 to worklist
Processing use of (reg 146 [ <variable>.entries ]) in insn 24:
  Adding insn 22 to worklist
Processing use of (reg 147) in insn 24:
  Adding insn 23 to worklist
Processing use of (reg 140 [ trace ]) in insn 22:
Processing use of (reg 140 [ trace ]) in insn 17:
Processing use of (reg 140 [ trace ]) in insn 26:
Processing use of (reg 148) in insn 26:
  Adding insn 25 to worklist
Processing use of (reg 138 [ D.14803 ]) in insn 25:
Processing use of (reg 24 cc) in insn 20:
  Adding insn 19 to worklist
Processing use of (reg 138 [ D.14803 ]) in insn 19:
Processing use of (reg 145 [ <variable>.max_entries ]) in insn 19:
  Adding insn 18 to worklist
Processing use of (reg 140 [ trace ]) in insn 18:
Processing use of (reg 25 sfp) in insn 7:
Processing use of (reg 140 [ trace ]) in insn 7:
Processing use of (reg 25 sfp) in insn 9:
Processing use of (reg 141 [ <variable>.skip ]) in insn 9:
  Adding insn 8 to worklist
Processing use of (reg 140 [ trace ]) in insn 8:
Processing use of (reg 24 cc) in insn 15:
  Adding insn 14 to worklist
Processing use of (reg 139 [ tsk ]) in insn 14:
  Adding insn 2 to worklist
Processing use of (reg 144 [ <variable>.task ]) in insn 14:
  Adding insn 13 to worklist
Processing use of (reg 142) in insn 13:
  Adding insn 12 to worklist
Processing use of (reg 143) in insn 12:
  Adding insn 11 to worklist
Processing use of (reg 13 sp) in insn 11:
Processing use of (reg 0 r0) in insn 2:


save_stack_trace_tsk

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 11[fp] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={3d,2u} r1={3d,2u} r2={3d,1u} r3={2d} r11={1d,8u} r12={2d} r13={1d,10u,1d} r14={2d,2u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={4d,3u} r25={1d,16u,2d} r26={1d,6u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,3u} r138={1d,3u} r139={1d,1u} r140={1d,10u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} 
;;    total ref usage 241{154d,84u,3e} in 43{42 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132
0[0,3] 1[3,3] 2[6,3] 3[9,2] 11[11,1] 12[12,2] 13[14,1] 14[15,2] 15[17,1] 16[18,1] 17[19,1] 18[20,1] 19[21,1] 20[22,1] 21[23,1] 22[24,1] 23[25,1] 24[26,4] 25[30,1] 26[31,1] 27[32,1] 28[33,1] 29[34,1] 30[35,1] 31[36,1] 32[37,1] 33[38,1] 34[39,1] 35[40,1] 36[41,1] 37[42,1] 38[43,1] 39[44,1] 40[45,1] 41[46,1] 42[47,1] 43[48,1] 44[49,1] 45[50,1] 46[51,1] 47[52,1] 48[53,1] 49[54,1] 50[55,1] 51[56,1] 52[57,1] 53[58,1] 54[59,1] 55[60,1] 56[61,1] 57[62,1] 58[63,1] 59[64,1] 60[65,1] 61[66,1] 62[67,1] 63[68,1] 64[69,1] 65[70,1] 66[71,1] 67[72,1] 68[73,1] 69[74,1] 70[75,1] 71[76,1] 72[77,1] 73[78,1] 74[79,1] 75[80,1] 76[81,1] 77[82,1] 78[83,1] 79[84,1] 80[85,1] 81[86,1] 82[87,1] 83[88,1] 84[89,1] 85[90,1] 86[91,1] 87[92,1] 88[93,1] 89[94,1] 90[95,1] 91[96,1] 92[97,1] 93[98,1] 94[99,1] 95[100,1] 96[101,1] 97[102,1] 98[103,1] 99[104,1] 100[105,1] 101[106,1] 102[107,1] 103[108,1] 104[109,1] 105[110,1] 106[111,1] 107[112,1] 108[113,1] 109[114,1] 110[115,1] 111[116,1] 112[117,1] 113[118,1] 114[119,1] 115[120,1] 116[121,1] 117[122,1] 118[123,1] 119[124,1] 120[125,1] 121[126,1] 122[127,1] 123[128,1] 124[129,1] 125[130,1] 126[131,1] 127[132,1] 133[133,1] 138[134,1] 139[135,1] 140[136,1] 141[137,1] 142[138,1] 143[139,1] 144[140,1] 145[141,1] 146[142,1] 147[143,1] 148[144,1] 149[145,1] 150[146,1] 151[147,1] 152[148,1] 154[149,1] 155[150,1] 156[151,1] 157[152,1] 158[153,1] 
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 139 140 141 142 143 144 150
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 139 140 141 142 143 144 150
;; live  kill	
;; rd  in  	(10)
2, 5, 8, 10, 11, 13, 14, 16, 30, 31
;; rd  gen 	(8)
29, 135, 136, 137, 138, 139, 140, 146
;; rd  kill	(11)
26, 27, 28, 29, 135, 136, 137, 138, 139, 140, 146

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 67 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 67 5 2 2 (set (reg:SI 150)
        (reg:SI 14 lr)) 167 {*arm_movsi_insn} (nil))

(insn 2 67 3 2 arch/arm/kernel/stacktrace.c:87 (set (reg/v/f:SI 139 [ tsk ])
        (reg:SI 0 r0 [ tsk ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ tsk ])
        (nil)))

(insn 3 2 4 2 arch/arm/kernel/stacktrace.c:87 (set (reg/v/f:SI 140 [ trace ])
        (reg:SI 1 r1 [ trace ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ trace ])
        (nil)))

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 8 2 arch/arm/kernel/stacktrace.c:91 (set (mem/s/f/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -12 [0xfffffffffffffff4])) [0 data.trace+0 S4 A32])
        (reg/v/f:SI 140 [ trace ])) 167 {*arm_movsi_insn} (nil))

(insn 8 7 9 2 arch/arm/kernel/stacktrace.c:92 (set (reg:SI 141 [ <variable>.skip ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 140 [ trace ])
                (const_int 12 [0xc])) [0 <variable>.skip+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 9 8 11 2 arch/arm/kernel/stacktrace.c:92 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 data.skip+0 S4 A32])
        (reg:SI 141 [ <variable>.skip ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 141 [ <variable>.skip ])
        (nil)))

(insn 11 9 12 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 143)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 12 11 13 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 142)
        (and:SI (reg:SI 143)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 143)
        (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
                (const_int -8192 [0xffffffffffffe000]))
            (nil))))

(insn 13 12 14 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 144 [ <variable>.task ])
        (mem/s/f/j:SI (plus:SI (reg:SI 142)
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 142)
        (nil)))

(insn 14 13 15 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 139 [ tsk ])
            (reg/f:SI 144 [ <variable>.task ]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/f:SI 144 [ <variable>.task ])
        (expr_list:REG_DEAD (reg/v/f:SI 139 [ tsk ])
            (nil))))

(jump_insn 15 14 16 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 29)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 672 [0x2a0])
            (nil))))
;; End of basic block 2 -> ( 3 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 150
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 150
;; rd  out 	(18)
2, 5, 8, 10, 11, 13, 14, 16, 29, 30, 31, 135, 136, 137, 138, 139, 140, 146


;; Succ edge  3 [93.3%]  (fallthru)
;; Succ edge  5 [6.7%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u19(11){ }u20(13){ }u21(25){ }u22(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 24 [cc] 138 145
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
;; live  gen 	 24 [cc] 138 145
;; live  kill	
;; rd  in  	(18)
2, 5, 8, 10, 11, 13, 14, 16, 29, 30, 31, 135, 136, 137, 138, 139, 140, 146
;; rd  gen 	(3)
28, 134, 141
;; rd  kill	(6)
26, 27, 28, 29, 134, 141

;; Pred edge  2 [93.3%]  (fallthru)
(note 16 15 17 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 17 16 18 3 arch/arm/kernel/stacktrace.c:101 (set (reg:SI 138 [ D.14803 ])
        (mem/s/j:SI (reg/v/f:SI 140 [ trace ]) [0 <variable>.nr_entries+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 18 17 19 3 arch/arm/kernel/stacktrace.c:101 (set (reg:SI 145 [ <variable>.max_entries ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 140 [ trace ])
                (const_int 4 [0x4])) [0 <variable>.max_entries+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 19 18 20 3 arch/arm/kernel/stacktrace.c:101 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 138 [ D.14803 ])
            (reg:SI 145 [ <variable>.max_entries ]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 145 [ <variable>.max_entries ])
        (nil)))

(jump_insn 20 19 21 3 arch/arm/kernel/stacktrace.c:101 (set (pc)
        (if_then_else (geu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 63)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 3 -> ( 4 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 140
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 140
;; rd  out 	(20)
2, 5, 8, 10, 11, 13, 14, 16, 28, 30, 31, 134, 135, 136, 137, 138, 139, 140, 141, 146


;; Succ edge  4 [50.0%]  (fallthru)
;; Succ edge  7 [50.0%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u28(11){ }u29(13){ }u30(25){ }u31(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 140
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 140
;; lr  def 	 146 147 148
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 140
;; live  gen 	 146 147 148
;; live  kill	
;; rd  in  	(20)
2, 5, 8, 10, 11, 13, 14, 16, 28, 30, 31, 134, 135, 136, 137, 138, 139, 140, 141, 146
;; rd  gen 	(3)
142, 143, 144
;; rd  kill	(3)
142, 143, 144

;; Pred edge  3 [50.0%]  (fallthru)
(note 21 20 22 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 22 21 23 4 arch/arm/kernel/stacktrace.c:102 (set (reg/f:SI 146 [ <variable>.entries ])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 140 [ trace ])
                (const_int 8 [0x8])) [0 <variable>.entries+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 23 22 24 4 arch/arm/kernel/stacktrace.c:102 (set (reg:SI 147)
        (const_int -1 [0xffffffffffffffff])) 167 {*arm_movsi_insn} (nil))

(insn 24 23 25 4 arch/arm/kernel/stacktrace.c:102 (set (mem:SI (plus:SI (mult:SI (reg:SI 138 [ D.14803 ])
                    (const_int 4 [0x4]))
                (reg/f:SI 146 [ <variable>.entries ])) [0 S4 A32])
        (reg:SI 147)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 147)
        (expr_list:REG_DEAD (reg/f:SI 146 [ <variable>.entries ])
            (expr_list:REG_EQUAL (const_int -1 [0xffffffffffffffff])
                (nil)))))

(insn 25 24 26 4 arch/arm/kernel/stacktrace.c:102 (set (reg:SI 148)
        (plus:SI (reg:SI 138 [ D.14803 ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 138 [ D.14803 ])
        (nil)))

(insn 26 25 68 4 arch/arm/kernel/stacktrace.c:102 (set (mem/s/j:SI (reg/v/f:SI 140 [ trace ]) [0 <variable>.nr_entries+0 S4 A32])
        (reg:SI 148)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 148)
        (expr_list:REG_DEAD (reg/v/f:SI 140 [ trace ])
            (nil))))

(jump_insn 68 26 69 4 (set (pc)
        (label_ref 63)) -1 (nil))
;; End of basic block 4 -> ( 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(23)
2, 5, 8, 10, 11, 13, 14, 16, 28, 30, 31, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146


;; Succ edge  7 [100.0%] 

(barrier 69 68 29)

;; Start of basic block ( 2) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u39(11){ }u40(13){ }u41(25){ }u42(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 150
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 149 151 152 154 155
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 150
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 133 149 151 152 154 155
;; live  kill	 14 [lr]
;; rd  in  	(18)
2, 5, 8, 10, 11, 13, 14, 16, 29, 30, 31, 135, 136, 137, 138, 139, 140, 146
;; rd  gen 	(7)
26, 133, 145, 147, 148, 149, 150
;; rd  kill	(12)
15, 16, 26, 27, 28, 29, 133, 145, 147, 148, 149, 150

;; Pred edge  2 [6.7%] 
(code_label 29 69 30 5 14 "" [1 uses])

(note 30 29 31 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 31 30 32 5 arch/arm/kernel/stacktrace.c:114 (set (reg:SI 149)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 32 31 34 5 arch/arm/kernel/stacktrace.c:114 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0 data.no_sched_functions+0 S4 A32])
        (reg:SI 149)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 149)
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn 34 32 36 5 arch/arm/kernel/stacktrace.c:115 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -28 [0xffffffffffffffe4])) [0 frame.fp+0 S4 A32])
        (reg/f:SI 11 fp)) 167 {*arm_movsi_insn} (nil))

(insn 36 34 38 5 arch/arm/kernel/stacktrace.c:116 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -24 [0xffffffffffffffe8])) [0 frame.sp+0 S4 A32])
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn 38 36 39 5 arch/arm/kernel/stacktrace.c:117 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -20 [0xffffffffffffffec])) [0 frame.lr+0 S4 A32])
        (reg:SI 150)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 150)
        (nil)))

(insn 39 38 40 5 arch/arm/kernel/stacktrace.c:118 (set (reg/f:SI 151)
        (symbol_ref:SI ("save_stack_trace_tsk") [flags 0x3] <function_decl 0x10ffbd00 save_stack_trace_tsk>)) 167 {*arm_movsi_insn} (nil))

(insn 40 39 41 5 arch/arm/kernel/stacktrace.c:118 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -16 [0xfffffffffffffff0])) [0 frame.pc+0 S4 A32])
        (reg/f:SI 151)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 151)
        (expr_list:REG_EQUAL (symbol_ref:SI ("save_stack_trace_tsk") [flags 0x3] <function_decl 0x10ffbd00 save_stack_trace_tsk>)
            (nil))))

(insn 41 40 43 5 arch/arm/kernel/stacktrace.c:121 (set (reg/f:SI 152)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -28 [0xffffffffffffffe4]))) 4 {*arm_addsi3} (nil))

(insn 43 41 44 5 arch/arm/kernel/stacktrace.c:121 (set (reg/f:SI 154)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -12 [0xfffffffffffffff4]))) 4 {*arm_addsi3} (nil))

(insn 44 43 45 5 arch/arm/kernel/stacktrace.c:121 (set (reg:SI 0 r0)
        (reg/f:SI 152)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 152)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -28 [0xffffffffffffffe4]))
            (nil))))

(insn 45 44 46 5 arch/arm/kernel/stacktrace.c:121 (set (reg:SI 1 r1)
        (symbol_ref:SI ("save_trace") [flags 0x3] <function_decl 0x11007080 save_trace>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("save_trace") [flags 0x3] <function_decl 0x11007080 save_trace>)
        (nil)))

(insn 46 45 47 5 arch/arm/kernel/stacktrace.c:121 (set (reg:SI 2 r2)
        (reg/f:SI 154)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 154)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -12 [0xfffffffffffffff4]))
            (nil))))

(call_insn 47 46 48 5 arch/arm/kernel/stacktrace.c:121 (parallel [
            (call (mem:SI (symbol_ref:SI ("walk_stackframe") [flags 0x3] <function_decl 0x10ffbe80 walk_stackframe>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_DEAD (reg:SI 0 r0)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 48 47 49 5 arch/arm/kernel/stacktrace.c:122 (set (reg:SI 133 [ temp.280 ])
        (mem/s/j:SI (reg/v/f:SI 140 [ trace ]) [0 <variable>.nr_entries+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 49 48 50 5 arch/arm/kernel/stacktrace.c:122 (set (reg:SI 155 [ <variable>.max_entries ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 140 [ trace ])
                (const_int 4 [0x4])) [0 <variable>.max_entries+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 50 49 51 5 arch/arm/kernel/stacktrace.c:122 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 133 [ temp.280 ])
            (reg:SI 155 [ <variable>.max_entries ]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 155 [ <variable>.max_entries ])
        (nil)))

(jump_insn 51 50 52 5 arch/arm/kernel/stacktrace.c:122 (set (pc)
        (if_then_else (geu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 63)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 5 -> ( 6 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 140
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 140
;; rd  out 	(23)
2, 5, 8, 10, 11, 13, 14, 26, 30, 31, 133, 135, 136, 137, 138, 139, 140, 145, 146, 147, 148, 149, 150


;; Succ edge  6 [61.0%]  (fallthru)
;; Succ edge  7 [39.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u68(11){ }u69(13){ }u70(25){ }u71(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 140
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 140
;; lr  def 	 156 157 158
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 140
;; live  gen 	 156 157 158
;; live  kill	
;; rd  in  	(23)
2, 5, 8, 10, 11, 13, 14, 26, 30, 31, 133, 135, 136, 137, 138, 139, 140, 145, 146, 147, 148, 149, 150
;; rd  gen 	(3)
151, 152, 153
;; rd  kill	(3)
151, 152, 153

;; Pred edge  5 [61.0%]  (fallthru)
(note 52 51 53 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 53 52 54 6 arch/arm/kernel/stacktrace.c:123 (set (reg/f:SI 156 [ <variable>.entries ])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 140 [ trace ])
                (const_int 8 [0x8])) [0 <variable>.entries+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 54 53 55 6 arch/arm/kernel/stacktrace.c:123 (set (reg:SI 157)
        (const_int -1 [0xffffffffffffffff])) 167 {*arm_movsi_insn} (nil))

(insn 55 54 56 6 arch/arm/kernel/stacktrace.c:123 (set (mem:SI (plus:SI (mult:SI (reg:SI 133 [ temp.280 ])
                    (const_int 4 [0x4]))
                (reg/f:SI 156 [ <variable>.entries ])) [0 S4 A32])
        (reg:SI 157)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 157)
        (expr_list:REG_DEAD (reg/f:SI 156 [ <variable>.entries ])
            (expr_list:REG_EQUAL (const_int -1 [0xffffffffffffffff])
                (nil)))))

(insn 56 55 57 6 arch/arm/kernel/stacktrace.c:123 (set (reg:SI 158)
        (plus:SI (reg:SI 133 [ temp.280 ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 133 [ temp.280 ])
        (nil)))

(insn 57 56 63 6 arch/arm/kernel/stacktrace.c:123 (set (mem/s/j:SI (reg/v/f:SI 140 [ trace ]) [0 <variable>.nr_entries+0 S4 A32])
        (reg:SI 158)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 158)
        (expr_list:REG_DEAD (reg/v/f:SI 140 [ trace ])
            (nil))))
;; End of basic block 6 -> ( 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(26)
2, 5, 8, 10, 11, 13, 14, 26, 30, 31, 133, 135, 136, 137, 138, 139, 140, 145, 146, 147, 148, 149, 150, 151, 152, 153


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 6 3 5 4) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u79(11){ }u80(13){ }u81(25){ }u82(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(33)
2, 5, 8, 10, 11, 13, 14, 16, 26, 28, 30, 31, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  6 [100.0%]  (fallthru)
;; Pred edge  3 [50.0%] 
;; Pred edge  5 [39.0%] 
;; Pred edge  4 [100.0%] 
(code_label 63 57 66 7 16 "" [3 uses])

(note 66 63 0 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 7 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(33)
2, 5, 8, 10, 11, 13, 14, 16, 26, 28, 30, 31, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function save_stack_trace (save_stack_trace)[0:794]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


save_stack_trace

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp]
;;  ref usage 	r0={3d,2u} r1={3d,1u} r2={2d} r3={2d} r11={1d,2u} r12={2d} r13={1d,4u,1d} r14={1d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,2u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r134={1d,1u} r135={1d,1u} r136={1d,1u} 
;;    total ref usage 148{131d,16u,1e} in 6{5 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127
0[0,3] 1[3,3] 2[6,2] 3[8,2] 11[10,1] 12[11,2] 13[13,1] 14[14,1] 15[15,1] 16[16,1] 17[17,1] 18[18,1] 19[19,1] 20[20,1] 21[21,1] 22[22,1] 23[23,1] 24[24,1] 25[25,1] 26[26,1] 27[27,1] 28[28,1] 29[29,1] 30[30,1] 31[31,1] 32[32,1] 33[33,1] 34[34,1] 35[35,1] 36[36,1] 37[37,1] 38[38,1] 39[39,1] 40[40,1] 41[41,1] 42[42,1] 43[43,1] 44[44,1] 45[45,1] 46[46,1] 47[47,1] 48[48,1] 49[49,1] 50[50,1] 51[51,1] 52[52,1] 53[53,1] 54[54,1] 55[55,1] 56[56,1] 57[57,1] 58[58,1] 59[59,1] 60[60,1] 61[61,1] 62[62,1] 63[63,1] 64[64,1] 65[65,1] 66[66,1] 67[67,1] 68[68,1] 69[69,1] 70[70,1] 71[71,1] 72[72,1] 73[73,1] 74[74,1] 75[75,1] 76[76,1] 77[77,1] 78[78,1] 79[79,1] 80[80,1] 81[81,1] 82[82,1] 83[83,1] 84[84,1] 85[85,1] 86[86,1] 87[87,1] 88[88,1] 89[89,1] 90[90,1] 91[91,1] 92[92,1] 93[93,1] 94[94,1] 95[95,1] 96[96,1] 97[97,1] 98[98,1] 99[99,1] 100[100,1] 101[101,1] 102[102,1] 103[103,1] 104[104,1] 105[105,1] 106[106,1] 107[107,1] 108[108,1] 109[109,1] 110[110,1] 111[111,1] 112[112,1] 113[113,1] 114[114,1] 115[115,1] 116[116,1] 117[117,1] 118[118,1] 119[119,1] 120[120,1] 121[121,1] 122[122,1] 123[123,1] 124[124,1] 125[125,1] 126[126,1] 127[127,1] 134[128,1] 135[129,1] 136[130,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d2(0){ }d5(1){ }d7(2){ }d9(3){ }d10(11){ }d12(12){ }d13(13){ }d14(14){ }d25(25){ }d26(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
2, 5, 7, 9, 10, 12, 13, 14, 25, 26
;; rd  kill	(17)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 25, 26
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
2, 5, 7, 9, 10, 12, 13, 14, 25, 26

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d10(bb 0 insn -1) }u1(13){ d13(bb 0 insn -1) }u2(25){ d25(bb 0 insn -1) }u3(26){ d26(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 135 136
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 134 135 136
;; live  kill	
;; rd  in  	(10)
2, 5, 7, 9, 10, 12, 13, 14, 25, 26
;; rd  gen 	(3)
128, 129, 130
;; rd  kill	(3)
128, 129, 130
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 14, 25, 26, 128, 129, 130
;;  UD chains for artificial uses
;;   reg 11 { d10(bb 0 insn -1) }
;;   reg 13 { d13(bb 0 insn -1) }
;;   reg 25 { d25(bb 0 insn -1) }
;;   reg 26 { d26(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d2(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 7
;;      reg 13 { d13(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 8
;;      reg 136 { d130(bb 2 insn 7) }
;;   eq_note reg 13 { }
;;   UD chains for insn luid 3 uid 9
;;      reg 135 { d129(bb 2 insn 8) }
;;   UD chains for insn luid 4 uid 10
;;      reg 134 { d128(bb 2 insn 2) }
;;   UD chains for insn luid 5 uid 11
;;      reg 13 { d13(bb 0 insn -1) }
;;      reg 0 { d1(bb 2 insn 9) }
;;      reg 1 { d4(bb 2 insn 10) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u13(11){ d10(bb 0 insn -1) }u14(13){ d13(bb 0 insn -1) }u15(14){ d14(bb 0 insn -1) }u16(25){ d25(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 14, 25, 26, 128, 129, 130
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 14, 25, 26, 128, 129, 130
;;  UD chains for artificial uses
;;   reg 11 { d10(bb 0 insn -1) }
;;   reg 13 { d13(bb 0 insn -1) }
;;   reg 14 { d14(bb 0 insn -1) }
;;   reg 25 { d25(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 11 to worklist
Finished finding needed instructions:
Processing use of (reg 13 sp) in insn 11:
Processing use of (reg 0 r0) in insn 11:
  Adding insn 9 to worklist
Processing use of (reg 1 r1) in insn 11:
  Adding insn 10 to worklist
Processing use of (reg 134 [ trace ]) in insn 10:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 135) in insn 9:
  Adding insn 8 to worklist
Processing use of (reg 136) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 13 sp) in insn 7:


save_stack_trace

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp]
;;  ref usage 	r0={3d,2u} r1={3d,1u} r2={2d} r3={2d} r11={1d,2u} r12={2d} r13={1d,4u,1d} r14={1d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,2u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r134={1d,1u} r135={1d,1u} r136={1d,1u} 
;;    total ref usage 148{131d,16u,1e} in 6{5 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127
0[0,3] 1[3,3] 2[6,2] 3[8,2] 11[10,1] 12[11,2] 13[13,1] 14[14,1] 15[15,1] 16[16,1] 17[17,1] 18[18,1] 19[19,1] 20[20,1] 21[21,1] 22[22,1] 23[23,1] 24[24,1] 25[25,1] 26[26,1] 27[27,1] 28[28,1] 29[29,1] 30[30,1] 31[31,1] 32[32,1] 33[33,1] 34[34,1] 35[35,1] 36[36,1] 37[37,1] 38[38,1] 39[39,1] 40[40,1] 41[41,1] 42[42,1] 43[43,1] 44[44,1] 45[45,1] 46[46,1] 47[47,1] 48[48,1] 49[49,1] 50[50,1] 51[51,1] 52[52,1] 53[53,1] 54[54,1] 55[55,1] 56[56,1] 57[57,1] 58[58,1] 59[59,1] 60[60,1] 61[61,1] 62[62,1] 63[63,1] 64[64,1] 65[65,1] 66[66,1] 67[67,1] 68[68,1] 69[69,1] 70[70,1] 71[71,1] 72[72,1] 73[73,1] 74[74,1] 75[75,1] 76[76,1] 77[77,1] 78[78,1] 79[79,1] 80[80,1] 81[81,1] 82[82,1] 83[83,1] 84[84,1] 85[85,1] 86[86,1] 87[87,1] 88[88,1] 89[89,1] 90[90,1] 91[91,1] 92[92,1] 93[93,1] 94[94,1] 95[95,1] 96[96,1] 97[97,1] 98[98,1] 99[99,1] 100[100,1] 101[101,1] 102[102,1] 103[103,1] 104[104,1] 105[105,1] 106[106,1] 107[107,1] 108[108,1] 109[109,1] 110[110,1] 111[111,1] 112[112,1] 113[113,1] 114[114,1] 115[115,1] 116[116,1] 117[117,1] 118[118,1] 119[119,1] 120[120,1] 121[121,1] 122[122,1] 123[123,1] 124[124,1] 125[125,1] 126[126,1] 127[127,1] 134[128,1] 135[129,1] 136[130,1] 
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 135 136
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 134 135 136
;; live  kill	
;; rd  in  	(10)
2, 5, 7, 9, 10, 12, 13, 14, 25, 26
;; rd  gen 	(3)
128, 129, 130
;; rd  kill	(3)
128, 129, 130

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 arch/arm/kernel/stacktrace.c:127 (set (reg/v/f:SI 134 [ trace ])
        (reg:SI 0 r0 [ trace ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ trace ])
        (nil)))

(note 3 2 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 3 8 2 arch/arm/kernel/stacktrace.c:128 (set (reg:SI 136)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 8 7 9 2 arch/arm/kernel/stacktrace.c:128 (set (reg:SI 135)
        (and:SI (reg:SI 136)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 136)
        (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
                (const_int -8192 [0xffffffffffffe000]))
            (nil))))

(insn 9 8 10 2 arch/arm/kernel/stacktrace.c:128 (set (reg:SI 0 r0)
        (mem/s/f/j:SI (plus:SI (reg:SI 135)
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 135)
        (nil)))

(insn 10 9 11 2 arch/arm/kernel/stacktrace.c:128 (set (reg:SI 1 r1)
        (reg/v/f:SI 134 [ trace ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 134 [ trace ])
        (nil)))

(call_insn/j 11 10 12 2 arch/arm/kernel/stacktrace.c:128 (parallel [
            (call (mem:SI (symbol_ref:SI ("save_stack_trace_tsk") [flags 0x3] <function_decl 0x10ffbd00 save_stack_trace_tsk>) [0 S4 A32])
                (const_int 0 [0x0]))
            (return)
            (use (const_int 0 [0x0]))
        ]) 258 {*sibcall_insn} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 14, 25, 26, 128, 129, 130


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 12 11 0)

starting the processing of deferred insns
ending the processing of deferred insns
