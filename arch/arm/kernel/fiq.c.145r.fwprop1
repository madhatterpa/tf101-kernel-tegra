
;; Function claim_fiq (claim_fiq)[0:921]

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 6 }
;; 3 succs { 5 4 }
;; 4 succs { 7 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 10 count 14 (  1.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 10 count 14 (  1.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 10 count 14 (  1.8)

In insn 31, replacing
 (reg/f:SI 139)
 with (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
Changes to insn 31 not profitable


try_optimize_cfg iteration 1

deferring deletion of insn with uid = 36.
deferring deletion of insn with uid = 31.
Deleted 2 trivially dead insns

Number of successful forward propagations: 0



claim_fiq

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={4d,5u} r1={3d,1u} r2={2d} r3={2d} r11={1d,7u} r12={2d} r13={1d,8u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={4d,3u} r25={1d,7u} r26={1d,6u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={3d,3u} r134={1d,2u} r135={1d,3u} r136={1d} r137={1d,2u} r138={1d,1u} r139={1d,3u} r140={1d,1u} r141={1d} 
;;    total ref usage 197{144d,53u,0e} in 22{21 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132
0[0,4] 1[4,3] 2[7,2] 3[9,2] 11[11,1] 12[12,2] 13[14,1] 14[15,2] 15[17,1] 16[18,1] 17[19,1] 18[20,1] 19[21,1] 20[22,1] 21[23,1] 22[24,1] 23[25,1] 24[26,4] 25[30,1] 26[31,1] 27[32,1] 28[33,1] 29[34,1] 30[35,1] 31[36,1] 32[37,1] 33[38,1] 34[39,1] 35[40,1] 36[41,1] 37[42,1] 38[43,1] 39[44,1] 40[45,1] 41[46,1] 42[47,1] 43[48,1] 44[49,1] 45[50,1] 46[51,1] 47[52,1] 48[53,1] 49[54,1] 50[55,1] 51[56,1] 52[57,1] 53[58,1] 54[59,1] 55[60,1] 56[61,1] 57[62,1] 58[63,1] 59[64,1] 60[65,1] 61[66,1] 62[67,1] 63[68,1] 64[69,1] 65[70,1] 66[71,1] 67[72,1] 68[73,1] 69[74,1] 70[75,1] 71[76,1] 72[77,1] 73[78,1] 74[79,1] 75[80,1] 76[81,1] 77[82,1] 78[83,1] 79[84,1] 80[85,1] 81[86,1] 82[87,1] 83[88,1] 84[89,1] 85[90,1] 86[91,1] 87[92,1] 88[93,1] 89[94,1] 90[95,1] 91[96,1] 92[97,1] 93[98,1] 94[99,1] 95[100,1] 96[101,1] 97[102,1] 98[103,1] 99[104,1] 100[105,1] 101[106,1] 102[107,1] 103[108,1] 104[109,1] 105[110,1] 106[111,1] 107[112,1] 108[113,1] 109[114,1] 110[115,1] 111[116,1] 112[117,1] 113[118,1] 114[119,1] 115[120,1] 116[121,1] 117[122,1] 118[123,1] 119[124,1] 120[125,1] 121[126,1] 122[127,1] 123[128,1] 124[129,1] 125[130,1] 126[131,1] 127[132,1] 133[133,3] 134[136,1] 135[137,1] 136[138,1] 137[139,1] 138[140,1] 139[141,1] 140[142,1] 141[143,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 135 137 138
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 135 137 138
;; live  kill	
;; rd  in  	(10)
3, 6, 8, 10, 11, 13, 14, 16, 30, 31
;; rd  gen 	(4)
29, 137, 139, 140
;; rd  kill	(7)
26, 27, 28, 29, 137, 139, 140

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 arch/arm/kernel/fiq.c:93 (set (reg/v/f:SI 137 [ f ])
        (reg:SI 0 r0 [ f ])) 167 {*arm_movsi_insn} (nil))

(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 3 7 2 arch/arm/kernel/fiq.c:96 (set (reg/f:SI 138)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 7 6 8 2 arch/arm/kernel/fiq.c:96 (set (reg/f:SI 135 [ current_fiq.241 ])
        (mem/f/c/i:SI (reg/f:SI 138) [0 current_fiq+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 8 7 9 2 arch/arm/kernel/fiq.c:96 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 135 [ current_fiq.241 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 9 8 10 2 arch/arm/kernel/fiq.c:96 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 26)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 8090 [0x1f9a])
        (nil)))
;; End of basic block 2 -> ( 3 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 137
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 137
;; rd  out 	(14)
3, 6, 8, 10, 11, 13, 14, 16, 29, 30, 31, 137, 139, 140


;; Succ edge  3 [19.1%]  (fallthru)
;; Succ edge  6 [80.9%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(11){ }u9(13){ }u10(25){ }u11(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc] 134
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 137
;; live  gen 	 24 [cc] 134
;; live  kill	
;; rd  in  	(14)
3, 6, 8, 10, 11, 13, 14, 16, 29, 30, 31, 137, 139, 140
;; rd  gen 	(2)
28, 136
;; rd  kill	(5)
26, 27, 28, 29, 136

;; Pred edge  2 [19.1%]  (fallthru)
(note 10 9 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 11 10 12 3 arch/arm/kernel/fiq.c:99 (set (reg/f:SI 134 [ D.15569 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 135 [ current_fiq.241 ])
                (const_int 8 [0x8])) [0 <variable>.fiq_op+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 12 11 13 3 arch/arm/kernel/fiq.c:99 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 134 [ D.15569 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 13 12 14 3 arch/arm/kernel/fiq.c:99 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 18)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 6983 [0x1b47])
        (nil)))
;; End of basic block 3 -> ( 5 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135 137
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135 137
;; rd  out 	(15)
3, 6, 8, 10, 11, 13, 14, 16, 28, 30, 31, 136, 137, 139, 140


;; Succ edge  5 [69.8%] 
;; Succ edge  4 [30.2%]  (fallthru)

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u15(11){ }u16(13){ }u17(25){ }u18(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(15)
3, 6, 8, 10, 11, 13, 14, 16, 28, 30, 31, 136, 137, 139, 140
;; rd  gen 	(1)
135
;; rd  kill	(3)
133, 134, 135

;; Pred edge  3 [30.2%]  (fallthru)
(note 14 13 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 15 14 18 4 arch/arm/kernel/fiq.c:97 (set (reg/v:SI 133 [ ret ])
        (const_int -16 [0xfffffffffffffff0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 4 -> ( 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(16)
3, 6, 8, 10, 11, 13, 14, 16, 28, 30, 31, 135, 136, 137, 139, 140


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u19(11){ }u20(13){ }u21(25){ }u22(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 137
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 133
;; live  kill	 14 [lr]
;; rd  in  	(15)
3, 6, 8, 10, 11, 13, 14, 16, 28, 30, 31, 136, 137, 139, 140
;; rd  gen 	(3)
1, 26, 134
;; rd  kill	(13)
0, 1, 2, 3, 15, 16, 26, 27, 28, 29, 133, 134, 135

;; Pred edge  3 [69.8%] 
(code_label 18 15 19 5 3 "" [1 uses])

(note 19 18 20 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 20 19 21 5 arch/arm/kernel/fiq.c:100 (set (reg:SI 0 r0)
        (mem/s/f/j:SI (plus:SI (reg/f:SI 135 [ current_fiq.241 ])
                (const_int 12 [0xc])) [0 <variable>.dev_id+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 21 20 22 5 arch/arm/kernel/fiq.c:100 (set (reg:SI 1 r1)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(call_insn 22 21 23 5 arch/arm/kernel/fiq.c:100 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (reg/f:SI 134 [ D.15569 ]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 249 {*call_value_reg_armv5} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 23 22 24 5 arch/arm/kernel/fiq.c:100 (set (reg/v:SI 133 [ ret ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 24 23 25 5 arch/arm/kernel/fiq.c:103 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 133 [ ret ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 25 24 26 5 arch/arm/kernel/fiq.c:103 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 34)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 10000 [0x2710])
        (nil)))
;; End of basic block 5 -> ( 6 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137
;; rd  out 	(15)
1, 6, 8, 10, 11, 13, 14, 26, 30, 31, 134, 136, 137, 139, 140


;; Succ edge  6 (fallthru)
;; Succ edge  7 [100.0%] 

;; Start of basic block ( 5 2) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u31(11){ }u32(13){ }u33(25){ }u34(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 133 139 140 141
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; live  gen 	 133 139 140 141
;; live  kill	
;; rd  in  	(18)
1, 3, 6, 8, 10, 11, 13, 14, 16, 26, 29, 30, 31, 134, 136, 137, 139, 140
;; rd  gen 	(4)
133, 141, 142, 143
;; rd  kill	(6)
133, 134, 135, 141, 142, 143

;; Pred edge  5 (fallthru)
;; Pred edge  2 [80.9%] 
(code_label 26 25 27 6 2 "" [1 uses])

(note 27 26 28 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 28 27 29 6 arch/arm/kernel/fiq.c:104 (set (reg/f:SI 139)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 29 28 30 6 arch/arm/kernel/fiq.c:104 (set (reg/f:SI 140 [ current_fiq ])
        (mem/f/c/i:SI (reg/f:SI 139) [0 current_fiq+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 30 29 32 6 arch/arm/kernel/fiq.c:104 (set (mem/s/f/j:SI (reg/v/f:SI 137 [ f ]) [0 <variable>.next+0 S4 A32])
        (reg/f:SI 140 [ current_fiq ])) 167 {*arm_movsi_insn} (nil))

(insn 32 30 33 6 arch/arm/kernel/fiq.c:105 (set (mem/f/c/i:SI (reg/f:SI 139) [0 current_fiq+0 S4 A32])
        (reg/v/f:SI 137 [ f ])) 167 {*arm_movsi_insn} (nil))

(insn 33 32 34 6 arch/arm/kernel/fiq.c:105 (set (reg/v:SI 133 [ ret ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 6 -> ( 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(21)
1, 3, 6, 8, 10, 11, 13, 14, 16, 26, 29, 30, 31, 133, 136, 137, 139, 140, 141, 142, 143


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 4 6 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u41(11){ }u42(13){ }u43(25){ }u44(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 0 [r0] 136
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  gen 	 0 [r0] 136
;; live  kill	
;; rd  in  	(24)
1, 3, 6, 8, 10, 11, 13, 14, 16, 26, 28, 29, 30, 31, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143
;; rd  gen 	(2)
0, 138
;; rd  kill	(5)
0, 1, 2, 3, 138

;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  6 [100.0%]  (fallthru)
;; Pred edge  5 [100.0%] 
(code_label 34 33 35 7 4 "" [1 uses])

(note 35 34 40 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 40 35 46 7 arch/arm/kernel/fiq.c:109 (set (reg/i:SI 0 r0)
        (reg/v:SI 133 [ ret ])) 167 {*arm_movsi_insn} (nil))

(insn 46 40 0 7 arch/arm/kernel/fiq.c:109 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 7 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(24)
0, 6, 8, 10, 11, 13, 14, 16, 26, 28, 29, 30, 31, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
deleting insn with uid = 31.
deleting insn with uid = 36.
ending the processing of deferred insns

;; Function init_FIQ (init_FIQ)[0:925] (unlikely executed)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


try_optimize_cfg iteration 1


Number of successful forward propagations: 0



init_FIQ

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	
;;  ref usage 	r0={1d} r1={1d} r2={1d} r3={1d} r11={1d,2u} r12={1d} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} 
;;    total ref usage 24{13d,11u,0e} in 4{4 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 5, 7
0[0,1] 1[1,1] 2[2,1] 3[3,1] 11[4,1] 12[5,1] 13[6,1] 14[7,1] 25[8,1] 26[9,1] 133[10,1] 134[11,1] 135[12,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133 134 135
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133 134 135
;; live  kill	
;; rd  in  	(10)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9
;; rd  gen 	(3)
10, 11, 12
;; rd  kill	(3)
10, 11, 12

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)

(insn 5 2 6 2 arch/arm/kernel/fiq.c:145 (set (reg/f:SI 134)
        (const_int -61441 [0xffffffffffff0fff])) 167 {*arm_movsi_insn} (nil))

(insn 6 5 7 2 arch/arm/kernel/fiq.c:145 (set (reg:SI 133 [ no_fiq_insn.247 ])
        (mem:SI (plus:SI (reg/f:SI 134)
                (const_int -4067 [0xfffffffffffff01d])) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 7 6 8 2 arch/arm/kernel/fiq.c:145 (set (reg/f:SI 135)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 8 7 0 2 arch/arm/kernel/fiq.c:145 (set (mem/c/i:SI (reg/f:SI 135) [0 no_fiq_insn+0 S4 A32])
        (reg:SI 133 [ no_fiq_insn.247 ])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function disable_fiq (disable_fiq)[0:924]

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


try_optimize_cfg iteration 1

deferring deletion of insn with uid = 6.
deferring deletion of insn with uid = 2.
Deleted 2 trivially dead insns

Number of successful forward propagations: 0



disable_fiq

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 13[sp]
;;  ref usage 	r0={3d,3u} r1={2d} r2={2d} r3={2d} r11={1d,2u} r12={2d} r13={1d,3u} r14={1d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,2u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d} 
;;    total ref usage 140{128d,12u,0e} in 1{0 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126
0[0,3] 1[3,2] 2[5,2] 3[7,2] 11[9,1] 12[10,2] 13[12,1] 14[13,1] 15[14,1] 16[15,1] 17[16,1] 18[17,1] 19[18,1] 20[19,1] 21[20,1] 22[21,1] 23[22,1] 24[23,1] 25[24,1] 26[25,1] 27[26,1] 28[27,1] 29[28,1] 30[29,1] 31[30,1] 32[31,1] 33[32,1] 34[33,1] 35[34,1] 36[35,1] 37[36,1] 38[37,1] 39[38,1] 40[39,1] 41[40,1] 42[41,1] 43[42,1] 44[43,1] 45[44,1] 46[45,1] 47[46,1] 48[47,1] 49[48,1] 50[49,1] 51[50,1] 52[51,1] 53[52,1] 54[53,1] 55[54,1] 56[55,1] 57[56,1] 58[57,1] 59[58,1] 60[59,1] 61[60,1] 62[61,1] 63[62,1] 64[63,1] 65[64,1] 66[65,1] 67[66,1] 68[67,1] 69[68,1] 70[69,1] 71[70,1] 72[71,1] 73[72,1] 74[73,1] 75[74,1] 76[75,1] 77[76,1] 78[77,1] 79[78,1] 80[79,1] 81[80,1] 82[81,1] 83[82,1] 84[83,1] 85[84,1] 86[85,1] 87[86,1] 88[87,1] 89[88,1] 90[89,1] 91[90,1] 92[91,1] 93[92,1] 94[93,1] 95[94,1] 96[95,1] 97[96,1] 98[97,1] 99[98,1] 100[99,1] 101[100,1] 102[101,1] 103[102,1] 104[103,1] 105[104,1] 106[105,1] 107[106,1] 108[107,1] 109[108,1] 110[109,1] 111[110,1] 112[111,1] 113[112,1] 114[113,1] 115[114,1] 116[115,1] 117[116,1] 118[117,1] 119[118,1] 120[119,1] 121[120,1] 122[121,1] 123[122,1] 124[123,1] 125[124,1] 126[125,1] 127[126,1] 133[127,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 133
;; live  kill	
;; rd  in  	(10)
2, 4, 6, 8, 9, 11, 12, 13, 24, 25
;; rd  gen 	(1)
127
;; rd  kill	(1)
127

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 0 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 7 2 NOTE_INSN_FUNCTION_BEG)

(call_insn/j 7 3 0 2 arch/arm/kernel/fiq.c:132 (parallel [
            (call (mem:SI (symbol_ref:SI ("disable_irq") [flags 0x41] <function_decl 0x10e80400 disable_irq>) [0 S4 A32])
                (const_int 0 [0x0]))
            (return)
            (use (const_int 0 [0x0]))
        ]) 258 {*sibcall_insn} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 2 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(11)
2, 4, 6, 8, 9, 11, 12, 13, 24, 25, 127


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

starting the processing of deferred insns
deleting insn with uid = 2.
deleting insn with uid = 6.
ending the processing of deferred insns

;; Function enable_fiq (enable_fiq)[0:923]

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


try_optimize_cfg iteration 1

deferring deletion of insn with uid = 6.
deferring deletion of insn with uid = 2.
Deleted 2 trivially dead insns

Number of successful forward propagations: 0



enable_fiq

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 13[sp]
;;  ref usage 	r0={3d,3u} r1={2d} r2={2d} r3={2d} r11={1d,2u} r12={2d} r13={1d,3u} r14={1d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,2u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d} 
;;    total ref usage 140{128d,12u,0e} in 1{0 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126
0[0,3] 1[3,2] 2[5,2] 3[7,2] 11[9,1] 12[10,2] 13[12,1] 14[13,1] 15[14,1] 16[15,1] 17[16,1] 18[17,1] 19[18,1] 20[19,1] 21[20,1] 22[21,1] 23[22,1] 24[23,1] 25[24,1] 26[25,1] 27[26,1] 28[27,1] 29[28,1] 30[29,1] 31[30,1] 32[31,1] 33[32,1] 34[33,1] 35[34,1] 36[35,1] 37[36,1] 38[37,1] 39[38,1] 40[39,1] 41[40,1] 42[41,1] 43[42,1] 44[43,1] 45[44,1] 46[45,1] 47[46,1] 48[47,1] 49[48,1] 50[49,1] 51[50,1] 52[51,1] 53[52,1] 54[53,1] 55[54,1] 56[55,1] 57[56,1] 58[57,1] 59[58,1] 60[59,1] 61[60,1] 62[61,1] 63[62,1] 64[63,1] 65[64,1] 66[65,1] 67[66,1] 68[67,1] 69[68,1] 70[69,1] 71[70,1] 72[71,1] 73[72,1] 74[73,1] 75[74,1] 76[75,1] 77[76,1] 78[77,1] 79[78,1] 80[79,1] 81[80,1] 82[81,1] 83[82,1] 84[83,1] 85[84,1] 86[85,1] 87[86,1] 88[87,1] 89[88,1] 90[89,1] 91[90,1] 92[91,1] 93[92,1] 94[93,1] 95[94,1] 96[95,1] 97[96,1] 98[97,1] 99[98,1] 100[99,1] 101[100,1] 102[101,1] 103[102,1] 104[103,1] 105[104,1] 106[105,1] 107[106,1] 108[107,1] 109[108,1] 110[109,1] 111[110,1] 112[111,1] 113[112,1] 114[113,1] 115[114,1] 116[115,1] 117[116,1] 118[117,1] 119[118,1] 120[119,1] 121[120,1] 122[121,1] 123[122,1] 124[123,1] 125[124,1] 126[125,1] 127[126,1] 133[127,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 133
;; live  kill	
;; rd  in  	(10)
2, 4, 6, 8, 9, 11, 12, 13, 24, 25
;; rd  gen 	(1)
127
;; rd  kill	(1)
127

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 0 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 7 2 NOTE_INSN_FUNCTION_BEG)

(call_insn/j 7 3 0 2 arch/arm/kernel/fiq.c:127 (parallel [
            (call (mem:SI (symbol_ref:SI ("enable_irq") [flags 0x41] <function_decl 0x10e80480 enable_irq>) [0 S4 A32])
                (const_int 0 [0x0]))
            (return)
            (use (const_int 0 [0x0]))
        ]) 258 {*sibcall_insn} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 2 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(11)
2, 4, 6, 8, 9, 11, 12, 13, 24, 25, 127


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

starting the processing of deferred insns
deleting insn with uid = 2.
deleting insn with uid = 6.
ending the processing of deferred insns

;; Function release_fiq (release_fiq)[0:922]

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;;
;; Loop 1
;;  header 4, latch 4
;;  depth 1, outer 0
;;  nodes: 4
;; 2 succs { 3 4 }
;; 3 succs { 1 }
;; 4 succs { 4 5 }
;; 5 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 7 count 7 (  1.2)
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 7 count 10 (  1.7)
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 7 count 10 (  1.7)

In insn 12, replacing
 (reg/f:SI 138)
 with (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x11078640>)
Changes to insn 12 not profitable

In insn 23, replacing
 (reg/f:SI 139)
 with (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
Changes to insn 23 not profitable


try_optimize_cfg iteration 1

deferring deletion of insn with uid = 23.
Deleted 1 trivially dead insns

Number of successful forward propagations: 0



release_fiq

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={6d,4u} r1={6d,2u} r2={5d,1u} r3={4d} r11={1d,5u} r12={4d} r13={1d,8u} r14={3d,1u} r15={3d} r16={3d} r17={3d} r18={3d} r19={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={5d,2u} r25={1d,5u} r26={1d,4u} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r81={3d} r82={3d} r83={3d} r84={3d} r85={3d} r86={3d} r87={3d} r88={3d} r89={3d} r90={3d} r91={3d} r92={3d} r93={3d} r94={3d} r95={3d} r96={3d} r97={3d} r98={3d} r99={3d} r100={3d} r101={3d} r102={3d} r103={3d} r104={3d} r105={3d} r106={3d} r107={3d} r108={3d} r109={3d} r110={3d} r111={3d} r112={3d} r113={3d} r114={3d} r115={3d} r116={3d} r117={3d} r118={3d} r119={3d} r120={3d} r121={3d} r122={3d} r123={3d} r124={3d} r125={3d} r126={3d} r127={3d} r133={1d,1u} r134={1d,3u} r135={1d,2u} r136={1d,2u} r137={1d,1u} r138={1d,1u} r139={1d,3u} r140={1d,1u} r141={1d} r142={1d,1u} 
;;    total ref usage 424{377d,47u,0e} in 22{19 regular + 3 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366
0[0,6] 1[6,6] 2[12,5] 3[17,4] 11[21,1] 12[22,4] 13[26,1] 14[27,3] 15[30,3] 16[33,3] 17[36,3] 18[39,3] 19[42,3] 20[45,3] 21[48,3] 22[51,3] 23[54,3] 24[57,5] 25[62,1] 26[63,1] 27[64,3] 28[67,3] 29[70,3] 30[73,3] 31[76,3] 32[79,3] 33[82,3] 34[85,3] 35[88,3] 36[91,3] 37[94,3] 38[97,3] 39[100,3] 40[103,3] 41[106,3] 42[109,3] 43[112,3] 44[115,3] 45[118,3] 46[121,3] 47[124,3] 48[127,3] 49[130,3] 50[133,3] 51[136,3] 52[139,3] 53[142,3] 54[145,3] 55[148,3] 56[151,3] 57[154,3] 58[157,3] 59[160,3] 60[163,3] 61[166,3] 62[169,3] 63[172,3] 64[175,3] 65[178,3] 66[181,3] 67[184,3] 68[187,3] 69[190,3] 70[193,3] 71[196,3] 72[199,3] 73[202,3] 74[205,3] 75[208,3] 76[211,3] 77[214,3] 78[217,3] 79[220,3] 80[223,3] 81[226,3] 82[229,3] 83[232,3] 84[235,3] 85[238,3] 86[241,3] 87[244,3] 88[247,3] 89[250,3] 90[253,3] 91[256,3] 92[259,3] 93[262,3] 94[265,3] 95[268,3] 96[271,3] 97[274,3] 98[277,3] 99[280,3] 100[283,3] 101[286,3] 102[289,3] 103[292,3] 104[295,3] 105[298,3] 106[301,3] 107[304,3] 108[307,3] 109[310,3] 110[313,3] 111[316,3] 112[319,3] 113[322,3] 114[325,3] 115[328,3] 116[331,3] 117[334,3] 118[337,3] 119[340,3] 120[343,3] 121[346,3] 122[349,3] 123[352,3] 124[355,3] 125[358,3] 126[361,3] 127[364,3] 133[367,1] 134[368,1] 135[369,1] 136[370,1] 137[371,1] 138[372,1] 139[373,1] 140[374,1] 141[375,1] 142[376,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 135 136 137
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 135 136 137
;; live  kill	
;; rd  in  	(10)
5, 11, 16, 20, 21, 25, 26, 29, 62, 63
;; rd  gen 	(4)
61, 369, 370, 371
;; rd  kill	(8)
57, 58, 59, 60, 61, 369, 370, 371

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 arch/arm/kernel/fiq.c:112 (set (reg/v/f:SI 136 [ f ])
        (reg:SI 0 r0 [ f ])) 167 {*arm_movsi_insn} (nil))

(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 3 7 2 arch/arm/kernel/fiq.c:113 (set (reg/f:SI 137)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 7 6 8 2 arch/arm/kernel/fiq.c:113 (set (reg/f:SI 135 [ current_fiq.243 ])
        (mem/f/c/i:SI (reg/f:SI 137) [0 current_fiq+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 8 7 9 2 arch/arm/kernel/fiq.c:113 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 135 [ current_fiq.243 ])
            (reg/v/f:SI 136 [ f ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 9 8 10 2 arch/arm/kernel/fiq.c:113 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 18)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136
;; rd  out 	(14)
5, 11, 16, 20, 21, 25, 26, 29, 61, 62, 63, 369, 370, 371


;; Succ edge  3 [0.0%]  (fallthru)
;; Succ edge  4 [100.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u9(11){ }u10(13){ }u11(25){ }u12(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 138
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 138
;; live  kill	 14 [lr]
;; rd  in  	(14)
5, 11, 16, 20, 21, 25, 26, 29, 61, 62, 63, 369, 370, 371
;; rd  gen 	(1)
372
;; rd  kill	(4)
27, 28, 29, 372

;; Pred edge  2 [0.0%]  (fallthru)
(note 10 9 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 11 10 12 3 arch/arm/kernel/fiq.c:114 (set (reg/f:SI 138)
        (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x11078640>)) 167 {*arm_movsi_insn} (nil))

(insn 12 11 13 3 arch/arm/kernel/fiq.c:114 (set (reg:SI 0 r0)
        (reg/f:SI 138)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x11078640>)
        (nil)))

(insn 13 12 14 3 arch/arm/kernel/fiq.c:114 (set (reg:SI 1 r1)
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 136 [ f ])
                (const_int 4 [0x4])) [0 <variable>.name+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 14 13 15 3 arch/arm/kernel/fiq.c:114 (set (reg:SI 2 r2)
        (mem/s/f/j:SI (plus:SI (reg/f:SI 135 [ current_fiq.243 ])
                (const_int 4 [0x4])) [0 <variable>.name+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn 15 14 16 3 arch/arm/kernel/fiq.c:114 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(call_insn/j 16 15 18 3 arch/arm/kernel/fiq.c:116 (parallel [
            (call (mem:SI (symbol_ref:SI ("dump_stack") [flags 0x41] <function_decl 0x10a57d80 dump_stack>) [0 S4 A32])
                (const_int 0 [0x0]))
            (return)
            (use (const_int 0 [0x0]))
        ]) 258 {*sibcall_insn} (nil)
    (nil))
;; End of basic block 3 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(14)
5, 11, 16, 20, 21, 25, 26, 61, 62, 63, 369, 370, 371, 372


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

;; Start of basic block ( 2 4) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u21(11){ }u22(13){ }u23(25){ }u24(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134 139 140 141 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 133 134 139 140 141 142
;; live  kill	 14 [lr]
;; rd  in  	(22)
0, 5, 11, 16, 20, 21, 25, 26, 29, 57, 61, 62, 63, 367, 368, 369, 370, 371, 373, 374, 375, 376
;; rd  gen 	(8)
0, 57, 367, 368, 373, 374, 375, 376
;; rd  kill	(20)
0, 1, 2, 3, 4, 5, 27, 28, 29, 57, 58, 59, 60, 61, 367, 368, 373, 374, 375, 376

;; Pred edge  2 [100.0%] 
;; Pred edge  4 [86.0%]  (dfs_back)
(code_label 18 16 19 4 18 "" [2 uses])

(note 19 18 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 20 19 21 4 arch/arm/kernel/fiq.c:121 (set (reg/f:SI 139)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 21 20 22 4 arch/arm/kernel/fiq.c:121 (set (reg/f:SI 140 [ current_fiq ])
        (mem/f/c/i:SI (reg/f:SI 139) [0 current_fiq+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 22 21 24 4 arch/arm/kernel/fiq.c:121 (set (reg/f:SI 134 [ current_fiq.244 ])
        (mem/s/f/j:SI (reg/f:SI 140 [ current_fiq ]) [0 <variable>.next+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 24 22 25 4 arch/arm/kernel/fiq.c:121 (set (mem/f/c/i:SI (reg/f:SI 139) [0 current_fiq+0 S4 A32])
        (reg/f:SI 134 [ current_fiq.244 ])) 167 {*arm_movsi_insn} (nil))

(insn 25 24 26 4 arch/arm/kernel/fiq.c:122 discrim 1 (set (reg/f:SI 142 [ <variable>.fiq_op ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 134 [ current_fiq.244 ])
                (const_int 8 [0x8])) [0 <variable>.fiq_op+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 26 25 27 4 arch/arm/kernel/fiq.c:122 discrim 1 (set (reg:SI 0 r0)
        (mem/s/f/j:SI (plus:SI (reg/f:SI 134 [ current_fiq.244 ])
                (const_int 12 [0xc])) [0 <variable>.dev_id+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 27 26 28 4 arch/arm/kernel/fiq.c:122 discrim 1 (set (reg:SI 1 r1)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(call_insn 28 27 29 4 arch/arm/kernel/fiq.c:122 discrim 1 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (reg/f:SI 142 [ <variable>.fiq_op ]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 249 {*call_value_reg_armv5} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 29 28 30 4 arch/arm/kernel/fiq.c:122 discrim 1 (set (reg:SI 133 [ D.15590 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 30 29 31 4 arch/arm/kernel/fiq.c:122 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 133 [ D.15590 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 31 30 39 4 arch/arm/kernel/fiq.c:122 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 18)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 8600 [0x2198])
        (nil)))
;; End of basic block 4 -> ( 4 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(19)
0, 11, 16, 20, 21, 25, 26, 57, 62, 63, 367, 368, 369, 370, 371, 373, 374, 375, 376


;; Succ edge  4 [86.0%]  (dfs_back)
;; Succ edge  5 [14.0%]  (fallthru)

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u39(11){ }u40(13){ }u41(25){ }u42(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(19)
0, 11, 16, 20, 21, 25, 26, 57, 62, 63, 367, 368, 369, 370, 371, 373, 374, 375, 376
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  4 [14.0%]  (fallthru)
(note 39 31 0 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 5 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(19)
0, 11, 16, 20, 21, 25, 26, 57, 62, 63, 367, 368, 369, 370, 371, 373, 374, 375, 376


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
deleting insn with uid = 23.
ending the processing of deferred insns

;; Function set_fiq_handler (set_fiq_handler)[0:920]

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 7 (  1.4)
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 8 (  1.6)
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 8 (  1.6)

In insn 23, replacing
 (reg:SI 143)
 with (const_int -65508 [0xffffffffffff001c])
Changes to insn 23 not profitable

In insn 32, replacing
 (reg/f:SI 142)
 with (symbol_ref:SI ("cpu_cache") [flags 0xc0] <var_decl 0x1102af00 cpu_cache>)
Changes to insn 32 not profitable


try_optimize_cfg iteration 1

deferring deletion of insn with uid = 32.
deferring deletion of insn with uid = 12.
deferring deletion of insn with uid = 11.
deferring deletion of insn with uid = 10.
Deleted 4 trivially dead insns

Number of successful forward propagations: 0



set_fiq_handler

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={7d,4u} r1={7d,4u} r2={5d,1u} r3={4d} r11={1d,4u} r12={4d} r13={1d,7u} r14={4d,1u} r15={3d} r16={3d} r17={3d} r18={3d} r19={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={4d,1u} r25={1d,4u} r26={1d,3u} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r81={3d} r82={3d} r83={3d} r84={3d} r85={3d} r86={3d} r87={3d} r88={3d} r89={3d} r90={3d} r91={3d} r92={3d} r93={3d} r94={3d} r95={3d} r96={3d} r97={3d} r98={3d} r99={3d} r100={3d} r101={3d} r102={3d} r103={3d} r104={3d} r105={3d} r106={3d} r107={3d} r108={3d} r109={3d} r110={3d} r111={3d} r112={3d} r113={3d} r114={3d} r115={3d} r116={3d} r117={3d} r118={3d} r119={3d} r120={3d} r121={3d} r122={3d} r123={3d} r124={3d} r125={3d} r126={3d} r127={3d} r133={1d,2u} r134={1d,4u,1d} r135={1d,1u} r136={1d,2u} r137={1d,1u} r138={1d} r139={1d} r140={1d} r142={1d,3u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d} r151={1d,1u} r152={1d,1u} 
;;    total ref usage 440{388d,51u,1e} in 27{24 regular + 3 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368
0[0,7] 1[7,7] 2[14,5] 3[19,4] 11[23,1] 12[24,4] 13[28,1] 14[29,4] 15[33,3] 16[36,3] 17[39,3] 18[42,3] 19[45,3] 20[48,3] 21[51,3] 22[54,3] 23[57,3] 24[60,4] 25[64,1] 26[65,1] 27[66,3] 28[69,3] 29[72,3] 30[75,3] 31[78,3] 32[81,3] 33[84,3] 34[87,3] 35[90,3] 36[93,3] 37[96,3] 38[99,3] 39[102,3] 40[105,3] 41[108,3] 42[111,3] 43[114,3] 44[117,3] 45[120,3] 46[123,3] 47[126,3] 48[129,3] 49[132,3] 50[135,3] 51[138,3] 52[141,3] 53[144,3] 54[147,3] 55[150,3] 56[153,3] 57[156,3] 58[159,3] 59[162,3] 60[165,3] 61[168,3] 62[171,3] 63[174,3] 64[177,3] 65[180,3] 66[183,3] 67[186,3] 68[189,3] 69[192,3] 70[195,3] 71[198,3] 72[201,3] 73[204,3] 74[207,3] 75[210,3] 76[213,3] 77[216,3] 78[219,3] 79[222,3] 80[225,3] 81[228,3] 82[231,3] 83[234,3] 84[237,3] 85[240,3] 86[243,3] 87[246,3] 88[249,3] 89[252,3] 90[255,3] 91[258,3] 92[261,3] 93[264,3] 94[267,3] 95[270,3] 96[273,3] 97[276,3] 98[279,3] 99[282,3] 100[285,3] 101[288,3] 102[291,3] 103[294,3] 104[297,3] 105[300,3] 106[303,3] 107[306,3] 108[309,3] 109[312,3] 110[315,3] 111[318,3] 112[321,3] 113[324,3] 114[327,3] 115[330,3] 116[333,3] 117[336,3] 118[339,3] 119[342,3] 120[345,3] 121[348,3] 122[351,3] 123[354,3] 124[357,3] 125[360,3] 126[363,3] 127[366,3] 133[369,1] 134[370,1] 135[371,1] 136[372,1] 137[373,1] 138[374,1] 139[375,1] 140[376,1] 142[377,1] 143[378,1] 144[379,1] 145[380,1] 146[381,1] 147[382,1] 148[383,1] 149[384,1] 150[385,1] 151[386,1] 152[387,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134 135 136 137 138 139 140 142 143 144 145 146 147 148 149
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 133 134 135 136 137 138 139 140 142 143 144 145 146 147 148 149
;; live  kill	 14 [lr]
;; rd  in  	(10)
6, 13, 18, 22, 23, 27, 28, 32, 64, 65
;; rd  gen 	(17)
61, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384
;; rd  kill	(24)
29, 30, 31, 32, 60, 61, 62, 63, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 5 3 2 arch/arm/kernel/fiq.c:81 (set (reg/v/f:SI 133 [ start ])
        (reg:SI 0 r0 [ start ])) 167 {*arm_movsi_insn} (nil))

(insn 3 2 4 2 arch/arm/kernel/fiq.c:81 (set (reg/v:SI 134 [ length ])
        (reg:SI 1 r1 [ length ])) 167 {*arm_movsi_insn} (nil))

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 8 2 arch/arm/kernel/fiq.c:85 (set (reg/f:SI 135)
        (symbol_ref:SI ("vectors_page") [flags 0xc0] <var_decl 0x11052240 vectors_page>)) 167 {*arm_movsi_insn} (nil))

(insn 8 7 9 2 arch/arm/kernel/fiq.c:85 (set (reg/f:SI 137 [ vectors_page ])
        (mem/f/c/i:SI (reg/f:SI 135) [0 vectors_page+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 9 8 13 2 arch/arm/kernel/fiq.c:85 (set (reg/f:SI 136)
        (plus:SI (reg/f:SI 137 [ vectors_page ])
            (const_int 28 [0x1c]))) 4 {*arm_addsi3} (nil))

(insn 13 9 14 2 arch/arm/kernel/fiq.c:85 (set (reg:SI 0 r0)
        (reg/f:SI 136)) 167 {*arm_movsi_insn} (nil))

(insn 14 13 15 2 arch/arm/kernel/fiq.c:85 (set (reg:SI 1 r1)
        (reg/v/f:SI 133 [ start ])) 167 {*arm_movsi_insn} (nil))

(insn 15 14 16 2 arch/arm/kernel/fiq.c:85 (set (reg:SI 2 r2)
        (reg/v:SI 134 [ length ])) 167 {*arm_movsi_insn} (nil))

(call_insn 16 15 18 2 arch/arm/kernel/fiq.c:85 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41] <function_decl 0x11066e80 memcpy>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 18 16 19 2 arch/arm/kernel/fiq.c:87 (set (reg/f:SI 142)
        (symbol_ref:SI ("cpu_cache") [flags 0xc0] <var_decl 0x1102af00 cpu_cache>)) 167 {*arm_movsi_insn} (nil))

(insn 19 18 20 2 arch/arm/kernel/fiq.c:87 (set (reg:SI 143)
        (const_int -65508 [0xffffffffffff001c])) 167 {*arm_movsi_insn} (nil))

(insn 20 19 21 2 arch/arm/kernel/fiq.c:87 (set (reg:SI 145)
        (plus:SI (reg/v:SI 134 [ length ])
            (const_int -65280 [0xffffffffffff0100]))) 4 {*arm_addsi3} (nil))

(insn 21 20 22 2 arch/arm/kernel/fiq.c:87 (set (reg:SI 144)
        (plus:SI (reg:SI 145)
            (const_int -228 [0xffffffffffffff1c]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (plus:SI (reg/v:SI 134 [ length ])
            (const_int -65508 [0xffffffffffff001c]))
        (nil)))

(insn 22 21 23 2 arch/arm/kernel/fiq.c:87 (set (reg/f:SI 146 [ cpu_cache.coherent_kern_range ])
        (mem/s/f/j/c:SI (plus:SI (reg/f:SI 142)
                (const_int 16 [0x10])) [0 cpu_cache.coherent_kern_range+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 23 22 24 2 arch/arm/kernel/fiq.c:87 (set (reg:SI 0 r0)
        (reg:SI 143)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int -65508 [0xffffffffffff001c])
        (nil)))

(insn 24 23 25 2 arch/arm/kernel/fiq.c:87 (set (reg:SI 1 r1)
        (reg:SI 144)) 167 {*arm_movsi_insn} (nil))

(call_insn 25 24 26 2 arch/arm/kernel/fiq.c:87 (parallel [
            (call (mem:SI (reg/f:SI 146 [ cpu_cache.coherent_kern_range ]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 244 {*call_reg_armv5} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 26 25 27 2 arch/arm/kernel/fiq.c:88 (set (reg/f:SI 147)
        (symbol_ref:SI ("cr_alignment") [flags 0xc0] <var_decl 0x512cff60 cr_alignment>)) 167 {*arm_movsi_insn} (nil))

(insn 27 26 28 2 arch/arm/kernel/fiq.c:88 (set (reg:SI 149 [ cr_alignment ])
        (mem/c/i:SI (reg/f:SI 147) [0 cr_alignment+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 28 27 29 2 arch/arm/kernel/fiq.c:88 (set (reg:SI 148)
        (and:SI (reg:SI 149 [ cr_alignment ])
            (const_int 8192 [0x2000]))) 67 {*arm_andsi3_insn} (nil))

(insn 29 28 30 2 arch/arm/kernel/fiq.c:88 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 148)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 30 29 31 2 arch/arm/kernel/fiq.c:88 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 43)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 6102 [0x17d6])
        (nil)))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 142
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 142
;; rd  out 	(26)
6, 13, 18, 22, 23, 27, 28, 61, 64, 65, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384


;; Succ edge  3 [39.0%]  (fallthru)
;; Succ edge  4 [61.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u32(11){ }u33(13){ }u34(25){ }u35(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 142
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 142
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 150 151 152
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 142
;; live  gen 	 0 [r0] 1 [r1] 150 151 152
;; live  kill	 14 [lr]
;; rd  in  	(26)
6, 13, 18, 22, 23, 27, 28, 61, 64, 65, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384
;; rd  gen 	(3)
385, 386, 387
;; rd  kill	(7)
29, 30, 31, 32, 385, 386, 387

;; Pred edge  2 [39.0%]  (fallthru)
(note 31 30 33 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 33 31 34 3 arch/arm/kernel/fiq.c:89 (set (reg:SI 151)
        (plus:SI (reg/v:SI 134 [ length ])
            (const_int 28 [0x1c]))) 4 {*arm_addsi3} (nil))

(insn 34 33 35 3 arch/arm/kernel/fiq.c:89 (set (reg/f:SI 152 [ cpu_cache.coherent_kern_range ])
        (mem/s/f/j/c:SI (plus:SI (reg/f:SI 142)
                (const_int 16 [0x10])) [0 cpu_cache.coherent_kern_range+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 35 34 36 3 arch/arm/kernel/fiq.c:89 (set (reg:SI 0 r0)
        (const_int 28 [0x1c])) 167 {*arm_movsi_insn} (nil))

(insn 36 35 37 3 arch/arm/kernel/fiq.c:89 (set (reg:SI 1 r1)
        (reg:SI 151)) 167 {*arm_movsi_insn} (nil))

(call_insn 37 36 43 3 arch/arm/kernel/fiq.c:89 (parallel [
            (call (mem:SI (reg/f:SI 152 [ cpu_cache.coherent_kern_range ]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 244 {*call_reg_armv5} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(29)
6, 13, 18, 22, 23, 27, 28, 61, 64, 65, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 3 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u44(11){ }u45(13){ }u46(25){ }u47(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(29)
6, 13, 18, 22, 23, 27, 28, 61, 64, 65, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  3 [100.0%]  (fallthru)
;; Pred edge  2 [61.0%] 
(code_label 43 37 46 4 26 "" [1 uses])

(note 46 43 0 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 4 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(29)
6, 13, 18, 22, 23, 27, 28, 61, 64, 65, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
deleting insn with uid = 10.
deleting insn with uid = 11.
deleting insn with uid = 12.
deleting insn with uid = 32.
ending the processing of deferred insns

;; Function fiq_def_op (fiq_def_op)[0:918]

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 8 (  1.6)

In insn 11, replacing
 (reg/f:SI 136)
 with (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
Changes to insn 11 not profitable

In insn 20, replacing
 (reg:SI 133 [ <result> ])
 with (const_int 0 [0x0])
Changes to insn 20 not profitable


try_optimize_cfg iteration 1


Number of successful forward propagations: 0



fiq_def_op

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={4d,3u} r1={3d,2u} r2={2d} r3={2d} r11={1d,4u} r12={2d} r13={1d,5u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={2d,1u} r25={1d,4u} r26={1d,3u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,1u} r135={1d,1u} r136={1d,1u} 
;;    total ref usage 160{134d,26u,0e} in 10{9 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130
0[0,4] 1[4,3] 2[7,2] 3[9,2] 11[11,1] 12[12,2] 13[14,1] 14[15,2] 15[17,1] 16[18,1] 17[19,1] 18[20,1] 19[21,1] 20[22,1] 21[23,1] 22[24,1] 23[25,1] 24[26,2] 25[28,1] 26[29,1] 27[30,1] 28[31,1] 29[32,1] 30[33,1] 31[34,1] 32[35,1] 33[36,1] 34[37,1] 35[38,1] 36[39,1] 37[40,1] 38[41,1] 39[42,1] 40[43,1] 41[44,1] 42[45,1] 43[46,1] 44[47,1] 45[48,1] 46[49,1] 47[50,1] 48[51,1] 49[52,1] 50[53,1] 51[54,1] 52[55,1] 53[56,1] 54[57,1] 55[58,1] 56[59,1] 57[60,1] 58[61,1] 59[62,1] 60[63,1] 61[64,1] 62[65,1] 63[66,1] 64[67,1] 65[68,1] 66[69,1] 67[70,1] 68[71,1] 69[72,1] 70[73,1] 71[74,1] 72[75,1] 73[76,1] 74[77,1] 75[78,1] 76[79,1] 77[80,1] 78[81,1] 79[82,1] 80[83,1] 81[84,1] 82[85,1] 83[86,1] 84[87,1] 85[88,1] 86[89,1] 87[90,1] 88[91,1] 89[92,1] 90[93,1] 91[94,1] 92[95,1] 93[96,1] 94[97,1] 95[98,1] 96[99,1] 97[100,1] 98[101,1] 99[102,1] 100[103,1] 101[104,1] 102[105,1] 103[106,1] 104[107,1] 105[108,1] 106[109,1] 107[110,1] 108[111,1] 109[112,1] 110[113,1] 111[114,1] 112[115,1] 113[116,1] 114[117,1] 115[118,1] 116[119,1] 117[120,1] 118[121,1] 119[122,1] 120[123,1] 121[124,1] 122[125,1] 123[126,1] 124[127,1] 125[128,1] 126[129,1] 127[130,1] 133[131,1] 135[132,1] 136[133,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 135
;; live  in  	 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 135
;; live  kill	
;; rd  in  	(10)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29
;; rd  gen 	(2)
27, 132
;; rd  kill	(3)
26, 27, 132

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 0 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 3 5 4 2 arch/arm/kernel/fiq.c:57 (set (reg/v:SI 135 [ relinquish ])
        (reg:SI 1 r1 [ relinquish ])) 167 {*arm_movsi_insn} (nil))

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 8 2 arch/arm/kernel/fiq.c:58 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 135 [ relinquish ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 8 7 9 2 arch/arm/kernel/fiq.c:58 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 14)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 6102 [0x17d6])
        (nil)))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(12)
3, 6, 8, 10, 11, 13, 14, 16, 27, 28, 29, 132


;; Succ edge  3 [39.0%]  (fallthru)
;; Succ edge  4 [61.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u7(11){ }u8(13){ }u9(25){ }u10(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 136
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 136
;; live  kill	 14 [lr]
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 27, 28, 29, 132
;; rd  gen 	(1)
133
;; rd  kill	(3)
15, 16, 133

;; Pred edge  2 [39.0%]  (fallthru)
(note 9 8 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 10 9 11 3 arch/arm/kernel/fiq.c:59 (set (reg/f:SI 136)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 11 10 12 3 arch/arm/kernel/fiq.c:59 (set (reg:SI 0 r0)
        (reg/f:SI 136)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn 12 11 13 3 arch/arm/kernel/fiq.c:59 (set (reg:SI 1 r1)
        (const_int 4 [0x4])) 167 {*arm_movsi_insn} (nil))

(call_insn 13 12 14 3 arch/arm/kernel/fiq.c:59 (parallel [
            (call (mem:SI (symbol_ref:SI ("set_fiq_handler") [flags 0x3] <function_decl 0x11048a00 set_fiq_handler>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(12)
3, 6, 8, 10, 11, 13, 14, 27, 28, 29, 132, 133


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u15(11){ }u16(13){ }u17(25){ }u18(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 133
;; live  kill	
;; rd  in  	(13)
3, 6, 8, 10, 11, 13, 14, 16, 27, 28, 29, 132, 133
;; rd  gen 	(2)
0, 131
;; rd  kill	(5)
0, 1, 2, 3, 131

;; Pred edge  2 [61.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 14 13 15 4 30 "" [1 uses])

(note 15 14 16 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 16 15 20 4 arch/arm/kernel/fiq.c:62 (set (reg:SI 133 [ <result> ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 20 16 26 4 arch/arm/kernel/fiq.c:62 (set (reg/i:SI 0 r0)
        (reg:SI 133 [ <result> ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 26 20 0 4 arch/arm/kernel/fiq.c:62 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 4 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(14)
0, 6, 8, 10, 11, 13, 14, 16, 27, 28, 29, 131, 132, 133


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function show_fiq_list (show_fiq_list)[0:919]

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 8 (  1.6)
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 8 (  1.6)
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 8 (  1.6)

In insn 9, replacing
 (reg/f:SI 137)
 with (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
Changes to insn 9 not profitable

In insn 10, replacing
 (plus:SI (reg/f:SI 137)
        (const_int 4 [0x4]))
 with (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
            (const_int 4 [0x4])))
Changes to insn 10 not profitable

In insn 19, replacing
 (reg/f:SI 140)
 with (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x11087180>)
Changes to insn 19 not profitable

In insn 21, replacing
 (reg/f:SI 141)
 with (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x11083c00>)
Changes to insn 21 not profitable

In insn 29, replacing
 (reg:SI 134 [ <result> ])
 with (const_int 0 [0x0])
Changes to insn 29 not profitable


try_optimize_cfg iteration 1

deferring deletion of insn with uid = 18.
deferring deletion of insn with uid = 9.
deferring deletion of insn with uid = 2.
Deleted 3 trivially dead insns

Number of successful forward propagations: 0



show_fiq_list

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={4d,5u} r1={3d,2u} r2={3d,1u} r3={3d,1u} r11={1d,4u} r12={2d} r13={1d,6u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={2d,1u} r25={1d,4u} r26={1d,3u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,2u} r134={1d,1u} r135={1d} r136={1d,1u} r137={1d,3u} r138={1d} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} 
;;    total ref usage 182{143d,39u,0e} in 17{16 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132
0[0,4] 1[4,3] 2[7,3] 3[10,3] 11[13,1] 12[14,2] 13[16,1] 14[17,2] 15[19,1] 16[20,1] 17[21,1] 18[22,1] 19[23,1] 20[24,1] 21[25,1] 22[26,1] 23[27,1] 24[28,2] 25[30,1] 26[31,1] 27[32,1] 28[33,1] 29[34,1] 30[35,1] 31[36,1] 32[37,1] 33[38,1] 34[39,1] 35[40,1] 36[41,1] 37[42,1] 38[43,1] 39[44,1] 40[45,1] 41[46,1] 42[47,1] 43[48,1] 44[49,1] 45[50,1] 46[51,1] 47[52,1] 48[53,1] 49[54,1] 50[55,1] 51[56,1] 52[57,1] 53[58,1] 54[59,1] 55[60,1] 56[61,1] 57[62,1] 58[63,1] 59[64,1] 60[65,1] 61[66,1] 62[67,1] 63[68,1] 64[69,1] 65[70,1] 66[71,1] 67[72,1] 68[73,1] 69[74,1] 70[75,1] 71[76,1] 72[77,1] 73[78,1] 74[79,1] 75[80,1] 76[81,1] 77[82,1] 78[83,1] 79[84,1] 80[85,1] 81[86,1] 82[87,1] 83[88,1] 84[89,1] 85[90,1] 86[91,1] 87[92,1] 88[93,1] 89[94,1] 90[95,1] 91[96,1] 92[97,1] 93[98,1] 94[99,1] 95[100,1] 96[101,1] 97[102,1] 98[103,1] 99[104,1] 100[105,1] 101[106,1] 102[107,1] 103[108,1] 104[109,1] 105[110,1] 106[111,1] 107[112,1] 108[113,1] 109[114,1] 110[115,1] 111[116,1] 112[117,1] 113[118,1] 114[119,1] 115[120,1] 116[121,1] 117[122,1] 118[123,1] 119[124,1] 120[125,1] 121[126,1] 122[127,1] 123[128,1] 124[129,1] 125[130,1] 126[131,1] 127[132,1] 133[133,1] 134[134,1] 135[135,1] 136[136,1] 137[137,1] 138[138,1] 139[139,1] 140[140,1] 141[141,1] 142[142,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 133 135 136 137 138 139
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 133 135 136 137 138 139
;; live  kill	
;; rd  in  	(10)
3, 6, 9, 12, 13, 15, 16, 18, 30, 31
;; rd  gen 	(7)
29, 133, 135, 136, 137, 138, 139
;; rd  kill	(8)
28, 29, 133, 135, 136, 137, 138, 139

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 0 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 3 5 4 2 arch/arm/kernel/fiq.c:72 (set (reg/v:SI 136 [ prec ])
        (reg:SI 1 r1 [ prec ])) 167 {*arm_movsi_insn} (nil))

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 8 2 arch/arm/kernel/fiq.c:73 (set (reg/f:SI 137)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 8 7 10 2 arch/arm/kernel/fiq.c:73 (set (reg/f:SI 133 [ current_fiq.238 ])
        (mem/f/c/i:SI (reg/f:SI 137) [0 current_fiq+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 10 8 11 2 arch/arm/kernel/fiq.c:73 (set (reg/f:SI 139)
        (plus:SI (reg/f:SI 137)
            (const_int 4 [0x4]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 4 [0x4])))
        (nil)))

(insn 11 10 12 2 arch/arm/kernel/fiq.c:73 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 133 [ current_fiq.238 ])
            (reg/f:SI 139))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 12 11 13 2 arch/arm/kernel/fiq.c:73 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 23)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 2165 [0x875])
        (nil)))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 136
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 136
;; rd  out 	(17)
3, 6, 9, 12, 13, 15, 16, 18, 29, 30, 31, 133, 135, 136, 137, 138, 139


;; Succ edge  3 [78.3%]  (fallthru)
;; Succ edge  4 [21.6%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u12(11){ }u13(13){ }u14(25){ }u15(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 140 141 142
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 140 141 142
;; live  kill	 14 [lr]
;; rd  in  	(17)
3, 6, 9, 12, 13, 15, 16, 18, 29, 30, 31, 133, 135, 136, 137, 138, 139
;; rd  gen 	(4)
2, 140, 141, 142
;; rd  kill	(9)
0, 1, 2, 3, 17, 18, 140, 141, 142

;; Pred edge  2 [78.3%]  (fallthru)
(note 13 12 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 14 13 15 3 arch/arm/kernel/fiq.c:74 (set (reg/f:SI 140)
        (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x11087180>)) 167 {*arm_movsi_insn} (nil))

(insn 15 14 16 3 arch/arm/kernel/fiq.c:74 (set (reg/f:SI 141)
        (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x11083c00>)) 167 {*arm_movsi_insn} (nil))

(insn 16 15 17 3 arch/arm/kernel/fiq.c:74 (set (reg/f:SI 142 [ <variable>.name ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 133 [ current_fiq.238 ])
                (const_int 4 [0x4])) [0 <variable>.name+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 17 16 19 3 arch/arm/kernel/fiq.c:74 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg/f:SI 142 [ <variable>.name ])) 167 {*arm_movsi_insn} (nil))

(insn 19 17 20 3 arch/arm/kernel/fiq.c:74 (set (reg:SI 1 r1)
        (reg/f:SI 140)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x11087180>)
        (nil)))

(insn 20 19 21 3 arch/arm/kernel/fiq.c:74 (set (reg:SI 2 r2)
        (reg/v:SI 136 [ prec ])) 167 {*arm_movsi_insn} (nil))

(insn 21 20 22 3 arch/arm/kernel/fiq.c:74 (set (reg:SI 3 r3)
        (reg/f:SI 141)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x11083c00>)
        (nil)))

(call_insn 22 21 23 3 arch/arm/kernel/fiq.c:74 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("seq_printf") [flags 0x41] <function_decl 0x10eb2200 seq_printf>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(19)
2, 6, 9, 12, 13, 15, 16, 29, 30, 31, 133, 135, 136, 137, 138, 139, 140, 141, 142


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u28(11){ }u29(13){ }u30(25){ }u31(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 134
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 134
;; live  kill	
;; rd  in  	(21)
2, 3, 6, 9, 12, 13, 15, 16, 18, 29, 30, 31, 133, 135, 136, 137, 138, 139, 140, 141, 142
;; rd  gen 	(2)
1, 134
;; rd  kill	(5)
0, 1, 2, 3, 134

;; Pred edge  2 [21.6%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 23 22 24 4 35 "" [1 uses])

(note 24 23 25 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 25 24 29 4 arch/arm/kernel/fiq.c:78 (set (reg:SI 134 [ <result> ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 29 25 35 4 arch/arm/kernel/fiq.c:78 (set (reg/i:SI 0 r0)
        (reg:SI 134 [ <result> ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 35 29 0 4 arch/arm/kernel/fiq.c:78 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 4 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(21)
1, 6, 9, 12, 13, 15, 16, 18, 29, 30, 31, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
deleting insn with uid = 2.
deleting insn with uid = 9.
deleting insn with uid = 18.
ending the processing of deferred insns
