
;; Function disable_hlt (disable_hlt)[0:1338]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs

    a0 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r134,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r133,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a1(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000


Pass 1 for finding allocno costs

    r135: preferred GENERAL_REGS, alternative NO_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS

  a0(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a1(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000

   Insn 9(l0): point = 0
   Insn 7(l0): point = 2
   Insn 6(l0): point = 4
   Insn 5(l0): point = 6
 a0(r135): [1..6]
 a1(r133): [1..2]
 a2(r134): [3..4]
Compressing live ranges: from 9 to 5 - 55%
Ranges after the compression:
 a0(r135): [0..4]
 a1(r133): [0..1]
 a2(r134): [2..3]
+++Allocating 24 bytes for conflict table (uncompressed size 24)
;; a0(r135,l0) conflicts: a1(r133,l0) a2(r134,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a1(r133,l0) conflicts: a0(r135,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a2(r134,l0) conflicts: a0(r135,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

  cp0:a1(r133)<->a2(r134)@125:shuffle
  regions=1, blocks=3, points=5
    allocnos=3, copies=1, conflicts=2, ranges=3

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all: 0r135 1r133 2r134
    modified regnos: 133 134 135
    border:
    Pressure: GENERAL_REGS=3
    Reg 135 of GENERAL_REGS has 1 regs less
    Reg 133 of GENERAL_REGS has 1 regs less
    Reg 134 of GENERAL_REGS has 1 regs less
      Pushing a2(r134,l0)
      Pushing a1(r133,l0)
      Pushing a0(r135,l0)
      Popping a0(r135,l0)  -- assign reg 3
      Popping a1(r133,l0)  -- assign reg 2
      Popping a2(r134,l0)  -- assign reg 2
Disposition:
    1:r133 l0     2    2:r134 l0     2    0:r135 l0     3
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=5, live_throughout: 13, 14, dead_or_set: 135
insn=6, live_throughout: 13, 14, 135, dead_or_set: 134
insn=7, live_throughout: 13, 14, 135, dead_or_set: 133, 134
insn=9, live_throughout: 13, 14, dead_or_set: 133, 135
init_insns for 135: (insn_list:REG_DEP_TRUE 5 (nil))
changing reg in insn 7
changing reg in insn 9
changing reg in insn 6
changing reg in insn 7
changing reg in insn 5
changing reg in insn 9
changing reg in insn 6
Spilling for insn 9.

Reloads for insn # 9
Reload 0: reload_out (SI) = (mem/v/c/i:SI (reg/f:SI 3 r3 [135]) [0 hlt_counter+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/v/c/i:SI (reg/f:SI 3 r3 [135]) [0 hlt_counter+0 S4 A32])


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


disable_hlt

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 2[r2] 3[r3]
;;  ref usage 	r0={1d} r1={1d} r2={3d,2u} r3={2d,2u} r12={1d} r13={1d,2u} r14={1d,1u} 
;;    total ref usage 17{10d,7u,0e} in 4{4 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 2 [r2] 3 [r3]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)

(insn 5 2 6 2 arch/arm/kernel/process.c:80 (set (reg/f:SI 3 r3 [135])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 6 5 7 2 arch/arm/kernel/process.c:80 (set (reg:SI 2 r2 [orig:134 hlt_counter.325 ] [134])
        (mem/v/c/i:SI (reg/f:SI 3 r3 [135]) [0 hlt_counter+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 7 6 9 2 arch/arm/kernel/process.c:80 (set (reg:SI 2 r2 [orig:133 hlt_counter.326 ] [133])
        (plus:SI (reg:SI 2 r2 [orig:134 hlt_counter.325 ] [134])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 9 7 17 2 arch/arm/kernel/process.c:80 (set (mem/v/c/i:SI (reg/f:SI 3 r3 [135]) [0 hlt_counter+0 S4 A32])
        (reg:SI 2 r2 [orig:133 hlt_counter.326 ] [133])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 17 9 18 NOTE_INSN_DELETED)

(note 18 17 0 NOTE_INSN_DELETED)


;; Function enable_hlt (enable_hlt)[0:1339]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs

    a0 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r134,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r133,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a1(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000


Pass 1 for finding allocno costs

    r135: preferred GENERAL_REGS, alternative NO_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS

  a0(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a1(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000

   Insn 9(l0): point = 0
   Insn 7(l0): point = 2
   Insn 6(l0): point = 4
   Insn 5(l0): point = 6
 a0(r135): [1..6]
 a1(r133): [1..2]
 a2(r134): [3..4]
Compressing live ranges: from 9 to 5 - 55%
Ranges after the compression:
 a0(r135): [0..4]
 a1(r133): [0..1]
 a2(r134): [2..3]
+++Allocating 24 bytes for conflict table (uncompressed size 24)
;; a0(r135,l0) conflicts: a1(r133,l0) a2(r134,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a1(r133,l0) conflicts: a0(r135,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a2(r134,l0) conflicts: a0(r135,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

  cp0:a1(r133)<->a2(r134)@125:shuffle
  regions=1, blocks=3, points=5
    allocnos=3, copies=1, conflicts=2, ranges=3

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all: 0r135 1r133 2r134
    modified regnos: 133 134 135
    border:
    Pressure: GENERAL_REGS=3
    Reg 135 of GENERAL_REGS has 1 regs less
    Reg 133 of GENERAL_REGS has 1 regs less
    Reg 134 of GENERAL_REGS has 1 regs less
      Pushing a2(r134,l0)
      Pushing a1(r133,l0)
      Pushing a0(r135,l0)
      Popping a0(r135,l0)  -- assign reg 3
      Popping a1(r133,l0)  -- assign reg 2
      Popping a2(r134,l0)  -- assign reg 2
Disposition:
    1:r133 l0     2    2:r134 l0     2    0:r135 l0     3
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=5, live_throughout: 13, 14, dead_or_set: 135
insn=6, live_throughout: 13, 14, 135, dead_or_set: 134
insn=7, live_throughout: 13, 14, 135, dead_or_set: 133, 134
insn=9, live_throughout: 13, 14, dead_or_set: 133, 135
init_insns for 135: (insn_list:REG_DEP_TRUE 5 (nil))
changing reg in insn 7
changing reg in insn 9
changing reg in insn 6
changing reg in insn 7
changing reg in insn 5
changing reg in insn 9
changing reg in insn 6
Spilling for insn 9.

Reloads for insn # 9
Reload 0: reload_out (SI) = (mem/v/c/i:SI (reg/f:SI 3 r3 [135]) [0 hlt_counter+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/v/c/i:SI (reg/f:SI 3 r3 [135]) [0 hlt_counter+0 S4 A32])


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


enable_hlt

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 2[r2] 3[r3]
;;  ref usage 	r0={1d} r1={1d} r2={3d,2u} r3={2d,2u} r12={1d} r13={1d,2u} r14={1d,1u} 
;;    total ref usage 17{10d,7u,0e} in 4{4 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 2 [r2] 3 [r3]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)

(insn 5 2 6 2 arch/arm/kernel/process.c:87 (set (reg/f:SI 3 r3 [135])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 6 5 7 2 arch/arm/kernel/process.c:87 (set (reg:SI 2 r2 [orig:134 hlt_counter.327 ] [134])
        (mem/v/c/i:SI (reg/f:SI 3 r3 [135]) [0 hlt_counter+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 7 6 9 2 arch/arm/kernel/process.c:87 (set (reg:SI 2 r2 [orig:133 hlt_counter.328 ] [133])
        (plus:SI (reg:SI 2 r2 [orig:134 hlt_counter.327 ] [134])
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (nil))

(insn 9 7 17 2 arch/arm/kernel/process.c:87 (set (mem/v/c/i:SI (reg/f:SI 3 r3 [135]) [0 hlt_counter+0 S4 A32])
        (reg:SI 2 r2 [orig:133 hlt_counter.328 ] [133])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 17 9 18 NOTE_INSN_DELETED)

(note 18 17 0 NOTE_INSN_DELETED)


;; Function nohlt_setup (nohlt_setup)[0:1340] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
scanning new insn with uid = 24.
verify found no changes in insn with uid = 24.
deleting insn with uid = 6.
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)

Pass 0 for finding allocno costs

    a1 (r136,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a1(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000


Pass 1 for finding allocno costs

    r136: preferred GENERAL_REGS, alternative NO_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS

  a0(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a1(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000

   Insn 19(l0): point = 0
   Insn 8(l0): point = 2
   Insn 24(l0): point = 4
   Insn 13(l0): point = 6
   Insn 7(l0): point = 8
 a0(r135): [3..4]
 a1(r136): [3..8]
Compressing live ranges: from 11 to 3 - 27%
Ranges after the compression:
 a0(r135): [0..1]
 a1(r136): [0..2]
+++Allocating 16 bytes for conflict table (uncompressed size 16)
;; a0(r135,l0) conflicts: a1(r136,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14
;; a1(r136,l0) conflicts: a0(r135,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14

  regions=1, blocks=3, points=3
    allocnos=2, copies=0, conflicts=2, ranges=2

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all: 0r135 1r136
    modified regnos: 135 136
    border:
    Pressure: GENERAL_REGS=4
    Reg 135 of GENERAL_REGS has 2 regs less
    Reg 136 of GENERAL_REGS has 2 regs less
      Pushing a0(r135,l0)
      Pushing a1(r136,l0)
      Popping a1(r136,l0)  -- assign reg 3
      Popping a0(r135,l0)  -- assign reg 2
Disposition:
    0:r135 l0     2    1:r136 l0     3
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=7, live_throughout: 13, 14, dead_or_set: 136
insn=13, live_throughout: 13, 14, 136, dead_or_set: 0
insn=24, live_throughout: 0, 13, 14, 136, dead_or_set: 135
insn=8, live_throughout: 0, 13, 14, dead_or_set: 135, 136
insn=19, live_throughout: 0, 13, 14, dead_or_set: 
init_insns for 135: (insn_list:REG_DEP_TRUE 24 (nil))
init_insns for 136: (insn_list:REG_DEP_TRUE 7 (nil))
changing reg in insn 24
changing reg in insn 8
changing reg in insn 7
changing reg in insn 13
changing reg in insn 8
Spilling for insn 8.

Reloads for insn # 8
Reload 0: reload_out (SI) = (mem/v/c/i:SI (reg/f:SI 2 r2 [135]) [0 hlt_counter+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/v/c/i:SI (reg/f:SI 2 r2 [135]) [0 hlt_counter+0 S4 A32])


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


nohlt_setup

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 2[r2] 3[r3]
;;  ref usage 	r0={2d,2u} r1={1d} r2={2d,1u} r3={2d,2u} r12={1d} r13={1d,2u} r14={1d,1u} 
;;    total ref usage 18{10d,8u,0e} in 5{5 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 2 [r2] 3 [r3]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 3 13 2 arch/arm/kernel/process.c:94 (set (reg:SI 3 r3 [136])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 1 [0x1])
        (nil)))

(insn 13 7 24 2 arch/arm/kernel/process.c:96 (set (reg/i:SI 0 r0)
        (reg:SI 3 r3 [136])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(insn 24 13 8 2 arch/arm/kernel/process.c:94 (set (reg/f:SI 2 r2 [135])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 8 24 19 2 arch/arm/kernel/process.c:94 (set (mem/v/c/i:SI (reg/f:SI 2 r2 [135]) [0 hlt_counter+0 S4 A32])
        (reg:SI 3 r3 [136])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(insn 19 8 23 2 arch/arm/kernel/process.c:96 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 23 19 25 NOTE_INSN_DELETED)

(note 25 23 0 NOTE_INSN_DELETED)


;; Function hlt_setup (hlt_setup)[0:1341] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
scanning new insn with uid = 24.
verify found no changes in insn with uid = 24.
deleting insn with uid = 7.
scanning new insn with uid = 25.
verify found no changes in insn with uid = 25.
deleting insn with uid = 6.
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)

Pass 0 for finding allocno costs

    a1 (r136,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a1(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000


Pass 1 for finding allocno costs

    r136: preferred GENERAL_REGS, alternative NO_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS

  a0(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a1(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000

   Insn 19(l0): point = 0
   Insn 8(l0): point = 2
   Insn 25(l0): point = 4
   Insn 24(l0): point = 6
   Insn 13(l0): point = 8
 a0(r135): [3..4]
 a1(r136): [3..6]
Compressing live ranges: from 11 to 3 - 27%
Ranges after the compression:
 a0(r135): [0..1]
 a1(r136): [0..2]
+++Allocating 16 bytes for conflict table (uncompressed size 16)
;; a0(r135,l0) conflicts: a1(r136,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14
;; a1(r136,l0) conflicts: a0(r135,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14

  regions=1, blocks=3, points=3
    allocnos=2, copies=0, conflicts=2, ranges=2

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all: 0r135 1r136
    modified regnos: 135 136
    border:
    Pressure: GENERAL_REGS=4
    Reg 135 of GENERAL_REGS has 2 regs less
    Reg 136 of GENERAL_REGS has 2 regs less
      Pushing a1(r136,l0)
      Pushing a0(r135,l0)
      Popping a0(r135,l0)  -- assign reg 3
      Popping a1(r136,l0)  -- assign reg 2
Disposition:
    0:r135 l0     3    1:r136 l0     2
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=13, live_throughout: 13, 14, dead_or_set: 0
insn=24, live_throughout: 0, 13, 14, dead_or_set: 136
insn=25, live_throughout: 0, 13, 14, 136, dead_or_set: 135
insn=8, live_throughout: 0, 13, 14, dead_or_set: 135, 136
insn=19, live_throughout: 0, 13, 14, dead_or_set: 
init_insns for 135: (insn_list:REG_DEP_TRUE 25 (nil))
init_insns for 136: (insn_list:REG_DEP_TRUE 24 (nil))
changing reg in insn 25
changing reg in insn 8
changing reg in insn 24
changing reg in insn 8
Spilling for insn 8.

Reloads for insn # 8
Reload 0: reload_out (SI) = (mem/v/c/i:SI (reg/f:SI 3 r3 [135]) [0 hlt_counter+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/v/c/i:SI (reg/f:SI 3 r3 [135]) [0 hlt_counter+0 S4 A32])


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


hlt_setup

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 2[r2] 3[r3]
;;  ref usage 	r0={2d,2u} r1={1d} r2={2d,1u} r3={2d,1u} r12={1d} r13={1d,2u} r14={1d,1u} 
;;    total ref usage 17{10d,7u,0e} in 5{5 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 2 [r2] 3 [r3]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 9 2 NOTE_INSN_FUNCTION_BEG)

(note 9 3 13 2 NOTE_INSN_DELETED)

(insn 13 9 24 2 arch/arm/kernel/process.c:102 (set (reg/i:SI 0 r0)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(insn 24 13 25 2 arch/arm/kernel/process.c:100 (set (reg:SI 2 r2 [136])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 0 [0x0])
        (nil)))

(insn 25 24 8 2 arch/arm/kernel/process.c:100 (set (reg/f:SI 3 r3 [135])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 8 25 19 2 arch/arm/kernel/process.c:100 (set (mem/v/c/i:SI (reg/f:SI 3 r3 [135]) [0 hlt_counter+0 S4 A32])
        (reg:SI 2 r2 [136])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 19 8 23 2 arch/arm/kernel/process.c:102 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 23 19 26 NOTE_INSN_DELETED)

(note 26 23 0 NOTE_INSN_DELETED)


;; Function arm_machine_flush_console (arm_machine_flush_console)[0:1342]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs




Pass 1 for finding allocno costs



Compressing live ranges: from 1 to 0 - 0%
Ranges after the compression:
+++Allocating 0 bytes for conflict table (uncompressed size 0)

  regions=1, blocks=3, points=0
    allocnos=0, copies=0, conflicts=0, ranges=0

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all:
    modified regnos:
    border:
    Pressure: GENERAL_REGS=1
Disposition:
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


arm_machine_flush_console

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	
;;  ref usage 	r0={1d} r1={1d} r2={1d} r3={1d} r12={1d} r13={1d,2u} r14={1d,1u} 
;;    total ref usage 10{7d,3u,0e} in 0{0 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 12 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 12 2 13 NOTE_INSN_DELETED)

(note 13 12 0 NOTE_INSN_DELETED)


;; Function do_nothing (do_nothing)[0:1344]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs




Pass 1 for finding allocno costs



Compressing live ranges: from 1 to 0 - 0%
Ranges after the compression:
+++Allocating 0 bytes for conflict table (uncompressed size 0)

  regions=1, blocks=3, points=0
    allocnos=0, copies=0, conflicts=0, ranges=0

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all:
    modified regnos:
    border:
    Pressure: GENERAL_REGS=1
Disposition:
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


do_nothing

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	
;;  ref usage 	r0={1d} r1={1d} r2={1d} r3={1d} r12={1d} r13={1d,2u} r14={1d,1u} 
;;    total ref usage 10{7d,3u,0e} in 0{0 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 13 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 13 3 14 NOTE_INSN_DELETED)

(note 14 13 0 NOTE_INSN_DELETED)


;; Function default_idle (default_idle)[0:1346]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs

    a1 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r134,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a1(r135,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:42000


Pass 1 for finding allocno costs

    r135: preferred GENERAL_REGS, alternative NO_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS

  a0(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a1(r135,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:42000

   Insn 9(l0): point = 0
   Insn 8(l0): point = 2
   Insn 18(l0): point = 4
   Insn 17(l0): point = 6
 a0(r134): [2..2]
 a1(r135): [3..6]
Compressing live ranges: from 9 to 3 - 33%
Ranges after the compression:
 a0(r134): [0..0]
 a1(r135): [1..2]
+++Allocating 0 bytes for conflict table (uncompressed size 16)
;; a0(r134,l0) conflicts:
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a1(r135,l0) conflicts:
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

  regions=1, blocks=3, points=3
    allocnos=2, copies=0, conflicts=0, ranges=2

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all: 0r134 1r135
    modified regnos: 134 135
    border:
    Pressure: GENERAL_REGS=2
    Reg 134 of GENERAL_REGS has 1 regs less
    Reg 135 of GENERAL_REGS has 1 regs less
      Pushing a0(r134,l0)
      Pushing a1(r135,l0)
      Popping a1(r135,l0)  -- assign reg 3
      Popping a0(r134,l0)  -- assign reg 3
Disposition:
    0:r134 l0     3    1:r135 l0     3
New iteration of spill/restore move
+++Costs: overall 2000, reg 2000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=17, live_throughout: 13, 14, dead_or_set: 135
insn=18, live_throughout: 13, 14, dead_or_set: 135
insn=8, live_throughout: 13, 14, dead_or_set: 134, 135
insn=9, live_throughout: 13, 14, dead_or_set: 
changing reg in insn 8
changing reg in insn 18
changing reg in insn 17
changing reg in insn 18
changing reg in insn 8
Spilling for insn 17.
Using reg 2 for reload 0
Spilling for insn 17.
Using reg 2 for reload 0

Reloads for insn # 17
Reload 0: reload_in (SI) = (reg/f:SI 13 sp)
	GENERAL_REGS, RELOAD_FOR_INPUT (opnum = 1)
	reload_in_reg: (reg/f:SI 13 sp)
	reload_reg_rtx: (reg:SI 2 r2)


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


default_idle

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 2[r2] 3[r3] 13[sp] 24[cc]
;;  ref usage 	r0={1d} r1={1d} r2={2d,1u} r3={4d,2u} r12={1d} r13={1d,3u} r14={1d,1u} r24={1d} 
;;    total ref usage 19{12d,7u,0e} in 5{5 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3]
;; live  kill	 24 [cc]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 6 2 NOTE_INSN_FUNCTION_BEG)

(note 6 2 21 2 NOTE_INSN_DELETED)

(insn 21 6 17 2 include/linux/thread_info.h:84 (set (reg:SI 2 r2)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn 17 21 18 2 include/linux/thread_info.h:84 (set (reg/f:SI 3 r3 [orig:135 D.26267 ] [135])
        (and:SI (reg:SI 2 r2)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 18 17 8 2 include/linux/thread_info.h:84 (set (reg/f:SI 3 r3 [orig:135 D.26267 ] [135])
        (and:SI (reg/f:SI 3 r3 [orig:135 D.26267 ] [135])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 8 18 9 2 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 3 r3 [orig:134 D.26270 ] [134])
        (mem/v:SI (reg/f:SI 3 r3 [orig:135 D.26267 ] [135]) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 9 8 19 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/irqflags.h:26 (parallel [
            (asm_operands/v ("	cpsie i			@ arch_local_irq_enable") ("") 0 []
                 [] 1104764)
            (clobber (reg:QI 24 cc))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 19 9 20 NOTE_INSN_DELETED)

(note 20 19 0 NOTE_INSN_DELETED)


;; Function reboot_setup (reboot_setup)[0:1348] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs

    a1 (r136,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a1(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000


Pass 1 for finding allocno costs

    r136: preferred GENERAL_REGS, alternative NO_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS

  a0(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a1(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000

   Insn 20(l0): point = 0
   Insn 9(l0): point = 2
   Insn 6(l0): point = 4
   Insn 14(l0): point = 6
   Insn 7(l0): point = 8
 a0(r135): [3..4]
 a1(r136): [3..8]
Compressing live ranges: from 11 to 3 - 27%
Ranges after the compression:
 a0(r135): [0..1]
 a1(r136): [0..2]
+++Allocating 16 bytes for conflict table (uncompressed size 16)
;; a0(r135,l0) conflicts: a1(r136,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14
;; a1(r136,l0) conflicts: a0(r135,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14

  regions=1, blocks=3, points=3
    allocnos=2, copies=0, conflicts=2, ranges=2

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all: 0r135 1r136
    modified regnos: 135 136
    border:
    Pressure: GENERAL_REGS=4
    Reg 135 of GENERAL_REGS has 2 regs less
    Reg 136 of GENERAL_REGS has 2 regs less
      Pushing a1(r136,l0)
      Pushing a0(r135,l0)
      Popping a0(r135,l0)  -- assign reg 3
      Popping a1(r136,l0)  -- assign reg 2
Disposition:
    0:r135 l0     3    1:r136 l0     2
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=7, live_throughout: 13, 14, dead_or_set: 0, 136
insn=14, live_throughout: 13, 14, 136, dead_or_set: 0
insn=6, live_throughout: 0, 13, 14, 136, dead_or_set: 135
insn=9, live_throughout: 0, 13, 14, dead_or_set: 135, 136
insn=20, live_throughout: 0, 13, 14, dead_or_set: 
init_insns for 135: (insn_list:REG_DEP_TRUE 6 (nil))
changing reg in insn 6
changing reg in insn 9
changing reg in insn 7
Spilling for insn 9.

Reloads for insn # 9
Reload 0: reload_out (QI) = (mem/c/i:QI (reg/f:SI 3 r3 [135]) [0 reboot_mode+0 S1 A8])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/c/i:QI (reg/f:SI 3 r3 [135]) [0 reboot_mode+0 S1 A8])


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


reboot_setup

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 2[r2] 3[r3]
;;  ref usage 	r0={2d,3u} r1={1d} r2={2d,1u} r3={2d,1u} r12={1d} r13={1d,2u} r14={1d,1u} 
;;    total ref usage 18{10d,8u,0e} in 5{5 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 2 [r2] 3 [r3]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 4 3 2 NOTE_INSN_DELETED)

(note 3 2 10 2 NOTE_INSN_FUNCTION_BEG)

(note 10 3 7 2 NOTE_INSN_DELETED)

(insn 7 10 14 2 arch/arm/kernel/process.c:260 (set (reg:SI 2 r2 [136])
        (zero_extend:SI (mem:QI (reg:SI 0 r0 [ str ]) [0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 14 7 6 2 arch/arm/kernel/process.c:262 (set (reg/i:SI 0 r0)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(insn 6 14 9 2 arch/arm/kernel/process.c:260 (set (reg/f:SI 3 r3 [135])
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn 9 6 20 2 arch/arm/kernel/process.c:260 (set (mem/c/i:QI (reg/f:SI 3 r3 [135]) [0 reboot_mode+0 S1 A8])
        (reg:QI 2 r2 [136])) 178 {*arm_movqi_insn} (nil))

(insn 20 9 24 2 arch/arm/kernel/process.c:262 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 24 20 25 NOTE_INSN_DELETED)

(note 25 24 0 NOTE_INSN_DELETED)


;; Function release_thread (release_thread)[0:1359]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs




Pass 1 for finding allocno costs



Compressing live ranges: from 1 to 0 - 0%
Ranges after the compression:
+++Allocating 0 bytes for conflict table (uncompressed size 0)

  regions=1, blocks=3, points=0
    allocnos=0, copies=0, conflicts=0, ranges=0

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all:
    modified regnos:
    border:
    Pressure: GENERAL_REGS=1
Disposition:
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


release_thread

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	
;;  ref usage 	r0={1d} r1={1d} r2={1d} r3={1d} r12={1d} r13={1d,2u} r14={1d,1u} 
;;    total ref usage 10{7d,3u,0e} in 0{0 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 13 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 13 3 14 NOTE_INSN_DELETED)

(note 14 13 0 NOTE_INSN_DELETED)


;; Function dump_task_regs (dump_task_regs)[0:1361]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs

    a0 (r136,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000


Pass 1 for finding allocno costs

    r136: preferred GENERAL_REGS, alternative NO_REGS

  a0(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000

   Insn 27(l0): point = 0
   Insn 21(l0): point = 2
   Insn 15(l0): point = 4
   Insn 32(l0): point = 6
   Insn 31(l0): point = 8
   Insn 14(l0): point = 10
   Insn 12(l0): point = 12
   Insn 7(l0): point = 14
 a0(r136): [9..14]
Compressing live ranges: from 17 to 2 - 11%
Ranges after the compression:
 a0(r136): [0..1]
+++Allocating 0 bytes for conflict table (uncompressed size 8)
;; a0(r136,l0) conflicts:
;;     total conflict hard regs: 0-2
;;     conflict hard regs: 0-2

  regions=1, blocks=3, points=2
    allocnos=1, copies=0, conflicts=0, ranges=1

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all: 0r136
    modified regnos: 136
    border:
    Pressure: GENERAL_REGS=4
    Reg 136 of GENERAL_REGS has 3 regs less
      Pushing a0(r136,l0)
      Popping a0(r136,l0)  -- assign reg 3
Disposition:
    0:r136 l0     3
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=7, live_throughout: 1, 13, dead_or_set: 0, 136
insn=12, live_throughout: 13, 136, dead_or_set: 0, 1
insn=14, live_throughout: 0, 13, 136, dead_or_set: 2
insn=31, live_throughout: 0, 2, 13, dead_or_set: 1, 136
insn=32, live_throughout: 0, 2, 13, dead_or_set: 1
insn=15, live_throughout: 13, dead_or_set: 0, 1, 2, 14
insn=21, live_throughout: 13, 14, dead_or_set: 0
insn=27, live_throughout: 0, 13, 14, dead_or_set: 
changing reg in insn 7
changing reg in insn 31


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 15.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


dump_task_regs

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr]
;;  ref usage 	r0={4d,4u} r1={4d,3u} r2={3d,1u} r3={3d,1u} r12={2d} r13={1d,3u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 143{130d,13u,0e} in 8{7 regular + 1 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 5 3 2 NOTE_INSN_DELETED)

(note 3 2 4 2 NOTE_INSN_DELETED)

(note 4 3 8 2 NOTE_INSN_FUNCTION_BEG)

(note 8 4 10 2 NOTE_INSN_DELETED)

(note 10 8 11 2 NOTE_INSN_DELETED)

(note 11 10 17 2 NOTE_INSN_DELETED)

(note 17 11 7 2 NOTE_INSN_DELETED)

(insn 7 17 12 2 include/linux/elfcore.h:112 (set (reg/f:SI 3 r3 [orig:136 <variable>.stack ] [136])
        (mem/s/f/j:SI (plus:SI (reg:SI 0 r0 [ t ])
                (const_int 4 [0x4])) [0 <variable>.stack+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 12 7 14 2 include/linux/elfcore.h:112 (set (reg:SI 0 r0)
        (reg:SI 1 r1 [ elfregs ])) 167 {*arm_movsi_insn} (nil))

(insn 14 12 31 2 include/linux/elfcore.h:112 (set (reg:SI 2 r2)
        (const_int 72 [0x48])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 72 [0x48])
        (nil)))

(insn 31 14 32 2 include/linux/elfcore.h:112 (set (reg:SI 1 r1)
        (plus:SI (reg/f:SI 3 r3 [orig:136 <variable>.stack ] [136])
            (const_int 8064 [0x1f80]))) 4 {*arm_addsi3} (nil))

(insn 32 31 15 2 include/linux/elfcore.h:112 (set (reg:SI 1 r1)
        (plus:SI (reg:SI 1 r1)
            (const_int 48 [0x30]))) 4 {*arm_addsi3} (nil))

(call_insn 15 32 21 2 include/linux/elfcore.h:112 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41] <function_decl 0x11573080 memcpy>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 21 15 27 2 arch/arm/kernel/process.c:506 (set (reg/i:SI 0 r0)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(insn 27 21 33 2 arch/arm/kernel/process.c:506 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 33 27 34 NOTE_INSN_DELETED)

(note 34 33 0 NOTE_INSN_DELETED)


;; Function arch_vma_name (arch_vma_name)[0:1367]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs

    a0 (r138,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r136,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r138,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:22000
  a1(r136,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:22000


Pass 1 for finding allocno costs

    r138: preferred GENERAL_REGS, alternative NO_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS

  a0(r138,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:22000
  a1(r136,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:22000

   Insn 28(l0): point = 0
   Insn 22(l0): point = 2
   Insn 50(l0): point = 4
   Insn 6(l0): point = 6
 a0(r138): [3..4]
 a1(r136): [3..6]
Compressing live ranges: from 9 to 3 - 33%
Ranges after the compression:
 a0(r138): [0..1]
 a1(r136): [0..2]
+++Allocating 16 bytes for conflict table (uncompressed size 16)
;; a0(r138,l0) conflicts: a1(r136,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a1(r136,l0) conflicts: a0(r138,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

  regions=1, blocks=3, points=3
    allocnos=2, copies=0, conflicts=2, ranges=2

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all: 0r138 1r136
    modified regnos: 136 138
    border:
    Pressure: GENERAL_REGS=3
    Reg 138 of GENERAL_REGS has 1 regs less
    Reg 136 of GENERAL_REGS has 1 regs less
      Pushing a1(r136,l0)
      Pushing a0(r138,l0)
      Popping a0(r138,l0)  -- assign reg 3
      Popping a1(r136,l0)  -- assign reg 0
Disposition:
    1:r136 l0     0    0:r138 l0     3
New iteration of spill/restore move
+++Costs: overall 3750, reg 3750, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=6, live_throughout: 13, 14, dead_or_set: 0, 136
insn=50, live_throughout: 13, 14, 136, dead_or_set: 138
insn=22, live_throughout: 13, 14, dead_or_set: 0, 136, 138
insn=28, live_throughout: 0, 13, 14, dead_or_set: 
init_insns for 138: (insn_list:REG_DEP_TRUE 50 (nil))
changing reg in insn 6
changing reg in insn 22
changing reg in insn 50
changing reg in insn 22


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


arch_vma_name

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 3[r3] 24[cc]
;;  ref usage 	r0={3d,4u} r1={1d} r2={1d} r3={2d,1u} r12={1d} r13={1d,2u} r14={1d,1u} r24={1d} 
;;    total ref usage 19{11d,8u,0e} in 4{4 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 3 [r3] 24 [cc]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 3 [r3]
;; live  kill	 24 [cc]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 4 3 2 NOTE_INSN_DELETED)

(note 3 2 7 2 NOTE_INSN_FUNCTION_BEG)

(note 7 3 52 2 NOTE_INSN_DELETED)

(note 52 7 6 2 NOTE_INSN_DELETED)

(insn 6 52 50 2 arch/arm/kernel/process.c:626 (set (reg:SI 0 r0 [orig:136 <variable>.vm_start ] [136])
        (mem/s/j:SI (plus:SI (reg:SI 0 r0 [ vma ])
                (const_int 4 [0x4])) [0 <variable>.vm_start+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 50 6 22 2 arch/arm/kernel/process.c:626 discrim 2 (set (reg/f:SI 3 r3 [138])
        (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x115b6c60>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x115b6c60>)
        (nil)))

(insn 22 50 28 2 arch/arm/kernel/process.c:627 (parallel [
            (set (reg/i:SI 0 r0)
                (if_then_else:SI (eq (reg:SI 0 r0 [orig:136 <variable>.vm_start ] [136])
                        (const_int -65536 [0xffffffffffff0000]))
                    (reg/f:SI 3 r3 [138])
                    (const_int 0 [0x0])))
            (clobber (reg:CC 24 cc))
        ]) 292 {movcond} (nil))

(insn 28 22 53 2 arch/arm/kernel/process.c:627 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 53 28 54 NOTE_INSN_DELETED)

(note 54 53 0 NOTE_INSN_DELETED)


;; Function vectors_user_mapping (vectors_user_mapping)[0:1366]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
scanning new insn with uid = 37.
verify found no changes in insn with uid = 37.
deleting insn with uid = 10.
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)

Pass 0 for finding allocno costs

    a1 (r140,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r138,l0) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r136,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a1(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r136,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:42000


Pass 1 for finding allocno costs

    r140: preferred GENERAL_REGS, alternative NO_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS

  a0(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a1(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r136,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:42000

   Insn 28(l0): point = 0
   Insn 16(l0): point = 2
   Insn 12(l0): point = 4
   Insn 11(l0): point = 6
   Insn 37(l0): point = 8
   Insn 8(l0): point = 10
   Insn 15(l0): point = 12
   Insn 14(l0): point = 14
   Insn 13(l0): point = 16
   Insn 33(l0): point = 18
   Insn 32(l0): point = 20
 a0(r138): [5..10]
 a1(r140): [7..8]
 a2(r136): [11..20]
Compressing live ranges: from 23 to 6 - 26%
Ranges after the compression:
 a0(r138): [0..3]
 a1(r140): [1..2]
 a2(r136): [4..5]
+++Allocating 16 bytes for conflict table (uncompressed size 24)
;; a0(r138,l0) conflicts: a1(r140,l0)
;;     total conflict hard regs: 1-3
;;     conflict hard regs: 1-3
;; a1(r140,l0) conflicts: a0(r138,l0)
;;     total conflict hard regs: 1-3
;;     conflict hard regs: 1-3
;; a2(r136,l0) conflicts:
;;     total conflict hard regs: 1-3
;;     conflict hard regs: 1-3

  regions=1, blocks=3, points=6
    allocnos=3, copies=0, conflicts=2, ranges=3

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all: 0r138 1r140 2r136
    modified regnos: 136 138 140
    border:
    Pressure: GENERAL_REGS=5
    Reg 138 of GENERAL_REGS has 3 regs less
    Reg 140 of GENERAL_REGS has 3 regs less
    Reg 136 of GENERAL_REGS has 3 regs less
      Pushing a1(r140,l0)
      Pushing a0(r138,l0)
      Pushing a2(r136,l0)
      Popping a2(r136,l0)  -- assign reg 0
      Popping a0(r138,l0)  -- assign reg 0
      Popping a1(r140,l0)  -- assign reg 12
Disposition:
    2:r136 l0     0    0:r138 l0     0    1:r140 l0    12
New iteration of spill/restore move
+++Costs: overall 2000, reg 2000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=32, live_throughout: 13, dead_or_set: 136
insn=33, live_throughout: 13, dead_or_set: 136
insn=13, live_throughout: 13, 136, dead_or_set: 1
insn=14, live_throughout: 1, 13, 136, dead_or_set: 2
insn=15, live_throughout: 1, 2, 13, 136, dead_or_set: 3
insn=8, live_throughout: 1, 2, 3, 13, dead_or_set: 136, 138
insn=37, live_throughout: 1, 2, 3, 13, 138, dead_or_set: 140
insn=11, live_throughout: 1, 2, 3, 13, 138, dead_or_set: 140
insn=12, live_throughout: 1, 2, 3, 13, dead_or_set: 0, 138
insn=16, live_throughout: 13, dead_or_set: 0, 1, 2, 3, 14
insn=28, live_throughout: 0, 13, 14, dead_or_set: 
init_insns for 140: (insn_list:REG_DEP_TRUE 37 (nil))
changing reg in insn 33
changing reg in insn 32
changing reg in insn 33
changing reg in insn 8
changing reg in insn 8
changing reg in insn 12
changing reg in insn 37
changing reg in insn 11
Spilling for insn 32.
Using reg 3 for reload 0
Spilling for insn 11.

Reloads for insn # 32
Reload 0: reload_in (SI) = (reg/f:SI 13 sp)
	GENERAL_REGS, RELOAD_FOR_INPUT (opnum = 1)
	reload_in_reg: (reg/f:SI 13 sp)
	reload_reg_rtx: (reg:SI 3 r3)

Reloads for insn # 11
Reload 0: reload_out (SI) = (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem:SI (reg/f:SI 13 sp) [0 S4 A32])


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 16.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


vectors_user_mapping

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 12[ip] 13[sp] 14[lr]
;;  ref usage 	r0={6d,6u} r1={3d,1u} r2={3d,1u} r3={4d,2u} r12={3d,1u} r13={1d,5u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 150{133d,17u,0e} in 12{11 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 6 2 NOTE_INSN_FUNCTION_BEG)

(note 6 2 9 2 NOTE_INSN_DELETED)

(note 9 6 39 2 NOTE_INSN_DELETED)

(insn 39 9 32 2 arch/arm/kernel/process.c:617 (set (reg:SI 3 r3)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn 32 39 33 2 arch/arm/kernel/process.c:617 (set (reg:SI 0 r0 [136])
        (and:SI (reg:SI 3 r3)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 33 32 13 2 arch/arm/kernel/process.c:617 (set (reg:SI 0 r0 [136])
        (and:SI (reg:SI 0 r0 [136])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 13 33 14 2 arch/arm/kernel/process.c:617 (set (reg:SI 1 r1)
        (const_int -65536 [0xffffffffffff0000])) 167 {*arm_movsi_insn} (nil))

(insn 14 13 15 2 arch/arm/kernel/process.c:617 (set (reg:SI 2 r2)
        (const_int 4096 [0x1000])) 167 {*arm_movsi_insn} (nil))

(insn 15 14 8 2 arch/arm/kernel/process.c:617 (set (reg:SI 3 r3)
        (const_int 67633237 [0x4080055])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 67633237 [0x4080055])
        (nil)))

(insn 8 15 37 2 arch/arm/kernel/process.c:617 (set (reg/f:SI 0 r0 [orig:138 <variable>.task ] [138])
        (mem/s/f/j:SI (plus:SI (reg:SI 0 r0 [136])
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 37 8 11 2 arch/arm/kernel/process.c:617 (set (reg:SI 12 ip [140])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 0 [0x0])
        (nil)))

(insn 11 37 12 2 arch/arm/kernel/process.c:617 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg:SI 12 ip [140])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 12 11 16 2 arch/arm/kernel/process.c:617 (set (reg:SI 0 r0)
        (mem/s/f/j:SI (plus:SI (reg/f:SI 0 r0 [orig:138 <variable>.task ] [138])
                (const_int 492 [0x1ec])) [0 <variable>.mm+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn 16 12 28 2 arch/arm/kernel/process.c:617 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("install_special_mapping") [flags 0x41] <function_decl 0x11145500 install_special_mapping>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 28 16 36 2 arch/arm/kernel/process.c:622 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 36 28 38 NOTE_INSN_DELETED)

(note 38 36 0 NOTE_INSN_DELETED)


;; Function arch_randomize_brk (arch_randomize_brk)[0:1365]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs

    a1 (r136,l0) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r134,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r133,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a1(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a2(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000


Pass 1 for finding allocno costs

    r136: preferred GENERAL_REGS, alternative NO_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS

  a0(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a1(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a2(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000

   Insn 29(l0): point = 0
   Insn 23(l0): point = 2
   Insn 16(l0): point = 5
   Insn 14(l0): point = 8
   Insn 13(l0): point = 10
   Insn 11(l0): point = 12
   Insn 9(l0): point = 14
   Insn 8(l0): point = 16
   Insn 6(l0): point = 18
   Insn 10(l0): point = 20
   Insn 2(l0): point = 22
 a0(r133): [8..10] [3..5]
 a1(r136): [6..22]
 a2(r134): [17..18]
Compressing live ranges: from 25 to 8 - 32%
Ranges after the compression:
 a0(r133): [3..4] [0..1]
 a1(r136): [2..7]
 a2(r134): [5..6]
+++Allocating 24 bytes for conflict table (uncompressed size 24)
;; a0(r133,l0) conflicts: a1(r136,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a1(r136,l0) conflicts: a0(r133,l0) a2(r134,l0)
;;     total conflict hard regs: 0-2 14
;;     conflict hard regs: 0-2 14
;; a2(r134,l0) conflicts: a1(r136,l0)
;;     total conflict hard regs: 2
;;     conflict hard regs: 2

  regions=1, blocks=5, points=8
    allocnos=3, copies=0, conflicts=2, ranges=4

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 4 3 2
    all: 0r133 1r136 2r134
    modified regnos: 133 134 136
    border:
    Pressure: GENERAL_REGS=5
    Reg 133 of GENERAL_REGS has 1 regs less
    Reg 136 of GENERAL_REGS has 4 regs less
    Reg 134 of GENERAL_REGS has 1 regs less
      Pushing a2(r134,l0)
      Pushing a0(r133,l0)
      Pushing a1(r136,l0)
      Popping a1(r136,l0)  -- assign reg 4
      Popping a0(r133,l0)  -- assign reg 0
      Popping a2(r134,l0)  -- assign reg 0
Disposition:
    0:r133 l0     0    2:r134 l0     0    1:r136 l0     4
New iteration of spill/restore move
+++Costs: overall -8250, reg -8250, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=2, live_throughout: 13, dead_or_set: 0, 136
insn=10, live_throughout: 13, 136, dead_or_set: 2
insn=6, live_throughout: 2, 13, 136, dead_or_set: 134
insn=8, live_throughout: 2, 13, 136, dead_or_set: 0, 134
insn=9, live_throughout: 0, 2, 13, 136, dead_or_set: 1
insn=11, live_throughout: 13, 136, dead_or_set: 0, 1, 2, 14
insn=13, live_throughout: 13, 14, 136, dead_or_set: 0, 133
insn=14, live_throughout: 13, 14, 133, 136, dead_or_set: 
insn=16, live_throughout: 13, 14, dead_or_set: 133, 136
insn=17, live_throughout: 13, 14, 133, dead_or_set: 
insn=23, live_throughout: 13, 14, dead_or_set: 0, 133
insn=29, live_throughout: 0, 13, 14, dead_or_set: 
init_insns for 134: (insn_list:REG_DEP_TRUE 6 (nil))
changing reg in insn 13
changing reg in insn 16
changing reg in insn 23
changing reg in insn 6
changing reg in insn 8
changing reg in insn 2
changing reg in insn 16
changing reg in insn 6
changing reg in insn 6
deleting insn with uid = 8.
deleting insn with uid = 23.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 11.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 7 (  1.4)
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 8 (  1.6)


arch_randomize_brk

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 4[r4] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={5d,7u} r1={3d,1u} r2={3d,1u} r3={2d} r4={1d,2u,1d} r12={2d} r13={1d,5u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={2d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 150{131d,18u,1e} in 9{8 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 7 2 NOTE_INSN_FUNCTION_BEG)

(note 7 3 12 2 NOTE_INSN_DELETED)

(note 12 7 2 2 NOTE_INSN_DELETED)

(insn 2 12 10 2 arch/arm/kernel/process.c:602 (set (reg/v/f:SI 4 r4 [orig:136 mm ] [136])
        (reg:SI 0 r0 [ mm ])) 167 {*arm_movsi_insn} (nil))

(insn 10 2 6 2 arch/arm/kernel/process.c:604 (set (reg:SI 2 r2)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 6 10 9 2 arch/arm/kernel/process.c:603 (set (reg:SI 0 r0 [orig:134 D.26158 ] [134])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:136 mm ] [136])
                (const_int 148 [0x94])) [0 <variable>.brk+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:136 mm ] [136])
                (const_int 148 [0x94])) [0 <variable>.brk+0 S4 A32])
        (nil)))

(insn 9 6 11 2 arch/arm/kernel/process.c:604 (set (reg:SI 1 r1)
        (plus:SI (reg:SI 0 r0)
            (const_int 33554432 [0x2000000]))) 4 {*arm_addsi3} (nil))

(call_insn 11 9 13 2 arch/arm/kernel/process.c:604 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("randomize_range") [flags 0x41] <function_decl 0x11401c80 randomize_range>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 13 11 14 2 arch/arm/kernel/process.c:604 (parallel [
            (set (reg:CC 24 cc)
                (compare:CC (reg:SI 0 r0)
                    (const_int 0 [0x0])))
            (set (reg:SI 0 r0 [orig:133 D.26161 ] [133])
                (reg:SI 0 r0))
        ]) 174 {*movsi_compare0} (nil))

(jump_insn 14 13 15 2 arch/arm/kernel/process.c:604 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 17)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))
;; End of basic block 2 -> ( 4 3)
;; lr  out 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 13 [sp]


;; Succ edge  4 [39.0%] 
;; Succ edge  3 [61.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  2 [61.0%]  (fallthru)
(note 15 14 16 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 16 15 17 3 arch/arm/kernel/process.c:604 discrim 2 (set (reg:SI 0 r0 [orig:133 D.26161 ] [133])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:136 mm ] [136])
                (const_int 148 [0x94])) [0 <variable>.brk+0 S4 A32])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 3 -> ( 4)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp]


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	
;; live  in  	 0 [r0] 13 [sp]
;; live  gen 	
;; live  kill	

;; Pred edge  2 [39.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 17 16 18 4 42 "" [1 uses])

(note 18 17 29 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 29 18 34 4 arch/arm/kernel/process.c:605 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 4 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 34 29 35 NOTE_INSN_DELETED)

(note 35 34 0 NOTE_INSN_DELETED)


;; Function get_wchan (get_wchan)[0:1364]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 13 n_edges 18 count 25 (  1.9)
df_worklist_dataflow_doublequeue:n_basic_blocks 13 n_edges 18 count 27 (  2.1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs

    a13 (r154,l1) best GENERAL_REGS, cover GENERAL_REGS
    a6 (r154,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r151,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r149,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r148,l0) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r146,l0) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r145,l0) best GENERAL_REGS, cover GENERAL_REGS
    a10 (r144,l0) best GENERAL_REGS, cover GENERAL_REGS
    a11 (r142,l0) best GENERAL_REGS, cover GENERAL_REGS
    a8 (r141,l0) best GENERAL_REGS, cover GENERAL_REGS
    a9 (r139,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r138,l0) best GENERAL_REGS, cover GENERAL_REGS
    a12 (r136,l1) best GENERAL_REGS, cover GENERAL_REGS
    a7 (r136,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a1(r151,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a2(r145,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:70000
  a3(r148,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a4(r149,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a5(r146,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a6(r154,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a7(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a8(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a9(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a10(r144,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a11(r142,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:42000
  a12(r136,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a13(r154,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000


Pass 1 for finding allocno costs

    r154: preferred GENERAL_REGS, alternative NO_REGS
    r151: preferred GENERAL_REGS, alternative NO_REGS
    r149: preferred GENERAL_REGS, alternative NO_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS
    r146: preferred GENERAL_REGS, alternative NO_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS

  a0(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a1(r151,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a2(r145,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:70000
  a3(r148,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a4(r149,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a5(r146,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a6(r154,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a7(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a8(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a9(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a10(r144,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a11(r142,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:42000
  a12(r136,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a13(r154,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000

   Insn 74(l0): point = 0
   Insn 68(l0): point = 2
   Insn 61(l0): point = 5
   Insn 79(l0): point = 8
   Insn 47(l0): point = 10
   Insn 31(l0): point = 13
   Insn 30(l0): point = 15
   Insn 26(l0): point = 17
   Insn 28(l0): point = 19
   Insn 25(l0): point = 21
   Insn 23(l0): point = 23
   Insn 22(l0): point = 25
   Insn 34(l0): point = 27
   Insn 32(l0): point = 29
   Insn 27(l0): point = 31
   Insn 21(l0): point = 33
   Insn 19(l0): point = 36
   Insn 18(l0): point = 38
   Insn 17(l0): point = 40
   Insn 15(l0): point = 43
   Insn 14(l0): point = 45
   Insn 13(l0): point = 47
   Insn 84(l0): point = 49
   Insn 83(l0): point = 51
   Insn 8(l0): point = 54
   Insn 7(l0): point = 56
   Insn 81(l1): point = 59
   Insn 53(l1): point = 62
   Insn 55(l1): point = 64
   Insn 52(l1): point = 66
   Insn 45(l1): point = 69
   Insn 44(l1): point = 71
   Insn 42(l1): point = 73
   Insn 41(l1): point = 75
   Insn 39(l1): point = 78
   Insn 38(l1): point = 80
   Insn 36(l1): point = 82
   Insn 35(l1): point = 84
 a0(r138): [8..10] [3..5]
 a1(r151): [14..15]
 a2(r145): [16..33]
 a3(r148): [18..21]
 a4(r149): [20..31]
 a5(r146): [24..25]
 a6(r154): [13..27]
 a7(r136): [13..29]
 a8(r141): [34..56]
 a9(r139): [39..40]
 a10(r144): [46..47]
 a11(r142): [48..51]
 a12(r136): [59..86]
 a13(r154): [59..86]
Compressing live ranges: from 87 to 27 - 31%
Ranges after the compression:
 a0(r138): [2..3] [0..1]
 a1(r151): [5..6]
 a2(r145): [7..16]
 a3(r148): [8..10]
 a4(r149): [9..15]
 a5(r146): [11..12]
 a6(r154): [25..26] [4..13]
 a7(r136): [25..26] [4..14]
 a8(r141): [17..24]
 a9(r139): [18..19]
 a10(r144): [20..21]
 a11(r142): [22..23]
+++Allocating 88 bytes for conflict table (uncompressed size 112)
;; a0(r138,l0) conflicts:
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a1(r151,l0) conflicts: a6(r154,l0) a7(r136,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a2(r145,l0) conflicts: a6(r154,l0) a7(r136,l0) a3(r148,l0) a4(r149,l0) a5(r146,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a3(r148,l0) conflicts: a6(r154,l0) a7(r136,l0) a2(r145,l0) a4(r149,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a4(r149,l0) conflicts: a6(r154,l0) a7(r136,l0) a2(r145,l0) a3(r148,l0) a5(r146,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a5(r146,l0) conflicts: a6(r154,l0) a7(r136,l0) a2(r145,l0) a4(r149,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a6(r154,l0) conflicts: a7(r136,l0) a1(r151,l0) a2(r145,l0) a3(r148,l0) a4(r149,l0) a5(r146,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14
;; a7(r136,l0) conflicts: a6(r154,l0) a1(r151,l0) a2(r145,l0) a3(r148,l0) a4(r149,l0) a5(r146,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14
;; a8(r141,l0) conflicts: a9(r139,l0) a10(r144,l0) a11(r142,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a9(r139,l0) conflicts: a8(r141,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a10(r144,l0) conflicts: a8(r141,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a11(r142,l0) conflicts: a8(r141,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

  regions=2, blocks=13, points=27
    allocnos=14, copies=0, conflicts=3, ranges=15

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 12 11 8 10 9 7 6 5 4 3 2
    all: 0r138 1r151 2r145 3r148 4r149 5r146 6r154 7r136 8r141 9r139 10r144 11r142
    modified regnos: 136 138 139 141 142 144 145 146 148 149 151 154
    border:
    Pressure: GENERAL_REGS=5
    Reg 138 of GENERAL_REGS has 1 regs less
    Reg 154 of GENERAL_REGS has 2 regs less
    Reg 136 of GENERAL_REGS has 2 regs less
    Reg 141 of GENERAL_REGS has 1 regs less
    Reg 139 of GENERAL_REGS has 1 regs less
    Reg 144 of GENERAL_REGS has 1 regs less
    Reg 142 of GENERAL_REGS has 1 regs less
      Pushing a5(r146,l0)
      Pushing a3(r148,l0)
      Pushing a1(r151,l0)
      Pushing a4(r149,l0)
      Pushing a2(r145,l0)
      Pushing a10(r144,l0)
      Pushing a9(r139,l0)
      Pushing a0(r138,l0)
      Pushing a11(r142,l0)
      Pushing a8(r141,l0)
      Pushing a6(r154,l0)
      Pushing a7(r136,l0)
      Popping a7(r136,l0)  -- assign reg 4
      Popping a6(r154,l0)  -- assign reg 5
      Popping a8(r141,l0)  -- assign reg 0
      Popping a11(r142,l0)  -- assign reg 3
      Popping a0(r138,l0)  -- assign reg 0
      Popping a9(r139,l0)  -- assign reg 3
      Popping a10(r144,l0)  -- assign reg 3
      Popping a2(r145,l0)  -- assign reg 3
      Popping a4(r149,l0)  -- assign reg 2
      Popping a1(r151,l0)  -- assign reg 3
      Popping a3(r148,l0)  -- assign reg 1
      Popping a5(r146,l0)  -- assign reg 1
Disposition:
    7:r136 l0     4    0:r138 l0     0    9:r139 l0     3    8:r141 l0     0
   11:r142 l0     3   10:r144 l0     3    2:r145 l0     3    5:r146 l0     1
    3:r148 l0     1    4:r149 l0     2    1:r151 l0     3    6:r154 l0     5
New iteration of spill/restore move
+++Costs: overall -2250, reg -2250, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=7, live_throughout: 13, 14, dead_or_set: 0, 141
insn=8, live_throughout: 13, 14, 141, dead_or_set: 
insn=83, live_throughout: 13, 14, 141, dead_or_set: 142
insn=84, live_throughout: 13, 14, 141, dead_or_set: 142
insn=13, live_throughout: 13, 14, 141, dead_or_set: 142, 144
insn=14, live_throughout: 13, 14, 141, dead_or_set: 144
insn=15, live_throughout: 13, 14, 141, dead_or_set: 
insn=17, live_throughout: 13, 14, 141, dead_or_set: 139
insn=18, live_throughout: 13, 14, 141, dead_or_set: 139
insn=19, live_throughout: 13, 14, 141, dead_or_set: 
insn=21, live_throughout: 13, dead_or_set: 141, 145
insn=27, live_throughout: 13, 145, dead_or_set: 149
insn=32, live_throughout: 13, 145, 149, dead_or_set: 136
insn=34, live_throughout: 13, 136, 145, 149, dead_or_set: 154
insn=22, live_throughout: 13, 136, 145, 149, 154, dead_or_set: 146
insn=23, live_throughout: 13, 136, 145, 149, 154, dead_or_set: 146
insn=25, live_throughout: 13, 136, 145, 149, 154, dead_or_set: 148
insn=28, live_throughout: 13, 136, 145, 148, 154, dead_or_set: 149
insn=26, live_throughout: 13, 136, 145, 154, dead_or_set: 148
insn=30, live_throughout: 13, 136, 154, dead_or_set: 145, 151
insn=31, live_throughout: 13, 136, 154, dead_or_set: 151
insn=56, live_throughout: 13, 136, 154, dead_or_set: 
insn=35, live_throughout: 13, 136, 154, dead_or_set: 0
insn=36, live_throughout: 13, 136, 154, dead_or_set: 0, 14
insn=38, live_throughout: 13, 14, 136, 154, dead_or_set: 0
insn=39, live_throughout: 13, 14, 136, 154, dead_or_set: 
insn=41, live_throughout: 13, 136, 154, dead_or_set: 0
insn=42, live_throughout: 13, 136, 154, dead_or_set: 0, 14
insn=44, live_throughout: 13, 14, 136, 154, dead_or_set: 0
insn=45, live_throughout: 13, 14, 136, 154, dead_or_set: 
insn=47, live_throughout: 13, 14, dead_or_set: 138
insn=79, live_throughout: 13, 14, 138, dead_or_set: 
insn=50, live_throughout: 13, 14, 136, 154, dead_or_set: 
insn=52, live_throughout: 13, 14, 136, 154, dead_or_set: 
insn=55, live_throughout: 13, 14, 24, 154, dead_or_set: 136
insn=53, live_throughout: 13, 14, 136, 154, dead_or_set: 
insn=81, live_throughout: 13, 136, 154, dead_or_set: 
insn=59, live_throughout: 13, 14, dead_or_set: 
insn=61, live_throughout: 13, 14, dead_or_set: 138
insn=62, live_throughout: 13, 14, 138, dead_or_set: 
insn=68, live_throughout: 13, 14, dead_or_set: 0, 138
insn=74, live_throughout: 0, 13, 14, dead_or_set: 
init_insns for 146: (insn_list:REG_DEP_TRUE 22 (nil))
init_insns for 148: (insn_list:REG_DEP_TRUE 26 (nil))
init_insns for 149: (insn_list:REG_DEP_TRUE 27 (nil))
init_insns for 151: (insn_list:REG_DEP_TRUE 31 (nil))
init_insns for 154: (insn_list:REG_DEP_TRUE 34 (nil))
changing reg in insn 32
changing reg in insn 55
changing reg in insn 55
changing reg in insn 52
changing reg in insn 61
changing reg in insn 47
changing reg in insn 68
changing reg in insn 17
changing reg in insn 18
changing reg in insn 7
changing reg in insn 21
changing reg in insn 17
changing reg in insn 14
changing reg in insn 84
changing reg in insn 83
changing reg in insn 84
changing reg in insn 13
changing reg in insn 13
changing reg in insn 14
changing reg in insn 21
changing reg in insn 30
changing reg in insn 25
changing reg in insn 22
changing reg in insn 22
changing reg in insn 22
changing reg in insn 23
changing reg in insn 25
changing reg in insn 26
changing reg in insn 27
changing reg in insn 32
changing reg in insn 28
changing reg in insn 30
changing reg in insn 31
changing reg in insn 34
changing reg in insn 35
Spilling for insn 83.
Using reg 2 for reload 0
Spilling for insn 23.
Spilling for insn 28.
Spilling for insn 26.
Spilling for insn 31.

Reloads for insn # 83
Reload 0: reload_in (SI) = (reg/f:SI 13 sp)
	GENERAL_REGS, RELOAD_FOR_INPUT (opnum = 1)
	reload_in_reg: (reg/f:SI 13 sp)
	reload_reg_rtx: (reg:SI 2 r2)

Reloads for insn # 23
Reload 0: reload_out (SI) = (mem/s/j/c:SI (reg/f:SI 13 sp) [0 frame.fp+0 S4 A64])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j/c:SI (reg/f:SI 13 sp) [0 frame.fp+0 S4 A64])

Reloads for insn # 28
Reload 0: reload_out (SI) = (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 8 [0x8])) [0 frame.lr+0 S4 A64])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 8 [0x8])) [0 frame.lr+0 S4 A64])

Reloads for insn # 26
Reload 0: reload_out (SI) = (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 4 [0x4])) [0 frame.sp+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 4 [0x4])) [0 frame.sp+0 S4 A32])

Reloads for insn # 31
Reload 0: reload_out (SI) = (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 12 [0xc])) [0 frame.pc+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 12 [0xc])) [0 frame.pc+0 S4 A32])
deleting insn with uid = 68.


try_optimize_cfg iteration 1

Simplifying condjump 53 around jump 81
deleting insn with uid = 54.
deleting insn with uid = 81.
deleting insn with uid = 82.
deleting block 10


try_optimize_cfg iteration 2



try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 36.
verify found no changes in insn with uid = 42.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 12 n_edges 17 count 22 (  1.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 12 n_edges 17 count 25 (  2.1)


get_wchan

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={8d,11u} r1={5d,2u} r2={5d,3u} r3={9d,8u,1d} r4={2d,2u} r5={1d} r12={3d} r13={1d,22u,2d} r14={3d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={8d,6u} r25={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} 
;;    total ref usage 325{265d,55u,5e} in 37{35 regular + 2 call} insns.
(note 2 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 24 [cc]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 2 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 5 4 2 NOTE_INSN_DELETED)

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 8 2 arch/arm/kernel/process.c:584 (parallel [
            (set (reg:CC 24 cc)
                (compare:CC (reg:SI 0 r0 [ p ])
                    (const_int 0 [0x0])))
            (set (reg/v/f:SI 0 r0 [orig:141 p ] [141])
                (reg:SI 0 r0 [ p ]))
        ]) 174 {*movsi_compare0} (nil))

(jump_insn 8 7 9 2 arch/arm/kernel/process.c:584 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 59)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 1014 [0x3f6])
        (nil)))
;; End of basic block 2 -> ( 11 3)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  11 [10.1%] 
;; Succ edge  3 [89.9%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  2 [89.9%]  (fallthru)
(note 9 8 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 11 9 87 3 NOTE_INSN_DELETED)

(insn 87 11 83 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 2 r2)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn 83 87 84 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 3 r3 [142])
        (and:SI (reg:SI 2 r2)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 84 83 13 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 3 r3 [142])
        (and:SI (reg:SI 3 r3 [142])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 13 84 14 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 3 r3 [orig:144 <variable>.task ] [144])
        (mem/s/f/j:SI (plus:SI (reg:SI 3 r3 [142])
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 14 13 15 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 0 r0 [orig:141 p ] [141])
            (reg/f:SI 3 r3 [orig:144 <variable>.task ] [144]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 15 14 16 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 59)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 1014 [0x3f6])
        (nil)))
;; End of basic block 3 -> ( 11 4)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  11 [10.1%] 
;; Succ edge  4 [89.9%]  (fallthru)

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  3 [89.9%]  (fallthru)
(note 16 15 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 17 16 18 4 arch/arm/kernel/process.c:584 discrim 2 (set (reg:SI 3 r3 [orig:139 D.26139 ] [139])
        (mem/s/v/j:SI (reg/v/f:SI 0 r0 [orig:141 p ] [141]) [0 <variable>.state+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 18 17 19 4 arch/arm/kernel/process.c:584 discrim 2 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [orig:139 D.26139 ] [139])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 19 18 20 4 arch/arm/kernel/process.c:584 discrim 2 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 59)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))
;; End of basic block 4 -> ( 11 5)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  11 [39.0%] 
;; Succ edge  5 [61.0%]  (fallthru)

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5]
;; live  in  	 0 [r0] 13 [sp]
;; live  gen 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5]
;; live  kill	

;; Pred edge  4 [61.0%]  (fallthru)
(note 20 19 21 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 21 20 27 5 arch/arm/kernel/process.c:587 (set (reg/f:SI 3 r3 [orig:145 <variable>.stack ] [145])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 0 r0 [orig:141 p ] [141])
                (const_int 4 [0x4])) [0 <variable>.stack+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 27 21 32 5 arch/arm/kernel/process.c:589 (set (reg:SI 2 r2 [149])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 0 [0x0])
        (nil)))

(insn 32 27 34 5 arch/arm/kernel/process.c:583 (set (reg/v:SI 4 r4 [orig:136 count ] [136])
        (reg:SI 2 r2 [149])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 34 32 22 5 arch/arm/kernel/process.c:592 (set (reg/f:SI 5 r5 [154])
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (plus:SI (reg/f:SI 13 sp)
            (const_int 0 [0x0]))
        (nil)))

(insn 22 34 23 5 arch/arm/kernel/process.c:587 (set (reg:SI 1 r1 [orig:146 <variable>.cpu_context.fp ] [146])
        (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:145 <variable>.stack ] [145])
                (const_int 56 [0x38])) [0 <variable>.cpu_context.fp+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:145 <variable>.stack ] [145])
                (const_int 56 [0x38])) [0 <variable>.cpu_context.fp+0 S4 A64])
        (nil)))

(insn 23 22 25 5 arch/arm/kernel/process.c:587 (set (mem/s/j/c:SI (reg/f:SI 13 sp) [0 frame.fp+0 S4 A64])
        (reg:SI 1 r1 [orig:146 <variable>.cpu_context.fp ] [146])) 167 {*arm_movsi_insn} (nil))

(insn 25 23 28 5 arch/arm/kernel/process.c:588 (set (reg:SI 1 r1 [orig:148 <variable>.cpu_context.sp ] [148])
        (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:145 <variable>.stack ] [145])
                (const_int 60 [0x3c])) [0 <variable>.cpu_context.sp+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -12 [0xfffffffffffffff4])) [0 frame.sp+0 S4 A32])
        (nil)))

(insn 28 25 26 5 arch/arm/kernel/process.c:589 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [0 frame.lr+0 S4 A64])
        (reg:SI 2 r2 [149])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 26 28 30 5 arch/arm/kernel/process.c:588 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 frame.sp+0 S4 A32])
        (reg:SI 1 r1 [orig:148 <variable>.cpu_context.sp ] [148])) 167 {*arm_movsi_insn} (nil))

(insn 30 26 31 5 arch/arm/kernel/process.c:590 (set (reg:SI 3 r3 [orig:151 <variable>.cpu_context.pc ] [151])
        (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:145 <variable>.stack ] [145])
                (const_int 64 [0x40])) [0 <variable>.cpu_context.pc+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 frame.pc+0 S4 A32])
        (nil)))

(insn 31 30 56 5 arch/arm/kernel/process.c:590 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 12 [0xc])) [0 frame.pc+0 S4 A32])
        (reg:SI 3 r3 [orig:151 <variable>.cpu_context.pc ] [151])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 5 -> ( 6)
;; lr  out 	 4 [r4] 13 [sp]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 5 9) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	 0 [r0] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  5 [100.0%]  (fallthru)
;; Pred edge  9 [94.1%] 
(code_label 56 31 33 6 48 "" [1 uses])

(note 33 56 37 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note 37 33 35 6 NOTE_INSN_DELETED)

(insn 35 37 36 6 arch/arm/kernel/process.c:592 (set (reg:SI 0 r0)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 13 sp)
            (const_int 0 [0x0]))
        (nil)))

(call_insn 36 35 38 6 arch/arm/kernel/process.c:592 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("unwind_frame") [flags 0x41] <function_decl 0x114f2100 unwind_frame>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 38 36 39 6 arch/arm/kernel/process.c:593 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 39 38 40 6 arch/arm/kernel/process.c:593 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 59)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 300 [0x12c])
        (nil)))
;; End of basic block 6 -> ( 11 7)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  11 [3.0%]  (loop_exit)
;; Succ edge  7 [97.0%]  (fallthru)

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	 0 [r0] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  6 [97.0%]  (fallthru)
(note 40 39 43 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(note 43 40 41 7 NOTE_INSN_DELETED)

(insn 41 43 42 7 arch/arm/kernel/process.c:595 (set (reg:SI 0 r0)
        (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 12 [0xc])) [0 frame.pc+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn 42 41 44 7 arch/arm/kernel/process.c:595 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("in_sched_functions") [flags 0x41] <function_decl 0x10f44c00 in_sched_functions>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 44 42 45 7 arch/arm/kernel/process.c:595 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 45 44 46 7 arch/arm/kernel/process.c:595 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 50)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9700 [0x25e4])
        (nil)))
;; End of basic block 7 -> ( 8 9)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  8 [3.0%]  (fallthru,loop_exit)
;; Succ edge  9 [97.0%] 

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  7 [3.0%]  (fallthru,loop_exit)
(note 46 45 47 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 47 46 79 8 arch/arm/kernel/process.c:596 (set (reg:SI 0 r0 [orig:138 D.26140 ] [138])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 12 [0xc])) [0 frame.pc+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(jump_insn 79 47 80 8 arch/arm/kernel/process.c:596 (set (pc)
        (label_ref 62)) 242 {*arm_jump} (nil))
;; End of basic block 8 -> ( 12)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp]


;; Succ edge  12 [100.0%] 

(barrier 80 79 50)

;; Start of basic block ( 7) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 4 [r4] 24 [cc]
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	 4 [r4] 24 [cc]
;; live  kill	

;; Pred edge  7 [97.0%] 
(code_label 50 80 51 9 46 "" [1 uses])

(note 51 50 52 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 52 51 55 9 arch/arm/kernel/process.c:597 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 4 r4 [orig:136 count ] [136])
            (const_int 16 [0x10]))) 219 {*arm_cmpsi_insn} (nil))

(insn 55 52 53 9 arch/arm/kernel/process.c:597 (set (reg/v:SI 4 r4 [orig:136 count ] [136])
        (plus:SI (reg/v:SI 4 r4 [orig:136 count ] [136])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(jump_insn 53 55 59 9 arch/arm/kernel/process.c:597 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 56)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9412 [0x24c4])
        (nil)))
;; End of basic block 9 -> ( 6 11)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  6 [94.1%] 
;; Succ edge  11 [5.9%]  (fallthru,loop_exit)

;; Start of basic block ( 3 6 4 2 9) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  3 [10.1%] 
;; Pred edge  6 [3.0%]  (loop_exit)
;; Pred edge  4 [39.0%] 
;; Pred edge  2 [10.1%] 
;; Pred edge  9 [5.9%]  (fallthru,loop_exit)
(code_label 59 53 60 11 45 "" [4 uses])

(note 60 59 61 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 61 60 62 11 arch/arm/kernel/process.c:585 (set (reg:SI 0 r0 [orig:138 D.26140 ] [138])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 11 -> ( 12)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  12 [100.0%]  (fallthru)

;; Start of basic block ( 11 8) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  11 [100.0%]  (fallthru)
;; Pred edge  8 [100.0%] 
(code_label 62 61 63 12 47 "" [1 uses])

(note 63 62 74 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 74 63 85 12 arch/arm/kernel/process.c:599 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 12 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 85 74 86 NOTE_INSN_DELETED)

(note 86 85 0 NOTE_INSN_DELETED)


;; Function kernel_thread (kernel_thread)[0:1363]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
scanning new insn with uid = 50.
verify found no changes in insn with uid = 50.
deleting insn with uid = 20.
scanning new insn with uid = 51.
verify found no changes in insn with uid = 51.
deleting insn with uid = 18.
scanning new insn with uid = 52.
verify found no changes in insn with uid = 52.
deleting insn with uid = 16.
scanning new insn with uid = 53.
verify found no changes in insn with uid = 53.
deleting insn with uid = 14.
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)

Pass 0 for finding allocno costs

    a0 (r146,l0) best GENERAL_REGS, cover GENERAL_REGS
    a8 (r144,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r142,l0) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r141,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r140,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r139,l0) best GENERAL_REGS, cover GENERAL_REGS
    a7 (r138,l0) best GENERAL_REGS, cover GENERAL_REGS
    a9 (r137,l0) best GENERAL_REGS, cover GENERAL_REGS
    a6 (r136,l0) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r146,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a1(r142,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a6(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a7(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a8(r144,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a9(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000


Pass 1 for finding allocno costs

    r146: preferred GENERAL_REGS, alternative NO_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS

  a0(r146,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a1(r142,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a6(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a7(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a8(r144,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a9(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000

   Insn 45(l0): point = 0
   Insn 33(l0): point = 2
   Insn 28(l0): point = 4
   Insn 26(l0): point = 6
   Insn 21(l0): point = 8
   Insn 50(l0): point = 10
   Insn 19(l0): point = 12
   Insn 51(l0): point = 14
   Insn 17(l0): point = 16
   Insn 52(l0): point = 18
   Insn 15(l0): point = 20
   Insn 53(l0): point = 22
   Insn 13(l0): point = 24
   Insn 12(l0): point = 26
   Insn 32(l0): point = 28
   Insn 31(l0): point = 30
   Insn 29(l0): point = 32
   Insn 30(l0): point = 34
   Insn 22(l0): point = 36
   Insn 25(l0): point = 38
   Insn 11(l0): point = 40
   Insn 4(l0): point = 42
   Insn 10(l0): point = 44
   Insn 9(l0): point = 46
   Insn 3(l0): point = 48
   Insn 2(l0): point = 50
   Insn 8(l0): point = 52
 a0(r146): [5..38]
 a1(r142): [9..10]
 a2(r141): [13..14]
 a3(r140): [17..18]
 a4(r139): [21..22]
 a5(r135): [25..50]
 a6(r136): [27..48]
 a7(r138): [31..52]
 a8(r144): [33..36]
 a9(r137): [37..42]
Compressing live ranges: from 55 to 20 - 36%
Ranges after the compression:
 a0(r146): [0..15]
 a1(r142): [1..2]
 a2(r141): [3..4]
 a3(r140): [5..6]
 a4(r139): [7..8]
 a5(r135): [9..18]
 a6(r136): [10..17]
 a7(r138): [11..19]
 a8(r144): [12..13]
 a9(r137): [14..16]
+++Allocating 80 bytes for conflict table (uncompressed size 80)
;; a0(r146,l0) conflicts: a1(r142,l0) a2(r141,l0) a3(r140,l0) a4(r139,l0) a5(r135,l0) a6(r136,l0) a7(r138,l0) a8(r144,l0) a9(r137,l0)
;;     total conflict hard regs: 0-3
;;     conflict hard regs: 0-3
;; a1(r142,l0) conflicts: a0(r146,l0)
;;     total conflict hard regs: 0-3
;;     conflict hard regs: 0-3
;; a2(r141,l0) conflicts: a0(r146,l0)
;;     total conflict hard regs: 0-3
;;     conflict hard regs: 0-3
;; a3(r140,l0) conflicts: a0(r146,l0)
;;     total conflict hard regs: 0-3
;;     conflict hard regs: 0-3
;; a4(r139,l0) conflicts: a0(r146,l0)
;;     total conflict hard regs: 0-3
;;     conflict hard regs: 0-3
;; a5(r135,l0) conflicts: a0(r146,l0) a6(r136,l0) a7(r138,l0) a8(r144,l0) a9(r137,l0)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0-3 14
;; a6(r136,l0) conflicts: a0(r146,l0) a5(r135,l0) a7(r138,l0) a8(r144,l0) a9(r137,l0)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0-3 14
;; a7(r138,l0) conflicts: a0(r146,l0) a5(r135,l0) a6(r136,l0) a8(r144,l0) a9(r137,l0)
;;     total conflict hard regs: 0-2 14
;;     conflict hard regs: 0-2 14
;; a8(r144,l0) conflicts: a0(r146,l0) a5(r135,l0) a6(r136,l0) a7(r138,l0)
;;     total conflict hard regs: 1
;;     conflict hard regs: 1
;; a9(r137,l0) conflicts: a0(r146,l0) a5(r135,l0) a6(r136,l0) a7(r138,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14

  cp0:a8(r144)<->a9(r137)@125:shuffle
  regions=1, blocks=3, points=20
    allocnos=10, copies=1, conflicts=4, ranges=10

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all: 0r146 1r142 2r141 3r140 4r139 5r135 6r136 7r138 8r144 9r137
    modified regnos: 135 136 137 138 139 140 141 142 144 146
    border:
    Pressure: GENERAL_REGS=7
    Reg 146 of GENERAL_REGS has 4 regs less
    Reg 142 of GENERAL_REGS has 4 regs less
    Reg 141 of GENERAL_REGS has 4 regs less
    Reg 140 of GENERAL_REGS has 4 regs less
    Reg 139 of GENERAL_REGS has 4 regs less
    Reg 135 of GENERAL_REGS has 5 regs less
    Reg 136 of GENERAL_REGS has 5 regs less
    Reg 138 of GENERAL_REGS has 4 regs less
    Reg 144 of GENERAL_REGS has 1 regs less
    Reg 137 of GENERAL_REGS has 3 regs less
      Pushing a8(r144,l0)
      Pushing a9(r137,l0)
      Pushing a4(r139,l0)
      Pushing a3(r140,l0)
      Pushing a2(r141,l0)
      Pushing a1(r142,l0)
      Pushing a7(r138,l0)
      Pushing a0(r146,l0)
      Pushing a6(r136,l0)
      Pushing a5(r135,l0)
      Popping a5(r135,l0)  -- assign reg 4
      Popping a6(r136,l0)  -- assign reg 5
      Popping a0(r146,l0)  -- assign reg 12
      Popping a7(r138,l0)  -- assign reg 6
      Popping a1(r142,l0)  -- assign reg 14
      Popping a2(r141,l0)  -- assign reg 14
      Popping a3(r140,l0)  -- assign reg 14
      Popping a4(r139,l0)  -- assign reg 14
      Popping a9(r137,l0)  -- assign reg 7
      Popping a8(r144,l0)  -- assign reg 0
Disposition:
    5:r135 l0     4    6:r136 l0     5    9:r137 l0     7    7:r138 l0     6
    4:r139 l0    14    3:r140 l0    14    2:r141 l0    14    1:r142 l0    14
    8:r144 l0     0    0:r146 l0    12
New iteration of spill/restore move
+++Costs: overall -250, reg -250, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=8, live_throughout: 0, 1, 2, 13, dead_or_set: 138
insn=2, live_throughout: 1, 2, 13, 138, dead_or_set: 0, 135
insn=3, live_throughout: 2, 13, 135, 138, dead_or_set: 1, 136
insn=9, live_throughout: 2, 13, 135, 136, 138, dead_or_set: 0
insn=10, live_throughout: 0, 2, 13, 135, 136, 138, dead_or_set: 1
insn=4, live_throughout: 0, 1, 13, 135, 136, 138, dead_or_set: 2, 137
insn=11, live_throughout: 13, 135, 136, 137, 138, dead_or_set: 0, 1, 14
insn=25, live_throughout: 13, 135, 136, 137, 138, dead_or_set: 146
insn=22, live_throughout: 13, 135, 136, 138, 146, dead_or_set: 137, 144
insn=30, live_throughout: 13, 135, 136, 138, 144, 146, dead_or_set: 1
insn=29, live_throughout: 1, 13, 135, 136, 138, 146, dead_or_set: 0, 144
insn=31, live_throughout: 0, 1, 13, 135, 136, 146, dead_or_set: 2, 138
insn=32, live_throughout: 0, 1, 2, 13, 135, 136, 146, dead_or_set: 3
insn=12, live_throughout: 0, 1, 2, 3, 13, 135, 146, dead_or_set: 136
insn=13, live_throughout: 0, 1, 2, 3, 13, 146, dead_or_set: 135
insn=53, live_throughout: 0, 1, 2, 3, 13, 146, dead_or_set: 139
insn=15, live_throughout: 0, 1, 2, 3, 13, 146, dead_or_set: 139
insn=52, live_throughout: 0, 1, 2, 3, 13, 146, dead_or_set: 140
insn=17, live_throughout: 0, 1, 2, 3, 13, 146, dead_or_set: 140
insn=51, live_throughout: 0, 1, 2, 3, 13, 146, dead_or_set: 141
insn=19, live_throughout: 0, 1, 2, 3, 13, 146, dead_or_set: 141
insn=50, live_throughout: 0, 1, 2, 3, 13, 146, dead_or_set: 142
insn=21, live_throughout: 0, 1, 2, 3, 13, 146, dead_or_set: 142
insn=26, live_throughout: 0, 1, 2, 3, 13, 146, dead_or_set: 
insn=28, live_throughout: 0, 1, 2, 3, 13, dead_or_set: 146
insn=33, live_throughout: 13, dead_or_set: 0, 1, 2, 3, 14
insn=45, live_throughout: 0, 13, 14, dead_or_set: 
init_insns for 138: (insn_list:REG_DEP_TRUE 8 (nil))
init_insns for 139: (insn_list:REG_DEP_TRUE 53 (nil))
init_insns for 140: (insn_list:REG_DEP_TRUE 52 (nil))
init_insns for 141: (insn_list:REG_DEP_TRUE 51 (nil))
init_insns for 142: (insn_list:REG_DEP_TRUE 50 (nil))
init_insns for 146: (insn_list:REG_DEP_TRUE 25 (nil))
changing reg in insn 2
changing reg in insn 13
changing reg in insn 3
changing reg in insn 12
changing reg in insn 4
changing reg in insn 22
changing reg in insn 8
changing reg in insn 31
changing reg in insn 9
changing reg in insn 53
changing reg in insn 15
changing reg in insn 52
changing reg in insn 17
changing reg in insn 51
changing reg in insn 19
changing reg in insn 50
changing reg in insn 21
changing reg in insn 22
changing reg in insn 29
changing reg in insn 25
changing reg in insn 30
changing reg in insn 28
changing reg in insn 26
Spilling for insn 12.
Spilling for insn 13.
Spilling for insn 15.
Spilling for insn 17.
Spilling for insn 19.
Spilling for insn 21.
Spilling for insn 26.
Spilling for insn 28.

Reloads for insn # 12
Reload 0: reload_out (SI) = (mem/s/j:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 24 [0x18])) [0 regs.uregs+16 S4 A64])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 24 [0x18])) [0 regs.uregs+16 S4 A64])

Reloads for insn # 13
Reload 0: reload_out (SI) = (mem/s/j:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 28 [0x1c])) [0 regs.uregs+20 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 28 [0x1c])) [0 regs.uregs+20 S4 A32])

Reloads for insn # 15
Reload 0: reload_out (SI) = (mem/s/j:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 32 [0x20])) [0 regs.uregs+24 S4 A64])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 32 [0x20])) [0 regs.uregs+24 S4 A64])

Reloads for insn # 17
Reload 0: reload_out (SI) = (mem/s/j:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 36 [0x24])) [0 regs.uregs+28 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 36 [0x24])) [0 regs.uregs+28 S4 A32])

Reloads for insn # 19
Reload 0: reload_out (SI) = (mem/s/j:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 68 [0x44])) [0 regs.uregs+60 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 68 [0x44])) [0 regs.uregs+60 S4 A32])

Reloads for insn # 21
Reload 0: reload_out (SI) = (mem/s/j:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 72 [0x48])) [0 regs.uregs+64 S4 A64])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 72 [0x48])) [0 regs.uregs+64 S4 A64])

Reloads for insn # 26
Reload 0: reload_out (SI) = (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem:SI (reg/f:SI 13 sp) [0 S4 A32])

Reloads for insn # 28
Reload 0: reload_out (SI) = (mem:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 4 [0x4])) [0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 4 [0x4])) [0 S4 A32])


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 11.
verify found no changes in insn with uid = 33.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


kernel_thread

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 7[r7] 12[ip] 13[sp] 14[lr]
;;  ref usage 	r0={6d,6u} r1={5d,4u} r2={4d,2u} r3={4d,1u} r4={1d,1u} r5={1d,1u} r6={1d,2u} r7={1d,1u} r12={4d,3u} r13={1d,13u,1d} r14={7d,5u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} 
;;    total ref usage 299{257d,39u,3e} in 27{25 regular + 2 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 12 [ip] 14 [lr]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 1 5 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 5 6 23 2 NOTE_INSN_FUNCTION_BEG)

(note 23 5 8 2 NOTE_INSN_DELETED)

(insn 8 23 2 2 arch/arm/kernel/process.c:567 discrim 1 (set (reg/f:SI 6 r6 [138])
        (plus:SI (reg/f:SI 13 sp)
            (const_int 8 [0x8]))) 4 {*arm_addsi3} (expr_list:REG_EQUIV (plus:SI (reg/f:SI 13 sp)
            (const_int 8 [0x8]))
        (nil)))

(insn 2 8 3 2 arch/arm/kernel/process.c:564 (set (reg/v/f:SI 4 r4 [orig:135 fn ] [135])
        (reg:SI 0 r0 [ fn ])) 167 {*arm_movsi_insn} (nil))

(insn 3 2 9 2 arch/arm/kernel/process.c:564 (set (reg/v/f:SI 5 r5 [orig:136 arg ] [136])
        (reg:SI 1 r1 [ arg ])) 167 {*arm_movsi_insn} (nil))

(insn 9 3 10 2 arch/arm/kernel/process.c:567 discrim 1 (set (reg:SI 0 r0)
        (reg/f:SI 6 r6 [138])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -72 [0xffffffffffffffb8]))
        (nil)))

(insn 10 9 4 2 arch/arm/kernel/process.c:567 discrim 1 (set (reg:SI 1 r1)
        (const_int 72 [0x48])) 167 {*arm_movsi_insn} (nil))

(insn 4 10 11 2 arch/arm/kernel/process.c:564 (set (reg/v:SI 7 r7 [orig:137 flags ] [137])
        (reg:SI 2 r2 [ flags ])) 167 {*arm_movsi_insn} (nil))

(call_insn 11 4 25 2 arch/arm/kernel/process.c:567 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("__memzero") [flags 0x41] <function_decl 0x10bb1200 __memzero>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 25 11 22 2 arch/arm/kernel/process.c:576 (set (reg:SI 12 ip [146])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 0 [0x0])
        (nil)))

(insn 22 25 30 2 arch/arm/kernel/process.c:576 (set (reg:SI 0 r0 [144])
        (ior:SI (reg/v:SI 7 r7 [orig:137 flags ] [137])
            (const_int 8388608 [0x800000]))) 89 {*arm_iorsi3} (nil))

(insn 30 22 29 2 arch/arm/kernel/process.c:576 (set (reg:SI 1 r1)
        (reg:SI 12 ip [146])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 29 30 31 2 arch/arm/kernel/process.c:576 (set (reg:SI 0 r0)
        (ior:SI (reg:SI 0 r0 [144])
            (const_int 256 [0x100]))) 89 {*arm_iorsi3} (nil))

(insn 31 29 32 2 arch/arm/kernel/process.c:576 (set (reg:SI 2 r2)
        (reg/f:SI 6 r6 [138])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -72 [0xffffffffffffffb8]))
        (nil)))

(insn 32 31 12 2 arch/arm/kernel/process.c:576 (set (reg:SI 3 r3)
        (reg:SI 1 r1)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 12 32 13 2 arch/arm/kernel/process.c:569 (set (mem/s/j:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 24 [0x18])) [0 regs.uregs+16 S4 A64])
        (reg/v/f:SI 5 r5 [orig:136 arg ] [136])) 167 {*arm_movsi_insn} (nil))

(insn 13 12 53 2 arch/arm/kernel/process.c:570 (set (mem/s/j:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 28 [0x1c])) [0 regs.uregs+20 S4 A32])
        (reg/v/f:SI 4 r4 [orig:135 fn ] [135])) 167 {*arm_movsi_insn} (nil))

(insn 53 13 15 2 arch/arm/kernel/process.c:571 (set (reg/f:SI 14 lr [139])
        (symbol_ref:SI ("kernel_thread_exit") [flags 0x41] <function_decl 0x11544100 kernel_thread_exit>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("kernel_thread_exit") [flags 0x41] <function_decl 0x11544100 kernel_thread_exit>)
        (nil)))

(insn 15 53 52 2 arch/arm/kernel/process.c:571 (set (mem/s/j:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 32 [0x20])) [0 regs.uregs+24 S4 A64])
        (reg/f:SI 14 lr [139])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("kernel_thread_exit") [flags 0x41] <function_decl 0x11544100 kernel_thread_exit>)
        (nil)))

(insn 52 15 17 2 arch/arm/kernel/process.c:572 (set (reg:SI 14 lr [140])
        (const_int 19 [0x13])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 19 [0x13])
        (nil)))

(insn 17 52 51 2 arch/arm/kernel/process.c:572 (set (mem/s/j:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 36 [0x24])) [0 regs.uregs+28 S4 A32])
        (reg:SI 14 lr [140])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 19 [0x13])
        (nil)))

(insn 51 17 19 2 arch/arm/kernel/process.c:573 (set (reg/f:SI 14 lr [141])
        (symbol_ref:SI ("kernel_thread_helper") [flags 0x41] <function_decl 0x11544080 kernel_thread_helper>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("kernel_thread_helper") [flags 0x41] <function_decl 0x11544080 kernel_thread_helper>)
        (nil)))

(insn 19 51 50 2 arch/arm/kernel/process.c:573 (set (mem/s/j:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 68 [0x44])) [0 regs.uregs+60 S4 A32])
        (reg/f:SI 14 lr [141])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("kernel_thread_helper") [flags 0x41] <function_decl 0x11544080 kernel_thread_helper>)
        (nil)))

(insn 50 19 21 2 arch/arm/kernel/process.c:574 (set (reg:SI 14 lr [142])
        (const_int 147 [0x93])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 147 [0x93])
        (nil)))

(insn 21 50 26 2 arch/arm/kernel/process.c:574 (set (mem/s/j:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 72 [0x48])) [0 regs.uregs+64 S4 A64])
        (reg:SI 14 lr [142])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 147 [0x93])
        (nil)))

(insn 26 21 28 2 arch/arm/kernel/process.c:576 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg:SI 12 ip [146])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 28 26 33 2 arch/arm/kernel/process.c:576 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 12 ip [146])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(call_insn 33 28 45 2 arch/arm/kernel/process.c:576 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("do_fork") [flags 0x41] <function_decl 0x10fdc100 do_fork>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 45 33 49 2 arch/arm/kernel/process.c:577 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 49 45 54 NOTE_INSN_DELETED)

(note 54 49 0 NOTE_INSN_DELETED)


;; Function dump_fpu (dump_fpu)[0:1362]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs

    a3 (r143,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r141,l0) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r138,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r134,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a1(r135,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:62000
  a2(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000


Pass 1 for finding allocno costs

    r143: preferred GENERAL_REGS, alternative NO_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS

  a0(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a1(r135,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:62000
  a2(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000

   Insn 42(l0): point = 0
   Insn 36(l0): point = 2
   Insn 26(l0): point = 5
   Insn 25(l0): point = 7
   Insn 24(l0): point = 9
   Insn 23(l0): point = 11
   Insn 17(l0): point = 14
   Insn 16(l0): point = 16
   Insn 12(l0): point = 18
   Insn 10(l0): point = 20
   Insn 47(l0): point = 22
   Insn 3(l0): point = 24
   Insn 46(l0): point = 26
 a0(r134): [3..16]
 a1(r135): [10..26]
 a2(r138): [12..24]
 a3(r143): [17..18]
 a4(r141): [17..20]
Compressing live ranges: from 29 to 9 - 31%
Ranges after the compression:
 a0(r134): [0..3]
 a1(r135): [1..8]
 a2(r138): [2..7]
 a3(r143): [4..5]
 a4(r141): [4..6]
+++Allocating 40 bytes for conflict table (uncompressed size 40)
;; a0(r134,l0) conflicts: a1(r135,l0) a2(r138,l0)
;;     total conflict hard regs: 0-2 14
;;     conflict hard regs: 0-2 14
;; a1(r135,l0) conflicts: a0(r134,l0) a2(r138,l0) a3(r143,l0) a4(r141,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a2(r138,l0) conflicts: a0(r134,l0) a1(r135,l0) a3(r143,l0) a4(r141,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a3(r143,l0) conflicts: a1(r135,l0) a2(r138,l0) a4(r141,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a4(r141,l0) conflicts: a1(r135,l0) a2(r138,l0) a3(r143,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

  cp0:a0(r134)<->a4(r141)@125:shuffle
  cp1:a0(r134)<->a3(r143)@125:shuffle
  regions=1, blocks=5, points=9
    allocnos=5, copies=2, conflicts=0, ranges=5

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 4 3 2
    all: 0r134 1r135 2r138 3r143 4r141
    modified regnos: 134 135 138 141 143
    border:
    Pressure: GENERAL_REGS=5
    Reg 134 of GENERAL_REGS has 4 regs less
    Reg 135 of GENERAL_REGS has 3 regs less
    Reg 138 of GENERAL_REGS has 1 regs less
    Reg 143 of GENERAL_REGS has 1 regs less
    Reg 141 of GENERAL_REGS has 1 regs less
      Pushing a2(r138,l0)
      Pushing a4(r141,l0)
      Pushing a3(r143,l0)
      Pushing a1(r135,l0)
      Pushing a0(r134,l0)
      Popping a0(r134,l0)  -- assign reg 4
      Popping a1(r135,l0)  -- assign reg 3
      Popping a3(r143,l0)  -- assign reg 2
      Popping a4(r141,l0)  -- assign reg 4
      Popping a2(r138,l0)  -- assign reg 1
Disposition:
    0:r134 l0     4    1:r135 l0     3    2:r138 l0     1    4:r141 l0     4
    3:r143 l0     2
New iteration of spill/restore move
+++Costs: overall -2000, reg -2000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=46, live_throughout: 1, 13, 14, dead_or_set: 135
insn=3, live_throughout: 13, 14, 135, dead_or_set: 1, 138
insn=47, live_throughout: 13, 14, 138, dead_or_set: 135
insn=10, live_throughout: 13, 14, 135, 138, dead_or_set: 141
insn=12, live_throughout: 13, 14, 135, 138, 141, dead_or_set: 143
insn=16, live_throughout: 13, 14, 135, 138, dead_or_set: 134, 141, 143
insn=17, live_throughout: 13, 14, 134, 135, 138, dead_or_set: 
insn=23, live_throughout: 13, 134, 135, dead_or_set: 0, 138
insn=24, live_throughout: 0, 13, 134, dead_or_set: 1, 135
insn=25, live_throughout: 0, 1, 13, 134, dead_or_set: 2
insn=26, live_throughout: 13, 134, dead_or_set: 0, 1, 2, 14
insn=28, live_throughout: 13, 14, 134, dead_or_set: 
insn=36, live_throughout: 13, 14, dead_or_set: 0, 134
insn=42, live_throughout: 0, 13, 14, dead_or_set: 
changing reg in insn 16
changing reg in insn 36
changing reg in insn 47
changing reg in insn 46
changing reg in insn 47
changing reg in insn 24
changing reg in insn 12
changing reg in insn 10
changing reg in insn 3
changing reg in insn 23
changing reg in insn 10
changing reg in insn 16
changing reg in insn 16
changing reg in insn 12
changing reg in insn 16
changing reg in insn 16
Spilling for insn 46.
Using reg 2 for reload 0

Reloads for insn # 46
Reload 0: reload_in (SI) = (reg/f:SI 13 sp)
	GENERAL_REGS, RELOAD_FOR_INPUT (opnum = 1)
	reload_in_reg: (reg/f:SI 13 sp)
	reload_reg_rtx: (reg:SI 2 r2)
deleting insn with uid = 3.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 26.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 8 (  1.6)
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 8 (  1.6)


dump_fpu

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={4d,3u} r1={3d,2u} r2={5d,4u} r3={4d,4u} r4={2d,3u} r12={2d} r13={1d,6u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={3d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 160{136d,24u,0e} in 13{12 regular + 1 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 4 [r4] 24 [cc]
;; live  in  	 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 4 [r4] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 4 5 8 2 NOTE_INSN_FUNCTION_BEG)

(note 8 4 14 2 NOTE_INSN_DELETED)

(note 14 8 15 2 NOTE_INSN_DELETED)

(note 15 14 50 2 NOTE_INSN_DELETED)

(insn 50 15 46 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 2 r2)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn 46 50 47 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/v/f:SI 3 r3 [orig:135 thread ] [135])
        (and:SI (reg:SI 2 r2)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 47 46 10 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/v/f:SI 3 r3 [orig:135 thread ] [135])
        (and:SI (reg/v/f:SI 3 r3 [orig:135 thread ] [135])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 10 47 12 2 arch/arm/kernel/process.c:514 (set (reg:SI 4 r4 [orig:141 <variable>.used_cp+2 ] [141])
        (zero_extend:SI (mem/s/j:QI (plus:SI (reg/v/f:SI 3 r3 [orig:135 thread ] [135])
                    (const_int 82 [0x52])) [0 <variable>.used_cp+2 S1 A16]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 12 10 16 2 arch/arm/kernel/process.c:514 (set (reg:SI 2 r2 [orig:143 <variable>.used_cp+1 ] [143])
        (zero_extend:SI (mem/s/j:QI (plus:SI (reg/v/f:SI 3 r3 [orig:135 thread ] [135])
                    (const_int 81 [0x51])) [0 <variable>.used_cp+1 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 16 12 17 2 arch/arm/kernel/process.c:516 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (ior:SI (reg:SI 4 r4 [orig:141 <variable>.used_cp+2 ] [141])
                        (reg:SI 2 r2 [orig:143 <variable>.used_cp+1 ] [143]))
                    (const_int 0 [0x0])))
            (set (reg/v:SI 4 r4 [orig:134 used_math ] [134])
                (ior:SI (reg:SI 4 r4 [orig:141 <variable>.used_cp+2 ] [141])
                    (reg:SI 2 r2 [orig:143 <variable>.used_cp+1 ] [143])))
        ]) 91 {*iorsi3_compare0} (nil))

(jump_insn 17 16 18 2 arch/arm/kernel/process.c:516 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 28)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 6102 [0x17d6])
        (nil)))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 1 [r1] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 3 [r3] 4 [r4] 13 [sp] 14 [lr]


;; Succ edge  3 [39.0%]  (fallthru)
;; Succ edge  4 [61.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 3 [r3] 4 [r4] 13 [sp]
;; lr  use 	 1 [r1] 3 [r3] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 1 [r1] 3 [r3] 4 [r4] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	 14 [lr]

;; Pred edge  2 [39.0%]  (fallthru)
(note 18 17 19 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 19 18 23 3 NOTE_INSN_DELETED)

(insn 23 19 24 3 arch/arm/kernel/process.c:517 (set (reg:SI 0 r0)
        (reg/v/f:SI 1 r1 [orig:138 fp ] [138])) 167 {*arm_movsi_insn} (nil))

(insn 24 23 25 3 arch/arm/kernel/process.c:517 (set (reg:SI 1 r1)
        (plus:SI (reg/v/f:SI 3 r3 [orig:135 thread ] [135])
            (const_int 288 [0x120]))) 4 {*arm_addsi3} (nil))

(insn 25 24 26 3 arch/arm/kernel/process.c:517 (set (reg:SI 2 r2)
        (const_int 116 [0x74])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 116 [0x74])
        (nil)))

(call_insn 26 25 28 3 arch/arm/kernel/process.c:517 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41] <function_decl 0x11573080 memcpy>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))
;; End of basic block 3 -> ( 4)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 24 [cc]
;; live  in  	 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	 24 [cc]

;; Pred edge  2 [61.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 28 26 29 4 56 "" [1 uses])

(note 29 28 30 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 30 29 31 4 NOTE_INSN_DELETED)

(note 31 30 36 4 NOTE_INSN_DELETED)

(insn 36 31 42 4 arch/arm/kernel/process.c:520 (parallel [
            (set (reg/i:SI 0 r0)
                (ne:SI (reg/v:SI 4 r4 [orig:134 used_math ] [134])
                    (const_int 0 [0x0])))
            (clobber (reg:CC 24 cc))
        ]) 278 {*compare_scc} (nil))

(insn 42 36 48 4 arch/arm/kernel/process.c:520 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 4 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 48 42 49 NOTE_INSN_DELETED)

(note 49 48 0 NOTE_INSN_DELETED)


;; Function copy_thread (copy_thread)[0:1360]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
scanning new insn with uid = 63.
verify found no changes in insn with uid = 63.
deleting insn with uid = 30.
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 5 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 8 (  1.6)

Pass 0 for finding allocno costs

    a1 (r151,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r149,l0) best GENERAL_REGS, cover GENERAL_REGS
    a9 (r147,l0) best GENERAL_REGS, cover GENERAL_REGS
    a8 (r142,l0) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r141,l0) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r140,l0) best GENERAL_REGS, cover GENERAL_REGS
    a7 (r138,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r137,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r134,l0) best GENERAL_REGS, cover GENERAL_REGS
    a6 (r133,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:70000
  a1(r151,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a2(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a3(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r149,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a6(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a7(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a8(r142,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a9(r147,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000


Pass 1 for finding allocno costs

    r151: preferred GENERAL_REGS, alternative NO_REGS
    r149: preferred GENERAL_REGS, alternative NO_REGS
    r147: preferred GENERAL_REGS, alternative NO_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS

  a0(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:70000
  a1(r151,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a2(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a3(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r149,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a6(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a7(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a8(r142,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a9(r147,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000

   Insn 58(l0): point = 0
   Insn 52(l0): point = 2
   Insn 47(l0): point = 4
   Insn 45(l0): point = 6
   Insn 44(l0): point = 8
   Insn 46(l0): point = 10
   Insn 39(l0): point = 13
   Insn 38(l0): point = 15
   Insn 36(l0): point = 18
   Insn 35(l0): point = 20
   Insn 33(l0): point = 22
   Insn 31(l0): point = 24
   Insn 63(l0): point = 26
   Insn 32(l0): point = 28
   Insn 29(l0): point = 30
   Insn 28(l0): point = 32
   Insn 24(l0): point = 34
   Insn 23(l0): point = 36
   Insn 22(l0): point = 38
   Insn 27(l0): point = 40
   Insn 26(l0): point = 42
   Insn 20(l0): point = 44
   Insn 17(l0): point = 46
   Insn 13(l0): point = 48
   Insn 12(l0): point = 50
   Insn 18(l0): point = 52
   Insn 19(l0): point = 54
   Insn 10(l0): point = 56
   Insn 3(l0): point = 58
   Insn 2(l0): point = 60
   Insn 6(l0): point = 62
   Insn 5(l0): point = 64
 a0(r134): [11..56]
 a1(r151): [14..15]
 a2(r141): [16..62]
 a3(r137): [21..60]
 a4(r149): [25..26]
 a5(r140): [29..64]
 a6(r133): [31..48]
 a7(r138): [35..58]
 a8(r142): [37..50]
 a9(r147): [37..38]
Compressing live ranges: from 67 to 19 - 28%
Ranges after the compression:
 a0(r134): [0..14]
 a1(r151): [1..2]
 a2(r141): [3..17]
 a3(r137): [4..16]
 a4(r149): [5..6]
 a5(r140): [7..18]
 a6(r133): [8..12]
 a7(r138): [9..15]
 a8(r142): [10..13]
 a9(r147): [10..11]
+++Allocating 80 bytes for conflict table (uncompressed size 80)
;; a0(r134,l0) conflicts: a1(r151,l0) a2(r141,l0) a3(r137,l0) a4(r149,l0) a5(r140,l0) a6(r133,l0) a7(r138,l0) a9(r147,l0) a8(r142,l0)
;;     total conflict hard regs: 0-2 14
;;     conflict hard regs: 0-2 14
;; a1(r151,l0) conflicts: a0(r134,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a2(r141,l0) conflicts: a0(r134,l0) a3(r137,l0) a4(r149,l0) a5(r140,l0) a6(r133,l0) a7(r138,l0) a9(r147,l0) a8(r142,l0)
;;     total conflict hard regs: 0-2 14
;;     conflict hard regs: 0-2 14
;; a3(r137,l0) conflicts: a0(r134,l0) a2(r141,l0) a4(r149,l0) a5(r140,l0) a6(r133,l0) a7(r138,l0) a9(r147,l0) a8(r142,l0)
;;     total conflict hard regs: 0-2 14
;;     conflict hard regs: 0-2 14
;; a4(r149,l0) conflicts: a0(r134,l0) a2(r141,l0) a3(r137,l0)
;;     total conflict hard regs: 0
;;     conflict hard regs: 0
;; a5(r140,l0) conflicts: a0(r134,l0) a2(r141,l0) a3(r137,l0) a6(r133,l0) a7(r138,l0) a9(r147,l0) a8(r142,l0)
;;     total conflict hard regs: 0-2 14
;;     conflict hard regs: 0-2 14
;; a6(r133,l0) conflicts: a0(r134,l0) a2(r141,l0) a3(r137,l0) a5(r140,l0) a7(r138,l0) a9(r147,l0) a8(r142,l0)
;;     total conflict hard regs: 0-2 14
;;     conflict hard regs: 0-2 14
;; a7(r138,l0) conflicts: a0(r134,l0) a2(r141,l0) a3(r137,l0) a5(r140,l0) a6(r133,l0) a9(r147,l0) a8(r142,l0)
;;     total conflict hard regs: 0-2 14
;;     conflict hard regs: 0-2 14
;; a8(r142,l0) conflicts: a0(r134,l0) a2(r141,l0) a3(r137,l0) a5(r140,l0) a6(r133,l0) a7(r138,l0) a9(r147,l0)
;;     total conflict hard regs: 0-2 14
;;     conflict hard regs: 0-2 14
;; a9(r147,l0) conflicts: a0(r134,l0) a2(r141,l0) a3(r137,l0) a5(r140,l0) a6(r133,l0) a7(r138,l0) a8(r142,l0)
;;     total conflict hard regs: 0 1
;;     conflict hard regs: 0 1

  regions=1, blocks=5, points=19
    allocnos=10, copies=0, conflicts=1, ranges=10

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 4 3 2
    all: 0r134 1r151 2r141 3r137 4r149 5r140 6r133 7r138 8r142 9r147
    modified regnos: 133 134 137 138 140 141 142 147 149 151
    border:
    Pressure: GENERAL_REGS=11
    Reg 134 of GENERAL_REGS has 4 regs less
    Reg 141 of GENERAL_REGS has 4 regs less
    Reg 137 of GENERAL_REGS has 4 regs less
    Reg 149 of GENERAL_REGS has 1 regs less
    Reg 140 of GENERAL_REGS has 4 regs less
    Reg 133 of GENERAL_REGS has 4 regs less
    Reg 138 of GENERAL_REGS has 4 regs less
    Reg 142 of GENERAL_REGS has 4 regs less
    Reg 147 of GENERAL_REGS has 2 regs less
      Pushing a1(r151,l0)
      Pushing a4(r149,l0)
      Pushing a9(r147,l0)
      Pushing a3(r137,l0)(potential spill: pri=1818, cost=20000)
      Pushing a7(r138,l0)
      Pushing a8(r142,l0)
      Pushing a5(r140,l0)
      Pushing a2(r141,l0)
      Pushing a6(r133,l0)
      Pushing a0(r134,l0)
      Popping a0(r134,l0)  -- assign reg 4
      Popping a6(r133,l0)  -- assign reg 5
      Popping a2(r141,l0)  -- assign reg 6
      Popping a5(r140,l0)  -- assign reg 7
      Popping a8(r142,l0)  -- assign reg 8
      Popping a7(r138,l0)  -- assign reg 10
      Popping a3(r137,l0)  -- assign reg 9
      Popping a9(r147,l0)  -- assign reg 3
      Popping a4(r149,l0)  -- assign reg 3
      Popping a1(r151,l0)  -- assign reg 3
Disposition:
    6:r133 l0     5    0:r134 l0     4    3:r137 l0     9    7:r138 l0    10
    5:r140 l0     7    2:r141 l0     6    8:r142 l0     8    9:r147 l0     3
    4:r149 l0     3    1:r151 l0     3
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=5, live_throughout: 0, 1, 13, dead_or_set: 3, 140
insn=6, live_throughout: 0, 1, 13, 140, dead_or_set: 141
insn=2, live_throughout: 1, 13, 140, 141, dead_or_set: 0, 137
insn=3, live_throughout: 13, 137, 140, 141, dead_or_set: 1, 138
insn=10, live_throughout: 13, 137, 138, 140, 141, dead_or_set: 134
insn=19, live_throughout: 13, 134, 137, 138, 140, 141, dead_or_set: 2
insn=18, live_throughout: 2, 13, 134, 137, 138, 140, 141, dead_or_set: 1
insn=12, live_throughout: 1, 2, 13, 134, 137, 138, 140, 141, dead_or_set: 142
insn=13, live_throughout: 1, 2, 13, 134, 137, 138, 140, 141, 142, dead_or_set: 133
insn=17, live_throughout: 1, 2, 13, 133, 134, 137, 138, 140, 141, 142, dead_or_set: 0
insn=20, live_throughout: 13, 133, 134, 137, 138, 140, 141, 142, dead_or_set: 0, 1, 2, 14
insn=26, live_throughout: 13, 133, 134, 137, 138, 140, 141, 142, dead_or_set: 0
insn=27, live_throughout: 0, 13, 133, 134, 137, 138, 140, 141, 142, dead_or_set: 1
insn=22, live_throughout: 0, 1, 13, 133, 134, 137, 138, 140, 141, 142, dead_or_set: 147
insn=23, live_throughout: 0, 1, 13, 133, 134, 137, 138, 140, 141, dead_or_set: 142, 147
insn=24, live_throughout: 0, 1, 13, 133, 134, 137, 140, 141, dead_or_set: 138
insn=28, live_throughout: 13, 133, 134, 137, 140, 141, dead_or_set: 0, 1, 14
insn=29, live_throughout: 13, 134, 137, 140, 141, dead_or_set: 133
insn=32, live_throughout: 13, 134, 137, 141, dead_or_set: 0, 140
insn=63, live_throughout: 0, 13, 134, 137, 141, dead_or_set: 149
insn=31, live_throughout: 0, 13, 134, 137, 141, dead_or_set: 149
insn=33, live_throughout: 13, 134, 137, 141, dead_or_set: 0, 14
insn=35, live_throughout: 13, 134, 141, dead_or_set: 137
insn=36, live_throughout: 13, 134, 141, dead_or_set: 
insn=38, live_throughout: 13, 134, dead_or_set: 141, 151
insn=39, live_throughout: 13, 134, dead_or_set: 151
insn=40, live_throughout: 13, 134, dead_or_set: 
insn=46, live_throughout: 13, dead_or_set: 2, 134
insn=44, live_throughout: 2, 13, dead_or_set: 0
insn=45, live_throughout: 0, 2, 13, dead_or_set: 1
insn=47, live_throughout: 13, dead_or_set: 0, 1, 2, 14
insn=52, live_throughout: 13, 14, dead_or_set: 0
insn=58, live_throughout: 0, 13, 14, dead_or_set: 
init_insns for 141: (insn_list:REG_DEP_TRUE 6 (nil))
init_insns for 147: (insn_list:REG_DEP_TRUE 22 (nil))
init_insns for 149: (insn_list:REG_DEP_TRUE 63 (nil))
init_insns for 151: (insn_list:REG_DEP_TRUE 39 (nil))
changing reg in insn 13
changing reg in insn 17
changing reg in insn 29
changing reg in insn 24
changing reg in insn 10
changing reg in insn 26
changing reg in insn 12
changing reg in insn 46
changing reg in insn 39
changing reg in insn 31
changing reg in insn 29
changing reg in insn 38
changing reg in insn 13
changing reg in insn 2
changing reg in insn 35
changing reg in insn 3
changing reg in insn 24
changing reg in insn 5
changing reg in insn 10
changing reg in insn 32
changing reg in insn 6
changing reg in insn 18
changing reg in insn 38
changing reg in insn 12
changing reg in insn 23
changing reg in insn 13
changing reg in insn 22
changing reg in insn 23
changing reg in insn 63
changing reg in insn 31
changing reg in insn 38
changing reg in insn 39
Spilling for insn 23.
Spilling for insn 24.
Spilling for insn 29.
Spilling for insn 31.
Spilling for insn 39.

Reloads for insn # 23
Reload 0: reload_out (SI) = (mem/s/j:SI (plus:SI (reg/f:SI 8 r8 [142])
                                                        (const_int 48 [0x30])) [0 <variable>.uregs+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:SI (plus:SI (reg/f:SI 8 r8 [142])
                                                        (const_int 48 [0x30])) [0 <variable>.uregs+0 S4 A32])

Reloads for insn # 24
Reload 0: reload_out (SI) = (mem/s/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:133 childregs ] [133])
                                                        (const_int 52 [0x34])) [0 <variable>.uregs+52 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:133 childregs ] [133])
                                                        (const_int 52 [0x34])) [0 <variable>.uregs+52 S4 A32])

Reloads for insn # 29
Reload 0: reload_out (SI) = (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:134 thread ] [134])
                                                        (const_int 60 [0x3c])) [0 <variable>.cpu_context.sp+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:134 thread ] [134])
                                                        (const_int 60 [0x3c])) [0 <variable>.cpu_context.sp+0 S4 A32])

Reloads for insn # 31
Reload 0: reload_out (SI) = (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:134 thread ] [134])
                                                        (const_int 64 [0x40])) [0 <variable>.cpu_context.pc+0 S4 A64])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:134 thread ] [134])
                                                        (const_int 64 [0x40])) [0 <variable>.cpu_context.pc+0 S4 A64])

Reloads for insn # 39
Reload 0: reload_out (SI) = (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:134 thread ] [134])
                                                        (const_int 96 [0x60])) [0 <variable>.tp_value+0 S4 A64])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:134 thread ] [134])
                                                        (const_int 96 [0x60])) [0 <variable>.tp_value+0 S4 A64])


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 20.
verify found no changes in insn with uid = 28.
verify found no changes in insn with uid = 33.
verify found no changes in insn with uid = 47.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 5 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 8 (  1.6)


copy_thread

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 7[r7] 8[r8] 9[r9] 10[sl] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={10d,7u} r1={8d,4u} r2={7d,2u} r3={8d,4u} r4={1d,6u,2d} r5={1d,3u} r6={1d,2u} r7={1d,2u} r8={1d,2u} r9={1d,1u} r10={1d,1u} r12={5d} r13={1d,9u,1d} r14={5d,1u} r15={4d} r16={4d} r17={4d} r18={4d} r19={4d} r20={4d} r21={4d} r22={4d} r23={4d} r24={5d,1u} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r81={4d} r82={4d} r83={4d} r84={4d} r85={4d} r86={4d} r87={4d} r88={4d} r89={4d} r90={4d} r91={4d} r92={4d} r93={4d} r94={4d} r95={4d} r96={4d} r97={4d} r98={4d} r99={4d} r100={4d} r101={4d} r102={4d} r103={4d} r104={4d} r105={4d} r106={4d} r107={4d} r108={4d} r109={4d} r110={4d} r111={4d} r112={4d} r113={4d} r114={4d} r115={4d} r116={4d} r117={4d} r118={4d} r119={4d} r120={4d} r121={4d} r122={4d} r123={4d} r124={4d} r125={4d} r126={4d} r127={4d} 
;;    total ref usage 544{496d,45u,3e} in 32{28 regular + 4 call} insns.
(note 1 0 8 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 3 [r3] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 3 [r3] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 3 [r3] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 8 1 7 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 7 8 25 2 NOTE_INSN_FUNCTION_BEG)

(note 25 7 34 2 NOTE_INSN_DELETED)

(note 34 25 5 2 NOTE_INSN_DELETED)

(insn 5 34 6 2 arch/arm/kernel/process.c:477 (set (reg/v/f:SI 7 r7 [orig:140 p ] [140])
        (reg:SI 3 r3 [ p ])) 167 {*arm_movsi_insn} (nil))

(insn 6 5 2 2 arch/arm/kernel/process.c:477 (set (reg/v/f:SI 6 r6 [orig:141 regs ] [141])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 32 [0x20])) [0 regs+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/f/c/i:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 32 [0x20])) [0 regs+0 S4 A32])
        (nil)))

(insn 2 6 3 2 arch/arm/kernel/process.c:477 (set (reg/v:SI 9 r9 [orig:137 clone_flags ] [137])
        (reg:SI 0 r0 [ clone_flags ])) 167 {*arm_movsi_insn} (nil))

(insn 3 2 10 2 arch/arm/kernel/process.c:477 (set (reg/v:SI 10 sl [orig:138 stack_start ] [138])
        (reg:SI 1 r1 [ stack_start ])) 167 {*arm_movsi_insn} (nil))

(insn 10 3 19 2 arch/arm/kernel/process.c:478 (set (reg/v/f:SI 4 r4 [orig:134 thread ] [134])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 7 r7 [orig:140 p ] [140])
                (const_int 4 [0x4])) [0 <variable>.stack+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 19 10 18 2 arch/arm/kernel/process.c:481 (set (reg:SI 2 r2)
        (const_int 72 [0x48])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 72 [0x48])
        (nil)))

(insn 18 19 12 2 arch/arm/kernel/process.c:481 (set (reg:SI 1 r1)
        (reg/v/f:SI 6 r6 [orig:141 regs ] [141])) 167 {*arm_movsi_insn} (nil))

(insn 12 18 13 2 arch/arm/kernel/process.c:479 (set (reg/f:SI 8 r8 [142])
        (plus:SI (reg/v/f:SI 4 r4 [orig:134 thread ] [134])
            (const_int 8064 [0x1f80]))) 4 {*arm_addsi3} (nil))

(insn 13 12 17 2 arch/arm/kernel/process.c:479 (set (reg/v/f:SI 5 r5 [orig:133 childregs ] [133])
        (plus:SI (reg/f:SI 8 r8 [142])
            (const_int 48 [0x30]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (plus:SI (reg/v/f:SI 4 r4 [orig:134 thread ] [134])
            (const_int 8112 [0x1fb0]))
        (nil)))

(insn 17 13 20 2 arch/arm/kernel/process.c:481 (set (reg:SI 0 r0)
        (reg/v/f:SI 5 r5 [orig:133 childregs ] [133])) 167 {*arm_movsi_insn} (nil))

(call_insn 20 17 26 2 arch/arm/kernel/process.c:481 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41] <function_decl 0x11573080 memcpy>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 26 20 27 2 arch/arm/kernel/process.c:485 discrim 1 (set (reg:SI 0 r0)
        (plus:SI (reg/v/f:SI 4 r4 [orig:134 thread ] [134])
            (const_int 28 [0x1c]))) 4 {*arm_addsi3} (nil))

(insn 27 26 22 2 arch/arm/kernel/process.c:485 discrim 1 (set (reg:SI 1 r1)
        (const_int 48 [0x30])) 167 {*arm_movsi_insn} (nil))

(insn 22 27 23 2 arch/arm/kernel/process.c:482 (set (reg:SI 3 r3 [147])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 0 [0x0])
        (nil)))

(insn 23 22 24 2 arch/arm/kernel/process.c:482 (set (mem/s/j:SI (plus:SI (reg/f:SI 8 r8 [142])
                (const_int 48 [0x30])) [0 <variable>.uregs+0 S4 A32])
        (reg:SI 3 r3 [147])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 24 23 28 2 arch/arm/kernel/process.c:483 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:133 childregs ] [133])
                (const_int 52 [0x34])) [0 <variable>.uregs+52 S4 A32])
        (reg/v:SI 10 sl [orig:138 stack_start ] [138])) 167 {*arm_movsi_insn} (nil))

(call_insn 28 24 29 2 arch/arm/kernel/process.c:485 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("__memzero") [flags 0x41] <function_decl 0x10bb1200 __memzero>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 29 28 32 2 arch/arm/kernel/process.c:486 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:134 thread ] [134])
                (const_int 60 [0x3c])) [0 <variable>.cpu_context.sp+0 S4 A32])
        (reg/v/f:SI 5 r5 [orig:133 childregs ] [133])) 167 {*arm_movsi_insn} (nil))

(insn 32 29 63 2 arch/arm/kernel/process.c:489 (set (reg:SI 0 r0)
        (reg/v/f:SI 7 r7 [orig:140 p ] [140])) 167 {*arm_movsi_insn} (nil))

(insn 63 32 31 2 arch/arm/kernel/process.c:487 (set (reg/f:SI 3 r3 [149])
        (symbol_ref:SI ("*ret_from_fork") [flags 0x41] <function_decl 0x1150cd00 ret_from_fork>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*ret_from_fork") [flags 0x41] <function_decl 0x1150cd00 ret_from_fork>)
        (nil)))

(insn 31 63 33 2 arch/arm/kernel/process.c:487 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:134 thread ] [134])
                (const_int 64 [0x40])) [0 <variable>.cpu_context.pc+0 S4 A64])
        (reg/f:SI 3 r3 [149])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*ret_from_fork") [flags 0x41] <function_decl 0x1150cd00 ret_from_fork>)
        (nil)))

(call_insn 33 31 35 2 arch/arm/kernel/process.c:489 (parallel [
            (call (mem:SI (symbol_ref:SI ("clear_ptrace_hw_breakpoint") [flags 0x41] <function_decl 0x10ab8580 clear_ptrace_hw_breakpoint>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 35 33 36 2 arch/arm/kernel/process.c:491 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 9 r9 [orig:137 clone_flags ] [137])
                (const_int 1 [0x1])
                (const_int 19 [0x13]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 36 35 37 2 arch/arm/kernel/process.c:491 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 40)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 4 [r4] 6 [r6] 13 [sp]
;; live  out 	 4 [r4] 6 [r6] 13 [sp]


;; Succ edge  3 [61.0%]  (fallthru)
;; Succ edge  4 [39.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 6 [r6] 13 [sp]
;; lr  use 	 4 [r4] 6 [r6] 13 [sp]
;; lr  def 	 3 [r3]
;; live  in  	 4 [r4] 6 [r6] 13 [sp]
;; live  gen 	 3 [r3]
;; live  kill	

;; Pred edge  2 [61.0%]  (fallthru)
(note 37 36 38 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 38 37 39 3 arch/arm/kernel/process.c:492 (set (reg:SI 3 r3 [orig:151 <variable>.uregs+12 ] [151])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 6 r6 [orig:141 regs ] [141])
                (const_int 12 [0xc])) [0 <variable>.uregs+12 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:134 thread ] [134])
                (const_int 96 [0x60])) [0 <variable>.tp_value+0 S4 A64])
        (nil)))

(insn 39 38 40 3 arch/arm/kernel/process.c:492 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:134 thread ] [134])
                (const_int 96 [0x60])) [0 <variable>.tp_value+0 S4 A64])
        (reg:SI 3 r3 [orig:151 <variable>.uregs+12 ] [151])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 3 -> ( 4)
;; lr  out 	 4 [r4] 13 [sp]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 3 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	 14 [lr]

;; Pred edge  3 [100.0%]  (fallthru)
;; Pred edge  2 [39.0%] 
(code_label 40 39 41 4 59 "" [1 uses])

(note 41 40 46 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 46 41 44 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_notify.h:35 (set (reg:SI 2 r2)
        (reg/v/f:SI 4 r4 [orig:134 thread ] [134])) 167 {*arm_movsi_insn} (nil))

(insn 44 46 45 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_notify.h:35 (set (reg:SI 0 r0)
        (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 4 [0x4])))) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 4 [0x4])))
        (nil)))

(insn 45 44 47 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_notify.h:35 (set (reg:SI 1 r1)
        (const_int 3 [0x3])) 167 {*arm_movsi_insn} (nil))

(call_insn 47 45 52 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_notify.h:35 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("atomic_notifier_call_chain") [flags 0x41] <function_decl 0x10c43c80 atomic_notifier_call_chain>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 52 47 58 4 arch/arm/kernel/process.c:497 (set (reg/i:SI 0 r0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 58 52 62 4 arch/arm/kernel/process.c:497 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 4 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 62 58 64 NOTE_INSN_DELETED)

(note 64 62 0 NOTE_INSN_DELETED)


;; Function exit_thread (exit_thread)[0:1357]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs




Pass 1 for finding allocno costs



   Insn 13(l0): point = 0
   Insn 11(l0): point = 2
   Insn 23(l0): point = 4
   Insn 10(l0): point = 6
   Insn 22(l0): point = 8
Compressing live ranges: from 11 to 0 - 0%
Ranges after the compression:
+++Allocating 0 bytes for conflict table (uncompressed size 0)

  regions=1, blocks=3, points=0
    allocnos=0, copies=0, conflicts=0, ranges=0

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all:
    modified regnos:
    border:
    Pressure: GENERAL_REGS=4
Disposition:
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=22, live_throughout: 13, 14, dead_or_set: 2
insn=10, live_throughout: 2, 13, 14, dead_or_set: 0
insn=23, live_throughout: 0, 13, 14, dead_or_set: 2
insn=11, live_throughout: 0, 2, 13, 14, dead_or_set: 1
insn=13, live_throughout: 13, 14, dead_or_set: 0, 1, 2
Spilling for insn 22.
Using reg 3 for reload 0
Spilling for insn 22.
Using reg 3 for reload 0

Reloads for insn # 22
Reload 0: reload_in (SI) = (reg/f:SI 13 sp)
	GENERAL_REGS, RELOAD_FOR_INPUT (opnum = 1)
	reload_in_reg: (reg/f:SI 13 sp)
	reload_reg_rtx: (reg:SI 3 r3)


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 13.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


exit_thread

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp]
;;  ref usage 	r0={3d,1u} r1={3d,1u} r2={4d,2u} r3={3d,1u} r12={2d} r13={1d,4u} r14={1d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 138{128d,10u,0e} in 6{5 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 6 2 NOTE_INSN_FUNCTION_BEG)

(note 6 2 7 2 NOTE_INSN_DELETED)

(note 7 6 8 2 NOTE_INSN_DELETED)

(note 8 7 9 2 NOTE_INSN_DELETED)

(note 9 8 25 2 NOTE_INSN_DELETED)

(insn 25 9 22 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_notify.h:35 (set (reg:SI 3 r3)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn 22 25 10 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_notify.h:35 (set (reg:SI 2 r2)
        (and:SI (reg:SI 3 r3)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 10 22 23 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_notify.h:35 (set (reg:SI 0 r0)
        (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 4 [0x4])))) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 4 [0x4])))
        (nil)))

(insn 23 10 11 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_notify.h:35 (set (reg:SI 2 r2)
        (and:SI (reg:SI 2 r2)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 11 23 13 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_notify.h:35 (set (reg:SI 1 r1)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(call_insn/j 13 11 14 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_notify.h:35 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("atomic_notifier_call_chain") [flags 0x41] <function_decl 0x10c43c80 atomic_notifier_call_chain>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 14 13 24)

(note 24 14 0 NOTE_INSN_DELETED)


;; Function flush_thread (flush_thread)[0:1358]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs

    a0 (r136,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r136,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:72000
  a1(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000


Pass 1 for finding allocno costs

    r136: preferred GENERAL_REGS, alternative NO_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS

  a0(r136,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:72000
  a1(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000

   Insn 31(l0): point = 0
   Insn 29(l0): point = 2
   Insn 28(l0): point = 4
   Insn 30(l0): point = 6
   Insn 25(l0): point = 8
   Insn 24(l0): point = 10
   Insn 23(l0): point = 12
   Insn 21(l0): point = 14
   Insn 20(l0): point = 16
   Insn 19(l0): point = 18
   Insn 17(l0): point = 20
   Insn 16(l0): point = 22
   Insn 15(l0): point = 24
   Insn 13(l0): point = 26
   Insn 12(l0): point = 28
   Insn 11(l0): point = 30
   Insn 41(l0): point = 32
   Insn 40(l0): point = 34
 a0(r136): [7..34]
 a1(r135): [19..30]
Compressing live ranges: from 37 to 4 - 10%
Ranges after the compression:
 a0(r136): [0..3]
 a1(r135): [1..2]
+++Allocating 16 bytes for conflict table (uncompressed size 16)
;; a0(r136,l0) conflicts: a1(r135,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a1(r135,l0) conflicts: a0(r136,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14

  regions=1, blocks=3, points=4
    allocnos=2, copies=0, conflicts=2, ranges=2

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all: 0r136 1r135
    modified regnos: 135 136
    border:
    Pressure: GENERAL_REGS=5
    Reg 136 of GENERAL_REGS has 3 regs less
    Reg 135 of GENERAL_REGS has 3 regs less
      Pushing a1(r135,l0)
      Pushing a0(r136,l0)
      Popping a0(r136,l0)  -- assign reg 4
      Popping a1(r135,l0)  -- assign reg 5
Disposition:
    1:r135 l0     5    0:r136 l0     4
New iteration of spill/restore move
+++Costs: overall 2000, reg 2000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=40, live_throughout: 13, dead_or_set: 136
insn=41, live_throughout: 13, dead_or_set: 136
insn=11, live_throughout: 13, 136, dead_or_set: 135
insn=12, live_throughout: 13, 135, 136, dead_or_set: 0
insn=13, live_throughout: 13, 135, 136, dead_or_set: 0, 14
insn=15, live_throughout: 13, 135, 136, dead_or_set: 0
insn=16, live_throughout: 0, 13, 135, 136, dead_or_set: 1
insn=17, live_throughout: 13, 135, 136, dead_or_set: 0, 1, 14
insn=19, live_throughout: 13, 136, dead_or_set: 0, 135
insn=20, live_throughout: 0, 13, 136, dead_or_set: 1
insn=21, live_throughout: 13, 136, dead_or_set: 0, 1, 14
insn=23, live_throughout: 13, 136, dead_or_set: 0
insn=24, live_throughout: 0, 13, 136, dead_or_set: 1
insn=25, live_throughout: 13, 136, dead_or_set: 0, 1, 14
insn=30, live_throughout: 13, 14, dead_or_set: 2, 136
insn=28, live_throughout: 2, 13, 14, dead_or_set: 0
insn=29, live_throughout: 0, 2, 13, 14, dead_or_set: 1
insn=31, live_throughout: 13, 14, dead_or_set: 0, 1, 2
changing reg in insn 11
changing reg in insn 19
changing reg in insn 12
changing reg in insn 41
changing reg in insn 40
changing reg in insn 41
changing reg in insn 23
changing reg in insn 15
changing reg in insn 11
changing reg in insn 30
Spilling for insn 40.
Using reg 3 for reload 0
Spilling for insn 40.
Using reg 3 for reload 0

Reloads for insn # 40
Reload 0: reload_in (SI) = (reg/f:SI 13 sp)
	GENERAL_REGS, RELOAD_FOR_INPUT (opnum = 1)
	reload_in_reg: (reg/f:SI 13 sp)
	reload_reg_rtx: (reg:SI 3 r3)


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 13.
verify found no changes in insn with uid = 17.
verify found no changes in insn with uid = 21.
verify found no changes in insn with uid = 25.
verify found no changes in insn with uid = 31.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


flush_thread

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 13[sp] 14[lr]
;;  ref usage 	r0={11d,5u} r1={10d,4u} r2={7d,1u} r3={7d,1u} r4={2d,5u} r5={1d,2u} r12={6d} r13={1d,8u} r14={5d,1u} r15={5d} r16={5d} r17={5d} r18={5d} r19={5d} r20={5d} r21={5d} r22={5d} r23={5d} r24={5d} r27={5d} r28={5d} r29={5d} r30={5d} r31={5d} r32={5d} r33={5d} r34={5d} r35={5d} r36={5d} r37={5d} r38={5d} r39={5d} r40={5d} r41={5d} r42={5d} r43={5d} r44={5d} r45={5d} r46={5d} r47={5d} r48={5d} r49={5d} r50={5d} r51={5d} r52={5d} r53={5d} r54={5d} r55={5d} r56={5d} r57={5d} r58={5d} r59={5d} r60={5d} r61={5d} r62={5d} r63={5d} r64={5d} r65={5d} r66={5d} r67={5d} r68={5d} r69={5d} r70={5d} r71={5d} r72={5d} r73={5d} r74={5d} r75={5d} r76={5d} r77={5d} r78={5d} r79={5d} r80={5d} r81={5d} r82={5d} r83={5d} r84={5d} r85={5d} r86={5d} r87={5d} r88={5d} r89={5d} r90={5d} r91={5d} r92={5d} r93={5d} r94={5d} r95={5d} r96={5d} r97={5d} r98={5d} r99={5d} r100={5d} r101={5d} r102={5d} r103={5d} r104={5d} r105={5d} r106={5d} r107={5d} r108={5d} r109={5d} r110={5d} r111={5d} r112={5d} r113={5d} r114={5d} r115={5d} r116={5d} r117={5d} r118={5d} r119={5d} r120={5d} r121={5d} r122={5d} r123={5d} r124={5d} r125={5d} r126={5d} r127={5d} 
;;    total ref usage 632{605d,27u,0e} in 19{14 regular + 5 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 6 2 NOTE_INSN_FUNCTION_BEG)

(note 6 2 14 2 NOTE_INSN_DELETED)

(note 14 6 18 2 NOTE_INSN_DELETED)

(note 18 14 22 2 NOTE_INSN_DELETED)

(note 22 18 26 2 NOTE_INSN_DELETED)

(note 26 22 27 2 NOTE_INSN_DELETED)

(note 27 26 43 2 NOTE_INSN_DELETED)

(insn 43 27 40 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 3 r3)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn 40 43 41 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/v/f:SI 4 r4 [orig:136 thread ] [136])
        (and:SI (reg:SI 3 r3)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 41 40 11 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/v/f:SI 4 r4 [orig:136 thread ] [136])
        (and:SI (reg/v/f:SI 4 r4 [orig:136 thread ] [136])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 11 41 12 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/current.h:10 (set (reg/v/f:SI 5 r5 [orig:135 tsk ] [135])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:136 thread ] [136])
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 12 11 13 2 arch/arm/kernel/process.c:459 (set (reg:SI 0 r0)
        (reg/v/f:SI 5 r5 [orig:135 tsk ] [135])) 167 {*arm_movsi_insn} (nil))

(call_insn 13 12 15 2 arch/arm/kernel/process.c:459 (parallel [
            (call (mem:SI (symbol_ref:SI ("flush_ptrace_hw_breakpoint") [flags 0x41] <function_decl 0x114b5e00 flush_ptrace_hw_breakpoint>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 15 13 16 2 arch/arm/kernel/process.c:461 discrim 1 (set (reg:SI 0 r0)
        (plus:SI (reg/v/f:SI 4 r4 [orig:136 thread ] [136])
            (const_int 80 [0x50]))) 4 {*arm_addsi3} (nil))

(insn 16 15 17 2 arch/arm/kernel/process.c:461 discrim 1 (set (reg:SI 1 r1)
        (const_int 16 [0x10])) 167 {*arm_movsi_insn} (nil))

(call_insn 17 16 19 2 arch/arm/kernel/process.c:461 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("__memzero") [flags 0x41] <function_decl 0x10bb1200 __memzero>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 19 17 20 2 arch/arm/kernel/process.c:462 discrim 1 (set (reg:SI 0 r0)
        (plus:SI (reg/v/f:SI 5 r5 [orig:135 tsk ] [135])
            (const_int 796 [0x31c]))) 4 {*arm_addsi3} (nil))

(insn 20 19 21 2 arch/arm/kernel/process.c:462 discrim 1 (set (reg:SI 1 r1)
        (const_int 128 [0x80])) 167 {*arm_movsi_insn} (nil))

(call_insn 21 20 23 2 arch/arm/kernel/process.c:462 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("__memzero") [flags 0x41] <function_decl 0x10bb1200 __memzero>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 23 21 24 2 arch/arm/kernel/process.c:463 discrim 1 (set (reg:SI 0 r0)
        (plus:SI (reg/v/f:SI 4 r4 [orig:136 thread ] [136])
            (const_int 288 [0x120]))) 4 {*arm_addsi3} (nil))

(insn 24 23 25 2 arch/arm/kernel/process.c:463 discrim 1 (set (reg:SI 1 r1)
        (const_int 140 [0x8c])) 167 {*arm_movsi_insn} (nil))

(call_insn 25 24 30 2 arch/arm/kernel/process.c:463 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("__memzero") [flags 0x41] <function_decl 0x10bb1200 __memzero>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 30 25 28 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_notify.h:35 (set (reg:SI 2 r2)
        (reg/v/f:SI 4 r4 [orig:136 thread ] [136])) 167 {*arm_movsi_insn} (nil))

(insn 28 30 29 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_notify.h:35 (set (reg:SI 0 r0)
        (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 4 [0x4])))) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 4 [0x4])))
        (nil)))

(insn 29 28 31 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_notify.h:35 (set (reg:SI 1 r1)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(call_insn/j 31 29 32 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_notify.h:35 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("atomic_notifier_call_chain") [flags 0x41] <function_decl 0x10c43c80 atomic_notifier_call_chain>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 32 31 42)

(note 42 32 0 NOTE_INSN_DELETED)


;; Function machine_shutdown (machine_shutdown)[0:1349]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs




Pass 1 for finding allocno costs



   Insn 5(l0): point = 0
Compressing live ranges: from 3 to 0 - 0%
Ranges after the compression:
+++Allocating 0 bytes for conflict table (uncompressed size 0)

  regions=1, blocks=3, points=0
    allocnos=0, copies=0, conflicts=0, ranges=0

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all:
    modified regnos:
    border:
    Pressure: GENERAL_REGS=1
Disposition:
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=5, live_throughout: 13, 14, dead_or_set: 


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


machine_shutdown

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 13[sp]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r3={2d} r12={2d} r13={1d,3u} r14={1d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 127{123d,4u,0e} in 1{0 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)

(call_insn/j 5 2 6 2 arch/arm/kernel/process.c:269 (parallel [
            (call (mem:SI (symbol_ref:SI ("smp_send_stop") [flags 0x41] <function_decl 0x10c9f800 smp_send_stop>) [0 S4 A32])
                (const_int 0 [0x0]))
            (return)
            (use (const_int 0 [0x0]))
        ]) 258 {*sibcall_insn} (nil)
    (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 6 5 14)

(note 14 6 0 NOTE_INSN_DELETED)


;; Function machine_restart (machine_restart)[0:1352]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs

    a0 (r134,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r133,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a1(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000


Pass 1 for finding allocno costs

    r134: preferred GENERAL_REGS, alternative NO_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS

  a0(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a1(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000

   Insn 15(l0): point = 0
   Insn 13(l0): point = 2
   Insn 14(l0): point = 4
   Insn 9(l0): point = 6
   Insn 8(l0): point = 8
   Insn 7(l0): point = 10
   Insn 6(l0): point = 12
   Insn 2(l0): point = 14
 a0(r134): [1..6]
 a1(r133): [5..14]
Compressing live ranges: from 17 to 4 - 23%
Ranges after the compression:
 a0(r134): [0..2]
 a1(r133): [1..3]
+++Allocating 16 bytes for conflict table (uncompressed size 16)
;; a0(r134,l0) conflicts: a1(r133,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a1(r133,l0) conflicts: a0(r134,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

  regions=1, blocks=3, points=4
    allocnos=2, copies=0, conflicts=2, ranges=2

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all: 0r134 1r133
    modified regnos: 133 134
    border:
    Pressure: GENERAL_REGS=4
    Reg 134 of GENERAL_REGS has 3 regs less
    Reg 133 of GENERAL_REGS has 1 regs less
      Pushing a1(r133,l0)
      Pushing a0(r134,l0)
      Popping a0(r134,l0)  -- assign reg 3
      Popping a1(r133,l0)  -- assign reg 4
Disposition:
    1:r133 l0     4    0:r134 l0     3
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=2, live_throughout: 13, dead_or_set: 0, 133
insn=6, live_throughout: 13, 133, dead_or_set: 
insn=7, live_throughout: 13, 133, dead_or_set: 
insn=8, live_throughout: 13, 133, dead_or_set: 14
insn=9, live_throughout: 13, 133, dead_or_set: 134
insn=14, live_throughout: 13, 134, dead_or_set: 1, 133
insn=13, live_throughout: 1, 13, 134, dead_or_set: 0
insn=15, live_throughout: 13, dead_or_set: 0, 1, 14, 134
init_insns for 134: (insn_list:REG_DEP_TRUE 9 (nil))
changing reg in insn 2
changing reg in insn 14
changing reg in insn 9
changing reg in insn 15
changing reg in insn 13


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 8.
rescanning insn with uid = 15.
deleting insn with uid = 15.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


machine_restart

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 3[r3] 4[r4] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={4d,2u} r1={4d,1u} r2={3d} r3={4d,2u} r4={1d,1u} r12={3d} r13={1d,4u} r14={3d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={4d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} 
;;    total ref usage 258{247d,11u,0e} in 8{6 regular + 2 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 3 [r3] 4 [r4]
;; live  kill	 14 [lr] 24 [cc]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 11 2 NOTE_INSN_FUNCTION_BEG)

(note 11 3 12 2 NOTE_INSN_DELETED)

(note 12 11 2 2 NOTE_INSN_DELETED)

(insn 2 12 6 2 arch/arm/kernel/process.c:287 (set (reg/v/f:SI 4 r4 [orig:133 cmd ] [133])
        (reg:SI 0 r0 [ cmd ])) 167 {*arm_movsi_insn} (nil))

(insn 6 2 7 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/irqflags.h:35 (parallel [
            (asm_operands/v ("	cpsid i			@ arch_local_irq_disable") ("") 0 []
                 [] 1105916)
            (clobber (reg:QI 24 cc))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 7 6 8 2 arch/arm/kernel/process.c:294 (parallel [
            (asm_operands/v ("cpsid f	@ __clf") ("") 0 []
                 [] 8827068)
            (clobber (reg:QI 24 cc))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(call_insn 8 7 9 2 arch/arm/kernel/process.c:296 (parallel [
            (call (mem:SI (symbol_ref:SI ("machine_shutdown") [flags 0x3] <function_decl 0x11153e00 machine_shutdown>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))

(insn 9 8 14 2 arch/arm/kernel/process.c:297 (set (reg/f:SI 3 r3 [134])
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn 14 9 13 2 arch/arm/kernel/process.c:297 (set (reg:SI 1 r1)
        (reg/v/f:SI 4 r4 [orig:133 cmd ] [133])) 167 {*arm_movsi_insn} (nil))

(insn 13 14 15 2 arch/arm/kernel/process.c:297 (set (reg:SI 0 r0)
        (zero_extend:SI (mem/c/i:QI (reg/f:SI 3 r3 [134]) [0 reboot_mode+0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(call_insn 15 13 23 2 arch/arm/kernel/process.c:297 (parallel [
            (call (mem:SI (mem/f/c/i:SI (plus:SI (reg/f:SI 3 r3 [134])
                            (const_int 4 [0x4])) [0 arm_pm_restart+0 S4 A32]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 246 {*call_mem} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 23 15 24 NOTE_INSN_DELETED)

(note 24 23 0 NOTE_INSN_DELETED)


;; Function machine_power_off (machine_power_off)[0:1351]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs

    a1 (r134,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r133,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a1(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000


Pass 1 for finding allocno costs

    r134: preferred GENERAL_REGS, alternative NO_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS

  a0(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a1(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000

   Insn 11(l0): point = 1
   Insn 9(l0): point = 4
   Insn 8(l0): point = 6
   Insn 7(l0): point = 8
   Insn 6(l0): point = 10
   Insn 5(l0): point = 12
 a0(r133): [2..8]
 a1(r134): [9..10]
Compressing live ranges: from 15 to 4 - 26%
Ranges after the compression:
 a0(r133): [0..1]
 a1(r134): [2..3]
+++Allocating 0 bytes for conflict table (uncompressed size 16)
;; a0(r133,l0) conflicts:
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a1(r134,l0) conflicts:
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

  regions=1, blocks=5, points=4
    allocnos=2, copies=0, conflicts=0, ranges=2

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 4 3 2
    all: 0r133 1r134
    modified regnos: 133 134
    border:
    Pressure: GENERAL_REGS=2
    Reg 133 of GENERAL_REGS has 1 regs less
    Reg 134 of GENERAL_REGS has 1 regs less
      Pushing a1(r134,l0)
      Pushing a0(r133,l0)
      Popping a0(r133,l0)  -- assign reg 3
      Popping a1(r134,l0)  -- assign reg 3
Disposition:
    0:r133 l0     3    1:r134 l0     3
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=5, live_throughout: 13, dead_or_set: 14
insn=6, live_throughout: 13, 14, dead_or_set: 134
insn=7, live_throughout: 13, 14, dead_or_set: 133, 134
insn=8, live_throughout: 13, 14, 133, dead_or_set: 
insn=9, live_throughout: 13, 14, 133, dead_or_set: 
insn=11, live_throughout: 13, dead_or_set: 14, 133
insn=17, live_throughout: 13, 14, dead_or_set: 
init_insns for 134: (insn_list:REG_DEP_TRUE 6 (nil))
changing reg in insn 7
changing reg in insn 11
changing reg in insn 8
changing reg in insn 6
changing reg in insn 7


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 5.
rescanning insn with uid = 11.
deleting insn with uid = 11.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 7 (  1.4)
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 8 (  1.6)


machine_power_off

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={3d} r1={3d} r2={3d} r3={5d,3u} r12={3d} r13={1d,6u} r14={3d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={3d,1u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} 
;;    total ref usage 255{244d,11u,0e} in 6{4 regular + 2 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)

(call_insn 5 2 6 2 arch/arm/kernel/process.c:281 (parallel [
            (call (mem:SI (symbol_ref:SI ("machine_shutdown") [flags 0x3] <function_decl 0x11153e00 machine_shutdown>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))

(insn 6 5 7 2 arch/arm/kernel/process.c:282 (set (reg/f:SI 3 r3 [134])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 7 6 8 2 arch/arm/kernel/process.c:282 (set (reg/f:SI 3 r3 [orig:133 pm_power_off.335 ] [133])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 3 r3 [134])
                (const_int 16 [0x10])) [0 pm_power_off+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 16 [0x10]))) [0 pm_power_off+0 S4 A32])
        (nil)))

(insn 8 7 9 2 arch/arm/kernel/process.c:282 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 3 r3 [orig:133 pm_power_off.335 ] [133])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 9 8 10 2 arch/arm/kernel/process.c:282 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 17)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 2165 [0x875])
        (nil)))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 13 [sp]


;; Succ edge  3 [78.3%]  (fallthru)
;; Succ edge  4 [21.6%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 13 [sp]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 3 [r3] 13 [sp]
;; live  gen 	
;; live  kill	 14 [lr]

;; Pred edge  2 [78.3%]  (fallthru)
(note 10 9 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(call_insn 11 10 17 3 arch/arm/kernel/process.c:283 (parallel [
            (call (mem:SI (reg/f:SI 3 r3 [orig:133 pm_power_off.335 ] [133]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 244 {*call_reg_armv5} (nil)
    (nil))
;; End of basic block 3 -> ( 4)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp]


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 3 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp]
;; live  gen 	
;; live  kill	

;; Pred edge  3 [100.0%]  (fallthru)
;; Pred edge  2 [21.6%] 
(code_label 17 11 20 4 79 "" [1 uses])

(note 20 17 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 4 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 21 20 22 NOTE_INSN_DELETED)

(note 22 21 0 NOTE_INSN_DELETED)


;; Function machine_halt (machine_halt)[0:1350]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs




Pass 1 for finding allocno costs



   Insn 5(l0): point = 0
   Insn 18(l1): point = 3
Compressing live ranges: from 6 to 0 - 0%
Ranges after the compression:
+++Allocating 0 bytes for conflict table (uncompressed size 0)

  regions=2, blocks=4, points=0
    allocnos=0, copies=0, conflicts=0, ranges=0

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 3 2
    all:
    modified regnos:
    border:
    Pressure: GENERAL_REGS=1
Disposition:
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=5, live_throughout: 13, dead_or_set: 14
insn=7, live_throughout: 13, dead_or_set: 
insn=18, live_throughout: 13, dead_or_set: 


try_optimize_cfg iteration 1

Infinite loop in BB 3.
Infinite loop in BB 3.
starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 4 n_edges 3 count 4 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 4 n_edges 3 count 5 (  1.2)


machine_halt

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 13[sp] 14[lr]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r3={2d} r12={2d} r13={1d,4u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 129{124d,5u,0e} in 2{1 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp]
;; live  gen 	
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)

(call_insn 5 2 7 2 arch/arm/kernel/process.c:275 (parallel [
            (call (mem:SI (symbol_ref:SI ("machine_shutdown") [flags 0x3] <function_decl 0x11153e00 machine_shutdown>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))
;; End of basic block 2 -> ( 3)
;; lr  out 	 13 [sp]
;; live  out 	 13 [sp]


;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp]
;; live  gen 	
;; live  kill	

;; Pred edge  2 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%] 
(code_label 7 5 6 3 83 "" [1 uses])

(note 6 7 18 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(jump_insn 18 6 19 3 (set (pc)
        (label_ref 7)) 242 {*arm_jump} (nil))
;; End of basic block 3 -> ( 3)
;; lr  out 	 13 [sp]
;; live  out 	 13 [sp]


;; Succ edge  3 [100.0%] 

(barrier 19 18 20)

(note 20 19 0 NOTE_INSN_DELETED)


;; Function cpu_idle (cpu_idle)[0:1347]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs

    a18 (r184,l2) best GENERAL_REGS, cover GENERAL_REGS
    a9 (r184,l1) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r184,l0) best GENERAL_REGS, cover GENERAL_REGS
    a17 (r182,l2) best GENERAL_REGS, cover GENERAL_REGS
    a8 (r182,l1) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r182,l0) best GENERAL_REGS, cover GENERAL_REGS
    a16 (r181,l2) best GENERAL_REGS, cover GENERAL_REGS
    a7 (r181,l1) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r181,l0) best GENERAL_REGS, cover GENERAL_REGS
    a15 (r180,l2) best GENERAL_REGS, cover GENERAL_REGS
    a6 (r180,l1) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r180,l0) best GENERAL_REGS, cover GENERAL_REGS
    a10 (r173,l1) best GENERAL_REGS, cover GENERAL_REGS
    a11 (r172,l1) best GENERAL_REGS, cover GENERAL_REGS
    a12 (r171,l1) best GENERAL_REGS, cover GENERAL_REGS
    a13 (r170,l1) best GENERAL_REGS, cover GENERAL_REGS
    a23 (r161,l2) best GENERAL_REGS, cover GENERAL_REGS
    a24 (r160,l2) best GENERAL_REGS, cover GENERAL_REGS
    a26 (r159,l2) best GENERAL_REGS, cover GENERAL_REGS
    a27 (r157,l2) best GENERAL_REGS, cover GENERAL_REGS
    a29 (r156,l2) best GENERAL_REGS, cover GENERAL_REGS
    a28 (r155,l2) best GENERAL_REGS, cover GENERAL_REGS
    a30 (r148,l2) best GENERAL_REGS, cover GENERAL_REGS
    a21 (r147,l2) best GENERAL_REGS, cover GENERAL_REGS
    a20 (r145,l2) best GENERAL_REGS, cover GENERAL_REGS
    a25 (r142,l2) best GENERAL_REGS, cover GENERAL_REGS
    a22 (r140,l2) best GENERAL_REGS, cover GENERAL_REGS
    a14 (r139,l2) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r139,l1) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r139,l0) best GENERAL_REGS, cover GENERAL_REGS
    a19 (r138,l2) best GENERAL_REGS, cover GENERAL_REGS

  a0(r184,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a1(r182,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a2(r139,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:32000
  a3(r181,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a4(r180,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a5(r139,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000
  a6(r180,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a7(r181,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a8(r182,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a9(r184,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a10(r173,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a11(r172,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a12(r171,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a13(r170,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a14(r139,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a15(r180,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a16(r181,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a17(r182,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a18(r184,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a19(r138,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a20(r145,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a21(r147,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a22(r140,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a23(r161,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a24(r160,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a25(r142,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a26(r159,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a27(r157,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a28(r155,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a29(r156,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a30(r148,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000


Pass 1 for finding allocno costs

    r184: preferred GENERAL_REGS, alternative NO_REGS
    r182: preferred GENERAL_REGS, alternative NO_REGS
    r181: preferred GENERAL_REGS, alternative NO_REGS
    r180: preferred GENERAL_REGS, alternative NO_REGS
    r173: preferred GENERAL_REGS, alternative NO_REGS
    r172: preferred GENERAL_REGS, alternative NO_REGS
    r171: preferred GENERAL_REGS, alternative NO_REGS
    r170: preferred GENERAL_REGS, alternative NO_REGS
    r161: preferred GENERAL_REGS, alternative NO_REGS
    r160: preferred GENERAL_REGS, alternative NO_REGS
    r159: preferred GENERAL_REGS, alternative NO_REGS
    r157: preferred GENERAL_REGS, alternative NO_REGS
    r156: preferred GENERAL_REGS, alternative NO_REGS
    r155: preferred GENERAL_REGS, alternative NO_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS
    r147: preferred GENERAL_REGS, alternative NO_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS

  a0(r184,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a1(r182,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a2(r139,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:32000
  a3(r181,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a4(r180,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a5(r139,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000
  a6(r180,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a7(r181,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a8(r182,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a9(r184,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a10(r173,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a11(r172,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a12(r171,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a13(r170,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a14(r139,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a15(r180,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a16(r181,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a17(r182,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a18(r184,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a19(r138,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a20(r145,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a21(r147,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a22(r140,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a23(r161,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a24(r160,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a25(r142,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a26(r159,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a27(r157,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a28(r155,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a29(r156,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a30(r148,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000

   Insn 72(l0): point = 0
   Insn 56(l0): point = 2
   Insn 145(l0): point = 4
   Insn 48(l0): point = 6
   Insn 144(l0): point = 8
   Insn 27(l0): point = 10
   Insn 5(l0): point = 12
   Insn 142(l1): point = 15
   Insn 108(l1): point = 17
   Insn 107(l1): point = 19
   Insn 106(l1): point = 21
   Insn 105(l1): point = 23
   Insn 104(l1): point = 25
   Insn 103(l1): point = 27
   Insn 102(l1): point = 29
   Insn 101(l1): point = 31
   Insn 100(l1): point = 33
   Insn 99(l1): point = 35
   Insn 98(l1): point = 37
   Insn 97(l1): point = 39
   Insn 138(l1): point = 42
   Insn 22(l1): point = 44
   Insn 21(l1): point = 46
   Insn 20(l1): point = 48
   Insn 19(l1): point = 50
   Insn 95(l2): point = 53
   Insn 94(l2): point = 55
   Insn 91(l2): point = 57
   Insn 88(l2): point = 60
   Insn 85(l2): point = 63
   Insn 125(l2): point = 65
   Insn 124(l2): point = 67
   Insn 80(l2): point = 70
   Insn 79(l2): point = 72
   Insn 77(l2): point = 74
   Insn 74(l2): point = 77
   Insn 70(l2): point = 80
   Insn 69(l2): point = 82
   Insn 67(l2): point = 84
   Insn 140(l2): point = 87
   Insn 62(l2): point = 89
   Insn 61(l2): point = 91
   Insn 59(l2): point = 94
   Insn 58(l2): point = 96
   Insn 57(l2): point = 98
   Insn 53(l2): point = 101
   Insn 51(l2): point = 104
   Insn 50(l2): point = 106
   Insn 49(l2): point = 108
   Insn 47(l2): point = 110
   Insn 46(l2): point = 112
   Insn 43(l2): point = 115
   Insn 41(l2): point = 118
   Insn 40(l2): point = 120
   Insn 38(l2): point = 122
   Insn 36(l2): point = 124
   Insn 32(l2): point = 126
   Insn 31(l2): point = 128
   Insn 37(l2): point = 130
   Insn 29(l2): point = 132
   Insn 34(l2): point = 134
   Insn 26(l2): point = 136
 a0(r184): [0..0]
 a1(r182): [0..2]
 a2(r139): [0..8]
 a3(r181): [0..6]
 a4(r180): [0..10]
 a5(r139): [15..52]
 a6(r180): [15..52]
 a7(r181): [15..52]
 a8(r182): [15..52]
 a9(r184): [15..52]
 a10(r173): [20..21]
 a11(r172): [22..23]
 a12(r171): [28..29]
 a13(r170): [30..31]
 a14(r139): [53..138]
 a15(r180): [53..138]
 a16(r181): [53..138]
 a17(r182): [53..138]
 a18(r184): [53..138]
 a19(r138): [56..57]
 a20(r145): [73..74]
 a21(r147): [97..98]
 a22(r140): [102..108]
 a23(r161): [121..122]
 a24(r160): [123..130]
 a25(r142): [123..124]
 a26(r159): [125..134]
 a27(r157): [125..126]
 a28(r155): [127..128]
 a29(r156): [129..132]
 a30(r148): [129..136]
 Rebuilding regno allocno list for 173
 Rebuilding regno allocno list for 172
 Rebuilding regno allocno list for 171
 Rebuilding regno allocno list for 170
 Rebuilding regno allocno list for 161
 Rebuilding regno allocno list for 160
 Rebuilding regno allocno list for 159
 Rebuilding regno allocno list for 157
 Rebuilding regno allocno list for 156
 Rebuilding regno allocno list for 155
 Rebuilding regno allocno list for 148
 Rebuilding regno allocno list for 147
 Rebuilding regno allocno list for 145
 Rebuilding regno allocno list for 142
 Rebuilding regno allocno list for 140
 Rebuilding regno allocno list for 138
Compressing live ranges: from 139 to 36 - 25%
Ranges after the compression:
 a0(r184): [5..35] [0..0]
 a1(r182): [5..35] [0..1]
 a2(r139): [5..35] [0..3]
 a3(r181): [5..35] [0..2]
 a4(r180): [5..35] [0..4]
 a10(r173): [6..7]
 a11(r172): [8..9]
 a12(r171): [10..11]
 a13(r170): [12..13]
 a19(r138): [14..15]
 a20(r145): [16..17]
 a21(r147): [18..19]
 a22(r140): [20..21]
 a23(r161): [22..23]
 a24(r160): [24..31]
 a25(r142): [24..25]
 a26(r159): [26..33]
 a27(r157): [26..27]
 a28(r155): [28..29]
 a29(r156): [30..32]
 a30(r148): [30..34]
+++Allocating 168 bytes for conflict table (uncompressed size 248)
;; a0(r184,l0) conflicts: a1(r182,l0) a2(r139,l0) a3(r181,l0) a4(r180,l0) a10(r173,l0) a11(r172,l0) a12(r171,l0) a13(r170,l0) a19(r138,l0) a20(r145,l0) a21(r147,l0) a22(r140,l0) a23(r161,l0) a25(r142,l0) a24(r160,l0) a27(r157,l0) a26(r159,l0) a28(r155,l0) a29(r156,l0) a30(r148,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a1(r182,l0) conflicts: a0(r184,l0) a2(r139,l0) a3(r181,l0) a4(r180,l0) a10(r173,l0) a11(r172,l0) a12(r171,l0) a13(r170,l0) a19(r138,l0) a20(r145,l0) a21(r147,l0) a22(r140,l0) a23(r161,l0) a25(r142,l0) a24(r160,l0) a27(r157,l0) a26(r159,l0) a28(r155,l0) a29(r156,l0) a30(r148,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a2(r139,l0) conflicts: a0(r184,l0) a1(r182,l0) a3(r181,l0) a4(r180,l0) a10(r173,l0) a11(r172,l0) a12(r171,l0) a13(r170,l0) a19(r138,l0) a20(r145,l0) a21(r147,l0) a22(r140,l0) a23(r161,l0) a25(r142,l0) a24(r160,l0) a27(r157,l0) a26(r159,l0) a28(r155,l0) a29(r156,l0) a30(r148,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a3(r181,l0) conflicts: a0(r184,l0) a1(r182,l0) a2(r139,l0) a4(r180,l0) a10(r173,l0) a11(r172,l0) a12(r171,l0) a13(r170,l0) a19(r138,l0) a20(r145,l0) a21(r147,l0) a22(r140,l0) a23(r161,l0) a25(r142,l0) a24(r160,l0) a27(r157,l0) a26(r159,l0) a28(r155,l0) a29(r156,l0) a30(r148,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a4(r180,l0) conflicts: a0(r184,l0) a1(r182,l0) a2(r139,l0) a3(r181,l0) a10(r173,l0) a11(r172,l0) a12(r171,l0) a13(r170,l0) a19(r138,l0) a20(r145,l0) a21(r147,l0) a22(r140,l0) a23(r161,l0) a25(r142,l0) a24(r160,l0) a27(r157,l0) a26(r159,l0) a28(r155,l0) a29(r156,l0) a30(r148,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a10(r173,l0) conflicts: a0(r184,l0) a1(r182,l0) a2(r139,l0) a3(r181,l0) a4(r180,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a11(r172,l0) conflicts: a0(r184,l0) a1(r182,l0) a2(r139,l0) a3(r181,l0) a4(r180,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a12(r171,l0) conflicts: a0(r184,l0) a1(r182,l0) a2(r139,l0) a3(r181,l0) a4(r180,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a13(r170,l0) conflicts: a0(r184,l0) a1(r182,l0) a2(r139,l0) a3(r181,l0) a4(r180,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a19(r138,l0) conflicts: a0(r184,l0) a1(r182,l0) a2(r139,l0) a3(r181,l0) a4(r180,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a20(r145,l0) conflicts: a0(r184,l0) a1(r182,l0) a2(r139,l0) a3(r181,l0) a4(r180,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a21(r147,l0) conflicts: a0(r184,l0) a1(r182,l0) a2(r139,l0) a3(r181,l0) a4(r180,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a22(r140,l0) conflicts: a0(r184,l0) a1(r182,l0) a2(r139,l0) a3(r181,l0) a4(r180,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a23(r161,l0) conflicts: a0(r184,l0) a1(r182,l0) a2(r139,l0) a3(r181,l0) a4(r180,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a24(r160,l0) conflicts: a0(r184,l0) a1(r182,l0) a2(r139,l0) a3(r181,l0) a4(r180,l0) a25(r142,l0) a27(r157,l0) a26(r159,l0) a28(r155,l0) a29(r156,l0) a30(r148,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a25(r142,l0) conflicts: a0(r184,l0) a1(r182,l0) a2(r139,l0) a3(r181,l0) a4(r180,l0) a24(r160,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a26(r159,l0) conflicts: a0(r184,l0) a1(r182,l0) a2(r139,l0) a3(r181,l0) a4(r180,l0) a24(r160,l0) a27(r157,l0) a28(r155,l0) a29(r156,l0) a30(r148,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a27(r157,l0) conflicts: a0(r184,l0) a1(r182,l0) a2(r139,l0) a3(r181,l0) a4(r180,l0) a24(r160,l0) a26(r159,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a28(r155,l0) conflicts: a0(r184,l0) a1(r182,l0) a2(r139,l0) a3(r181,l0) a4(r180,l0) a24(r160,l0) a26(r159,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a29(r156,l0) conflicts: a0(r184,l0) a1(r182,l0) a2(r139,l0) a3(r181,l0) a4(r180,l0) a24(r160,l0) a26(r159,l0) a30(r148,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a30(r148,l0) conflicts: a0(r184,l0) a1(r182,l0) a2(r139,l0) a3(r181,l0) a4(r180,l0) a24(r160,l0) a26(r159,l0) a29(r156,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  cp0:a12(r171)<->a13(r170)@125:shuffle
  cp1:a10(r173)<->a11(r172)@125:shuffle
  cp2:a28(r155)<->a30(r148)@250:shuffle
  cp3:a28(r155)<->a29(r156)@125:shuffle
  cp4:a27(r157)<->a28(r155)@125:shuffle
  cp5:a23(r161)<->a25(r142)@125:shuffle
  cp6:a23(r161)<->a24(r160)@125:shuffle
  regions=3, blocks=17, points=36
    allocnos=31, copies=7, conflicts=0, ranges=26

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2
    all: 0r184 1r182 2r139 3r181 4r180 10r173 11r172 12r171 13r170 19r138 20r145 21r147 22r140 23r161 24r160 25r142 26r159 27r157 28r155 29r156 30r148
    modified regnos: 138 139 140 142 145 147 148 155 156 157 159 160 161 170 171 172 173 180 181 182 184
    border:
    Pressure: GENERAL_REGS=9
    Reg 184 of GENERAL_REGS has 3 regs less
    Reg 182 of GENERAL_REGS has 3 regs less
    Reg 139 of GENERAL_REGS has 3 regs less
    Reg 181 of GENERAL_REGS has 3 regs less
    Reg 180 of GENERAL_REGS has 3 regs less
    Reg 140 of GENERAL_REGS has 1 regs less
      Pushing a29(r156,l0)
      Pushing a28(r155,l0)
      Pushing a27(r157,l0)
      Pushing a26(r159,l0)
      Pushing a25(r142,l0)
      Pushing a24(r160,l0)
      Pushing a23(r161,l0)
      Pushing a21(r147,l0)
      Pushing a20(r145,l0)
      Pushing a19(r138,l0)
      Pushing a13(r170,l0)
      Pushing a12(r171,l0)
      Pushing a11(r172,l0)
      Pushing a10(r173,l0)
      Pushing a30(r148,l0)
      Pushing a22(r140,l0)
      Pushing a4(r180,l0)
      Pushing a3(r181,l0)
      Pushing a1(r182,l0)
      Pushing a0(r184,l0)
      Pushing a2(r139,l0)
      Popping a2(r139,l0)  -- assign reg 4
      Popping a0(r184,l0)  -- assign reg 5
      Popping a1(r182,l0)  -- assign reg 6
      Popping a3(r181,l0)  -- assign reg 7
      Popping a4(r180,l0)  -- assign reg 8
      Popping a22(r140,l0)  -- assign reg 3
      Popping a30(r148,l0)  -- assign reg 3
      Popping a10(r173,l0)  -- assign reg 3
      Popping a11(r172,l0)  -- assign reg 3
      Popping a12(r171,l0)  -- assign reg 3
      Popping a13(r170,l0)  -- assign reg 3
      Popping a19(r138,l0)  -- assign reg 3
      Popping a20(r145,l0)  -- assign reg 3
      Popping a21(r147,l0)  -- assign reg 3
      Popping a23(r161,l0)  -- assign reg 3
      Popping a24(r160,l0)  -- assign reg 2
      Popping a25(r142,l0)  -- assign reg 3
      Popping a26(r159,l0)  -- assign reg 1
      Popping a27(r157,l0)  -- assign reg 3
      Popping a28(r155,l0)  -- assign reg 3
      Popping a29(r156,l0)  -- assign reg 0
Disposition:
   19:r138 l0     3    2:r139 l0     4   22:r140 l0     3   25:r142 l0     3
   20:r145 l0     3   21:r147 l0     3   30:r148 l0     3   28:r155 l0     3
   29:r156 l0     0   27:r157 l0     3   26:r159 l0     1   24:r160 l0     2
   23:r161 l0     3   13:r170 l0     3   12:r171 l0     3   11:r172 l0     3
   10:r173 l0     3    4:r180 l0     8    3:r181 l0     7    1:r182 l0     6
    0:r184 l0     5
New iteration of spill/restore move
+++Costs: overall 2000, reg 2000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=5, live_throughout: 13, dead_or_set: 
insn=27, live_throughout: 13, dead_or_set: 180
insn=144, live_throughout: 13, 180, dead_or_set: 139
insn=48, live_throughout: 13, 139, 180, dead_or_set: 181
insn=145, live_throughout: 13, 180, 181, dead_or_set: 139
insn=56, live_throughout: 13, 139, 180, 181, dead_or_set: 182
insn=72, live_throughout: 13, 139, 180, 181, 182, dead_or_set: 184
insn=109, live_throughout: 13, 139, 180, 181, 182, 184, dead_or_set: 
insn=19, live_throughout: 13, 139, 180, 181, 182, 184, dead_or_set: 0
insn=20, live_throughout: 13, 139, 180, 181, 182, 184, dead_or_set: 0, 14
insn=21, live_throughout: 13, 139, 180, 181, 182, 184, dead_or_set: 0
insn=22, live_throughout: 13, 139, 180, 181, 182, 184, dead_or_set: 0, 14
insn=138, live_throughout: 13, 139, 180, 181, 182, 184, dead_or_set: 
insn=92, live_throughout: 13, 139, 180, 181, 182, 184, dead_or_set: 
insn=26, live_throughout: 13, 139, 180, 181, 182, 184, dead_or_set: 148
insn=34, live_throughout: 13, 139, 148, 180, 181, 182, 184, dead_or_set: 159
insn=29, live_throughout: 13, 139, 148, 159, 180, 181, 182, 184, dead_or_set: 156
insn=37, live_throughout: 13, 139, 148, 156, 159, 180, 181, 182, 184, dead_or_set: 160
insn=31, live_throughout: 13, 139, 159, 160, 180, 181, 182, 184, dead_or_set: 148, 155, 156
insn=32, live_throughout: 13, 139, 159, 160, 180, 181, 182, 184, dead_or_set: 155, 157
insn=36, live_throughout: 13, 139, 160, 180, 181, 182, 184, dead_or_set: 142, 157, 159
insn=38, live_throughout: 13, 139, 180, 181, 182, 184, dead_or_set: 142, 160, 161
insn=40, live_throughout: 13, 139, 180, 181, 182, 184, dead_or_set: 161
insn=41, live_throughout: 13, 139, 180, 181, 182, 184, dead_or_set: 
insn=43, live_throughout: 13, 139, 180, 181, 182, 184, dead_or_set: 14
insn=44, live_throughout: 13, 139, 180, 181, 182, 184, dead_or_set: 
insn=46, live_throughout: 13, 139, 180, 181, 182, 184, dead_or_set: 
insn=47, live_throughout: 13, 139, 180, 181, 182, 184, dead_or_set: 
insn=49, live_throughout: 13, 139, 180, 181, 182, 184, dead_or_set: 140
insn=50, live_throughout: 13, 139, 140, 180, 181, 182, 184, dead_or_set: 
insn=51, live_throughout: 13, 139, 140, 180, 181, 182, 184, dead_or_set: 
insn=53, live_throughout: 13, 139, 180, 181, 182, 184, dead_or_set: 14, 140
insn=54, live_throughout: 13, 139, 180, 181, 182, 184, dead_or_set: 
insn=57, live_throughout: 13, 139, 180, 181, 182, 184, dead_or_set: 147
insn=58, live_throughout: 13, 139, 180, 181, 182, 184, dead_or_set: 147
insn=59, live_throughout: 13, 139, 180, 181, 182, 184, dead_or_set: 
insn=61, live_throughout: 13, 139, 180, 181, 182, 184, dead_or_set: 
insn=62, live_throughout: 13, 139, 180, 181, 182, 184, dead_or_set: 
insn=140, live_throughout: 13, 139, 180, 181, 182, 184, dead_or_set: 
insn=65, live_throughout: 13, 139, 180, 181, 182, 184, dead_or_set: 
insn=67, live_throughout: 13, 139, 180, 181, 182, 184, dead_or_set: 0, 14
insn=69, live_throughout: 13, 139, 180, 181, 182, 184, dead_or_set: 0
insn=70, live_throughout: 13, 139, 180, 181, 182, 184, dead_or_set: 
insn=74, live_throughout: 13, 139, 180, 181, 182, 184, dead_or_set: 14
insn=75, live_throughout: 13, 139, 180, 181, 182, 184, dead_or_set: 
insn=77, live_throughout: 13, 139, 180, 181, 182, 184, dead_or_set: 145
insn=79, live_throughout: 13, 139, 180, 181, 182, 184, dead_or_set: 145
insn=80, live_throughout: 13, 139, 180, 181, 182, 184, dead_or_set: 
insn=124, live_throughout: 13, 139, 180, 181, 182, 184, dead_or_set: 0
insn=125, live_throughout: 0, 13, 139, 180, 181, 182, 184, dead_or_set: 1
insn=85, live_throughout: 13, 139, 180, 181, 182, 184, dead_or_set: 0, 1, 14
insn=86, live_throughout: 13, 139, 180, 181, 182, 184, dead_or_set: 
insn=88, live_throughout: 13, 139, 180, 181, 182, 184, dead_or_set: 
insn=137, live_throughout: 13, 139, 180, 181, 182, 184, dead_or_set: 
insn=91, live_throughout: 13, 139, 180, 181, 182, 184, dead_or_set: 138
insn=94, live_throughout: 13, 139, 180, 181, 182, 184, dead_or_set: 138
insn=95, live_throughout: 13, 139, 180, 181, 182, 184, dead_or_set: 
insn=97, live_throughout: 13, 139, 180, 181, 182, 184, dead_or_set: 14
insn=98, live_throughout: 13, 139, 180, 181, 182, 184, dead_or_set: 0
insn=99, live_throughout: 13, 139, 180, 181, 182, 184, dead_or_set: 0, 14
insn=100, live_throughout: 13, 139, 180, 181, 182, 184, dead_or_set: 
insn=101, live_throughout: 13, 139, 180, 181, 182, 184, dead_or_set: 170
insn=102, live_throughout: 13, 139, 180, 181, 182, 184, dead_or_set: 170, 171
insn=103, live_throughout: 13, 139, 180, 181, 182, 184, dead_or_set: 171
insn=104, live_throughout: 13, 139, 180, 181, 182, 184, dead_or_set: 14
insn=105, live_throughout: 13, 139, 180, 181, 182, 184, dead_or_set: 172
insn=106, live_throughout: 13, 139, 180, 181, 182, 184, dead_or_set: 172, 173
insn=107, live_throughout: 13, 139, 180, 181, 182, 184, dead_or_set: 173
insn=108, live_throughout: 13, 139, 180, 181, 182, 184, dead_or_set: 
insn=142, live_throughout: 13, 139, 180, 181, 182, 184, dead_or_set: 
init_insns for 148: (insn_list:REG_DEP_TRUE 26 (nil))
init_insns for 170: (insn_list:REG_DEP_TRUE 101 (nil))
init_insns for 171: (insn_list:REG_DEP_TRUE 103 (nil))
init_insns for 172: (insn_list:REG_DEP_TRUE 105 (nil))
init_insns for 173: (insn_list:REG_DEP_TRUE 107 (nil))
init_insns for 180: (insn_list:REG_DEP_TRUE 27 (nil))
init_insns for 181: (insn_list:REG_DEP_TRUE 48 (nil))
init_insns for 182: (insn_list:REG_DEP_TRUE 56 (nil))
init_insns for 184: (insn_list:REG_DEP_TRUE 72 (nil))
changing reg in insn 91
changing reg in insn 94
changing reg in insn 145
changing reg in insn 144
changing reg in insn 145
changing reg in insn 107
changing reg in insn 105
changing reg in insn 103
changing reg in insn 101
changing reg in insn 26
changing reg in insn 91
changing reg in insn 106
changing reg in insn 102
changing reg in insn 105
changing reg in insn 101
changing reg in insn 26
changing reg in insn 49
changing reg in insn 53
changing reg in insn 50
changing reg in insn 36
changing reg in insn 38
changing reg in insn 77
changing reg in insn 79
changing reg in insn 57
changing reg in insn 58
changing reg in insn 26
changing reg in insn 31
changing reg in insn 31
changing reg in insn 29
changing reg in insn 37
changing reg in insn 32
changing reg in insn 31
changing reg in insn 32
changing reg in insn 29
changing reg in insn 31
changing reg in insn 32
changing reg in insn 36
changing reg in insn 34
changing reg in insn 36
changing reg in insn 37
changing reg in insn 38
changing reg in insn 38
changing reg in insn 40
changing reg in insn 101
changing reg in insn 102
changing reg in insn 102
changing reg in insn 103
changing reg in insn 105
changing reg in insn 106
changing reg in insn 106
changing reg in insn 107
changing reg in insn 27
changing reg in insn 34
changing reg in insn 48
changing reg in insn 49
changing reg in insn 56
changing reg in insn 57
changing reg in insn 72
changing reg in insn 74
Spilling for insn 144.
Using reg 3 for reload 0
Spilling for insn 103.
Spilling for insn 107.

Reloads for insn # 144
Reload 0: reload_in (SI) = (reg/f:SI 13 sp)
	GENERAL_REGS, RELOAD_FOR_INPUT (opnum = 1)
	reload_in_reg: (reg/f:SI 13 sp)
	reload_reg_rtx: (reg:SI 3 r3)

Reloads for insn # 103
Reload 0: reload_out (SI) = (mem/s/j:SI (plus:SI (reg/f:SI 4 r4 [orig:139 D.26530 ] [139])
                                                        (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:SI (plus:SI (reg/f:SI 4 r4 [orig:139 D.26530 ] [139])
                                                        (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])

Reloads for insn # 107
Reload 0: reload_out (SI) = (mem/s/j:SI (plus:SI (reg/f:SI 4 r4 [orig:139 D.26530 ] [139])
                                                        (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:SI (plus:SI (reg/f:SI 4 r4 [orig:139 D.26530 ] [139])
                                                        (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 20.
verify found no changes in insn with uid = 22.
verify found no changes in insn with uid = 43.
rescanning insn with uid = 53.
deleting insn with uid = 53.
verify found no changes in insn with uid = 67.
rescanning insn with uid = 74.
deleting insn with uid = 74.
verify found no changes in insn with uid = 85.
verify found no changes in insn with uid = 97.
verify found no changes in insn with uid = 99.
verify found no changes in insn with uid = 104.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 17 n_edges 22 count 42 (  2.5)
df_worklist_dataflow_doublequeue:n_basic_blocks 17 n_edges 22 count 35 (  2.1)


cpu_idle

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 7[r7] 8[r8] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={16d,6u} r1={13d,2u} r2={12d,1u} r3={25d,18u,1d} r4={2d,7u,5d} r5={1d,1u} r6={1d,1u} r7={1d,1u} r8={1d,1u} r12={11d} r13={1d,27u} r14={11d,1u} r15={10d} r16={10d} r17={10d} r18={10d} r19={10d} r20={10d} r21={10d} r22={10d} r23={10d} r24={22d,6u} r27={10d} r28={10d} r29={10d} r30={10d} r31={10d} r32={10d} r33={10d} r34={10d} r35={10d} r36={10d} r37={10d} r38={10d} r39={10d} r40={10d} r41={10d} r42={10d} r43={10d} r44={10d} r45={10d} r46={10d} r47={10d} r48={10d} r49={10d} r50={10d} r51={10d} r52={10d} r53={10d} r54={10d} r55={10d} r56={10d} r57={10d} r58={10d} r59={10d} r60={10d} r61={10d} r62={10d} r63={10d} r64={10d} r65={10d} r66={10d} r67={10d} r68={10d} r69={10d} r70={10d} r71={10d} r72={10d} r73={10d} r74={10d} r75={10d} r76={10d} r77={10d} r78={10d} r79={10d} r80={10d} r81={10d} r82={10d} r83={10d} r84={10d} r85={10d} r86={10d} r87={10d} r88={10d} r89={10d} r90={10d} r91={10d} r92={10d} r93={10d} r94={10d} r95={10d} r96={10d} r97={10d} r98={10d} r99={10d} r100={10d} r101={10d} r102={10d} r103={10d} r104={10d} r105={10d} r106={10d} r107={10d} r108={10d} r109={10d} r110={10d} r111={10d} r112={10d} r113={10d} r114={10d} r115={10d} r116={10d} r117={10d} r118={10d} r119={10d} r120={10d} r121={10d} r122={10d} r123={10d} r124={10d} r125={10d} r126={10d} r127={10d} 
;;    total ref usage 1295{1217d,72u,6e} in 63{53 regular + 10 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 24 [cc]
;; live  in  	 13 [sp]
;; live  gen 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8]
;; live  kill	 24 [cc]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 7 2 NOTE_INSN_FUNCTION_BEG)

(note 7 2 5 2 NOTE_INSN_DELETED)

(insn 5 7 27 2 arch/arm/kernel/process.c:215 (parallel [
            (asm_operands/v ("cpsie f	@ __stf") ("") 0 []
                 [] 8816956)
            (clobber (reg:QI 24 cc))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 27 5 147 2 include/asm-generic/bitops/non-atomic.h:105 (set (reg/f:SI 8 r8 [180])
        (symbol_ref:SI ("cpu_online_mask") [flags 0xc0] <var_decl 0x10c5bf60 cpu_online_mask>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("cpu_online_mask") [flags 0xc0] <var_decl 0x10c5bf60 cpu_online_mask>)
        (nil)))

(insn 147 27 144 2 include/linux/thread_info.h:84 (set (reg:SI 3 r3)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn 144 147 48 2 include/linux/thread_info.h:84 (set (reg/f:SI 4 r4 [orig:139 D.26530 ] [139])
        (and:SI (reg:SI 3 r3)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 48 144 145 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:94 (set (reg/f:SI 7 r7 [181])
        (symbol_ref:SI ("outer_cache") [flags 0xc0] <var_decl 0x512cf6c0 outer_cache>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("outer_cache") [flags 0xc0] <var_decl 0x512cf6c0 outer_cache>)
        (nil)))

(insn 145 48 56 2 include/linux/thread_info.h:84 (set (reg/f:SI 4 r4 [orig:139 D.26530 ] [139])
        (and:SI (reg/f:SI 4 r4 [orig:139 D.26530 ] [139])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 56 145 72 2 arch/arm/kernel/process.c:231 (set (reg/f:SI 6 r6 [182])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 72 56 109 2 arch/arm/kernel/process.c:237 (set (reg/f:SI 5 r5 [184])
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
        (nil)))
;; End of basic block 2 -> ( 3)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2 16) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  2 [100.0%]  (fallthru)
;; Pred edge  16 [100.0%]  (dfs_back)
(code_label 109 72 18 3 93 "" [1 uses])

(note 18 109 19 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 19 18 20 3 arch/arm/kernel/process.c:219 (set (reg:SI 0 r0)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(call_insn 20 19 21 3 arch/arm/kernel/process.c:219 (parallel [
            (call (mem:SI (symbol_ref:SI ("idle_notifier_call_chain") [flags 0x41] <function_decl 0x111e7780 idle_notifier_call_chain>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 21 20 22 3 arch/arm/kernel/process.c:220 (set (reg:SI 0 r0)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(call_insn 22 21 138 3 arch/arm/kernel/process.c:220 (parallel [
            (call (mem:SI (symbol_ref:SI ("tick_nohz_stop_sched_tick") [flags 0x41] <function_decl 0x113e3680 tick_nohz_stop_sched_tick>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(jump_insn 138 22 139 3 arch/arm/kernel/process.c:221 (set (pc)
        (label_ref 137)) 242 {*arm_jump} (nil))
;; End of basic block 3 -> ( 15)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  15 [100.0%] 

(barrier 139 138 92)

;; Start of basic block ( 15) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 4 [r4] 8 [r8] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc]
;; live  kill	 24 [cc]

;; Pred edge  15 [100.0%] 
(code_label 92 139 25 4 92 "" [1 uses])

(note 25 92 30 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 30 25 39 4 NOTE_INSN_DELETED)

(note 39 30 26 4 NOTE_INSN_DELETED)

(insn 26 39 34 4 arch/arm/kernel/process.c:223 (set (reg:SI 3 r3 [orig:148 D.25786 ] [148])
        (mem/s/j:SI (plus:SI (reg/f:SI 4 r4 [orig:139 D.26530 ] [139])
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/f:SI 4 r4 [orig:139 D.26530 ] [139])
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])
        (nil)))

(insn 34 26 29 4 include/asm-generic/bitops/non-atomic.h:105 (set (reg/f:SI 1 r1 [orig:159 cpu_online_mask ] [159])
        (mem/u/f/c/i:SI (reg/f:SI 8 r8 [180]) [0 cpu_online_mask+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/u/f/c/i:SI (symbol_ref:SI ("cpu_online_mask") [flags 0xc0] <var_decl 0x10c5bf60 cpu_online_mask>) [0 cpu_online_mask+0 S4 A32])
        (nil)))

(insn 29 34 37 4 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 0 r0 [156])
        (plus:SI (reg:SI 3 r3 [orig:148 D.25786 ] [148])
            (const_int 31 [0x1f]))) 4 {*arm_addsi3} (nil))

(insn 37 29 31 4 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 2 r2 [160])
        (and:SI (reg:SI 3 r3 [orig:148 D.25786 ] [148])
            (const_int 31 [0x1f]))) 67 {*arm_andsi3_insn} (nil))

(insn 31 37 32 4 include/asm-generic/bitops/non-atomic.h:105 (parallel [
            (set (reg:SI 3 r3 [orig:155 D.25786 ] [155])
                (if_then_else:SI (ge (reg:SI 3 r3 [orig:148 D.25786 ] [148])
                        (const_int 0 [0x0]))
                    (reg:SI 3 r3 [orig:148 D.25786 ] [148])
                    (reg:SI 0 r0 [156])))
            (clobber (reg:CC 24 cc))
        ]) 292 {movcond} (nil))

(insn 32 31 36 4 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 3 r3 [157])
        (ashiftrt:SI (reg:SI 3 r3 [orig:155 D.25786 ] [155])
            (const_int 5 [0x5]))) 117 {*arm_shiftsi3} (expr_list:REG_EQUAL (div:SI (reg:SI 3 r3 [orig:148 D.25786 ] [148])
            (const_int 32 [0x20]))
        (nil)))

(insn 36 32 38 4 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 3 r3 [orig:142 D.26511 ] [142])
        (mem/v:SI (plus:SI (mult:SI (reg:SI 3 r3 [157])
                    (const_int 4 [0x4]))
                (reg/f:SI 1 r1 [orig:159 cpu_online_mask ] [159])) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 38 36 40 4 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 3 r3 [161])
        (lshiftrt:SI (reg:SI 3 r3 [orig:142 D.26511 ] [142])
            (reg:SI 2 r2 [160]))) 117 {*arm_shiftsi3} (nil))

(insn 40 38 41 4 include/asm-generic/bitops/non-atomic.h:105 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 3 r3 [161])
                (const_int 1 [0x1])
                (const_int 0 [0x0]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 41 40 42 4 include/asm-generic/bitops/non-atomic.h:105 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 44)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  5 [0.0%]  (fallthru)
;; Succ edge  6 [100.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	
;; live  kill	 14 [lr]

;; Pred edge  4 [0.0%]  (fallthru)
(note 42 41 43 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(call_insn 43 42 44 5 arch/arm/kernel/process.c:224 (parallel [
            (call (mem:SI (symbol_ref:SI ("cpu_die") [flags 0x41] <function_decl 0x10c9f400 cpu_die>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))
;; End of basic block 5 -> ( 6)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 5 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 7 [r7] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	 24 [cc]

;; Pred edge  5 [100.0%]  (fallthru)
;; Pred edge  4 [100.0%] 
(code_label 44 43 45 6 87 "" [1 uses])

(note 45 44 46 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 46 45 47 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/irqflags.h:35 (parallel [
            (asm_operands/v ("	cpsid i			@ arch_local_irq_disable") ("") 0 []
                 [] 1105916)
            (clobber (reg:QI 24 cc))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 47 46 49 6 arch/arm/kernel/process.c:229 (parallel [
            (asm_operands/v ("dsb") ("") 0 []
                 [] 8818750)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 49 47 50 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:94 (set (reg/f:SI 3 r3 [orig:140 D.26517 ] [140])
        (mem/s/f/j/c:SI (plus:SI (reg/f:SI 7 r7 [181])
                (const_int 24 [0x18])) [0 outer_cache.sync+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/f/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("outer_cache") [flags 0xc0] <var_decl 0x512cf6c0 outer_cache>)
                    (const_int 24 [0x18]))) [0 outer_cache.sync+0 S4 A32])
        (nil)))

(insn 50 49 51 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:94 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 3 r3 [orig:140 D.26517 ] [140])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 51 50 52 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:94 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 54)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 3017 [0xbc9])
        (nil)))
;; End of basic block 6 -> ( 7 8)
;; lr  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  7 [69.8%]  (fallthru)
;; Succ edge  8 [30.2%] 

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	
;; live  kill	 14 [lr]

;; Pred edge  6 [69.8%]  (fallthru)
(note 52 51 53 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(call_insn 53 52 54 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:95 (parallel [
            (call (mem:SI (reg/f:SI 3 r3 [orig:140 D.26517 ] [140]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 244 {*call_reg_armv5} (nil)
    (nil))
;; End of basic block 7 -> ( 8)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  8 [100.0%]  (fallthru)

;; Start of basic block ( 7 6) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 6 [r6] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  7 [100.0%]  (fallthru)
;; Pred edge  6 [30.2%] 
(code_label 54 53 55 8 88 "" [1 uses])

(note 55 54 57 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 57 55 58 8 arch/arm/kernel/process.c:231 (set (reg:SI 3 r3 [orig:147 hlt_counter.331 ] [147])
        (mem/v/c/i:SI (reg/f:SI 6 r6 [182]) [0 hlt_counter+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/v/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 hlt_counter+0 S4 A32])
        (nil)))

(insn 58 57 59 8 arch/arm/kernel/process.c:231 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [orig:147 hlt_counter.331 ] [147])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 59 58 60 8 arch/arm/kernel/process.c:231 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 65)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
        (nil)))
;; End of basic block 8 -> ( 9 10)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  9 [71.0%]  (fallthru)
;; Succ edge  10 [29.0%] 

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	
;; live  kill	 24 [cc]

;; Pred edge  8 [71.0%]  (fallthru)
(note 60 59 61 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 61 60 62 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/irqflags.h:26 (parallel [
            (asm_operands/v ("	cpsie i			@ arch_local_irq_enable") ("") 0 []
                 [] 1104764)
            (clobber (reg:QI 24 cc))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 62 61 140 9 arch/arm/kernel/process.c:233 (parallel [
            (asm_operands/v ("dmb") ("") 0 []
                 [] 8819263)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(jump_insn 140 62 141 9 (set (pc)
        (label_ref 137)) 242 {*arm_jump} (nil))
;; End of basic block 9 -> ( 15)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  15 [100.0%]  (dfs_back)

(barrier 141 140 65)

;; Start of basic block ( 8) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 0 [r0] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  8 [29.0%] 
(code_label 65 141 66 10 89 "" [1 uses])

(note 66 65 68 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(note 68 66 67 10 NOTE_INSN_DELETED)

(call_insn 67 68 69 10 arch/arm/kernel/process.c:236 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("cpuidle_idle_call") [flags 0x41] <function_decl 0x114be300 cpuidle_idle_call>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (nil))

(insn 69 67 70 10 arch/arm/kernel/process.c:236 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 70 69 71 10 arch/arm/kernel/process.c:236 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 75)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))
;; End of basic block 10 -> ( 11 12)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  11 [29.0%]  (fallthru)
;; Succ edge  12 [71.0%] 

;; Start of basic block ( 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	
;; live  kill	 14 [lr]

;; Pred edge  10 [29.0%]  (fallthru)
(note 71 70 73 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(note 73 71 74 11 NOTE_INSN_DELETED)

(call_insn 74 73 75 11 arch/arm/kernel/process.c:237 (parallel [
            (call (mem:SI (mem/f/c/i:SI (plus:SI (reg/f:SI 5 r5 [184])
                            (const_int 8 [0x8])) [0 pm_idle+0 S4 A32]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 246 {*call_mem} (nil)
    (nil))
;; End of basic block 11 -> ( 12)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  12 [100.0%]  (fallthru)

;; Start of basic block ( 10 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	 24 [cc]

;; Pred edge  10 [71.0%] 
;; Pred edge  11 [100.0%]  (fallthru)
(code_label 75 74 76 12 90 "" [1 uses])

(note 76 75 78 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(note 78 76 77 12 NOTE_INSN_DELETED)

(insn 77 78 79 12 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/irqflags.h:131 (parallel [
            (set (reg/v:SI 3 r3 [orig:145 _flags ] [145])
                (asm_operands/v:SI ("	mrs	%0, cpsr	@ local_save_flags") ("=r") 0 []
                     [] 1118204))
            (clobber (reg:QI 24 cc))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 79 77 80 12 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/irqflags.h:151 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 3 r3 [orig:145 _flags ] [145])
                (const_int 1 [0x1])
                (const_int 7 [0x7]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 80 79 81 12 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/irqflags.h:151 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 86)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 12 -> ( 13 14)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  13 [0.0%]  (fallthru)
;; Succ edge  14 [100.0%] 

;; Start of basic block ( 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]

;; Pred edge  12 [0.0%]  (fallthru)
(note 81 80 124 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 124 81 125 13 arch/arm/kernel/process.c:244 discrim 1 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x11640640>)) 167 {*arm_movsi_insn} (nil))

(insn 125 124 85 13 arch/arm/kernel/process.c:244 discrim 1 (set (reg:SI 1 r1)
        (const_int 244 [0xf4])) 167 {*arm_movsi_insn} (nil))

(call_insn 85 125 86 13 arch/arm/kernel/process.c:244 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("warn_slowpath_null") [flags 0x41] <function_decl 0x10a67280 warn_slowpath_null>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 13 -> ( 14)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  14 [100.0%]  (fallthru)

;; Start of basic block ( 12 13) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	
;; live  kill	 24 [cc]

;; Pred edge  12 [100.0%] 
;; Pred edge  13 [100.0%]  (fallthru)
(code_label 86 85 87 14 91 "" [1 uses])

(note 87 86 88 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 88 87 137 14 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/irqflags.h:26 (parallel [
            (asm_operands/v ("	cpsie i			@ arch_local_irq_enable") ("") 0 []
                 [] 1104764)
            (clobber (reg:QI 24 cc))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))
;; End of basic block 14 -> ( 15)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  15 [100.0%]  (fallthru)

;; Start of basic block ( 14 3 9) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  14 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%] 
;; Pred edge  9 [100.0%]  (dfs_back)
(code_label 137 88 136 15 95 "" [2 uses])

(note 136 137 93 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(note 93 136 91 15 NOTE_INSN_DELETED)

(insn 91 93 94 15 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 3 r3 [orig:138 D.26533 ] [138])
        (mem/v:SI (reg/f:SI 4 r4 [orig:139 D.26530 ] [139]) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 94 91 95 15 include/asm-generic/bitops/non-atomic.h:105 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 3 r3 [orig:138 D.26533 ] [138])
                (const_int 1 [0x1])
                (const_int 1 [0x1]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 95 94 96 15 include/asm-generic/bitops/non-atomic.h:105 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 92)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 15 -> ( 4 16)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  4 [100.0%] 
;; Succ edge  16 [0.0%]  (fallthru,loop_exit)

;; Start of basic block ( 15) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 0 [r0] 3 [r3]
;; live  kill	 14 [lr]

;; Pred edge  15 [0.0%]  (fallthru,loop_exit)
(note 96 95 97 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(call_insn 97 96 98 16 arch/arm/kernel/process.c:248 (parallel [
            (call (mem:SI (symbol_ref:SI ("tick_nohz_restart_sched_tick") [flags 0x41] <function_decl 0x113e3700 tick_nohz_restart_sched_tick>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(insn 98 97 99 16 arch/arm/kernel/process.c:249 (set (reg:SI 0 r0)
        (const_int 2 [0x2])) 167 {*arm_movsi_insn} (nil))

(call_insn 99 98 100 16 arch/arm/kernel/process.c:249 (parallel [
            (call (mem:SI (symbol_ref:SI ("idle_notifier_call_chain") [flags 0x41] <function_decl 0x111e7780 idle_notifier_call_chain>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 100 99 101 16 arch/arm/kernel/process.c:250 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 8821437)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 101 100 102 16 arch/arm/kernel/process.c:250 (set (reg:SI 3 r3 [orig:170 <variable>.preempt_count ] [170])
        (mem/s/j:SI (plus:SI (reg/f:SI 4 r4 [orig:139 D.26530 ] [139])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/f:SI 4 r4 [orig:139 D.26530 ] [139])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (nil)))

(insn 102 101 103 16 arch/arm/kernel/process.c:250 (set (reg:SI 3 r3 [171])
        (plus:SI (reg:SI 3 r3 [orig:170 <variable>.preempt_count ] [170])
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/f:SI 4 r4 [orig:139 D.26530 ] [139])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (nil)))

(insn 103 102 104 16 arch/arm/kernel/process.c:250 (set (mem/s/j:SI (plus:SI (reg/f:SI 4 r4 [orig:139 D.26530 ] [139])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (reg:SI 3 r3 [171])) 167 {*arm_movsi_insn} (nil))

(call_insn 104 103 105 16 arch/arm/kernel/process.c:251 (parallel [
            (call (mem:SI (symbol_ref:SI ("schedule") [flags 0x41] <function_decl 0x10f44e80 schedule>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(insn 105 104 106 16 arch/arm/kernel/process.c:252 (set (reg:SI 3 r3 [orig:172 <variable>.preempt_count ] [172])
        (mem/s/j:SI (plus:SI (reg/f:SI 4 r4 [orig:139 D.26530 ] [139])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/f:SI 4 r4 [orig:139 D.26530 ] [139])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (nil)))

(insn 106 105 107 16 arch/arm/kernel/process.c:252 (set (reg:SI 3 r3 [173])
        (plus:SI (reg:SI 3 r3 [orig:172 <variable>.preempt_count ] [172])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/f:SI 4 r4 [orig:139 D.26530 ] [139])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (nil)))

(insn 107 106 108 16 arch/arm/kernel/process.c:252 (set (mem/s/j:SI (plus:SI (reg/f:SI 4 r4 [orig:139 D.26530 ] [139])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (reg:SI 3 r3 [173])) 167 {*arm_movsi_insn} (nil))

(insn 108 107 142 16 arch/arm/kernel/process.c:252 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 8821693)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(jump_insn 142 108 143 16 arch/arm/kernel/process.c:253 (set (pc)
        (label_ref 109)) 242 {*arm_jump} (nil))
;; End of basic block 16 -> ( 3)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  3 [100.0%]  (dfs_back)

(barrier 143 142 146)

(note 146 143 0 NOTE_INSN_DELETED)


;; Function cpu_idle_wait (cpu_idle_wait)[0:1345]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs




Pass 1 for finding allocno costs



   Insn 10(l0): point = 0
   Insn 9(l0): point = 2
   Insn 8(l0): point = 4
   Insn 7(l0): point = 6
   Insn 5(l0): point = 8
Compressing live ranges: from 11 to 0 - 0%
Ranges after the compression:
+++Allocating 0 bytes for conflict table (uncompressed size 0)

  regions=1, blocks=3, points=0
    allocnos=0, copies=0, conflicts=0, ranges=0

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all:
    modified regnos:
    border:
    Pressure: GENERAL_REGS=4
Disposition:
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=5, live_throughout: 13, 14, dead_or_set: 
insn=7, live_throughout: 13, 14, dead_or_set: 0
insn=8, live_throughout: 0, 13, 14, dead_or_set: 1
insn=9, live_throughout: 0, 1, 13, 14, dead_or_set: 2
insn=10, live_throughout: 13, 14, dead_or_set: 0, 1, 2


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


cpu_idle_wait

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp]
;;  ref usage 	r0={3d,1u} r1={3d,1u} r2={3d,1u} r3={2d} r12={2d} r13={1d,3u} r14={1d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 133{126d,7u,0e} in 5{4 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 6 2 NOTE_INSN_FUNCTION_BEG)

(note 6 2 5 2 NOTE_INSN_DELETED)

(insn 5 6 7 2 arch/arm/kernel/process.c:187 (parallel [
            (asm_operands/v ("dmb") ("") 0 []
                 [] 8813372)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 7 5 8 2 arch/arm/kernel/process.c:189 (set (reg:SI 0 r0)
        (symbol_ref:SI ("do_nothing") [flags 0x3] <function_decl 0x114f2c80 do_nothing>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("do_nothing") [flags 0x3] <function_decl 0x114f2c80 do_nothing>)
        (nil)))

(insn 8 7 9 2 arch/arm/kernel/process.c:189 (set (reg:SI 1 r1)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 9 8 10 2 arch/arm/kernel/process.c:189 (set (reg:SI 2 r2)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(call_insn/j 10 9 11 2 arch/arm/kernel/process.c:189 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("smp_call_function") [flags 0x41] <function_decl 0x10c9fa80 smp_call_function>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 11 10 19)

(note 19 11 0 NOTE_INSN_DELETED)


;; Function arm_machine_restart (arm_machine_restart)[0:1343]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 7 count 8 (  1.1)
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 7 count 11 (  1.6)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs

    a0 (r140,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r136,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r134,l0) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r133,l1) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r133,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a1(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a4(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a5(r133,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000


Pass 1 for finding allocno costs

    r140: preferred GENERAL_REGS, alternative NO_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS

  a0(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a1(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a4(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a5(r133,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000

   Insn 36(l0): point = 0
   Insn 35(l0): point = 2
   Insn 50(l0): point = 5
   Insn 20(l0): point = 7
   Insn 16(l0): point = 9
   Insn 19(l0): point = 11
   Insn 18(l0): point = 13
   Insn 15(l0): point = 15
   Insn 12(l0): point = 17
   Insn 21(l0): point = 19
   Insn 11(l0): point = 21
   Insn 8(l0): point = 23
   Insn 9(l0): point = 25
   Insn 2(l0): point = 27
   Insn 3(l0): point = 29
   Insn 52(l2): point = 32
   Insn 32(l1): point = 35
   Insn 31(l1): point = 37
   Insn 29(l1): point = 39
   Insn 49(l1): point = 41
   Insn 26(l1): point = 44
 a0(r140): [8..9]
 a1(r135): [12..29]
 a2(r134): [14..27]
 a3(r136): [16..25]
 a4(r133): [5..19]
 a5(r133): [35..46]
Compressing live ranges: from 47 to 12 - 25%
Ranges after the compression:
 a0(r140): [1..2]
 a1(r135): [3..9]
 a2(r134): [4..8]
 a3(r136): [5..7]
 a4(r133): [10..11] [0..6]
+++Allocating 40 bytes for conflict table (uncompressed size 48)
;; a0(r140,l0) conflicts: a4(r133,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a1(r135,l0) conflicts: a4(r133,l0) a2(r134,l0) a3(r136,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14
;; a2(r134,l0) conflicts: a4(r133,l0) a1(r135,l0) a3(r136,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14
;; a3(r136,l0) conflicts: a4(r133,l0) a1(r135,l0) a2(r134,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14
;; a4(r133,l0) conflicts: a0(r140,l0) a1(r135,l0) a2(r134,l0) a3(r136,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14

  regions=3, blocks=7, points=12
    allocnos=6, copies=0, conflicts=1, ranges=6

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 6 5 4 3 2
    all: 0r140 1r135 2r134 3r136 4r133
    modified regnos: 133 134 135 136 140
    border:
    Pressure: GENERAL_REGS=5
    Reg 140 of GENERAL_REGS has 3 regs less
    Reg 135 of GENERAL_REGS has 2 regs less
    Reg 134 of GENERAL_REGS has 2 regs less
    Reg 136 of GENERAL_REGS has 2 regs less
    Reg 133 of GENERAL_REGS has 3 regs less
      Pushing a2(r134,l0)
      Pushing a1(r135,l0)
      Pushing a3(r136,l0)
      Pushing a0(r140,l0)
      Pushing a4(r133,l0)
      Popping a4(r133,l0)  -- assign reg 4
      Popping a0(r140,l0)  -- assign reg 3
      Popping a3(r136,l0)  -- assign reg 5
      Popping a1(r135,l0)  -- assign reg 6
      Popping a2(r134,l0)  -- assign reg 7
Disposition:
    4:r133 l0     4    2:r134 l0     7    1:r135 l0     6    3:r136 l0     5
    0:r140 l0     3
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=3, live_throughout: 0, 13, dead_or_set: 1, 135
insn=2, live_throughout: 0, 13, 135, dead_or_set: 134
insn=9, live_throughout: 0, 13, 134, 135, dead_or_set: 136
insn=8, live_throughout: 13, 134, 135, 136, dead_or_set: 0, 14
insn=11, live_throughout: 13, 134, 135, 136, dead_or_set: 14
insn=21, live_throughout: 13, 134, 135, 136, dead_or_set: 133
insn=12, live_throughout: 13, 133, 134, 135, 136, dead_or_set: 14
insn=15, live_throughout: 13, 133, 134, 135, dead_or_set: 14, 136
insn=18, live_throughout: 13, 133, 135, dead_or_set: 0, 134
insn=19, live_throughout: 0, 13, 133, dead_or_set: 1, 135
insn=16, live_throughout: 0, 1, 13, 133, dead_or_set: 140
insn=20, live_throughout: 13, 133, dead_or_set: 0, 1, 14, 140
insn=50, live_throughout: 13, 133, dead_or_set: 
insn=30, live_throughout: 0, 13, 133, dead_or_set: 
insn=26, live_throughout: 13, 133, dead_or_set: 0, 14
insn=27, live_throughout: 13, 133, dead_or_set: 
insn=49, live_throughout: 13, 133, dead_or_set: 0
insn=29, live_throughout: 0, 13, dead_or_set: 133
insn=31, live_throughout: 0, 13, 133, dead_or_set: 
insn=32, live_throughout: 0, 13, 133, dead_or_set: 
insn=35, live_throughout: 13, dead_or_set: 0
insn=36, live_throughout: 13, dead_or_set: 0, 14
insn=38, live_throughout: 13, dead_or_set: 
insn=52, live_throughout: 13, dead_or_set: 
init_insns for 136: (insn_list:REG_DEP_TRUE 9 (nil))
init_insns for 140: (insn_list:REG_DEP_TRUE 16 (nil))
changing reg in insn 29
changing reg in insn 21
changing reg in insn 31
changing reg in insn 29
changing reg in insn 2
changing reg in insn 18
changing reg in insn 3
changing reg in insn 19
changing reg in insn 9
changing reg in insn 15
changing reg in insn 11
changing reg in insn 16
changing reg in insn 20


try_optimize_cfg iteration 1

Infinite loop in BB 6.
Infinite loop in BB 6.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 8.
rescanning insn with uid = 11.
deleting insn with uid = 11.
verify found no changes in insn with uid = 12.
rescanning insn with uid = 15.
deleting insn with uid = 15.
rescanning insn with uid = 20.
deleting insn with uid = 20.
verify found no changes in insn with uid = 26.
verify found no changes in insn with uid = 36.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 7 count 8 (  1.1)
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 7 count 11 (  1.6)


arm_machine_restart

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 3[r3] 4[r4] 5[r5] 6[r6] 7[r7] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={11d,5u} r1={9d,2u} r2={8d} r3={9d,1u} r4={2d,2u} r5={1d,2u} r6={1d,1u} r7={1d,1u} r12={8d} r13={1d,13u} r14={8d,1u} r15={7d} r16={7d} r17={7d} r18={7d} r19={7d} r20={7d} r21={7d} r22={7d} r23={7d} r24={8d,1u} r27={7d} r28={7d} r29={7d} r30={7d} r31={7d} r32={7d} r33={7d} r34={7d} r35={7d} r36={7d} r37={7d} r38={7d} r39={7d} r40={7d} r41={7d} r42={7d} r43={7d} r44={7d} r45={7d} r46={7d} r47={7d} r48={7d} r49={7d} r50={7d} r51={7d} r52={7d} r53={7d} r54={7d} r55={7d} r56={7d} r57={7d} r58={7d} r59={7d} r60={7d} r61={7d} r62={7d} r63={7d} r64={7d} r65={7d} r66={7d} r67={7d} r68={7d} r69={7d} r70={7d} r71={7d} r72={7d} r73={7d} r74={7d} r75={7d} r76={7d} r77={7d} r78={7d} r79={7d} r80={7d} r81={7d} r82={7d} r83={7d} r84={7d} r85={7d} r86={7d} r87={7d} r88={7d} r89={7d} r90={7d} r91={7d} r92={7d} r93={7d} r94={7d} r95={7d} r96={7d} r97={7d} r98={7d} r99={7d} r100={7d} r101={7d} r102={7d} r103={7d} r104={7d} r105={7d} r106={7d} r107={7d} r108={7d} r109={7d} r110={7d} r111={7d} r112={7d} r113={7d} r114={7d} r115={7d} r116={7d} r117={7d} r118={7d} r119={7d} r120={7d} r121={7d} r122={7d} r123={7d} r124={7d} r125={7d} r126={7d} r127={7d} 
;;    total ref usage 866{837d,29u,0e} in 21{14 regular + 7 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 4 5 10 2 NOTE_INSN_FUNCTION_BEG)

(note 10 4 14 2 NOTE_INSN_DELETED)

(note 14 10 17 2 NOTE_INSN_DELETED)

(note 17 14 3 2 NOTE_INSN_DELETED)

(insn 3 17 2 2 arch/arm/kernel/process.c:133 (set (reg/v/f:SI 6 r6 [orig:135 cmd ] [135])
        (reg:SI 1 r1 [ cmd ])) 167 {*arm_movsi_insn} (nil))

(insn 2 3 9 2 arch/arm/kernel/process.c:133 (set (reg/v:SI 7 r7 [orig:134 mode ] [134])
        (reg:SI 0 r0 [ mode ])) 167 {*arm_movsi_insn} (nil))

(insn 9 2 8 2 arch/arm/kernel/process.c:142 (set (reg/f:SI 5 r5 [136])
        (symbol_ref:SI ("cpu_cache") [flags 0xc0] <var_decl 0x114d5600 cpu_cache>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("cpu_cache") [flags 0xc0] <var_decl 0x114d5600 cpu_cache>)
        (nil)))

(call_insn 8 9 11 2 arch/arm/kernel/process.c:139 (parallel [
            (call (mem:SI (symbol_ref:SI ("setup_mm_for_reboot") [flags 0x41] <function_decl 0x114f2280 setup_mm_for_reboot>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(call_insn 11 8 21 2 arch/arm/kernel/process.c:142 (parallel [
            (call (mem:SI (mem/s/f/j/c:SI (plus:SI (reg/f:SI 5 r5 [136])
                            (const_int 4 [0x4])) [0 cpu_cache.flush_kern_all+0 S4 A32]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 246 {*call_mem} (nil)
    (nil))

(insn 21 11 12 2 arch/arm/kernel/process.c:159 (set (reg/v:SI 4 r4 [orig:133 __ms ] [133])
        (const_int 1000 [0x3e8])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 1000 [0x3e8])
        (nil)))

(call_insn 12 21 15 2 arch/arm/kernel/process.c:145 (parallel [
            (call (mem:SI (symbol_ref:SI ("cpu_v7_proc_fin") [flags 0x41] <function_decl 0x11004c00 cpu_v7_proc_fin>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(call_insn 15 12 18 2 arch/arm/kernel/process.c:148 (parallel [
            (call (mem:SI (mem/s/f/j/c:SI (plus:SI (reg/f:SI 5 r5 [136])
                            (const_int 4 [0x4])) [0 cpu_cache.flush_kern_all+0 S4 A32]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 246 {*call_mem} (nil)
    (nil))

(insn 18 15 19 2 arch/arm/kernel/process.c:153 (set (reg:SI 0 r0)
        (reg/v:SI 7 r7 [orig:134 mode ] [134])) 167 {*arm_movsi_insn} (nil))

(insn 19 18 16 2 arch/arm/kernel/process.c:153 (set (reg:SI 1 r1)
        (reg/v/f:SI 6 r6 [orig:135 cmd ] [135])) 167 {*arm_movsi_insn} (nil))

(insn 16 19 20 2 arch/arm/kernel/process.c:153 (set (reg/f:SI 3 r3 [140])
        (symbol_ref:SI ("arch_reset") [flags 0xc0] <var_decl 0x114eccc0 arch_reset>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("arch_reset") [flags 0xc0] <var_decl 0x114eccc0 arch_reset>)
        (nil)))

(call_insn 20 16 50 2 arch/arm/kernel/process.c:153 (parallel [
            (call (mem:SI (mem/f/c/i:SI (reg/f:SI 3 r3 [140]) [0 arch_reset+0 S4 A32]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 246 {*call_mem} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(jump_insn 50 20 51 2 arch/arm/kernel/process.c:159 (set (pc)
        (label_ref 27)) 242 {*arm_jump} (nil))
;; End of basic block 2 -> ( 4)
;; lr  out 	 4 [r4] 13 [sp]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  4 [100.0%] 

(barrier 51 50 30)

;; Start of basic block ( 4) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 13 [sp]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 4 [r4] 13 [sp]
;; live  gen 	
;; live  kill	 14 [lr]

;; Pred edge  4 [99.0%] 
(code_label 30 51 24 3 104 "" [1 uses])

(note 24 30 26 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(call_insn 26 24 27 3 arch/arm/kernel/process.c:159 discrim 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("__udelay") [flags 0x41] <function_decl 0x11153600 __udelay>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 3 -> ( 4)
;; lr  out 	 4 [r4] 13 [sp]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  4 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 3 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 4 [r4] 24 [cc]
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	 0 [r0] 4 [r4] 24 [cc]
;; live  kill	

;; Pred edge  3 [100.0%]  (fallthru,dfs_back)
;; Pred edge  2 [100.0%] 
(code_label 27 26 28 4 103 "" [1 uses])

(note 28 27 49 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 49 28 29 4 arch/arm/kernel/process.c:159 discrim 2 (set (reg:SI 0 r0)
        (const_int 1000 [0x3e8])) 167 {*arm_movsi_insn} (nil))

(insn 29 49 31 4 arch/arm/kernel/process.c:159 discrim 1 (set (reg/v:SI 4 r4 [orig:133 __ms ] [133])
        (plus:SI (reg/v:SI 4 r4 [orig:133 __ms ] [133])
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (nil))

(insn 31 29 32 4 arch/arm/kernel/process.c:159 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 4 r4 [orig:133 __ms ] [133])
            (const_int -1 [0xffffffffffffffff]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 32 31 33 4 arch/arm/kernel/process.c:159 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 30)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9900 [0x26ac])
        (nil)))
;; End of basic block 4 -> ( 3 5)
;; lr  out 	 0 [r0] 4 [r4] 13 [sp]
;; live  out 	 0 [r0] 4 [r4] 13 [sp]


;; Succ edge  3 [99.0%] 
;; Succ edge  5 [1.0%]  (fallthru,loop_exit)

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  4 [1.0%]  (fallthru,loop_exit)
(note 33 32 35 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 35 33 36 5 arch/arm/kernel/process.c:160 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x1164c780>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x1164c780>)
        (nil)))

(call_insn 36 35 38 5 arch/arm/kernel/process.c:160 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 5 -> ( 6)
;; lr  out 	 13 [sp]
;; live  out 	 13 [sp]


;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 5 6) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp]
;; live  gen 	
;; live  kill	

;; Pred edge  5 [100.0%]  (fallthru)
;; Pred edge  6 [100.0%]  (dfs_back)
(code_label 38 36 37 6 105 "" [1 uses])

(note 37 38 52 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(jump_insn 52 37 53 6 (set (pc)
        (label_ref 38)) 242 {*arm_jump} (nil))
;; End of basic block 6 -> ( 6)
;; lr  out 	 13 [sp]
;; live  out 	 13 [sp]


;; Succ edge  6 [100.0%]  (dfs_back)

(barrier 53 52 54)

(note 54 53 0 NOTE_INSN_DELETED)


;; Function arch_trigger_all_cpu_backtrace (arch_trigger_all_cpu_backtrace)[0:1337]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs




Pass 1 for finding allocno costs



   Insn 5(l0): point = 0
Compressing live ranges: from 3 to 0 - 0%
Ranges after the compression:
+++Allocating 0 bytes for conflict table (uncompressed size 0)

  regions=1, blocks=3, points=0
    allocnos=0, copies=0, conflicts=0, ranges=0

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all:
    modified regnos:
    border:
    Pressure: GENERAL_REGS=1
Disposition:
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=5, live_throughout: 13, 14, dead_or_set: 


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


arch_trigger_all_cpu_backtrace

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 13[sp]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r3={2d} r12={2d} r13={1d,3u} r14={1d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 127{123d,4u,0e} in 1{0 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)

(call_insn/j 5 2 6 2 arch/arm/kernel/process.c:69 (parallel [
            (call (mem:SI (symbol_ref:SI ("smp_send_all_cpu_backtrace") [flags 0x41] <function_decl 0x10c9f780 smp_send_all_cpu_backtrace>) [0 S4 A32])
                (const_int 0 [0x0]))
            (return)
            (use (const_int 0 [0x0]))
        ]) 258 {*sibcall_insn} (nil)
    (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 6 5 14)

(note 14 6 0 NOTE_INSN_DELETED)


;; Function show_data.clone.0 (show_data.clone.0)[0:1368]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 13 n_edges 17 count 25 (  1.9)
df_worklist_dataflow_doublequeue:n_basic_blocks 13 n_edges 17 count 24 (  1.8)
scanning new insn with uid = 145.
verify found no changes in insn with uid = 145.
deleting insn with uid = 10.
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 13 n_edges 17 count 25 (  1.9)
df_worklist_dataflow_doublequeue:n_basic_blocks 13 n_edges 17 count 24 (  1.8)

Pass 0 for finding allocno costs

    a25 (r190,l2) best GENERAL_REGS, cover GENERAL_REGS
    a17 (r190,l1) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r190,l0) best GENERAL_REGS, cover GENERAL_REGS
    a24 (r189,l2) best GENERAL_REGS, cover GENERAL_REGS
    a16 (r189,l1) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r189,l0) best GENERAL_REGS, cover GENERAL_REGS
    a29 (r178,l2) best GENERAL_REGS, cover GENERAL_REGS
    a30 (r177,l2) best GENERAL_REGS, cover GENERAL_REGS
    a31 (r174,l2) best GENERAL_REGS, cover GENERAL_REGS
    a32 (r173,l2) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r162,l0) best GENERAL_REGS, cover GENERAL_REGS
    a8 (r161,l0) best GENERAL_REGS, cover GENERAL_REGS
    a9 (r160,l0) best GENERAL_REGS, cover GENERAL_REGS
    a10 (r158,l0) best GENERAL_REGS, cover GENERAL_REGS
    a11 (r157,l0) best GENERAL_REGS, cover GENERAL_REGS
    a6 (r155,l0) best GENERAL_REGS, cover GENERAL_REGS
    a28 (r149,l2) best GENERAL_REGS, cover GENERAL_REGS
    a23 (r142,l2) best GENERAL_REGS, cover GENERAL_REGS
    a15 (r142,l1) best GENERAL_REGS, cover GENERAL_REGS
    a7 (r142,l0) best GENERAL_REGS, cover GENERAL_REGS
    a26 (r141,l2) best GENERAL_REGS, cover GENERAL_REGS
    a22 (r140,l2) best GENERAL_REGS, cover GENERAL_REGS
    a14 (r140,l1) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r140,l0) best GENERAL_REGS, cover GENERAL_REGS
    a21 (r139,l2) best GENERAL_REGS, cover GENERAL_REGS
    a13 (r139,l1) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r139,l0) best GENERAL_REGS, cover GENERAL_REGS
    a20 (r138,l2) best GENERAL_REGS, cover GENERAL_REGS
    a12 (r138,l1) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r138,l0) best GENERAL_REGS, cover GENERAL_REGS
    a27 (r137,l2) best GENERAL_REGS, cover GENERAL_REGS
    a19 (r135,l2) best GENERAL_REGS, cover GENERAL_REGS
    a18 (r135,l1) best GENERAL_REGS, cover GENERAL_REGS

  a0(r190,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a1(r189,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a2(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a4(r162,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a6(r155,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a7(r142,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:32000
  a8(r161,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a9(r160,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a10(r158,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a11(r157,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a12(r138,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a13(r139,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a14(r140,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a15(r142,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a16(r189,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a17(r190,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a18(r135,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a19(r135,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a20(r138,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a21(r139,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a22(r140,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a23(r142,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:100000
  a24(r189,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a25(r190,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a26(r141,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a27(r137,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a28(r149,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a29(r178,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a30(r177,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a31(r174,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a32(r173,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000


Pass 1 for finding allocno costs

    r190: preferred GENERAL_REGS, alternative NO_REGS
    r189: preferred GENERAL_REGS, alternative NO_REGS
    r178: preferred GENERAL_REGS, alternative NO_REGS
    r177: preferred GENERAL_REGS, alternative NO_REGS
    r174: preferred GENERAL_REGS, alternative NO_REGS
    r173: preferred GENERAL_REGS, alternative NO_REGS
    r162: preferred GENERAL_REGS, alternative NO_REGS
    r161: preferred GENERAL_REGS, alternative NO_REGS
    r160: preferred GENERAL_REGS, alternative NO_REGS
    r158: preferred GENERAL_REGS, alternative NO_REGS
    r157: preferred GENERAL_REGS, alternative NO_REGS
    r155: preferred GENERAL_REGS, alternative NO_REGS
    r149: preferred GENERAL_REGS, alternative NO_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS

  a0(r190,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a1(r189,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a2(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a4(r162,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a6(r155,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a7(r142,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:32000
  a8(r161,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a9(r160,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a10(r158,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a11(r157,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a12(r138,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a13(r139,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a14(r140,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a15(r142,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a16(r189,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a17(r190,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a18(r135,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a19(r135,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a20(r138,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a21(r139,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a22(r140,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a23(r142,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:100000
  a24(r189,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a25(r190,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a26(r141,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a27(r137,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a28(r149,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a29(r178,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a30(r177,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a31(r174,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a32(r173,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000

   Insn 60(l0): point = 1
   Insn 51(l0): point = 3
   Insn 23(l0): point = 5
   Insn 19(l0): point = 7
   Insn 142(l0): point = 9
   Insn 42(l0): point = 11
   Insn 22(l0): point = 13
   Insn 141(l0): point = 15
   Insn 21(l0): point = 17
   Insn 20(l0): point = 19
   Insn 18(l0): point = 21
   Insn 17(l0): point = 23
   Insn 15(l0): point = 25
   Insn 12(l0): point = 28
   Insn 11(l0): point = 30
   Insn 145(l0): point = 32
   Insn 9(l0): point = 34
   Insn 4(l0): point = 36
   Insn 109(l1): point = 39
   Insn 102(l1): point = 41
   Insn 108(l1): point = 43
   Insn 105(l1): point = 45
   Insn 138(l1): point = 47
   Insn 106(l1): point = 49
   Insn 129(l1): point = 52
   Insn 50(l1): point = 54
   Insn 49(l1): point = 56
   Insn 128(l1): point = 58
   Insn 100(l2): point = 61
   Insn 99(l2): point = 63
   Insn 97(l2): point = 65
   Insn 94(l2): point = 68
   Insn 93(l2): point = 70
   Insn 139(l2): point = 73
   Insn 86(l2): point = 75
   Insn 127(l2): point = 77
   Insn 82(l2): point = 80
   Insn 80(l2): point = 82
   Insn 81(l2): point = 84
   Insn 126(l2): point = 86
   Insn 77(l2): point = 89
   Insn 75(l2): point = 92
   Insn 74(l2): point = 94
   Insn 72(l2): point = 96
   Insn 71(l2): point = 98
   Insn 70(l2): point = 100
   Insn 69(l2): point = 102
   Insn 68(l2): point = 104
   Insn 67(l2): point = 106
   Insn 66(l2): point = 108
   Insn 65(l2): point = 110
   Insn 63(l2): point = 112
   Insn 137(l2): point = 114
   Insn 125(l2): point = 116
   Insn 59(l2): point = 118
   Insn 55(l2): point = 120
   Insn 58(l2): point = 122
   Insn 57(l2): point = 124
   Insn 53(l2): point = 126
   Insn 56(l2): point = 128
 a0(r190): [1..1]
 a1(r189): [1..3]
 a2(r138): [1..11]
 a3(r139): [1..5]
 a4(r162): [6..13]
 a5(r140): [1..7]
 a6(r155): [8..36]
 a7(r142): [1..15]
 a8(r161): [14..17]
 a9(r160): [18..19]
 a10(r158): [31..32]
 a11(r157): [31..34]
 a12(r138): [39..60]
 a13(r139): [39..60]
 a14(r140): [39..60]
 a15(r142): [39..60]
 a16(r189): [39..60]
 a17(r190): [39..60]
 a18(r135): [52..52]
 a19(r135): [61..130]
 a20(r138): [61..130]
 a21(r139): [61..130]
 a22(r140): [61..130]
 a23(r142): [61..130]
 a24(r189): [61..130]
 a25(r190): [61..130]
 a26(r141): [83..126]
 a27(r137): [85..108]
 a28(r149): [95..96]
 a29(r178): [101..102]
 a30(r177): [103..104]
 a31(r174): [123..124]
 a32(r173): [125..128]
 Rebuilding regno allocno list for 178
 Rebuilding regno allocno list for 177
 Rebuilding regno allocno list for 174
 Rebuilding regno allocno list for 173
 Rebuilding regno allocno list for 149
 Rebuilding regno allocno list for 141
 Rebuilding regno allocno list for 137
 Rebuilding regno allocno list for 135
Compressing live ranges: from 131 to 35 - 26%
Ranges after the compression:
 a0(r190): [17..34] [0..0]
 a1(r189): [17..34] [0..1]
 a2(r138): [17..34] [0..6]
 a3(r139): [17..34] [0..2]
 a4(r162): [3..7]
 a5(r140): [17..34] [0..4]
 a6(r155): [5..16]
 a7(r142): [17..34] [0..9]
 a8(r161): [8..10]
 a9(r160): [11..12]
 a10(r158): [13..14]
 a11(r157): [13..15]
 a18(r135): [19..34] [18..18]
 a26(r141): [20..32]
 a27(r137): [21..28]
 a28(r149): [22..23]
 a29(r178): [24..25]
 a30(r177): [26..27]
 a31(r174): [29..30]
 a32(r173): [31..33]
+++Allocating 160 bytes for conflict table (uncompressed size 264)
;; a0(r190,l0) conflicts: a1(r189,l0) a2(r138,l0) a3(r139,l0) a5(r140,l0) a7(r142,l0) a18(r135,l0) a26(r141,l0) a27(r137,l0) a28(r149,l0) a29(r178,l0) a30(r177,l0) a31(r174,l0) a32(r173,l0)
;;     total conflict hard regs: 0-2 14
;;     conflict hard regs: 0-2 14
;; a1(r189,l0) conflicts: a0(r190,l0) a2(r138,l0) a3(r139,l0) a5(r140,l0) a7(r142,l0) a18(r135,l0) a26(r141,l0) a27(r137,l0) a28(r149,l0) a29(r178,l0) a30(r177,l0) a31(r174,l0) a32(r173,l0)
;;     total conflict hard regs: 0-2 14
;;     conflict hard regs: 0-2 14
;; a2(r138,l0) conflicts: a0(r190,l0) a1(r189,l0) a3(r139,l0) a5(r140,l0) a7(r142,l0) a4(r162,l0) a6(r155,l0) a18(r135,l0) a26(r141,l0) a27(r137,l0) a28(r149,l0) a29(r178,l0) a30(r177,l0) a31(r174,l0) a32(r173,l0)
;;     total conflict hard regs: 0-2 14
;;     conflict hard regs: 0-2 14
;; a3(r139,l0) conflicts: a0(r190,l0) a1(r189,l0) a2(r138,l0) a5(r140,l0) a7(r142,l0) a18(r135,l0) a26(r141,l0) a27(r137,l0) a28(r149,l0) a29(r178,l0) a30(r177,l0) a31(r174,l0) a32(r173,l0)
;;     total conflict hard regs: 0-2 14
;;     conflict hard regs: 0-2 14
;; a4(r162,l0) conflicts: a2(r138,l0) a5(r140,l0) a7(r142,l0) a6(r155,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a5(r140,l0) conflicts: a0(r190,l0) a1(r189,l0) a2(r138,l0) a3(r139,l0) a7(r142,l0) a4(r162,l0) a18(r135,l0) a26(r141,l0) a27(r137,l0) a28(r149,l0) a29(r178,l0) a30(r177,l0) a31(r174,l0) a32(r173,l0)
;;     total conflict hard regs: 0-2 14
;;     conflict hard regs: 0-2 14
;; a6(r155,l0) conflicts: a2(r138,l0) a7(r142,l0) a4(r162,l0) a8(r161,l0) a9(r160,l0) a10(r158,l0) a11(r157,l0)
;;     total conflict hard regs: 0-2 14
;;     conflict hard regs: 0-2 14
;; a7(r142,l0) conflicts: a0(r190,l0) a1(r189,l0) a2(r138,l0) a3(r139,l0) a5(r140,l0) a4(r162,l0) a6(r155,l0) a8(r161,l0) a18(r135,l0) a26(r141,l0) a27(r137,l0) a28(r149,l0) a29(r178,l0) a30(r177,l0) a31(r174,l0) a32(r173,l0)
;;     total conflict hard regs: 0-2 14
;;     conflict hard regs: 0-2 14
;; a8(r161,l0) conflicts: a7(r142,l0) a6(r155,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a9(r160,l0) conflicts: a6(r155,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a10(r158,l0) conflicts: a6(r155,l0) a11(r157,l0)
;;     total conflict hard regs: 1 14
;;     conflict hard regs: 1 14
;; a11(r157,l0) conflicts: a6(r155,l0) a10(r158,l0)
;;     total conflict hard regs: 1 14
;;     conflict hard regs: 1 14
;; a18(r135,l0) conflicts: a0(r190,l0) a1(r189,l0) a2(r138,l0) a3(r139,l0) a5(r140,l0) a7(r142,l0) a26(r141,l0) a27(r137,l0) a28(r149,l0) a29(r178,l0) a30(r177,l0) a31(r174,l0) a32(r173,l0)
;;     total conflict hard regs: 0-2 14
;;     conflict hard regs: 0-2 14
;; a26(r141,l0) conflicts: a0(r190,l0) a1(r189,l0) a2(r138,l0) a3(r139,l0) a5(r140,l0) a7(r142,l0) a18(r135,l0) a27(r137,l0) a28(r149,l0) a29(r178,l0) a30(r177,l0) a31(r174,l0) a32(r173,l0)
;;     total conflict hard regs: 0-2 14
;;     conflict hard regs: 0-2 14
;; a27(r137,l0) conflicts: a0(r190,l0) a1(r189,l0) a2(r138,l0) a3(r139,l0) a5(r140,l0) a7(r142,l0) a18(r135,l0) a26(r141,l0) a28(r149,l0) a29(r178,l0) a30(r177,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14
;; a28(r149,l0) conflicts: a0(r190,l0) a1(r189,l0) a2(r138,l0) a3(r139,l0) a5(r140,l0) a7(r142,l0) a18(r135,l0) a26(r141,l0) a27(r137,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a29(r178,l0) conflicts: a0(r190,l0) a1(r189,l0) a2(r138,l0) a3(r139,l0) a5(r140,l0) a7(r142,l0) a18(r135,l0) a26(r141,l0) a27(r137,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a30(r177,l0) conflicts: a0(r190,l0) a1(r189,l0) a2(r138,l0) a3(r139,l0) a5(r140,l0) a7(r142,l0) a18(r135,l0) a26(r141,l0) a27(r137,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a31(r174,l0) conflicts: a0(r190,l0) a1(r189,l0) a2(r138,l0) a3(r139,l0) a5(r140,l0) a7(r142,l0) a18(r135,l0) a26(r141,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a32(r173,l0) conflicts: a0(r190,l0) a1(r189,l0) a2(r138,l0) a3(r139,l0) a5(r140,l0) a7(r142,l0) a18(r135,l0) a26(r141,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  cp0:a31(r174)<->a32(r173)@125:shuffle
  cp1:a29(r178)<->a30(r177)@125:shuffle
  cp2:a8(r161)<->a9(r160)@125:shuffle
  cp3:a4(r162)<->a8(r161)@125:shuffle
  cp4:a5(r140)<->a6(r155)@125:shuffle
  cp5:a3(r139)<->a4(r162)@125:shuffle
  regions=3, blocks=13, points=35
    allocnos=33, copies=6, conflicts=1, ranges=27

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 12 11 10 9 8 7 6 5 4 3 2
    all: 0r190 1r189 2r138 3r139 4r162 5r140 6r155 7r142 8r161 9r160 10r158 11r157 18r135 26r141 27r137 28r149 29r178 30r177 31r174 32r173
    modified regnos: 135 137 138 139 140 141 142 149 155 157 158 160 161 162 173 174 177 178 189 190
    border:
    Pressure: GENERAL_REGS=12
    Reg 190 of GENERAL_REGS has 4 regs less
    Reg 189 of GENERAL_REGS has 4 regs less
    Reg 138 of GENERAL_REGS has 4 regs less
    Reg 139 of GENERAL_REGS has 4 regs less
    Reg 140 of GENERAL_REGS has 4 regs less
    Reg 155 of GENERAL_REGS has 4 regs less
    Reg 142 of GENERAL_REGS has 4 regs less
    Reg 158 of GENERAL_REGS has 2 regs less
    Reg 157 of GENERAL_REGS has 2 regs less
    Reg 135 of GENERAL_REGS has 4 regs less
    Reg 141 of GENERAL_REGS has 4 regs less
    Reg 137 of GENERAL_REGS has 2 regs less
      Pushing a32(r173,l0)
      Pushing a31(r174,l0)
      Pushing a30(r177,l0)
      Pushing a29(r178,l0)
      Pushing a28(r149,l0)
      Pushing a9(r160,l0)
      Pushing a8(r161,l0)
      Pushing a4(r162,l0)
      Pushing a27(r137,l0)
      Pushing a11(r157,l0)
      Pushing a10(r158,l0)
      Pushing a6(r155,l0)
      Pushing a0(r190,l0)(potential spill: pri=1666, cost=20000)
      Pushing a1(r189,l0)(potential spill: pri=1818, cost=20000)
      Pushing a26(r141,l0)
      Pushing a3(r139,l0)
      Pushing a18(r135,l0)
      Pushing a5(r140,l0)
      Pushing a2(r138,l0)
      Pushing a7(r142,l0)
      Popping a7(r142,l0)  -- assign reg 4
      Popping a2(r138,l0)  -- assign reg 5
      Popping a5(r140,l0)  -- assign reg 6
      Popping a18(r135,l0)  -- assign reg 7
      Popping a3(r139,l0)  -- assign reg 8
      Popping a26(r141,l0)  -- assign reg 10
      Popping a1(r189,l0)  -- assign reg 9
      Popping a0(r190,l0)  -- assign reg 11
      Popping a6(r155,l0)  -- assign reg 6
      Popping a10(r158,l0)  -- assign reg 3
      Popping a11(r157,l0)  -- assign reg 2
      Popping a27(r137,l0)  -- assign reg 3
      Popping a4(r162,l0)  -- assign reg 8
      Popping a8(r161,l0)  -- assign reg 8
      Popping a9(r160,l0)  -- assign reg 8
      Popping a28(r149,l0)  -- assign reg 2
      Popping a29(r178,l0)  -- assign reg 2
      Popping a30(r177,l0)  -- assign reg 2
      Popping a31(r174,l0)  -- assign reg 3
      Popping a32(r173,l0)  -- assign reg 3
Disposition:
   18:r135 l0     7   27:r137 l0     3    2:r138 l0     5    3:r139 l0     8
    5:r140 l0     6   26:r141 l0    10    7:r142 l0     4   28:r149 l0     2
    6:r155 l0     6   11:r157 l0     2   10:r158 l0     3    9:r160 l0     8
    8:r161 l0     8    4:r162 l0     8   32:r173 l0     3   31:r174 l0     3
   30:r177 l0     2   29:r178 l0     2    1:r189 l0     9    0:r190 l0    11
New iteration of spill/restore move
+++Costs: overall 22000, reg 22000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=4, live_throughout: 1, 13, 14, dead_or_set: 0, 155
insn=9, live_throughout: 1, 13, 14, 155, dead_or_set: 157
insn=145, live_throughout: 1, 13, 14, 155, 157, dead_or_set: 158
insn=11, live_throughout: 1, 13, 14, 155, dead_or_set: 157, 158
insn=12, live_throughout: 1, 13, 14, 155, dead_or_set: 
insn=15, live_throughout: 1, 13, 155, dead_or_set: 0
insn=17, live_throughout: 0, 1, 13, 155, dead_or_set: 2
insn=18, live_throughout: 13, 155, dead_or_set: 0, 1, 2, 14
insn=20, live_throughout: 13, 155, dead_or_set: 160
insn=21, live_throughout: 13, 155, dead_or_set: 160, 161
insn=141, live_throughout: 13, 155, 161, dead_or_set: 142
insn=22, live_throughout: 13, 142, 155, dead_or_set: 161, 162
insn=42, live_throughout: 13, 142, 155, 162, dead_or_set: 138
insn=142, live_throughout: 13, 138, 155, 162, dead_or_set: 142
insn=19, live_throughout: 13, 138, 142, 162, dead_or_set: 140, 155
insn=23, live_throughout: 13, 138, 140, 142, dead_or_set: 139, 162
insn=51, live_throughout: 13, 138, 139, 140, 142, dead_or_set: 189
insn=60, live_throughout: 13, 138, 139, 140, 142, 189, dead_or_set: 190
insn=107, live_throughout: 13, 138, 139, 140, 142, 189, 190, dead_or_set: 
insn=128, live_throughout: 13, 138, 139, 140, 142, 189, 190, dead_or_set: 0
insn=49, live_throughout: 0, 13, 138, 139, 140, 142, 189, 190, dead_or_set: 1
insn=50, live_throughout: 13, 138, 139, 140, 142, 189, 190, dead_or_set: 0, 1, 14
insn=129, live_throughout: 13, 138, 139, 140, 142, 189, 190, dead_or_set: 135
insn=98, live_throughout: 13, 135, 138, 139, 140, 142, 189, 190, dead_or_set: 
insn=56, live_throughout: 13, 135, 138, 139, 140, 142, 189, 190, dead_or_set: 173
insn=53, live_throughout: 13, 135, 138, 139, 140, 142, 173, 189, 190, dead_or_set: 141
insn=57, live_throughout: 13, 135, 138, 139, 140, 141, 142, 189, 190, dead_or_set: 173, 174
insn=58, live_throughout: 13, 135, 138, 139, 140, 141, 142, 189, 190, dead_or_set: 174
insn=55, live_throughout: 13, 135, 138, 139, 140, 141, 142, 189, 190, dead_or_set: 
insn=59, live_throughout: 13, 135, 138, 139, 140, 141, 142, 189, 190, dead_or_set: 
insn=125, live_throughout: 13, 135, 138, 139, 140, 141, 142, 189, 190, dead_or_set: 2
insn=137, live_throughout: 2, 13, 135, 138, 139, 140, 141, 142, 189, 190, dead_or_set: 0
insn=63, live_throughout: 0, 2, 13, 135, 138, 139, 140, 141, 142, 189, 190, dead_or_set: 1
insn=65, live_throughout: 13, 135, 138, 139, 140, 141, 142, 189, 190, dead_or_set: 0, 1, 2, 14
insn=66, live_throughout: 13, 135, 138, 139, 140, 141, 142, 189, 190, dead_or_set: 0, 137
insn=67, live_throughout: 13, 135, 137, 138, 139, 140, 141, 142, 189, 190, dead_or_set: 
insn=68, live_throughout: 13, 135, 137, 138, 139, 140, 141, 142, 189, 190, dead_or_set: 177
insn=69, live_throughout: 13, 135, 137, 138, 139, 140, 141, 142, 189, 190, dead_or_set: 177, 178
insn=70, live_throughout: 13, 135, 137, 138, 139, 140, 141, 142, 189, 190, dead_or_set: 178
insn=71, live_throughout: 13, 135, 137, 138, 139, 140, 141, 142, 189, 190, dead_or_set: 
insn=72, live_throughout: 13, 135, 137, 138, 139, 140, 141, 142, 189, 190, dead_or_set: 149
insn=74, live_throughout: 13, 135, 137, 138, 139, 140, 141, 142, 189, 190, dead_or_set: 149
insn=75, live_throughout: 13, 135, 137, 138, 139, 140, 141, 142, 189, 190, dead_or_set: 
insn=77, live_throughout: 13, 135, 137, 138, 139, 140, 141, 142, 189, 190, dead_or_set: 14
insn=78, live_throughout: 13, 135, 137, 138, 139, 140, 141, 142, 189, 190, dead_or_set: 
insn=126, live_throughout: 13, 135, 137, 138, 139, 140, 141, 142, 189, 190, dead_or_set: 0
insn=81, live_throughout: 0, 13, 135, 138, 139, 140, 141, 142, 189, 190, dead_or_set: 137
insn=80, live_throughout: 0, 13, 24, 135, 138, 139, 140, 142, 189, 190, dead_or_set: 141
insn=82, live_throughout: 0, 13, 135, 138, 139, 140, 142, 189, 190, dead_or_set: 
insn=127, live_throughout: 13, 135, 138, 139, 140, 142, 189, 190, dead_or_set: 0
insn=86, live_throughout: 13, 135, 138, 139, 140, 142, 189, 190, dead_or_set: 0, 14
insn=139, live_throughout: 13, 135, 138, 139, 140, 142, 189, 190, dead_or_set: 
insn=89, live_throughout: 0, 13, 135, 138, 139, 140, 142, 189, 190, dead_or_set: 
insn=93, live_throughout: 0, 13, 135, 138, 139, 140, 142, 189, 190, dead_or_set: 1
insn=94, live_throughout: 13, 135, 138, 139, 140, 142, 189, 190, dead_or_set: 0, 1, 14
insn=95, live_throughout: 13, 135, 138, 139, 140, 142, 189, 190, dead_or_set: 
insn=97, live_throughout: 13, 138, 139, 140, 142, 189, 190, dead_or_set: 135
insn=99, live_throughout: 13, 135, 138, 139, 140, 142, 189, 190, dead_or_set: 
insn=100, live_throughout: 13, 135, 138, 139, 140, 142, 189, 190, dead_or_set: 
insn=106, live_throughout: 13, 139, 140, 142, 189, 190, dead_or_set: 138
insn=138, live_throughout: 13, 138, 139, 140, 142, 189, 190, dead_or_set: 0
insn=105, live_throughout: 13, 138, 139, 140, 142, 189, 190, dead_or_set: 0, 14
insn=108, live_throughout: 13, 14, 138, 139, 140, 142, 189, 190, dead_or_set: 
insn=102, live_throughout: 13, 14, 24, 138, 139, 142, 189, 190, dead_or_set: 140
insn=109, live_throughout: 13, 14, 138, 139, 140, 142, 189, 190, dead_or_set: 
insn=115, live_throughout: 13, 14, dead_or_set: 
init_insns for 158: (insn_list:REG_DEP_TRUE 145 (nil))
init_insns for 173: (insn_list:REG_DEP_TRUE 56 (nil))
init_insns for 174: (insn_list:REG_DEP_TRUE 58 (nil))
init_insns for 177: (insn_list:REG_DEP_TRUE 68 (nil))
init_insns for 178: (insn_list:REG_DEP_TRUE 70 (nil))
init_insns for 189: (insn_list:REG_DEP_TRUE 51 (nil))
init_insns for 190: (insn_list:REG_DEP_TRUE 60 (nil))
changing reg in insn 129
changing reg in insn 97
changing reg in insn 63
changing reg in insn 99
changing reg in insn 97
changing reg in insn 66
changing reg in insn 81
changing reg in insn 106
changing reg in insn 42
changing reg in insn 51
changing reg in insn 108
changing reg in insn 106
changing reg in insn 23
changing reg in insn 108
changing reg in insn 102
changing reg in insn 19
changing reg in insn 63
changing reg in insn 102
changing reg in insn 53
changing reg in insn 80
changing reg in insn 142
changing reg in insn 141
changing reg in insn 142
changing reg in insn 55
changing reg in insn 80
changing reg in insn 72
changing reg in insn 70
changing reg in insn 68
changing reg in insn 58
changing reg in insn 56
changing reg in insn 53
changing reg in insn 69
changing reg in insn 57
changing reg in insn 68
changing reg in insn 56
changing reg in insn 72
changing reg in insn 74
changing reg in insn 4
changing reg in insn 20
changing reg in insn 19
changing reg in insn 17
changing reg in insn 9
changing reg in insn 9
changing reg in insn 11
changing reg in insn 11
changing reg in insn 145
changing reg in insn 11
changing reg in insn 20
changing reg in insn 21
changing reg in insn 21
changing reg in insn 22
changing reg in insn 22
changing reg in insn 23
changing reg in insn 56
changing reg in insn 57
changing reg in insn 57
changing reg in insn 58
changing reg in insn 68
changing reg in insn 69
changing reg in insn 69
changing reg in insn 70
changing reg in insn 51
changing reg in insn 55
changing reg in insn 60
changing reg in insn 137
3 uses a new slot
3 uses a slot from prev iteration
3 uses a slot from prev iteration
Spilling for insn 141.
Using reg 3 for reload 0
Spilling for insn 58.
Spilling for insn 55.
Spilling for insn 70.
Spilling for insn 147.
Spilling for insn 80.

Reloads for insn # 141
Reload 0: reload_in (SI) = (reg/f:SI 13 sp)
	GENERAL_REGS, RELOAD_FOR_INPUT (opnum = 1)
	reload_in_reg: (reg/f:SI 13 sp)
	reload_reg_rtx: (reg:SI 3 r3)

Reloads for insn # 58
Reload 0: reload_out (SI) = (mem/s/j:SI (plus:SI (reg/f:SI 4 r4 [orig:142 D.26609 ] [142])
                                                        (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:SI (plus:SI (reg/f:SI 4 r4 [orig:142 D.26609 ] [142])
                                                        (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])

Reloads for insn # 55
Reload 0: reload_out (SI) = (mem/s/j:SI (plus:SI (reg/f:SI 4 r4 [orig:142 D.26609 ] [142])
                                                        (const_int 8 [0x8])) [0 <variable>.addr_limit+0 S4 A64])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:SI (plus:SI (reg/f:SI 4 r4 [orig:142 D.26609 ] [142])
                                                        (const_int 8 [0x8])) [0 <variable>.addr_limit+0 S4 A64])

Reloads for insn # 70
Reload 0: reload_out (SI) = (mem/s/j:SI (plus:SI (reg/f:SI 4 r4 [orig:142 D.26609 ] [142])
                                                        (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:SI (plus:SI (reg/f:SI 4 r4 [orig:142 D.26609 ] [142])
                                                        (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])

Reloads for insn # 147
Reload 0: reload_out (SI) = (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 4 [0x4])) [0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 4 [0x4])) [0 S4 A32])

Reloads for insn # 80
Reload 0: reload_out (SI) = (mem/s/j:SI (plus:SI (reg/f:SI 4 r4 [orig:142 D.26609 ] [142])
                                                        (const_int 8 [0x8])) [0 <variable>.addr_limit+0 S4 A64])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:SI (plus:SI (reg/f:SI 4 r4 [orig:142 D.26609 ] [142])
                                                        (const_int 8 [0x8])) [0 <variable>.addr_limit+0 S4 A64])


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 18.
verify found no changes in insn with uid = 50.
verify found no changes in insn with uid = 65.
verify found no changes in insn with uid = 77.
verify found no changes in insn with uid = 86.
verify found no changes in insn with uid = 94.
verify found no changes in insn with uid = 105.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 13 n_edges 17 count 25 (  1.9)
df_worklist_dataflow_doublequeue:n_basic_blocks 13 n_edges 17 count 24 (  1.8)


show_data.clone.0

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 7[r7] 8[r8] 9[r9] 10[sl] 11[fp] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={14d,8u} r1={11d,4u} r2={14d,6u,1d} r3={14d,6u} r4={2d,9u,4d} r5={2d,3u} r6={3d,7u} r7={2d,3u} r8={4d,4u} r9={1d,1u} r10={1d,1u} r11={1d,1u} r12={8d} r13={1d,24u,1d} r14={8d,1u} r15={7d} r16={7d} r17={7d} r18={7d} r19={7d} r20={7d} r21={7d} r22={7d} r23={7d} r24={12d,5u} r27={7d} r28={7d} r29={7d} r30={7d} r31={7d} r32={7d} r33={7d} r34={7d} r35={7d} r36={7d} r37={7d} r38={7d} r39={7d} r40={7d} r41={7d} r42={7d} r43={7d} r44={7d} r45={7d} r46={7d} r47={7d} r48={7d} r49={7d} r50={7d} r51={7d} r52={7d} r53={7d} r54={7d} r55={7d} r56={7d} r57={7d} r58={7d} r59={7d} r60={7d} r61={7d} r62={7d} r63={7d} r64={7d} r65={7d} r66={7d} r67={7d} r68={7d} r69={7d} r70={7d} r71={7d} r72={7d} r73={7d} r74={7d} r75={7d} r76={7d} r77={7d} r78={7d} r79={7d} r80={7d} r81={7d} r82={7d} r83={7d} r84={7d} r85={7d} r86={7d} r87={7d} r88={7d} r89={7d} r90={7d} r91={7d} r92={7d} r93={7d} r94={7d} r95={7d} r96={7d} r97={7d} r98={7d} r99={7d} r100={7d} r101={7d} r102={7d} r103={7d} r104={7d} r105={7d} r106={7d} r107={7d} r108={7d} r109={7d} r110={7d} r111={7d} r112={7d} r113={7d} r114={7d} r115={7d} r116={7d} r117={7d} r118={7d} r119={7d} r120={7d} r121={7d} r122={7d} r123={7d} r124={7d} r125={7d} r126={7d} r127={7d} 
;;    total ref usage 957{868d,83u,6e} in 63{56 regular + 7 call} insns.
(note 3 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 6 [r6] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 6 [r6] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 3 6 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 6 7 4 2 NOTE_INSN_FUNCTION_BEG)

(insn 4 6 9 2 arch/arm/kernel/process.c:303 (set (reg/v:SI 6 r6 [orig:155 addr ] [155])
        (reg:SI 0 r0 [ addr ])) 167 {*arm_movsi_insn} (nil))

(insn 9 4 145 2 arch/arm/kernel/process.c:313 (set (reg:SI 2 r2 [157])
        (plus:SI (reg/v:SI 6 r6 [orig:155 addr ] [155])
            (const_int 1073741824 [0x40000000]))) 4 {*arm_addsi3} (nil))

(insn 145 9 11 2 arch/arm/kernel/process.c:313 (set (reg:SI 3 r3 [158])
        (const_int 1073741568 [0x3fffff00])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 1073741568 [0x3fffff00])
        (nil)))

(insn 11 145 12 2 arch/arm/kernel/process.c:313 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2 r2 [157])
            (reg:SI 3 r3 [158]))) 219 {*arm_cmpsi_insn} (expr_list:REG_EQUAL (compare:CC (reg:SI 2 r2 [157])
            (const_int 1073741568 [0x3fffff00]))
        (nil)))

(jump_insn 12 11 13 2 arch/arm/kernel/process.c:313 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 115)
            (pc))) 229 {*arm_cond_branch} (nil))
;; End of basic block 2 -> ( 12 3)
;; lr  out 	 1 [r1] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 6 [r6] 13 [sp] 14 [lr]


;; Succ edge  12 [100.0%] 
;; Succ edge  3 [0.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 6 [r6] 13 [sp]
;; lr  use 	 1 [r1] 6 [r6] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 11 [fp] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 1 [r1] 6 [r6] 13 [sp]
;; live  gen 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 11 [fp]
;; live  kill	 14 [lr]

;; Pred edge  2 [0.0%]  (fallthru)
(note 13 12 25 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 25 13 15 3 NOTE_INSN_DELETED)

(insn 15 25 17 3 arch/arm/kernel/process.c:316 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x1159e8a0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x1159e8a0>)
        (nil)))

(insn 17 15 18 3 arch/arm/kernel/process.c:316 (set (reg:SI 2 r2)
        (reg/v:SI 6 r6 [orig:155 addr ] [155])) 167 {*arm_movsi_insn} (nil))

(call_insn 18 17 20 3 arch/arm/kernel/process.c:316 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 20 18 21 3 arch/arm/kernel/process.c:324 (set (reg:SI 8 r8 [160])
        (and:SI (reg/v:SI 6 r6 [orig:155 addr ] [155])
            (const_int 3 [0x3]))) 67 {*arm_andsi3_insn} (nil))

(insn 21 20 149 3 arch/arm/kernel/process.c:324 (set (reg:SI 8 r8 [161])
        (plus:SI (reg:SI 8 r8 [160])
            (const_int 256 [0x100]))) 4 {*arm_addsi3} (nil))

(insn 149 21 141 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 3 r3)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn 141 149 22 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 4 r4 [orig:142 D.26609 ] [142])
        (and:SI (reg:SI 3 r3)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 22 141 42 3 arch/arm/kernel/process.c:324 (set (reg:SI 8 r8 [162])
        (plus:SI (reg:SI 8 r8 [161])
            (const_int 31 [0x1f]))) 4 {*arm_addsi3} (nil))

(insn 42 22 142 3 arch/arm/kernel/process.c:327 (set (reg/v:SI 5 r5 [orig:138 i ] [138])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 142 42 19 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 4 r4 [orig:142 D.26609 ] [142])
        (and:SI (reg/f:SI 4 r4 [orig:142 D.26609 ] [142])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 19 142 23 3 arch/arm/kernel/process.c:322 (set (reg/v/f:SI 6 r6 [orig:140 p ] [140])
        (and:SI (reg/v:SI 6 r6 [orig:155 addr ] [155])
            (const_int -4 [0xfffffffffffffffc]))) 67 {*arm_andsi3_insn} (nil))

(insn 23 19 51 3 arch/arm/kernel/process.c:324 (set (reg/v:SI 8 r8 [orig:139 nlines ] [139])
        (ashiftrt:SI (reg:SI 8 r8 [162])
            (const_int 5 [0x5]))) 117 {*arm_shiftsi3} (nil))

(insn 51 23 60 3 arch/arm/kernel/process.c:332 (set (reg:SI 9 r9 [orig:189 ivtmp.1032 ] [189])
        (reg/v:SI 5 r5 [orig:138 i ] [138])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 0 [0x0])
        (nil)))

(insn 60 51 107 3 arch/arm/kernel/process.c:335 (set (reg/f:SI 11 fp [190])
        (plus:SI (reg/f:SI 13 sp)
            (const_int 12 [0xc]))) 4 {*arm_addsi3} (expr_list:REG_EQUIV (plus:SI (reg/f:SI 13 sp)
            (const_int 12 [0xc]))
        (nil)))
;; End of basic block 3 -> ( 4)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 11 [fp] 13 [sp]


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 11 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 6 [r6] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 7 [r7]
;; live  kill	 14 [lr]

;; Pred edge  11 (dfs_back)
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 107 60 43 4 117 "" [1 uses])

(note 43 107 46 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 46 43 47 4 NOTE_INSN_DELETED)

(note 47 46 128 4 NOTE_INSN_DELETED)

(insn 128 47 49 4 arch/arm/kernel/process.c:332 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x1164ff80>)) 167 {*arm_movsi_insn} (nil))

(insn 49 128 50 4 arch/arm/kernel/process.c:332 (set (reg:SI 1 r1)
        (zero_extend:SI (reg:HI 6 r6 [orig:140 p ] [140]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(call_insn 50 49 129 4 arch/arm/kernel/process.c:332 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 129 50 98 4 arch/arm/kernel/process.c:332 (set (reg:SI 7 r7 [orig:135 ivtmp.1032 ] [135])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))
;; End of basic block 4 -> ( 5)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 13 [sp]


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 10 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 6 [r6] 7 [r7] 9 [r9] 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 10 [sl] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 10 [sl] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  10 [88.9%]  (dfs_back)
;; Pred edge  4 [100.0%]  (fallthru)
(code_label 98 129 52 5 116 "" [1 uses])

(note 52 98 61 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 61 52 73 5 NOTE_INSN_DELETED)

(note 73 61 56 5 NOTE_INSN_DELETED)

(insn 56 73 53 5 include/linux/uaccess.h:18 (set (reg:SI 3 r3 [orig:173 <variable>.preempt_count ] [173])
        (mem/s/j:SI (plus:SI (reg/f:SI 4 r4 [orig:142 D.26609 ] [142])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/f:SI 4 r4 [orig:142 D.26609 ] [142])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (nil)))

(insn 53 56 57 5 arch/arm/kernel/process.c:335 (set (reg/v:SI 10 sl [orig:141 old_fs ] [141])
        (mem/s/j:SI (plus:SI (reg/f:SI 4 r4 [orig:142 D.26609 ] [142])
                (const_int 8 [0x8])) [0 <variable>.addr_limit+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 57 53 58 5 include/linux/uaccess.h:18 (set (reg:SI 3 r3 [174])
        (plus:SI (reg:SI 3 r3 [orig:173 <variable>.preempt_count ] [173])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/f:SI 4 r4 [orig:142 D.26609 ] [142])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (nil)))

(insn 58 57 55 5 include/linux/uaccess.h:18 (set (mem/s/j:SI (plus:SI (reg/f:SI 4 r4 [orig:142 D.26609 ] [142])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (reg:SI 3 r3 [174])) 167 {*arm_movsi_insn} (nil))

(insn 55 58 59 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/uaccess.h:65 (set (mem/s/j:SI (plus:SI (reg/f:SI 4 r4 [orig:142 D.26609 ] [142])
                (const_int 8 [0x8])) [0 <variable>.addr_limit+0 S4 A64])
        (reg:SI 9 r9 [orig:189 ivtmp.1032 ] [189])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 59 55 125 5 include/linux/uaccess.h:23 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 8095453)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 125 59 137 5 arch/arm/kernel/process.c:335 (set (reg:SI 2 r2)
        (const_int 4 [0x4])) 167 {*arm_movsi_insn} (nil))

(insn 137 125 63 5 arch/arm/kernel/process.c:335 (set (reg:SI 0 r0)
        (reg/f:SI 11 fp [190])) 167 {*arm_movsi_insn} (nil))

(insn 63 137 65 5 arch/arm/kernel/process.c:335 (set (reg:SI 1 r1)
        (plus:SI (reg/v/f:SI 6 r6 [orig:140 p ] [140])
            (reg:SI 7 r7 [orig:135 ivtmp.1032 ] [135]))) 4 {*arm_addsi3} (nil))

(call_insn 65 63 66 5 arch/arm/kernel/process.c:335 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__copy_from_user") [flags 0x41] <function_decl 0x113eda00 __copy_from_user>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 66 65 67 5 arch/arm/kernel/process.c:335 (set (reg:SI 3 r3 [orig:137 D.26611 ] [137])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 67 66 68 5 include/linux/uaccess.h:32 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 8096605)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 68 67 69 5 include/linux/uaccess.h:33 (set (reg:SI 2 r2 [orig:177 <variable>.preempt_count ] [177])
        (mem/s/j:SI (plus:SI (reg/f:SI 4 r4 [orig:142 D.26609 ] [142])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/f:SI 4 r4 [orig:142 D.26609 ] [142])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (nil)))

(insn 69 68 70 5 include/linux/uaccess.h:33 (set (reg:SI 2 r2 [178])
        (plus:SI (reg:SI 2 r2 [orig:177 <variable>.preempt_count ] [177])
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/f:SI 4 r4 [orig:142 D.26609 ] [142])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (nil)))

(insn 70 69 71 5 include/linux/uaccess.h:33 (set (mem/s/j:SI (plus:SI (reg/f:SI 4 r4 [orig:142 D.26609 ] [142])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (reg:SI 2 r2 [178])) 167 {*arm_movsi_insn} (nil))

(insn 71 70 72 5 include/linux/uaccess.h:37 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 8097245)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 72 71 74 5 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 2 r2 [orig:149 D.26594 ] [149])
        (mem/v:SI (reg/f:SI 4 r4 [orig:142 D.26609 ] [142]) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 74 72 75 5 include/asm-generic/bitops/non-atomic.h:105 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 2 r2 [orig:149 D.26594 ] [149])
                (const_int 1 [0x1])
                (const_int 1 [0x1]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 75 74 76 5 include/asm-generic/bitops/non-atomic.h:105 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 78)
            (pc))) 229 {*arm_cond_branch} (nil))
;; End of basic block 5 -> ( 6 7)
;; lr  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  6 [0.0%]  (fallthru)
;; Succ edge  7 [100.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 3 [r3]
;; live  kill	 14 [lr]

;; Pred edge  5 [0.0%]  (fallthru)
(note 76 75 147 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 147 76 77 6 include/linux/uaccess.h:38 discrim 1 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 3 r3)) 167 {*arm_movsi_insn} (nil))

(call_insn 77 147 148 6 include/linux/uaccess.h:38 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("preempt_schedule") [flags 0x41] <function_decl 0x10aa7a00 preempt_schedule>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(insn 148 77 78 6 include/linux/uaccess.h:38 discrim 1 (set (reg:SI 3 r3)
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 6 -> ( 7)
;; lr  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 5 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 3 [r3] 4 [r4] 10 [sl] 13 [sp]
;; lr  def 	 0 [r0] 24 [cc]
;; live  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 24 [cc]
;; live  kill	

;; Pred edge  5 [100.0%] 
;; Pred edge  6 [100.0%]  (fallthru)
(code_label 78 148 79 7 113 "" [1 uses])

(note 79 78 126 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 126 79 81 7 arch/arm/kernel/process.c:338 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC6") [flags 0x82] <string_cst 0x1165cdc0>)) 167 {*arm_movsi_insn} (nil))

(insn 81 126 80 7 arch/arm/kernel/process.c:335 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [orig:137 D.26611 ] [137])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn 80 81 82 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/uaccess.h:65 (set (mem/s/j:SI (plus:SI (reg/f:SI 4 r4 [orig:142 D.26609 ] [142])
                (const_int 8 [0x8])) [0 <variable>.addr_limit+0 S4 A64])
        (reg/v:SI 10 sl [orig:141 old_fs ] [141])) 167 {*arm_movsi_insn} (nil))

(jump_insn 82 80 83 7 arch/arm/kernel/process.c:335 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 89)
            (pc))) 229 {*arm_cond_branch} (nil))
;; End of basic block 7 -> ( 8 9)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 13 [sp]


;; Succ edge  8 [50.0%]  (fallthru)
;; Succ edge  9 [50.0%] 

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  7 [50.0%]  (fallthru)
(note 83 82 127 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 127 83 86 8 arch/arm/kernel/process.c:336 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC5") [flags 0x82] <string_cst 0x1165f7b0>)) 167 {*arm_movsi_insn} (nil))

(call_insn 86 127 139 8 arch/arm/kernel/process.c:336 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(jump_insn 139 86 140 8 (set (pc)
        (label_ref 95)) 242 {*arm_jump} (nil))
;; End of basic block 8 -> ( 10)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 13 [sp]


;; Succ edge  10 [100.0%] 

(barrier 140 139 89)

;; Start of basic block ( 7) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]

;; Pred edge  7 [50.0%] 
(code_label 89 140 90 9 114 "" [1 uses])

(note 90 89 93 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 93 90 94 9 arch/arm/kernel/process.c:338 (set (reg:SI 1 r1)
        (mem/c/i:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 12 [0xc])) [0 data+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn 94 93 95 9 arch/arm/kernel/process.c:338 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 9 -> ( 10)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 13 [sp]


;; Succ edge  10 [100.0%]  (fallthru)

;; Start of basic block ( 9 8) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 7 [r7] 13 [sp]
;; lr  def 	 7 [r7] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 7 [r7] 24 [cc]
;; live  kill	

;; Pred edge  9 [100.0%]  (fallthru)
;; Pred edge  8 [100.0%] 
(code_label 95 94 96 10 115 "" [1 uses])

(note 96 95 97 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 97 96 99 10 arch/arm/kernel/process.c:338 (set (reg:SI 7 r7 [orig:135 ivtmp.1032 ] [135])
        (plus:SI (reg:SI 7 r7 [orig:135 ivtmp.1032 ] [135])
            (const_int 4 [0x4]))) 4 {*arm_addsi3} (nil))

(insn 99 97 100 10 arch/arm/kernel/process.c:333 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 7 r7 [orig:135 ivtmp.1032 ] [135])
            (const_int 32 [0x20]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 100 99 101 10 arch/arm/kernel/process.c:333 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 98)
            (pc))) 229 {*arm_cond_branch} (nil))
;; End of basic block 10 -> ( 5 11)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 13 [sp]


;; Succ edge  5 [88.9%]  (dfs_back)
;; Succ edge  11 [11.1%]  (fallthru,loop_exit)

;; Start of basic block ( 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 5 [r5] 6 [r6] 8 [r8] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 5 [r5] 6 [r6] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  10 [11.1%]  (fallthru,loop_exit)
(note 101 100 106 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 106 101 138 11 arch/arm/kernel/process.c:327 (set (reg/v:SI 5 r5 [orig:138 i ] [138])
        (plus:SI (reg/v:SI 5 r5 [orig:138 i ] [138])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 138 106 105 11 arch/arm/kernel/process.c:342 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC7") [flags 0x82] <string_cst 0x1165cfc0>)) 167 {*arm_movsi_insn} (nil))

(call_insn 105 138 108 11 arch/arm/kernel/process.c:342 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 108 105 102 11 arch/arm/kernel/process.c:327 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 5 r5 [orig:138 i ] [138])
            (reg/v:SI 8 r8 [orig:139 nlines ] [139]))) 219 {*arm_cmpsi_insn} (nil))

(insn 102 108 109 11 arch/arm/kernel/process.c:333 discrim 1 (set (reg/v/f:SI 6 r6 [orig:140 p ] [140])
        (plus:SI (reg/v/f:SI 6 r6 [orig:140 p ] [140])
            (const_int 32 [0x20]))) 4 {*arm_addsi3} (nil))

(jump_insn 109 102 115 11 arch/arm/kernel/process.c:327 discrim 1 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 107)
            (pc))) 229 {*arm_cond_branch} (nil))
;; End of basic block 11 -> ( 4 12)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 11 [fp] 13 [sp]


;; Succ edge  4 (dfs_back)
;; Succ edge  12 [100.0%]  (fallthru,loop_exit)

;; Start of basic block ( 11 2) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  11 [100.0%]  (fallthru,loop_exit)
;; Pred edge  2 [100.0%] 
(code_label 115 109 118 12 118 "" [1 uses])

(note 118 115 144 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 12 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 144 118 146 NOTE_INSN_DELETED)

(note 146 144 0 NOTE_INSN_DELETED)


;; Function __show_regs (__show_regs)[0:1355]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
scanning new insn with uid = 360.
verify found no changes in insn with uid = 360.
deleting insn with uid = 346.
scanning new insn with uid = 361.
verify found no changes in insn with uid = 361.
deleting insn with uid = 345.
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)

Pass 0 for finding allocno costs

    a31 (r274,l0) best GENERAL_REGS, cover GENERAL_REGS
    a32 (r273,l0) best GENERAL_REGS, cover GENERAL_REGS
    a36 (r272,l0) best GENERAL_REGS, cover GENERAL_REGS
    a37 (r271,l0) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r267,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r264,l0) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r261,l0) best GENERAL_REGS, cover GENERAL_REGS
    a6 (r258,l0) best GENERAL_REGS, cover GENERAL_REGS
    a7 (r255,l0) best GENERAL_REGS, cover GENERAL_REGS
    a8 (r252,l0) best GENERAL_REGS, cover GENERAL_REGS
    a9 (r249,l0) best GENERAL_REGS, cover GENERAL_REGS
    a10 (r246,l0) best GENERAL_REGS, cover GENERAL_REGS
    a11 (r243,l0) best GENERAL_REGS, cover GENERAL_REGS
    a12 (r240,l0) best GENERAL_REGS, cover GENERAL_REGS
    a13 (r237,l0) best GENERAL_REGS, cover GENERAL_REGS
    a14 (r234,l0) best GENERAL_REGS, cover GENERAL_REGS
    a15 (r231,l0) best GENERAL_REGS, cover GENERAL_REGS
    a16 (r228,l0) best GENERAL_REGS, cover GENERAL_REGS
    a17 (r225,l0) best GENERAL_REGS, cover GENERAL_REGS
    a19 (r222,l0) best GENERAL_REGS, cover GENERAL_REGS
    a21 (r209,l0) best GENERAL_REGS, cover GENERAL_REGS
    a33 (r207,l0) best GENERAL_REGS, cover GENERAL_REGS
    a41 (r203,l0) best GENERAL_REGS, cover GENERAL_REGS
    a42 (r200,l0) best GENERAL_REGS, cover GENERAL_REGS
    a44 (r198,l0) best GENERAL_REGS, cover GENERAL_REGS
    a43 (r197,l0) best GENERAL_REGS, cover GENERAL_REGS
    a40 (r194,l0) best GENERAL_REGS, cover GENERAL_REGS
    a39 (r193,l0) best GENERAL_REGS, cover GENERAL_REGS
    a18 (r189,l0) best GENERAL_REGS, cover GENERAL_REGS
    a45 (r181,l0) best GENERAL_REGS, cover GENERAL_REGS
    a46 (r179,l0) best GENERAL_REGS, cover GENERAL_REGS
    a47 (r176,l0) best GENERAL_REGS, cover GENERAL_REGS
    a48 (r175,l0) best GENERAL_REGS, cover GENERAL_REGS
    a49 (r174,l0) best GENERAL_REGS, cover GENERAL_REGS
    a50 (r170,l0) best GENERAL_REGS, cover GENERAL_REGS
    a51 (r167,l0) best GENERAL_REGS, cover GENERAL_REGS
    a52 (r161,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r159,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r158,l0) best GENERAL_REGS, cover GENERAL_REGS
    a53 (r157,l0) best GENERAL_REGS, cover GENERAL_REGS
    a54 (r156,l0) best GENERAL_REGS, cover GENERAL_REGS
    a30 (r154,l0) best GENERAL_REGS, cover GENERAL_REGS
    a29 (r153,l0) best GENERAL_REGS, cover GENERAL_REGS
    a28 (r152,l0) best GENERAL_REGS, cover GENERAL_REGS
    a27 (r151,l0) best GENERAL_REGS, cover GENERAL_REGS
    a35 (r150,l0) best GENERAL_REGS, cover GENERAL_REGS
    a34 (r149,l0) best GENERAL_REGS, cover GENERAL_REGS
    a26 (r148,l0) best GENERAL_REGS, cover GENERAL_REGS
    a25 (r147,l0) best GENERAL_REGS, cover GENERAL_REGS
    a24 (r146,l0) best GENERAL_REGS, cover GENERAL_REGS
    a38 (r145,l0) best GENERAL_REGS, cover GENERAL_REGS
    a20 (r144,l0) best GENERAL_REGS, cover GENERAL_REGS
    a23 (r143,l0) best GENERAL_REGS, cover GENERAL_REGS
    a22 (r142,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r134,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r159,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:92000
  a1(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r267,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r158,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:600000
  a4(r264,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a5(r261,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a6(r258,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a7(r255,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a8(r252,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a9(r249,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a10(r246,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a11(r243,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a12(r240,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a13(r237,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a14(r234,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a15(r231,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a16(r228,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a17(r225,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a18(r189,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a19(r222,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a20(r144,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a21(r209,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a22(r142,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a23(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a24(r146,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a25(r147,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a26(r148,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a27(r151,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a28(r152,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a29(r153,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a30(r154,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:22000
  a31(r274,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a32(r273,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a33(r207,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a34(r149,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a35(r150,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a36(r272,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a37(r271,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a38(r145,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:92000
  a39(r193,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a40(r194,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a41(r203,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a42(r200,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a43(r197,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a44(r198,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a45(r181,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a46(r179,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a47(r176,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a48(r175,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a49(r174,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a50(r170,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a51(r167,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a52(r161,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a53(r157,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a54(r156,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000


Pass 1 for finding allocno costs

    r274: preferred GENERAL_REGS, alternative NO_REGS
    r273: preferred GENERAL_REGS, alternative NO_REGS
    r272: preferred GENERAL_REGS, alternative NO_REGS
    r271: preferred GENERAL_REGS, alternative NO_REGS
    r267: preferred GENERAL_REGS, alternative NO_REGS
    r264: preferred GENERAL_REGS, alternative NO_REGS
    r261: preferred GENERAL_REGS, alternative NO_REGS
    r258: preferred GENERAL_REGS, alternative NO_REGS
    r255: preferred GENERAL_REGS, alternative NO_REGS
    r252: preferred GENERAL_REGS, alternative NO_REGS
    r249: preferred GENERAL_REGS, alternative NO_REGS
    r246: preferred GENERAL_REGS, alternative NO_REGS
    r243: preferred GENERAL_REGS, alternative NO_REGS
    r240: preferred GENERAL_REGS, alternative NO_REGS
    r237: preferred GENERAL_REGS, alternative NO_REGS
    r234: preferred GENERAL_REGS, alternative NO_REGS
    r231: preferred GENERAL_REGS, alternative NO_REGS
    r228: preferred GENERAL_REGS, alternative NO_REGS
    r225: preferred GENERAL_REGS, alternative NO_REGS
    r222: preferred GENERAL_REGS, alternative NO_REGS
    r209: preferred GENERAL_REGS, alternative NO_REGS
    r207: preferred GENERAL_REGS, alternative NO_REGS
    r203: preferred GENERAL_REGS, alternative NO_REGS
    r200: preferred GENERAL_REGS, alternative NO_REGS
    r198: preferred GENERAL_REGS, alternative NO_REGS
    r197: preferred GENERAL_REGS, alternative NO_REGS
    r194: preferred GENERAL_REGS, alternative NO_REGS
    r193: preferred GENERAL_REGS, alternative NO_REGS
    r189: preferred GENERAL_REGS, alternative NO_REGS
    r181: preferred GENERAL_REGS, alternative NO_REGS
    r179: preferred GENERAL_REGS, alternative NO_REGS
    r176: preferred GENERAL_REGS, alternative NO_REGS
    r175: preferred GENERAL_REGS, alternative NO_REGS
    r174: preferred GENERAL_REGS, alternative NO_REGS
    r170: preferred GENERAL_REGS, alternative NO_REGS
    r167: preferred GENERAL_REGS, alternative NO_REGS
    r161: preferred GENERAL_REGS, alternative NO_REGS
    r159: preferred GENERAL_REGS, alternative NO_REGS
    r158: preferred GENERAL_REGS, alternative NO_REGS
    r157: preferred GENERAL_REGS, alternative NO_REGS
    r156: preferred GENERAL_REGS, alternative NO_REGS
    r154: preferred GENERAL_REGS, alternative NO_REGS
    r153: preferred GENERAL_REGS, alternative NO_REGS
    r152: preferred GENERAL_REGS, alternative NO_REGS
    r151: preferred GENERAL_REGS, alternative NO_REGS
    r150: preferred GENERAL_REGS, alternative NO_REGS
    r149: preferred GENERAL_REGS, alternative NO_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS
    r147: preferred GENERAL_REGS, alternative NO_REGS
    r146: preferred GENERAL_REGS, alternative NO_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS

  a0(r159,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:92000
  a1(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r267,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r158,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:600000
  a4(r264,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a5(r261,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a6(r258,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a7(r255,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a8(r252,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a9(r249,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a10(r246,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a11(r243,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a12(r240,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a13(r237,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a14(r234,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a15(r231,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a16(r228,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a17(r225,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a18(r189,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a19(r222,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a20(r144,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a21(r209,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a22(r142,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a23(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a24(r146,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a25(r147,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a26(r148,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a27(r151,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a28(r152,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a29(r153,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a30(r154,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:22000
  a31(r274,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a32(r273,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a33(r207,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a34(r149,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a35(r150,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a36(r272,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a37(r271,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a38(r145,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:92000
  a39(r193,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a40(r194,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a41(r203,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a42(r200,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a43(r197,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a44(r198,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a45(r181,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a46(r179,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a47(r176,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a48(r175,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a49(r174,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a50(r170,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a51(r167,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a52(r161,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a53(r157,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a54(r156,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000

   Insn 329(l0): point = 0
   Insn 325(l0): point = 2
   Insn 323(l0): point = 4
   Insn 324(l0): point = 6
   Insn 320(l0): point = 8
   Insn 319(l0): point = 10
   Insn 317(l0): point = 12
   Insn 318(l0): point = 14
   Insn 314(l0): point = 16
   Insn 313(l0): point = 18
   Insn 311(l0): point = 20
   Insn 312(l0): point = 22
   Insn 308(l0): point = 24
   Insn 307(l0): point = 26
   Insn 305(l0): point = 28
   Insn 306(l0): point = 30
   Insn 302(l0): point = 32
   Insn 301(l0): point = 34
   Insn 299(l0): point = 36
   Insn 300(l0): point = 38
   Insn 296(l0): point = 40
   Insn 295(l0): point = 42
   Insn 293(l0): point = 44
   Insn 294(l0): point = 46
   Insn 290(l0): point = 48
   Insn 289(l0): point = 50
   Insn 287(l0): point = 52
   Insn 288(l0): point = 54
   Insn 284(l0): point = 56
   Insn 283(l0): point = 58
   Insn 281(l0): point = 60
   Insn 282(l0): point = 62
   Insn 278(l0): point = 64
   Insn 277(l0): point = 66
   Insn 275(l0): point = 68
   Insn 276(l0): point = 70
   Insn 272(l0): point = 72
   Insn 271(l0): point = 74
   Insn 269(l0): point = 76
   Insn 270(l0): point = 78
   Insn 266(l0): point = 80
   Insn 265(l0): point = 82
   Insn 263(l0): point = 84
   Insn 264(l0): point = 86
   Insn 260(l0): point = 88
   Insn 259(l0): point = 90
   Insn 257(l0): point = 92
   Insn 258(l0): point = 94
   Insn 254(l0): point = 96
   Insn 253(l0): point = 98
   Insn 251(l0): point = 100
   Insn 252(l0): point = 102
   Insn 248(l0): point = 104
   Insn 247(l0): point = 106
   Insn 245(l0): point = 108
   Insn 246(l0): point = 110
   Insn 242(l0): point = 112
   Insn 241(l0): point = 114
   Insn 239(l0): point = 116
   Insn 240(l0): point = 118
   Insn 236(l0): point = 120
   Insn 235(l0): point = 122
   Insn 229(l0): point = 124
   Insn 224(l0): point = 126
   Insn 233(l0): point = 128
   Insn 234(l0): point = 130
   Insn 230(l0): point = 132
   Insn 220(l0): point = 134
   Insn 217(l0): point = 136
   Insn 218(l0): point = 138
   Insn 214(l0): point = 140
   Insn 219(l0): point = 142
   Insn 213(l0): point = 144
   Insn 208(l0): point = 146
   Insn 212(l0): point = 148
   Insn 205(l0): point = 150
   Insn 204(l0): point = 152
   Insn 209(l0): point = 154
   Insn 211(l0): point = 156
   Insn 210(l0): point = 158
   Insn 201(l0): point = 160
   Insn 137(l0): point = 162
   Insn 196(l0): point = 164
   Insn 195(l0): point = 166
   Insn 194(l0): point = 168
   Insn 134(l0): point = 170
   Insn 120(l0): point = 172
   Insn 106(l0): point = 174
   Insn 92(l0): point = 176
   Insn 348(l0): point = 178
   Insn 361(l0): point = 180
   Insn 360(l0): point = 182
   Insn 197(l0): point = 184
   Insn 200(l0): point = 186
   Insn 199(l0): point = 188
   Insn 354(l0): point = 190
   Insn 180(l0): point = 192
   Insn 152(l0): point = 194
   Insn 165(l0): point = 196
   Insn 344(l0): point = 198
   Insn 176(l0): point = 200
   Insn 140(l0): point = 202
   Insn 356(l0): point = 204
   Insn 164(l0): point = 206
   Insn 342(l0): point = 208
   Insn 122(l0): point = 210
   Insn 340(l0): point = 212
   Insn 174(l0): point = 214
   Insn 341(l0): point = 216
   Insn 108(l0): point = 218
   Insn 350(l0): point = 220
   Insn 171(l0): point = 222
   Insn 94(l0): point = 224
   Insn 338(l0): point = 226
   Insn 168(l0): point = 228
   Insn 169(l0): point = 230
   Insn 163(l0): point = 232
   Insn 198(l0): point = 234
   Insn 79(l0): point = 236
   Insn 78(l0): point = 238
   Insn 73(l0): point = 240
   Insn 74(l0): point = 242
   Insn 77(l0): point = 244
   Insn 76(l0): point = 246
   Insn 75(l0): point = 248
   Insn 72(l0): point = 250
   Insn 70(l0): point = 252
   Insn 65(l0): point = 254
   Insn 66(l0): point = 256
   Insn 69(l0): point = 258
   Insn 68(l0): point = 260
   Insn 67(l0): point = 262
   Insn 64(l0): point = 264
   Insn 62(l0): point = 266
   Insn 58(l0): point = 268
   Insn 61(l0): point = 270
   Insn 60(l0): point = 272
   Insn 59(l0): point = 274
   Insn 56(l0): point = 276
   Insn 51(l0): point = 278
   Insn 49(l0): point = 280
   Insn 47(l0): point = 282
   Insn 52(l0): point = 284
   Insn 55(l0): point = 286
   Insn 54(l0): point = 288
   Insn 53(l0): point = 290
   Insn 50(l0): point = 292
   Insn 48(l0): point = 294
   Insn 46(l0): point = 296
   Insn 44(l0): point = 298
   Insn 39(l0): point = 300
   Insn 43(l0): point = 302
   Insn 42(l0): point = 304
   Insn 37(l0): point = 306
   Insn 36(l0): point = 308
   Insn 31(l0): point = 310
   Insn 35(l0): point = 312
   Insn 34(l0): point = 314
   Insn 29(l0): point = 316
   Insn 28(l0): point = 318
   Insn 24(l0): point = 320
   Insn 21(l0): point = 322
   Insn 23(l0): point = 324
   Insn 27(l0): point = 326
   Insn 25(l0): point = 328
   Insn 26(l0): point = 330
   Insn 16(l0): point = 332
   Insn 14(l0): point = 334
   Insn 15(l0): point = 336
   Insn 11(l0): point = 338
   Insn 10(l0): point = 340
   Insn 9(l0): point = 342
   Insn 135(l0): point = 344
   Insn 193(l0): point = 346
   Insn 2(l0): point = 348
   Insn 358(l0): point = 350
   Insn 12(l0): point = 352
   Insn 357(l0): point = 354
 a0(r159): [1..354]
 a1(r134): [1..126]
 a2(r267): [5..8]
 a3(r158): [9..348]
 a4(r264): [13..16]
 a5(r261): [21..24]
 a6(r258): [29..32]
 a7(r255): [37..40]
 a8(r252): [45..48]
 a9(r249): [53..56]
 a10(r246): [61..64]
 a11(r243): [69..72]
 a12(r240): [77..80]
 a13(r237): [85..88]
 a14(r234): [93..96]
 a15(r231): [101..104]
 a16(r228): [109..112]
 a17(r225): [117..120]
 a18(r189): [125..344]
 a19(r222): [129..132]
 a20(r144): [139..140]
 a21(r209): [143..346]
 a22(r142): [147..150]
 a23(r143): [149..150]
 a24(r146): [165..178]
 a25(r147): [167..200]
 a26(r148): [169..196]
 a27(r151): [171..204]
 a28(r152): [173..212]
 a29(r153): [175..220]
 a30(r154): [177..226]
 a31(r274): [179..182]
 a32(r273): [179..180]
 a33(r207): [179..192]
 a34(r149): [187..190]
 a35(r150): [189..198]
 a36(r272): [191..208]
 a37(r271): [191..216]
 a38(r145): [195..236]
 a39(r193): [197..232]
 a40(r194): [197..206]
 a41(r203): [201..214]
 a42(r200): [215..222]
 a43(r197): [223..228]
 a44(r198): [223..230]
 a45(r181): [241..250]
 a46(r179): [255..264]
 a47(r176): [279..292]
 a48(r175): [281..294]
 a49(r174): [283..296]
 a50(r170): [301..306]
 a51(r167): [311..316]
 a52(r161): [325..352]
 a53(r157): [329..342]
 a54(r156): [331..338]
Compressing live ranges: from 357 to 103 - 28%
Ranges after the compression:
 a0(r159): [0..102]
 a1(r134): [0..33]
 a2(r267): [1..2]
 a3(r158): [3..100]
 a4(r264): [4..5]
 a5(r261): [6..7]
 a6(r258): [8..9]
 a7(r255): [10..11]
 a8(r252): [12..13]
 a9(r249): [14..15]
 a10(r246): [16..17]
 a11(r243): [18..19]
 a12(r240): [20..21]
 a13(r237): [22..23]
 a14(r234): [24..25]
 a15(r231): [26..27]
 a16(r228): [28..29]
 a17(r225): [30..31]
 a18(r189): [32..98]
 a19(r222): [34..35]
 a20(r144): [36..37]
 a21(r209): [38..99]
 a22(r142): [39..41]
 a23(r143): [40..41]
 a24(r146): [42..49]
 a25(r147): [43..62]
 a26(r148): [44..59]
 a27(r151): [45..64]
 a28(r152): [46..67]
 a29(r153): [47..71]
 a30(r154): [48..74]
 a31(r274): [50..52]
 a32(r273): [50..51]
 a33(r207): [50..57]
 a34(r149): [53..55]
 a35(r150): [54..61]
 a36(r272): [56..66]
 a37(r271): [56..70]
 a38(r145): [58..78]
 a39(r193): [60..77]
 a40(r194): [60..65]
 a41(r203): [63..68]
 a42(r200): [69..72]
 a43(r197): [73..75]
 a44(r198): [73..76]
 a45(r181): [79..80]
 a46(r179): [81..82]
 a47(r176): [83..86]
 a48(r175): [84..87]
 a49(r174): [85..88]
 a50(r170): [89..90]
 a51(r167): [91..92]
 a52(r161): [93..101]
 a53(r157): [94..97]
 a54(r156): [95..96]
+++Allocating 440 bytes for conflict table (uncompressed size 440)
;; a0(r159,l0) conflicts: a1(r134,l0) a2(r267,l0) a3(r158,l0) a4(r264,l0) a5(r261,l0) a6(r258,l0) a7(r255,l0) a8(r252,l0) a9(r249,l0) a10(r246,l0) a11(r243,l0) a12(r240,l0) a13(r237,l0) a14(r234,l0) a15(r231,l0) a16(r228,l0) a17(r225,l0) a18(r189,l0) a19(r222,l0) a20(r144,l0) a21(r209,l0) a22(r142,l0) a23(r143,l0) a24(r146,l0) a25(r147,l0) a26(r148,l0) a27(r151,l0) a28(r152,l0) a29(r153,l0) a30(r154,l0) a32(r273,l0) a31(r274,l0) a33(r207,l0) a34(r149,l0) a35(r150,l0) a36(r272,l0) a37(r271,l0) a38(r145,l0) a40(r194,l0) a39(r193,l0) a41(r203,l0) a42(r200,l0) a43(r197,l0) a44(r198,l0) a45(r181,l0) a46(r179,l0) a47(r176,l0) a48(r175,l0) a49(r174,l0) a50(r170,l0) a51(r167,l0) a52(r161,l0) a53(r157,l0) a54(r156,l0)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0-3 14
;; a1(r134,l0) conflicts: a0(r159,l0) a2(r267,l0) a3(r158,l0) a4(r264,l0) a5(r261,l0) a6(r258,l0) a7(r255,l0) a8(r252,l0) a9(r249,l0) a10(r246,l0) a11(r243,l0) a12(r240,l0) a13(r237,l0) a14(r234,l0) a15(r231,l0) a16(r228,l0) a17(r225,l0) a18(r189,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a2(r267,l0) conflicts: a1(r134,l0) a0(r159,l0)
;;     total conflict hard regs: 1
;;     conflict hard regs: 1
;; a3(r158,l0) conflicts: a1(r134,l0) a0(r159,l0) a4(r264,l0) a5(r261,l0) a6(r258,l0) a7(r255,l0) a8(r252,l0) a9(r249,l0) a10(r246,l0) a11(r243,l0) a12(r240,l0) a13(r237,l0) a14(r234,l0) a15(r231,l0) a16(r228,l0) a17(r225,l0) a18(r189,l0) a19(r222,l0) a20(r144,l0) a21(r209,l0) a22(r142,l0) a23(r143,l0) a24(r146,l0) a25(r147,l0) a26(r148,l0) a27(r151,l0) a28(r152,l0) a29(r153,l0) a30(r154,l0) a32(r273,l0) a31(r274,l0) a33(r207,l0) a34(r149,l0) a35(r150,l0) a36(r272,l0) a37(r271,l0) a38(r145,l0) a40(r194,l0) a39(r193,l0) a41(r203,l0) a42(r200,l0) a43(r197,l0) a44(r198,l0) a45(r181,l0) a46(r179,l0) a47(r176,l0) a48(r175,l0) a49(r174,l0) a50(r170,l0) a51(r167,l0) a52(r161,l0) a53(r157,l0) a54(r156,l0)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0-3 14
;; a4(r264,l0) conflicts: a1(r134,l0) a0(r159,l0) a3(r158,l0)
;;     total conflict hard regs: 1
;;     conflict hard regs: 1
;; a5(r261,l0) conflicts: a1(r134,l0) a0(r159,l0) a3(r158,l0)
;;     total conflict hard regs: 1
;;     conflict hard regs: 1
;; a6(r258,l0) conflicts: a1(r134,l0) a0(r159,l0) a3(r158,l0)
;;     total conflict hard regs: 1
;;     conflict hard regs: 1
;; a7(r255,l0) conflicts: a1(r134,l0) a0(r159,l0) a3(r158,l0)
;;     total conflict hard regs: 1
;;     conflict hard regs: 1
;; a8(r252,l0) conflicts: a1(r134,l0) a0(r159,l0) a3(r158,l0)
;;     total conflict hard regs: 1
;;     conflict hard regs: 1
;; a9(r249,l0) conflicts: a1(r134,l0) a0(r159,l0) a3(r158,l0)
;;     total conflict hard regs: 1
;;     conflict hard regs: 1
;; a10(r246,l0) conflicts: a1(r134,l0) a0(r159,l0) a3(r158,l0)
;;     total conflict hard regs: 1
;;     conflict hard regs: 1
;; a11(r243,l0) conflicts: a1(r134,l0) a0(r159,l0) a3(r158,l0)
;;     total conflict hard regs: 1
;;     conflict hard regs: 1
;; a12(r240,l0) conflicts: a1(r134,l0) a0(r159,l0) a3(r158,l0)
;;     total conflict hard regs: 1
;;     conflict hard regs: 1
;; a13(r237,l0) conflicts: a1(r134,l0) a0(r159,l0) a3(r158,l0)
;;     total conflict hard regs: 1
;;     conflict hard regs: 1
;; a14(r234,l0) conflicts: a1(r134,l0) a0(r159,l0) a3(r158,l0)
;;     total conflict hard regs: 1
;;     conflict hard regs: 1
;; a15(r231,l0) conflicts: a1(r134,l0) a0(r159,l0) a3(r158,l0)
;;     total conflict hard regs: 1
;;     conflict hard regs: 1
;; a16(r228,l0) conflicts: a1(r134,l0) a0(r159,l0) a3(r158,l0)
;;     total conflict hard regs: 1
;;     conflict hard regs: 1
;; a17(r225,l0) conflicts: a1(r134,l0) a0(r159,l0) a3(r158,l0)
;;     total conflict hard regs: 1
;;     conflict hard regs: 1
;; a18(r189,l0) conflicts: a1(r134,l0) a0(r159,l0) a3(r158,l0) a19(r222,l0) a20(r144,l0) a21(r209,l0) a22(r142,l0) a23(r143,l0) a24(r146,l0) a25(r147,l0) a26(r148,l0) a27(r151,l0) a28(r152,l0) a29(r153,l0) a30(r154,l0) a32(r273,l0) a31(r274,l0) a33(r207,l0) a34(r149,l0) a35(r150,l0) a36(r272,l0) a37(r271,l0) a38(r145,l0) a40(r194,l0) a39(r193,l0) a41(r203,l0) a42(r200,l0) a43(r197,l0) a44(r198,l0) a45(r181,l0) a46(r179,l0) a47(r176,l0) a48(r175,l0) a49(r174,l0) a50(r170,l0) a51(r167,l0) a52(r161,l0) a53(r157,l0) a54(r156,l0)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0-3 14
;; a19(r222,l0) conflicts: a0(r159,l0) a3(r158,l0) a18(r189,l0)
;;     total conflict hard regs: 1
;;     conflict hard regs: 1
;; a20(r144,l0) conflicts: a0(r159,l0) a3(r158,l0) a18(r189,l0)
;;     total conflict hard regs: 2
;;     conflict hard regs: 2
;; a21(r209,l0) conflicts: a0(r159,l0) a3(r158,l0) a18(r189,l0) a22(r142,l0) a23(r143,l0) a24(r146,l0) a25(r147,l0) a26(r148,l0) a27(r151,l0) a28(r152,l0) a29(r153,l0) a30(r154,l0) a32(r273,l0) a31(r274,l0) a33(r207,l0) a34(r149,l0) a35(r150,l0) a36(r272,l0) a37(r271,l0) a38(r145,l0) a40(r194,l0) a39(r193,l0) a41(r203,l0) a42(r200,l0) a43(r197,l0) a44(r198,l0) a45(r181,l0) a46(r179,l0) a47(r176,l0) a48(r175,l0) a49(r174,l0) a50(r170,l0) a51(r167,l0) a52(r161,l0) a53(r157,l0) a54(r156,l0)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0-3 14
;; a22(r142,l0) conflicts: a0(r159,l0) a3(r158,l0) a18(r189,l0) a21(r209,l0) a23(r143,l0)
;;     total conflict hard regs: 0-3
;;     conflict hard regs: 0-3
;; a23(r143,l0) conflicts: a0(r159,l0) a3(r158,l0) a18(r189,l0) a21(r209,l0) a22(r142,l0)
;;     total conflict hard regs: 0-2
;;     conflict hard regs: 0-2
;; a24(r146,l0) conflicts: a0(r159,l0) a3(r158,l0) a18(r189,l0) a21(r209,l0) a25(r147,l0) a26(r148,l0) a27(r151,l0) a28(r152,l0) a29(r153,l0) a30(r154,l0)
;;     total conflict hard regs: 0-3
;;     conflict hard regs: 0-3
;; a25(r147,l0) conflicts: a0(r159,l0) a3(r158,l0) a18(r189,l0) a21(r209,l0) a24(r146,l0) a26(r148,l0) a27(r151,l0) a28(r152,l0) a29(r153,l0) a30(r154,l0) a32(r273,l0) a31(r274,l0) a33(r207,l0) a34(r149,l0) a35(r150,l0) a36(r272,l0) a37(r271,l0) a38(r145,l0) a40(r194,l0) a39(r193,l0)
;;     total conflict hard regs: 0-3
;;     conflict hard regs: 0-3
;; a26(r148,l0) conflicts: a0(r159,l0) a3(r158,l0) a18(r189,l0) a21(r209,l0) a24(r146,l0) a25(r147,l0) a27(r151,l0) a28(r152,l0) a29(r153,l0) a30(r154,l0) a32(r273,l0) a31(r274,l0) a33(r207,l0) a34(r149,l0) a35(r150,l0) a36(r272,l0) a37(r271,l0) a38(r145,l0)
;;     total conflict hard regs: 0-3
;;     conflict hard regs: 0-3
;; a27(r151,l0) conflicts: a0(r159,l0) a3(r158,l0) a18(r189,l0) a21(r209,l0) a24(r146,l0) a25(r147,l0) a26(r148,l0) a28(r152,l0) a29(r153,l0) a30(r154,l0) a32(r273,l0) a31(r274,l0) a33(r207,l0) a34(r149,l0) a35(r150,l0) a36(r272,l0) a37(r271,l0) a38(r145,l0) a40(r194,l0) a39(r193,l0) a41(r203,l0)
;;     total conflict hard regs: 0-3
;;     conflict hard regs: 0-3
;; a28(r152,l0) conflicts: a0(r159,l0) a3(r158,l0) a18(r189,l0) a21(r209,l0) a24(r146,l0) a25(r147,l0) a26(r148,l0) a27(r151,l0) a29(r153,l0) a30(r154,l0) a32(r273,l0) a31(r274,l0) a33(r207,l0) a34(r149,l0) a35(r150,l0) a36(r272,l0) a37(r271,l0) a38(r145,l0) a40(r194,l0) a39(r193,l0) a41(r203,l0)
;;     total conflict hard regs: 0-3
;;     conflict hard regs: 0-3
;; a29(r153,l0) conflicts: a0(r159,l0) a3(r158,l0) a18(r189,l0) a21(r209,l0) a24(r146,l0) a25(r147,l0) a26(r148,l0) a27(r151,l0) a28(r152,l0) a30(r154,l0) a32(r273,l0) a31(r274,l0) a33(r207,l0) a34(r149,l0) a35(r150,l0) a36(r272,l0) a37(r271,l0) a38(r145,l0) a40(r194,l0) a39(r193,l0) a41(r203,l0) a42(r200,l0)
;;     total conflict hard regs: 0-3
;;     conflict hard regs: 0-3
;; a30(r154,l0) conflicts: a0(r159,l0) a3(r158,l0) a18(r189,l0) a21(r209,l0) a24(r146,l0) a25(r147,l0) a26(r148,l0) a27(r151,l0) a28(r152,l0) a29(r153,l0) a32(r273,l0) a31(r274,l0) a33(r207,l0) a34(r149,l0) a35(r150,l0) a36(r272,l0) a37(r271,l0) a38(r145,l0) a40(r194,l0) a39(r193,l0) a41(r203,l0) a42(r200,l0) a43(r197,l0) a44(r198,l0)
;;     total conflict hard regs: 0-3
;;     conflict hard regs: 0-3
;; a31(r274,l0) conflicts: a0(r159,l0) a3(r158,l0) a18(r189,l0) a21(r209,l0) a25(r147,l0) a26(r148,l0) a27(r151,l0) a28(r152,l0) a29(r153,l0) a30(r154,l0) a32(r273,l0) a33(r207,l0)
;;     total conflict hard regs: 0-3
;;     conflict hard regs: 0-3
;; a32(r273,l0) conflicts: a0(r159,l0) a3(r158,l0) a18(r189,l0) a21(r209,l0) a25(r147,l0) a26(r148,l0) a27(r151,l0) a28(r152,l0) a29(r153,l0) a30(r154,l0) a31(r274,l0) a33(r207,l0)
;;     total conflict hard regs: 0-3
;;     conflict hard regs: 0-3
;; a33(r207,l0) conflicts: a0(r159,l0) a3(r158,l0) a18(r189,l0) a21(r209,l0) a25(r147,l0) a26(r148,l0) a27(r151,l0) a28(r152,l0) a29(r153,l0) a30(r154,l0) a32(r273,l0) a31(r274,l0) a34(r149,l0) a35(r150,l0) a36(r272,l0) a37(r271,l0)
;;     total conflict hard regs: 0-3
;;     conflict hard regs: 0-3
;; a34(r149,l0) conflicts: a0(r159,l0) a3(r158,l0) a18(r189,l0) a21(r209,l0) a25(r147,l0) a26(r148,l0) a27(r151,l0) a28(r152,l0) a29(r153,l0) a30(r154,l0) a33(r207,l0) a35(r150,l0)
;;     total conflict hard regs: 1 2
;;     conflict hard regs: 1 2
;; a35(r150,l0) conflicts: a0(r159,l0) a3(r158,l0) a18(r189,l0) a21(r209,l0) a25(r147,l0) a26(r148,l0) a27(r151,l0) a28(r152,l0) a29(r153,l0) a30(r154,l0) a33(r207,l0) a34(r149,l0) a36(r272,l0) a37(r271,l0) a38(r145,l0) a40(r194,l0) a39(r193,l0)
;;     total conflict hard regs: 1
;;     conflict hard regs: 1
;; a36(r272,l0) conflicts: a0(r159,l0) a3(r158,l0) a18(r189,l0) a21(r209,l0) a25(r147,l0) a26(r148,l0) a27(r151,l0) a28(r152,l0) a29(r153,l0) a30(r154,l0) a33(r207,l0) a35(r150,l0) a37(r271,l0) a38(r145,l0) a40(r194,l0) a39(r193,l0) a41(r203,l0)
;;     total conflict hard regs: 1
;;     conflict hard regs: 1
;; a37(r271,l0) conflicts: a0(r159,l0) a3(r158,l0) a18(r189,l0) a21(r209,l0) a25(r147,l0) a26(r148,l0) a27(r151,l0) a28(r152,l0) a29(r153,l0) a30(r154,l0) a33(r207,l0) a35(r150,l0) a36(r272,l0) a38(r145,l0) a40(r194,l0) a39(r193,l0) a41(r203,l0) a42(r200,l0)
;;     total conflict hard regs: 1
;;     conflict hard regs: 1
;; a38(r145,l0) conflicts: a0(r159,l0) a3(r158,l0) a18(r189,l0) a21(r209,l0) a25(r147,l0) a26(r148,l0) a27(r151,l0) a28(r152,l0) a29(r153,l0) a30(r154,l0) a35(r150,l0) a36(r272,l0) a37(r271,l0) a40(r194,l0) a39(r193,l0) a41(r203,l0) a42(r200,l0) a43(r197,l0) a44(r198,l0)
;;     total conflict hard regs: 1
;;     conflict hard regs: 1
;; a39(r193,l0) conflicts: a0(r159,l0) a3(r158,l0) a18(r189,l0) a21(r209,l0) a25(r147,l0) a27(r151,l0) a28(r152,l0) a29(r153,l0) a30(r154,l0) a35(r150,l0) a36(r272,l0) a37(r271,l0) a38(r145,l0) a40(r194,l0) a41(r203,l0) a42(r200,l0) a43(r197,l0) a44(r198,l0)
;;     total conflict hard regs: 1
;;     conflict hard regs: 1
;; a40(r194,l0) conflicts: a0(r159,l0) a3(r158,l0) a18(r189,l0) a21(r209,l0) a25(r147,l0) a27(r151,l0) a28(r152,l0) a29(r153,l0) a30(r154,l0) a35(r150,l0) a36(r272,l0) a37(r271,l0) a38(r145,l0) a39(r193,l0) a41(r203,l0)
;;     total conflict hard regs: 1
;;     conflict hard regs: 1
;; a41(r203,l0) conflicts: a0(r159,l0) a3(r158,l0) a18(r189,l0) a21(r209,l0) a27(r151,l0) a28(r152,l0) a29(r153,l0) a30(r154,l0) a36(r272,l0) a37(r271,l0) a38(r145,l0) a40(r194,l0) a39(r193,l0)
;;     total conflict hard regs: 1
;;     conflict hard regs: 1
;; a42(r200,l0) conflicts: a0(r159,l0) a3(r158,l0) a18(r189,l0) a21(r209,l0) a29(r153,l0) a30(r154,l0) a37(r271,l0) a38(r145,l0) a39(r193,l0)
;;     total conflict hard regs: 1
;;     conflict hard regs: 1
;; a43(r197,l0) conflicts: a0(r159,l0) a3(r158,l0) a18(r189,l0) a21(r209,l0) a30(r154,l0) a38(r145,l0) a39(r193,l0) a44(r198,l0)
;;     total conflict hard regs: 1
;;     conflict hard regs: 1
;; a44(r198,l0) conflicts: a0(r159,l0) a3(r158,l0) a18(r189,l0) a21(r209,l0) a30(r154,l0) a38(r145,l0) a39(r193,l0) a43(r197,l0)
;;     total conflict hard regs: 1
;;     conflict hard regs: 1
;; a45(r181,l0) conflicts: a0(r159,l0) a3(r158,l0) a18(r189,l0) a21(r209,l0)
;;     total conflict hard regs: 0-3
;;     conflict hard regs: 0-3
;; a46(r179,l0) conflicts: a0(r159,l0) a3(r158,l0) a18(r189,l0) a21(r209,l0)
;;     total conflict hard regs: 0-3
;;     conflict hard regs: 0-3
;; a47(r176,l0) conflicts: a0(r159,l0) a3(r158,l0) a18(r189,l0) a21(r209,l0) a48(r175,l0) a49(r174,l0)
;;     total conflict hard regs: 0-3
;;     conflict hard regs: 0-3
;; a48(r175,l0) conflicts: a0(r159,l0) a3(r158,l0) a18(r189,l0) a21(r209,l0) a47(r176,l0) a49(r174,l0)
;;     total conflict hard regs: 0-3
;;     conflict hard regs: 0-3
;; a49(r174,l0) conflicts: a0(r159,l0) a3(r158,l0) a18(r189,l0) a21(r209,l0) a47(r176,l0) a48(r175,l0)
;;     total conflict hard regs: 0-3
;;     conflict hard regs: 0-3
;; a50(r170,l0) conflicts: a0(r159,l0) a3(r158,l0) a18(r189,l0) a21(r209,l0)
;;     total conflict hard regs: 0 1
;;     conflict hard regs: 0 1
;; a51(r167,l0) conflicts: a0(r159,l0) a3(r158,l0) a18(r189,l0) a21(r209,l0)
;;     total conflict hard regs: 0 1
;;     conflict hard regs: 0 1
;; a52(r161,l0) conflicts: a0(r159,l0) a3(r158,l0) a18(r189,l0) a21(r209,l0) a53(r157,l0) a54(r156,l0)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0-3 14
;; a53(r157,l0) conflicts: a0(r159,l0) a3(r158,l0) a18(r189,l0) a21(r209,l0) a52(r161,l0) a54(r156,l0)
;;     total conflict hard regs: 0-2 14
;;     conflict hard regs: 0-2 14
;; a54(r156,l0) conflicts: a0(r159,l0) a3(r158,l0) a18(r189,l0) a21(r209,l0) a52(r161,l0) a53(r157,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14

  cp0:a42(r200)<->a43(r197)@125:shuffle
  cp1:a42(r200)<->a44(r198)@125:shuffle
  cp2:a41(r203)<->a42(r200)@125:shuffle
  cp3:a34(r149)<->a37(r271)@125:shuffle
  cp4:a34(r149)<->a36(r272)@125:shuffle
  cp5:a24(r146)<->a32(r273)@125:shuffle
  cp6:a24(r146)<->a31(r274)@125:shuffle
  cp7:a24(r146)<->a33(r207)@125:shuffle
  regions=1, blocks=3, points=103
    allocnos=55, copies=8, conflicts=0, ranges=55

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all: 0r159 1r134 2r267 3r158 4r264 5r261 6r258 7r255 8r252 9r249 10r246 11r243 12r240 13r237 14r234 15r231 16r228 17r225 18r189 19r222 20r144 21r209 22r142 23r143 24r146 25r147 26r148 27r151 28r152 29r153 30r154 31r274 32r273 33r207 34r149 35r150 36r272 37r271 38r145 39r193 40r194 41r203 42r200 43r197 44r198 45r181 46r179 47r176 48r175 49r174 50r170 51r167 52r161 53r157 54r156
    modified regnos: 134 142 143 144 145 146 147 148 149 150 151 152 153 154 156 157 158 159 161 167 170 174 175 176 179 181 189 193 194 197 198 200 203 207 209 222 225 228 231 234 237 240 243 246 249 252 255 258 261 264 267 271 272 273 274
    border:
    Pressure: GENERAL_REGS=17
    Reg 159 of GENERAL_REGS has 5 regs less
    Reg 134 of GENERAL_REGS has 3 regs less
    Reg 267 of GENERAL_REGS has 1 regs less
    Reg 158 of GENERAL_REGS has 5 regs less
    Reg 264 of GENERAL_REGS has 1 regs less
    Reg 261 of GENERAL_REGS has 1 regs less
    Reg 258 of GENERAL_REGS has 1 regs less
    Reg 255 of GENERAL_REGS has 1 regs less
    Reg 252 of GENERAL_REGS has 1 regs less
    Reg 249 of GENERAL_REGS has 1 regs less
    Reg 246 of GENERAL_REGS has 1 regs less
    Reg 243 of GENERAL_REGS has 1 regs less
    Reg 240 of GENERAL_REGS has 1 regs less
    Reg 237 of GENERAL_REGS has 1 regs less
    Reg 234 of GENERAL_REGS has 1 regs less
    Reg 231 of GENERAL_REGS has 1 regs less
    Reg 228 of GENERAL_REGS has 1 regs less
    Reg 225 of GENERAL_REGS has 1 regs less
    Reg 189 of GENERAL_REGS has 5 regs less
    Reg 222 of GENERAL_REGS has 1 regs less
    Reg 144 of GENERAL_REGS has 1 regs less
    Reg 209 of GENERAL_REGS has 5 regs less
    Reg 142 of GENERAL_REGS has 4 regs less
    Reg 143 of GENERAL_REGS has 3 regs less
    Reg 146 of GENERAL_REGS has 4 regs less
    Reg 147 of GENERAL_REGS has 4 regs less
    Reg 148 of GENERAL_REGS has 4 regs less
    Reg 151 of GENERAL_REGS has 4 regs less
    Reg 152 of GENERAL_REGS has 4 regs less
    Reg 153 of GENERAL_REGS has 4 regs less
    Reg 154 of GENERAL_REGS has 4 regs less
    Reg 274 of GENERAL_REGS has 4 regs less
    Reg 273 of GENERAL_REGS has 4 regs less
    Reg 207 of GENERAL_REGS has 4 regs less
    Reg 149 of GENERAL_REGS has 2 regs less
    Reg 150 of GENERAL_REGS has 1 regs less
    Reg 272 of GENERAL_REGS has 1 regs less
    Reg 271 of GENERAL_REGS has 1 regs less
    Reg 145 of GENERAL_REGS has 1 regs less
    Reg 193 of GENERAL_REGS has 1 regs less
    Reg 194 of GENERAL_REGS has 1 regs less
    Reg 203 of GENERAL_REGS has 1 regs less
    Reg 200 of GENERAL_REGS has 1 regs less
    Reg 197 of GENERAL_REGS has 1 regs less
    Reg 198 of GENERAL_REGS has 1 regs less
    Reg 181 of GENERAL_REGS has 4 regs less
    Reg 179 of GENERAL_REGS has 4 regs less
    Reg 176 of GENERAL_REGS has 4 regs less
    Reg 175 of GENERAL_REGS has 4 regs less
    Reg 174 of GENERAL_REGS has 4 regs less
    Reg 170 of GENERAL_REGS has 2 regs less
    Reg 167 of GENERAL_REGS has 2 regs less
    Reg 161 of GENERAL_REGS has 5 regs less
    Reg 157 of GENERAL_REGS has 4 regs less
    Reg 156 of GENERAL_REGS has 3 regs less
      Pushing a44(r198,l0)
      Pushing a43(r197,l0)
      Pushing a42(r200,l0)
      Pushing a20(r144,l0)
      Pushing a19(r222,l0)
      Pushing a17(r225,l0)
      Pushing a16(r228,l0)
      Pushing a15(r231,l0)
      Pushing a14(r234,l0)
      Pushing a13(r237,l0)
      Pushing a12(r240,l0)
      Pushing a11(r243,l0)
      Pushing a10(r246,l0)
      Pushing a9(r249,l0)
      Pushing a8(r252,l0)
      Pushing a7(r255,l0)
      Pushing a6(r258,l0)
      Pushing a5(r261,l0)
      Pushing a4(r264,l0)
      Pushing a2(r267,l0)
      Pushing a51(r167,l0)
      Pushing a50(r170,l0)
      Pushing a54(r156,l0)
      Pushing a23(r143,l0)
      Pushing a1(r134,l0)
      Pushing a53(r157,l0)
      Pushing a46(r179,l0)
      Pushing a45(r181,l0)
      Pushing a22(r142,l0)
      Pushing a33(r207,l0)(potential spill: pri=476, cost=10000)
      Pushing a27(r151,l0)(potential spill: pri=800, cost=20000)
      Pushing a28(r152,l0)(potential spill: pri=833, cost=20000)
      Pushing a41(r203,l0)
      Pushing a34(r149,l0)
      Pushing a49(r174,l0)(potential spill: pri=909, cost=10000)
      Pushing a48(r175,l0)
      Pushing a47(r176,l0)
      Pushing a25(r147,l0)(potential spill: pri=952, cost=20000)
      Pushing a40(r194,l0)
      Pushing a35(r150,l0)
      Pushing a39(r193,l0)
      Pushing a37(r271,l0)
      Pushing a36(r272,l0)
      Pushing a38(r145,l0)
      Pushing a26(r148,l0)(potential spill: pri=1428, cost=20000)
      Pushing a29(r153,l0)(potential spill: pri=1538, cost=20000)
      Pushing a24(r146,l0)
      Pushing a30(r154,l0)(potential spill: pri=1818, cost=20000)
      Pushing a32(r273,l0)
      Pushing a31(r274,l0)
      Pushing a52(r161,l0)(potential spill: pri=3000, cost=30000)
      Pushing a21(r209,l0)
      Pushing a18(r189,l0)
      Pushing a0(r159,l0)
      Pushing a3(r158,l0)
      Popping a3(r158,l0)  -- assign reg 4
      Popping a0(r159,l0)  -- assign reg 5
      Popping a18(r189,l0)  -- assign reg 6
      Popping a21(r209,l0)  -- assign reg 7
      Popping a52(r161,l0)  -- assign reg 8
      Popping a31(r274,l0)  -- assign reg 12
      Popping a32(r273,l0)  -- assign reg 14
      Popping a30(r154,l0)  -- assign reg 8
      Popping a24(r146,l0)  -- assign reg 12
      Popping a29(r153,l0)  -- assign reg 10
      Popping a26(r148,l0)  -- assign reg 9
      Popping a38(r145,l0)  -- assign reg 0
      Popping a36(r272,l0)  -- assign reg 3
      Popping a37(r271,l0)  -- assign reg 12
      Popping a39(r193,l0)  -- assign reg 14
      Popping a35(r150,l0)  -- assign reg 2
      Popping a40(r194,l0)  -- assign reg 9
      Popping a25(r147,l0)  -- assign reg 11
      Popping a47(r176,l0)  -- assign reg 12
      Popping a48(r175,l0)  -- assign reg 14
      Popping a49(r174,l0)  -- assign reg 8
      Popping a34(r149,l0)  -- assign reg 3
      Popping a41(r203,l0)  -- assign reg 2
      Popping a28(r152,l0)  -- spill
      Popping a27(r151,l0)  -- spill
      Popping a33(r207,l0)  -- spill
      Popping a22(r142,l0)  -- assign reg 12
      Popping a45(r181,l0)  -- assign reg 12
      Popping a46(r179,l0)  -- assign reg 12
      Popping a53(r157,l0)  -- assign reg 10
      Popping a1(r134,l0)  -- assign reg 7
      Popping a23(r143,l0)  -- assign reg 3
      Popping a54(r156,l0)  -- assign reg 9
      Popping a50(r170,l0)  -- assign reg 3
      Popping a51(r167,l0)  -- assign reg 3
      Popping a2(r267,l0)  -- assign reg 0
      Popping a4(r264,l0)  -- assign reg 0
      Popping a5(r261,l0)  -- assign reg 0
      Popping a6(r258,l0)  -- assign reg 0
      Popping a7(r255,l0)  -- assign reg 0
      Popping a8(r252,l0)  -- assign reg 0
      Popping a9(r249,l0)  -- assign reg 0
      Popping a10(r246,l0)  -- assign reg 0
      Popping a11(r243,l0)  -- assign reg 0
      Popping a12(r240,l0)  -- assign reg 0
      Popping a13(r237,l0)  -- assign reg 0
      Popping a14(r234,l0)  -- assign reg 0
      Popping a15(r231,l0)  -- assign reg 0
      Popping a16(r228,l0)  -- assign reg 0
      Popping a17(r225,l0)  -- assign reg 0
      Popping a19(r222,l0)  -- assign reg 0
      Popping a20(r144,l0)  -- assign reg 1
      Popping a42(r200,l0)  -- assign reg 2
      Popping a43(r197,l0)  -- assign reg 3
      Popping a44(r198,l0)  -- assign reg 2
Disposition:
    1:r134 l0     7   22:r142 l0    12   23:r143 l0     3   20:r144 l0     1
   38:r145 l0     0   24:r146 l0    12   25:r147 l0    11   26:r148 l0     9
   34:r149 l0     3   35:r150 l0     2   27:r151 l0   mem   28:r152 l0   mem
   29:r153 l0    10   30:r154 l0     8   54:r156 l0     9   53:r157 l0    10
    3:r158 l0     4    0:r159 l0     5   52:r161 l0     8   51:r167 l0     3
   50:r170 l0     3   49:r174 l0     8   48:r175 l0    14   47:r176 l0    12
   46:r179 l0    12   45:r181 l0    12   18:r189 l0     6   39:r193 l0    14
   40:r194 l0     9   43:r197 l0     3   44:r198 l0     2   42:r200 l0     2
   41:r203 l0     2   33:r207 l0   mem   21:r209 l0     7   19:r222 l0     0
   17:r225 l0     0   16:r228 l0     0   15:r231 l0     0   14:r234 l0     0
   13:r237 l0     0   12:r240 l0     0   11:r243 l0     0   10:r246 l0     0
    9:r249 l0     0    8:r252 l0     0    7:r255 l0     0    6:r258 l0     0
    5:r261 l0     0    4:r264 l0     0    2:r267 l0     0   37:r271 l0    12
   36:r272 l0     3   32:r273 l0    14   31:r274 l0    12
New iteration of spill/restore move
+++Costs: overall 36000, reg -14000, mem 50000, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=357, live_throughout: 0, 13, dead_or_set: 159
insn=12, live_throughout: 0, 13, 159, dead_or_set: 161
insn=358, live_throughout: 0, 13, 161, dead_or_set: 159
insn=2, live_throughout: 13, 159, 161, dead_or_set: 0, 158
insn=193, live_throughout: 13, 158, 159, 161, dead_or_set: 209
insn=135, live_throughout: 13, 158, 159, 161, 209, dead_or_set: 189
insn=9, live_throughout: 13, 158, 159, 161, 189, 209, dead_or_set: 157
insn=10, live_throughout: 13, 157, 158, 159, 161, 189, 209, dead_or_set: 0, 14
insn=11, live_throughout: 13, 157, 158, 159, 161, 189, 209, dead_or_set: 0, 156
insn=15, live_throughout: 13, 156, 157, 158, 159, 161, 189, 209, dead_or_set: 1
insn=14, live_throughout: 1, 13, 156, 157, 158, 159, 161, 189, 209, dead_or_set: 0
insn=16, live_throughout: 13, 156, 157, 158, 159, 161, 189, 209, dead_or_set: 0, 1, 14
insn=26, live_throughout: 0, 13, 157, 158, 159, 161, 189, 209, dead_or_set: 2, 156
insn=25, live_throughout: 0, 2, 13, 158, 159, 161, 189, 209, dead_or_set: 1, 157
insn=27, live_throughout: 0, 1, 2, 13, 158, 159, 161, 189, 209, dead_or_set: 3
insn=23, live_throughout: 0, 1, 2, 3, 13, 158, 159, 189, 209, dead_or_set: 161
insn=21, live_throughout: 1, 2, 3, 13, 158, 159, 189, 209, dead_or_set: 0
insn=24, live_throughout: 1, 2, 3, 13, 158, 159, 189, 209, dead_or_set: 0
insn=28, live_throughout: 13, 158, 159, 189, 209, dead_or_set: 0, 1, 2, 3, 14
insn=29, live_throughout: 13, 158, 159, 189, 209, dead_or_set: 167
insn=34, live_throughout: 13, 158, 159, 167, 189, 209, dead_or_set: 0
insn=35, live_throughout: 0, 13, 158, 159, 167, 189, 209, dead_or_set: 1
insn=31, live_throughout: 0, 1, 13, 158, 159, 189, 209, dead_or_set: 167
insn=36, live_throughout: 13, 158, 159, 189, 209, dead_or_set: 0, 1, 14
insn=37, live_throughout: 13, 158, 159, 189, 209, dead_or_set: 170
insn=42, live_throughout: 13, 158, 159, 170, 189, 209, dead_or_set: 0
insn=43, live_throughout: 0, 13, 158, 159, 170, 189, 209, dead_or_set: 1
insn=39, live_throughout: 0, 1, 13, 158, 159, 189, 209, dead_or_set: 170
insn=44, live_throughout: 13, 158, 159, 189, 209, dead_or_set: 0, 1, 14
insn=46, live_throughout: 13, 158, 159, 189, 209, dead_or_set: 174
insn=48, live_throughout: 13, 158, 159, 174, 189, 209, dead_or_set: 175
insn=50, live_throughout: 13, 158, 159, 174, 175, 189, 209, dead_or_set: 176
insn=53, live_throughout: 13, 158, 159, 174, 175, 176, 189, 209, dead_or_set: 1
insn=54, live_throughout: 1, 13, 158, 159, 174, 175, 176, 189, 209, dead_or_set: 2
insn=55, live_throughout: 1, 2, 13, 158, 159, 174, 175, 176, 189, 209, dead_or_set: 3
insn=52, live_throughout: 1, 2, 3, 13, 158, 159, 174, 175, 176, 189, 209, dead_or_set: 0
insn=47, live_throughout: 0, 1, 2, 3, 13, 158, 159, 175, 176, 189, 209, dead_or_set: 174
insn=49, live_throughout: 0, 1, 2, 3, 13, 158, 159, 176, 189, 209, dead_or_set: 175
insn=51, live_throughout: 0, 1, 2, 3, 13, 158, 159, 189, 209, dead_or_set: 176
insn=56, live_throughout: 13, 158, 159, 189, 209, dead_or_set: 0, 1, 2, 3, 14
insn=59, live_throughout: 13, 158, 159, 189, 209, dead_or_set: 1
insn=60, live_throughout: 1, 13, 158, 159, 189, 209, dead_or_set: 2
insn=61, live_throughout: 1, 2, 13, 158, 159, 189, 209, dead_or_set: 3
insn=58, live_throughout: 1, 2, 3, 13, 158, 159, 189, 209, dead_or_set: 0
insn=62, live_throughout: 13, 158, 159, 189, 209, dead_or_set: 0, 1, 2, 3, 14
insn=64, live_throughout: 13, 158, 159, 189, 209, dead_or_set: 179
insn=67, live_throughout: 13, 158, 159, 179, 189, 209, dead_or_set: 1
insn=68, live_throughout: 1, 13, 158, 159, 179, 189, 209, dead_or_set: 2
insn=69, live_throughout: 1, 2, 13, 158, 159, 179, 189, 209, dead_or_set: 3
insn=66, live_throughout: 1, 2, 3, 13, 158, 159, 179, 189, 209, dead_or_set: 0
insn=65, live_throughout: 0, 1, 2, 3, 13, 158, 159, 189, 209, dead_or_set: 179
insn=70, live_throughout: 13, 158, 159, 189, 209, dead_or_set: 0, 1, 2, 3, 14
insn=72, live_throughout: 13, 158, 159, 189, 209, dead_or_set: 181
insn=75, live_throughout: 13, 158, 159, 181, 189, 209, dead_or_set: 1
insn=76, live_throughout: 1, 13, 158, 159, 181, 189, 209, dead_or_set: 2
insn=77, live_throughout: 1, 2, 13, 158, 159, 181, 189, 209, dead_or_set: 3
insn=74, live_throughout: 1, 2, 3, 13, 158, 159, 181, 189, 209, dead_or_set: 0
insn=73, live_throughout: 0, 1, 2, 3, 13, 158, 159, 189, 209, dead_or_set: 181
insn=78, live_throughout: 13, 158, 159, 189, 209, dead_or_set: 0, 1, 2, 3, 14
insn=79, live_throughout: 13, 158, 159, 189, 209, dead_or_set: 145
insn=198, live_throughout: 13, 145, 158, 159, 189, 209, dead_or_set: 1
insn=163, live_throughout: 1, 13, 145, 158, 159, 189, 209, dead_or_set: 193
insn=169, live_throughout: 1, 13, 145, 158, 159, 189, 193, 209, dead_or_set: 198
insn=168, live_throughout: 1, 13, 145, 158, 159, 189, 193, 198, 209, dead_or_set: 197
insn=338, live_throughout: 1, 13, 145, 158, 159, 189, 193, 197, 198, 209, dead_or_set: 154
insn=94, live_throughout: 1, 13, 145, 154, 158, 159, 189, 193, 197, 198, 209, dead_or_set: 
insn=171, live_throughout: 1, 13, 24, 145, 154, 158, 159, 189, 193, 209, dead_or_set: 197, 198, 200
insn=350, live_throughout: 1, 13, 145, 154, 158, 159, 189, 193, 200, 209, dead_or_set: 153
insn=108, live_throughout: 1, 13, 145, 153, 154, 158, 159, 189, 193, 200, 209, dead_or_set: 
insn=341, live_throughout: 1, 13, 24, 145, 153, 154, 158, 159, 189, 193, 200, 209, dead_or_set: 271
insn=174, live_throughout: 1, 13, 24, 145, 153, 154, 158, 159, 189, 193, 209, 271, dead_or_set: 200, 203
insn=340, live_throughout: 1, 13, 145, 153, 154, 158, 159, 189, 193, 203, 209, 271, dead_or_set: 152
insn=122, live_throughout: 1, 13, 145, 152, 153, 154, 158, 159, 189, 193, 203, 209, 271, dead_or_set: 
insn=342, live_throughout: 1, 13, 24, 145, 152, 153, 154, 158, 159, 189, 193, 203, 209, 271, dead_or_set: 272
insn=164, live_throughout: 1, 13, 24, 145, 152, 153, 154, 158, 159, 189, 193, 203, 209, 271, 272, dead_or_set: 194
insn=356, live_throughout: 1, 13, 145, 152, 153, 154, 158, 159, 189, 193, 194, 203, 209, 271, 272, dead_or_set: 151
insn=140, live_throughout: 1, 13, 145, 151, 152, 153, 154, 158, 159, 189, 193, 194, 203, 209, 271, 272, dead_or_set: 
insn=176, live_throughout: 1, 13, 24, 145, 151, 152, 153, 154, 158, 159, 189, 193, 194, 209, 271, 272, dead_or_set: 147, 203
insn=344, live_throughout: 1, 13, 145, 147, 151, 152, 153, 154, 158, 159, 189, 193, 194, 209, 271, 272, dead_or_set: 150
insn=165, live_throughout: 1, 13, 145, 147, 150, 151, 152, 153, 154, 158, 159, 189, 209, 271, 272, dead_or_set: 148, 193, 194
insn=152, live_throughout: 1, 13, 147, 148, 150, 151, 152, 153, 154, 158, 159, 189, 209, 271, 272, dead_or_set: 145
insn=180, live_throughout: 1, 13, 24, 147, 148, 150, 151, 152, 153, 154, 158, 159, 189, 209, 271, 272, dead_or_set: 207
insn=354, live_throughout: 1, 13, 147, 148, 150, 151, 152, 153, 154, 158, 159, 189, 207, 209, dead_or_set: 149, 271, 272
insn=199, live_throughout: 1, 13, 147, 148, 149, 151, 152, 153, 154, 158, 159, 189, 207, 209, dead_or_set: 2, 150
insn=200, live_throughout: 1, 2, 13, 147, 148, 151, 152, 153, 154, 158, 159, 189, 207, 209, dead_or_set: 3, 149
insn=197, live_throughout: 1, 2, 3, 13, 147, 148, 151, 152, 153, 154, 158, 159, 189, 207, 209, dead_or_set: 0
insn=360, live_throughout: 0, 1, 2, 3, 13, 147, 148, 151, 152, 153, 154, 158, 159, 189, 207, 209, dead_or_set: 274
insn=361, live_throughout: 0, 1, 2, 3, 13, 147, 148, 151, 152, 153, 154, 158, 159, 189, 207, 209, 274, dead_or_set: 273
insn=348, live_throughout: 0, 1, 2, 3, 13, 147, 148, 151, 152, 153, 154, 158, 159, 189, 209, dead_or_set: 146, 207, 273, 274
insn=92, live_throughout: 0, 1, 2, 3, 13, 146, 147, 148, 151, 152, 153, 158, 159, 189, 209, dead_or_set: 154
insn=106, live_throughout: 0, 1, 2, 3, 13, 146, 147, 148, 151, 152, 158, 159, 189, 209, dead_or_set: 153
insn=120, live_throughout: 0, 1, 2, 3, 13, 146, 147, 148, 151, 158, 159, 189, 209, dead_or_set: 152
insn=134, live_throughout: 0, 1, 2, 3, 13, 146, 147, 148, 158, 159, 189, 209, dead_or_set: 151
insn=194, live_throughout: 0, 1, 2, 3, 13, 146, 147, 158, 159, 189, 209, dead_or_set: 148
insn=195, live_throughout: 0, 1, 2, 3, 13, 146, 158, 159, 189, 209, dead_or_set: 147
insn=196, live_throughout: 0, 1, 2, 3, 13, 158, 159, 189, 209, dead_or_set: 146
insn=137, live_throughout: 0, 1, 2, 3, 13, 158, 159, 189, 209, dead_or_set: 
insn=201, live_throughout: 13, 158, 159, 189, 209, dead_or_set: 0, 1, 2, 3, 14
insn=210, live_throughout: 13, 158, 159, 189, 209, dead_or_set: 1
insn=211, live_throughout: 1, 13, 158, 159, 189, 209, dead_or_set: 2
insn=209, live_throughout: 1, 2, 13, 158, 159, 189, 209, dead_or_set: 0
insn=204, live_throughout: 0, 1, 2, 13, 158, 159, 189, 209, dead_or_set: 
insn=205, live_throughout: 0, 1, 2, 13, 158, 159, 189, 209, dead_or_set: 142, 143
insn=212, live_throughout: 0, 1, 2, 13, 142, 158, 159, 189, 209, dead_or_set: 3, 143
insn=208, live_throughout: 0, 1, 2, 3, 13, 158, 159, 189, 209, dead_or_set: 142
insn=213, live_throughout: 13, 158, 159, 189, 209, dead_or_set: 0, 1, 2, 3, 14
insn=219, live_throughout: 13, 158, 159, 189, dead_or_set: 2, 209
insn=214, live_throughout: 2, 13, 158, 159, 189, dead_or_set: 144
insn=218, live_throughout: 2, 13, 158, 159, 189, dead_or_set: 1, 144
insn=217, live_throughout: 1, 2, 13, 158, 159, 189, dead_or_set: 0
insn=220, live_throughout: 13, 158, 159, 189, dead_or_set: 0, 1, 2, 14
insn=230, live_throughout: 13, 158, 159, 189, dead_or_set: 222
insn=234, live_throughout: 13, 158, 159, 189, 222, dead_or_set: 1
insn=233, live_throughout: 1, 13, 158, 159, 189, dead_or_set: 0, 222
insn=224, live_throughout: 0, 1, 13, 158, 159, 189, dead_or_set: 134
insn=229, live_throughout: 0, 1, 13, 134, 158, 159, dead_or_set: 189
insn=235, live_throughout: 13, 134, 158, 159, dead_or_set: 0, 1, 14
insn=236, live_throughout: 13, 134, 158, 159, dead_or_set: 225
insn=240, live_throughout: 13, 134, 158, 159, 225, dead_or_set: 1
insn=239, live_throughout: 1, 13, 134, 158, 159, dead_or_set: 0, 225
insn=241, live_throughout: 13, 134, 158, 159, dead_or_set: 0, 1, 14
insn=242, live_throughout: 13, 134, 158, 159, dead_or_set: 228
insn=246, live_throughout: 13, 134, 158, 159, 228, dead_or_set: 1
insn=245, live_throughout: 1, 13, 134, 158, 159, dead_or_set: 0, 228
insn=247, live_throughout: 13, 134, 158, 159, dead_or_set: 0, 1, 14
insn=248, live_throughout: 13, 134, 158, 159, dead_or_set: 231
insn=252, live_throughout: 13, 134, 158, 159, 231, dead_or_set: 1
insn=251, live_throughout: 1, 13, 134, 158, 159, dead_or_set: 0, 231
insn=253, live_throughout: 13, 134, 158, 159, dead_or_set: 0, 1, 14
insn=254, live_throughout: 13, 134, 158, 159, dead_or_set: 234
insn=258, live_throughout: 13, 134, 158, 159, 234, dead_or_set: 1
insn=257, live_throughout: 1, 13, 134, 158, 159, dead_or_set: 0, 234
insn=259, live_throughout: 13, 134, 158, 159, dead_or_set: 0, 1, 14
insn=260, live_throughout: 13, 134, 158, 159, dead_or_set: 237
insn=264, live_throughout: 13, 134, 158, 159, 237, dead_or_set: 1
insn=263, live_throughout: 1, 13, 134, 158, 159, dead_or_set: 0, 237
insn=265, live_throughout: 13, 134, 158, 159, dead_or_set: 0, 1, 14
insn=266, live_throughout: 13, 134, 158, 159, dead_or_set: 240
insn=270, live_throughout: 13, 134, 158, 159, 240, dead_or_set: 1
insn=269, live_throughout: 1, 13, 134, 158, 159, dead_or_set: 0, 240
insn=271, live_throughout: 13, 134, 158, 159, dead_or_set: 0, 1, 14
insn=272, live_throughout: 13, 134, 158, 159, dead_or_set: 243
insn=276, live_throughout: 13, 134, 158, 159, 243, dead_or_set: 1
insn=275, live_throughout: 1, 13, 134, 158, 159, dead_or_set: 0, 243
insn=277, live_throughout: 13, 134, 158, 159, dead_or_set: 0, 1, 14
insn=278, live_throughout: 13, 134, 158, 159, dead_or_set: 246
insn=282, live_throughout: 13, 134, 158, 159, 246, dead_or_set: 1
insn=281, live_throughout: 1, 13, 134, 158, 159, dead_or_set: 0, 246
insn=283, live_throughout: 13, 134, 158, 159, dead_or_set: 0, 1, 14
insn=284, live_throughout: 13, 134, 158, 159, dead_or_set: 249
insn=288, live_throughout: 13, 134, 158, 159, 249, dead_or_set: 1
insn=287, live_throughout: 1, 13, 134, 158, 159, dead_or_set: 0, 249
insn=289, live_throughout: 13, 134, 158, 159, dead_or_set: 0, 1, 14
insn=290, live_throughout: 13, 134, 158, 159, dead_or_set: 252
insn=294, live_throughout: 13, 134, 158, 159, 252, dead_or_set: 1
insn=293, live_throughout: 1, 13, 134, 158, 159, dead_or_set: 0, 252
insn=295, live_throughout: 13, 134, 158, 159, dead_or_set: 0, 1, 14
insn=296, live_throughout: 13, 134, 158, 159, dead_or_set: 255
insn=300, live_throughout: 13, 134, 158, 159, 255, dead_or_set: 1
insn=299, live_throughout: 1, 13, 134, 158, 159, dead_or_set: 0, 255
insn=301, live_throughout: 13, 134, 158, 159, dead_or_set: 0, 1, 14
insn=302, live_throughout: 13, 134, 158, 159, dead_or_set: 258
insn=306, live_throughout: 13, 134, 158, 159, 258, dead_or_set: 1
insn=305, live_throughout: 1, 13, 134, 158, 159, dead_or_set: 0, 258
insn=307, live_throughout: 13, 134, 158, 159, dead_or_set: 0, 1, 14
insn=308, live_throughout: 13, 134, 158, 159, dead_or_set: 261
insn=312, live_throughout: 13, 134, 158, 159, 261, dead_or_set: 1
insn=311, live_throughout: 1, 13, 134, 158, 159, dead_or_set: 0, 261
insn=313, live_throughout: 13, 134, 158, 159, dead_or_set: 0, 1, 14
insn=314, live_throughout: 13, 134, 158, 159, dead_or_set: 264
insn=318, live_throughout: 13, 134, 158, 159, 264, dead_or_set: 1
insn=317, live_throughout: 1, 13, 134, 158, 159, dead_or_set: 0, 264
insn=319, live_throughout: 13, 134, 158, 159, dead_or_set: 0, 1, 14
insn=320, live_throughout: 13, 134, 159, dead_or_set: 158, 267
insn=324, live_throughout: 13, 134, 159, 267, dead_or_set: 1
insn=323, live_throughout: 1, 13, 134, 159, dead_or_set: 0, 267
insn=325, live_throughout: 13, 134, 159, dead_or_set: 0, 1, 14
insn=329, live_throughout: 13, 14, dead_or_set: 134, 159
init_insns for 145: (insn_list:REG_DEP_TRUE 79 (nil))
init_insns for 146: (insn_list:REG_DEP_TRUE 196 (nil))
init_insns for 161: (insn_list:REG_DEP_TRUE 12 (nil))
init_insns for 167: (insn_list:REG_DEP_TRUE 29 (nil))
init_insns for 170: (insn_list:REG_DEP_TRUE 37 (nil))
init_insns for 174: (insn_list:REG_DEP_TRUE 46 (nil))
init_insns for 179: (insn_list:REG_DEP_TRUE 64 (nil))
init_insns for 181: (insn_list:REG_DEP_TRUE 72 (nil))
init_insns for 189: (insn_list:REG_DEP_TRUE 135 (nil))
init_insns for 193: (insn_list:REG_DEP_TRUE 163 (nil))
init_insns for 207: (insn_list:REG_DEP_TRUE 180 (nil))
init_insns for 209: (insn_list:REG_DEP_TRUE 193 (nil))
init_insns for 222: (insn_list:REG_DEP_TRUE 230 (nil))
init_insns for 225: (insn_list:REG_DEP_TRUE 236 (nil))
init_insns for 228: (insn_list:REG_DEP_TRUE 242 (nil))
init_insns for 231: (insn_list:REG_DEP_TRUE 248 (nil))
init_insns for 234: (insn_list:REG_DEP_TRUE 254 (nil))
init_insns for 237: (insn_list:REG_DEP_TRUE 260 (nil))
init_insns for 240: (insn_list:REG_DEP_TRUE 266 (nil))
init_insns for 243: (insn_list:REG_DEP_TRUE 272 (nil))
init_insns for 246: (insn_list:REG_DEP_TRUE 278 (nil))
init_insns for 249: (insn_list:REG_DEP_TRUE 284 (nil))
init_insns for 252: (insn_list:REG_DEP_TRUE 290 (nil))
init_insns for 255: (insn_list:REG_DEP_TRUE 296 (nil))
init_insns for 258: (insn_list:REG_DEP_TRUE 302 (nil))
init_insns for 261: (insn_list:REG_DEP_TRUE 308 (nil))
init_insns for 264: (insn_list:REG_DEP_TRUE 314 (nil))
init_insns for 271: (insn_list:REG_DEP_TRUE 341 (nil))
init_insns for 272: (insn_list:REG_DEP_TRUE 342 (nil))
init_insns for 273: (insn_list:REG_DEP_TRUE 361 (nil))
init_insns for 274: (insn_list:REG_DEP_TRUE 360 (nil))
      Slot 1 (freq,size): a27r151(2000,4)
      Slot 2 (freq,size): a28r152(2000,4)
      Slot 3 (freq,size): a33r207(2000,4)
      Assigning 152(freq=2000) a new slot 1
      Assigning 151(freq=2000) a new slot 0
changing reg in insn 224
changing reg in insn 329
changing reg in insn 205
changing reg in insn 208
changing reg in insn 205
changing reg in insn 212
changing reg in insn 214
changing reg in insn 218
changing reg in insn 79
changing reg in insn 338
changing reg in insn 168
changing reg in insn 152
changing reg in insn 140
changing reg in insn 122
changing reg in insn 108
changing reg in insn 94
changing reg in insn 169
changing reg in insn 164
changing reg in insn 348
changing reg in insn 196
changing reg in insn 176
changing reg in insn 195
changing reg in insn 165
changing reg in insn 194
changing reg in insn 354
changing reg in insn 200
changing reg in insn 344
changing reg in insn 199
changing reg in insn 350
changing reg in insn 338
changing reg in insn 11
changing reg in insn 26
changing reg in insn 9
changing reg in insn 25
changing reg in insn 2
changing reg in insn 39
changing reg in insn 31
changing reg in insn 320
changing reg in insn 314
changing reg in insn 308
changing reg in insn 302
changing reg in insn 296
changing reg in insn 290
changing reg in insn 284
changing reg in insn 278
changing reg in insn 272
changing reg in insn 266
changing reg in insn 260
changing reg in insn 254
changing reg in insn 248
changing reg in insn 242
changing reg in insn 236
changing reg in insn 230
changing reg in insn 79
changing reg in insn 77
changing reg in insn 76
changing reg in insn 75
changing reg in insn 72
changing reg in insn 69
changing reg in insn 68
changing reg in insn 67
changing reg in insn 64
changing reg in insn 61
changing reg in insn 60
changing reg in insn 59
changing reg in insn 55
changing reg in insn 54
changing reg in insn 53
changing reg in insn 50
changing reg in insn 48
changing reg in insn 46
changing reg in insn 37
changing reg in insn 29
changing reg in insn 314
changing reg in insn 308
changing reg in insn 302
changing reg in insn 296
changing reg in insn 290
changing reg in insn 284
changing reg in insn 278
changing reg in insn 272
changing reg in insn 266
changing reg in insn 260
changing reg in insn 254
changing reg in insn 248
changing reg in insn 242
changing reg in insn 236
changing reg in insn 230
changing reg in insn 79
changing reg in insn 72
changing reg in insn 64
changing reg in insn 46
changing reg in insn 37
changing reg in insn 29
changing reg in insn 358
changing reg in insn 357
changing reg in insn 358
changing reg in insn 329
changing reg in insn 229
changing reg in insn 224
changing reg in insn 180
changing reg in insn 9
changing reg in insn 180
changing reg in insn 12
changing reg in insn 14
changing reg in insn 23
changing reg in insn 29
changing reg in insn 35
changing reg in insn 31
changing reg in insn 37
changing reg in insn 43
changing reg in insn 39
changing reg in insn 46
changing reg in insn 47
changing reg in insn 48
changing reg in insn 49
changing reg in insn 50
changing reg in insn 51
changing reg in insn 64
changing reg in insn 65
changing reg in insn 72
changing reg in insn 73
changing reg in insn 135
changing reg in insn 229
changing reg in insn 163
changing reg in insn 174
changing reg in insn 165
changing reg in insn 164
changing reg in insn 165
changing reg in insn 165
changing reg in insn 168
changing reg in insn 171
changing reg in insn 169
changing reg in insn 171
changing reg in insn 171
changing reg in insn 174
changing reg in insn 174
changing reg in insn 176
changing reg in insn 193
changing reg in insn 219
changing reg in insn 209
changing reg in insn 198
changing reg in insn 230
changing reg in insn 233
changing reg in insn 236
changing reg in insn 239
changing reg in insn 242
changing reg in insn 245
changing reg in insn 248
changing reg in insn 251
changing reg in insn 254
changing reg in insn 257
changing reg in insn 260
changing reg in insn 263
changing reg in insn 266
changing reg in insn 269
changing reg in insn 272
changing reg in insn 275
changing reg in insn 278
changing reg in insn 281
changing reg in insn 284
changing reg in insn 287
changing reg in insn 290
changing reg in insn 293
changing reg in insn 296
changing reg in insn 299
changing reg in insn 302
changing reg in insn 305
changing reg in insn 308
changing reg in insn 311
changing reg in insn 314
changing reg in insn 317
changing reg in insn 320
changing reg in insn 323
changing reg in insn 341
changing reg in insn 354
changing reg in insn 344
changing reg in insn 342
changing reg in insn 354
changing reg in insn 344
changing reg in insn 361
changing reg in insn 348
changing reg in insn 360
changing reg in insn 348
Spilling for insn 357.
Using reg 3 for reload 0
Spilling for insn 23.
Spilling for insn 21.
Spilling for insn 31.
Spilling for insn 39.
Spilling for insn 47.
Spilling for insn 49.
Spilling for insn 51.
Spilling for insn 65.
Spilling for insn 73.
Spilling for insn 340.
Using reg 3 for reload 0
Spilling for insn 356.
Using reg 11 for reload 0
Spilling for insn 180.
Using reg 0 for reload 0
Spilling for insn 348.
Using reg 8 for reload 0
Spilling for insn 92.
Spilling for insn 106.
Spilling for insn 120.
Using reg 14 for reload 1
Spilling for insn 134.
Using reg 14 for reload 1
Spilling for insn 194.
Spilling for insn 195.
Spilling for insn 196.
Spilling for insn 137.
Spilling for insn 204.
Spilling for insn 208.
Spilling for insn 229.
Spilling for insn 329.
      Spill 154(a30), cost=20000
      Spilled regs 154
        Try assign 207(a33), cost=10000
        Try assign 151(a27), cost=20000
        Try assign 152(a28), cost=20000
changing reg in insn 338
      Assigning 154(freq=2000) a new slot 3
 Register 154 now on stack.

Spilling for insn 357.
Using reg 3 for reload 0
Spilling for insn 23.
Spilling for insn 21.
Spilling for insn 31.
Spilling for insn 39.
Spilling for insn 47.
Spilling for insn 49.
Spilling for insn 51.
Spilling for insn 65.
Spilling for insn 73.
Spilling for insn 338.
Using reg 12 for reload 0
Spilling for insn 340.
Using reg 3 for reload 0
Spilling for insn 356.
Using reg 8 for reload 0
Spilling for insn 180.
Using reg 0 for reload 0
Spilling for insn 348.
Using reg 8 for reload 0
Spilling for insn 92.
Using reg 14 for reload 1
Spilling for insn 106.
Spilling for insn 120.
Using reg 14 for reload 1
Spilling for insn 134.
Using reg 14 for reload 1
Spilling for insn 194.
Spilling for insn 195.
Spilling for insn 196.
Spilling for insn 137.
Spilling for insn 204.
Spilling for insn 208.
Spilling for insn 229.
Spilling for insn 329.
deleting insn with uid = 180.

Reloads for insn # 357
Reload 0: reload_in (SI) = (reg/f:SI 13 sp)
	GENERAL_REGS, RELOAD_FOR_INPUT (opnum = 1)
	reload_in_reg: (reg/f:SI 13 sp)
	reload_reg_rtx: (reg:SI 3 r3)

Reloads for insn # 23
Reload 0: reload_out (SI) = (mem:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 4 [0x4])) [0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 4 [0x4])) [0 S4 A32])

Reloads for insn # 21
Reload 0: reload_out (SI) = (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem:SI (reg/f:SI 13 sp) [0 S4 A32])

Reloads for insn # 31
Reload 0: reload_out (SI) = (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:158 regs ] [158])
                                                        (const_int 60 [0x3c])) [0 <variable>.uregs+60 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:158 regs ] [158])
                                                        (const_int 60 [0x3c])) [0 <variable>.uregs+60 S4 A32])

Reloads for insn # 39
Reload 0: reload_out (SI) = (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:158 regs ] [158])
                                                        (const_int 56 [0x38])) [0 <variable>.uregs+56 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:158 regs ] [158])
                                                        (const_int 56 [0x38])) [0 <variable>.uregs+56 S4 A32])

Reloads for insn # 47
Reload 0: reload_out (SI) = (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem:SI (reg/f:SI 13 sp) [0 S4 A32])

Reloads for insn # 49
Reload 0: reload_out (SI) = (mem:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 4 [0x4])) [0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 4 [0x4])) [0 S4 A32])

Reloads for insn # 51
Reload 0: reload_out (SI) = (mem:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 8 [0x8])) [0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 8 [0x8])) [0 S4 A32])

Reloads for insn # 65
Reload 0: reload_out (SI) = (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem:SI (reg/f:SI 13 sp) [0 S4 A32])

Reloads for insn # 73
Reload 0: reload_out (SI) = (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem:SI (reg/f:SI 13 sp) [0 S4 A32])

Reloads for insn # 338
Reload 0: reload_out (SI) = (reg:SI 154 [ iftmp.342 ])
	GENERAL_REGS, RELOAD_FOR_OUTPUT (opnum = 0)
	reload_out_reg: (reg:SI 154 [ iftmp.342 ])
	reload_reg_rtx: (reg:SI 8 r8)

Reloads for insn # 340
Reload 0: reload_out (SI) = (reg:SI 152 [ iftmp.345 ])
	GENERAL_REGS, RELOAD_FOR_OUTPUT (opnum = 0)
	reload_out_reg: (reg:SI 152 [ iftmp.345 ])
	reload_reg_rtx: (reg:SI 11 fp)

Reloads for insn # 356
Reload 0: reload_out (SI) = (reg:SI 151 [ iftmp.346 ])
	GENERAL_REGS, RELOAD_FOR_OUTPUT (opnum = 0)
	reload_out_reg: (reg:SI 151 [ iftmp.346 ])
	reload_reg_rtx: (reg:SI 8 r8)

Reloads for insn # 348
Reload 0: reload_in (SI) = (reg:SI 207 [ <variable>.addr_limit ])
	GENERAL_REGS, RELOAD_FOR_INPUT (opnum = 3)
	reload_in_reg: (reg:SI 207 [ <variable>.addr_limit ])
	reload_reg_rtx: (reg:SI 8 r8)

Reloads for insn # 92
Reload 0: reload_out (QI) = (mem/s/j:QI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 32 [0x20])) [0 buf+0 S1 A64])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:QI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 32 [0x20])) [0 buf+0 S1 A64])
Reload 1: reload_in (SI) = (reg:SI 154 [ iftmp.342 ])
	GENERAL_REGS, RELOAD_FOR_INPUT (opnum = 1)
	reload_in_reg: (reg:SI 154 [ iftmp.342 ])
	reload_reg_rtx: (reg:SI 14 lr)

Reloads for insn # 106
Reload 0: reload_out (QI) = (mem/s/j:QI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 33 [0x21])) [0 buf+1 S1 A8])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:QI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 33 [0x21])) [0 buf+1 S1 A8])

Reloads for insn # 120
Reload 0: reload_out (QI) = (mem/s/j:QI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 34 [0x22])) [0 buf+2 S1 A16])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:QI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 34 [0x22])) [0 buf+2 S1 A16])
Reload 1: reload_in (SI) = (reg:SI 152 [ iftmp.345 ])
	GENERAL_REGS, RELOAD_FOR_INPUT (opnum = 1)
	reload_in_reg: (reg:SI 152 [ iftmp.345 ])
	reload_reg_rtx: (reg:SI 8 r8)

Reloads for insn # 134
Reload 0: reload_out (QI) = (mem/s/j:QI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 35 [0x23])) [0 buf+3 S1 A8])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:QI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 35 [0x23])) [0 buf+3 S1 A8])
Reload 1: reload_in (SI) = (reg:SI 151 [ iftmp.346 ])
	GENERAL_REGS, RELOAD_FOR_INPUT (opnum = 1)
	reload_in_reg: (reg:SI 151 [ iftmp.346 ])
	reload_reg_rtx: (reg:SI 14 lr)

Reloads for insn # 194
Reload 0: reload_out (SI) = (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem:SI (reg/f:SI 13 sp) [0 S4 A32])

Reloads for insn # 195
Reload 0: reload_out (SI) = (mem:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 4 [0x4])) [0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 4 [0x4])) [0 S4 A32])

Reloads for insn # 196
Reload 0: reload_out (SI) = (mem:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 8 [0x8])) [0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 8 [0x8])) [0 S4 A32])

Reloads for insn # 137
Reload 0: reload_out (QI) = (mem/s/j:QI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 36 [0x24])) [0 buf+4 S1 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:QI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 36 [0x24])) [0 buf+4 S1 A32])

Reloads for insn # 204
Reload 0: reload_out (QI) = (mem/s/j:QI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 32 [0x20])) [0 buf+0 S1 A64])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:QI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 32 [0x20])) [0 buf+0 S1 A64])

Reloads for insn # 208
Reload 0: reload_out (SI) = (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem:SI (reg/f:SI 13 sp) [0 S4 A32])

Reloads for insn # 229
Reload 0: reload_out (SI) = (mem/s/j:SI (plus:SI (reg:SI 5 r5 [159])
                                                        (const_int 8 [0x8])) [0 <variable>.addr_limit+0 S4 A64])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:SI (plus:SI (reg:SI 5 r5 [159])
                                                        (const_int 8 [0x8])) [0 <variable>.addr_limit+0 S4 A64])

Reloads for insn # 329
Reload 0: reload_out (SI) = (mem/s/j:SI (plus:SI (reg:SI 5 r5 [159])
                                                        (const_int 8 [0x8])) [0 <variable>.addr_limit+0 S4 A64])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:SI (plus:SI (reg:SI 5 r5 [159])
                                                        (const_int 8 [0x8])) [0 <variable>.addr_limit+0 S4 A64])
deleting insn with uid = 199.
deleting insn with uid = 200.
deleting insn with uid = 212.
deleting insn with uid = 218.
+++Overall after reload 58000


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 10.
verify found no changes in insn with uid = 16.
verify found no changes in insn with uid = 28.
verify found no changes in insn with uid = 36.
verify found no changes in insn with uid = 44.
verify found no changes in insn with uid = 56.
verify found no changes in insn with uid = 62.
verify found no changes in insn with uid = 70.
verify found no changes in insn with uid = 78.
verify found no changes in insn with uid = 201.
verify found no changes in insn with uid = 213.
verify found no changes in insn with uid = 220.
verify found no changes in insn with uid = 235.
verify found no changes in insn with uid = 241.
verify found no changes in insn with uid = 247.
verify found no changes in insn with uid = 253.
verify found no changes in insn with uid = 259.
verify found no changes in insn with uid = 265.
verify found no changes in insn with uid = 271.
verify found no changes in insn with uid = 277.
verify found no changes in insn with uid = 283.
verify found no changes in insn with uid = 289.
verify found no changes in insn with uid = 295.
verify found no changes in insn with uid = 301.
verify found no changes in insn with uid = 307.
verify found no changes in insn with uid = 313.
verify found no changes in insn with uid = 319.
verify found no changes in insn with uid = 325.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


__show_regs

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 7[r7] 8[r8] 9[r9] 10[sl] 11[fp] 12[ip] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={73d,55u} r1={56d,27u} r2={40d,11u} r3={41d,15u} r4={1d,38u,21d} r5={2d,6u} r6={1d,3u} r7={2d,4u} r8={6d,7u} r9={3d,3u,1d} r10={2d,2u} r11={2d,2u} r12={36d,8u} r13={1d,55u,2d} r14={34d,7u} r15={28d} r16={28d} r17={28d} r18={28d} r19={28d} r20={28d} r21={28d} r22={28d} r23={28d} r24={35d,5u} r25={3d} r27={28d} r28={28d} r29={28d} r30={28d} r31={28d} r32={28d} r33={28d} r34={28d} r35={28d} r36={28d} r37={28d} r38={28d} r39={28d} r40={28d} r41={28d} r42={28d} r43={28d} r44={28d} r45={28d} r46={28d} r47={28d} r48={28d} r49={28d} r50={28d} r51={28d} r52={28d} r53={28d} r54={28d} r55={28d} r56={28d} r57={28d} r58={28d} r59={28d} r60={28d} r61={28d} r62={28d} r63={28d} r64={28d} r65={28d} r66={28d} r67={28d} r68={28d} r69={28d} r70={28d} r71={28d} r72={28d} r73={28d} r74={28d} r75={28d} r76={28d} r77={28d} r78={28d} r79={28d} r80={28d} r81={28d} r82={28d} r83={28d} r84={28d} r85={28d} r86={28d} r87={28d} r88={28d} r89={28d} r90={28d} r91={28d} r92={28d} r93={28d} r94={28d} r95={28d} r96={28d} r97={28d} r98={28d} r99={28d} r100={28d} r101={28d} r102={28d} r103={28d} r104={28d} r105={28d} r106={28d} r107={28d} r108={28d} r109={28d} r110={28d} r111={28d} r112={28d} r113={28d} r114={28d} r115={28d} r116={28d} r117={28d} r118={28d} r119={28d} r120={28d} r121={28d} r122={28d} r123={28d} r124={28d} r125={28d} r126={28d} r127={28d} 
;;    total ref usage 3690{3415d,248u,27e} in 181{153 regular + 28 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 14 [lr] 24 [cc]
;; live  kill	 14 [lr] 24 [cc]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 7 2 NOTE_INSN_FUNCTION_BEG)

(note 7 3 17 2 NOTE_INSN_DELETED)

(note 17 7 80 2 NOTE_INSN_DELETED)

(note 80 17 93 2 NOTE_INSN_DELETED)

(note 93 80 107 2 NOTE_INSN_DELETED)

(note 107 93 121 2 NOTE_INSN_DELETED)

(note 121 107 139 2 NOTE_INSN_DELETED)

(note 139 121 151 2 NOTE_INSN_DELETED)

(note 151 139 167 2 NOTE_INSN_DELETED)

(note 167 151 170 2 NOTE_INSN_DELETED)

(note 170 167 173 2 NOTE_INSN_DELETED)

(note 173 170 181 2 NOTE_INSN_DELETED)

(note 181 173 231 2 NOTE_INSN_DELETED)

(note 231 181 237 2 NOTE_INSN_DELETED)

(note 237 231 243 2 NOTE_INSN_DELETED)

(note 243 237 249 2 NOTE_INSN_DELETED)

(note 249 243 255 2 NOTE_INSN_DELETED)

(note 255 249 261 2 NOTE_INSN_DELETED)

(note 261 255 267 2 NOTE_INSN_DELETED)

(note 267 261 273 2 NOTE_INSN_DELETED)

(note 273 267 279 2 NOTE_INSN_DELETED)

(note 279 273 285 2 NOTE_INSN_DELETED)

(note 285 279 291 2 NOTE_INSN_DELETED)

(note 291 285 297 2 NOTE_INSN_DELETED)

(note 297 291 303 2 NOTE_INSN_DELETED)

(note 303 297 309 2 NOTE_INSN_DELETED)

(note 309 303 315 2 NOTE_INSN_DELETED)

(note 315 309 321 2 NOTE_INSN_DELETED)

(note 321 315 363 2 NOTE_INSN_DELETED)

(insn 363 321 357 2 arch/arm/kernel/process.c:376 (set (reg:SI 3 r3)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn 357 363 12 2 arch/arm/kernel/process.c:376 (set (reg:SI 5 r5 [159])
        (and:SI (reg:SI 3 r3)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 12 357 358 2 arch/arm/kernel/process.c:376 (set (reg/f:SI 8 r8 [161])
        (const:SI (plus:SI (symbol_ref:SI ("init_uts_ns") [flags 0xc0] <var_decl 0x113e66c0 init_uts_ns>)
                (const_int 199 [0xc7])))) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("init_uts_ns") [flags 0xc0] <var_decl 0x113e66c0 init_uts_ns>)
                (const_int 199 [0xc7])))
        (nil)))

(insn 358 12 2 2 arch/arm/kernel/process.c:376 (set (reg:SI 5 r5 [159])
        (and:SI (reg:SI 5 r5 [159])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 2 358 193 2 arch/arm/kernel/process.c:372 (set (reg/v/f:SI 4 r4 [orig:158 regs ] [158])
        (reg:SI 0 r0 [ regs ])) 167 {*arm_movsi_insn} (nil))

(insn 193 2 135 2 arch/arm/kernel/process.c:404 discrim 9 (set (reg/f:SI 7 r7 [209])
        (plus:SI (reg/f:SI 13 sp)
            (const_int 32 [0x20]))) 4 {*arm_addsi3} (expr_list:REG_EQUIV (plus:SI (reg/f:SI 13 sp)
            (const_int 32 [0x20]))
        (nil)))

(insn 135 193 9 2 arch/arm/kernel/process.c:402 (set (reg:SI 6 r6 [189])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 0 [0x0])
        (nil)))

(insn 9 135 10 2 arch/arm/kernel/process.c:376 (set (reg:SI 10 sl [orig:157 D.25923 ] [157])
        (mem/s/j:SI (plus:SI (reg:SI 5 r5 [159])
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn 10 9 11 2 arch/arm/kernel/process.c:376 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("print_tainted") [flags 0x41] <function_decl 0x10a82b00 print_tainted>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (nil))

(insn 11 10 15 2 arch/arm/kernel/process.c:376 (set (reg/f:SI 9 r9 [orig:156 D.25924 ] [156])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 15 11 14 2 arch/arm/kernel/process.c:376 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC8") [flags 0x82] <string_cst 0x11556fa0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC8") [flags 0x82] <string_cst 0x11556fa0>)
        (nil)))

(insn 14 15 16 2 arch/arm/kernel/process.c:376 (set (reg:SI 0 r0)
        (reg/f:SI 8 r8 [161])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("init_uts_ns") [flags 0xc0] <var_decl 0x113e66c0 init_uts_ns>)
                (const_int 199 [0xc7])))
        (nil)))

(call_insn/i 16 14 26 2 arch/arm/kernel/process.c:376 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcspn") [flags 0x41] <function_decl 0x51157880 strcspn>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 26 16 25 2 arch/arm/kernel/process.c:376 (set (reg:SI 2 r2)
        (reg/f:SI 9 r9 [orig:156 D.25924 ] [156])) 167 {*arm_movsi_insn} (nil))

(insn 25 26 27 2 arch/arm/kernel/process.c:376 (set (reg:SI 1 r1)
        (reg:SI 10 sl [orig:157 D.25923 ] [157])) 167 {*arm_movsi_insn} (nil))

(insn 27 25 23 2 arch/arm/kernel/process.c:376 (set (reg:SI 3 r3)
        (const:SI (plus:SI (symbol_ref:SI ("init_uts_ns") [flags 0xc0] <var_decl 0x113e66c0 init_uts_ns>)
                (const_int 134 [0x86])))) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("init_uts_ns") [flags 0xc0] <var_decl 0x113e66c0 init_uts_ns>)
                (const_int 134 [0x86])))
        (nil)))

(insn 23 27 21 2 arch/arm/kernel/process.c:376 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 8 r8 [161])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("init_uts_ns") [flags 0xc0] <var_decl 0x113e66c0 init_uts_ns>)
                (const_int 199 [0xc7])))
        (nil)))

(insn 21 23 24 2 arch/arm/kernel/process.c:376 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 24 21 28 2 arch/arm/kernel/process.c:376 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC9") [flags 0x82] <string_cst 0x1158d840>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC9") [flags 0x82] <string_cst 0x1158d840>)
        (nil)))

(call_insn 28 24 29 2 arch/arm/kernel/process.c:376 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 29 28 34 2 include/linux/kallsyms.h:113 (set (reg:SI 3 r3 [orig:167 <variable>.uregs+60 ] [167])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:158 regs ] [158])
                (const_int 60 [0x3c])) [0 <variable>.uregs+60 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:158 regs ] [158])
                (const_int 60 [0x3c])) [0 <variable>.uregs+60 S4 A32])
        (nil)))

(insn 34 29 35 2 include/linux/kallsyms.h:113 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC10") [flags 0x82] <string_cst 0x1158bf90>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC10") [flags 0x82] <string_cst 0x1158bf90>)
        (nil)))

(insn 35 34 31 2 include/linux/kallsyms.h:113 (set (reg:SI 1 r1)
        (reg:SI 3 r3 [orig:167 <variable>.uregs+60 ] [167])) 167 {*arm_movsi_insn} (nil))

(insn 31 35 36 2 include/linux/kallsyms.h:113 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:158 regs ] [158])
                (const_int 60 [0x3c])) [0 <variable>.uregs+60 S4 A32])
        (reg:SI 3 r3 [orig:167 <variable>.uregs+60 ] [167])) 167 {*arm_movsi_insn} (nil))

(call_insn 36 31 37 2 include/linux/kallsyms.h:113 (parallel [
            (call (mem:SI (symbol_ref:SI ("__print_symbol") [flags 0x41] <function_decl 0x111b7680 __print_symbol>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 37 36 42 2 include/linux/kallsyms.h:113 (set (reg:SI 3 r3 [orig:170 <variable>.uregs+56 ] [170])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:158 regs ] [158])
                (const_int 56 [0x38])) [0 <variable>.uregs+56 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:158 regs ] [158])
                (const_int 56 [0x38])) [0 <variable>.uregs+56 S4 A32])
        (nil)))

(insn 42 37 43 2 include/linux/kallsyms.h:113 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC11") [flags 0x82] <string_cst 0x115940f0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82] <string_cst 0x115940f0>)
        (nil)))

(insn 43 42 39 2 include/linux/kallsyms.h:113 (set (reg:SI 1 r1)
        (reg:SI 3 r3 [orig:170 <variable>.uregs+56 ] [170])) 167 {*arm_movsi_insn} (nil))

(insn 39 43 44 2 include/linux/kallsyms.h:113 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:158 regs ] [158])
                (const_int 56 [0x38])) [0 <variable>.uregs+56 S4 A32])
        (reg:SI 3 r3 [orig:170 <variable>.uregs+56 ] [170])) 167 {*arm_movsi_insn} (nil))

(call_insn 44 39 46 2 include/linux/kallsyms.h:113 (parallel [
            (call (mem:SI (symbol_ref:SI ("__print_symbol") [flags 0x41] <function_decl 0x111b7680 __print_symbol>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 46 44 48 2 arch/arm/kernel/process.c:383 (set (reg:SI 8 r8 [orig:174 <variable>.uregs+52 ] [174])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:158 regs ] [158])
                (const_int 52 [0x34])) [0 <variable>.uregs+52 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:158 regs ] [158])
                (const_int 52 [0x34])) [0 <variable>.uregs+52 S4 A32])
        (nil)))

(insn 48 46 50 2 arch/arm/kernel/process.c:383 (set (reg:SI 14 lr [orig:175 <variable>.uregs+48 ] [175])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:158 regs ] [158])
                (const_int 48 [0x30])) [0 <variable>.uregs+48 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 50 48 53 2 arch/arm/kernel/process.c:383 (set (reg:SI 12 ip [orig:176 <variable>.uregs+44 ] [176])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:158 regs ] [158])
                (const_int 44 [0x2c])) [0 <variable>.uregs+44 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 53 50 54 2 arch/arm/kernel/process.c:383 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:158 regs ] [158])
                (const_int 60 [0x3c])) [0 <variable>.uregs+60 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 54 53 55 2 arch/arm/kernel/process.c:383 (set (reg:SI 2 r2)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:158 regs ] [158])
                (const_int 56 [0x38])) [0 <variable>.uregs+56 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 55 54 52 2 arch/arm/kernel/process.c:383 (set (reg:SI 3 r3)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:158 regs ] [158])
                (const_int 64 [0x40])) [0 <variable>.uregs+64 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 52 55 47 2 arch/arm/kernel/process.c:383 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC12") [flags 0x82] <string_cst 0x11659ee0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC12") [flags 0x82] <string_cst 0x11659ee0>)
        (nil)))

(insn 47 52 49 2 arch/arm/kernel/process.c:383 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg:SI 8 r8 [orig:174 <variable>.uregs+52 ] [174])) 167 {*arm_movsi_insn} (nil))

(insn 49 47 51 2 arch/arm/kernel/process.c:383 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 14 lr [orig:175 <variable>.uregs+48 ] [175])) 167 {*arm_movsi_insn} (nil))

(insn 51 49 56 2 arch/arm/kernel/process.c:383 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg:SI 12 ip [orig:176 <variable>.uregs+44 ] [176])) 167 {*arm_movsi_insn} (nil))

(call_insn 56 51 59 2 arch/arm/kernel/process.c:383 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 16 [0x10])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 59 56 60 2 arch/arm/kernel/process.c:387 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:158 regs ] [158])
                (const_int 40 [0x28])) [0 <variable>.uregs+40 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 60 59 61 2 arch/arm/kernel/process.c:387 (set (reg:SI 2 r2)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:158 regs ] [158])
                (const_int 36 [0x24])) [0 <variable>.uregs+36 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 61 60 58 2 arch/arm/kernel/process.c:387 (set (reg:SI 3 r3)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:158 regs ] [158])
                (const_int 32 [0x20])) [0 <variable>.uregs+32 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 58 61 62 2 arch/arm/kernel/process.c:387 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC13") [flags 0x82] <string_cst 0x1156d200>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC13") [flags 0x82] <string_cst 0x1156d200>)
        (nil)))

(call_insn 62 58 64 2 arch/arm/kernel/process.c:387 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 64 62 67 2 arch/arm/kernel/process.c:390 (set (reg:SI 12 ip [orig:179 <variable>.uregs+16 ] [179])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:158 regs ] [158])
                (const_int 16 [0x10])) [0 <variable>.uregs+16 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:158 regs ] [158])
                (const_int 16 [0x10])) [0 <variable>.uregs+16 S4 A32])
        (nil)))

(insn 67 64 68 2 arch/arm/kernel/process.c:390 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:158 regs ] [158])
                (const_int 28 [0x1c])) [0 <variable>.uregs+28 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 68 67 69 2 arch/arm/kernel/process.c:390 (set (reg:SI 2 r2)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:158 regs ] [158])
                (const_int 24 [0x18])) [0 <variable>.uregs+24 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 69 68 66 2 arch/arm/kernel/process.c:390 (set (reg:SI 3 r3)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:158 regs ] [158])
                (const_int 20 [0x14])) [0 <variable>.uregs+20 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 66 69 65 2 arch/arm/kernel/process.c:390 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC14") [flags 0x82] <string_cst 0x115a7aa0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC14") [flags 0x82] <string_cst 0x115a7aa0>)
        (nil)))

(insn 65 66 70 2 arch/arm/kernel/process.c:390 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg:SI 12 ip [orig:179 <variable>.uregs+16 ] [179])) 167 {*arm_movsi_insn} (nil))

(call_insn 70 65 72 2 arch/arm/kernel/process.c:390 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 72 70 75 2 arch/arm/kernel/process.c:393 (set (reg:SI 12 ip [orig:181 <variable>.uregs ] [181])
        (mem/s/j:SI (reg/v/f:SI 4 r4 [orig:158 regs ] [158]) [0 <variable>.uregs+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (reg/v/f:SI 4 r4 [orig:158 regs ] [158]) [0 <variable>.uregs+0 S4 A32])
        (nil)))

(insn 75 72 76 2 arch/arm/kernel/process.c:393 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:158 regs ] [158])
                (const_int 12 [0xc])) [0 <variable>.uregs+12 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 76 75 77 2 arch/arm/kernel/process.c:393 (set (reg:SI 2 r2)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:158 regs ] [158])
                (const_int 8 [0x8])) [0 <variable>.uregs+8 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 77 76 74 2 arch/arm/kernel/process.c:393 (set (reg:SI 3 r3)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:158 regs ] [158])
                (const_int 4 [0x4])) [0 <variable>.uregs+4 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 74 77 73 2 arch/arm/kernel/process.c:393 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC15") [flags 0x82] <string_cst 0x115a7af0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC15") [flags 0x82] <string_cst 0x115a7af0>)
        (nil)))

(insn 73 74 78 2 arch/arm/kernel/process.c:393 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg:SI 12 ip [orig:181 <variable>.uregs ] [181])) 167 {*arm_movsi_insn} (nil))

(call_insn 78 73 79 2 arch/arm/kernel/process.c:393 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 79 78 198 2 arch/arm/kernel/process.c:397 (set (reg/v:SI 0 r0 [orig:145 flags ] [145])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:158 regs ] [158])
                (const_int 64 [0x40])) [0 <variable>.uregs+64 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:158 regs ] [158])
                (const_int 64 [0x40])) [0 <variable>.uregs+64 S4 A32])
        (nil)))

(insn 198 79 163 2 arch/arm/kernel/process.c:404 discrim 9 (set (reg:SI 1 r1)
        (reg/f:SI 7 r7 [209])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -64 [0xffffffffffffffc0]))
        (nil)))

(insn 163 198 169 2 arch/arm/kernel/process.c:404 discrim 6 (set (reg/f:SI 14 lr [193])
        (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])
        (nil)))

(insn 169 163 168 2 arch/arm/kernel/process.c:404 discrim 6 (set (reg:SI 2 r2 [198])
        (and:SI (reg/v:SI 0 r0 [orig:145 flags ] [145])
            (const_int 16777216 [0x1000000]))) 67 {*arm_andsi3_insn} (nil))

(insn 168 169 338 2 arch/arm/kernel/process.c:404 discrim 6 (set (reg:SI 3 r3 [197])
        (zero_extract:SI (reg/v:SI 0 r0 [orig:145 flags ] [145])
            (const_int 1 [0x1])
            (const_int 5 [0x5]))) 124 {extzv_t2} (nil))

(insn 338 168 364 2 arch/arm/kernel/process.c:398 discrim 2 (parallel [
            (set (reg:SI 8 r8)
                (if_then_else:SI (lt (reg/v:SI 0 r0 [orig:145 flags ] [145])
                        (const_int 0 [0x0]))
                    (const_int 78 [0x4e])
                    (const_int 110 [0x6e])))
            (clobber (reg:CC 24 cc))
        ]) 292 {movcond} (nil))

(insn 364 338 94 2 arch/arm/kernel/process.c:398 discrim 2 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 20 [0x14])) [0 %sfp+-76 S4 A32])
        (reg:SI 8 r8)) 167 {*arm_movsi_insn} (nil))

(insn 94 364 171 2 arch/arm/kernel/process.c:399 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 0 r0 [orig:145 flags ] [145])
                (const_int 1 [0x1])
                (const_int 30 [0x1e]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(insn 171 94 350 2 arch/arm/kernel/process.c:404 discrim 6 (set (reg:SI 2 r2 [200])
        (ior:SI (lshiftrt:SI (reg:SI 2 r2 [198])
                (const_int 23 [0x17]))
            (reg:SI 3 r3 [197]))) 270 {*arith_shiftsi} (nil))

(insn 350 171 108 2 arch/arm/kernel/process.c:399 discrim 2 (set (reg:SI 10 sl [orig:153 iftmp.344 ] [153])
        (if_then_else:SI (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (const_int 90 [0x5a])
            (const_int 122 [0x7a]))) 240 {*movsicc_insn} (nil))

(insn 108 350 341 2 arch/arm/kernel/process.c:400 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 0 r0 [orig:145 flags ] [145])
                (const_int 1 [0x1])
                (const_int 29 [0x1d]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(insn 341 108 174 2 arch/arm/kernel/process.c:404 discrim 1 (set (reg/f:SI 12 ip [271])
        (symbol_ref/v/f:SI ("*.LC17") [flags 0x82] <string_cst 0x116772a0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref/v/f:SI ("*.LC17") [flags 0x82] <string_cst 0x116772a0>)
        (nil)))

(insn 174 341 340 2 arch/arm/kernel/process.c:404 discrim 6 (set (reg:SI 2 r2 [203])
        (plus:SI (mult:SI (reg:SI 2 r2 [200])
                (const_int 4 [0x4]))
            (reg/f:SI 14 lr [193]))) 270 {*arith_shiftsi} (nil))

(insn 340 174 365 2 arch/arm/kernel/process.c:400 discrim 2 (set (reg:SI 11 fp)
        (if_then_else:SI (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (const_int 67 [0x43])
            (const_int 99 [0x63]))) 240 {*movsicc_insn} (nil))

(insn 365 340 122 2 arch/arm/kernel/process.c:400 discrim 2 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 28 [0x1c])) [0 %sfp+-68 S4 A32])
        (reg:SI 11 fp)) 167 {*arm_movsi_insn} (nil))

(insn 122 365 342 2 arch/arm/kernel/process.c:401 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 0 r0 [orig:145 flags ] [145])
                (const_int 1 [0x1])
                (const_int 28 [0x1c]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(insn 342 122 164 2 arch/arm/kernel/process.c:404 discrim 1 (set (reg/f:SI 3 r3 [272])
        (symbol_ref/v/f:SI ("*.LC16") [flags 0x82] <string_cst 0x116771c0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref/v/f:SI ("*.LC16") [flags 0x82] <string_cst 0x116771c0>)
        (nil)))

(insn 164 342 356 2 arch/arm/kernel/process.c:404 discrim 6 (set (reg:SI 9 r9 [194])
        (and:SI (reg/v:SI 0 r0 [orig:145 flags ] [145])
            (const_int 31 [0x1f]))) 67 {*arm_andsi3_insn} (nil))

(insn 356 164 366 2 arch/arm/kernel/process.c:401 discrim 2 (set (reg:SI 8 r8)
        (if_then_else:SI (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (const_int 86 [0x56])
            (const_int 118 [0x76]))) 240 {*movsicc_insn} (nil))

(insn 366 356 140 2 arch/arm/kernel/process.c:401 discrim 2 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 24 [0x18])) [0 %sfp+-72 S4 A32])
        (reg:SI 8 r8)) 167 {*arm_movsi_insn} (nil))

(insn 140 366 176 2 arch/arm/kernel/process.c:404 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 0 r0 [orig:145 flags ] [145])
                (const_int 1 [0x1])
                (const_int 7 [0x7]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(insn 176 140 344 2 arch/arm/kernel/process.c:404 discrim 6 (set (reg/f:SI 11 fp [orig:147 D.25990 ] [147])
        (mem/s/u/f/j:SI (plus:SI (reg:SI 2 r2 [203])
                (const_int 128 [0x80])) [0 isa_modes S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 344 176 165 2 arch/arm/kernel/process.c:404 discrim 1 (set (reg/f:SI 2 r2 [orig:150 iftmp.347 ] [150])
        (if_then_else:SI (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (reg/f:SI 12 ip [271])
            (reg/f:SI 3 r3 [272]))) 240 {*movsicc_insn} (nil))

(insn 165 344 152 2 arch/arm/kernel/process.c:404 discrim 6 (set (reg/f:SI 9 r9 [orig:148 D.25984 ] [148])
        (mem/s/u/f/j:SI (plus:SI (mult:SI (reg:SI 9 r9 [194])
                    (const_int 4 [0x4]))
                (reg/f:SI 14 lr [193])) [0 processor_modes S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/u/f/j:SI (plus:SI (mult:SI (reg:SI 9 r9 [194])
                    (const_int 4 [0x4]))
                (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])) [0 processor_modes S4 A32])
        (nil)))

(insn 152 165 180 2 arch/arm/kernel/process.c:406 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 0 r0 [orig:145 flags ] [145])
                (const_int 1 [0x1])
                (const_int 6 [0x6]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(note 180 152 354 2 NOTE_INSN_DELETED)

(insn 354 180 197 2 arch/arm/kernel/process.c:404 discrim 4 (set (reg/f:SI 3 r3 [orig:149 iftmp.348 ] [149])
        (if_then_else:SI (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (reg/f:SI 12 ip [271])
            (reg/f:SI 3 r3 [272]))) 240 {*movsicc_insn} (nil))

(insn 197 354 360 2 arch/arm/kernel/process.c:404 discrim 9 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC20") [flags 0x82] <string_cst 0x112506c0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC20") [flags 0x82] <string_cst 0x112506c0>)
        (nil)))

(insn 360 197 361 2 arch/arm/kernel/process.c:404 discrim 8 (set (reg/f:SI 12 ip [274])
        (symbol_ref/v/f:SI ("*.LC18") [flags 0x82] <string_cst 0x11677900>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref/v/f:SI ("*.LC18") [flags 0x82] <string_cst 0x11677900>)
        (nil)))

(insn 361 360 367 2 arch/arm/kernel/process.c:404 discrim 8 (set (reg/f:SI 14 lr [273])
        (symbol_ref/v/f:SI ("*.LC19") [flags 0x82] <string_cst 0x11677a00>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref/v/f:SI ("*.LC19") [flags 0x82] <string_cst 0x11677a00>)
        (nil)))

(insn 367 361 348 2 arch/arm/kernel/process.c:404 discrim 8 (set (reg:SI 8 r8)
        (mem/s/j/c:SI (plus:SI (reg:SI 5 r5 [159])
                (const_int 8 [0x8])) [0 <variable>.addr_limit+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 348 367 368 2 arch/arm/kernel/process.c:404 discrim 8 (parallel [
            (set (reg/f:SI 12 ip [orig:146 iftmp.349 ] [146])
                (if_then_else:SI (eq (reg:SI 8 r8)
                        (const_int 0 [0x0]))
                    (reg/f:SI 14 lr [273])
                    (reg/f:SI 12 ip [274])))
            (clobber (reg:CC 24 cc))
        ]) 292 {movcond} (expr_list:REG_EQUIV (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [0 S4 A32])
        (nil)))

(insn 368 348 92 2 arch/arm/kernel/process.c:398 discrim 3 (set (reg:SI 14 lr)
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 20 [0x14])) [0 %sfp+-76 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 92 368 106 2 arch/arm/kernel/process.c:398 discrim 3 (set (mem/s/j:QI (plus:SI (reg/f:SI 13 sp)
                (const_int 32 [0x20])) [0 buf+0 S1 A64])
        (reg:QI 14 lr)) 178 {*arm_movqi_insn} (nil))

(insn 106 92 369 2 arch/arm/kernel/process.c:399 discrim 3 (set (mem/s/j:QI (plus:SI (reg/f:SI 13 sp)
                (const_int 33 [0x21])) [0 buf+1 S1 A8])
        (reg:QI 10 sl [orig:153 iftmp.344 ] [153])) 178 {*arm_movqi_insn} (nil))

(insn 369 106 120 2 arch/arm/kernel/process.c:400 discrim 3 (set (reg:SI 8 r8)
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 28 [0x1c])) [0 %sfp+-68 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 120 369 370 2 arch/arm/kernel/process.c:400 discrim 3 (set (mem/s/j:QI (plus:SI (reg/f:SI 13 sp)
                (const_int 34 [0x22])) [0 buf+2 S1 A16])
        (reg:QI 8 r8)) 178 {*arm_movqi_insn} (nil))

(insn 370 120 134 2 arch/arm/kernel/process.c:401 discrim 3 (set (reg:SI 14 lr)
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 24 [0x18])) [0 %sfp+-72 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 134 370 194 2 arch/arm/kernel/process.c:401 discrim 3 (set (mem/s/j:QI (plus:SI (reg/f:SI 13 sp)
                (const_int 35 [0x23])) [0 buf+3 S1 A8])
        (reg:QI 14 lr)) 178 {*arm_movqi_insn} (nil))

(insn 194 134 195 2 arch/arm/kernel/process.c:404 discrim 9 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg/f:SI 9 r9 [orig:148 D.25984 ] [148])) 167 {*arm_movsi_insn} (nil))

(insn 195 194 196 2 arch/arm/kernel/process.c:404 discrim 9 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 11 fp [orig:147 D.25990 ] [147])) 167 {*arm_movsi_insn} (nil))

(insn 196 195 137 2 arch/arm/kernel/process.c:404 discrim 9 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 12 ip [orig:146 iftmp.349 ] [146])) 167 {*arm_movsi_insn} (nil))

(insn 137 196 201 2 arch/arm/kernel/process.c:402 (set (mem/s/j:QI (plus:SI (reg/f:SI 13 sp)
                (const_int 36 [0x24])) [0 buf+4 S1 A32])
        (reg:QI 6 r6 [189])) 178 {*arm_movqi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(call_insn 201 137 210 2 arch/arm/kernel/process.c:404 discrim 9 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 16 [0x10])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 210 201 211 2 arch/arm/kernel/process.c:421 (set (reg:SI 1 r1)
        (const_int 64 [0x40])) 167 {*arm_movsi_insn} (nil))

(insn 211 210 209 2 arch/arm/kernel/process.c:421 (set (reg:SI 2 r2)
        (symbol_ref/v/f:SI ("*.LC21") [flags 0x82] <string_cst 0x11673e00>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC21") [flags 0x82] <string_cst 0x11673e00>)
        (nil)))

(insn 209 211 204 2 arch/arm/kernel/process.c:421 (set (reg:SI 0 r0)
        (reg/f:SI 7 r7 [209])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -64 [0xffffffffffffffc0]))
        (nil)))

(insn 204 209 205 2 arch/arm/kernel/process.c:414 (set (mem/s/j:QI (plus:SI (reg/f:SI 13 sp)
                (const_int 32 [0x20])) [0 buf+0 S1 A64])
        (reg:QI 6 r6 [189])) 178 {*arm_movqi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 205 204 208 2 arch/arm/kernel/process.c:418 (parallel [
            (set (reg/v:SI 3 r3 [orig:143 transbase ] [143])
                (asm_operands:SI ("mrc p15, 0, %0, c2, c0
	mrc p15, 0, %1, c3, c0
") ("=r") 0 []
                     [] 8842942))
            (set (reg/v:SI 12 ip [orig:142 dac ] [142])
                (asm_operands:SI ("mrc p15, 0, %0, c2, c0
	mrc p15, 0, %1, c3, c0
") ("=r") 1 []
                     [] 8842942))
        ]) -1 (nil))

(insn 208 205 213 2 arch/arm/kernel/process.c:421 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg/v:SI 12 ip [orig:142 dac ] [142])) 167 {*arm_movsi_insn} (nil))

(call_insn 213 208 219 2 arch/arm/kernel/process.c:421 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("snprintf") [flags 0x41] <function_decl 0x5115e680 snprintf>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 219 213 214 2 arch/arm/kernel/process.c:427 (set (reg:SI 2 r2)
        (reg/f:SI 7 r7 [209])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -64 [0xffffffffffffffc0]))
        (nil)))

(insn 214 219 217 2 arch/arm/kernel/process.c:425 (set (reg/v:SI 1 r1 [orig:144 ctrl ] [144])
        (asm_operands:SI ("mrc p15, 0, %0, c1, c0
") ("=r") 0 []
             [] 8843837)) -1 (nil))

(insn 217 214 220 2 arch/arm/kernel/process.c:427 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC22") [flags 0x82] <string_cst 0x11679960>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC22") [flags 0x82] <string_cst 0x11679960>)
        (nil)))

(call_insn 220 217 230 2 arch/arm/kernel/process.c:427 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 230 220 234 2 arch/arm/kernel/process.c:352 (set (reg:SI 0 r0 [orig:222 <variable>.uregs+60 ] [222])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:158 regs ] [158])
                (const_int 60 [0x3c])) [0 <variable>.uregs+60 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:158 regs ] [158])
                (const_int 60 [0x3c])) [0 <variable>.uregs+60 S4 A32])
        (nil)))

(insn 234 230 233 2 arch/arm/kernel/process.c:352 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC23") [flags 0x82] <string_cst 0x11677080>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC23") [flags 0x82] <string_cst 0x11677080>)
        (nil)))

(insn 233 234 224 2 arch/arm/kernel/process.c:352 (set (reg:SI 0 r0)
        (plus:SI (reg:SI 0 r0 [orig:222 <variable>.uregs+60 ] [222])
            (const_int -128 [0xffffffffffffff80]))) 4 {*arm_addsi3} (nil))

(insn 224 233 229 2 arch/arm/kernel/process.c:350 (set (reg/v:SI 7 r7 [orig:134 fs ] [134])
        (mem/s/j:SI (plus:SI (reg:SI 5 r5 [159])
                (const_int 8 [0x8])) [0 <variable>.addr_limit+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 229 224 235 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/uaccess.h:65 (set (mem/s/j:SI (plus:SI (reg:SI 5 r5 [159])
                (const_int 8 [0x8])) [0 <variable>.addr_limit+0 S4 A64])
        (reg:SI 6 r6 [189])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(call_insn 235 229 236 2 arch/arm/kernel/process.c:352 (parallel [
            (call (mem:SI (symbol_ref:SI ("show_data.clone.0") [flags 0x3] <function_decl 0x1156b000 show_data.clone.0>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 236 235 240 2 arch/arm/kernel/process.c:353 (set (reg:SI 0 r0 [orig:225 <variable>.uregs+56 ] [225])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:158 regs ] [158])
                (const_int 56 [0x38])) [0 <variable>.uregs+56 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:158 regs ] [158])
                (const_int 56 [0x38])) [0 <variable>.uregs+56 S4 A32])
        (nil)))

(insn 240 236 239 2 arch/arm/kernel/process.c:353 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC24") [flags 0x82] <string_cst 0x11677140>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC24") [flags 0x82] <string_cst 0x11677140>)
        (nil)))

(insn 239 240 241 2 arch/arm/kernel/process.c:353 (set (reg:SI 0 r0)
        (plus:SI (reg:SI 0 r0 [orig:225 <variable>.uregs+56 ] [225])
            (const_int -128 [0xffffffffffffff80]))) 4 {*arm_addsi3} (nil))

(call_insn 241 239 242 2 arch/arm/kernel/process.c:353 (parallel [
            (call (mem:SI (symbol_ref:SI ("show_data.clone.0") [flags 0x3] <function_decl 0x1156b000 show_data.clone.0>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 242 241 246 2 arch/arm/kernel/process.c:354 (set (reg:SI 0 r0 [orig:228 <variable>.uregs+52 ] [228])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:158 regs ] [158])
                (const_int 52 [0x34])) [0 <variable>.uregs+52 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:158 regs ] [158])
                (const_int 52 [0x34])) [0 <variable>.uregs+52 S4 A32])
        (nil)))

(insn 246 242 245 2 arch/arm/kernel/process.c:354 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC25") [flags 0x82] <string_cst 0x11677120>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC25") [flags 0x82] <string_cst 0x11677120>)
        (nil)))

(insn 245 246 247 2 arch/arm/kernel/process.c:354 (set (reg:SI 0 r0)
        (plus:SI (reg:SI 0 r0 [orig:228 <variable>.uregs+52 ] [228])
            (const_int -128 [0xffffffffffffff80]))) 4 {*arm_addsi3} (nil))

(call_insn 247 245 248 2 arch/arm/kernel/process.c:354 (parallel [
            (call (mem:SI (symbol_ref:SI ("show_data.clone.0") [flags 0x3] <function_decl 0x1156b000 show_data.clone.0>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 248 247 252 2 arch/arm/kernel/process.c:355 (set (reg:SI 0 r0 [orig:231 <variable>.uregs+48 ] [231])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:158 regs ] [158])
                (const_int 48 [0x30])) [0 <variable>.uregs+48 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:158 regs ] [158])
                (const_int 48 [0x30])) [0 <variable>.uregs+48 S4 A32])
        (nil)))

(insn 252 248 251 2 arch/arm/kernel/process.c:355 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC26") [flags 0x82] <string_cst 0x11677100>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC26") [flags 0x82] <string_cst 0x11677100>)
        (nil)))

(insn 251 252 253 2 arch/arm/kernel/process.c:355 (set (reg:SI 0 r0)
        (plus:SI (reg:SI 0 r0 [orig:231 <variable>.uregs+48 ] [231])
            (const_int -128 [0xffffffffffffff80]))) 4 {*arm_addsi3} (nil))

(call_insn 253 251 254 2 arch/arm/kernel/process.c:355 (parallel [
            (call (mem:SI (symbol_ref:SI ("show_data.clone.0") [flags 0x3] <function_decl 0x1156b000 show_data.clone.0>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 254 253 258 2 arch/arm/kernel/process.c:356 (set (reg:SI 0 r0 [orig:234 <variable>.uregs+44 ] [234])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:158 regs ] [158])
                (const_int 44 [0x2c])) [0 <variable>.uregs+44 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:158 regs ] [158])
                (const_int 44 [0x2c])) [0 <variable>.uregs+44 S4 A32])
        (nil)))

(insn 258 254 257 2 arch/arm/kernel/process.c:356 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC27") [flags 0x82] <string_cst 0x11677220>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC27") [flags 0x82] <string_cst 0x11677220>)
        (nil)))

(insn 257 258 259 2 arch/arm/kernel/process.c:356 (set (reg:SI 0 r0)
        (plus:SI (reg:SI 0 r0 [orig:234 <variable>.uregs+44 ] [234])
            (const_int -128 [0xffffffffffffff80]))) 4 {*arm_addsi3} (nil))

(call_insn 259 257 260 2 arch/arm/kernel/process.c:356 (parallel [
            (call (mem:SI (symbol_ref:SI ("show_data.clone.0") [flags 0x3] <function_decl 0x1156b000 show_data.clone.0>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 260 259 264 2 arch/arm/kernel/process.c:357 (set (reg:SI 0 r0 [orig:237 <variable>.uregs ] [237])
        (mem/s/j:SI (reg/v/f:SI 4 r4 [orig:158 regs ] [158]) [0 <variable>.uregs+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (reg/v/f:SI 4 r4 [orig:158 regs ] [158]) [0 <variable>.uregs+0 S4 A32])
        (nil)))

(insn 264 260 263 2 arch/arm/kernel/process.c:357 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC28") [flags 0x82] <string_cst 0x116770e0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC28") [flags 0x82] <string_cst 0x116770e0>)
        (nil)))

(insn 263 264 265 2 arch/arm/kernel/process.c:357 (set (reg:SI 0 r0)
        (plus:SI (reg:SI 0 r0 [orig:237 <variable>.uregs ] [237])
            (const_int -128 [0xffffffffffffff80]))) 4 {*arm_addsi3} (nil))

(call_insn 265 263 266 2 arch/arm/kernel/process.c:357 (parallel [
            (call (mem:SI (symbol_ref:SI ("show_data.clone.0") [flags 0x3] <function_decl 0x1156b000 show_data.clone.0>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 266 265 270 2 arch/arm/kernel/process.c:358 (set (reg:SI 0 r0 [orig:240 <variable>.uregs+4 ] [240])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:158 regs ] [158])
                (const_int 4 [0x4])) [0 <variable>.uregs+4 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:158 regs ] [158])
                (const_int 4 [0x4])) [0 <variable>.uregs+4 S4 A32])
        (nil)))

(insn 270 266 269 2 arch/arm/kernel/process.c:358 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC29") [flags 0x82] <string_cst 0x11677340>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC29") [flags 0x82] <string_cst 0x11677340>)
        (nil)))

(insn 269 270 271 2 arch/arm/kernel/process.c:358 (set (reg:SI 0 r0)
        (plus:SI (reg:SI 0 r0 [orig:240 <variable>.uregs+4 ] [240])
            (const_int -128 [0xffffffffffffff80]))) 4 {*arm_addsi3} (nil))

(call_insn 271 269 272 2 arch/arm/kernel/process.c:358 (parallel [
            (call (mem:SI (symbol_ref:SI ("show_data.clone.0") [flags 0x3] <function_decl 0x1156b000 show_data.clone.0>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 272 271 276 2 arch/arm/kernel/process.c:359 (set (reg:SI 0 r0 [orig:243 <variable>.uregs+8 ] [243])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:158 regs ] [158])
                (const_int 8 [0x8])) [0 <variable>.uregs+8 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:158 regs ] [158])
                (const_int 8 [0x8])) [0 <variable>.uregs+8 S4 A32])
        (nil)))

(insn 276 272 275 2 arch/arm/kernel/process.c:359 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC30") [flags 0x82] <string_cst 0x11677400>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC30") [flags 0x82] <string_cst 0x11677400>)
        (nil)))

(insn 275 276 277 2 arch/arm/kernel/process.c:359 (set (reg:SI 0 r0)
        (plus:SI (reg:SI 0 r0 [orig:243 <variable>.uregs+8 ] [243])
            (const_int -128 [0xffffffffffffff80]))) 4 {*arm_addsi3} (nil))

(call_insn 277 275 278 2 arch/arm/kernel/process.c:359 (parallel [
            (call (mem:SI (symbol_ref:SI ("show_data.clone.0") [flags 0x3] <function_decl 0x1156b000 show_data.clone.0>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 278 277 282 2 arch/arm/kernel/process.c:360 (set (reg:SI 0 r0 [orig:246 <variable>.uregs+12 ] [246])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:158 regs ] [158])
                (const_int 12 [0xc])) [0 <variable>.uregs+12 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:158 regs ] [158])
                (const_int 12 [0xc])) [0 <variable>.uregs+12 S4 A32])
        (nil)))

(insn 282 278 281 2 arch/arm/kernel/process.c:360 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC31") [flags 0x82] <string_cst 0x11677320>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC31") [flags 0x82] <string_cst 0x11677320>)
        (nil)))

(insn 281 282 283 2 arch/arm/kernel/process.c:360 (set (reg:SI 0 r0)
        (plus:SI (reg:SI 0 r0 [orig:246 <variable>.uregs+12 ] [246])
            (const_int -128 [0xffffffffffffff80]))) 4 {*arm_addsi3} (nil))

(call_insn 283 281 284 2 arch/arm/kernel/process.c:360 (parallel [
            (call (mem:SI (symbol_ref:SI ("show_data.clone.0") [flags 0x3] <function_decl 0x1156b000 show_data.clone.0>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 284 283 288 2 arch/arm/kernel/process.c:361 (set (reg:SI 0 r0 [orig:249 <variable>.uregs+16 ] [249])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:158 regs ] [158])
                (const_int 16 [0x10])) [0 <variable>.uregs+16 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:158 regs ] [158])
                (const_int 16 [0x10])) [0 <variable>.uregs+16 S4 A32])
        (nil)))

(insn 288 284 287 2 arch/arm/kernel/process.c:361 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC32") [flags 0x82] <string_cst 0x116774c0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC32") [flags 0x82] <string_cst 0x116774c0>)
        (nil)))

(insn 287 288 289 2 arch/arm/kernel/process.c:361 (set (reg:SI 0 r0)
        (plus:SI (reg:SI 0 r0 [orig:249 <variable>.uregs+16 ] [249])
            (const_int -128 [0xffffffffffffff80]))) 4 {*arm_addsi3} (nil))

(call_insn 289 287 290 2 arch/arm/kernel/process.c:361 (parallel [
            (call (mem:SI (symbol_ref:SI ("show_data.clone.0") [flags 0x3] <function_decl 0x1156b000 show_data.clone.0>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 290 289 294 2 arch/arm/kernel/process.c:362 (set (reg:SI 0 r0 [orig:252 <variable>.uregs+20 ] [252])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:158 regs ] [158])
                (const_int 20 [0x14])) [0 <variable>.uregs+20 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:158 regs ] [158])
                (const_int 20 [0x14])) [0 <variable>.uregs+20 S4 A32])
        (nil)))

(insn 294 290 293 2 arch/arm/kernel/process.c:362 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC33") [flags 0x82] <string_cst 0x116776c0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC33") [flags 0x82] <string_cst 0x116776c0>)
        (nil)))

(insn 293 294 295 2 arch/arm/kernel/process.c:362 (set (reg:SI 0 r0)
        (plus:SI (reg:SI 0 r0 [orig:252 <variable>.uregs+20 ] [252])
            (const_int -128 [0xffffffffffffff80]))) 4 {*arm_addsi3} (nil))

(call_insn 295 293 296 2 arch/arm/kernel/process.c:362 (parallel [
            (call (mem:SI (symbol_ref:SI ("show_data.clone.0") [flags 0x3] <function_decl 0x1156b000 show_data.clone.0>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 296 295 300 2 arch/arm/kernel/process.c:363 (set (reg:SI 0 r0 [orig:255 <variable>.uregs+24 ] [255])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:158 regs ] [158])
                (const_int 24 [0x18])) [0 <variable>.uregs+24 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:158 regs ] [158])
                (const_int 24 [0x18])) [0 <variable>.uregs+24 S4 A32])
        (nil)))

(insn 300 296 299 2 arch/arm/kernel/process.c:363 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC34") [flags 0x82] <string_cst 0x11677860>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC34") [flags 0x82] <string_cst 0x11677860>)
        (nil)))

(insn 299 300 301 2 arch/arm/kernel/process.c:363 (set (reg:SI 0 r0)
        (plus:SI (reg:SI 0 r0 [orig:255 <variable>.uregs+24 ] [255])
            (const_int -128 [0xffffffffffffff80]))) 4 {*arm_addsi3} (nil))

(call_insn 301 299 302 2 arch/arm/kernel/process.c:363 (parallel [
            (call (mem:SI (symbol_ref:SI ("show_data.clone.0") [flags 0x3] <function_decl 0x1156b000 show_data.clone.0>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 302 301 306 2 arch/arm/kernel/process.c:364 (set (reg:SI 0 r0 [orig:258 <variable>.uregs+28 ] [258])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:158 regs ] [158])
                (const_int 28 [0x1c])) [0 <variable>.uregs+28 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:158 regs ] [158])
                (const_int 28 [0x1c])) [0 <variable>.uregs+28 S4 A32])
        (nil)))

(insn 306 302 305 2 arch/arm/kernel/process.c:364 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC35") [flags 0x82] <string_cst 0x11677820>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC35") [flags 0x82] <string_cst 0x11677820>)
        (nil)))

(insn 305 306 307 2 arch/arm/kernel/process.c:364 (set (reg:SI 0 r0)
        (plus:SI (reg:SI 0 r0 [orig:258 <variable>.uregs+28 ] [258])
            (const_int -128 [0xffffffffffffff80]))) 4 {*arm_addsi3} (nil))

(call_insn 307 305 308 2 arch/arm/kernel/process.c:364 (parallel [
            (call (mem:SI (symbol_ref:SI ("show_data.clone.0") [flags 0x3] <function_decl 0x1156b000 show_data.clone.0>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 308 307 312 2 arch/arm/kernel/process.c:365 (set (reg:SI 0 r0 [orig:261 <variable>.uregs+32 ] [261])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:158 regs ] [158])
                (const_int 32 [0x20])) [0 <variable>.uregs+32 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:158 regs ] [158])
                (const_int 32 [0x20])) [0 <variable>.uregs+32 S4 A32])
        (nil)))

(insn 312 308 311 2 arch/arm/kernel/process.c:365 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC36") [flags 0x82] <string_cst 0x11677800>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC36") [flags 0x82] <string_cst 0x11677800>)
        (nil)))

(insn 311 312 313 2 arch/arm/kernel/process.c:365 (set (reg:SI 0 r0)
        (plus:SI (reg:SI 0 r0 [orig:261 <variable>.uregs+32 ] [261])
            (const_int -128 [0xffffffffffffff80]))) 4 {*arm_addsi3} (nil))

(call_insn 313 311 314 2 arch/arm/kernel/process.c:365 (parallel [
            (call (mem:SI (symbol_ref:SI ("show_data.clone.0") [flags 0x3] <function_decl 0x1156b000 show_data.clone.0>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 314 313 318 2 arch/arm/kernel/process.c:366 (set (reg:SI 0 r0 [orig:264 <variable>.uregs+36 ] [264])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:158 regs ] [158])
                (const_int 36 [0x24])) [0 <variable>.uregs+36 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:158 regs ] [158])
                (const_int 36 [0x24])) [0 <variable>.uregs+36 S4 A32])
        (nil)))

(insn 318 314 317 2 arch/arm/kernel/process.c:366 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC37") [flags 0x82] <string_cst 0x116774a0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC37") [flags 0x82] <string_cst 0x116774a0>)
        (nil)))

(insn 317 318 319 2 arch/arm/kernel/process.c:366 (set (reg:SI 0 r0)
        (plus:SI (reg:SI 0 r0 [orig:264 <variable>.uregs+36 ] [264])
            (const_int -128 [0xffffffffffffff80]))) 4 {*arm_addsi3} (nil))

(call_insn 319 317 320 2 arch/arm/kernel/process.c:366 (parallel [
            (call (mem:SI (symbol_ref:SI ("show_data.clone.0") [flags 0x3] <function_decl 0x1156b000 show_data.clone.0>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 320 319 324 2 arch/arm/kernel/process.c:367 (set (reg:SI 0 r0 [orig:267 <variable>.uregs+40 ] [267])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:158 regs ] [158])
                (const_int 40 [0x28])) [0 <variable>.uregs+40 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 324 320 323 2 arch/arm/kernel/process.c:367 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC38") [flags 0x82] <string_cst 0x116779a0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC38") [flags 0x82] <string_cst 0x116779a0>)
        (nil)))

(insn 323 324 325 2 arch/arm/kernel/process.c:367 (set (reg:SI 0 r0)
        (plus:SI (reg:SI 0 r0 [orig:267 <variable>.uregs+40 ] [267])
            (const_int -128 [0xffffffffffffff80]))) 4 {*arm_addsi3} (nil))

(call_insn 325 323 329 2 arch/arm/kernel/process.c:367 (parallel [
            (call (mem:SI (symbol_ref:SI ("show_data.clone.0") [flags 0x3] <function_decl 0x1156b000 show_data.clone.0>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 329 325 359 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/uaccess.h:65 (set (mem/s/j:SI (plus:SI (reg:SI 5 r5 [159])
                (const_int 8 [0x8])) [0 <variable>.addr_limit+0 S4 A64])
        (reg/v:SI 7 r7 [orig:134 fs ] [134])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 359 329 362 NOTE_INSN_DELETED)

(note 362 359 0 NOTE_INSN_DELETED)


;; Function show_regs (show_regs)[0:1356]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs

    a1 (r140,l0) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r138,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a1(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a2(r138,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:42000


Pass 1 for finding allocno costs

    r140: preferred GENERAL_REGS, alternative NO_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS

  a0(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a1(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a2(r138,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:42000

   Insn 25(l0): point = 0
   Insn 24(l0): point = 2
   Insn 23(l0): point = 4
   Insn 22(l0): point = 6
   Insn 20(l0): point = 8
   Insn 21(l0): point = 10
   Insn 14(l0): point = 12
   Insn 19(l0): point = 14
   Insn 35(l0): point = 16
   Insn 34(l0): point = 18
   Insn 8(l0): point = 20
   Insn 7(l0): point = 22
   Insn 2(l0): point = 24
 a0(r135): [5..24]
 a1(r140): [9..12]
 a2(r138): [13..18]
Compressing live ranges: from 27 to 6 - 22%
Ranges after the compression:
 a0(r135): [0..5]
 a1(r140): [1..2]
 a2(r138): [3..4]
+++Allocating 24 bytes for conflict table (uncompressed size 24)
;; a0(r135,l0) conflicts: a1(r140,l0) a2(r138,l0)
;;     total conflict hard regs: 0-2 14
;;     conflict hard regs: 0-2 14
;; a1(r140,l0) conflicts: a0(r135,l0)
;;     total conflict hard regs: 0 2
;;     conflict hard regs: 0 2
;; a2(r138,l0) conflicts: a0(r135,l0)
;;     total conflict hard regs: 0
;;     conflict hard regs: 0

  regions=1, blocks=3, points=6
    allocnos=3, copies=0, conflicts=2, ranges=3

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all: 0r135 1r140 2r138
    modified regnos: 135 138 140
    border:
    Pressure: GENERAL_REGS=5
    Reg 135 of GENERAL_REGS has 4 regs less
    Reg 140 of GENERAL_REGS has 2 regs less
    Reg 138 of GENERAL_REGS has 1 regs less
      Pushing a2(r138,l0)
      Pushing a1(r140,l0)
      Pushing a0(r135,l0)
      Popping a0(r135,l0)  -- assign reg 4
      Popping a1(r140,l0)  -- assign reg 3
      Popping a2(r138,l0)  -- assign reg 3
Disposition:
    0:r135 l0     4    2:r138 l0     3    1:r140 l0     3
New iteration of spill/restore move
+++Costs: overall 2000, reg 2000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=2, live_throughout: 13, dead_or_set: 0, 135
insn=7, live_throughout: 13, 135, dead_or_set: 0
insn=8, live_throughout: 13, 135, dead_or_set: 0, 14
insn=34, live_throughout: 13, 135, dead_or_set: 138
insn=35, live_throughout: 13, 135, dead_or_set: 138
insn=19, live_throughout: 13, 135, 138, dead_or_set: 0
insn=14, live_throughout: 0, 13, 135, dead_or_set: 138, 140
insn=21, live_throughout: 0, 13, 135, 140, dead_or_set: 2
insn=20, live_throughout: 0, 2, 13, 135, dead_or_set: 1, 140
insn=22, live_throughout: 13, 135, dead_or_set: 0, 1, 2, 14
insn=23, live_throughout: 13, dead_or_set: 0, 135
insn=24, live_throughout: 13, dead_or_set: 0, 14
insn=25, live_throughout: 13, 14, dead_or_set: 
changing reg in insn 2
changing reg in insn 23
changing reg in insn 35
changing reg in insn 34
changing reg in insn 35
changing reg in insn 14
changing reg in insn 14
changing reg in insn 21
changing reg in insn 20
Spilling for insn 34.
Using reg 2 for reload 0

Reloads for insn # 34
Reload 0: reload_in (SI) = (reg/f:SI 13 sp)
	GENERAL_REGS, RELOAD_FOR_INPUT (opnum = 1)
	reload_in_reg: (reg/f:SI 13 sp)
	reload_reg_rtx: (reg:SI 2 r2)


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 8.
verify found no changes in insn with uid = 22.
verify found no changes in insn with uid = 24.
verify found no changes in insn with uid = 25.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


show_regs

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 13[sp] 14[lr]
;;  ref usage 	r0={8d,4u} r1={6d,1u} r2={7d,2u} r3={8d,4u} r4={1d,1u} r12={5d} r13={1d,7u} r14={4d,1u} r15={4d} r16={4d} r17={4d} r18={4d} r19={4d} r20={4d} r21={4d} r22={4d} r23={4d} r24={4d} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r81={4d} r82={4d} r83={4d} r84={4d} r85={4d} r86={4d} r87={4d} r88={4d} r89={4d} r90={4d} r91={4d} r92={4d} r93={4d} r94={4d} r95={4d} r96={4d} r97={4d} r98={4d} r99={4d} r100={4d} r101={4d} r102={4d} r103={4d} r104={4d} r105={4d} r106={4d} r107={4d} r108={4d} r109={4d} r110={4d} r111={4d} r112={4d} r113={4d} r114={4d} r115={4d} r116={4d} r117={4d} r118={4d} r119={4d} r120={4d} r121={4d} r122={4d} r123={4d} r124={4d} r125={4d} r126={4d} r127={4d} 
;;    total ref usage 504{484d,20u,0e} in 14{10 regular + 4 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 6 2 NOTE_INSN_FUNCTION_BEG)

(note 6 3 11 2 NOTE_INSN_DELETED)

(note 11 6 12 2 NOTE_INSN_DELETED)

(note 12 11 18 2 NOTE_INSN_DELETED)

(note 18 12 2 2 NOTE_INSN_DELETED)

(insn 2 18 7 2 arch/arm/kernel/process.c:435 (set (reg/v/f:SI 4 r4 [orig:135 regs ] [135])
        (reg:SI 0 r0 [ regs ])) 167 {*arm_movsi_insn} (nil))

(insn 7 2 8 2 arch/arm/kernel/process.c:436 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC7") [flags 0x82] <string_cst 0x1165cfc0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC7") [flags 0x82] <string_cst 0x1165cfc0>)
        (nil)))

(call_insn 8 7 37 2 arch/arm/kernel/process.c:436 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 37 8 34 2 arch/arm/kernel/process.c:437 (set (reg:SI 2 r2)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn 34 37 35 2 arch/arm/kernel/process.c:437 (set (reg:SI 3 r3 [138])
        (and:SI (reg:SI 2 r2)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 35 34 19 2 arch/arm/kernel/process.c:437 (set (reg:SI 3 r3 [138])
        (and:SI (reg:SI 3 r3 [138])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 19 35 14 2 arch/arm/kernel/process.c:437 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC39") [flags 0x82] <string_cst 0x115524b0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC39") [flags 0x82] <string_cst 0x115524b0>)
        (nil)))

(insn 14 19 21 2 arch/arm/kernel/process.c:437 (set (reg/f:SI 3 r3 [orig:140 <variable>.task ] [140])
        (mem/s/f/j:SI (plus:SI (reg:SI 3 r3 [138])
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 21 14 20 2 arch/arm/kernel/process.c:437 (set (reg:SI 2 r2)
        (plus:SI (reg/f:SI 3 r3 [orig:140 <variable>.task ] [140])
            (const_int 756 [0x2f4]))) 4 {*arm_addsi3} (nil))

(insn 20 21 22 2 arch/arm/kernel/process.c:437 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:140 <variable>.task ] [140])
                (const_int 532 [0x214])) [0 <variable>.pid+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn 22 20 23 2 arch/arm/kernel/process.c:437 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 23 22 24 2 arch/arm/kernel/process.c:438 (set (reg:SI 0 r0)
        (reg/v/f:SI 4 r4 [orig:135 regs ] [135])) 167 {*arm_movsi_insn} (nil))

(call_insn 24 23 25 2 arch/arm/kernel/process.c:438 (parallel [
            (call (mem:SI (symbol_ref:SI ("__show_regs") [flags 0x3] <function_decl 0x512d9680 __show_regs>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(call_insn/j 25 24 26 2 arch/arm/kernel/process.c:439 (parallel [
            (call (mem:SI (symbol_ref:SI ("__backtrace") [flags 0x41] <function_decl 0x512d9500 __backtrace>) [0 S4 A32])
                (const_int 0 [0x0]))
            (return)
            (use (const_int 0 [0x0]))
        ]) 258 {*sibcall_insn} (nil)
    (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 26 25 36)

(note 36 26 0 NOTE_INSN_DELETED)

