
;; Function ipi_flush_tlb_all (ipi_flush_tlb_all)[0:746]


Basic block 2:
IN:
Stack adjustment: 0
Reg 0: ignored+0
Variables:
  name: ignored
    offset 0
      (reg:SI 0 r0 [ ignored ])

OUT:
Stack adjustment: 0
Reg 0: ignored+0
Reg 3: __tlb_flag+0
Variables:
  name: ignored
    offset 0
      (reg:SI 0 r0 [ ignored ])
  name: __tlb_flag
    offset 0
      (reg/v:SI 3 r3 [orig:133 __tlb_flag ] [133])


Basic block 3:
IN:
Stack adjustment: 0
Reg 0: ignored+0
Reg 3: __tlb_flag+0
Variables:
  name: ignored
    offset 0
      (reg:SI 0 r0 [ ignored ])
  name: __tlb_flag
    offset 0
      (reg/v:SI 3 r3 [orig:133 __tlb_flag ] [133])

OUT:
Stack adjustment: 0
Reg 0: ignored+0
Reg 3: __tlb_flag+0
Variables:
  name: ignored
    offset 0
      (reg:SI 0 r0 [ ignored ])
  name: __tlb_flag
    offset 0
      (reg/v:SI 3 r3 [orig:133 __tlb_flag ] [133])


Basic block 4:
IN:
Stack adjustment: 0
Reg 0: ignored+0
Reg 3: __tlb_flag+0
Variables:
  name: ignored
    offset 0
      (reg:SI 0 r0 [ ignored ])
  name: __tlb_flag
    offset 0
      (reg/v:SI 3 r3 [orig:133 __tlb_flag ] [133])

OUT:
Stack adjustment: 0
Reg 0: ignored+0
Reg 3: __tlb_flag+0
Variables:
  name: ignored
    offset 0
      (reg:SI 0 r0 [ ignored ])
  name: __tlb_flag
    offset 0
      (reg/v:SI 3 r3 [orig:133 __tlb_flag ] [133])


Basic block 5:
IN:
Stack adjustment: 0
Reg 0: ignored+0
Reg 3: __tlb_flag+0
Variables:
  name: ignored
    offset 0
      (reg:SI 0 r0 [ ignored ])
  name: __tlb_flag
    offset 0
      (reg/v:SI 3 r3 [orig:133 __tlb_flag ] [133])

OUT:
Stack adjustment: 0
Reg 0: ignored+0
Variables:
  name: ignored
    offset 0
      (reg:SI 0 r0 [ ignored ])


Basic block 6:
IN:
Stack adjustment: 0
Reg 0: ignored+0
Reg 3: __tlb_flag+0
Variables:
  name: ignored
    offset 0
      (reg:SI 0 r0 [ ignored ])
  name: __tlb_flag
    offset 0
      (reg/v:SI 3 r3 [orig:133 __tlb_flag ] [133])

OUT:
Stack adjustment: 0
Reg 0: ignored+0
Reg 3: __tlb_flag+0
Variables:
  name: ignored
    offset 0
      (reg:SI 0 r0 [ ignored ])
  name: __tlb_flag
    offset 0
      (reg/v:SI 3 r3 [orig:133 __tlb_flag ] [133])


7 basic blocks, 8 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(13){ }d-1(14){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

Successors:  3 [50.0%]  (fallthru) 4 [50.0%] 
;; lr  out 	 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 13 [sp] 14 [lr]


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 5000, maybe hot.
Predecessors:  2 [50.0%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 2 [r2] 24 [cc]
;; live  in  	 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2]
;; live  kill	 24 [cc]

Successors:  4 [100.0%]  (fallthru)
;; lr  out 	 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 13 [sp] 14 [lr]


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  2 [50.0%]  3 [100.0%]  (fallthru)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  5 [61.0%]  (fallthru) 6 [39.0%] 
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 6100, maybe hot.
Predecessors:  4 [61.0%]  (fallthru)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 3 [r3]
;; live  kill	 24 [cc]

Successors:  6 [100.0%]  (fallthru)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


Basic block 6 , prev 5, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  4 [39.0%]  5 [100.0%]  (fallthru)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

Successors:  EXIT [100.0%] 
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


Basic block 1 , prev 6, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  6 [100.0%] 
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(13){ }u-1(14){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp] 14 [lr]
;; lr  def 	
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	




ipi_flush_tlb_all

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 2[r2] 3[r3] 24[cc]
;;  ref usage 	r0={1d} r1={1d} r2={2d,1u} r3={4d,4u} r13={1d,6u} r14={1d,1u} r24={4d,2u} 
;;    total ref usage 28{14d,14u,0e} in 14{14 regular + 0 call} insns.
(note 1 0 61 NOTE_INSN_DELETED)

(note 61 1 4 2 ( ignored (expr_list:REG_DEP_TRUE (reg:SI 0 r0 [ ignored ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 61 55 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 55 4 3 2 NOTE_INSN_PROLOGUE_END)

(note 3 55 9 2 NOTE_INSN_FUNCTION_BEG)

(note 9 3 6 2 NOTE_INSN_DELETED)

(insn:TI 6 9 7 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:324 (set (reg/f:SI 3 r3 [135])
        (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x10f31f60 cpu_tlb>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x10f31f60 cpu_tlb>)
        (nil)))

(insn:TI 7 6 62 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:324 (set (reg/v:SI 3 r3 [orig:133 __tlb_flag ] [133])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 3 r3 [135])
                (const_int 8 [0x8])) [0 cpu_tlb.tlb_flags+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x10f31f60 cpu_tlb>)
                    (const_int 8 [0x8]))) [0 cpu_tlb.tlb_flags+0 S4 A32])
        (nil)))

(note 62 7 8 2 ( __tlb_flag (expr_list:REG_DEP_TRUE (reg/v:SI 3 r3 [orig:133 __tlb_flag ] [133])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 8 62 10 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:327 (parallel [
            (asm_operands/v ("dsb") ("") 0 []
                 [] 5151227)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn:TI 10 8 11 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:331 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 3 r3 [orig:133 __tlb_flag ] [133])
                (const_int 1 [0x1])
                (const_int 12 [0xc]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn:TI 11 10 12 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:331 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 15)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 13 [sp] 14 [lr]


;; Succ edge  3 [50.0%]  (fallthru)
;; Succ edge  4 [50.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 2 [r2] 24 [cc]
;; live  in  	 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2]
;; live  kill	 24 [cc]

;; Pred edge  2 [50.0%]  (fallthru)
(note 12 11 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn:TI 13 12 14 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:332 (set (reg:SI 2 r2 [137])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 0 [0x0])
        (nil)))

(insn:TI 14 13 15 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:332 (parallel [
            (asm_operands/v ("mcr p15, 0, %0, c8, c7, 0") ("") 0 [
                    (reg:SI 2 r2 [137])
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 5151867)
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg:SI 2 r2 [137])
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))
;; End of basic block 3 -> ( 4)
;; lr  out 	 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 13 [sp] 14 [lr]


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  2 [50.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 15 14 16 4 2 "" [1 uses])

(note 16 15 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 17 16 18 4 NOTE_INSN_DELETED)

(insn:TI 18 17 19 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:337 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 3 r3 [orig:133 __tlb_flag ] [133])
                (const_int 1 [0x1])
                (const_int 20 [0x14]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg/v:SI 3 r3 [orig:133 __tlb_flag ] [133])
        (nil)))

(jump_insn:TI 19 18 20 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:337 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 23)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  5 [61.0%]  (fallthru)
;; Succ edge  6 [39.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 3 [r3]
;; live  kill	 24 [cc]

;; Pred edge  4 [61.0%]  (fallthru)
(note 20 19 21 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn:TI 21 20 63 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:338 (set (reg:SI 3 r3 [139])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 0 [0x0])
        (nil)))

(note 63 21 22 5 ( __tlb_flag (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 22 63 64 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:338 (parallel [
            (asm_operands/v ("mcr p15, 0, %0, c8, c3, 0") ("") 0 [
                    (reg:SI 3 r3 [139])
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 5152635)
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg:SI 3 r3 [139])
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))
;; End of basic block 5 -> ( 6)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  6 [100.0%]  (fallthru)

(note 64 22 23 6 ( __tlb_flag (expr_list:REG_DEP_TRUE (reg/v:SI 3 r3 [orig:133 __tlb_flag ] [133])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 4 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  4 [39.0%] 
;; Pred edge  5 [100.0%]  (fallthru)
(code_label 23 64 24 6 3 "" [1 uses])

(note 24 23 25 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn:TI 25 24 26 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:341 (parallel [
            (asm_operands/v ("dsb") ("") 0 []
                 [] 5153019)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn:TI 26 25 56 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:342 (parallel [
            (asm_operands/v ("isb") ("") 0 []
                 [] 5153147)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(note 56 26 57 6 NOTE_INSN_EPILOGUE_BEG)

(jump_insn:TI 57 56 58 6 arch/arm/kernel/smp_tlb.c:42 (return) 260 {return} (nil))
;; End of basic block 6 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%] 

(barrier 58 57 53)

(note 53 58 54 NOTE_INSN_DELETED)

(note 54 53 0 NOTE_INSN_DELETED)


;; Function ipi_flush_tlb_page (ipi_flush_tlb_page)[0:748]


Basic block 2:
IN:
Stack adjustment: 0
Reg 0: arg+0
Variables:
  name: arg
    offset 0
      (reg:SI 0 r0 [ arg ])

OUT:
Stack adjustment: 0
Reg 1: __tlb_flag+0
Reg 3: uaddr+0
Variables:
  name: uaddr
    offset 0
      (reg/v:SI 3 r3 [orig:137 uaddr ] [137])
  name: __tlb_flag
    offset 0
      (reg/v:SI 1 r1 [orig:133 __tlb_flag ] [133])


Basic block 3:
IN:
Stack adjustment: 0
Reg 1: __tlb_flag+0
Reg 3: uaddr+0
Variables:
  name: uaddr
    offset 0
      (reg/v:SI 3 r3 [orig:137 uaddr ] [137])
  name: __tlb_flag
    offset 0
      (reg/v:SI 1 r1 [orig:133 __tlb_flag ] [133])

OUT:
Stack adjustment: 0
Reg 1: __tlb_flag+0
Reg 3: uaddr+0
Variables:
  name: uaddr
    offset 0
      (reg/v:SI 3 r3 [orig:137 uaddr ] [137])
  name: __tlb_flag
    offset 0
      (reg/v:SI 1 r1 [orig:133 __tlb_flag ] [133])


Basic block 4:
IN:
Stack adjustment: 0
Reg 1: __tlb_flag+0
Reg 3: uaddr+0
Variables:
  name: uaddr
    offset 0
      (reg/v:SI 3 r3 [orig:137 uaddr ] [137])
  name: __tlb_flag
    offset 0
      (reg/v:SI 1 r1 [orig:133 __tlb_flag ] [133])

OUT:
Stack adjustment: 0
Reg 1: __tlb_flag+0
Reg 3: uaddr+0
Variables:
  name: uaddr
    offset 0
      (reg/v:SI 3 r3 [orig:137 uaddr ] [137])
  name: __tlb_flag
    offset 0
      (reg/v:SI 1 r1 [orig:133 __tlb_flag ] [133])


Basic block 5:
IN:
Stack adjustment: 0
Reg 1: __tlb_flag+0
Reg 3: uaddr+0
Variables:
  name: uaddr
    offset 0
      (reg/v:SI 3 r3 [orig:137 uaddr ] [137])
  name: __tlb_flag
    offset 0
      (reg/v:SI 1 r1 [orig:133 __tlb_flag ] [133])

OUT:
Stack adjustment: 0
Reg 1: __tlb_flag+0
Variables:
  name: __tlb_flag
    offset 0
      (reg/v:SI 1 r1 [orig:133 __tlb_flag ] [133])


Basic block 6:
IN:
Stack adjustment: 0
Reg 1: __tlb_flag+0
Reg 3: uaddr+0
Variables:
  name: uaddr
    offset 0
      (reg/v:SI 3 r3 [orig:137 uaddr ] [137])
  name: __tlb_flag
    offset 0
      (reg/v:SI 1 r1 [orig:133 __tlb_flag ] [133])

OUT:
Stack adjustment: 0
Reg 1: __tlb_flag+0
Reg 3: uaddr+0
Variables:
  name: uaddr
    offset 0
      (reg/v:SI 3 r3 [orig:137 uaddr ] [137])
  name: __tlb_flag
    offset 0
      (reg/v:SI 1 r1 [orig:133 __tlb_flag ] [133])


7 basic blocks, 8 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(13){ }d-1(14){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 24 [cc]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 24 [cc]
;; live  kill	

Successors:  3 [50.0%]  (fallthru) 4 [50.0%] 
;; lr  out 	 1 [r1] 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 3 [r3] 13 [sp] 14 [lr]


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 5000, maybe hot.
Predecessors:  2 [50.0%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 1 [r1] 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	 24 [cc]

Successors:  4 [100.0%]  (fallthru)
;; lr  out 	 1 [r1] 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 3 [r3] 13 [sp] 14 [lr]


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  2 [50.0%]  3 [100.0%]  (fallthru)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 1 [r1] 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  5 [61.0%]  (fallthru) 6 [39.0%] 
;; lr  out 	 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 13 [sp] 14 [lr]


Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 6100, maybe hot.
Predecessors:  4 [61.0%]  (fallthru)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3]
;; live  kill	 24 [cc]

Successors:  6 [100.0%]  (fallthru)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


Basic block 6 , prev 5, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  4 [39.0%]  5 [100.0%]  (fallthru)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

Successors:  EXIT [100.0%] 
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


Basic block 1 , prev 6, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  6 [100.0%] 
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(13){ }u-1(14){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp] 14 [lr]
;; lr  def 	
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	




ipi_flush_tlb_page

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 12[ip] 13[sp] 24[cc]
;;  ref usage 	r0={4d,5u} r1={2d,2u} r2={10d,10u,1d} r3={7d,7u} r12={2d,3u,1d} r13={1d,7u} r14={1d,1u} r24={5d,3u} 
;;    total ref usage 72{32d,38u,2e} in 31{31 regular + 0 call} insns.
(note 1 0 72 NOTE_INSN_DELETED)

(note 72 1 4 2 ( arg (expr_list:REG_DEP_TRUE (reg:SI 0 r0 [ arg ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 24 [cc]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 72 68 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 68 4 3 2 NOTE_INSN_PROLOGUE_END)

(note 3 68 11 2 NOTE_INSN_FUNCTION_BEG)

(note 11 3 14 2 NOTE_INSN_DELETED)

(note 14 11 21 2 NOTE_INSN_DELETED)

(note 21 14 26 2 NOTE_INSN_DELETED)

(note 26 21 32 2 NOTE_INSN_DELETED)

(note 32 26 7 2 NOTE_INSN_DELETED)

(insn:TI 7 32 63 2 arch/arm/kernel/smp_tlb.c:55 (set (reg/f:SI 12 ip [orig:139 D.13370 ] [139])
        (mem/s/f/j:SI (reg/v/f:SI 0 r0 [orig:140 arg ] [140]) [0 <variable>.ta_vma+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn:TI 63 7 13 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:388 (set (reg/f:SI 2 r2 [141])
        (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x10f31f60 cpu_tlb>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x10f31f60 cpu_tlb>)
        (nil)))

(insn:TI 13 63 9 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:390 (set (reg:SI 3 r3 [orig:146 <variable>.ta_start ] [146])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 0 r0 [orig:140 arg ] [140])
                (const_int 4 [0x4])) [0 <variable>.ta_start+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 0 r0 [orig:140 arg ] [140])
        (nil)))

(insn:TI 9 13 73 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:388 (set (reg/v:SI 1 r1 [orig:133 __tlb_flag ] [133])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 2 r2 [141])
                (const_int 8 [0x8])) [0 cpu_tlb.tlb_flags+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 2 r2 [141])
        (expr_list:REG_EQUAL (mem/s/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x10f31f60 cpu_tlb>)
                        (const_int 8 [0x8]))) [0 cpu_tlb.tlb_flags+0 S4 A32])
            (nil))))

(note 73 9 58 2 ( __tlb_flag (expr_list:REG_DEP_TRUE (reg/v:SI 1 r1 [orig:133 __tlb_flag ] [133])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn 58 73 10 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:390 (set (reg:SI 3 r3 [145])
        (and:SI (reg:SI 3 r3 [orig:146 <variable>.ta_start ] [146])
            (const_int -4081 [0xfffffffffffff00f]))) 67 {*arm_andsi3_insn} (nil))

(insn:TI 10 58 59 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:390 (set (reg/f:SI 2 r2 [orig:142 <variable>.vm_mm ] [142])
        (mem/s/f/j:SI (reg/f:SI 12 ip [orig:139 D.13370 ] [139]) [0 <variable>.vm_mm+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/f/j:SI (reg/f:SI 12 ip [orig:139 D.13370 ] [139]) [0 <variable>.vm_mm+0 S4 A32])
        (nil)))

(insn 59 10 12 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:390 (set (reg:SI 3 r3 [145])
        (and:SI (reg:SI 3 r3 [145])
            (const_int -16 [0xfffffffffffffff0]))) 67 {*arm_andsi3_insn} (nil))

(insn:TI 12 59 16 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:390 (set (reg:SI 2 r2 [143])
        (zero_extend:SI (mem/s/j:QI (plus:SI (reg/f:SI 2 r2 [orig:142 <variable>.vm_mm ] [142])
                    (const_int 352 [0x160])) [0 <variable>.context.id+0 S1 A32]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn:TI 16 12 74 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:390 (set (reg/v:SI 3 r3 [orig:137 uaddr ] [137])
        (ior:SI (reg:SI 2 r2 [143])
            (reg:SI 3 r3 [145]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 2 r2 [143])
        (nil)))

(note 74 16 17 2 ( uaddr (expr_list:REG_DEP_TRUE (reg/v:SI 3 r3 [orig:137 uaddr ] [137])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 17 74 65 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:393 (parallel [
            (asm_operands/v ("dsb") ("") 0 []
                 [] 5159675)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn:TI 65 17 75 2 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 0 r0)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(note 75 65 60 2 ( arg (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 60 75 19 2 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 2 r2 [150])
        (and:SI (reg:SI 0 r0)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 19 60 61 2 include/asm-generic/bitops/non-atomic.h:105 (set (reg/f:SI 0 r0 [orig:149 <variable>.vm_mm ] [149])
        (mem/s/f/j:SI (reg/f:SI 12 ip [orig:139 D.13370 ] [139]) [0 <variable>.vm_mm+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 12 ip [orig:139 D.13370 ] [139])
        (nil)))

(insn:TI 61 19 20 2 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 2 r2 [150])
        (and:SI (reg:SI 2 r2 [150])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn:TI 20 61 23 2 include/asm-generic/bitops/non-atomic.h:105 (set (reg/f:SI 0 r0 [148])
        (plus:SI (reg/f:SI 0 r0 [orig:149 <variable>.vm_mm ] [149])
            (const_int 348 [0x15c]))) 4 {*arm_addsi3} (nil))

(insn:TI 23 20 66 2 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 2 r2 [orig:153 <variable>.cpu ] [153])
        (mem/s/j:SI (plus:SI (reg:SI 2 r2 [150])
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn:TI 66 23 25 2 include/asm-generic/bitops/non-atomic.h:105 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2 r2 [orig:153 <variable>.cpu ] [153])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn 25 66 67 2 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 12 ip [155])
        (plus:SI (reg:SI 2 r2 [orig:153 <variable>.cpu ] [153])
            (const_int 31 [0x1f]))) 4 {*arm_addsi3} (nil))

(insn:TI 67 25 33 2 include/asm-generic/bitops/non-atomic.h:105 (cond_exec (lt (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 2 r2 [orig:154 <variable>.cpu ] [154])
            (reg:SI 12 ip [155]))) 2345 {neon_vornv2di+78} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_DEAD (reg:SI 12 ip [155])
            (nil))))

(insn 33 67 28 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:408 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 1 r1 [orig:133 __tlb_flag ] [133])
                (const_int 1 [0x1])
                (const_int 4 [0x4]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(insn:TI 28 33 31 2 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 2 r2 [156])
        (ashiftrt:SI (reg:SI 2 r2 [orig:154 <variable>.cpu ] [154])
            (const_int 5 [0x5]))) 117 {*arm_shiftsi3} (expr_list:REG_EQUAL (div:SI (reg:SI 2 r2 [orig:153 <variable>.cpu ] [153])
            (const_int 32 [0x20]))
        (nil)))

(insn:TI 31 28 34 2 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 2 r2 [orig:135 D.13510 ] [135])
        (mem/v:SI (plus:SI (mult:SI (reg:SI 2 r2 [156])
                    (const_int 4 [0x4]))
                (reg/f:SI 0 r0 [148])) [0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 0 r0 [148])
        (expr_list:REG_UNUSED (reg:SI 2 r2 [orig:135 D.13510 ] [135])
            (nil))))

(jump_insn 34 31 35 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:408 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 37)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 1 [r1] 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 3 [r3] 13 [sp] 14 [lr]


;; Succ edge  3 [50.0%]  (fallthru)
;; Succ edge  4 [50.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 1 [r1] 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	 24 [cc]

;; Pred edge  2 [50.0%]  (fallthru)
(note 35 34 36 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn:TI 36 35 37 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:409 (parallel [
            (asm_operands/v ("mcr p15, 0, %0, c8, c7, 1") ("") 0 [
                    (reg/v:SI 3 r3 [orig:137 uaddr ] [137])
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 5161723)
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))
;; End of basic block 3 -> ( 4)
;; lr  out 	 1 [r1] 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 3 [r3] 13 [sp] 14 [lr]


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 1 [r1] 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  2 [50.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 37 36 38 4 9 "" [1 uses])

(note 38 37 39 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 39 38 40 4 NOTE_INSN_DELETED)

(insn:TI 40 39 41 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:414 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 1 r1 [orig:133 __tlb_flag ] [133])
                (const_int 1 [0x1])
                (const_int 19 [0x13]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg/v:SI 1 r1 [orig:133 __tlb_flag ] [133])
        (nil)))

(jump_insn:TI 41 40 42 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:414 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 46)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 13 [sp] 14 [lr]


;; Succ edge  5 [61.0%]  (fallthru)
;; Succ edge  6 [39.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3]
;; live  kill	 24 [cc]

;; Pred edge  4 [61.0%]  (fallthru)
(note 42 41 43 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 43 42 56 5 NOTE_INSN_DELETED)

(insn:TI 56 43 76 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:416 (set (reg:SI 3 r3 [160])
        (and:SI (reg/v:SI 3 r3 [orig:137 uaddr ] [137])
            (const_int -4081 [0xfffffffffffff00f]))) 67 {*arm_andsi3_insn} (nil))

(note 76 56 57 5 ( uaddr (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 57 76 45 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:416 (set (reg:SI 3 r3 [160])
        (and:SI (reg:SI 3 r3 [160])
            (const_int -16 [0xfffffffffffffff0]))) 67 {*arm_andsi3_insn} (nil))

(insn:TI 45 57 77 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:416 (parallel [
            (asm_operands/v ("mcr p15, 0, %0, c8, c3, 3") ("") 0 [
                    (reg:SI 3 r3 [160])
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 5162619)
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg:SI 3 r3 [160])
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))
;; End of basic block 5 -> ( 6)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  6 [100.0%]  (fallthru)

(note 77 45 46 6 ( uaddr (expr_list:REG_DEP_TRUE (reg/v:SI 3 r3 [orig:137 uaddr ] [137])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 4 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  4 [39.0%] 
;; Pred edge  5 [100.0%]  (fallthru)
(code_label 46 77 47 6 10 "" [1 uses])

(note 47 46 48 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn:TI 48 47 69 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:422 (parallel [
            (asm_operands/v ("dsb") ("") 0 []
                 [] 5163387)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(note 69 48 70 6 NOTE_INSN_EPILOGUE_BEG)

(jump_insn:TI 70 69 71 6 arch/arm/kernel/smp_tlb.c:56 (return) 260 {return} (nil))
;; End of basic block 6 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%] 

(barrier 71 70 62)

(note 62 71 64 NOTE_INSN_DELETED)

(note 64 62 0 NOTE_INSN_DELETED)


;; Function ipi_flush_tlb_kernel_page (ipi_flush_tlb_kernel_page)[0:749]


Basic block 2:
IN:
Stack adjustment: 0
Reg 0: arg+0
Variables:
  name: arg
    offset 0
      (reg:SI 0 r0 [ arg ])

OUT:
Stack adjustment: 0
Reg 0: arg+0
Reg 2: __tlb_flag+0
Reg 3: kaddr+0
Variables:
  name: kaddr
    offset 0
      (reg/v:SI 3 r3 [orig:134 kaddr ] [134])
  name: arg
    offset 0
      (reg:SI 0 r0 [ arg ])
  name: __tlb_flag
    offset 0
      (reg/v:SI 2 r2 [orig:133 __tlb_flag ] [133])


Basic block 3:
IN:
Stack adjustment: 0
Reg 0: arg+0
Reg 2: __tlb_flag+0
Reg 3: kaddr+0
Variables:
  name: kaddr
    offset 0
      (reg/v:SI 3 r3 [orig:134 kaddr ] [134])
  name: arg
    offset 0
      (reg:SI 0 r0 [ arg ])
  name: __tlb_flag
    offset 0
      (reg/v:SI 2 r2 [orig:133 __tlb_flag ] [133])

OUT:
Stack adjustment: 0
Reg 0: arg+0
Reg 2: __tlb_flag+0
Reg 3: kaddr+0
Variables:
  name: kaddr
    offset 0
      (reg/v:SI 3 r3 [orig:134 kaddr ] [134])
  name: arg
    offset 0
      (reg:SI 0 r0 [ arg ])
  name: __tlb_flag
    offset 0
      (reg/v:SI 2 r2 [orig:133 __tlb_flag ] [133])


Basic block 4:
IN:
Stack adjustment: 0
Reg 0: arg+0
Reg 2: __tlb_flag+0
Reg 3: kaddr+0
Variables:
  name: kaddr
    offset 0
      (reg/v:SI 3 r3 [orig:134 kaddr ] [134])
  name: arg
    offset 0
      (reg:SI 0 r0 [ arg ])
  name: __tlb_flag
    offset 0
      (reg/v:SI 2 r2 [orig:133 __tlb_flag ] [133])

OUT:
Stack adjustment: 0
Reg 0: arg+0
Reg 2: __tlb_flag+0
Reg 3: kaddr+0
Variables:
  name: kaddr
    offset 0
      (reg/v:SI 3 r3 [orig:134 kaddr ] [134])
  name: arg
    offset 0
      (reg:SI 0 r0 [ arg ])
  name: __tlb_flag
    offset 0
      (reg/v:SI 2 r2 [orig:133 __tlb_flag ] [133])


Basic block 5:
IN:
Stack adjustment: 0
Reg 0: arg+0
Reg 2: __tlb_flag+0
Reg 3: kaddr+0
Variables:
  name: kaddr
    offset 0
      (reg/v:SI 3 r3 [orig:134 kaddr ] [134])
  name: arg
    offset 0
      (reg:SI 0 r0 [ arg ])
  name: __tlb_flag
    offset 0
      (reg/v:SI 2 r2 [orig:133 __tlb_flag ] [133])

OUT:
Stack adjustment: 0
Reg 0: arg+0
Reg 2: __tlb_flag+0
Reg 3: kaddr+0
Variables:
  name: kaddr
    offset 0
      (reg/v:SI 3 r3 [orig:134 kaddr ] [134])
  name: arg
    offset 0
      (reg:SI 0 r0 [ arg ])
  name: __tlb_flag
    offset 0
      (reg/v:SI 2 r2 [orig:133 __tlb_flag ] [133])


Basic block 6:
IN:
Stack adjustment: 0
Reg 0: arg+0
Reg 2: __tlb_flag+0
Reg 3: kaddr+0
Variables:
  name: kaddr
    offset 0
      (reg/v:SI 3 r3 [orig:134 kaddr ] [134])
  name: arg
    offset 0
      (reg:SI 0 r0 [ arg ])
  name: __tlb_flag
    offset 0
      (reg/v:SI 2 r2 [orig:133 __tlb_flag ] [133])

OUT:
Stack adjustment: 0
Reg 0: arg+0
Reg 2: __tlb_flag+0
Reg 3: kaddr+0
Variables:
  name: kaddr
    offset 0
      (reg/v:SI 3 r3 [orig:134 kaddr ] [134])
  name: arg
    offset 0
      (reg:SI 0 r0 [ arg ])
  name: __tlb_flag
    offset 0
      (reg/v:SI 2 r2 [orig:133 __tlb_flag ] [133])


7 basic blocks, 8 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(13){ }d-1(14){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 24 [cc]
;; live  kill	

Successors:  3 [50.0%]  (fallthru) 4 [50.0%] 
;; lr  out 	 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 2 [r2] 3 [r3] 13 [sp] 14 [lr]


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 5000, maybe hot.
Predecessors:  2 [50.0%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	 24 [cc]

Successors:  4 [100.0%]  (fallthru)
;; lr  out 	 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 2 [r2] 3 [r3] 13 [sp] 14 [lr]


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  2 [50.0%]  3 [100.0%]  (fallthru)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  5 [61.0%]  (fallthru) 6 [39.0%] 
;; lr  out 	 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 13 [sp] 14 [lr]


Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 6100, maybe hot.
Predecessors:  4 [61.0%]  (fallthru)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	 24 [cc]

Successors:  6 [100.0%]  (fallthru)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


Basic block 6 , prev 5, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  4 [39.0%]  5 [100.0%]  (fallthru)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

Successors:  EXIT [100.0%] 
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


Basic block 1 , prev 6, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  6 [100.0%] 
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(13){ }u-1(14){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp] 14 [lr]
;; lr  def 	
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	




ipi_flush_tlb_kernel_page

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 2[r2] 3[r3] 24[cc]
;;  ref usage 	r0={1d,1u} r1={1d} r2={3d,3u} r3={4d,4u} r13={1d,6u} r14={1d,1u} r24={4d,2u} 
;;    total ref usage 32{15d,17u,0e} in 15{15 regular + 0 call} insns.
(note 1 0 44 NOTE_INSN_DELETED)

(note 44 1 4 2 ( arg (expr_list:REG_DEP_TRUE (reg:SI 0 r0 [ arg ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 44 40 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 40 4 2 2 NOTE_INSN_PROLOGUE_END)

(note 2 40 3 2 NOTE_INSN_DELETED)

(note 3 2 9 2 NOTE_INSN_FUNCTION_BEG)

(note 9 3 12 2 NOTE_INSN_DELETED)

(note 12 9 8 2 NOTE_INSN_DELETED)

(insn:TI 8 12 38 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:430 (set (reg:SI 3 r3 [orig:137 <variable>.ta_start ] [137])
        (mem/s/j:SI (plus:SI (reg:SI 0 r0 [ arg ])
                (const_int 4 [0x4])) [0 <variable>.ta_start+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ arg ])
        (nil)))

(insn:TI 38 8 35 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:428 (set (reg/f:SI 2 r2 [136])
        (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x10f31f60 cpu_tlb>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x10f31f60 cpu_tlb>)
        (nil)))

(insn:TI 35 38 45 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:430 (set (reg/v:SI 3 r3 [orig:134 kaddr ] [134])
        (and:SI (reg:SI 3 r3 [orig:137 <variable>.ta_start ] [137])
            (const_int -4081 [0xfffffffffffff00f]))) 67 {*arm_andsi3_insn} (nil))

(note 45 35 36 2 ( kaddr (expr_list:REG_DEP_TRUE (reg/v:SI 3 r3 [orig:134 kaddr ] [134])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 36 45 7 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:430 (set (reg/v:SI 3 r3 [orig:134 kaddr ] [134])
        (and:SI (reg/v:SI 3 r3 [orig:134 kaddr ] [134])
            (const_int -16 [0xfffffffffffffff0]))) 67 {*arm_andsi3_insn} (nil))

(insn:TI 7 36 46 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:428 (set (reg/v:SI 2 r2 [orig:133 __tlb_flag ] [133])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 2 r2 [136])
                (const_int 8 [0x8])) [0 cpu_tlb.tlb_flags+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x10f31f60 cpu_tlb>)
                    (const_int 8 [0x8]))) [0 cpu_tlb.tlb_flags+0 S4 A32])
        (nil)))

(note 46 7 11 2 ( __tlb_flag (expr_list:REG_DEP_TRUE (reg/v:SI 2 r2 [orig:133 __tlb_flag ] [133])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 11 46 13 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:433 (parallel [
            (asm_operands/v ("dsb") ("") 0 []
                 [] 5164795)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn:TI 13 11 14 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:446 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 2 r2 [orig:133 __tlb_flag ] [133])
                (const_int 1 [0x1])
                (const_int 4 [0x4]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn:TI 14 13 15 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:446 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 17)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 2 [r2] 3 [r3] 13 [sp] 14 [lr]


;; Succ edge  3 [50.0%]  (fallthru)
;; Succ edge  4 [50.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	 24 [cc]

;; Pred edge  2 [50.0%]  (fallthru)
(note 15 14 16 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn:TI 16 15 17 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:447 (parallel [
            (asm_operands/v ("mcr p15, 0, %0, c8, c7, 1") ("") 0 [
                    (reg/v:SI 3 r3 [orig:134 kaddr ] [134])
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 5166587)
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))
;; End of basic block 3 -> ( 4)
;; lr  out 	 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 2 [r2] 3 [r3] 13 [sp] 14 [lr]


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  2 [50.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 17 16 18 4 15 "" [1 uses])

(note 18 17 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 19 18 20 4 NOTE_INSN_DELETED)

(insn:TI 20 19 21 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:452 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 2 r2 [orig:133 __tlb_flag ] [133])
                (const_int 1 [0x1])
                (const_int 19 [0x13]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg/v:SI 2 r2 [orig:133 __tlb_flag ] [133])
        (nil)))

(jump_insn:TI 21 20 22 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:452 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 24)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 13 [sp] 14 [lr]


;; Succ edge  5 [61.0%]  (fallthru)
;; Succ edge  6 [39.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	 24 [cc]

;; Pred edge  4 [61.0%]  (fallthru)
(note 22 21 23 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn:TI 23 22 24 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:453 (parallel [
            (asm_operands/v ("mcr p15, 0, %0, c8, c3, 1") ("") 0 [
                    (reg/v:SI 3 r3 [orig:134 kaddr ] [134])
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 5167355)
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/v:SI 3 r3 [orig:134 kaddr ] [134])
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))
;; End of basic block 5 -> ( 6)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 4 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  4 [39.0%] 
;; Pred edge  5 [100.0%]  (fallthru)
(code_label 24 23 25 6 16 "" [1 uses])

(note 25 24 26 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn:TI 26 25 27 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:456 (parallel [
            (asm_operands/v ("dsb") ("") 0 []
                 [] 5167739)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn:TI 27 26 41 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:457 (parallel [
            (asm_operands/v ("isb") ("") 0 []
                 [] 5167867)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(note 41 27 42 6 NOTE_INSN_EPILOGUE_BEG)

(jump_insn:TI 42 41 43 6 arch/arm/kernel/smp_tlb.c:63 (return) 260 {return} (nil))
;; End of basic block 6 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%] 

(barrier 43 42 37)

(note 37 43 39 NOTE_INSN_DELETED)

(note 39 37 0 NOTE_INSN_DELETED)


;; Function ipi_flush_tlb_range (ipi_flush_tlb_range)[0:750]


Basic block 2:
IN:
Stack adjustment: 0
Reg 0: arg+0
Variables:
  name: arg
    offset 0
      (reg:SI 0 r0 [ arg ])

OUT:
Stack adjustment: 8


3 basic blocks, 2 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(13){ }d-1(14){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]


Basic block 2 , prev 0, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp]
;; live  kill	 14 [lr]

Successors:  EXIT [100.0%] 
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]


Basic block 1 , prev 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  2 [100.0%] 
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(4){ }u-1(13){ }u-1(14){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp] 14 [lr]
;; lr  def 	
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	




ipi_flush_tlb_range

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;;  exit block uses 	 4 [r4] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 13[sp] 14[lr]
;;  ref usage 	r0={3d,4u} r1={3d,1u} r2={3d,1u} r3={4d,2u} r4={1d,2u} r12={1d} r13={2d,4u} r14={2d,2u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 146{130d,16u,0e} in 8{7 regular + 1 call} insns.
(note 1 0 28 NOTE_INSN_DELETED)

(note 28 1 4 2 ( arg (expr_list:REG_DEP_TRUE (reg:SI 0 r0 [ arg ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 28 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 8 2 NOTE_INSN_FUNCTION_BEG)

(note 8 3 2 2 NOTE_INSN_DELETED)

(insn:TI 2 8 23 2 arch/arm/kernel/smp_tlb.c:66 (set (reg/v/f:SI 3 r3 [orig:134 arg ] [134])
        (reg:SI 0 r0 [ arg ])) 167 {*arm_movsi_insn} (nil))

(insn/f:TI 23 2 24 2 arch/arm/kernel/smp_tlb.c:66 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 4 r4)
                    ] 2))
            (use (reg:SI 14 lr))
        ]) 327 {*push_multi} (expr_list:REG_DEAD (reg:SI 14 lr)
        (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                    (set/f (reg/f:SI 13 sp)
                        (plus:SI (reg/f:SI 13 sp)
                            (const_int -8 [0xfffffffffffffff8])))
                    (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                        (reg:SI 4 r4))
                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                (const_int 4 [0x4])) [0 S4 A32])
                        (reg:SI 14 lr))
                ])
            (nil))))

(note 24 23 11 2 NOTE_INSN_PROLOGUE_END)

(insn:TI 11 24 10 2 arch/arm/kernel/smp_tlb.c:69 (set (reg:SI 2 r2)
        (mem/s/f/j:SI (reg/f:SI 0 r0 [orig:134 arg ] [134]) [0 <variable>.ta_vma+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn:TI 10 11 9 2 arch/arm/kernel/smp_tlb.c:69 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 3 r3 [orig:134 arg ] [134])
                (const_int 8 [0x8])) [0 <variable>.ta_end+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 3 r3 [orig:134 arg ] [134])
        (nil)))

(insn:TI 9 10 29 2 arch/arm/kernel/smp_tlb.c:69 (set (reg:SI 0 r0)
        (mem/s/j:SI (plus:SI (reg/f:SI 0 r0 [orig:134 arg ] [134])
                (const_int 4 [0x4])) [0 <variable>.ta_start+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(note 29 9 21 2 ( arg (expr_list:REG_DEP_TRUE (reg/v/f:SI 3 r3 [orig:134 arg ] [134])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 21 29 30 2 arch/arm/kernel/smp_tlb.c:69 (set (reg/f:SI 3 r3 [135])
        (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x10f31f60 cpu_tlb>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x10f31f60 cpu_tlb>)
        (nil)))

(note 30 21 12 2 ( arg (nil)) NOTE_INSN_VAR_LOCATION)

(call_insn:TI 12 30 25 2 arch/arm/kernel/smp_tlb.c:69 (parallel [
            (call (mem:SI (mem/s/f/j/c:SI (reg/f:SI 3 r3 [135]) [0 cpu_tlb.flush_user_range+0 S4 A32]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 246 {*call_mem} (expr_list:REG_DEAD (reg/f:SI 3 r3 [135])
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_DEAD (reg:SI 0 r0)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(note 25 12 26 2 NOTE_INSN_EPILOGUE_BEG)

(jump_insn 26 25 27 2 arch/arm/kernel/smp_tlb.c:70 (return) 260 {return} (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  EXIT [100.0%] 

(barrier 27 26 20)

(note 20 27 22 NOTE_INSN_DELETED)

(note 22 20 0 NOTE_INSN_DELETED)


;; Function ipi_flush_tlb_kernel_range (ipi_flush_tlb_kernel_range)[0:751]


Basic block 2:
IN:
Stack adjustment: 0
Reg 0: arg+0
Variables:
  name: arg
    offset 0
      (reg:SI 0 r0 [ arg ])

OUT:
Stack adjustment: 8


3 basic blocks, 2 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(13){ }d-1(14){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]


Basic block 2 , prev 0, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 3 [r3] 13 [sp]
;; live  kill	 14 [lr]

Successors:  EXIT [100.0%] 
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]


Basic block 1 , prev 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  2 [100.0%] 
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(4){ }u-1(13){ }u-1(14){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp] 14 [lr]
;; lr  def 	
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	




ipi_flush_tlb_kernel_range

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;;  exit block uses 	 4 [r4] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 3[r3] 4[r4] 13[sp] 14[lr]
;;  ref usage 	r0={3d,3u} r1={3d,1u} r2={2d} r3={3d,1u} r4={1d,2u} r12={1d} r13={2d,4u} r14={2d,2u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 141{128d,13u,0e} in 6{5 regular + 1 call} insns.
(note 1 0 27 NOTE_INSN_DELETED)

(note 27 1 4 2 ( arg (expr_list:REG_DEP_TRUE (reg:SI 0 r0 [ arg ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 3 [r3] 13 [sp]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 27 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 8 2 NOTE_INSN_FUNCTION_BEG)

(note 8 3 22 2 NOTE_INSN_DELETED)

(insn/f:TI 22 8 23 2 arch/arm/kernel/smp_tlb.c:73 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 4 r4)
                    ] 2))
            (use (reg:SI 14 lr))
        ]) 327 {*push_multi} (expr_list:REG_DEAD (reg:SI 14 lr)
        (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                    (set/f (reg/f:SI 13 sp)
                        (plus:SI (reg/f:SI 13 sp)
                            (const_int -8 [0xfffffffffffffff8])))
                    (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                        (reg:SI 4 r4))
                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                (const_int 4 [0x4])) [0 S4 A32])
                        (reg:SI 14 lr))
                ])
            (nil))))

(note 23 22 20 2 NOTE_INSN_PROLOGUE_END)

(insn:TI 20 23 10 2 arch/arm/kernel/smp_tlb.c:76 (set (reg/f:SI 3 r3 [135])
        (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x10f31f60 cpu_tlb>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x10f31f60 cpu_tlb>)
        (nil)))

(insn:TI 10 20 9 2 arch/arm/kernel/smp_tlb.c:76 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 0 r0 [orig:134 arg ] [134])
                (const_int 8 [0x8])) [0 <variable>.ta_end+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn:TI 9 10 28 2 arch/arm/kernel/smp_tlb.c:76 (set (reg:SI 0 r0)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 0 r0 [orig:134 arg ] [134])
                (const_int 4 [0x4])) [0 <variable>.ta_start+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(note 28 9 11 2 ( arg (nil)) NOTE_INSN_VAR_LOCATION)

(call_insn:TI 11 28 24 2 arch/arm/kernel/smp_tlb.c:76 (parallel [
            (call (mem:SI (mem/s/f/j/c:SI (plus:SI (reg/f:SI 3 r3 [135])
                            (const_int 4 [0x4])) [0 cpu_tlb.flush_kern_range+0 S4 A32]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 246 {*call_mem} (expr_list:REG_DEAD (reg/f:SI 3 r3 [135])
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_DEAD (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(note 24 11 25 2 NOTE_INSN_EPILOGUE_BEG)

(jump_insn 25 24 26 2 arch/arm/kernel/smp_tlb.c:77 (return) 260 {return} (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  EXIT [100.0%] 

(barrier 26 25 19)

(note 19 26 21 NOTE_INSN_DELETED)

(note 21 19 0 NOTE_INSN_DELETED)


;; Function flush_tlb_kernel_range (flush_tlb_kernel_range)[0:757]


Basic block 2:
IN:
Stack adjustment: 0
Reg 0: start+0
Reg 1: end+0
Variables:
  name: end
    offset 0
      (reg:SI 1 r1 [ end ])
  name: start
    offset 0
      (reg:SI 0 r0 [ start ])

OUT:
Stack adjustment: 24
Reg 0: start+0
Reg 1: end+0
Reg 3: end+0
Reg 12: start+0
Variables:
  name: end
    offset 0
      (reg/v:SI 3 r3 [orig:135 end ] [135])
      (reg:SI 1 r1 [ end ])
  name: start
    offset 0
      (reg/v:SI 12 ip [orig:134 start ] [134])
      (reg:SI 0 r0 [ start ])


Basic block 3:
IN:
Stack adjustment: 24
Reg 0: start+0
Reg 1: end+0
Reg 3: end+0
Reg 12: start+0
Variables:
  name: end
    offset 0
      (reg/v:SI 3 r3 [orig:135 end ] [135])
      (reg:SI 1 r1 [ end ])
  name: start
    offset 0
      (reg/v:SI 12 ip [orig:134 start ] [134])
      (reg:SI 0 r0 [ start ])

OUT:
Stack adjustment: 24
Reg 0: start+0
Reg 1: end+0
Reg 3: end+0
Reg 12: start+0
Variables:
  name: end
    offset 0
      (reg/v:SI 3 r3 [orig:135 end ] [135])
      (reg:SI 1 r1 [ end ])
  name: start
    offset 0
      (reg/v:SI 12 ip [orig:134 start ] [134])
      (reg:SI 0 r0 [ start ])


Basic block 4:
IN:
Stack adjustment: 24
Reg 0: start+0
Reg 1: end+0
Reg 3: end+0
Reg 12: start+0
Variables:
  name: end
    offset 0
      (reg/v:SI 3 r3 [orig:135 end ] [135])
      (reg:SI 1 r1 [ end ])
  name: start
    offset 0
      (reg/v:SI 12 ip [orig:134 start ] [134])
      (reg:SI 0 r0 [ start ])

OUT:
Stack adjustment: 24


Basic block 5:
IN:
Stack adjustment: 24
Reg 0: start+0
Reg 1: end+0
Reg 3: end+0
Reg 12: start+0
Variables:
  name: end
    offset 0
      (reg/v:SI 3 r3 [orig:135 end ] [135])
      (reg:SI 1 r1 [ end ])
  name: start
    offset 0
      (reg/v:SI 12 ip [orig:134 start ] [134])
      (reg:SI 0 r0 [ start ])

OUT:
Stack adjustment: 24


Basic block 6:
IN:
Stack adjustment: 24

OUT:
Stack adjustment: 24


7 basic blocks, 8 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(13){ }d-1(14){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; lr  def 	 2 [r2] 3 [r3] 12 [ip] 13 [sp] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 12 [ip] 13 [sp] 24 [cc]
;; live  kill	

Successors:  5 [50.0%]  3 [50.0%]  (fallthru)
;; lr  out 	 3 [r3] 4 [r4] 12 [ip] 13 [sp]
;; live  out 	 3 [r3] 4 [r4] 12 [ip] 13 [sp]


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 5000, maybe hot.
Predecessors:  2 [50.0%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 12 [ip] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 2 [r2] 24 [cc]
;; live  in  	 3 [r3] 4 [r4] 12 [ip] 13 [sp]
;; live  gen 	 2 [r2] 24 [cc]
;; live  kill	 24 [cc]

Successors:  4 [78.0%]  (fallthru) 5 [22.0%] 
;; lr  out 	 3 [r3] 4 [r4] 12 [ip] 13 [sp]
;; live  out 	 3 [r3] 4 [r4] 12 [ip] 13 [sp]


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 3900, maybe hot.
Predecessors:  3 [78.0%]  (fallthru)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 12 [ip] 13 [sp]
;; lr  use 	 3 [r3] 12 [ip] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 3 [r3] 4 [r4] 12 [ip] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	 14 [lr]

Successors:  6 [100.0%] 
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]


Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 6100, maybe hot.
Predecessors:  3 [22.0%]  2 [50.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 12 [ip] 13 [sp]
;; lr  use 	 3 [r3] 12 [ip] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 3 [r3] 4 [r4] 12 [ip] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 3 [r3]
;; live  kill	 14 [lr]

Successors:  6 [100.0%]  (fallthru)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]


Basic block 6 , prev 5, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  5 [100.0%]  (fallthru) 4 [100.0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	
;; live  kill	

Successors:  EXIT [100.0%] 
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]


Basic block 1 , prev 6, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  6 [100.0%] 
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(4){ }u-1(13){ }u-1(14){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp] 14 [lr]
;; lr  def 	
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	




flush_tlb_kernel_range

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;;  exit block uses 	 4 [r4] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 12[ip] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={5d,4u} r1={5d,4u} r2={8d,6u} r3={5d,4u} r4={1d,2u} r12={3d,2u} r13={2d,12u} r14={3d,2u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={5d,2u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} 
;;    total ref usage 295{257d,38u,0e} in 23{21 regular + 2 call} insns.
(note 1 0 58 NOTE_INSN_DELETED)

(note 58 1 59 2 ( start (expr_list:REG_DEP_TRUE (reg:SI 0 r0 [ start ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 59 58 5 2 ( end (expr_list:REG_DEP_TRUE (reg:SI 1 r1 [ end ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; lr  def 	 2 [r2] 3 [r3] 12 [ip] 13 [sp] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 12 [ip] 13 [sp] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 59 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 4 5 49 2 NOTE_INSN_FUNCTION_BEG)

(insn/f:TI 49 4 61 2 arch/arm/kernel/smp_tlb.c:130 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 0 r0)
                    ] 2))
            (use (reg:SI 1 r1))
            (use (reg:SI 2 r2))
            (use (reg:SI 3 r3))
            (use (reg:SI 4 r4))
            (use (reg:SI 14 lr))
        ]) 327 {*push_multi} (expr_list:REG_DEAD (reg:SI 14 lr)
        (expr_list:REG_DEAD (reg:SI 3 r3)
            (expr_list:REG_DEAD (reg:SI 2 r2)
                (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                            (set/f (reg/f:SI 13 sp)
                                (plus:SI (reg/f:SI 13 sp)
                                    (const_int -24 [0xffffffffffffffe8])))
                            (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                                (reg:SI 0 r0))
                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                        (const_int 4 [0x4])) [0 S4 A32])
                                (reg:SI 1 r1))
                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                        (const_int 8 [0x8])) [0 S4 A32])
                                (reg:SI 2 r2))
                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                        (const_int 12 [0xc])) [0 S4 A32])
                                (reg:SI 3 r3))
                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                        (const_int 16 [0x10])) [0 S4 A32])
                                (reg:SI 4 r4))
                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                        (const_int 20 [0x14])) [0 S4 A32])
                                (reg:SI 14 lr))
                        ])
                    (nil))))))

(note 61 49 60 2 ( start (nil)) NOTE_INSN_VAR_LOCATION)

(note 60 61 50 2 ( end (nil)) NOTE_INSN_VAR_LOCATION)

(note 50 60 47 2 NOTE_INSN_PROLOGUE_END)

(insn:TI 47 50 2 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:28 (set (reg/f:SI 2 r2 [136])
        (symbol_ref:SI ("smp_on_up") [flags 0xc0] <var_decl 0x10b1dc00 smp_on_up>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("smp_on_up") [flags 0xc0] <var_decl 0x10b1dc00 smp_on_up>)
        (nil)))

(insn:TI 2 47 62 2 arch/arm/kernel/smp_tlb.c:130 (set (reg/v:SI 12 ip [orig:134 start ] [134])
        (reg:SI 0 r0 [ start ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ start ])
        (nil)))

(note 62 2 3 2 ( start (expr_list:REG_DEP_TRUE (reg:SI 0 r0 [ start ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn 3 62 63 2 arch/arm/kernel/smp_tlb.c:130 (set (reg/v:SI 3 r3 [orig:135 end ] [135])
        (reg:SI 1 r1 [ end ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ end ])
        (nil)))

(note 63 3 8 2 ( end (expr_list:REG_DEP_TRUE (reg:SI 1 r1 [ end ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 8 63 9 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:28 (set (reg:SI 2 r2 [orig:137 smp_on_up ] [137])
        (mem/c/i:SI (reg/f:SI 2 r2 [136]) [0 smp_on_up+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("smp_on_up") [flags 0xc0] <var_decl 0x10b1dc00 smp_on_up>) [0 smp_on_up+0 S4 A32])
        (nil)))

(insn:TI 9 8 10 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:28 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2 r2 [orig:137 smp_on_up ] [137])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [orig:137 smp_on_up ] [137])
        (nil)))

(jump_insn:TI 10 9 64 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:28 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 28)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 2 -> ( 5 3)
;; lr  out 	 3 [r3] 4 [r4] 12 [ip] 13 [sp]
;; live  out 	 3 [r3] 4 [r4] 12 [ip] 13 [sp]


;; Succ edge  5 [50.0%] 
;; Succ edge  3 [50.0%]  (fallthru)

(note 64 10 65 3 ( start (expr_list:REG_DEP_TRUE (reg/v:SI 12 ip [orig:134 start ] [134])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 65 64 11 3 ( end (expr_list:REG_DEP_TRUE (reg/v:SI 3 r3 [orig:135 end ] [135])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 12 [ip] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 2 [r2] 24 [cc]
;; live  in  	 3 [r3] 4 [r4] 12 [ip] 13 [sp]
;; live  gen 	 2 [r2] 24 [cc]
;; live  kill	 24 [cc]

;; Pred edge  2 [50.0%]  (fallthru)
(note 11 65 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 13 11 12 3 NOTE_INSN_DELETED)

(insn:TI 12 13 66 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:31 (parallel [
            (set (reg/v:SI 2 r2 [orig:133 __val ] [133])
                (asm_operands:SI ("mrc	p15, 0, %0, c0, c1, 7") ("=r") 0 []
                     [] 2012747))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(note 66 12 14 3 ( __val (expr_list:REG_DEP_TRUE (reg/v:SI 2 r2 [orig:133 __val ] [133])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 14 66 67 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:31 (set (reg:SI 2 r2 [139])
        (zero_extract:SI (reg/v:SI 2 r2 [orig:133 __val ] [133])
            (const_int 4 [0x4])
            (const_int 12 [0xc]))) 124 {extzv_t2} (nil))

(note 67 14 15 3 ( __val (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 15 67 16 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:31 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2 r2 [139])
            (const_int 1 [0x1]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [139])
        (nil)))

(jump_insn:TI 16 15 17 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:31 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 28)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2200 [0x898])
            (nil))))
;; End of basic block 3 -> ( 4 5)
;; lr  out 	 3 [r3] 4 [r4] 12 [ip] 13 [sp]
;; live  out 	 3 [r3] 4 [r4] 12 [ip] 13 [sp]


;; Succ edge  4 [78.0%]  (fallthru)
;; Succ edge  5 [22.0%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 12 [ip] 13 [sp]
;; lr  use 	 3 [r3] 12 [ip] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 3 [r3] 4 [r4] 12 [ip] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	 14 [lr]

;; Pred edge  3 [78.0%]  (fallthru)
(note 17 16 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 21 17 23 4 NOTE_INSN_DELETED)

(insn:TI 23 21 24 4 arch/arm/kernel/smp_tlb.c:135 (set (reg:SI 1 r1)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 4 [0x4]))) 4 {*arm_addsi3} (nil))

(insn 24 23 22 4 arch/arm/kernel/smp_tlb.c:135 (set (reg:SI 2 r2)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn:TI 22 24 18 4 arch/arm/kernel/smp_tlb.c:135 (set (reg:SI 0 r0)
        (symbol_ref:SI ("ipi_flush_tlb_kernel_range") [flags 0x3] <function_decl 0x10f4ce00 ipi_flush_tlb_kernel_range>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("ipi_flush_tlb_kernel_range") [flags 0x3] <function_decl 0x10f4ce00 ipi_flush_tlb_kernel_range>)
        (nil)))

(insn:TI 18 22 19 4 arch/arm/kernel/smp_tlb.c:133 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [0 ta.ta_start+0 S4 A32])
        (reg/v:SI 12 ip [orig:134 start ] [134])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 12 ip [orig:134 start ] [134])
        (nil)))

(insn:TI 19 18 25 4 arch/arm/kernel/smp_tlb.c:134 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 12 [0xc])) [0 ta.ta_end+0 S4 A32])
        (reg/v:SI 3 r3 [orig:135 end ] [135])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 3 r3 [orig:135 end ] [135])
        (nil)))

(call_insn 25 19 69 4 arch/arm/kernel/smp_tlb.c:135 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("on_each_cpu") [flags 0x41] <function_decl 0x10b23600 on_each_cpu>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(note 69 25 68 4 ( end (nil)) NOTE_INSN_VAR_LOCATION)

(note 68 69 56 4 ( start (nil)) NOTE_INSN_VAR_LOCATION)

(jump_insn 56 68 57 4 (set (pc)
        (label_ref 40)) -1 (nil))
;; End of basic block 4 -> ( 6)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  6 [100.0%] 

(barrier 57 56 70)

(note 70 57 71 5 ( start (expr_list:REG_DEP_TRUE (reg/v:SI 12 ip [orig:134 start ] [134])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 71 70 28 5 ( end (expr_list:REG_DEP_TRUE (reg/v:SI 3 r3 [orig:135 end ] [135])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 3 2) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 12 [ip] 13 [sp]
;; lr  use 	 3 [r3] 12 [ip] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 3 [r3] 4 [r4] 12 [ip] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 3 [r3]
;; live  kill	 14 [lr]

;; Pred edge  3 [22.0%] 
;; Pred edge  2 [50.0%] 
(code_label 28 71 29 5 29 "" [2 uses])

(note 29 28 31 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 31 29 33 5 NOTE_INSN_DELETED)

(insn:TI 33 31 32 5 arch/arm/kernel/smp_tlb.c:137 (set (reg:SI 1 r1)
        (reg/v:SI 3 r3 [orig:135 end ] [135])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 3 r3 [orig:135 end ] [135])
        (nil)))

(insn 32 33 30 5 arch/arm/kernel/smp_tlb.c:137 (set (reg:SI 0 r0)
        (reg/v:SI 12 ip [orig:134 start ] [134])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 12 ip [orig:134 start ] [134])
        (nil)))

(insn:TI 30 32 72 5 arch/arm/kernel/smp_tlb.c:137 (set (reg/f:SI 3 r3 [142])
        (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x10f31f60 cpu_tlb>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x10f31f60 cpu_tlb>)
        (nil)))

(note 72 30 34 5 ( end (nil)) NOTE_INSN_VAR_LOCATION)

(call_insn:TI 34 72 73 5 arch/arm/kernel/smp_tlb.c:137 (parallel [
            (call (mem:SI (mem/s/f/j/c:SI (plus:SI (reg/f:SI 3 r3 [142])
                            (const_int 4 [0x4])) [0 cpu_tlb.flush_kern_range+0 S4 A32]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 246 {*call_mem} (expr_list:REG_DEAD (reg/f:SI 3 r3 [142])
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_DEAD (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(note 73 34 40 5 ( start (nil)) NOTE_INSN_VAR_LOCATION)
;; End of basic block 5 -> ( 6)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 5 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	
;; live  kill	

;; Pred edge  5 [100.0%]  (fallthru)
;; Pred edge  4 [100.0%] 
(code_label 40 73 43 6 31 "" [1 uses])

(note 43 40 51 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note 51 43 52 6 NOTE_INSN_EPILOGUE_BEG)

(jump_insn:TI 52 51 53 6 arch/arm/kernel/smp_tlb.c:138 (unspec_volatile [
            (return)
        ] 1) 323 {*epilogue_insns} (nil))
;; End of basic block 6 -> ( 1)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  EXIT [100.0%] 

(barrier 53 52 46)

(note 46 53 48 NOTE_INSN_DELETED)

(note 48 46 0 NOTE_INSN_DELETED)


;; Function flush_tlb_kernel_page (flush_tlb_kernel_page)[0:755]


Basic block 2:
IN:
Stack adjustment: 0
Reg 0: kaddr+0
Variables:
  name: kaddr
    offset 0
      (reg:SI 0 r0 [ kaddr ])

OUT:
Stack adjustment: 24
Reg 0: kaddr+0
Reg 3: kaddr+0
Variables:
  name: kaddr
    offset 0
      (reg/v:SI 3 r3 [orig:136 kaddr ] [136])
      (reg:SI 0 r0 [ kaddr ])


Basic block 3:
IN:
Stack adjustment: 24
Reg 0: kaddr+0
Reg 3: kaddr+0
Variables:
  name: kaddr
    offset 0
      (reg/v:SI 3 r3 [orig:136 kaddr ] [136])
      (reg:SI 0 r0 [ kaddr ])

OUT:
Stack adjustment: 24
Reg 0: kaddr+0
Reg 3: kaddr+0
Variables:
  name: kaddr
    offset 0
      (reg/v:SI 3 r3 [orig:136 kaddr ] [136])
      (reg:SI 0 r0 [ kaddr ])


Basic block 4:
IN:
Stack adjustment: 24
Reg 0: kaddr+0
Reg 3: kaddr+0
Variables:
  name: kaddr
    offset 0
      (reg/v:SI 3 r3 [orig:136 kaddr ] [136])
      (reg:SI 0 r0 [ kaddr ])

OUT:
Stack adjustment: 24


Basic block 5:
IN:
Stack adjustment: 24
Reg 0: kaddr+0
Reg 3: kaddr+0
Variables:
  name: kaddr
    offset 0
      (reg/v:SI 3 r3 [orig:136 kaddr ] [136])
      (reg:SI 0 r0 [ kaddr ])

OUT:
Stack adjustment: 24
Reg 0: kaddr+0
Reg 2: __tlb_flag+0
Reg 3: kaddr+0
Variables:
  name: kaddr
    offset 0
      (reg/v:SI 3 r3 [orig:134 kaddr ] [134])
  name: __tlb_flag
    offset 0
      (reg/v:SI 2 r2 [orig:133 __tlb_flag ] [133])
  name: kaddr
    offset 0
      (reg:SI 0 r0 [ kaddr ])


Basic block 6:
IN:
Stack adjustment: 24
Reg 0: kaddr+0
Reg 2: __tlb_flag+0
Reg 3: kaddr+0
Variables:
  name: kaddr
    offset 0
      (reg/v:SI 3 r3 [orig:134 kaddr ] [134])
  name: __tlb_flag
    offset 0
      (reg/v:SI 2 r2 [orig:133 __tlb_flag ] [133])
  name: kaddr
    offset 0
      (reg:SI 0 r0 [ kaddr ])

OUT:
Stack adjustment: 24
Reg 0: kaddr+0
Reg 2: __tlb_flag+0
Reg 3: kaddr+0
Variables:
  name: kaddr
    offset 0
      (reg/v:SI 3 r3 [orig:134 kaddr ] [134])
  name: __tlb_flag
    offset 0
      (reg/v:SI 2 r2 [orig:133 __tlb_flag ] [133])
  name: kaddr
    offset 0
      (reg:SI 0 r0 [ kaddr ])


Basic block 7:
IN:
Stack adjustment: 24
Reg 0: kaddr+0
Reg 2: __tlb_flag+0
Reg 3: kaddr+0
Variables:
  name: kaddr
    offset 0
      (reg/v:SI 3 r3 [orig:134 kaddr ] [134])
  name: __tlb_flag
    offset 0
      (reg/v:SI 2 r2 [orig:133 __tlb_flag ] [133])
  name: kaddr
    offset 0
      (reg:SI 0 r0 [ kaddr ])

OUT:
Stack adjustment: 24
Reg 0: kaddr+0
Reg 2: __tlb_flag+0
Reg 3: kaddr+0
Variables:
  name: kaddr
    offset 0
      (reg/v:SI 3 r3 [orig:134 kaddr ] [134])
  name: __tlb_flag
    offset 0
      (reg/v:SI 2 r2 [orig:133 __tlb_flag ] [133])
  name: kaddr
    offset 0
      (reg:SI 0 r0 [ kaddr ])


Basic block 8:
IN:
Stack adjustment: 24
Reg 0: kaddr+0
Reg 2: __tlb_flag+0
Reg 3: kaddr+0
Variables:
  name: kaddr
    offset 0
      (reg/v:SI 3 r3 [orig:134 kaddr ] [134])
  name: __tlb_flag
    offset 0
      (reg/v:SI 2 r2 [orig:133 __tlb_flag ] [133])
  name: kaddr
    offset 0
      (reg:SI 0 r0 [ kaddr ])

OUT:
Stack adjustment: 24
Reg 0: kaddr+0
Reg 2: __tlb_flag+0
Reg 3: kaddr+0
Variables:
  name: kaddr
    offset 0
      (reg/v:SI 3 r3 [orig:134 kaddr ] [134])
  name: __tlb_flag
    offset 0
      (reg/v:SI 2 r2 [orig:133 __tlb_flag ] [133])
  name: kaddr
    offset 0
      (reg:SI 0 r0 [ kaddr ])


Basic block 9:
IN:
Stack adjustment: 24
Reg 0: kaddr+0
Reg 2: __tlb_flag+0
Reg 3: kaddr+0
Variables:
  name: kaddr
    offset 0
      (reg/v:SI 3 r3 [orig:134 kaddr ] [134])
  name: __tlb_flag
    offset 0
      (reg/v:SI 2 r2 [orig:133 __tlb_flag ] [133])
  name: kaddr
    offset 0
      (reg:SI 0 r0 [ kaddr ])

OUT:
Stack adjustment: 24
Reg 0: kaddr+0
Reg 2: __tlb_flag+0
Reg 3: kaddr+0
Variables:
  name: kaddr
    offset 0
      (reg/v:SI 3 r3 [orig:134 kaddr ] [134])
  name: __tlb_flag
    offset 0
      (reg/v:SI 2 r2 [orig:133 __tlb_flag ] [133])
  name: kaddr
    offset 0
      (reg:SI 0 r0 [ kaddr ])


Basic block 10:
IN:
Stack adjustment: 24
Reg 0: kaddr+0
Reg 2: __tlb_flag+0
Reg 3: kaddr+0
Variables:
  name: kaddr
    offset 0
      (reg/v:SI 3 r3 [orig:134 kaddr ] [134])
  name: __tlb_flag
    offset 0
      (reg/v:SI 2 r2 [orig:133 __tlb_flag ] [133])
  name: kaddr
    offset 0
      (reg:SI 0 r0 [ kaddr ])

OUT:
Stack adjustment: 24
Reg 0: kaddr+0
Reg 2: __tlb_flag+0
Reg 3: kaddr+0
Variables:
  name: kaddr
    offset 0
      (reg/v:SI 3 r3 [orig:134 kaddr ] [134])
  name: __tlb_flag
    offset 0
      (reg/v:SI 2 r2 [orig:133 __tlb_flag ] [133])
  name: kaddr
    offset 0
      (reg:SI 0 r0 [ kaddr ])


11 basic blocks, 14 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(13){ }d-1(14){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; lr  def 	 2 [r2] 3 [r3] 13 [sp] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 13 [sp] 24 [cc]
;; live  kill	

Successors:  5 [50.0%]  3 [50.0%]  (fallthru)
;; lr  out 	 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 4 [r4] 13 [sp] 14 [lr]


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 5000, maybe hot.
Predecessors:  2 [50.0%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 2 [r2] 24 [cc]
;; live  in  	 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 24 [cc]
;; live  kill	 24 [cc]

Successors:  4 [41.4%]  (fallthru) 5 [58.6%] 
;; lr  out 	 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 4 [r4] 13 [sp] 14 [lr]


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 2071, maybe hot.
Predecessors:  3 [41.4%]  (fallthru)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 13 [sp]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 3 [r3] 4 [r4] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	 14 [lr]

Successors:  10 [100.0%] 
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]


Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 7929, maybe hot.
Predecessors:  3 [58.6%]  2 [50.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 24 [cc]
;; live  kill	

Successors:  6 [50.0%]  (fallthru) 7 [50.0%] 
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]


Basic block 6 , prev 5, next 7, loop_depth 0, count 0, freq 3964, maybe hot.
Predecessors:  5 [50.0%]  (fallthru)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	 24 [cc]

Successors:  7 [100.0%]  (fallthru)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]


Basic block 7 , prev 6, next 8, loop_depth 0, count 0, freq 7929, maybe hot.
Predecessors:  5 [50.0%]  6 [100.0%]  (fallthru)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  8 [50.0%]  (fallthru) 9 [50.0%] 
;; lr  out 	 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 4 [r4] 13 [sp] 14 [lr]


Basic block 8 , prev 7, next 9, loop_depth 0, count 0, freq 3964, maybe hot.
Predecessors:  7 [50.0%]  (fallthru)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	 24 [cc]

Successors:  9 [100.0%]  (fallthru)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp] 14 [lr]


Basic block 9 , prev 8, next 10, loop_depth 0, count 0, freq 7929, maybe hot.
Predecessors:  7 [50.0%]  8 [100.0%]  (fallthru)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

Successors:  10 [100.0%]  (fallthru)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp] 14 [lr]


Basic block 10 , prev 9, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  9 [100.0%]  (fallthru) 4 [100.0%] 
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

Successors:  EXIT [100.0%] 
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp] 14 [lr]


Basic block 1 , prev 10, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  10 [100.0%] 
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(4){ }u-1(13){ }u-1(14){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp] 14 [lr]
;; lr  def 	
;; live  in  	 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	




flush_tlb_kernel_page

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;;  exit block uses 	 4 [r4] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={3d,3u} r1={3d,2u} r2={9d,9u} r3={5d,6u} r4={1d,2u} r12={1d} r13={2d,14u} r14={2d,2u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={8d,4u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 186{144d,42u,0e} in 30{29 regular + 1 call} insns.
(note 1 0 75 NOTE_INSN_DELETED)

(note 75 1 4 2 ( kaddr (expr_list:REG_DEP_TRUE (reg:SI 0 r0 [ kaddr ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; lr  def 	 2 [r2] 3 [r3] 13 [sp] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 13 [sp] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 75 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 66 2 NOTE_INSN_FUNCTION_BEG)

(insn/f:TI 66 3 76 2 arch/arm/kernel/smp_tlb.c:107 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 0 r0)
                    ] 2))
            (use (reg:SI 1 r1))
            (use (reg:SI 2 r2))
            (use (reg:SI 3 r3))
            (use (reg:SI 4 r4))
            (use (reg:SI 14 lr))
        ]) 327 {*push_multi} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                            (set/f (reg/f:SI 13 sp)
                                (plus:SI (reg/f:SI 13 sp)
                                    (const_int -24 [0xffffffffffffffe8])))
                            (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                                (reg:SI 0 r0))
                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                        (const_int 4 [0x4])) [0 S4 A32])
                                (reg:SI 1 r1))
                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                        (const_int 8 [0x8])) [0 S4 A32])
                                (reg:SI 2 r2))
                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                        (const_int 12 [0xc])) [0 S4 A32])
                                (reg:SI 3 r3))
                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                        (const_int 16 [0x10])) [0 S4 A32])
                                (reg:SI 4 r4))
                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                        (const_int 20 [0x14])) [0 S4 A32])
                                (reg:SI 14 lr))
                        ])
                    (nil))))))

(note 76 66 67 2 ( kaddr (nil)) NOTE_INSN_VAR_LOCATION)

(note 67 76 64 2 NOTE_INSN_PROLOGUE_END)

(insn:TI 64 67 2 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:28 (set (reg/f:SI 2 r2 [137])
        (symbol_ref:SI ("smp_on_up") [flags 0xc0] <var_decl 0x10b1dc00 smp_on_up>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("smp_on_up") [flags 0xc0] <var_decl 0x10b1dc00 smp_on_up>)
        (nil)))

(insn:TI 2 64 77 2 arch/arm/kernel/smp_tlb.c:107 (set (reg/v:SI 3 r3 [orig:136 kaddr ] [136])
        (reg:SI 0 r0 [ kaddr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ kaddr ])
        (nil)))

(note 77 2 7 2 ( kaddr (expr_list:REG_DEP_TRUE (reg:SI 0 r0 [ kaddr ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 7 77 8 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:28 (set (reg:SI 2 r2 [orig:138 smp_on_up ] [138])
        (mem/c/i:SI (reg/f:SI 2 r2 [137]) [0 smp_on_up+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("smp_on_up") [flags 0xc0] <var_decl 0x10b1dc00 smp_on_up>) [0 smp_on_up+0 S4 A32])
        (nil)))

(insn:TI 8 7 9 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:28 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2 r2 [orig:138 smp_on_up ] [138])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [orig:138 smp_on_up ] [138])
        (nil)))

(jump_insn:TI 9 8 78 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:28 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 26)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 2 -> ( 5 3)
;; lr  out 	 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 4 [r4] 13 [sp] 14 [lr]


;; Succ edge  5 [50.0%] 
;; Succ edge  3 [50.0%]  (fallthru)

(note 78 9 10 3 ( kaddr (expr_list:REG_DEP_TRUE (reg/v:SI 3 r3 [orig:136 kaddr ] [136])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 2 [r2] 24 [cc]
;; live  in  	 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 24 [cc]
;; live  kill	 24 [cc]

;; Pred edge  2 [50.0%]  (fallthru)
(note 10 78 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 12 10 11 3 NOTE_INSN_DELETED)

(insn:TI 11 12 79 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:31 (parallel [
            (set (reg/v:SI 2 r2 [orig:135 __val ] [135])
                (asm_operands:SI ("mrc	p15, 0, %0, c0, c1, 7") ("=r") 0 []
                     [] 2012747))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(note 79 11 13 3 ( __val (expr_list:REG_DEP_TRUE (reg/v:SI 2 r2 [orig:135 __val ] [135])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 13 79 80 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:31 (set (reg:SI 2 r2 [140])
        (zero_extract:SI (reg/v:SI 2 r2 [orig:135 __val ] [135])
            (const_int 4 [0x4])
            (const_int 12 [0xc]))) 124 {extzv_t2} (nil))

(note 80 13 14 3 ( __val (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 14 80 15 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:31 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2 r2 [140])
            (const_int 1 [0x1]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [140])
        (nil)))

(jump_insn:TI 15 14 16 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:31 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 26)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5858 [0x16e2])
            (nil))))
;; End of basic block 3 -> ( 4 5)
;; lr  out 	 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 4 [r4] 13 [sp] 14 [lr]


;; Succ edge  4 [41.4%]  (fallthru)
;; Succ edge  5 [58.6%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 13 [sp]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 3 [r3] 4 [r4] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	 14 [lr]

;; Pred edge  3 [41.4%]  (fallthru)
(note 16 15 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 19 16 21 4 NOTE_INSN_DELETED)

(insn:TI 21 19 22 4 arch/arm/kernel/smp_tlb.c:111 (set (reg:SI 1 r1)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 4 [0x4]))) 4 {*arm_addsi3} (nil))

(insn 22 21 20 4 arch/arm/kernel/smp_tlb.c:111 (set (reg:SI 2 r2)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn:TI 20 22 17 4 arch/arm/kernel/smp_tlb.c:111 (set (reg:SI 0 r0)
        (symbol_ref:SI ("ipi_flush_tlb_kernel_page") [flags 0x3] <function_decl 0x10f4cc00 ipi_flush_tlb_kernel_page>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("ipi_flush_tlb_kernel_page") [flags 0x3] <function_decl 0x10f4cc00 ipi_flush_tlb_kernel_page>)
        (nil)))

(insn:TI 17 20 23 4 arch/arm/kernel/smp_tlb.c:110 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [0 ta.ta_start+0 S4 A32])
        (reg/v:SI 3 r3 [orig:136 kaddr ] [136])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 3 r3 [orig:136 kaddr ] [136])
        (nil)))

(call_insn 23 17 81 4 arch/arm/kernel/smp_tlb.c:111 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("on_each_cpu") [flags 0x41] <function_decl 0x10b23600 on_each_cpu>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(note 81 23 73 4 ( kaddr (nil)) NOTE_INSN_VAR_LOCATION)

(jump_insn 73 81 74 4 (set (pc)
        (label_ref 54)) -1 (nil))
;; End of basic block 4 -> ( 10)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  10 [100.0%] 

(barrier 74 73 82)

(note 82 74 26 5 ( kaddr (expr_list:REG_DEP_TRUE (reg/v:SI 3 r3 [orig:136 kaddr ] [136])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 3 2) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  3 [58.6%] 
;; Pred edge  2 [50.0%] 
(code_label 26 82 27 5 35 "" [2 uses])

(note 27 26 30 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 30 27 33 5 NOTE_INSN_DELETED)

(note 33 30 63 5 NOTE_INSN_DELETED)

(insn:TI 63 33 60 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:428 (set (reg/f:SI 2 r2 [143])
        (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x10f31f60 cpu_tlb>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x10f31f60 cpu_tlb>)
        (nil)))

(insn 60 63 83 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:430 (set (reg/v:SI 3 r3 [orig:134 kaddr ] [134])
        (and:SI (reg/v:SI 3 r3 [orig:136 kaddr ] [136])
            (const_int -4081 [0xfffffffffffff00f]))) 67 {*arm_andsi3_insn} (nil))

(note 83 60 84 5 ( kaddr (expr_list:REG_DEP_TRUE (reg:SI 0 r0 [ kaddr ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 84 83 61 5 ( kaddr (expr_list:REG_DEP_TRUE (reg/v:SI 3 r3 [orig:134 kaddr ] [134])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 61 84 29 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:430 (set (reg/v:SI 3 r3 [orig:134 kaddr ] [134])
        (and:SI (reg/v:SI 3 r3 [orig:134 kaddr ] [134])
            (const_int -16 [0xfffffffffffffff0]))) 67 {*arm_andsi3_insn} (nil))

(insn:TI 29 61 85 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:428 (set (reg/v:SI 2 r2 [orig:133 __tlb_flag ] [133])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 2 r2 [143])
                (const_int 8 [0x8])) [0 cpu_tlb.tlb_flags+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x10f31f60 cpu_tlb>)
                    (const_int 8 [0x8]))) [0 cpu_tlb.tlb_flags+0 S4 A32])
        (nil)))

(note 85 29 32 5 ( __tlb_flag (expr_list:REG_DEP_TRUE (reg/v:SI 2 r2 [orig:133 __tlb_flag ] [133])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 32 85 34 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:433 (parallel [
            (asm_operands/v ("dsb") ("") 0 []
                 [] 5164795)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn:TI 34 32 35 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:446 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 2 r2 [orig:133 __tlb_flag ] [133])
                (const_int 1 [0x1])
                (const_int 4 [0x4]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn:TI 35 34 36 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:446 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 38)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 5 -> ( 6 7)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]


;; Succ edge  6 [50.0%]  (fallthru)
;; Succ edge  7 [50.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	 24 [cc]

;; Pred edge  5 [50.0%]  (fallthru)
(note 36 35 37 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn:TI 37 36 38 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:447 (parallel [
            (asm_operands/v ("mcr p15, 0, %0, c8, c7, 1") ("") 0 [
                    (reg/v:SI 3 r3 [orig:134 kaddr ] [134])
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 5166587)
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))
;; End of basic block 6 -> ( 7)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 5 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  5 [50.0%] 
;; Pred edge  6 [100.0%]  (fallthru)
(code_label 38 37 39 7 37 "" [1 uses])

(note 39 38 40 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(note 40 39 41 7 NOTE_INSN_DELETED)

(insn:TI 41 40 42 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:452 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 2 r2 [orig:133 __tlb_flag ] [133])
                (const_int 1 [0x1])
                (const_int 19 [0x13]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg/v:SI 2 r2 [orig:133 __tlb_flag ] [133])
        (nil)))

(jump_insn:TI 42 41 43 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:452 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 45)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 7 -> ( 8 9)
;; lr  out 	 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 4 [r4] 13 [sp] 14 [lr]


;; Succ edge  8 [50.0%]  (fallthru)
;; Succ edge  9 [50.0%] 

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	 24 [cc]

;; Pred edge  7 [50.0%]  (fallthru)
(note 43 42 44 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn:TI 44 43 45 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:453 (parallel [
            (asm_operands/v ("mcr p15, 0, %0, c8, c3, 1") ("") 0 [
                    (reg/v:SI 3 r3 [orig:134 kaddr ] [134])
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 5167355)
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/v:SI 3 r3 [orig:134 kaddr ] [134])
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))
;; End of basic block 8 -> ( 9)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp] 14 [lr]


;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 7 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  7 [50.0%] 
;; Pred edge  8 [100.0%]  (fallthru)
(code_label 45 44 46 9 38 "" [1 uses])

(note 46 45 47 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn:TI 47 46 48 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:456 (parallel [
            (asm_operands/v ("dsb") ("") 0 []
                 [] 5167739)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn:TI 48 47 54 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:457 (parallel [
            (asm_operands/v ("isb") ("") 0 []
                 [] 5167867)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))
;; End of basic block 9 -> ( 10)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp] 14 [lr]


;; Succ edge  10 [100.0%]  (fallthru)

;; Start of basic block ( 9 4) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  9 [100.0%]  (fallthru)
;; Pred edge  4 [100.0%] 
(code_label 54 48 57 10 39 "" [1 uses])

(note 57 54 68 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(note 68 57 69 10 NOTE_INSN_EPILOGUE_BEG)

(jump_insn:TI 69 68 70 10 arch/arm/kernel/smp_tlb.c:114 (unspec_volatile [
            (return)
        ] 1) 323 {*epilogue_insns} (nil))
;; End of basic block 10 -> ( 1)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%] 

(barrier 70 69 62)

(note 62 70 65 NOTE_INSN_DELETED)

(note 65 62 0 NOTE_INSN_DELETED)


;; Function flush_tlb_all (flush_tlb_all)[0:752]


Basic block 2:
IN:
Stack adjustment: 0

OUT:
Stack adjustment: 0


Basic block 3:
IN:
Stack adjustment: 0

OUT:
Stack adjustment: 0


Basic block 4:
IN:
Stack adjustment: 0

OUT:
Stack adjustment: 0


Basic block 5:
IN:
Stack adjustment: 0

OUT:
Stack adjustment: 0
Reg 3: __tlb_flag+0
Variables:
  name: __tlb_flag
    offset 0
      (reg/v:SI 3 r3 [orig:133 __tlb_flag ] [133])


Basic block 6:
IN:
Stack adjustment: 0
Reg 3: __tlb_flag+0
Variables:
  name: __tlb_flag
    offset 0
      (reg/v:SI 3 r3 [orig:133 __tlb_flag ] [133])

OUT:
Stack adjustment: 0
Reg 3: __tlb_flag+0
Variables:
  name: __tlb_flag
    offset 0
      (reg/v:SI 3 r3 [orig:133 __tlb_flag ] [133])


Basic block 7:
IN:
Stack adjustment: 0
Reg 3: __tlb_flag+0
Variables:
  name: __tlb_flag
    offset 0
      (reg/v:SI 3 r3 [orig:133 __tlb_flag ] [133])

OUT:
Stack adjustment: 0
Reg 3: __tlb_flag+0
Variables:
  name: __tlb_flag
    offset 0
      (reg/v:SI 3 r3 [orig:133 __tlb_flag ] [133])


Basic block 8:
IN:
Stack adjustment: 0
Reg 3: __tlb_flag+0
Variables:
  name: __tlb_flag
    offset 0
      (reg/v:SI 3 r3 [orig:133 __tlb_flag ] [133])

OUT:
Stack adjustment: 0


Basic block 9:
IN:
Stack adjustment: 0
Reg 3: __tlb_flag+0
Variables:
  name: __tlb_flag
    offset 0
      (reg/v:SI 3 r3 [orig:133 __tlb_flag ] [133])

OUT:
Stack adjustment: 0
Reg 3: __tlb_flag+0
Variables:
  name: __tlb_flag
    offset 0
      (reg/v:SI 3 r3 [orig:133 __tlb_flag ] [133])


10 basic blocks, 13 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(13){ }d-1(14){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

Successors:  5 [50.0%]  3 [50.0%]  (fallthru)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 5000, maybe hot.
Predecessors:  2 [50.0%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	 24 [cc]

Successors:  4 [41.4%]  (fallthru) 5 [58.6%] 
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 2071, maybe hot.
Predecessors:  3 [41.4%]  (fallthru)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	

Successors:  EXIT [100.0%]  (ab,sibcall)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 7929, maybe hot.
Predecessors:  3 [58.6%]  2 [50.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

Successors:  6 [50.0%]  (fallthru) 7 [50.0%] 
;; lr  out 	 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 13 [sp] 14 [lr]


Basic block 6 , prev 5, next 7, loop_depth 0, count 0, freq 3964, maybe hot.
Predecessors:  5 [50.0%]  (fallthru)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 2 [r2] 24 [cc]
;; live  in  	 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2]
;; live  kill	 24 [cc]

Successors:  7 [100.0%]  (fallthru)
;; lr  out 	 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 13 [sp] 14 [lr]


Basic block 7 , prev 6, next 8, loop_depth 0, count 0, freq 7929, maybe hot.
Predecessors:  5 [50.0%]  6 [100.0%]  (fallthru)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  8 [50.0%]  (fallthru) 9 [50.0%] 
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


Basic block 8 , prev 7, next 9, loop_depth 0, count 0, freq 3964, maybe hot.
Predecessors:  7 [50.0%]  (fallthru)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 3 [r3]
;; live  kill	 24 [cc]

Successors:  9 [100.0%]  (fallthru)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


Basic block 9 , prev 8, next 1, loop_depth 0, count 0, freq 7929, maybe hot.
Predecessors:  7 [50.0%]  8 [100.0%]  (fallthru)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

Successors:  EXIT [100.0%] 
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


Basic block 1 , prev 9, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  4 [100.0%]  (ab,sibcall) 9 [100.0%] 
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(13){ }u-1(14){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp] 14 [lr]
;; lr  def 	
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	




flush_tlb_all

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={3d,1u} r1={3d,1u} r2={4d,2u} r3={9d,8u} r12={1d} r13={1d,10u} r14={1d,2u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={8d,4u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 168{140d,28u,0e} in 27{26 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 55 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 55 3 2 2 NOTE_INSN_PROLOGUE_END)

(note 2 55 5 2 NOTE_INSN_FUNCTION_BEG)

(insn:TI 5 2 6 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:28 (set (reg/f:SI 3 r3 [135])
        (symbol_ref:SI ("smp_on_up") [flags 0xc0] <var_decl 0x10b1dc00 smp_on_up>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("smp_on_up") [flags 0xc0] <var_decl 0x10b1dc00 smp_on_up>)
        (nil)))

(insn:TI 6 5 7 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:28 (set (reg:SI 3 r3 [orig:136 smp_on_up ] [136])
        (mem/c/i:SI (reg/f:SI 3 r3 [135]) [0 smp_on_up+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("smp_on_up") [flags 0xc0] <var_decl 0x10b1dc00 smp_on_up>) [0 smp_on_up+0 S4 A32])
        (nil)))

(insn:TI 7 6 8 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:28 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [orig:136 smp_on_up ] [136])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [orig:136 smp_on_up ] [136])
        (nil)))

(jump_insn:TI 8 7 9 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:28 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 22)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 2 -> ( 5 3)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  5 [50.0%] 
;; Succ edge  3 [50.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	 24 [cc]

;; Pred edge  2 [50.0%]  (fallthru)
(note 9 8 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 11 9 10 3 NOTE_INSN_DELETED)

(insn:TI 10 11 61 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:31 (parallel [
            (set (reg/v:SI 3 r3 [orig:134 __val ] [134])
                (asm_operands:SI ("mrc	p15, 0, %0, c0, c1, 7") ("=r") 0 []
                     [] 2012747))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(note 61 10 12 3 ( __val (expr_list:REG_DEP_TRUE (reg/v:SI 3 r3 [orig:134 __val ] [134])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 12 61 62 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:31 (set (reg:SI 3 r3 [138])
        (zero_extract:SI (reg/v:SI 3 r3 [orig:134 __val ] [134])
            (const_int 4 [0x4])
            (const_int 12 [0xc]))) 124 {extzv_t2} (nil))

(note 62 12 13 3 ( __val (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 13 62 14 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:31 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [138])
            (const_int 1 [0x1]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [138])
        (nil)))

(jump_insn:TI 14 13 15 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:31 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 22)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5858 [0x16e2])
            (nil))))
;; End of basic block 3 -> ( 4 5)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  4 [41.4%]  (fallthru)
;; Succ edge  5 [58.6%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	

;; Pred edge  3 [41.4%]  (fallthru)
(note 15 14 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn:TI 17 15 18 4 arch/arm/kernel/smp_tlb.c:82 (set (reg:SI 0 r0)
        (symbol_ref:SI ("ipi_flush_tlb_all") [flags 0x3] <function_decl 0x10f4c900 ipi_flush_tlb_all>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("ipi_flush_tlb_all") [flags 0x3] <function_decl 0x10f4c900 ipi_flush_tlb_all>)
        (nil)))

(insn 18 17 19 4 arch/arm/kernel/smp_tlb.c:82 (set (reg:SI 1 r1)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn:TI 19 18 59 4 arch/arm/kernel/smp_tlb.c:82 (set (reg:SI 2 r2)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(note 59 19 60 4 NOTE_INSN_EPILOGUE_BEG)

(insn 60 59 20 4 arch/arm/kernel/smp_tlb.c:85 (parallel [
            (unspec:SI [
                    (reg:SI 14 lr)
                ] 6)
            (unspec_volatile [
                    (return)
                ] 1)
        ]) 322 {sibcall_epilogue} (nil))

(call_insn/j:TI 20 60 21 4 arch/arm/kernel/smp_tlb.c:82 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("on_each_cpu") [flags 0x41] <function_decl 0x10b23600 on_each_cpu>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))
;; End of basic block 4 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 21 20 22)

;; Start of basic block ( 3 2) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  3 [58.6%] 
;; Pred edge  2 [50.0%] 
(code_label 22 21 23 5 43 "" [2 uses])

(note 23 22 27 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 27 23 24 5 NOTE_INSN_DELETED)

(insn:TI 24 27 25 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:324 (set (reg/f:SI 3 r3 [140])
        (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x10f31f60 cpu_tlb>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x10f31f60 cpu_tlb>)
        (nil)))

(insn:TI 25 24 63 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:324 (set (reg/v:SI 3 r3 [orig:133 __tlb_flag ] [133])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 3 r3 [140])
                (const_int 8 [0x8])) [0 cpu_tlb.tlb_flags+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x10f31f60 cpu_tlb>)
                    (const_int 8 [0x8]))) [0 cpu_tlb.tlb_flags+0 S4 A32])
        (nil)))

(note 63 25 26 5 ( __tlb_flag (expr_list:REG_DEP_TRUE (reg/v:SI 3 r3 [orig:133 __tlb_flag ] [133])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 26 63 28 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:327 (parallel [
            (asm_operands/v ("dsb") ("") 0 []
                 [] 5151227)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn:TI 28 26 29 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:331 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 3 r3 [orig:133 __tlb_flag ] [133])
                (const_int 1 [0x1])
                (const_int 12 [0xc]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn:TI 29 28 30 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:331 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 33)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 5 -> ( 6 7)
;; lr  out 	 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 13 [sp] 14 [lr]


;; Succ edge  6 [50.0%]  (fallthru)
;; Succ edge  7 [50.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 2 [r2] 24 [cc]
;; live  in  	 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2]
;; live  kill	 24 [cc]

;; Pred edge  5 [50.0%]  (fallthru)
(note 30 29 31 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn:TI 31 30 32 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:332 (set (reg:SI 2 r2 [142])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 0 [0x0])
        (nil)))

(insn:TI 32 31 33 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:332 (parallel [
            (asm_operands/v ("mcr p15, 0, %0, c8, c7, 0") ("") 0 [
                    (reg:SI 2 r2 [142])
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 5151867)
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg:SI 2 r2 [142])
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))
;; End of basic block 6 -> ( 7)
;; lr  out 	 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 13 [sp] 14 [lr]


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 5 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  5 [50.0%] 
;; Pred edge  6 [100.0%]  (fallthru)
(code_label 33 32 34 7 44 "" [1 uses])

(note 34 33 35 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(note 35 34 36 7 NOTE_INSN_DELETED)

(insn:TI 36 35 37 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:337 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 3 r3 [orig:133 __tlb_flag ] [133])
                (const_int 1 [0x1])
                (const_int 20 [0x14]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg/v:SI 3 r3 [orig:133 __tlb_flag ] [133])
        (nil)))

(jump_insn:TI 37 36 38 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:337 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 41)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 7 -> ( 8 9)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  8 [50.0%]  (fallthru)
;; Succ edge  9 [50.0%] 

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 3 [r3]
;; live  kill	 24 [cc]

;; Pred edge  7 [50.0%]  (fallthru)
(note 38 37 39 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn:TI 39 38 64 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:338 (set (reg:SI 3 r3 [144])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 0 [0x0])
        (nil)))

(note 64 39 40 8 ( __tlb_flag (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 40 64 65 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:338 (parallel [
            (asm_operands/v ("mcr p15, 0, %0, c8, c3, 0") ("") 0 [
                    (reg:SI 3 r3 [144])
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 5152635)
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg:SI 3 r3 [144])
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))
;; End of basic block 8 -> ( 9)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  9 [100.0%]  (fallthru)

(note 65 40 41 9 ( __tlb_flag (expr_list:REG_DEP_TRUE (reg/v:SI 3 r3 [orig:133 __tlb_flag ] [133])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 7 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  7 [50.0%] 
;; Pred edge  8 [100.0%]  (fallthru)
(code_label 41 65 42 9 45 "" [1 uses])

(note 42 41 43 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn:TI 43 42 44 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:341 (parallel [
            (asm_operands/v ("dsb") ("") 0 []
                 [] 5153019)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn:TI 44 43 56 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:342 (parallel [
            (asm_operands/v ("isb") ("") 0 []
                 [] 5153147)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(note 56 44 57 9 NOTE_INSN_EPILOGUE_BEG)

(jump_insn:TI 57 56 58 9 arch/arm/kernel/smp_tlb.c:85 (return) 260 {return} (nil))
;; End of basic block 9 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%] 

(barrier 58 57 53)

(note 53 58 54 NOTE_INSN_DELETED)

(note 54 53 0 NOTE_INSN_DELETED)


;; Function ipi_flush_tlb_mm (ipi_flush_tlb_mm)[0:747]


Basic block 2:
IN:
Stack adjustment: 0
Reg 0: arg+0
Variables:
  name: arg
    offset 0
      (reg:SI 0 r0 [ arg ])

OUT:
Stack adjustment: 16
Reg 4: __tlb_flag+0
Variables:
  name: __tlb_flag
    offset 0
      (reg/v:SI 4 r4 [orig:134 __tlb_flag ] [134])


Basic block 3:
IN:
Stack adjustment: 16
Reg 4: __tlb_flag+0
Variables:
  name: __tlb_flag
    offset 0
      (reg/v:SI 4 r4 [orig:134 __tlb_flag ] [134])

OUT:
Stack adjustment: 16
Reg 4: __tlb_flag+0
Variables:
  name: __tlb_flag
    offset 0
      (reg/v:SI 4 r4 [orig:134 __tlb_flag ] [134])


Basic block 4:
IN:
Stack adjustment: 16
Reg 4: __tlb_flag+0
Variables:
  name: __tlb_flag
    offset 0
      (reg/v:SI 4 r4 [orig:134 __tlb_flag ] [134])

OUT:
Stack adjustment: 16
Reg 4: __tlb_flag+0
Variables:
  name: __tlb_flag
    offset 0
      (reg/v:SI 4 r4 [orig:134 __tlb_flag ] [134])


Basic block 5:
IN:
Stack adjustment: 16
Reg 4: __tlb_flag+0
Variables:
  name: __tlb_flag
    offset 0
      (reg/v:SI 4 r4 [orig:134 __tlb_flag ] [134])

OUT:
Stack adjustment: 16
Reg 4: __tlb_flag+0
Variables:
  name: __tlb_flag
    offset 0
      (reg/v:SI 4 r4 [orig:134 __tlb_flag ] [134])


Basic block 6:
IN:
Stack adjustment: 16
Reg 4: __tlb_flag+0
Variables:
  name: __tlb_flag
    offset 0
      (reg/v:SI 4 r4 [orig:134 __tlb_flag ] [134])

OUT:
Stack adjustment: 16
Reg 4: __tlb_flag+0
Variables:
  name: __tlb_flag
    offset 0
      (reg/v:SI 4 r4 [orig:134 __tlb_flag ] [134])


Basic block 7:
IN:
Stack adjustment: 16
Reg 4: __tlb_flag+0
Variables:
  name: __tlb_flag
    offset 0
      (reg/v:SI 4 r4 [orig:134 __tlb_flag ] [134])

OUT:
Stack adjustment: 16
Reg 4: __tlb_flag+0
Variables:
  name: __tlb_flag
    offset 0
      (reg/v:SI 4 r4 [orig:134 __tlb_flag ] [134])


Basic block 8:
IN:
Stack adjustment: 16
Reg 4: __tlb_flag+0
Variables:
  name: __tlb_flag
    offset 0
      (reg/v:SI 4 r4 [orig:134 __tlb_flag ] [134])

OUT:
Stack adjustment: 16
Reg 4: __tlb_flag+0
Variables:
  name: __tlb_flag
    offset 0
      (reg/v:SI 4 r4 [orig:134 __tlb_flag ] [134])


9 basic blocks, 11 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(13){ }d-1(14){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp] 24 [cc]
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp] 24 [cc]
;; live  kill	

Successors:  3 [0.0%]  (fallthru) 4 [100.0%] 
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 4.
Predecessors:  2 [0.0%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  gen 	
;; live  kill	 14 [lr]

Successors:  4 [100.0%]  (fallthru)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp]


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  2 [100.0%]  3 [100.0%]  (fallthru)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  5 [50.0%]  (fallthru) 6 [50.0%] 
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]


Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 5000, maybe hot.
Predecessors:  4 [50.0%]  (fallthru)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3]
;; live  kill	 24 [cc]

Successors:  6 [100.0%]  (fallthru)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]


Basic block 6 , prev 5, next 7, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  4 [50.0%]  5 [100.0%]  (fallthru)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  7 [61.0%]  (fallthru) 8 [39.0%] 
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]


Basic block 7 , prev 6, next 8, loop_depth 0, count 0, freq 6100, maybe hot.
Predecessors:  6 [61.0%]  (fallthru)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3]
;; live  kill	 24 [cc]

Successors:  8 [100.0%]  (fallthru)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]


Basic block 8 , prev 7, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  6 [39.0%]  7 [100.0%]  (fallthru)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

Successors:  EXIT [100.0%] 
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]


Basic block 1 , prev 8, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  8 [100.0%] 
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(4){ }u-1(5){ }u-1(6){ }u-1(13){ }u-1(14){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  def 	
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	




ipi_flush_tlb_mm

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;;  exit block uses 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={3d,3u} r1={3d,1u} r2={11d,10u,1d} r3={8d,11u,5d} r4={2d,4u} r5={2d,3u} r6={1d,2u} r12={1d} r13={2d,11u} r14={2d,2u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={7d,4u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 209{152d,51u,6e} in 38{37 regular + 1 call} insns.
(note 1 0 87 NOTE_INSN_DELETED)

(note 87 1 4 2 ( arg (expr_list:REG_DEP_TRUE (reg:SI 0 r0 [ arg ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp] 24 [cc]
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 87 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 12 2 NOTE_INSN_FUNCTION_BEG)

(note 12 3 25 2 NOTE_INSN_DELETED)

(note 25 12 43 2 NOTE_INSN_DELETED)

(note 43 25 77 2 NOTE_INSN_DELETED)

(insn:TI 77 43 82 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:350 (set (reg/f:SI 3 r3 [147])
        (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x10f31f60 cpu_tlb>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x10f31f60 cpu_tlb>)
        (nil)))

(insn/f:TI 82 77 83 2 arch/arm/kernel/smp_tlb.c:45 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 4 r4)
                    ] 2))
            (use (reg:SI 5 r5))
            (use (reg:SI 6 r6))
            (use (reg:SI 14 lr))
        ]) 327 {*push_multi} (expr_list:REG_DEAD (reg:SI 5 r5)
        (expr_list:REG_DEAD (reg:SI 4 r4)
            (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                        (set/f (reg/f:SI 13 sp)
                            (plus:SI (reg/f:SI 13 sp)
                                (const_int -16 [0xfffffffffffffff0])))
                        (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                            (reg:SI 4 r4))
                        (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                    (const_int 4 [0x4])) [0 S4 A32])
                            (reg:SI 5 r5))
                        (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                    (const_int 8 [0x8])) [0 S4 A32])
                            (reg:SI 6 r6))
                        (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                    (const_int 12 [0xc])) [0 S4 A32])
                            (reg:SI 14 lr))
                    ])
                (nil)))))

(note 83 82 7 2 NOTE_INSN_PROLOGUE_END)

(insn:TI 7 83 9 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:349 (set (reg:SI 5 r5 [orig:133 D.13829 ] [133])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 0 r0 [orig:146 arg ] [146])
                (const_int 352 [0x160])) [0 <variable>.context.id+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn:TI 9 7 88 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:350 (set (reg/v:SI 4 r4 [orig:134 __tlb_flag ] [134])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 3 r3 [147])
                (const_int 8 [0x8])) [0 cpu_tlb.tlb_flags+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 3 r3 [147])
        (expr_list:REG_EQUAL (mem/s/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x10f31f60 cpu_tlb>)
                        (const_int 8 [0x8]))) [0 cpu_tlb.tlb_flags+0 S4 A32])
            (nil))))

(note 88 9 10 2 ( __tlb_flag (expr_list:REG_DEP_TRUE (reg/v:SI 4 r4 [orig:134 __tlb_flag ] [134])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 10 88 79 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:353 (parallel [
            (asm_operands/v ("dsb") ("") 0 []
                 [] 5154555)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn:TI 79 10 74 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 2 r2)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn:TI 74 79 75 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 3 r3 [orig:135 D.13817 ] [135])
        (and:SI (reg:SI 2 r2)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 2 r2)
        (nil)))

(insn:TI 75 74 14 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 3 r3 [orig:135 D.13817 ] [135])
        (and:SI (reg/f:SI 3 r3 [orig:135 D.13817 ] [135])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn:TI 14 75 15 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:355 (set (reg:SI 2 r2 [orig:149 <variable>.preempt_count ] [149])
        (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:135 D.13817 ] [135])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:135 D.13817 ] [135])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (nil)))

(insn:TI 15 14 16 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:355 (set (reg:SI 2 r2 [150])
        (plus:SI (reg:SI 2 r2 [orig:149 <variable>.preempt_count ] [149])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:135 D.13817 ] [135])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (nil)))

(insn 16 15 17 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:355 (set (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:135 D.13817 ] [135])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (reg:SI 2 r2 [150])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [150])
        (nil)))

(insn:TI 17 16 22 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:355 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 5154814)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn:TI 22 17 19 2 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 2 r2 [orig:155 <variable>.cpu ] [155])
        (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:135 D.13817 ] [135])
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:135 D.13817 ] [135])
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])
        (nil)))

(insn 19 22 89 2 include/asm-generic/bitops/non-atomic.h:105 (set (reg/f:SI 0 r0 [151])
        (plus:SI (reg/v/f:SI 0 r0 [orig:146 arg ] [146])
            (const_int 348 [0x15c]))) 4 {*arm_addsi3} (nil))

(note 89 19 24 2 ( arg (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 24 89 80 2 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 1 r1 [157])
        (plus:SI (reg:SI 2 r2 [orig:155 <variable>.cpu ] [155])
            (const_int 31 [0x1f]))) 4 {*arm_addsi3} (nil))

(insn 80 24 81 2 include/asm-generic/bitops/non-atomic.h:105 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2 r2 [orig:155 <variable>.cpu ] [155])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn:TI 81 80 27 2 include/asm-generic/bitops/non-atomic.h:105 (cond_exec (lt (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 2 r2 [orig:156 <variable>.cpu ] [156])
            (reg:SI 1 r1 [157]))) 2345 {neon_vornv2di+78} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_DEAD (reg:SI 1 r1 [157])
            (nil))))

(insn:TI 27 81 30 2 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 2 r2 [158])
        (ashiftrt:SI (reg:SI 2 r2 [orig:156 <variable>.cpu ] [156])
            (const_int 5 [0x5]))) 117 {*arm_shiftsi3} (expr_list:REG_EQUAL (div:SI (reg:SI 2 r2 [orig:155 <variable>.cpu ] [155])
            (const_int 32 [0x20]))
        (nil)))

(insn:TI 30 27 31 2 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 2 r2 [orig:138 D.13810 ] [138])
        (mem/v:SI (plus:SI (mult:SI (reg:SI 2 r2 [158])
                    (const_int 4 [0x4]))
                (reg/f:SI 0 r0 [151])) [0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 0 r0 [151])
        (expr_list:REG_UNUSED (reg:SI 2 r2 [orig:138 D.13810 ] [138])
            (nil))))

(insn:TI 31 30 35 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:365 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 5156090)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn:TI 35 31 36 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:365 (set (reg:SI 2 r2 [orig:161 <variable>.preempt_count ] [161])
        (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:135 D.13817 ] [135])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:135 D.13817 ] [135])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (nil)))

(insn:TI 36 35 37 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:365 (set (reg:SI 2 r2 [162])
        (plus:SI (reg:SI 2 r2 [orig:161 <variable>.preempt_count ] [161])
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:135 D.13817 ] [135])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (nil)))

(insn 37 36 38 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:365 (set (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:135 D.13817 ] [135])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (reg:SI 2 r2 [162])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [162])
        (nil)))

(insn:TI 38 37 42 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:365 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 5156090)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn:TI 42 38 44 2 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 3 r3 [orig:143 D.13797 ] [143])
        (mem/v:SI (reg/f:SI 3 r3 [orig:135 D.13817 ] [135]) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn:TI 44 42 45 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:365 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 3 r3 [orig:143 D.13797 ] [143])
                (const_int 1 [0x1])
                (const_int 1 [0x1]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg:SI 3 r3 [orig:143 D.13797 ] [143])
        (nil)))

(jump_insn:TI 45 44 46 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:365 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 48)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]


;; Succ edge  3 [0.0%]  (fallthru)
;; Succ edge  4 [100.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  gen 	
;; live  kill	 14 [lr]

;; Pred edge  2 [0.0%]  (fallthru)
(note 46 45 47 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(call_insn:TI 47 46 48 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:365 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("preempt_schedule") [flags 0x41] <function_decl 0x10a55380 preempt_schedule>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))
;; End of basic block 3 -> ( 4)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp]


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  2 [100.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 48 47 49 4 50 "" [1 uses])

(note 49 48 50 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 50 49 51 4 NOTE_INSN_DELETED)

(insn:TI 51 50 52 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:367 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 4 r4 [orig:134 __tlb_flag ] [134])
                (const_int 1 [0x1])
                (const_int 16 [0x10]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn:TI 52 51 53 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:367 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 56)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]


;; Succ edge  5 [50.0%]  (fallthru)
;; Succ edge  6 [50.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3]
;; live  kill	 24 [cc]

;; Pred edge  4 [50.0%]  (fallthru)
(note 53 52 54 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn:TI 54 53 55 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:368 (set (reg:SI 3 r3 [166])
        (and:SI (reg:SI 5 r5 [orig:133 D.13829 ] [133])
            (const_int 255 [0xff]))) 67 {*arm_andsi3_insn} (nil))

(insn:TI 55 54 56 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:368 (parallel [
            (asm_operands/v ("mcr p15, 0, %0, c8, c7, 2") ("") 0 [
                    (reg:SI 3 r3 [166])
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 5156475)
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg:SI 3 r3 [166])
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))
;; End of basic block 5 -> ( 6)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]


;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 4 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  4 [50.0%] 
;; Pred edge  5 [100.0%]  (fallthru)
(code_label 56 55 57 6 51 "" [1 uses])

(note 57 56 58 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note 58 57 59 6 NOTE_INSN_DELETED)

(insn:TI 59 58 60 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:373 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 4 r4 [orig:134 __tlb_flag ] [134])
                (const_int 1 [0x1])
                (const_int 21 [0x15]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn:TI 60 59 61 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:373 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 64)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 6 -> ( 7 8)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]


;; Succ edge  7 [61.0%]  (fallthru)
;; Succ edge  8 [39.0%] 

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3]
;; live  kill	 24 [cc]

;; Pred edge  6 [61.0%]  (fallthru)
(note 61 60 62 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn:TI 62 61 63 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:375 (set (reg:SI 3 r3 [168])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 0 [0x0])
        (nil)))

(insn:TI 63 62 64 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:375 (parallel [
            (asm_operands/v ("mcr p15, 0, %0, c8, c3, 0") ("") 0 [
                    (reg:SI 3 r3 [168])
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 5157371)
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg:SI 3 r3 [168])
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))
;; End of basic block 7 -> ( 8)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]


;; Succ edge  8 [100.0%]  (fallthru)

;; Start of basic block ( 6 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  6 [39.0%] 
;; Pred edge  7 [100.0%]  (fallthru)
(code_label 64 63 65 8 52 "" [1 uses])

(note 65 64 66 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn:TI 66 65 84 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:381 (parallel [
            (asm_operands/v ("dsb") ("") 0 []
                 [] 5158139)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(note 84 66 85 8 NOTE_INSN_EPILOGUE_BEG)

(jump_insn:TI 85 84 86 8 arch/arm/kernel/smp_tlb.c:49 (return) 260 {return} (nil))
;; End of basic block 8 -> ( 1)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%] 

(barrier 86 85 76)

(note 76 86 78 NOTE_INSN_DELETED)

(note 78 76 0 NOTE_INSN_DELETED)


;; Function on_each_cpu_mask.clone.0 (on_each_cpu_mask.clone.0)[0:758]


Basic block 2:
IN:
Stack adjustment: 0
Reg 0: func+0
Reg 1: info+0
Reg 2: mask+0
Variables:
  name: func
    offset 0
      (reg:SI 0 r0 [ func ])
  name: info
    offset 0
      (reg:SI 1 r1 [ info ])
  name: mask
    offset 0
      (reg:SI 2 r2 [ mask ])

OUT:
Stack adjustment: 24
Reg 5: func+0
Reg 6: info+0
Reg 7: mask+0
Variables:
  name: func
    offset 0
      (reg/v/f:SI 5 r5 [orig:144 func ] [144])
  name: info
    offset 0
      (reg/v/f:SI 6 r6 [orig:145 info ] [145])
  name: mask
    offset 0
      (reg/v/f:SI 7 r7 [orig:146 mask ] [146])


Basic block 3:
IN:
Stack adjustment: 24
Reg 5: func+0
Reg 6: info+0
Reg 7: mask+0
Variables:
  name: func
    offset 0
      (reg/v/f:SI 5 r5 [orig:144 func ] [144])
  name: info
    offset 0
      (reg/v/f:SI 6 r6 [orig:145 info ] [145])
  name: mask
    offset 0
      (reg/v/f:SI 7 r7 [orig:146 mask ] [146])

OUT:
Stack adjustment: 24
Reg 5: func+0
Reg 6: info+0
Reg 7: mask+0
Variables:
  name: func
    offset 0
      (reg/v/f:SI 5 r5 [orig:144 func ] [144])
  name: info
    offset 0
      (reg/v/f:SI 6 r6 [orig:145 info ] [145])
  name: mask
    offset 0
      (reg/v/f:SI 7 r7 [orig:146 mask ] [146])


Basic block 4:
IN:
Stack adjustment: 24
Reg 5: func+0
Reg 6: info+0
Reg 7: mask+0
Variables:
  name: func
    offset 0
      (reg/v/f:SI 5 r5 [orig:144 func ] [144])
  name: info
    offset 0
      (reg/v/f:SI 6 r6 [orig:145 info ] [145])
  name: mask
    offset 0
      (reg/v/f:SI 7 r7 [orig:146 mask ] [146])

OUT:
Stack adjustment: 24
Reg 5: func+0
Reg 6: info+0
Reg 7: mask+0
Variables:
  name: func
    offset 0
      (reg/v/f:SI 5 r5 [orig:144 func ] [144])
  name: info
    offset 0
      (reg/v/f:SI 6 r6 [orig:145 info ] [145])
  name: mask
    offset 0
      (reg/v/f:SI 7 r7 [orig:146 mask ] [146])


Basic block 5:
IN:
Stack adjustment: 24
Reg 5: func+0
Reg 6: info+0
Reg 7: mask+0
Variables:
  name: func
    offset 0
      (reg/v/f:SI 5 r5 [orig:144 func ] [144])
  name: info
    offset 0
      (reg/v/f:SI 6 r6 [orig:145 info ] [145])
  name: mask
    offset 0
      (reg/v/f:SI 7 r7 [orig:146 mask ] [146])

OUT:
Stack adjustment: 24
Reg 5: func+0
Reg 6: info+0
Reg 7: mask+0
Variables:
  name: func
    offset 0
      (reg/v/f:SI 5 r5 [orig:144 func ] [144])
  name: info
    offset 0
      (reg/v/f:SI 6 r6 [orig:145 info ] [145])
  name: mask
    offset 0
      (reg/v/f:SI 7 r7 [orig:146 mask ] [146])


6 basic blocks, 7 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(7){ }d-1(8){ }d-1(13){ }d-1(14){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 12 [ip] 13 [sp] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 24 [cc]
;; live  kill	 14 [lr]

Successors:  3 [29.0%]  (fallthru) 4 [71.0%] 
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 2900, maybe hot.
Predecessors:  2 [29.0%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 5 [r5] 6 [r6] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

Successors:  4 [100.0%]  (fallthru)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  2 [71.0%]  3 [100.0%]  (fallthru)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3] 24 [cc]
;; live  kill	

Successors:  5 [0.0%]  (fallthru) EXIT [100.0%] 
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


Basic block 5 , prev 4, next 1, loop_depth 0, count 0, freq 4, maybe hot.
Predecessors:  4 [0.0%]  (fallthru)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	
;; live  kill	

Successors:  EXIT [100.0%]  (ab,sibcall)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


Basic block 1 , prev 5, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  5 [100.0%]  (ab,sibcall) 4 [100.0%] 
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(4){ }u-1(5){ }u-1(6){ }u-1(7){ }u-1(8){ }u-1(13){ }u-1(14){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  def 	
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	




on_each_cpu_mask.clone.0

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;;  exit block uses 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 7[r7] 8[r8] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={6d,3u} r1={6d,3u} r2={9d,7u} r3={16d,17u,3d} r4={3d,6u,2d} r5={2d,4u} r6={2d,4u} r7={2d,3u} r8={1d,2u} r12={3d} r13={2d,11u} r14={3d,3u} r15={3d} r16={3d} r17={3d} r18={3d} r19={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={6d,3u} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r81={3d} r82={3d} r83={3d} r84={3d} r85={3d} r86={3d} r87={3d} r88={3d} r89={3d} r90={3d} r91={3d} r92={3d} r93={3d} r94={3d} r95={3d} r96={3d} r97={3d} r98={3d} r99={3d} r100={3d} r101={3d} r102={3d} r103={3d} r104={3d} r105={3d} r106={3d} r107={3d} r108={3d} r109={3d} r110={3d} r111={3d} r112={3d} r113={3d} r114={3d} r115={3d} r116={3d} r117={3d} r118={3d} r119={3d} r120={3d} r121={3d} r122={3d} r123={3d} r124={3d} r125={3d} r126={3d} r127={3d} 
;;    total ref usage 462{391d,66u,5e} in 41{38 regular + 3 call} insns.
(note 1 0 85 NOTE_INSN_DELETED)

(note 85 1 86 2 ( func (expr_list:REG_DEP_TRUE (reg:SI 0 r0 [ func ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 86 85 87 2 ( info (expr_list:REG_DEP_TRUE (reg:SI 1 r1 [ info ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 87 86 6 2 ( mask (expr_list:REG_DEP_TRUE (reg:SI 2 r2 [ mask ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 12 [ip] 13 [sp] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 87 5 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 5 6 9 2 NOTE_INSN_FUNCTION_BEG)

(note 9 5 26 2 NOTE_INSN_DELETED)

(note 26 9 34 2 NOTE_INSN_DELETED)

(note 34 26 79 2 NOTE_INSN_DELETED)

(insn/f:TI 79 34 80 2 arch/arm/kernel/smp_tlb.c:16 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 4 r4)
                    ] 2))
            (use (reg:SI 5 r5))
            (use (reg:SI 6 r6))
            (use (reg:SI 7 r7))
            (use (reg:SI 8 r8))
            (use (reg:SI 14 lr))
        ]) 327 {*push_multi} (expr_list:REG_DEAD (reg:SI 14 lr)
        (expr_list:REG_DEAD (reg:SI 7 r7)
            (expr_list:REG_DEAD (reg:SI 6 r6)
                (expr_list:REG_DEAD (reg:SI 5 r5)
                    (expr_list:REG_DEAD (reg:SI 4 r4)
                        (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                                    (set/f (reg/f:SI 13 sp)
                                        (plus:SI (reg/f:SI 13 sp)
                                            (const_int -24 [0xffffffffffffffe8])))
                                    (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                                        (reg:SI 4 r4))
                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                (const_int 4 [0x4])) [0 S4 A32])
                                        (reg:SI 5 r5))
                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                (const_int 8 [0x8])) [0 S4 A32])
                                        (reg:SI 6 r6))
                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                (const_int 12 [0xc])) [0 S4 A32])
                                        (reg:SI 7 r7))
                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                (const_int 16 [0x10])) [0 S4 A32])
                                        (reg:SI 8 r8))
                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                (const_int 20 [0x14])) [0 S4 A32])
                                        (reg:SI 14 lr))
                                ])
                            (nil))))))))

(note 80 79 75 2 NOTE_INSN_PROLOGUE_END)

(insn:TI 75 80 71 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 3 r3)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn:TI 71 75 2 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 4 r4 [orig:134 D.13871 ] [134])
        (and:SI (reg:SI 3 r3)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 3 r3)
        (nil)))

(insn 2 71 72 2 arch/arm/kernel/smp_tlb.c:16 (set (reg/v/f:SI 5 r5 [orig:144 func ] [144])
        (reg:SI 0 r0 [ func ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ func ])
        (nil)))

(insn:TI 72 2 3 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 4 r4 [orig:134 D.13871 ] [134])
        (and:SI (reg/f:SI 4 r4 [orig:134 D.13871 ] [134])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 3 72 4 2 arch/arm/kernel/smp_tlb.c:16 (set (reg/v/f:SI 6 r6 [orig:145 info ] [145])
        (reg:SI 1 r1 [ info ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ info ])
        (nil)))

(insn:TI 4 3 11 2 arch/arm/kernel/smp_tlb.c:16 (set (reg/v/f:SI 7 r7 [orig:146 mask ] [146])
        (reg:SI 2 r2 [ mask ])) 167 {*arm_movsi_insn} (nil))

(insn:TI 11 4 12 2 arch/arm/kernel/smp_tlb.c:19 (set (reg:SI 3 r3 [orig:148 <variable>.preempt_count ] [148])
        (mem/s/j:SI (plus:SI (reg/f:SI 4 r4 [orig:134 D.13871 ] [134])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/f:SI 4 r4 [orig:134 D.13871 ] [134])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (nil)))

(insn:TI 12 11 13 2 arch/arm/kernel/smp_tlb.c:19 (set (reg:SI 3 r3 [149])
        (plus:SI (reg:SI 3 r3 [orig:148 <variable>.preempt_count ] [148])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/f:SI 4 r4 [orig:134 D.13871 ] [134])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (nil)))

(insn 13 12 14 2 arch/arm/kernel/smp_tlb.c:19 (set (mem/s/j:SI (plus:SI (reg/f:SI 4 r4 [orig:134 D.13871 ] [134])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (reg:SI 3 r3 [149])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [149])
        (nil)))

(insn:TI 14 13 18 2 arch/arm/kernel/smp_tlb.c:19 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 5180162)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn:TI 18 14 15 2 arch/arm/kernel/smp_tlb.c:21 (set (reg:SI 3 r3)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 15 18 88 2 arch/arm/kernel/smp_tlb.c:21 (set (reg:SI 0 r0)
        (reg/f:SI 2 r2 [orig:146 mask ] [146])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 2 r2 [orig:146 mask ] [146])
        (nil)))

(note 88 15 16 2 ( func (expr_list:REG_DEP_TRUE (reg/v/f:SI 5 r5 [orig:144 func ] [144])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 16 88 89 2 arch/arm/kernel/smp_tlb.c:21 (set (reg:SI 1 r1)
        (reg/v/f:SI 5 r5 [orig:144 func ] [144])) 167 {*arm_movsi_insn} (nil))

(note 89 16 17 2 ( info (expr_list:REG_DEP_TRUE (reg/v/f:SI 6 r6 [orig:145 info ] [145])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn 17 89 90 2 arch/arm/kernel/smp_tlb.c:21 (set (reg:SI 2 r2)
        (reg/v/f:SI 6 r6 [orig:145 info ] [145])) 167 {*arm_movsi_insn} (nil))

(note 90 17 19 2 ( mask (expr_list:REG_DEP_TRUE (reg/v/f:SI 7 r7 [orig:146 mask ] [146])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(call_insn:TI 19 90 23 2 arch/arm/kernel/smp_tlb.c:21 (parallel [
            (call (mem:SI (symbol_ref:SI ("smp_call_function_many") [flags 0x41] <function_decl 0x10b23100 smp_call_function_many>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_DEAD (reg:SI 0 r0)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 23 19 77 2 arch/arm/kernel/smp_tlb.c:22 (set (reg:SI 3 r3 [orig:133 D.13877 ] [133])
        (mem/s/j:SI (plus:SI (reg/f:SI 4 r4 [orig:134 D.13871 ] [134])
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn:TI 77 23 25 2 include/asm-generic/bitops/non-atomic.h:105 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [orig:133 D.13877 ] [133])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn 25 77 32 2 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 1 r1 [154])
        (plus:SI (reg:SI 3 r3 [orig:133 D.13877 ] [133])
            (const_int 31 [0x1f]))) 4 {*arm_addsi3} (nil))

(insn:TI 32 25 78 2 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 2 r2 [157])
        (and:SI (reg:SI 3 r3 [orig:133 D.13877 ] [133])
            (const_int 31 [0x1f]))) 67 {*arm_andsi3_insn} (nil))

(insn 78 32 28 2 include/asm-generic/bitops/non-atomic.h:105 (cond_exec (lt (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 3 r3 [orig:153 D.13877 ] [153])
            (reg:SI 1 r1 [154]))) 2345 {neon_vornv2di+78} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_DEAD (reg:SI 1 r1 [154])
            (nil))))

(insn:TI 28 78 31 2 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 3 r3 [155])
        (ashiftrt:SI (reg:SI 3 r3 [orig:153 D.13877 ] [153])
            (const_int 5 [0x5]))) 117 {*arm_shiftsi3} (expr_list:REG_EQUAL (div:SI (reg:SI 3 r3 [orig:133 D.13877 ] [133])
            (const_int 32 [0x20]))
        (nil)))

(insn:TI 31 28 33 2 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 3 r3 [orig:137 D.13860 ] [137])
        (mem/v:SI (plus:SI (mult:SI (reg:SI 3 r3 [155])
                    (const_int 4 [0x4]))
                (reg/v/f:SI 7 r7 [orig:146 mask ] [146])) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn:TI 33 31 35 2 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 3 r3 [158])
        (lshiftrt:SI (reg:SI 3 r3 [orig:137 D.13860 ] [137])
            (reg:SI 2 r2 [157]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 2 r2 [157])
        (nil)))

(insn:TI 35 33 36 2 include/asm-generic/bitops/non-atomic.h:105 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 3 r3 [158])
                (const_int 1 [0x1])
                (const_int 0 [0x0]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg:SI 3 r3 [158])
        (nil)))

(jump_insn:TI 36 35 37 2 include/asm-generic/bitops/non-atomic.h:105 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 40)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (nil)))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  3 [29.0%]  (fallthru)
;; Succ edge  4 [71.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 5 [r5] 6 [r6] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  2 [29.0%]  (fallthru)
(note 37 36 38 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn:TI 38 37 39 3 arch/arm/kernel/smp_tlb.c:23 (set (reg:SI 0 r0)
        (reg/v/f:SI 6 r6 [orig:145 info ] [145])) 167 {*arm_movsi_insn} (nil))

(call_insn:TI 39 38 40 3 arch/arm/kernel/smp_tlb.c:23 (parallel [
            (call (mem:SI (reg/v/f:SI 5 r5 [orig:144 func ] [144]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 244 {*call_reg_armv5} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 3 -> ( 4)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  2 [71.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 40 39 41 4 57 "" [1 uses])

(note 41 40 44 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 44 41 54 4 NOTE_INSN_DELETED)

(note 54 44 42 4 NOTE_INSN_DELETED)

(insn:TI 42 54 76 4 arch/arm/kernel/smp_tlb.c:25 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 5180930)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn:TI 76 42 69 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 2 r2)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn:TI 69 76 70 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 3 r3 [orig:139 D.13855 ] [139])
        (and:SI (reg:SI 2 r2)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 2 r2)
        (nil)))

(insn:TI 70 69 46 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 3 r3 [orig:139 D.13855 ] [139])
        (and:SI (reg/f:SI 3 r3 [orig:139 D.13855 ] [139])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn:TI 46 70 47 4 arch/arm/kernel/smp_tlb.c:25 (set (reg:SI 2 r2 [orig:161 <variable>.preempt_count ] [161])
        (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:139 D.13855 ] [139])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:139 D.13855 ] [139])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (nil)))

(insn:TI 47 46 48 4 arch/arm/kernel/smp_tlb.c:25 (set (reg:SI 2 r2 [162])
        (plus:SI (reg:SI 2 r2 [orig:161 <variable>.preempt_count ] [161])
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:139 D.13855 ] [139])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (nil)))

(insn 48 47 49 4 arch/arm/kernel/smp_tlb.c:25 (set (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:139 D.13855 ] [139])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (reg:SI 2 r2 [162])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [162])
        (nil)))

(insn:TI 49 48 53 4 arch/arm/kernel/smp_tlb.c:25 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 5180930)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn:TI 53 49 55 4 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 3 r3 [orig:142 D.13847 ] [142])
        (mem/v:SI (reg/f:SI 3 r3 [orig:139 D.13855 ] [139]) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn:TI 55 53 56 4 arch/arm/kernel/smp_tlb.c:25 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 3 r3 [orig:142 D.13847 ] [142])
                (const_int 1 [0x1])
                (const_int 1 [0x1]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg:SI 3 r3 [orig:142 D.13847 ] [142])
        (nil)))

(jump_insn:TI 56 55 57 4 arch/arm/kernel/smp_tlb.c:25 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (return)
            (pc))) 261 {*cond_return} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (nil)))
;; End of basic block 4 -> ( 5 1)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  5 [0.0%]  (fallthru)
;; Succ edge  EXIT [100.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	
;; live  kill	

;; Pred edge  4 [0.0%]  (fallthru)
(note 57 56 83 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 83 57 84 5 NOTE_INSN_EPILOGUE_BEG)

(insn:TI 84 83 58 5 arch/arm/kernel/smp_tlb.c:26 (parallel [
            (unspec:SI [
                    (reg:SI 14 lr)
                ] 6)
            (unspec_volatile [
                    (return)
                ] 1)
        ]) 322 {sibcall_epilogue} (expr_list:REG_DEAD (reg:SI 14 lr)
        (nil)))

(call_insn/j:TI 58 84 59 5 arch/arm/kernel/smp_tlb.c:25 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("preempt_schedule") [flags 0x41] <function_decl 0x10a55380 preempt_schedule>) [0 S4 A32])
                (const_int 0 [0x0]))
            (return)
            (use (const_int 0 [0x0]))
        ]) 258 {*sibcall_insn} (nil)
    (nil))
;; End of basic block 5 -> ( 1)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 59 58 73)

(note 73 59 74 NOTE_INSN_DELETED)

(note 74 73 0 NOTE_INSN_DELETED)


;; Function flush_tlb_mm (flush_tlb_mm)[0:753]


Basic block 2:
IN:
Stack adjustment: 0
Reg 0: mm+0
Variables:
  name: mm
    offset 0
      (reg:SI 0 r0 [ mm ])

OUT:
Stack adjustment: 16
Reg 0: mm+0
Reg 1: mm+0
Variables:
  name: mm
    offset 0
      (reg/v/f:SI 1 r1 [orig:146 mm ] [146])
      (reg:SI 0 r0 [ mm ])


Basic block 3:
IN:
Stack adjustment: 16
Reg 0: mm+0
Reg 1: mm+0
Variables:
  name: mm
    offset 0
      (reg/v/f:SI 1 r1 [orig:146 mm ] [146])
      (reg:SI 0 r0 [ mm ])

OUT:
Stack adjustment: 16
Reg 0: mm+0
Reg 1: mm+0
Variables:
  name: mm
    offset 0
      (reg/v/f:SI 1 r1 [orig:146 mm ] [146])
      (reg:SI 0 r0 [ mm ])


Basic block 4:
IN:
Stack adjustment: 16
Reg 0: mm+0
Reg 1: mm+0
Variables:
  name: mm
    offset 0
      (reg/v/f:SI 1 r1 [orig:146 mm ] [146])
      (reg:SI 0 r0 [ mm ])

OUT:
Stack adjustment: 16


Basic block 5:
IN:
Stack adjustment: 16
Reg 0: mm+0
Reg 1: mm+0
Variables:
  name: mm
    offset 0
      (reg/v/f:SI 1 r1 [orig:146 mm ] [146])
      (reg:SI 0 r0 [ mm ])

OUT:
Stack adjustment: 16
Reg 4: __tlb_flag+0
Variables:
  name: __tlb_flag
    offset 0
      (reg/v:SI 4 r4 [orig:134 __tlb_flag ] [134])


Basic block 6:
IN:
Stack adjustment: 16
Reg 4: __tlb_flag+0
Variables:
  name: __tlb_flag
    offset 0
      (reg/v:SI 4 r4 [orig:134 __tlb_flag ] [134])

OUT:
Stack adjustment: 16
Reg 4: __tlb_flag+0
Variables:
  name: __tlb_flag
    offset 0
      (reg/v:SI 4 r4 [orig:134 __tlb_flag ] [134])


Basic block 7:
IN:
Stack adjustment: 16
Reg 4: __tlb_flag+0
Variables:
  name: __tlb_flag
    offset 0
      (reg/v:SI 4 r4 [orig:134 __tlb_flag ] [134])

OUT:
Stack adjustment: 16
Reg 4: __tlb_flag+0
Variables:
  name: __tlb_flag
    offset 0
      (reg/v:SI 4 r4 [orig:134 __tlb_flag ] [134])


Basic block 8:
IN:
Stack adjustment: 16
Reg 4: __tlb_flag+0
Variables:
  name: __tlb_flag
    offset 0
      (reg/v:SI 4 r4 [orig:134 __tlb_flag ] [134])

OUT:
Stack adjustment: 16
Reg 4: __tlb_flag+0
Variables:
  name: __tlb_flag
    offset 0
      (reg/v:SI 4 r4 [orig:134 __tlb_flag ] [134])


Basic block 9:
IN:
Stack adjustment: 16
Reg 4: __tlb_flag+0
Variables:
  name: __tlb_flag
    offset 0
      (reg/v:SI 4 r4 [orig:134 __tlb_flag ] [134])

OUT:
Stack adjustment: 16
Reg 4: __tlb_flag+0
Variables:
  name: __tlb_flag
    offset 0
      (reg/v:SI 4 r4 [orig:134 __tlb_flag ] [134])


Basic block 10:
IN:
Stack adjustment: 16
Reg 4: __tlb_flag+0
Variables:
  name: __tlb_flag
    offset 0
      (reg/v:SI 4 r4 [orig:134 __tlb_flag ] [134])

OUT:
Stack adjustment: 16
Reg 4: __tlb_flag+0
Variables:
  name: __tlb_flag
    offset 0
      (reg/v:SI 4 r4 [orig:134 __tlb_flag ] [134])


Basic block 11:
IN:
Stack adjustment: 16
Reg 4: __tlb_flag+0
Variables:
  name: __tlb_flag
    offset 0
      (reg/v:SI 4 r4 [orig:134 __tlb_flag ] [134])

OUT:
Stack adjustment: 16
Reg 4: __tlb_flag+0
Variables:
  name: __tlb_flag
    offset 0
      (reg/v:SI 4 r4 [orig:134 __tlb_flag ] [134])


12 basic blocks, 16 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(13){ }d-1(14){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  def 	 1 [r1] 3 [r3] 13 [sp] 24 [cc]
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  gen 	 1 [r1] 3 [r3] 13 [sp] 24 [cc]
;; live  kill	

Successors:  5 [50.0%]  3 [50.0%]  (fallthru)
;; lr  out 	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 5000, maybe hot.
Predecessors:  2 [50.0%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	 24 [cc]

Successors:  4 [41.4%]  (fallthru) 5 [58.6%] 
;; lr  out 	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 2071, maybe hot.
Predecessors:  3 [41.4%]  (fallthru)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 2 [r2]
;; live  kill	

Successors:  EXIT [100.0%]  (ab,sibcall)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]


Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 7929, maybe hot.
Predecessors:  3 [58.6%]  2 [50.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 24 [cc]
;; live  in  	 1 [r1] 6 [r6] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 24 [cc]
;; live  kill	

Successors:  6 [0.0%]  (fallthru) 7 [100.0%] 
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]


Basic block 6 , prev 5, next 7, loop_depth 0, count 0, freq 3.
Predecessors:  5 [0.0%]  (fallthru)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  gen 	
;; live  kill	 14 [lr]

Successors:  7 [100.0%]  (fallthru)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp]


Basic block 7 , prev 6, next 8, loop_depth 0, count 0, freq 7929, maybe hot.
Predecessors:  5 [100.0%]  6 [100.0%]  (fallthru)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  8 [50.0%]  (fallthru) 9 [50.0%] 
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]


Basic block 8 , prev 7, next 9, loop_depth 0, count 0, freq 3964, maybe hot.
Predecessors:  7 [50.0%]  (fallthru)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3]
;; live  kill	 24 [cc]

Successors:  9 [100.0%]  (fallthru)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]


Basic block 9 , prev 8, next 10, loop_depth 0, count 0, freq 7929, maybe hot.
Predecessors:  7 [50.0%]  8 [100.0%]  (fallthru)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  10 [50.0%]  (fallthru) 11 [50.0%] 
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]


Basic block 10 , prev 9, next 11, loop_depth 0, count 0, freq 3964, maybe hot.
Predecessors:  9 [50.0%]  (fallthru)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3]
;; live  kill	 24 [cc]

Successors:  11 [100.0%]  (fallthru)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]


Basic block 11 , prev 10, next 1, loop_depth 0, count 0, freq 7929, maybe hot.
Predecessors:  9 [50.0%]  10 [100.0%]  (fallthru)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

Successors:  EXIT [100.0%] 
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]


Basic block 1 , prev 11, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  4 [100.0%]  (ab,sibcall) 11 [100.0%] 
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(4){ }u-1(5){ }u-1(6){ }u-1(13){ }u-1(14){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  def 	
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	




flush_tlb_mm

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;;  exit block uses 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={5d,3u} r1={5d,5u} r2={13d,11u,1d} r3={13d,15u,5d} r4={2d,4u} r5={2d,3u} r6={1d,2u} r12={2d} r13={2d,15u} r14={2d,3u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={11d,6u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} 
;;    total ref usage 351{278d,67u,6e} in 51{49 regular + 2 call} insns.
(note 1 0 110 NOTE_INSN_DELETED)

(note 110 1 4 2 ( mm (expr_list:REG_DEP_TRUE (reg:SI 0 r0 [ mm ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  def 	 1 [r1] 3 [r3] 13 [sp] 24 [cc]
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  gen 	 1 [r1] 3 [r3] 13 [sp] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 110 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 98 2 NOTE_INSN_FUNCTION_BEG)

(insn:TI 98 3 2 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:28 (set (reg/f:SI 3 r3 [147])
        (symbol_ref:SI ("smp_on_up") [flags 0xc0] <var_decl 0x10b1dc00 smp_on_up>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("smp_on_up") [flags 0xc0] <var_decl 0x10b1dc00 smp_on_up>)
        (nil)))

(insn 2 98 103 2 arch/arm/kernel/smp_tlb.c:88 (set (reg/v/f:SI 1 r1 [orig:146 mm ] [146])
        (reg:SI 0 r0 [ mm ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ mm ])
        (nil)))

(insn/f:TI 103 2 104 2 arch/arm/kernel/smp_tlb.c:88 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 4 r4)
                    ] 2))
            (use (reg:SI 5 r5))
            (use (reg:SI 6 r6))
            (use (reg:SI 14 lr))
        ]) 327 {*push_multi} (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                (set/f (reg/f:SI 13 sp)
                    (plus:SI (reg/f:SI 13 sp)
                        (const_int -16 [0xfffffffffffffff0])))
                (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                    (reg:SI 4 r4))
                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                            (const_int 4 [0x4])) [0 S4 A32])
                    (reg:SI 5 r5))
                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                            (const_int 8 [0x8])) [0 S4 A32])
                    (reg:SI 6 r6))
                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                            (const_int 12 [0xc])) [0 S4 A32])
                    (reg:SI 14 lr))
            ])
        (nil)))

(note 104 103 7 2 NOTE_INSN_PROLOGUE_END)

(insn:TI 7 104 8 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:28 (set (reg:SI 3 r3 [orig:148 smp_on_up ] [148])
        (mem/c/i:SI (reg/f:SI 3 r3 [147]) [0 smp_on_up+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("smp_on_up") [flags 0xc0] <var_decl 0x10b1dc00 smp_on_up>) [0 smp_on_up+0 S4 A32])
        (nil)))

(insn:TI 8 7 9 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:28 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [orig:148 smp_on_up ] [148])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [orig:148 smp_on_up ] [148])
        (nil)))

(jump_insn:TI 9 8 111 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:28 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 24)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 2 -> ( 5 3)
;; lr  out 	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]


;; Succ edge  5 [50.0%] 
;; Succ edge  3 [50.0%]  (fallthru)

(note 111 9 10 3 ( mm (expr_list:REG_DEP_TRUE (reg/v/f:SI 1 r1 [orig:146 mm ] [146])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	 24 [cc]

;; Pred edge  2 [50.0%]  (fallthru)
(note 10 111 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 12 10 11 3 NOTE_INSN_DELETED)

(insn:TI 11 12 112 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:31 (parallel [
            (set (reg/v:SI 3 r3 [orig:145 __val ] [145])
                (asm_operands:SI ("mrc	p15, 0, %0, c0, c1, 7") ("=r") 0 []
                     [] 2012747))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(note 112 11 13 3 ( __val (expr_list:REG_DEP_TRUE (reg/v:SI 3 r3 [orig:145 __val ] [145])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 13 112 113 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:31 (set (reg:SI 3 r3 [150])
        (zero_extract:SI (reg/v:SI 3 r3 [orig:145 __val ] [145])
            (const_int 4 [0x4])
            (const_int 12 [0xc]))) 124 {extzv_t2} (nil))

(note 113 13 14 3 ( __val (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 14 113 15 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:31 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [150])
            (const_int 1 [0x1]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [150])
        (nil)))

(jump_insn:TI 15 14 16 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:31 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 24)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5858 [0x16e2])
            (nil))))
;; End of basic block 3 -> ( 4 5)
;; lr  out 	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]


;; Succ edge  4 [41.4%]  (fallthru)
;; Succ edge  5 [58.6%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 2 [r2]
;; live  kill	

;; Pred edge  3 [41.4%]  (fallthru)
(note 16 15 18 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 18 16 19 4 NOTE_INSN_DELETED)

(insn:TI 19 18 21 4 arch/arm/kernel/smp_tlb.c:90 (set (reg:SI 0 r0)
        (symbol_ref:SI ("ipi_flush_tlb_mm") [flags 0x3] <function_decl 0x10f4ca00 ipi_flush_tlb_mm>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("ipi_flush_tlb_mm") [flags 0x3] <function_decl 0x10f4ca00 ipi_flush_tlb_mm>)
        (nil)))

(insn 21 19 114 4 arch/arm/kernel/smp_tlb.c:90 (set (reg:SI 2 r2)
        (plus:SI (reg:SI 1 r1)
            (const_int 348 [0x15c]))) 4 {*arm_addsi3} (nil))

(note 114 21 108 4 ( mm (nil)) NOTE_INSN_VAR_LOCATION)

(note 108 114 109 4 NOTE_INSN_EPILOGUE_BEG)

(insn:TI 109 108 22 4 arch/arm/kernel/smp_tlb.c:93 (parallel [
            (unspec:SI [
                    (reg:SI 14 lr)
                ] 6)
            (unspec_volatile [
                    (return)
                ] 1)
        ]) 322 {sibcall_epilogue} (nil))

(call_insn/j:TI 22 109 23 4 arch/arm/kernel/smp_tlb.c:90 (parallel [
            (call (mem:SI (symbol_ref:SI ("on_each_cpu_mask.clone.0") [flags 0x3] <function_decl 0x10f7ff80 on_each_cpu_mask.clone.0>) [0 S4 A32])
                (const_int 0 [0x0]))
            (return)
            (use (const_int 0 [0x0]))
        ]) 258 {*sibcall_insn} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_DEAD (reg:SI 0 r0)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))
;; End of basic block 4 -> ( 1)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 23 22 115)

(note 115 23 24 5 ( mm (expr_list:REG_DEP_TRUE (reg/v/f:SI 1 r1 [orig:146 mm ] [146])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 3 2) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 24 [cc]
;; live  in  	 1 [r1] 6 [r6] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 24 [cc]
;; live  kill	

;; Pred edge  3 [58.6%] 
;; Pred edge  2 [50.0%] 
(code_label 24 115 25 5 61 "" [2 uses])

(note 25 24 31 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 31 25 44 5 NOTE_INSN_DELETED)

(note 44 31 62 5 NOTE_INSN_DELETED)

(note 62 44 97 5 NOTE_INSN_DELETED)

(insn:TI 97 62 26 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:350 (set (reg/f:SI 3 r3 [153])
        (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x10f31f60 cpu_tlb>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x10f31f60 cpu_tlb>)
        (nil)))

(insn:TI 26 97 28 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:349 (set (reg:SI 5 r5 [orig:133 D.13780 ] [133])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 1 r1 [orig:146 mm ] [146])
                (const_int 352 [0x160])) [0 <variable>.context.id+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn:TI 28 26 116 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:350 (set (reg/v:SI 4 r4 [orig:134 __tlb_flag ] [134])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 3 r3 [153])
                (const_int 8 [0x8])) [0 cpu_tlb.tlb_flags+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 3 r3 [153])
        (expr_list:REG_EQUAL (mem/s/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x10f31f60 cpu_tlb>)
                        (const_int 8 [0x8]))) [0 cpu_tlb.tlb_flags+0 S4 A32])
            (nil))))

(note 116 28 29 5 ( __tlb_flag (expr_list:REG_DEP_TRUE (reg/v:SI 4 r4 [orig:134 __tlb_flag ] [134])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 29 116 100 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:353 (parallel [
            (asm_operands/v ("dsb") ("") 0 []
                 [] 5154555)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn:TI 100 29 94 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 2 r2)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn:TI 94 100 95 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 3 r3 [orig:135 D.13768 ] [135])
        (and:SI (reg:SI 2 r2)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 2 r2)
        (nil)))

(insn:TI 95 94 33 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 3 r3 [orig:135 D.13768 ] [135])
        (and:SI (reg/f:SI 3 r3 [orig:135 D.13768 ] [135])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn:TI 33 95 34 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:355 (set (reg:SI 2 r2 [orig:155 <variable>.preempt_count ] [155])
        (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:135 D.13768 ] [135])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:135 D.13768 ] [135])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (nil)))

(insn:TI 34 33 35 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:355 (set (reg:SI 2 r2 [156])
        (plus:SI (reg:SI 2 r2 [orig:155 <variable>.preempt_count ] [155])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:135 D.13768 ] [135])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (nil)))

(insn 35 34 36 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:355 (set (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:135 D.13768 ] [135])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (reg:SI 2 r2 [156])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [156])
        (nil)))

(insn:TI 36 35 41 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:355 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 5154814)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn:TI 41 36 38 5 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 2 r2 [orig:161 <variable>.cpu ] [161])
        (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:135 D.13768 ] [135])
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:135 D.13768 ] [135])
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])
        (nil)))

(insn 38 41 117 5 include/asm-generic/bitops/non-atomic.h:105 (set (reg/f:SI 1 r1 [157])
        (plus:SI (reg/v/f:SI 1 r1 [orig:146 mm ] [146])
            (const_int 348 [0x15c]))) 4 {*arm_addsi3} (nil))

(note 117 38 43 5 ( mm (expr_list:REG_DEP_TRUE (reg:SI 0 r0 [ mm ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 43 117 118 5 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 0 r0 [163])
        (plus:SI (reg:SI 2 r2 [orig:161 <variable>.cpu ] [161])
            (const_int 31 [0x1f]))) 4 {*arm_addsi3} (nil))

(note 118 43 101 5 ( mm (nil)) NOTE_INSN_VAR_LOCATION)

(insn 101 118 102 5 include/asm-generic/bitops/non-atomic.h:105 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2 r2 [orig:161 <variable>.cpu ] [161])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn:TI 102 101 46 5 include/asm-generic/bitops/non-atomic.h:105 (cond_exec (lt (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 2 r2 [orig:162 <variable>.cpu ] [162])
            (reg:SI 0 r0 [163]))) 2345 {neon_vornv2di+78} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_DEAD (reg:SI 0 r0 [163])
            (nil))))

(insn:TI 46 102 49 5 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 2 r2 [164])
        (ashiftrt:SI (reg:SI 2 r2 [orig:162 <variable>.cpu ] [162])
            (const_int 5 [0x5]))) 117 {*arm_shiftsi3} (expr_list:REG_EQUAL (div:SI (reg:SI 2 r2 [orig:161 <variable>.cpu ] [161])
            (const_int 32 [0x20]))
        (nil)))

(insn:TI 49 46 50 5 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 2 r2 [orig:138 D.13761 ] [138])
        (mem/v:SI (plus:SI (mult:SI (reg:SI 2 r2 [164])
                    (const_int 4 [0x4]))
                (reg/f:SI 1 r1 [157])) [0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 1 r1 [157])
        (expr_list:REG_UNUSED (reg:SI 2 r2 [orig:138 D.13761 ] [138])
            (nil))))

(insn:TI 50 49 54 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:365 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 5156090)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn:TI 54 50 55 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:365 (set (reg:SI 2 r2 [orig:167 <variable>.preempt_count ] [167])
        (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:135 D.13768 ] [135])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:135 D.13768 ] [135])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (nil)))

(insn:TI 55 54 56 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:365 (set (reg:SI 2 r2 [168])
        (plus:SI (reg:SI 2 r2 [orig:167 <variable>.preempt_count ] [167])
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:135 D.13768 ] [135])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (nil)))

(insn 56 55 57 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:365 (set (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:135 D.13768 ] [135])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (reg:SI 2 r2 [168])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [168])
        (nil)))

(insn:TI 57 56 61 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:365 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 5156090)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn:TI 61 57 63 5 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 3 r3 [orig:143 D.13748 ] [143])
        (mem/v:SI (reg/f:SI 3 r3 [orig:135 D.13768 ] [135]) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn:TI 63 61 64 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:365 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 3 r3 [orig:143 D.13748 ] [143])
                (const_int 1 [0x1])
                (const_int 1 [0x1]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg:SI 3 r3 [orig:143 D.13748 ] [143])
        (nil)))

(jump_insn:TI 64 63 65 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:365 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 67)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 5 -> ( 6 7)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]


;; Succ edge  6 [0.0%]  (fallthru)
;; Succ edge  7 [100.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  gen 	
;; live  kill	 14 [lr]

;; Pred edge  5 [0.0%]  (fallthru)
(note 65 64 66 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(call_insn:TI 66 65 67 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:365 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("preempt_schedule") [flags 0x41] <function_decl 0x10a55380 preempt_schedule>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))
;; End of basic block 6 -> ( 7)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp]


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 5 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  5 [100.0%] 
;; Pred edge  6 [100.0%]  (fallthru)
(code_label 67 66 68 7 62 "" [1 uses])

(note 68 67 69 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(note 69 68 70 7 NOTE_INSN_DELETED)

(insn:TI 70 69 71 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:367 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 4 r4 [orig:134 __tlb_flag ] [134])
                (const_int 1 [0x1])
                (const_int 16 [0x10]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn:TI 71 70 72 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:367 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 75)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 7 -> ( 8 9)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]


;; Succ edge  8 [50.0%]  (fallthru)
;; Succ edge  9 [50.0%] 

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3]
;; live  kill	 24 [cc]

;; Pred edge  7 [50.0%]  (fallthru)
(note 72 71 73 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn:TI 73 72 74 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:368 (set (reg:SI 3 r3 [172])
        (and:SI (reg:SI 5 r5 [orig:133 D.13780 ] [133])
            (const_int 255 [0xff]))) 67 {*arm_andsi3_insn} (nil))

(insn:TI 74 73 75 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:368 (parallel [
            (asm_operands/v ("mcr p15, 0, %0, c8, c7, 2") ("") 0 [
                    (reg:SI 3 r3 [172])
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 5156475)
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg:SI 3 r3 [172])
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))
;; End of basic block 8 -> ( 9)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]


;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 7 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  7 [50.0%] 
;; Pred edge  8 [100.0%]  (fallthru)
(code_label 75 74 76 9 63 "" [1 uses])

(note 76 75 77 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(note 77 76 78 9 NOTE_INSN_DELETED)

(insn:TI 78 77 79 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:373 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 4 r4 [orig:134 __tlb_flag ] [134])
                (const_int 1 [0x1])
                (const_int 21 [0x15]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn:TI 79 78 80 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:373 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 83)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 9 -> ( 10 11)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]


;; Succ edge  10 [50.0%]  (fallthru)
;; Succ edge  11 [50.0%] 

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3]
;; live  kill	 24 [cc]

;; Pred edge  9 [50.0%]  (fallthru)
(note 80 79 81 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn:TI 81 80 82 10 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:375 (set (reg:SI 3 r3 [174])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 0 [0x0])
        (nil)))

(insn:TI 82 81 83 10 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:375 (parallel [
            (asm_operands/v ("mcr p15, 0, %0, c8, c3, 0") ("") 0 [
                    (reg:SI 3 r3 [174])
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 5157371)
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg:SI 3 r3 [174])
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))
;; End of basic block 10 -> ( 11)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]


;; Succ edge  11 [100.0%]  (fallthru)

;; Start of basic block ( 9 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  9 [50.0%] 
;; Pred edge  10 [100.0%]  (fallthru)
(code_label 83 82 84 11 64 "" [1 uses])

(note 84 83 85 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn:TI 85 84 105 11 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:381 (parallel [
            (asm_operands/v ("dsb") ("") 0 []
                 [] 5158139)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(note 105 85 106 11 NOTE_INSN_EPILOGUE_BEG)

(jump_insn:TI 106 105 107 11 arch/arm/kernel/smp_tlb.c:93 (return) 260 {return} (nil))
;; End of basic block 11 -> ( 1)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%] 

(barrier 107 106 96)

(note 96 107 99 NOTE_INSN_DELETED)

(note 99 96 0 NOTE_INSN_DELETED)


;; Function flush_tlb_page (flush_tlb_page)[0:754]


Basic block 2:
IN:
Stack adjustment: 0
Reg 0: vma+0
Reg 1: uaddr+0
Variables:
  name: vma
    offset 0
      (reg:SI 0 r0 [ vma ])
  name: uaddr
    offset 0
      (reg:SI 1 r1 [ uaddr ])

OUT:
Stack adjustment: 24
Reg 0: vma+0
Reg 1: uaddr+0
Reg 3: vma+0
Reg 12: uaddr+0
Variables:
  name: vma
    offset 0
      (reg/v/f:SI 3 r3 [orig:139 vma ] [139])
      (reg:SI 0 r0 [ vma ])
  name: uaddr
    offset 0
      (reg/v:SI 12 ip [orig:140 uaddr ] [140])
      (reg:SI 1 r1 [ uaddr ])


Basic block 3:
IN:
Stack adjustment: 24
Reg 0: vma+0
Reg 1: uaddr+0
Reg 3: vma+0
Reg 12: uaddr+0
Variables:
  name: vma
    offset 0
      (reg/v/f:SI 3 r3 [orig:139 vma ] [139])
      (reg:SI 0 r0 [ vma ])
  name: uaddr
    offset 0
      (reg/v:SI 12 ip [orig:140 uaddr ] [140])
      (reg:SI 1 r1 [ uaddr ])

OUT:
Stack adjustment: 24
Reg 0: vma+0
Reg 1: uaddr+0
Reg 3: vma+0
Reg 12: uaddr+0
Variables:
  name: vma
    offset 0
      (reg/v/f:SI 3 r3 [orig:139 vma ] [139])
      (reg:SI 0 r0 [ vma ])
  name: uaddr
    offset 0
      (reg/v:SI 12 ip [orig:140 uaddr ] [140])
      (reg:SI 1 r1 [ uaddr ])


Basic block 4:
IN:
Stack adjustment: 24
Reg 0: vma+0
Reg 1: uaddr+0
Reg 3: vma+0
Reg 12: uaddr+0
Variables:
  name: vma
    offset 0
      (reg/v/f:SI 3 r3 [orig:139 vma ] [139])
      (reg:SI 0 r0 [ vma ])
  name: uaddr
    offset 0
      (reg/v:SI 12 ip [orig:140 uaddr ] [140])
      (reg:SI 1 r1 [ uaddr ])

OUT:
Stack adjustment: 24


Basic block 5:
IN:
Stack adjustment: 24
Reg 0: vma+0
Reg 1: uaddr+0
Reg 3: vma+0
Reg 12: uaddr+0
Variables:
  name: vma
    offset 0
      (reg/v/f:SI 3 r3 [orig:139 vma ] [139])
      (reg:SI 0 r0 [ vma ])
  name: uaddr
    offset 0
      (reg/v:SI 12 ip [orig:140 uaddr ] [140])
      (reg:SI 1 r1 [ uaddr ])

OUT:
Stack adjustment: 24
Reg 1: __tlb_flag+0
Reg 12: uaddr+0
Variables:
  name: __tlb_flag
    offset 0
      (reg/v:SI 1 r1 [orig:133 __tlb_flag ] [133])
  name: uaddr
    offset 0
      (reg/v:SI 12 ip [orig:137 uaddr ] [137])


Basic block 6:
IN:
Stack adjustment: 24
Reg 1: __tlb_flag+0
Reg 12: uaddr+0
Variables:
  name: __tlb_flag
    offset 0
      (reg/v:SI 1 r1 [orig:133 __tlb_flag ] [133])
  name: uaddr
    offset 0
      (reg/v:SI 12 ip [orig:137 uaddr ] [137])

OUT:
Stack adjustment: 24
Reg 1: __tlb_flag+0
Reg 12: uaddr+0
Variables:
  name: __tlb_flag
    offset 0
      (reg/v:SI 1 r1 [orig:133 __tlb_flag ] [133])
  name: uaddr
    offset 0
      (reg/v:SI 12 ip [orig:137 uaddr ] [137])


Basic block 7:
IN:
Stack adjustment: 24
Reg 1: __tlb_flag+0
Reg 12: uaddr+0
Variables:
  name: __tlb_flag
    offset 0
      (reg/v:SI 1 r1 [orig:133 __tlb_flag ] [133])
  name: uaddr
    offset 0
      (reg/v:SI 12 ip [orig:137 uaddr ] [137])

OUT:
Stack adjustment: 24
Reg 1: __tlb_flag+0
Reg 12: uaddr+0
Variables:
  name: __tlb_flag
    offset 0
      (reg/v:SI 1 r1 [orig:133 __tlb_flag ] [133])
  name: uaddr
    offset 0
      (reg/v:SI 12 ip [orig:137 uaddr ] [137])


Basic block 8:
IN:
Stack adjustment: 24
Reg 1: __tlb_flag+0
Reg 12: uaddr+0
Variables:
  name: __tlb_flag
    offset 0
      (reg/v:SI 1 r1 [orig:133 __tlb_flag ] [133])
  name: uaddr
    offset 0
      (reg/v:SI 12 ip [orig:137 uaddr ] [137])

OUT:
Stack adjustment: 24
Reg 1: __tlb_flag+0
Variables:
  name: __tlb_flag
    offset 0
      (reg/v:SI 1 r1 [orig:133 __tlb_flag ] [133])


Basic block 9:
IN:
Stack adjustment: 24
Reg 1: __tlb_flag+0
Reg 12: uaddr+0
Variables:
  name: __tlb_flag
    offset 0
      (reg/v:SI 1 r1 [orig:133 __tlb_flag ] [133])
  name: uaddr
    offset 0
      (reg/v:SI 12 ip [orig:137 uaddr ] [137])

OUT:
Stack adjustment: 24
Reg 1: __tlb_flag+0
Reg 12: uaddr+0
Variables:
  name: __tlb_flag
    offset 0
      (reg/v:SI 1 r1 [orig:133 __tlb_flag ] [133])
  name: uaddr
    offset 0
      (reg/v:SI 12 ip [orig:137 uaddr ] [137])


Basic block 10:
IN:
Stack adjustment: 24
Reg 1: __tlb_flag+0
Reg 12: uaddr+0
Variables:
  name: __tlb_flag
    offset 0
      (reg/v:SI 1 r1 [orig:133 __tlb_flag ] [133])
  name: uaddr
    offset 0
      (reg/v:SI 12 ip [orig:137 uaddr ] [137])

OUT:
Stack adjustment: 24
Reg 1: __tlb_flag+0
Reg 12: uaddr+0
Variables:
  name: __tlb_flag
    offset 0
      (reg/v:SI 1 r1 [orig:133 __tlb_flag ] [133])
  name: uaddr
    offset 0
      (reg/v:SI 12 ip [orig:137 uaddr ] [137])


11 basic blocks, 14 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(13){ }d-1(14){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; lr  def 	 2 [r2] 3 [r3] 12 [ip] 13 [sp] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 12 [ip] 13 [sp] 24 [cc]
;; live  kill	

Successors:  5 [50.0%]  3 [50.0%]  (fallthru)
;; lr  out 	 0 [r0] 3 [r3] 4 [r4] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 3 [r3] 4 [r4] 12 [ip] 13 [sp] 14 [lr]


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 5000, maybe hot.
Predecessors:  2 [50.0%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 3 [r3] 4 [r4] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 2 [r2] 24 [cc]
;; live  in  	 0 [r0] 3 [r3] 4 [r4] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 24 [cc]
;; live  kill	 24 [cc]

Successors:  4 [41.4%]  (fallthru) 5 [58.6%] 
;; lr  out 	 0 [r0] 3 [r3] 4 [r4] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 3 [r3] 4 [r4] 12 [ip] 13 [sp] 14 [lr]


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 2071, maybe hot.
Predecessors:  3 [41.4%]  (fallthru)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 3 [r3] 4 [r4] 12 [ip] 13 [sp]
;; lr  use 	 0 [r0] 3 [r3] 12 [ip] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 3 [r3] 4 [r4] 12 [ip] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	 14 [lr]

Successors:  10 [100.0%] 
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]


Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 7929, maybe hot.
Predecessors:  3 [58.6%]  2 [50.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 12 [ip] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 24 [cc]
;; live  in  	 3 [r3] 4 [r4] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 24 [cc]
;; live  kill	

Successors:  6 [50.0%]  (fallthru) 7 [50.0%] 
;; lr  out 	 1 [r1] 4 [r4] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 4 [r4] 12 [ip] 13 [sp] 14 [lr]


Basic block 6 , prev 5, next 7, loop_depth 0, count 0, freq 3964, maybe hot.
Predecessors:  5 [50.0%]  (fallthru)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 4 [r4] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 12 [ip] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 1 [r1] 4 [r4] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	 24 [cc]

Successors:  7 [100.0%]  (fallthru)
;; lr  out 	 1 [r1] 4 [r4] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 4 [r4] 12 [ip] 13 [sp] 14 [lr]


Basic block 7 , prev 6, next 8, loop_depth 0, count 0, freq 7929, maybe hot.
Predecessors:  5 [50.0%]  6 [100.0%]  (fallthru)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 4 [r4] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 1 [r1] 4 [r4] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  8 [50.0%]  (fallthru) 9 [50.0%] 
;; lr  out 	 4 [r4] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 12 [ip] 13 [sp] 14 [lr]


Basic block 8 , prev 7, next 9, loop_depth 0, count 0, freq 3964, maybe hot.
Predecessors:  7 [50.0%]  (fallthru)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 12 [ip] 13 [sp]
;; lr  def 	 12 [ip] 24 [cc]
;; live  in  	 4 [r4] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 12 [ip]
;; live  kill	 24 [cc]

Successors:  9 [100.0%]  (fallthru)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp] 14 [lr]


Basic block 9 , prev 8, next 10, loop_depth 0, count 0, freq 7929, maybe hot.
Predecessors:  7 [50.0%]  8 [100.0%]  (fallthru)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

Successors:  10 [100.0%]  (fallthru)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp] 14 [lr]


Basic block 10 , prev 9, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  9 [100.0%]  (fallthru) 4 [100.0%] 
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

Successors:  EXIT [100.0%] 
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp] 14 [lr]


Basic block 1 , prev 10, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  10 [100.0%] 
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(4){ }u-1(13){ }u-1(14){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp] 14 [lr]
;; lr  def 	
;; live  in  	 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	




flush_tlb_page

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;;  exit block uses 	 4 [r4] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 12[ip] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={6d,7u} r1={5d,6u} r2={13d,12u} r3={7d,9u,3d} r4={1d,2u} r12={7d,8u} r13={2d,16u} r14={2d,2u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={9d,5u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 232{162d,67u,3e} in 48{47 regular + 1 call} insns.
(note 1 0 105 NOTE_INSN_DELETED)

(note 105 1 106 2 ( vma (expr_list:REG_DEP_TRUE (reg:SI 0 r0 [ vma ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 106 105 5 2 ( uaddr (expr_list:REG_DEP_TRUE (reg:SI 1 r1 [ uaddr ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; lr  def 	 2 [r2] 3 [r3] 12 [ip] 13 [sp] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 12 [ip] 13 [sp] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 106 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 4 5 96 2 NOTE_INSN_FUNCTION_BEG)

(insn/f:TI 96 4 108 2 arch/arm/kernel/smp_tlb.c:96 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 0 r0)
                    ] 2))
            (use (reg:SI 1 r1))
            (use (reg:SI 2 r2))
            (use (reg:SI 3 r3))
            (use (reg:SI 4 r4))
            (use (reg:SI 14 lr))
        ]) 327 {*push_multi} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                        (set/f (reg/f:SI 13 sp)
                            (plus:SI (reg/f:SI 13 sp)
                                (const_int -24 [0xffffffffffffffe8])))
                        (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                            (reg:SI 0 r0))
                        (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                    (const_int 4 [0x4])) [0 S4 A32])
                            (reg:SI 1 r1))
                        (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                    (const_int 8 [0x8])) [0 S4 A32])
                            (reg:SI 2 r2))
                        (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                    (const_int 12 [0xc])) [0 S4 A32])
                            (reg:SI 3 r3))
                        (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                    (const_int 16 [0x10])) [0 S4 A32])
                            (reg:SI 4 r4))
                        (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                    (const_int 20 [0x14])) [0 S4 A32])
                            (reg:SI 14 lr))
                    ])
                (nil)))))

(note 108 96 107 2 ( vma (nil)) NOTE_INSN_VAR_LOCATION)

(note 107 108 97 2 ( uaddr (nil)) NOTE_INSN_VAR_LOCATION)

(note 97 107 91 2 NOTE_INSN_PROLOGUE_END)

(insn:TI 91 97 2 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:28 (set (reg/f:SI 2 r2 [141])
        (symbol_ref:SI ("smp_on_up") [flags 0xc0] <var_decl 0x10b1dc00 smp_on_up>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("smp_on_up") [flags 0xc0] <var_decl 0x10b1dc00 smp_on_up>)
        (nil)))

(insn:TI 2 91 109 2 arch/arm/kernel/smp_tlb.c:96 (set (reg/v/f:SI 3 r3 [orig:139 vma ] [139])
        (reg:SI 0 r0 [ vma ])) 167 {*arm_movsi_insn} (nil))

(note 109 2 3 2 ( vma (expr_list:REG_DEP_TRUE (reg:SI 0 r0 [ vma ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn 3 109 110 2 arch/arm/kernel/smp_tlb.c:96 (set (reg/v:SI 12 ip [orig:140 uaddr ] [140])
        (reg:SI 1 r1 [ uaddr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ uaddr ])
        (nil)))

(note 110 3 8 2 ( uaddr (expr_list:REG_DEP_TRUE (reg:SI 1 r1 [ uaddr ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 8 110 9 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:28 (set (reg:SI 2 r2 [orig:142 smp_on_up ] [142])
        (mem/c/i:SI (reg/f:SI 2 r2 [141]) [0 smp_on_up+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("smp_on_up") [flags 0xc0] <var_decl 0x10b1dc00 smp_on_up>) [0 smp_on_up+0 S4 A32])
        (nil)))

(insn:TI 9 8 10 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:28 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2 r2 [orig:142 smp_on_up ] [142])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [orig:142 smp_on_up ] [142])
        (nil)))

(jump_insn:TI 10 9 111 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:28 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 30)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 2 -> ( 5 3)
;; lr  out 	 0 [r0] 3 [r3] 4 [r4] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 3 [r3] 4 [r4] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  5 [50.0%] 
;; Succ edge  3 [50.0%]  (fallthru)

(note 111 10 112 3 ( vma (expr_list:REG_DEP_TRUE (reg/v/f:SI 3 r3 [orig:139 vma ] [139])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 112 111 11 3 ( uaddr (expr_list:REG_DEP_TRUE (reg/v:SI 12 ip [orig:140 uaddr ] [140])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 3 [r3] 4 [r4] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 2 [r2] 24 [cc]
;; live  in  	 0 [r0] 3 [r3] 4 [r4] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 24 [cc]
;; live  kill	 24 [cc]

;; Pred edge  2 [50.0%]  (fallthru)
(note 11 112 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 13 11 12 3 NOTE_INSN_DELETED)

(insn:TI 12 13 113 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:31 (parallel [
            (set (reg/v:SI 2 r2 [orig:138 __val ] [138])
                (asm_operands:SI ("mrc	p15, 0, %0, c0, c1, 7") ("=r") 0 []
                     [] 2012747))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(note 113 12 14 3 ( __val (expr_list:REG_DEP_TRUE (reg/v:SI 2 r2 [orig:138 __val ] [138])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 14 113 114 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:31 (set (reg:SI 2 r2 [144])
        (zero_extract:SI (reg/v:SI 2 r2 [orig:138 __val ] [138])
            (const_int 4 [0x4])
            (const_int 12 [0xc]))) 124 {extzv_t2} (nil))

(note 114 14 15 3 ( __val (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 15 114 16 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:31 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2 r2 [144])
            (const_int 1 [0x1]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [144])
        (nil)))

(jump_insn:TI 16 15 17 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:31 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 30)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5858 [0x16e2])
            (nil))))
;; End of basic block 3 -> ( 4 5)
;; lr  out 	 0 [r0] 3 [r3] 4 [r4] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 3 [r3] 4 [r4] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  4 [41.4%]  (fallthru)
;; Succ edge  5 [58.6%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 3 [r3] 4 [r4] 12 [ip] 13 [sp]
;; lr  use 	 0 [r0] 3 [r3] 12 [ip] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 3 [r3] 4 [r4] 12 [ip] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	 14 [lr]

;; Pred edge  3 [41.4%]  (fallthru)
(note 17 16 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 21 17 23 4 NOTE_INSN_DELETED)

(note 23 21 22 4 NOTE_INSN_DELETED)

(insn:TI 22 23 25 4 arch/arm/kernel/smp_tlb.c:101 (set (reg/f:SI 2 r2 [orig:148 <variable>.vm_mm ] [148])
        (mem/s/f/j:SI (reg/f:SI 0 r0 [orig:139 vma ] [139]) [0 <variable>.vm_mm+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 0 r0 [orig:139 vma ] [139])
        (expr_list:REG_EQUIV (mem/s/f/j:SI (reg/v/f:SI 3 r3 [orig:139 vma ] [139]) [0 <variable>.vm_mm+0 S4 A32])
            (nil))))

(insn 25 22 24 4 arch/arm/kernel/smp_tlb.c:101 (set (reg:SI 1 r1)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 4 [0x4]))) 4 {*arm_addsi3} (nil))

(insn:TI 24 25 26 4 arch/arm/kernel/smp_tlb.c:101 (set (reg:SI 0 r0)
        (symbol_ref:SI ("ipi_flush_tlb_page") [flags 0x3] <function_decl 0x10f4cb00 ipi_flush_tlb_page>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("ipi_flush_tlb_page") [flags 0x3] <function_decl 0x10f4cb00 ipi_flush_tlb_page>)
        (nil)))

(insn:TI 26 24 19 4 arch/arm/kernel/smp_tlb.c:101 (set (reg:SI 2 r2)
        (plus:SI (reg/f:SI 2 r2 [orig:148 <variable>.vm_mm ] [148])
            (const_int 348 [0x15c]))) 4 {*arm_addsi3} (nil))

(insn 19 26 18 4 arch/arm/kernel/smp_tlb.c:100 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [0 ta.ta_start+0 S4 A32])
        (reg/v:SI 12 ip [orig:140 uaddr ] [140])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 12 ip [orig:140 uaddr ] [140])
        (nil)))

(insn:TI 18 19 27 4 arch/arm/kernel/smp_tlb.c:99 (set (mem/s/f/j/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 ta.ta_vma+0 S4 A32])
        (reg/v/f:SI 3 r3 [orig:139 vma ] [139])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 3 r3 [orig:139 vma ] [139])
        (nil)))

(call_insn 27 18 116 4 arch/arm/kernel/smp_tlb.c:101 (parallel [
            (call (mem:SI (symbol_ref:SI ("on_each_cpu_mask.clone.0") [flags 0x3] <function_decl 0x10f7ff80 on_each_cpu_mask.clone.0>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_DEAD (reg:SI 0 r0)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(note 116 27 115 4 ( uaddr (nil)) NOTE_INSN_VAR_LOCATION)

(note 115 116 103 4 ( vma (nil)) NOTE_INSN_VAR_LOCATION)

(jump_insn 103 115 104 4 (set (pc)
        (label_ref 77)) -1 (nil))
;; End of basic block 4 -> ( 10)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  10 [100.0%] 

(barrier 104 103 117)

(note 117 104 118 5 ( vma (expr_list:REG_DEP_TRUE (reg/v/f:SI 3 r3 [orig:139 vma ] [139])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 118 117 30 5 ( uaddr (expr_list:REG_DEP_TRUE (reg/v:SI 12 ip [orig:140 uaddr ] [140])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 3 2) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 12 [ip] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 24 [cc]
;; live  in  	 3 [r3] 4 [r4] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 24 [cc]
;; live  kill	

;; Pred edge  3 [58.6%] 
;; Pred edge  2 [50.0%] 
(code_label 30 118 31 5 69 "" [2 uses])

(note 31 30 34 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 34 31 37 5 NOTE_INSN_DELETED)

(note 37 34 44 5 NOTE_INSN_DELETED)

(note 44 37 49 5 NOTE_INSN_DELETED)

(note 49 44 55 5 NOTE_INSN_DELETED)

(note 55 49 36 5 NOTE_INSN_DELETED)

(insn:TI 36 55 85 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:390 (set (reg/f:SI 2 r2 [orig:152 <variable>.vm_mm ] [152])
        (mem/s/f/j:SI (reg/v/f:SI 3 r3 [orig:139 vma ] [139]) [0 <variable>.vm_mm+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/f/j:SI (reg/v/f:SI 3 r3 [orig:139 vma ] [139]) [0 <variable>.vm_mm+0 S4 A32])
        (nil)))

(insn 85 36 119 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:390 (set (reg:SI 12 ip [150])
        (and:SI (reg/v:SI 12 ip [orig:140 uaddr ] [140])
            (const_int -4081 [0xfffffffffffff00f]))) 67 {*arm_andsi3_insn} (nil))

(note 119 85 90 5 ( uaddr (expr_list:REG_DEP_TRUE (reg:SI 1 r1 [ uaddr ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 90 119 120 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:388 (set (reg/f:SI 1 r1 [149])
        (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x10f31f60 cpu_tlb>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x10f31f60 cpu_tlb>)
        (nil)))

(note 120 90 86 5 ( uaddr (nil)) NOTE_INSN_VAR_LOCATION)

(insn 86 120 38 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:390 (set (reg:SI 12 ip [150])
        (and:SI (reg:SI 12 ip [150])
            (const_int -16 [0xfffffffffffffff0]))) 67 {*arm_andsi3_insn} (nil))

(insn:TI 38 86 33 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:390 (set (reg:SI 2 r2 [153])
        (zero_extend:SI (mem/s/j:QI (plus:SI (reg/f:SI 2 r2 [orig:152 <variable>.vm_mm ] [152])
                    (const_int 352 [0x160])) [0 <variable>.context.id+0 S1 A32]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn:TI 33 38 121 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:388 (set (reg/v:SI 1 r1 [orig:133 __tlb_flag ] [133])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 1 r1 [149])
                (const_int 8 [0x8])) [0 cpu_tlb.tlb_flags+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x10f31f60 cpu_tlb>)
                    (const_int 8 [0x8]))) [0 cpu_tlb.tlb_flags+0 S4 A32])
        (nil)))

(note 121 33 39 5 ( __tlb_flag (expr_list:REG_DEP_TRUE (reg/v:SI 1 r1 [orig:133 __tlb_flag ] [133])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 39 121 122 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:390 (set (reg/v:SI 12 ip [orig:137 uaddr ] [137])
        (ior:SI (reg:SI 12 ip [150])
            (reg:SI 2 r2 [153]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 2 r2 [153])
        (nil)))

(note 122 39 40 5 ( uaddr (expr_list:REG_DEP_TRUE (reg/v:SI 12 ip [orig:137 uaddr ] [137])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 40 122 93 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:393 (parallel [
            (asm_operands/v ("dsb") ("") 0 []
                 [] 5159675)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn:TI 93 40 87 5 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 0 r0)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn:TI 87 93 42 5 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 2 r2 [157])
        (and:SI (reg:SI 0 r0)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 42 87 88 5 include/asm-generic/bitops/non-atomic.h:105 (set (reg/f:SI 0 r0 [orig:156 <variable>.vm_mm ] [156])
        (mem/s/f/j:SI (reg/v/f:SI 3 r3 [orig:139 vma ] [139]) [0 <variable>.vm_mm+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 3 r3 [orig:139 vma ] [139])
        (nil)))

(insn:TI 88 42 43 5 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 2 r2 [157])
        (and:SI (reg:SI 2 r2 [157])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn:TI 43 88 46 5 include/asm-generic/bitops/non-atomic.h:105 (set (reg/f:SI 0 r0 [155])
        (plus:SI (reg/f:SI 0 r0 [orig:156 <variable>.vm_mm ] [156])
            (const_int 348 [0x15c]))) 4 {*arm_addsi3} (nil))

(insn:TI 46 43 123 5 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 3 r3 [orig:160 <variable>.cpu ] [160])
        (mem/s/j:SI (plus:SI (reg:SI 2 r2 [157])
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [157])
        (nil)))

(note 123 46 94 5 ( vma (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 94 123 48 5 include/asm-generic/bitops/non-atomic.h:105 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [orig:160 <variable>.cpu ] [160])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn 48 94 95 5 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 2 r2 [162])
        (plus:SI (reg:SI 3 r3 [orig:160 <variable>.cpu ] [160])
            (const_int 31 [0x1f]))) 4 {*arm_addsi3} (nil))

(insn:TI 95 48 56 5 include/asm-generic/bitops/non-atomic.h:105 (cond_exec (lt (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 3 r3 [orig:161 <variable>.cpu ] [161])
            (reg:SI 2 r2 [162]))) 2345 {neon_vornv2di+78} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_DEAD (reg:SI 2 r2 [162])
            (nil))))

(insn 56 95 51 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:408 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 1 r1 [orig:133 __tlb_flag ] [133])
                (const_int 1 [0x1])
                (const_int 4 [0x4]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(insn:TI 51 56 54 5 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 3 r3 [163])
        (ashiftrt:SI (reg:SI 3 r3 [orig:161 <variable>.cpu ] [161])
            (const_int 5 [0x5]))) 117 {*arm_shiftsi3} (expr_list:REG_EQUAL (div:SI (reg:SI 3 r3 [orig:160 <variable>.cpu ] [160])
            (const_int 32 [0x20]))
        (nil)))

(insn:TI 54 51 57 5 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 3 r3 [orig:135 D.13646 ] [135])
        (mem/v:SI (plus:SI (mult:SI (reg:SI 3 r3 [163])
                    (const_int 4 [0x4]))
                (reg/f:SI 0 r0 [155])) [0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 0 r0 [155])
        (expr_list:REG_UNUSED (reg:SI 3 r3 [orig:135 D.13646 ] [135])
            (nil))))

(jump_insn 57 54 58 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:408 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 60)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 5 -> ( 6 7)
;; lr  out 	 1 [r1] 4 [r4] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 4 [r4] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  6 [50.0%]  (fallthru)
;; Succ edge  7 [50.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 4 [r4] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 12 [ip] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 1 [r1] 4 [r4] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	 24 [cc]

;; Pred edge  5 [50.0%]  (fallthru)
(note 58 57 59 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn:TI 59 58 60 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:409 (parallel [
            (asm_operands/v ("mcr p15, 0, %0, c8, c7, 1") ("") 0 [
                    (reg/v:SI 12 ip [orig:137 uaddr ] [137])
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 5161723)
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))
;; End of basic block 6 -> ( 7)
;; lr  out 	 1 [r1] 4 [r4] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 4 [r4] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 5 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 4 [r4] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 1 [r1] 4 [r4] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  5 [50.0%] 
;; Pred edge  6 [100.0%]  (fallthru)
(code_label 60 59 61 7 71 "" [1 uses])

(note 61 60 62 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(note 62 61 63 7 NOTE_INSN_DELETED)

(insn:TI 63 62 64 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:414 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 1 r1 [orig:133 __tlb_flag ] [133])
                (const_int 1 [0x1])
                (const_int 19 [0x13]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg/v:SI 1 r1 [orig:133 __tlb_flag ] [133])
        (nil)))

(jump_insn:TI 64 63 65 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:414 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 69)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 7 -> ( 8 9)
;; lr  out 	 4 [r4] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  8 [50.0%]  (fallthru)
;; Succ edge  9 [50.0%] 

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 12 [ip] 13 [sp]
;; lr  def 	 12 [ip] 24 [cc]
;; live  in  	 4 [r4] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 12 [ip]
;; live  kill	 24 [cc]

;; Pred edge  7 [50.0%]  (fallthru)
(note 65 64 66 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(note 66 65 83 8 NOTE_INSN_DELETED)

(insn:TI 83 66 124 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:416 (set (reg:SI 12 ip [167])
        (and:SI (reg/v:SI 12 ip [orig:137 uaddr ] [137])
            (const_int -4081 [0xfffffffffffff00f]))) 67 {*arm_andsi3_insn} (nil))

(note 124 83 84 8 ( uaddr (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 84 124 68 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:416 (set (reg:SI 12 ip [167])
        (and:SI (reg:SI 12 ip [167])
            (const_int -16 [0xfffffffffffffff0]))) 67 {*arm_andsi3_insn} (nil))

(insn:TI 68 84 125 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:416 (parallel [
            (asm_operands/v ("mcr p15, 0, %0, c8, c3, 3") ("") 0 [
                    (reg:SI 12 ip [167])
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 5162619)
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg:SI 12 ip [167])
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))
;; End of basic block 8 -> ( 9)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp] 14 [lr]


;; Succ edge  9 [100.0%]  (fallthru)

(note 125 68 69 9 ( uaddr (expr_list:REG_DEP_TRUE (reg/v:SI 12 ip [orig:137 uaddr ] [137])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 7 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  7 [50.0%] 
;; Pred edge  8 [100.0%]  (fallthru)
(code_label 69 125 70 9 72 "" [1 uses])

(note 70 69 71 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn:TI 71 70 77 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:422 (parallel [
            (asm_operands/v ("dsb") ("") 0 []
                 [] 5163387)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))
;; End of basic block 9 -> ( 10)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp] 14 [lr]


;; Succ edge  10 [100.0%]  (fallthru)

;; Start of basic block ( 9 4) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  9 [100.0%]  (fallthru)
;; Pred edge  4 [100.0%] 
(code_label 77 71 80 10 73 "" [1 uses])

(note 80 77 98 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(note 98 80 99 10 NOTE_INSN_EPILOGUE_BEG)

(jump_insn:TI 99 98 100 10 arch/arm/kernel/smp_tlb.c:104 (unspec_volatile [
            (return)
        ] 1) 323 {*epilogue_insns} (nil))
;; End of basic block 10 -> ( 1)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%] 

(barrier 100 99 89)

(note 89 100 92 NOTE_INSN_DELETED)

(note 92 89 0 NOTE_INSN_DELETED)


;; Function flush_tlb_range (flush_tlb_range)[0:756]


Basic block 2:
IN:
Stack adjustment: 0
Reg 0: vma+0
Reg 1: start+0
Reg 2: end+0
Variables:
  name: vma
    offset 0
      (reg:SI 0 r0 [ vma ])
  name: start
    offset 0
      (reg:SI 1 r1 [ start ])
  name: end
    offset 0
      (reg:SI 2 r2 [ end ])

OUT:
Stack adjustment: 24
Reg 0: vma+0
Reg 1: start+0
Reg 3: vma+0
Reg 12: end+0
Reg 14: start+0
Variables:
  name: vma
    offset 0
      (reg/v/f:SI 3 r3 [orig:134 vma ] [134])
      (reg:SI 0 r0 [ vma ])
  name: start
    offset 0
      (reg/v:SI 14 lr [orig:135 start ] [135])
      (reg:SI 1 r1 [ start ])
  name: end
    offset 0
      (reg/v:SI 12 ip [orig:136 end ] [136])


Basic block 3:
IN:
Stack adjustment: 24
Reg 0: vma+0
Reg 1: start+0
Reg 3: vma+0
Reg 12: end+0
Reg 14: start+0
Variables:
  name: vma
    offset 0
      (reg/v/f:SI 3 r3 [orig:134 vma ] [134])
      (reg:SI 0 r0 [ vma ])
  name: start
    offset 0
      (reg/v:SI 14 lr [orig:135 start ] [135])
      (reg:SI 1 r1 [ start ])
  name: end
    offset 0
      (reg/v:SI 12 ip [orig:136 end ] [136])

OUT:
Stack adjustment: 24
Reg 0: vma+0
Reg 1: start+0
Reg 3: vma+0
Reg 12: end+0
Reg 14: start+0
Variables:
  name: vma
    offset 0
      (reg/v/f:SI 3 r3 [orig:134 vma ] [134])
      (reg:SI 0 r0 [ vma ])
  name: start
    offset 0
      (reg/v:SI 14 lr [orig:135 start ] [135])
      (reg:SI 1 r1 [ start ])
  name: end
    offset 0
      (reg/v:SI 12 ip [orig:136 end ] [136])


Basic block 4:
IN:
Stack adjustment: 24
Reg 0: vma+0
Reg 1: start+0
Reg 3: vma+0
Reg 12: end+0
Reg 14: start+0
Variables:
  name: vma
    offset 0
      (reg/v/f:SI 3 r3 [orig:134 vma ] [134])
      (reg:SI 0 r0 [ vma ])
  name: start
    offset 0
      (reg/v:SI 14 lr [orig:135 start ] [135])
      (reg:SI 1 r1 [ start ])
  name: end
    offset 0
      (reg/v:SI 12 ip [orig:136 end ] [136])

OUT:
Stack adjustment: 24


Basic block 5:
IN:
Stack adjustment: 24
Reg 0: vma+0
Reg 1: start+0
Reg 3: vma+0
Reg 12: end+0
Reg 14: start+0
Variables:
  name: vma
    offset 0
      (reg/v/f:SI 3 r3 [orig:134 vma ] [134])
      (reg:SI 0 r0 [ vma ])
  name: start
    offset 0
      (reg/v:SI 14 lr [orig:135 start ] [135])
      (reg:SI 1 r1 [ start ])
  name: end
    offset 0
      (reg/v:SI 12 ip [orig:136 end ] [136])

OUT:
Stack adjustment: 24


Basic block 6:
IN:
Stack adjustment: 24

OUT:
Stack adjustment: 24


7 basic blocks, 8 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(13){ }d-1(14){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; lr  def 	 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr] 24 [cc]
;; live  kill	

Successors:  5 [50.0%]  3 [50.0%]  (fallthru)
;; lr  out 	 0 [r0] 3 [r3] 4 [r4] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 3 [r3] 4 [r4] 12 [ip] 13 [sp] 14 [lr]


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 5000, maybe hot.
Predecessors:  2 [50.0%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 3 [r3] 4 [r4] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 2 [r2] 24 [cc]
;; live  in  	 0 [r0] 3 [r3] 4 [r4] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 24 [cc]
;; live  kill	 24 [cc]

Successors:  4 [78.0%]  (fallthru) 5 [22.0%] 
;; lr  out 	 0 [r0] 3 [r3] 4 [r4] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 3 [r3] 4 [r4] 12 [ip] 13 [sp] 14 [lr]


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 3900, maybe hot.
Predecessors:  3 [78.0%]  (fallthru)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 3 [r3] 4 [r4] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 3 [r3] 4 [r4] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	 14 [lr]

Successors:  6 [100.0%] 
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]


Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 6100, maybe hot.
Predecessors:  3 [22.0%]  2 [50.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 3 [r3] 4 [r4] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	 14 [lr]

Successors:  6 [100.0%]  (fallthru)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]


Basic block 6 , prev 5, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  5 [100.0%]  (fallthru) 4 [100.0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	
;; live  kill	

Successors:  EXIT [100.0%] 
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]


Basic block 1 , prev 6, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  6 [100.0%] 
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(4){ }u-1(13){ }u-1(14){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp] 14 [lr]
;; lr  def 	
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	




flush_tlb_range

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;;  exit block uses 	 4 [r4] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 12[ip] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={5d,5u} r1={5d,4u} r2={10d,9u} r3={5d,4u,1d} r4={1d,2u} r12={3d,2u} r13={2d,13u} r14={4d,4u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={5d,2u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} 
;;    total ref usage 306{260d,45u,1e} in 27{25 regular + 2 call} insns.
(note 1 0 63 NOTE_INSN_DELETED)

(note 63 1 64 2 ( vma (expr_list:REG_DEP_TRUE (reg:SI 0 r0 [ vma ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 64 63 65 2 ( start (expr_list:REG_DEP_TRUE (reg:SI 1 r1 [ start ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 65 64 6 2 ( end (expr_list:REG_DEP_TRUE (reg:SI 2 r2 [ end ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; lr  def 	 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 65 5 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 5 6 54 2 NOTE_INSN_FUNCTION_BEG)

(insn/f:TI 54 5 68 2 arch/arm/kernel/smp_tlb.c:118 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 0 r0)
                    ] 2))
            (use (reg:SI 1 r1))
            (use (reg:SI 2 r2))
            (use (reg:SI 3 r3))
            (use (reg:SI 4 r4))
            (use (reg:SI 14 lr))
        ]) 327 {*push_multi} (expr_list:REG_DEAD (reg:SI 14 lr)
        (expr_list:REG_DEAD (reg:SI 3 r3)
            (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                        (set/f (reg/f:SI 13 sp)
                            (plus:SI (reg/f:SI 13 sp)
                                (const_int -24 [0xffffffffffffffe8])))
                        (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                            (reg:SI 0 r0))
                        (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                    (const_int 4 [0x4])) [0 S4 A32])
                            (reg:SI 1 r1))
                        (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                    (const_int 8 [0x8])) [0 S4 A32])
                            (reg:SI 2 r2))
                        (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                    (const_int 12 [0xc])) [0 S4 A32])
                            (reg:SI 3 r3))
                        (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                    (const_int 16 [0x10])) [0 S4 A32])
                            (reg:SI 4 r4))
                        (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                    (const_int 20 [0x14])) [0 S4 A32])
                            (reg:SI 14 lr))
                    ])
                (nil)))))

(note 68 54 67 2 ( vma (nil)) NOTE_INSN_VAR_LOCATION)

(note 67 68 66 2 ( start (nil)) NOTE_INSN_VAR_LOCATION)

(note 66 67 55 2 ( end (nil)) NOTE_INSN_VAR_LOCATION)

(note 55 66 4 2 NOTE_INSN_PROLOGUE_END)

(insn:TI 4 55 69 2 arch/arm/kernel/smp_tlb.c:118 (set (reg/v:SI 12 ip [orig:136 end ] [136])
        (reg:SI 2 r2 [ end ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ end ])
        (nil)))

(note 69 4 52 2 ( end (expr_list:REG_DEP_TRUE (reg:SI 2 r2 [ end ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 52 69 70 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:28 (set (reg/f:SI 2 r2 [137])
        (symbol_ref:SI ("smp_on_up") [flags 0xc0] <var_decl 0x10b1dc00 smp_on_up>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("smp_on_up") [flags 0xc0] <var_decl 0x10b1dc00 smp_on_up>)
        (nil)))

(note 70 52 2 2 ( end (expr_list:REG_DEP_TRUE (reg/v:SI 12 ip [orig:136 end ] [136])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn 2 70 71 2 arch/arm/kernel/smp_tlb.c:118 (set (reg/v/f:SI 3 r3 [orig:134 vma ] [134])
        (reg:SI 0 r0 [ vma ])) 167 {*arm_movsi_insn} (nil))

(note 71 2 3 2 ( vma (expr_list:REG_DEP_TRUE (reg:SI 0 r0 [ vma ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 3 71 72 2 arch/arm/kernel/smp_tlb.c:118 (set (reg/v:SI 14 lr [orig:135 start ] [135])
        (reg:SI 1 r1 [ start ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ start ])
        (nil)))

(note 72 3 9 2 ( start (expr_list:REG_DEP_TRUE (reg:SI 1 r1 [ start ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 9 72 10 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:28 (set (reg:SI 2 r2 [orig:138 smp_on_up ] [138])
        (mem/c/i:SI (reg/f:SI 2 r2 [137]) [0 smp_on_up+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("smp_on_up") [flags 0xc0] <var_decl 0x10b1dc00 smp_on_up>) [0 smp_on_up+0 S4 A32])
        (nil)))

(insn:TI 10 9 11 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:28 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2 r2 [orig:138 smp_on_up ] [138])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [orig:138 smp_on_up ] [138])
        (nil)))

(jump_insn:TI 11 10 73 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:28 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 32)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 2 -> ( 5 3)
;; lr  out 	 0 [r0] 3 [r3] 4 [r4] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 3 [r3] 4 [r4] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  5 [50.0%] 
;; Succ edge  3 [50.0%]  (fallthru)

(note 73 11 74 3 ( vma (expr_list:REG_DEP_TRUE (reg/v/f:SI 3 r3 [orig:134 vma ] [134])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 74 73 12 3 ( start (expr_list:REG_DEP_TRUE (reg/v:SI 14 lr [orig:135 start ] [135])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 3 [r3] 4 [r4] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 2 [r2] 24 [cc]
;; live  in  	 0 [r0] 3 [r3] 4 [r4] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 24 [cc]
;; live  kill	 24 [cc]

;; Pred edge  2 [50.0%]  (fallthru)
(note 12 74 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 14 12 13 3 NOTE_INSN_DELETED)

(insn:TI 13 14 75 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:31 (parallel [
            (set (reg/v:SI 2 r2 [orig:133 __val ] [133])
                (asm_operands:SI ("mrc	p15, 0, %0, c0, c1, 7") ("=r") 0 []
                     [] 2012747))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(note 75 13 15 3 ( __val (expr_list:REG_DEP_TRUE (reg/v:SI 2 r2 [orig:133 __val ] [133])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 15 75 76 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:31 (set (reg:SI 2 r2 [140])
        (zero_extract:SI (reg/v:SI 2 r2 [orig:133 __val ] [133])
            (const_int 4 [0x4])
            (const_int 12 [0xc]))) 124 {extzv_t2} (nil))

(note 76 15 16 3 ( __val (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 16 76 17 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:31 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2 r2 [140])
            (const_int 1 [0x1]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [140])
        (nil)))

(jump_insn:TI 17 16 18 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:31 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 32)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2200 [0x898])
            (nil))))
;; End of basic block 3 -> ( 4 5)
;; lr  out 	 0 [r0] 3 [r3] 4 [r4] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 3 [r3] 4 [r4] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  4 [78.0%]  (fallthru)
;; Succ edge  5 [22.0%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 3 [r3] 4 [r4] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 3 [r3] 4 [r4] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	 14 [lr]

;; Pred edge  3 [78.0%]  (fallthru)
(note 18 17 23 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 23 18 25 4 NOTE_INSN_DELETED)

(note 25 23 24 4 NOTE_INSN_DELETED)

(insn:TI 24 25 27 4 arch/arm/kernel/smp_tlb.c:124 (set (reg/f:SI 2 r2 [orig:144 <variable>.vm_mm ] [144])
        (mem/s/f/j:SI (reg/f:SI 0 r0 [orig:134 vma ] [134]) [0 <variable>.vm_mm+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 0 r0 [orig:134 vma ] [134])
        (expr_list:REG_EQUIV (mem/s/f/j:SI (reg/v/f:SI 3 r3 [orig:134 vma ] [134]) [0 <variable>.vm_mm+0 S4 A32])
            (nil))))

(insn 27 24 26 4 arch/arm/kernel/smp_tlb.c:124 (set (reg:SI 1 r1)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 4 [0x4]))) 4 {*arm_addsi3} (nil))

(insn:TI 26 27 28 4 arch/arm/kernel/smp_tlb.c:124 (set (reg:SI 0 r0)
        (symbol_ref:SI ("ipi_flush_tlb_range") [flags 0x3] <function_decl 0x10f4cd00 ipi_flush_tlb_range>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("ipi_flush_tlb_range") [flags 0x3] <function_decl 0x10f4cd00 ipi_flush_tlb_range>)
        (nil)))

(insn:TI 28 26 20 4 arch/arm/kernel/smp_tlb.c:124 (set (reg:SI 2 r2)
        (plus:SI (reg/f:SI 2 r2 [orig:144 <variable>.vm_mm ] [144])
            (const_int 348 [0x15c]))) 4 {*arm_addsi3} (nil))

(insn 20 28 21 4 arch/arm/kernel/smp_tlb.c:122 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [0 ta.ta_start+0 S4 A32])
        (reg/v:SI 14 lr [orig:135 start ] [135])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 14 lr [orig:135 start ] [135])
        (nil)))

(insn:TI 21 20 19 4 arch/arm/kernel/smp_tlb.c:123 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 12 [0xc])) [0 ta.ta_end+0 S4 A32])
        (reg/v:SI 12 ip [orig:136 end ] [136])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 12 ip [orig:136 end ] [136])
        (nil)))

(insn:TI 19 21 29 4 arch/arm/kernel/smp_tlb.c:121 (set (mem/s/f/j/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 ta.ta_vma+0 S4 A32])
        (reg/v/f:SI 3 r3 [orig:134 vma ] [134])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 3 r3 [orig:134 vma ] [134])
        (nil)))

(call_insn 29 19 79 4 arch/arm/kernel/smp_tlb.c:124 (parallel [
            (call (mem:SI (symbol_ref:SI ("on_each_cpu_mask.clone.0") [flags 0x3] <function_decl 0x10f7ff80 on_each_cpu_mask.clone.0>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_DEAD (reg:SI 0 r0)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(note 79 29 78 4 ( end (nil)) NOTE_INSN_VAR_LOCATION)

(note 78 79 77 4 ( start (nil)) NOTE_INSN_VAR_LOCATION)

(note 77 78 61 4 ( vma (nil)) NOTE_INSN_VAR_LOCATION)

(jump_insn 61 77 62 4 (set (pc)
        (label_ref 45)) -1 (nil))
;; End of basic block 4 -> ( 6)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  6 [100.0%] 

(barrier 62 61 80)

(note 80 62 81 5 ( vma (expr_list:REG_DEP_TRUE (reg/v/f:SI 3 r3 [orig:134 vma ] [134])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 81 80 82 5 ( start (expr_list:REG_DEP_TRUE (reg/v:SI 14 lr [orig:135 start ] [135])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 82 81 32 5 ( end (expr_list:REG_DEP_TRUE (reg/v:SI 12 ip [orig:136 end ] [136])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 3 2) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 3 [r3] 4 [r4] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	 14 [lr]

;; Pred edge  3 [22.0%] 
;; Pred edge  2 [50.0%] 
(code_label 32 82 33 5 77 "" [2 uses])

(note 33 32 35 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 35 33 38 5 NOTE_INSN_DELETED)

(insn:TI 38 35 36 5 arch/arm/kernel/smp_tlb.c:126 (set (reg:SI 2 r2)
        (reg/v/f:SI 3 r3 [orig:134 vma ] [134])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 3 r3 [orig:134 vma ] [134])
        (nil)))

(insn 36 38 37 5 arch/arm/kernel/smp_tlb.c:126 (set (reg:SI 0 r0)
        (reg/v:SI 14 lr [orig:135 start ] [135])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 14 lr [orig:135 start ] [135])
        (nil)))

(insn:TI 37 36 34 5 arch/arm/kernel/smp_tlb.c:126 (set (reg:SI 1 r1)
        (reg/v:SI 12 ip [orig:136 end ] [136])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 12 ip [orig:136 end ] [136])
        (nil)))

(insn 34 37 83 5 arch/arm/kernel/smp_tlb.c:126 (set (reg/f:SI 3 r3 [145])
        (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x10f31f60 cpu_tlb>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x10f31f60 cpu_tlb>)
        (nil)))

(note 83 34 39 5 ( vma (nil)) NOTE_INSN_VAR_LOCATION)

(call_insn:TI 39 83 85 5 arch/arm/kernel/smp_tlb.c:126 (parallel [
            (call (mem:SI (mem/s/f/j/c:SI (reg/f:SI 3 r3 [145]) [0 cpu_tlb.flush_user_range+0 S4 A32]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 246 {*call_mem} (expr_list:REG_DEAD (reg/f:SI 3 r3 [145])
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_DEAD (reg:SI 0 r0)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(note 85 39 84 5 ( end (nil)) NOTE_INSN_VAR_LOCATION)

(note 84 85 45 5 ( start (nil)) NOTE_INSN_VAR_LOCATION)
;; End of basic block 5 -> ( 6)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 5 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	
;; live  kill	

;; Pred edge  5 [100.0%]  (fallthru)
;; Pred edge  4 [100.0%] 
(code_label 45 84 48 6 79 "" [1 uses])

(note 48 45 56 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note 56 48 57 6 NOTE_INSN_EPILOGUE_BEG)

(jump_insn:TI 57 56 58 6 arch/arm/kernel/smp_tlb.c:127 (unspec_volatile [
            (return)
        ] 1) 323 {*epilogue_insns} (nil))
;; End of basic block 6 -> ( 1)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  EXIT [100.0%] 

(barrier 58 57 51)

(note 51 58 53 NOTE_INSN_DELETED)

(note 53 51 0 NOTE_INSN_DELETED)

