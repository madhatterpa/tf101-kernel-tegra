
;; Function trap_init (trap_init)[0:1083] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


trap_init

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	
;;  ref usage 	r0={1d} r1={1d} r2={1d} r3={1d} r11={1d,2u} r12={1d} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} 
;;    total ref usage 18{10d,8u,0e} in 0{0 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 5, 7
0[0,1] 1[1,1] 2[2,1] 3[3,1] 11[4,1] 12[5,1] 13[6,1] 14[7,1] 25[8,1] 26[9,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d0(0){ }d1(1){ }d2(2){ }d3(3){ }d4(11){ }d5(12){ }d6(13){ }d7(14){ }d8(25){ }d9(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9
;; rd  kill	(10)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d4(bb 0 insn -1) }u1(13){ d6(bb 0 insn -1) }u2(25){ d8(bb 0 insn -1) }u3(26){ d9(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(10)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9
;;  UD chains for artificial uses
;;   reg 11 { d4(bb 0 insn -1) }
;;   reg 13 { d6(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }
;;   reg 26 { d9(bb 0 insn -1) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u4(11){ d4(bb 0 insn -1) }u5(13){ d6(bb 0 insn -1) }u6(14){ d7(bb 0 insn -1) }u7(25){ d8(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(10)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(10)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9
;;  UD chains for artificial uses
;;   reg 11 { d4(bb 0 insn -1) }
;;   reg 13 { d6(bb 0 insn -1) }
;;   reg 14 { d7(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }

Finding needed instructions:
Finished finding needed instructions:


trap_init

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	
;;  ref usage 	r0={1d} r1={1d} r2={1d} r3={1d} r11={1d,2u} r12={1d} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} 
;;    total ref usage 18{10d,8u,0e} in 0{0 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 5, 7
0[0,1] 1[1,1] 2[2,1] 3[3,1] 11[4,1] 12[5,1] 13[6,1] 14[7,1] 25[8,1] 26[9,1] 
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(10)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 0 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function early_trap_init (early_trap_init)[0:1085] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


early_trap_init

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr]
;;  ref usage 	r0={15d,7u} r1={15d,7u} r2={14d,6u} r3={8d} r11={1d,2u} r12={8d} r13={1d,9u} r14={8d,1u} r15={7d} r16={7d} r17={7d} r18={7d} r19={7d} r20={7d} r21={7d} r22={7d} r23={7d} r24={7d} r25={1d,2u} r26={1d,1u} r27={7d} r28={7d} r29={7d} r30={7d} r31={7d} r32={7d} r33={7d} r34={7d} r35={7d} r36={7d} r37={7d} r38={7d} r39={7d} r40={7d} r41={7d} r42={7d} r43={7d} r44={7d} r45={7d} r46={7d} r47={7d} r48={7d} r49={7d} r50={7d} r51={7d} r52={7d} r53={7d} r54={7d} r55={7d} r56={7d} r57={7d} r58={7d} r59={7d} r60={7d} r61={7d} r62={7d} r63={7d} r64={7d} r65={7d} r66={7d} r67={7d} r68={7d} r69={7d} r70={7d} r71={7d} r72={7d} r73={7d} r74={7d} r75={7d} r76={7d} r77={7d} r78={7d} r79={7d} r80={7d} r81={7d} r82={7d} r83={7d} r84={7d} r85={7d} r86={7d} r87={7d} r88={7d} r89={7d} r90={7d} r91={7d} r92={7d} r93={7d} r94={7d} r95={7d} r96={7d} r97={7d} r98={7d} r99={7d} r100={7d} r101={7d} r102={7d} r103={7d} r104={7d} r105={7d} r106={7d} r107={7d} r108={7d} r109={7d} r110={7d} r111={7d} r112={7d} r113={7d} r114={7d} r115={7d} r116={7d} r117={7d} r118={7d} r119={7d} r120={7d} r121={7d} r122={7d} r123={7d} r124={7d} r125={7d} r126={7d} r127={7d} r134={1d,2u} r135={1d,2u} r136={1d,7u,2d} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,2u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,2u} r155={1d,1u} r156={1d,2u} r157={1d,1u} r163={1d,2u} r164={1d,1u} r168={1d,1u} r170={1d,1u} r171={1d,1u} r174={1d,1u} r176={1d,1u} r177={1d,1u} r178={1d,1u} r181={1d,1u} r183={1d,1u} r184={1d,1u} 
;;    total ref usage 950{875d,73u,2e} in 53{46 regular + 7 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848
0[0,15] 1[15,15] 2[30,14] 3[44,8] 11[52,1] 12[53,8] 13[61,1] 14[62,8] 15[70,7] 16[77,7] 17[84,7] 18[91,7] 19[98,7] 20[105,7] 21[112,7] 22[119,7] 23[126,7] 24[133,7] 25[140,1] 26[141,1] 27[142,7] 28[149,7] 29[156,7] 30[163,7] 31[170,7] 32[177,7] 33[184,7] 34[191,7] 35[198,7] 36[205,7] 37[212,7] 38[219,7] 39[226,7] 40[233,7] 41[240,7] 42[247,7] 43[254,7] 44[261,7] 45[268,7] 46[275,7] 47[282,7] 48[289,7] 49[296,7] 50[303,7] 51[310,7] 52[317,7] 53[324,7] 54[331,7] 55[338,7] 56[345,7] 57[352,7] 58[359,7] 59[366,7] 60[373,7] 61[380,7] 62[387,7] 63[394,7] 64[401,7] 65[408,7] 66[415,7] 67[422,7] 68[429,7] 69[436,7] 70[443,7] 71[450,7] 72[457,7] 73[464,7] 74[471,7] 75[478,7] 76[485,7] 77[492,7] 78[499,7] 79[506,7] 80[513,7] 81[520,7] 82[527,7] 83[534,7] 84[541,7] 85[548,7] 86[555,7] 87[562,7] 88[569,7] 89[576,7] 90[583,7] 91[590,7] 92[597,7] 93[604,7] 94[611,7] 95[618,7] 96[625,7] 97[632,7] 98[639,7] 99[646,7] 100[653,7] 101[660,7] 102[667,7] 103[674,7] 104[681,7] 105[688,7] 106[695,7] 107[702,7] 108[709,7] 109[716,7] 110[723,7] 111[730,7] 112[737,7] 113[744,7] 114[751,7] 115[758,7] 116[765,7] 117[772,7] 118[779,7] 119[786,7] 120[793,7] 121[800,7] 122[807,7] 123[814,7] 124[821,7] 125[828,7] 126[835,7] 127[842,7] 134[849,1] 135[850,1] 136[851,1] 137[852,1] 138[853,1] 139[854,1] 140[855,1] 146[856,1] 147[857,1] 148[858,1] 149[859,1] 155[860,1] 156[861,1] 157[862,1] 163[863,1] 164[864,1] 168[865,1] 170[866,1] 171[867,1] 174[868,1] 176[869,1] 177[870,1] 178[871,1] 181[872,1] 183[873,1] 184[874,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d14(0){ }d29(1){ }d43(2){ }d51(3){ }d52(11){ }d60(12){ }d61(13){ }d69(14){ }d140(25){ }d141(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
14, 29, 43, 51, 52, 60, 61, 69, 140, 141
;; rd  kill	(72)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 140, 141
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(10)
14, 29, 43, 51, 52, 60, 61, 69, 140, 141

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d52(bb 0 insn -1) }u1(13){ d61(bb 0 insn -1) }u2(25){ d140(bb 0 insn -1) }u3(26){ d141(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 135 136 137 138 139 140 146 147 148 149 155 156 157 163 164 168 170 171 174 176 177 178 181 183 184
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 134 135 136 137 138 139 140 146 147 148 149 155 156 157 163 164 168 170 171 174 176 177 178 181 183 184
;; live  kill	 14 [lr]
;; rd  in  	(10)
14, 29, 43, 51, 52, 60, 61, 69, 140, 141
;; rd  gen 	(26)
849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874
;; rd  kill	(34)
62, 63, 64, 65, 66, 67, 68, 69, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(35)
14, 29, 43, 51, 52, 60, 61, 140, 141, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874
;;  UD chains for artificial uses
;;   reg 11 { d52(bb 0 insn -1) }
;;   reg 13 { d61(bb 0 insn -1) }
;;   reg 25 { d140(bb 0 insn -1) }
;;   reg 26 { d141(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 6
;;      reg 137 { d852(bb 2 insn 5) }
;;   UD chains for insn luid 4 uid 10
;;      reg 139 { d854(bb 2 insn 8) }
;;      reg 140 { d855(bb 2 insn 9) }
;;   UD chains for insn luid 5 uid 15
;;      reg 136 { d851(bb 2 insn 6) }
;;   UD chains for insn luid 6 uid 16
;;      reg 140 { d855(bb 2 insn 9) }
;;   UD chains for insn luid 7 uid 17
;;      reg 138 { d853(bb 2 insn 10) }
;;   UD chains for insn luid 8 uid 18
;;      reg 13 { d61(bb 0 insn -1) }
;;      reg 0 { d6(bb 2 insn 15) }
;;      reg 1 { d20(bb 2 insn 16) }
;;      reg 2 { d32(bb 2 insn 17) }
;;   UD chains for insn luid 9 uid 20
;;      reg 136 { d851(bb 2 insn 6) }
;;   UD chains for insn luid 12 uid 23
;;      reg 148 { d858(bb 2 insn 21) }
;;      reg 149 { d859(bb 2 insn 22) }
;;   UD chains for insn luid 13 uid 28
;;      reg 146 { d856(bb 2 insn 20) }
;;   UD chains for insn luid 14 uid 29
;;      reg 149 { d859(bb 2 insn 22) }
;;   UD chains for insn luid 15 uid 30
;;      reg 147 { d857(bb 2 insn 23) }
;;   UD chains for insn luid 16 uid 31
;;      reg 13 { d61(bb 0 insn -1) }
;;      reg 0 { d5(bb 2 insn 28) }
;;      reg 1 { d19(bb 2 insn 29) }
;;      reg 2 { d31(bb 2 insn 30) }
;;   UD chains for insn luid 19 uid 35
;;      reg 155 { d860(bb 2 insn 33) }
;;      reg 156 { d861(bb 2 insn 34) }
;;   UD chains for insn luid 20 uid 36
;;      reg 136 { d851(bb 2 insn 6) }
;;   UD chains for insn luid 21 uid 37
;;      reg 134 { d849(bb 2 insn 36) }
;;      reg 135 { d850(bb 2 insn 35) }
;;   UD chains for insn luid 22 uid 42
;;      reg 157 { d862(bb 2 insn 37) }
;;   UD chains for insn luid 23 uid 43
;;      reg 156 { d861(bb 2 insn 34) }
;;   UD chains for insn luid 24 uid 44
;;      reg 135 { d850(bb 2 insn 35) }
;;   UD chains for insn luid 25 uid 45
;;      reg 13 { d61(bb 0 insn -1) }
;;      reg 0 { d4(bb 2 insn 42) }
;;      reg 1 { d18(bb 2 insn 43) }
;;      reg 2 { d30(bb 2 insn 44) }
;;   UD chains for insn luid 26 uid 47
;;      reg 136 { d851(bb 2 insn 6) }
;;   UD chains for insn luid 27 uid 49
;;      reg 163 { d863(bb 2 insn 47) }
;;   eq_note reg 136 { }
;;   UD chains for insn luid 29 uid 53
;;      reg 163 { d863(bb 2 insn 47) }
;;   UD chains for insn luid 30 uid 54
;;      reg 164 { d864(bb 2 insn 49) }
;;   UD chains for insn luid 31 uid 55
;;      reg 168 { d865(bb 2 insn 52) }
;;   UD chains for insn luid 32 uid 56
;;      reg 13 { d61(bb 0 insn -1) }
;;      reg 0 { d3(bb 2 insn 53) }
;;      reg 1 { d17(bb 2 insn 54) }
;;      reg 2 { d39(bb 2 insn 55) }
;;   UD chains for insn luid 33 uid 58
;;      reg 136 { d851(bb 2 insn 6) }
;;   UD chains for insn luid 36 uid 63
;;      reg 170 { d866(bb 2 insn 58) }
;;   UD chains for insn luid 37 uid 64
;;      reg 171 { d867(bb 2 insn 59) }
;;   UD chains for insn luid 38 uid 65
;;      reg 174 { d868(bb 2 insn 62) }
;;   UD chains for insn luid 39 uid 66
;;      reg 13 { d61(bb 0 insn -1) }
;;      reg 0 { d2(bb 2 insn 63) }
;;      reg 1 { d16(bb 2 insn 64) }
;;      reg 2 { d37(bb 2 insn 65) }
;;   UD chains for insn luid 40 uid 68
;;      reg 136 { d851(bb 2 insn 6) }
;;   UD chains for insn luid 41 uid 69
;;      reg 177 { d870(bb 2 insn 68) }
;;   eq_note reg 136 { }
;;   UD chains for insn luid 44 uid 74
;;      reg 176 { d869(bb 2 insn 69) }
;;   UD chains for insn luid 45 uid 75
;;      reg 178 { d871(bb 2 insn 70) }
;;   UD chains for insn luid 46 uid 76
;;      reg 181 { d872(bb 2 insn 73) }
;;   UD chains for insn luid 47 uid 77
;;      reg 13 { d61(bb 0 insn -1) }
;;      reg 0 { d1(bb 2 insn 74) }
;;      reg 1 { d15(bb 2 insn 75) }
;;      reg 2 { d35(bb 2 insn 76) }
;;   UD chains for insn luid 49 uid 80
;;      reg 183 { d873(bb 2 insn 79) }
;;   UD chains for insn luid 50 uid 81
;;      reg 136 { d851(bb 2 insn 6) }
;;   UD chains for insn luid 51 uid 82
;;      reg 134 { d849(bb 2 insn 36) }
;;   UD chains for insn luid 52 uid 83
;;      reg 13 { d61(bb 0 insn -1) }
;;      reg 0 { d0(bb 2 insn 81) }
;;      reg 1 { d22(bb 2 insn 82) }
;;      reg 184 { d874(bb 2 insn 80) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u71(11){ d52(bb 0 insn -1) }u72(13){ d61(bb 0 insn -1) }u73(14){ }u74(25){ d140(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(35)
14, 29, 43, 51, 52, 60, 61, 140, 141, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(35)
14, 29, 43, 51, 52, 60, 61, 140, 141, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874
;;  UD chains for artificial uses
;;   reg 11 { d52(bb 0 insn -1) }
;;   reg 13 { d61(bb 0 insn -1) }
;;   reg 14 { }
;;   reg 25 { d140(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 83 to worklist
  Adding insn 77 to worklist
  Adding insn 66 to worklist
  Adding insn 56 to worklist
  Adding insn 45 to worklist
  Adding insn 31 to worklist
  Adding insn 18 to worklist
Finished finding needed instructions:
Processing use of (reg 13 sp) in insn 18:
Processing use of (reg 0 r0) in insn 18:
  Adding insn 15 to worklist
Processing use of (reg 1 r1) in insn 18:
  Adding insn 16 to worklist
Processing use of (reg 2 r2) in insn 18:
  Adding insn 17 to worklist
Processing use of (reg 138) in insn 17:
  Adding insn 10 to worklist
Processing use of (reg 139) in insn 10:
  Adding insn 8 to worklist
Processing use of (reg 140) in insn 10:
  Adding insn 9 to worklist
Processing use of (reg 140) in insn 16:
Processing use of (reg 136 [ vectors_page.310 ]) in insn 15:
  Adding insn 6 to worklist
Processing use of (reg 137) in insn 6:
  Adding insn 5 to worklist
Processing use of (reg 13 sp) in insn 31:
Processing use of (reg 0 r0) in insn 31:
  Adding insn 28 to worklist
Processing use of (reg 1 r1) in insn 31:
  Adding insn 29 to worklist
Processing use of (reg 2 r2) in insn 31:
  Adding insn 30 to worklist
Processing use of (reg 147) in insn 30:
  Adding insn 23 to worklist
Processing use of (reg 148) in insn 23:
  Adding insn 21 to worklist
Processing use of (reg 149) in insn 23:
  Adding insn 22 to worklist
Processing use of (reg 149) in insn 29:
Processing use of (reg 146) in insn 28:
  Adding insn 20 to worklist
Processing use of (reg 136 [ vectors_page.310 ]) in insn 20:
Processing use of (reg 13 sp) in insn 45:
Processing use of (reg 0 r0) in insn 45:
  Adding insn 42 to worklist
Processing use of (reg 1 r1) in insn 45:
  Adding insn 43 to worklist
Processing use of (reg 2 r2) in insn 45:
  Adding insn 44 to worklist
Processing use of (reg 135 [ kuser_sz.318 ]) in insn 44:
  Adding insn 35 to worklist
Processing use of (reg 155) in insn 35:
  Adding insn 33 to worklist
Processing use of (reg 156) in insn 35:
  Adding insn 34 to worklist
Processing use of (reg 156) in insn 43:
Processing use of (reg 157) in insn 42:
  Adding insn 37 to worklist
Processing use of (reg 134 [ D.18814 ]) in insn 37:
  Adding insn 36 to worklist
Processing use of (reg 135 [ kuser_sz.318 ]) in insn 37:
Processing use of (reg 136 [ vectors_page.310 ]) in insn 36:
Processing use of (reg 13 sp) in insn 56:
Processing use of (reg 0 r0) in insn 56:
  Adding insn 53 to worklist
Processing use of (reg 1 r1) in insn 56:
  Adding insn 54 to worklist
Processing use of (reg 2 r2) in insn 56:
  Adding insn 55 to worklist
Processing use of (reg 168) in insn 55:
  Adding insn 52 to worklist
Processing use of (reg 164) in insn 54:
  Adding insn 49 to worklist
Processing use of (reg 163) in insn 49:
  Adding insn 47 to worklist
Processing use of (reg 136 [ vectors_page.310 ]) in insn 47:
Processing use of (reg 163) in insn 53:
Processing use of (reg 13 sp) in insn 66:
Processing use of (reg 0 r0) in insn 66:
  Adding insn 63 to worklist
Processing use of (reg 1 r1) in insn 66:
  Adding insn 64 to worklist
Processing use of (reg 2 r2) in insn 66:
  Adding insn 65 to worklist
Processing use of (reg 174) in insn 65:
  Adding insn 62 to worklist
Processing use of (reg 171) in insn 64:
  Adding insn 59 to worklist
Processing use of (reg 170) in insn 63:
  Adding insn 58 to worklist
Processing use of (reg 136 [ vectors_page.310 ]) in insn 58:
Processing use of (reg 13 sp) in insn 77:
Processing use of (reg 0 r0) in insn 77:
  Adding insn 74 to worklist
Processing use of (reg 1 r1) in insn 77:
  Adding insn 75 to worklist
Processing use of (reg 2 r2) in insn 77:
  Adding insn 76 to worklist
Processing use of (reg 181) in insn 76:
  Adding insn 73 to worklist
Processing use of (reg 178) in insn 75:
  Adding insn 70 to worklist
Processing use of (reg 176) in insn 74:
  Adding insn 69 to worklist
Processing use of (reg 177) in insn 69:
  Adding insn 68 to worklist
Processing use of (reg 136 [ vectors_page.310 ]) in insn 68:
Processing use of (reg 13 sp) in insn 83:
Processing use of (reg 0 r0) in insn 83:
  Adding insn 81 to worklist
Processing use of (reg 1 r1) in insn 83:
  Adding insn 82 to worklist
Processing use of (reg 184 [ cpu_cache.coherent_kern_range ]) in insn 83:
  Adding insn 80 to worklist
Processing use of (reg 183) in insn 80:
  Adding insn 79 to worklist
Processing use of (reg 134 [ D.18814 ]) in insn 82:
Processing use of (reg 136 [ vectors_page.310 ]) in insn 81:


early_trap_init

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr]
;;  ref usage 	r0={15d,7u} r1={15d,7u} r2={14d,6u} r3={8d} r11={1d,2u} r12={8d} r13={1d,9u} r14={8d,1u} r15={7d} r16={7d} r17={7d} r18={7d} r19={7d} r20={7d} r21={7d} r22={7d} r23={7d} r24={7d} r25={1d,2u} r26={1d,1u} r27={7d} r28={7d} r29={7d} r30={7d} r31={7d} r32={7d} r33={7d} r34={7d} r35={7d} r36={7d} r37={7d} r38={7d} r39={7d} r40={7d} r41={7d} r42={7d} r43={7d} r44={7d} r45={7d} r46={7d} r47={7d} r48={7d} r49={7d} r50={7d} r51={7d} r52={7d} r53={7d} r54={7d} r55={7d} r56={7d} r57={7d} r58={7d} r59={7d} r60={7d} r61={7d} r62={7d} r63={7d} r64={7d} r65={7d} r66={7d} r67={7d} r68={7d} r69={7d} r70={7d} r71={7d} r72={7d} r73={7d} r74={7d} r75={7d} r76={7d} r77={7d} r78={7d} r79={7d} r80={7d} r81={7d} r82={7d} r83={7d} r84={7d} r85={7d} r86={7d} r87={7d} r88={7d} r89={7d} r90={7d} r91={7d} r92={7d} r93={7d} r94={7d} r95={7d} r96={7d} r97={7d} r98={7d} r99={7d} r100={7d} r101={7d} r102={7d} r103={7d} r104={7d} r105={7d} r106={7d} r107={7d} r108={7d} r109={7d} r110={7d} r111={7d} r112={7d} r113={7d} r114={7d} r115={7d} r116={7d} r117={7d} r118={7d} r119={7d} r120={7d} r121={7d} r122={7d} r123={7d} r124={7d} r125={7d} r126={7d} r127={7d} r134={1d,2u} r135={1d,2u} r136={1d,7u,2d} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,2u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,2u} r155={1d,1u} r156={1d,2u} r157={1d,1u} r163={1d,2u} r164={1d,1u} r168={1d,1u} r170={1d,1u} r171={1d,1u} r174={1d,1u} r176={1d,1u} r177={1d,1u} r178={1d,1u} r181={1d,1u} r183={1d,1u} r184={1d,1u} 
;;    total ref usage 950{875d,73u,2e} in 53{46 regular + 7 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848
0[0,15] 1[15,15] 2[30,14] 3[44,8] 11[52,1] 12[53,8] 13[61,1] 14[62,8] 15[70,7] 16[77,7] 17[84,7] 18[91,7] 19[98,7] 20[105,7] 21[112,7] 22[119,7] 23[126,7] 24[133,7] 25[140,1] 26[141,1] 27[142,7] 28[149,7] 29[156,7] 30[163,7] 31[170,7] 32[177,7] 33[184,7] 34[191,7] 35[198,7] 36[205,7] 37[212,7] 38[219,7] 39[226,7] 40[233,7] 41[240,7] 42[247,7] 43[254,7] 44[261,7] 45[268,7] 46[275,7] 47[282,7] 48[289,7] 49[296,7] 50[303,7] 51[310,7] 52[317,7] 53[324,7] 54[331,7] 55[338,7] 56[345,7] 57[352,7] 58[359,7] 59[366,7] 60[373,7] 61[380,7] 62[387,7] 63[394,7] 64[401,7] 65[408,7] 66[415,7] 67[422,7] 68[429,7] 69[436,7] 70[443,7] 71[450,7] 72[457,7] 73[464,7] 74[471,7] 75[478,7] 76[485,7] 77[492,7] 78[499,7] 79[506,7] 80[513,7] 81[520,7] 82[527,7] 83[534,7] 84[541,7] 85[548,7] 86[555,7] 87[562,7] 88[569,7] 89[576,7] 90[583,7] 91[590,7] 92[597,7] 93[604,7] 94[611,7] 95[618,7] 96[625,7] 97[632,7] 98[639,7] 99[646,7] 100[653,7] 101[660,7] 102[667,7] 103[674,7] 104[681,7] 105[688,7] 106[695,7] 107[702,7] 108[709,7] 109[716,7] 110[723,7] 111[730,7] 112[737,7] 113[744,7] 114[751,7] 115[758,7] 116[765,7] 117[772,7] 118[779,7] 119[786,7] 120[793,7] 121[800,7] 122[807,7] 123[814,7] 124[821,7] 125[828,7] 126[835,7] 127[842,7] 134[849,1] 135[850,1] 136[851,1] 137[852,1] 138[853,1] 139[854,1] 140[855,1] 146[856,1] 147[857,1] 148[858,1] 149[859,1] 155[860,1] 156[861,1] 157[862,1] 163[863,1] 164[864,1] 168[865,1] 170[866,1] 171[867,1] 174[868,1] 176[869,1] 177[870,1] 178[871,1] 181[872,1] 183[873,1] 184[874,1] 
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 135 136 137 138 139 140 146 147 148 149 155 156 157 163 164 168 170 171 174 176 177 178 181 183 184
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 134 135 136 137 138 139 140 146 147 148 149 155 156 157 163 164 168 170 171 174 176 177 178 181 183 184
;; live  kill	 14 [lr]
;; rd  in  	(10)
14, 29, 43, 51, 52, 60, 61, 69, 140, 141
;; rd  gen 	(26)
849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874
;; rd  kill	(34)
62, 63, 64, 65, 66, 67, 68, 69, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)

(insn 5 2 6 2 arch/arm/kernel/traps.c:779 (set (reg/f:SI 137)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 6 5 8 2 arch/arm/kernel/traps.c:779 (set (reg/f:SI 136 [ vectors_page.310 ])
        (mem/f/c/i:SI (reg/f:SI 137) [0 vectors_page+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 137)
        (nil)))

(insn 8 6 9 2 arch/arm/kernel/traps.c:791 (set (reg/f:SI 139)
        (symbol_ref:SI ("__vectors_end") [flags 0xc0] <var_decl 0x1121f3c0 __vectors_end>)) 167 {*arm_movsi_insn} (nil))

(insn 9 8 10 2 arch/arm/kernel/traps.c:791 (set (reg/f:SI 140)
        (symbol_ref:SI ("__vectors_start") [flags 0xc0] <var_decl 0x1121f360 __vectors_start>)) 167 {*arm_movsi_insn} (nil))

(insn 10 9 15 2 arch/arm/kernel/traps.c:791 (set (reg:SI 138)
        (minus:SI (reg/f:SI 139)
            (reg/f:SI 140))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg/f:SI 139)
        (expr_list:REG_EQUAL (minus:SI (symbol_ref:SI ("__vectors_end") [flags 0xc0] <var_decl 0x1121f3c0 __vectors_end>)
                (symbol_ref:SI ("__vectors_start") [flags 0xc0] <var_decl 0x1121f360 __vectors_start>))
            (nil))))

(insn 15 10 16 2 arch/arm/kernel/traps.c:791 (set (reg:SI 0 r0)
        (reg/f:SI 136 [ vectors_page.310 ])) 167 {*arm_movsi_insn} (nil))

(insn 16 15 17 2 arch/arm/kernel/traps.c:791 (set (reg:SI 1 r1)
        (reg/f:SI 140)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 140)
        (expr_list:REG_EQUAL (symbol_ref:SI ("__vectors_start") [flags 0xc0] <var_decl 0x1121f360 __vectors_start>)
            (nil))))

(insn 17 16 18 2 arch/arm/kernel/traps.c:791 (set (reg:SI 2 r2)
        (reg:SI 138)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 138)
        (nil)))

(call_insn 18 17 20 2 arch/arm/kernel/traps.c:791 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41] <function_decl 0x1124e800 memcpy>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 20 18 21 2 arch/arm/kernel/traps.c:792 (set (reg/f:SI 146)
        (plus:SI (reg/f:SI 136 [ vectors_page.310 ])
            (const_int 512 [0x200]))) 4 {*arm_addsi3} (nil))

(insn 21 20 22 2 arch/arm/kernel/traps.c:792 (set (reg/f:SI 148)
        (symbol_ref:SI ("__stubs_end") [flags 0xc0] <var_decl 0x1121f300 __stubs_end>)) 167 {*arm_movsi_insn} (nil))

(insn 22 21 23 2 arch/arm/kernel/traps.c:792 (set (reg/f:SI 149)
        (symbol_ref:SI ("__stubs_start") [flags 0xc0] <var_decl 0x1121f2a0 __stubs_start>)) 167 {*arm_movsi_insn} (nil))

(insn 23 22 28 2 arch/arm/kernel/traps.c:792 (set (reg:SI 147)
        (minus:SI (reg/f:SI 148)
            (reg/f:SI 149))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg/f:SI 148)
        (expr_list:REG_EQUAL (minus:SI (symbol_ref:SI ("__stubs_end") [flags 0xc0] <var_decl 0x1121f300 __stubs_end>)
                (symbol_ref:SI ("__stubs_start") [flags 0xc0] <var_decl 0x1121f2a0 __stubs_start>))
            (nil))))

(insn 28 23 29 2 arch/arm/kernel/traps.c:792 (set (reg:SI 0 r0)
        (reg/f:SI 146)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 146)
        (nil)))

(insn 29 28 30 2 arch/arm/kernel/traps.c:792 (set (reg:SI 1 r1)
        (reg/f:SI 149)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 149)
        (expr_list:REG_EQUAL (symbol_ref:SI ("__stubs_start") [flags 0xc0] <var_decl 0x1121f2a0 __stubs_start>)
            (nil))))

(insn 30 29 31 2 arch/arm/kernel/traps.c:792 (set (reg:SI 2 r2)
        (reg:SI 147)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 147)
        (nil)))

(call_insn 31 30 33 2 arch/arm/kernel/traps.c:792 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41] <function_decl 0x1124e800 memcpy>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 33 31 34 2 arch/arm/kernel/traps.c:793 (set (reg/f:SI 155)
        (symbol_ref:SI ("__kuser_helper_end") [flags 0xc0] <var_decl 0x1121f480 __kuser_helper_end>)) 167 {*arm_movsi_insn} (nil))

(insn 34 33 35 2 arch/arm/kernel/traps.c:793 (set (reg/f:SI 156)
        (symbol_ref:SI ("__kuser_helper_start") [flags 0xc0] <var_decl 0x1121f420 __kuser_helper_start>)) 167 {*arm_movsi_insn} (nil))

(insn 35 34 36 2 arch/arm/kernel/traps.c:793 (set (reg:SI 135 [ kuser_sz.318 ])
        (minus:SI (reg/f:SI 155)
            (reg/f:SI 156))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg/f:SI 155)
        (expr_list:REG_EQUAL (minus:SI (symbol_ref:SI ("__kuser_helper_end") [flags 0xc0] <var_decl 0x1121f480 __kuser_helper_end>)
                (symbol_ref:SI ("__kuser_helper_start") [flags 0xc0] <var_decl 0x1121f420 __kuser_helper_start>))
            (nil))))

(insn 36 35 37 2 arch/arm/kernel/traps.c:793 (set (reg/f:SI 134 [ D.18814 ])
        (plus:SI (reg/f:SI 136 [ vectors_page.310 ])
            (const_int 4096 [0x1000]))) 4 {*arm_addsi3} (nil))

(insn 37 36 42 2 arch/arm/kernel/traps.c:793 (set (reg:SI 157)
        (minus:SI (reg/f:SI 134 [ D.18814 ])
            (reg:SI 135 [ kuser_sz.318 ]))) 28 {*arm_subsi3_insn} (nil))

(insn 42 37 43 2 arch/arm/kernel/traps.c:793 (set (reg:SI 0 r0)
        (reg:SI 157)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 157)
        (nil)))

(insn 43 42 44 2 arch/arm/kernel/traps.c:793 (set (reg:SI 1 r1)
        (reg/f:SI 156)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 156)
        (expr_list:REG_EQUAL (symbol_ref:SI ("__kuser_helper_start") [flags 0xc0] <var_decl 0x1121f420 __kuser_helper_start>)
            (nil))))

(insn 44 43 45 2 arch/arm/kernel/traps.c:793 (set (reg:SI 2 r2)
        (reg:SI 135 [ kuser_sz.318 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 135 [ kuser_sz.318 ])
        (nil)))

(call_insn 45 44 47 2 arch/arm/kernel/traps.c:793 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41] <function_decl 0x1124e800 memcpy>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 47 45 49 2 arch/arm/kernel/traps.c:771 (set (reg/f:SI 163)
        (plus:SI (reg/f:SI 136 [ vectors_page.310 ])
            (const_int 4064 [0xfe0]))) 4 {*arm_addsi3} (nil))

(insn 49 47 52 2 arch/arm/kernel/traps.c:771 (set (reg/f:SI 164)
        (plus:SI (reg/f:SI 163)
            (const_int 8 [0x8]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 136 [ vectors_page.310 ])
            (const_int 4072 [0xfe8]))
        (nil)))

(insn 52 49 53 2 arch/arm/kernel/traps.c:771 (set (reg:SI 168)
        (const_int 4 [0x4])) 167 {*arm_movsi_insn} (nil))

(insn 53 52 54 2 arch/arm/kernel/traps.c:771 (set (reg:SI 0 r0)
        (reg/f:SI 163)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 163)
        (nil)))

(insn 54 53 55 2 arch/arm/kernel/traps.c:771 (set (reg:SI 1 r1)
        (reg/f:SI 164)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 164)
        (nil)))

(insn 55 54 56 2 arch/arm/kernel/traps.c:771 (set (reg:SI 2 r2)
        (reg:SI 168)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 168)
        (expr_list:REG_EQUAL (const_int 4 [0x4])
            (nil))))

(call_insn 56 55 58 2 arch/arm/kernel/traps.c:771 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41] <function_decl 0x1124e800 memcpy>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 58 56 59 2 arch/arm/kernel/traps.c:804 (set (reg/f:SI 170)
        (plus:SI (reg/f:SI 136 [ vectors_page.310 ])
            (const_int 1280 [0x500]))) 4 {*arm_addsi3} (nil))

(insn 59 58 62 2 arch/arm/kernel/traps.c:804 (set (reg/f:SI 171)
        (symbol_ref:SI ("sigreturn_codes") [flags 0xc0] <var_decl 0x111bf780 sigreturn_codes>)) 167 {*arm_movsi_insn} (nil))

(insn 62 59 63 2 arch/arm/kernel/traps.c:804 (set (reg:SI 174)
        (const_int 28 [0x1c])) 167 {*arm_movsi_insn} (nil))

(insn 63 62 64 2 arch/arm/kernel/traps.c:804 (set (reg:SI 0 r0)
        (reg/f:SI 170)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 170)
        (nil)))

(insn 64 63 65 2 arch/arm/kernel/traps.c:804 (set (reg:SI 1 r1)
        (reg/f:SI 171)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 171)
        (expr_list:REG_EQUAL (symbol_ref:SI ("sigreturn_codes") [flags 0xc0] <var_decl 0x111bf780 sigreturn_codes>)
            (nil))))

(insn 65 64 66 2 arch/arm/kernel/traps.c:804 (set (reg:SI 2 r2)
        (reg:SI 174)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 174)
        (expr_list:REG_EQUAL (const_int 28 [0x1c])
            (nil))))

(call_insn 66 65 68 2 arch/arm/kernel/traps.c:804 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41] <function_decl 0x1124e800 memcpy>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 68 66 69 2 arch/arm/kernel/traps.c:806 (set (reg/f:SI 177)
        (plus:SI (reg/f:SI 136 [ vectors_page.310 ])
            (const_int 1296 [0x510]))) 4 {*arm_addsi3} (nil))

(insn 69 68 70 2 arch/arm/kernel/traps.c:806 (set (reg/f:SI 176)
        (plus:SI (reg/f:SI 177)
            (const_int 12 [0xc]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 177)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 136 [ vectors_page.310 ])
                (const_int 1308 [0x51c]))
            (nil))))

(insn 70 69 73 2 arch/arm/kernel/traps.c:806 (set (reg/f:SI 178)
        (symbol_ref:SI ("syscall_restart_code") [flags 0xc0] <var_decl 0x111bf7e0 syscall_restart_code>)) 167 {*arm_movsi_insn} (nil))

(insn 73 70 74 2 arch/arm/kernel/traps.c:806 (set (reg:SI 181)
        (const_int 8 [0x8])) 167 {*arm_movsi_insn} (nil))

(insn 74 73 75 2 arch/arm/kernel/traps.c:806 (set (reg:SI 0 r0)
        (reg/f:SI 176)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 176)
        (nil)))

(insn 75 74 76 2 arch/arm/kernel/traps.c:806 (set (reg:SI 1 r1)
        (reg/f:SI 178)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 178)
        (expr_list:REG_EQUAL (symbol_ref:SI ("syscall_restart_code") [flags 0xc0] <var_decl 0x111bf7e0 syscall_restart_code>)
            (nil))))

(insn 76 75 77 2 arch/arm/kernel/traps.c:806 (set (reg:SI 2 r2)
        (reg:SI 181)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 181)
        (expr_list:REG_EQUAL (const_int 8 [0x8])
            (nil))))

(call_insn 77 76 79 2 arch/arm/kernel/traps.c:806 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41] <function_decl 0x1124e800 memcpy>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 79 77 80 2 arch/arm/kernel/traps.c:809 (set (reg/f:SI 183)
        (symbol_ref:SI ("cpu_cache") [flags 0xc0] <var_decl 0x111974e0 cpu_cache>)) 167 {*arm_movsi_insn} (nil))

(insn 80 79 81 2 arch/arm/kernel/traps.c:809 (set (reg/f:SI 184 [ cpu_cache.coherent_kern_range ])
        (mem/s/f/j/c:SI (plus:SI (reg/f:SI 183)
                (const_int 16 [0x10])) [0 cpu_cache.coherent_kern_range+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 183)
        (nil)))

(insn 81 80 82 2 arch/arm/kernel/traps.c:809 (set (reg:SI 0 r0)
        (reg/f:SI 136 [ vectors_page.310 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 136 [ vectors_page.310 ])
        (nil)))

(insn 82 81 83 2 arch/arm/kernel/traps.c:809 (set (reg:SI 1 r1)
        (reg/f:SI 134 [ D.18814 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 134 [ D.18814 ])
        (nil)))

(call_insn 83 82 0 2 arch/arm/kernel/traps.c:809 (parallel [
            (call (mem:SI (reg/f:SI 184 [ cpu_cache.coherent_kern_range ]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 244 {*call_reg_armv5} (expr_list:REG_DEAD (reg/f:SI 184 [ cpu_cache.coherent_kern_range ])
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_DEAD (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(35)
14, 29, 43, 51, 52, 60, 61, 140, 141, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function __pgd_error (__pgd_error)[0:1080]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


__pgd_error

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr]
;;  ref usage 	r0={3d,2u} r1={3d,2u} r2={3d,2u} r3={2d} r11={1d,2u} r12={2d} r13={1d,5u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,2u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r140={1d,1u} 
;;    total ref usage 159{136d,23u,0e} in 12{11 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129
0[0,3] 1[3,3] 2[6,3] 3[9,2] 11[11,1] 12[12,2] 13[14,1] 14[15,2] 15[17,1] 16[18,1] 17[19,1] 18[20,1] 19[21,1] 20[22,1] 21[23,1] 22[24,1] 23[25,1] 24[26,1] 25[27,1] 26[28,1] 27[29,1] 28[30,1] 29[31,1] 30[32,1] 31[33,1] 32[34,1] 33[35,1] 34[36,1] 35[37,1] 36[38,1] 37[39,1] 38[40,1] 39[41,1] 40[42,1] 41[43,1] 42[44,1] 43[45,1] 44[46,1] 45[47,1] 46[48,1] 47[49,1] 48[50,1] 49[51,1] 50[52,1] 51[53,1] 52[54,1] 53[55,1] 54[56,1] 55[57,1] 56[58,1] 57[59,1] 58[60,1] 59[61,1] 60[62,1] 61[63,1] 62[64,1] 63[65,1] 64[66,1] 65[67,1] 66[68,1] 67[69,1] 68[70,1] 69[71,1] 70[72,1] 71[73,1] 72[74,1] 73[75,1] 74[76,1] 75[77,1] 76[78,1] 77[79,1] 78[80,1] 79[81,1] 80[82,1] 81[83,1] 82[84,1] 83[85,1] 84[86,1] 85[87,1] 86[88,1] 87[89,1] 88[90,1] 89[91,1] 90[92,1] 91[93,1] 92[94,1] 93[95,1] 94[96,1] 95[97,1] 96[98,1] 97[99,1] 98[100,1] 99[101,1] 100[102,1] 101[103,1] 102[104,1] 103[105,1] 104[106,1] 105[107,1] 106[108,1] 107[109,1] 108[110,1] 109[111,1] 110[112,1] 111[113,1] 112[114,1] 113[115,1] 114[116,1] 115[117,1] 116[118,1] 117[119,1] 118[120,1] 119[121,1] 120[122,1] 121[123,1] 122[124,1] 123[125,1] 124[126,1] 125[127,1] 126[128,1] 127[129,1] 133[130,1] 134[131,1] 135[132,1] 136[133,1] 137[134,1] 140[135,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d2(0){ }d5(1){ }d8(2){ }d10(3){ }d11(11){ }d13(12){ }d14(13){ }d16(14){ }d27(25){ }d28(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
2, 5, 8, 10, 11, 13, 14, 16, 27, 28
;; rd  kill	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 27, 28
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(10)
2, 5, 8, 10, 11, 13, 14, 16, 27, 28

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d11(bb 0 insn -1) }u1(13){ d14(bb 0 insn -1) }u2(25){ d27(bb 0 insn -1) }u3(26){ d28(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134 135 136 137 140
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 133 134 135 136 137 140
;; live  kill	 14 [lr]
;; rd  in  	(10)
2, 5, 8, 10, 11, 13, 14, 16, 27, 28
;; rd  gen 	(7)
0, 130, 131, 132, 133, 134, 135
;; rd  kill	(11)
0, 1, 2, 15, 16, 130, 131, 132, 133, 134, 135
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(15)
0, 5, 8, 10, 11, 13, 14, 27, 28, 130, 131, 132, 133, 134, 135
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d2(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 3
;;      reg 1 { d5(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 4
;;      reg 2 { d8(bb 0 insn -1) }
;;   UD chains for insn luid 4 uid 9
;;      reg 135 { d132(bb 2 insn 4) }
;;   UD chains for insn luid 6 uid 25
;;      reg 13 { d14(bb 0 insn -1) }
;;      reg 137 { d134(bb 2 insn 9) }
;;   UD chains for insn luid 7 uid 26
;;      reg 13 { d14(bb 0 insn -1) }
;;      reg 140 { d135(bb 2 insn 24) }
;;   UD chains for insn luid 8 uid 12
;;      reg 136 { d133(bb 2 insn 8) }
;;   UD chains for insn luid 9 uid 13
;;      reg 133 { d130(bb 2 insn 2) }
;;   UD chains for insn luid 10 uid 14
;;      reg 134 { d131(bb 2 insn 3) }
;;   UD chains for insn luid 11 uid 15
;;      reg 13 { d14(bb 0 insn -1) }
;;      reg 0 { d1(bb 2 insn 12) }
;;      reg 1 { d4(bb 2 insn 13) }
;;      reg 2 { d7(bb 2 insn 14) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u19(11){ d11(bb 0 insn -1) }u20(13){ d14(bb 0 insn -1) }u21(14){ }u22(25){ d27(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(15)
0, 5, 8, 10, 11, 13, 14, 27, 28, 130, 131, 132, 133, 134, 135
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(15)
0, 5, 8, 10, 11, 13, 14, 27, 28, 130, 131, 132, 133, 134, 135
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 14 { }
;;   reg 25 { d27(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 15 to worklist
  Adding insn 26 to worklist
  Adding insn 25 to worklist
Finished finding needed instructions:
Processing use of (reg 13 sp) in insn 25:
Processing use of (reg 137) in insn 25:
  Adding insn 9 to worklist
Processing use of (reg 135 [ pgd ]) in insn 9:
  Adding insn 4 to worklist
Processing use of (reg 2 r2) in insn 4:
Processing use of (reg 13 sp) in insn 26:
Processing use of (reg 140 [+4 ]) in insn 26:
  Adding insn 24 to worklist
Processing use of (reg 13 sp) in insn 15:
Processing use of (reg 0 r0) in insn 15:
  Adding insn 12 to worklist
Processing use of (reg 1 r1) in insn 15:
  Adding insn 13 to worklist
Processing use of (reg 2 r2) in insn 15:
  Adding insn 14 to worklist
Processing use of (reg 134 [ line ]) in insn 14:
  Adding insn 3 to worklist
Processing use of (reg 1 r1) in insn 3:
Processing use of (reg 133 [ file ]) in insn 13:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 136) in insn 12:
  Adding insn 8 to worklist


__pgd_error

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr]
;;  ref usage 	r0={3d,2u} r1={3d,2u} r2={3d,2u} r3={2d} r11={1d,2u} r12={2d} r13={1d,5u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,2u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r140={1d,1u} 
;;    total ref usage 159{136d,23u,0e} in 12{11 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129
0[0,3] 1[3,3] 2[6,3] 3[9,2] 11[11,1] 12[12,2] 13[14,1] 14[15,2] 15[17,1] 16[18,1] 17[19,1] 18[20,1] 19[21,1] 20[22,1] 21[23,1] 22[24,1] 23[25,1] 24[26,1] 25[27,1] 26[28,1] 27[29,1] 28[30,1] 29[31,1] 30[32,1] 31[33,1] 32[34,1] 33[35,1] 34[36,1] 35[37,1] 36[38,1] 37[39,1] 38[40,1] 39[41,1] 40[42,1] 41[43,1] 42[44,1] 43[45,1] 44[46,1] 45[47,1] 46[48,1] 47[49,1] 48[50,1] 49[51,1] 50[52,1] 51[53,1] 52[54,1] 53[55,1] 54[56,1] 55[57,1] 56[58,1] 57[59,1] 58[60,1] 59[61,1] 60[62,1] 61[63,1] 62[64,1] 63[65,1] 64[66,1] 65[67,1] 66[68,1] 67[69,1] 68[70,1] 69[71,1] 70[72,1] 71[73,1] 72[74,1] 73[75,1] 74[76,1] 75[77,1] 76[78,1] 77[79,1] 78[80,1] 79[81,1] 80[82,1] 81[83,1] 82[84,1] 83[85,1] 84[86,1] 85[87,1] 86[88,1] 87[89,1] 88[90,1] 89[91,1] 90[92,1] 91[93,1] 92[94,1] 93[95,1] 94[96,1] 95[97,1] 96[98,1] 97[99,1] 98[100,1] 99[101,1] 100[102,1] 101[103,1] 102[104,1] 103[105,1] 104[106,1] 105[107,1] 106[108,1] 107[109,1] 108[110,1] 109[111,1] 110[112,1] 111[113,1] 112[114,1] 113[115,1] 114[116,1] 115[117,1] 116[118,1] 117[119,1] 118[120,1] 119[121,1] 120[122,1] 121[123,1] 122[124,1] 123[125,1] 124[126,1] 125[127,1] 126[128,1] 127[129,1] 133[130,1] 134[131,1] 135[132,1] 136[133,1] 137[134,1] 140[135,1] 
(note 1 0 6 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134 135 136 137 140
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 133 134 135 136 137 140
;; live  kill	 14 [lr]
;; rd  in  	(10)
2, 5, 8, 10, 11, 13, 14, 16, 27, 28
;; rd  gen 	(7)
0, 130, 131, 132, 133, 134, 135
;; rd  kill	(11)
0, 1, 2, 15, 16, 130, 131, 132, 133, 134, 135

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 6 3 2 arch/arm/kernel/traps.c:739 (set (reg/v/f:SI 133 [ file ])
        (reg:SI 0 r0 [ file ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ file ])
        (nil)))

(insn 3 2 4 2 arch/arm/kernel/traps.c:739 (set (reg/v:SI 134 [ line ])
        (reg:SI 1 r1 [ line ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ line ])
        (nil)))

(insn 4 3 5 2 arch/arm/kernel/traps.c:739 (set (reg/v/f:SI 135 [ pgd ])
        (reg:SI 2 r2 [ pgd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ pgd ])
        (nil)))

(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)

(insn 8 5 9 2 arch/arm/kernel/traps.c:740 (set (reg/f:SI 136)
        (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x1124a400>)) 167 {*arm_movsi_insn} (nil))

(insn 9 8 24 2 arch/arm/kernel/traps.c:740 (set (reg:SI 137)
        (mem:SI (reg/v/f:SI 135 [ pgd ]) [0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 135 [ pgd ])
        (nil)))

(insn 24 9 25 2 arch/arm/kernel/traps.c:740 (set (reg:SI 140 [+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 25 24 26 2 arch/arm/kernel/traps.c:740 (set (mem/i:SI (reg/f:SI 13 sp) [0 S4 A64])
        (reg:SI 137)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 137)
        (nil)))

(insn 26 25 12 2 arch/arm/kernel/traps.c:740 (set (mem/i:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 140 [+4 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 140 [+4 ])
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn 12 26 13 2 arch/arm/kernel/traps.c:740 (set (reg:SI 0 r0)
        (reg/f:SI 136)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 136)
        (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x1124a400>)
            (nil))))

(insn 13 12 14 2 arch/arm/kernel/traps.c:740 (set (reg:SI 1 r1)
        (reg/v/f:SI 133 [ file ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 133 [ file ])
        (nil)))

(insn 14 13 15 2 arch/arm/kernel/traps.c:740 (set (reg:SI 2 r2)
        (reg/v:SI 134 [ line ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 134 [ line ])
        (nil)))

(call_insn 15 14 0 2 arch/arm/kernel/traps.c:740 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10aa9180 printk>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(15)
0, 5, 8, 10, 11, 13, 14, 27, 28, 130, 131, 132, 133, 134, 135


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function __pmd_error (__pmd_error)[0:1079]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


__pmd_error

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr]
;;  ref usage 	r0={3d,2u} r1={3d,2u} r2={3d,2u} r3={2d} r11={1d,2u} r12={2d} r13={1d,5u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,2u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r139={1d,1u} 
;;    total ref usage 157{135d,22u,0e} in 11{10 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129
0[0,3] 1[3,3] 2[6,3] 3[9,2] 11[11,1] 12[12,2] 13[14,1] 14[15,2] 15[17,1] 16[18,1] 17[19,1] 18[20,1] 19[21,1] 20[22,1] 21[23,1] 22[24,1] 23[25,1] 24[26,1] 25[27,1] 26[28,1] 27[29,1] 28[30,1] 29[31,1] 30[32,1] 31[33,1] 32[34,1] 33[35,1] 34[36,1] 35[37,1] 36[38,1] 37[39,1] 38[40,1] 39[41,1] 40[42,1] 41[43,1] 42[44,1] 43[45,1] 44[46,1] 45[47,1] 46[48,1] 47[49,1] 48[50,1] 49[51,1] 50[52,1] 51[53,1] 52[54,1] 53[55,1] 54[56,1] 55[57,1] 56[58,1] 57[59,1] 58[60,1] 59[61,1] 60[62,1] 61[63,1] 62[64,1] 63[65,1] 64[66,1] 65[67,1] 66[68,1] 67[69,1] 68[70,1] 69[71,1] 70[72,1] 71[73,1] 72[74,1] 73[75,1] 74[76,1] 75[77,1] 76[78,1] 77[79,1] 78[80,1] 79[81,1] 80[82,1] 81[83,1] 82[84,1] 83[85,1] 84[86,1] 85[87,1] 86[88,1] 87[89,1] 88[90,1] 89[91,1] 90[92,1] 91[93,1] 92[94,1] 93[95,1] 94[96,1] 95[97,1] 96[98,1] 97[99,1] 98[100,1] 99[101,1] 100[102,1] 101[103,1] 102[104,1] 103[105,1] 104[106,1] 105[107,1] 106[108,1] 107[109,1] 108[110,1] 109[111,1] 110[112,1] 111[113,1] 112[114,1] 113[115,1] 114[116,1] 115[117,1] 116[118,1] 117[119,1] 118[120,1] 119[121,1] 120[122,1] 121[123,1] 122[124,1] 123[125,1] 124[126,1] 125[127,1] 126[128,1] 127[129,1] 133[130,1] 134[131,1] 135[132,1] 136[133,1] 139[134,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d2(0){ }d5(1){ }d8(2){ }d10(3){ }d11(11){ }d13(12){ }d14(13){ }d16(14){ }d27(25){ }d28(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
2, 5, 8, 10, 11, 13, 14, 16, 27, 28
;; rd  kill	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 27, 28
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(10)
2, 5, 8, 10, 11, 13, 14, 16, 27, 28

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d11(bb 0 insn -1) }u1(13){ d14(bb 0 insn -1) }u2(25){ d27(bb 0 insn -1) }u3(26){ d28(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134 135 136 139
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 133 134 135 136 139
;; live  kill	 14 [lr]
;; rd  in  	(10)
2, 5, 8, 10, 11, 13, 14, 16, 27, 28
;; rd  gen 	(6)
0, 130, 131, 132, 133, 134
;; rd  kill	(10)
0, 1, 2, 15, 16, 130, 131, 132, 133, 134
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(14)
0, 5, 8, 10, 11, 13, 14, 27, 28, 130, 131, 132, 133, 134
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d2(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 3
;;      reg 1 { d5(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 4
;;      reg 2 { d8(bb 0 insn -1) }
;;   UD chains for insn luid 5 uid 24
;;      reg 13 { d14(bb 0 insn -1) }
;;      reg 135 { d132(bb 2 insn 4) }
;;   UD chains for insn luid 6 uid 25
;;      reg 13 { d14(bb 0 insn -1) }
;;      reg 139 { d134(bb 2 insn 23) }
;;   UD chains for insn luid 7 uid 11
;;      reg 136 { d133(bb 2 insn 8) }
;;   UD chains for insn luid 8 uid 12
;;      reg 133 { d130(bb 2 insn 2) }
;;   UD chains for insn luid 9 uid 13
;;      reg 134 { d131(bb 2 insn 3) }
;;   UD chains for insn luid 10 uid 14
;;      reg 13 { d14(bb 0 insn -1) }
;;      reg 0 { d1(bb 2 insn 11) }
;;      reg 1 { d4(bb 2 insn 12) }
;;      reg 2 { d7(bb 2 insn 13) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u18(11){ d11(bb 0 insn -1) }u19(13){ d14(bb 0 insn -1) }u20(14){ }u21(25){ d27(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(14)
0, 5, 8, 10, 11, 13, 14, 27, 28, 130, 131, 132, 133, 134
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(14)
0, 5, 8, 10, 11, 13, 14, 27, 28, 130, 131, 132, 133, 134
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 14 { }
;;   reg 25 { d27(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 14 to worklist
  Adding insn 25 to worklist
  Adding insn 24 to worklist
Finished finding needed instructions:
Processing use of (reg 13 sp) in insn 24:
Processing use of (reg 135 [ pmd ]) in insn 24:
  Adding insn 4 to worklist
Processing use of (reg 2 r2) in insn 4:
Processing use of (reg 13 sp) in insn 25:
Processing use of (reg 139 [+4 ]) in insn 25:
  Adding insn 23 to worklist
Processing use of (reg 13 sp) in insn 14:
Processing use of (reg 0 r0) in insn 14:
  Adding insn 11 to worklist
Processing use of (reg 1 r1) in insn 14:
  Adding insn 12 to worklist
Processing use of (reg 2 r2) in insn 14:
  Adding insn 13 to worklist
Processing use of (reg 134 [ line ]) in insn 13:
  Adding insn 3 to worklist
Processing use of (reg 1 r1) in insn 3:
Processing use of (reg 133 [ file ]) in insn 12:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 136) in insn 11:
  Adding insn 8 to worklist


__pmd_error

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr]
;;  ref usage 	r0={3d,2u} r1={3d,2u} r2={3d,2u} r3={2d} r11={1d,2u} r12={2d} r13={1d,5u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,2u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r139={1d,1u} 
;;    total ref usage 157{135d,22u,0e} in 11{10 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129
0[0,3] 1[3,3] 2[6,3] 3[9,2] 11[11,1] 12[12,2] 13[14,1] 14[15,2] 15[17,1] 16[18,1] 17[19,1] 18[20,1] 19[21,1] 20[22,1] 21[23,1] 22[24,1] 23[25,1] 24[26,1] 25[27,1] 26[28,1] 27[29,1] 28[30,1] 29[31,1] 30[32,1] 31[33,1] 32[34,1] 33[35,1] 34[36,1] 35[37,1] 36[38,1] 37[39,1] 38[40,1] 39[41,1] 40[42,1] 41[43,1] 42[44,1] 43[45,1] 44[46,1] 45[47,1] 46[48,1] 47[49,1] 48[50,1] 49[51,1] 50[52,1] 51[53,1] 52[54,1] 53[55,1] 54[56,1] 55[57,1] 56[58,1] 57[59,1] 58[60,1] 59[61,1] 60[62,1] 61[63,1] 62[64,1] 63[65,1] 64[66,1] 65[67,1] 66[68,1] 67[69,1] 68[70,1] 69[71,1] 70[72,1] 71[73,1] 72[74,1] 73[75,1] 74[76,1] 75[77,1] 76[78,1] 77[79,1] 78[80,1] 79[81,1] 80[82,1] 81[83,1] 82[84,1] 83[85,1] 84[86,1] 85[87,1] 86[88,1] 87[89,1] 88[90,1] 89[91,1] 90[92,1] 91[93,1] 92[94,1] 93[95,1] 94[96,1] 95[97,1] 96[98,1] 97[99,1] 98[100,1] 99[101,1] 100[102,1] 101[103,1] 102[104,1] 103[105,1] 104[106,1] 105[107,1] 106[108,1] 107[109,1] 108[110,1] 109[111,1] 110[112,1] 111[113,1] 112[114,1] 113[115,1] 114[116,1] 115[117,1] 116[118,1] 117[119,1] 118[120,1] 119[121,1] 120[122,1] 121[123,1] 122[124,1] 123[125,1] 124[126,1] 125[127,1] 126[128,1] 127[129,1] 133[130,1] 134[131,1] 135[132,1] 136[133,1] 139[134,1] 
(note 1 0 6 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134 135 136 139
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 133 134 135 136 139
;; live  kill	 14 [lr]
;; rd  in  	(10)
2, 5, 8, 10, 11, 13, 14, 16, 27, 28
;; rd  gen 	(6)
0, 130, 131, 132, 133, 134
;; rd  kill	(10)
0, 1, 2, 15, 16, 130, 131, 132, 133, 134

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 6 3 2 arch/arm/kernel/traps.c:734 (set (reg/v/f:SI 133 [ file ])
        (reg:SI 0 r0 [ file ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ file ])
        (nil)))

(insn 3 2 4 2 arch/arm/kernel/traps.c:734 (set (reg/v:SI 134 [ line ])
        (reg:SI 1 r1 [ line ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ line ])
        (nil)))

(insn 4 3 5 2 arch/arm/kernel/traps.c:734 (set (reg/v:SI 135 [ pmd ])
        (reg:SI 2 r2 [ pmd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ pmd ])
        (nil)))

(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)

(insn 8 5 23 2 arch/arm/kernel/traps.c:735 (set (reg/f:SI 136)
        (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x11290f00>)) 167 {*arm_movsi_insn} (nil))

(insn 23 8 24 2 arch/arm/kernel/traps.c:735 (set (reg:SI 139 [+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 24 23 25 2 arch/arm/kernel/traps.c:735 (set (mem/i:SI (reg/f:SI 13 sp) [0 S4 A64])
        (reg/v:SI 135 [ pmd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 135 [ pmd ])
        (nil)))

(insn 25 24 11 2 arch/arm/kernel/traps.c:735 (set (mem/i:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 139 [+4 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 139 [+4 ])
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn 11 25 12 2 arch/arm/kernel/traps.c:735 (set (reg:SI 0 r0)
        (reg/f:SI 136)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 136)
        (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x11290f00>)
            (nil))))

(insn 12 11 13 2 arch/arm/kernel/traps.c:735 (set (reg:SI 1 r1)
        (reg/v/f:SI 133 [ file ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 133 [ file ])
        (nil)))

(insn 13 12 14 2 arch/arm/kernel/traps.c:735 (set (reg:SI 2 r2)
        (reg/v:SI 134 [ line ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 134 [ line ])
        (nil)))

(call_insn 14 13 0 2 arch/arm/kernel/traps.c:735 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10aa9180 printk>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(14)
0, 5, 8, 10, 11, 13, 14, 27, 28, 130, 131, 132, 133, 134


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function __pte_error (__pte_error)[0:1078]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


__pte_error

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr]
;;  ref usage 	r0={3d,2u} r1={3d,2u} r2={3d,2u} r3={2d} r11={1d,2u} r12={2d} r13={1d,5u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,2u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r139={1d,1u} 
;;    total ref usage 157{135d,22u,0e} in 11{10 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129
0[0,3] 1[3,3] 2[6,3] 3[9,2] 11[11,1] 12[12,2] 13[14,1] 14[15,2] 15[17,1] 16[18,1] 17[19,1] 18[20,1] 19[21,1] 20[22,1] 21[23,1] 22[24,1] 23[25,1] 24[26,1] 25[27,1] 26[28,1] 27[29,1] 28[30,1] 29[31,1] 30[32,1] 31[33,1] 32[34,1] 33[35,1] 34[36,1] 35[37,1] 36[38,1] 37[39,1] 38[40,1] 39[41,1] 40[42,1] 41[43,1] 42[44,1] 43[45,1] 44[46,1] 45[47,1] 46[48,1] 47[49,1] 48[50,1] 49[51,1] 50[52,1] 51[53,1] 52[54,1] 53[55,1] 54[56,1] 55[57,1] 56[58,1] 57[59,1] 58[60,1] 59[61,1] 60[62,1] 61[63,1] 62[64,1] 63[65,1] 64[66,1] 65[67,1] 66[68,1] 67[69,1] 68[70,1] 69[71,1] 70[72,1] 71[73,1] 72[74,1] 73[75,1] 74[76,1] 75[77,1] 76[78,1] 77[79,1] 78[80,1] 79[81,1] 80[82,1] 81[83,1] 82[84,1] 83[85,1] 84[86,1] 85[87,1] 86[88,1] 87[89,1] 88[90,1] 89[91,1] 90[92,1] 91[93,1] 92[94,1] 93[95,1] 94[96,1] 95[97,1] 96[98,1] 97[99,1] 98[100,1] 99[101,1] 100[102,1] 101[103,1] 102[104,1] 103[105,1] 104[106,1] 105[107,1] 106[108,1] 107[109,1] 108[110,1] 109[111,1] 110[112,1] 111[113,1] 112[114,1] 113[115,1] 114[116,1] 115[117,1] 116[118,1] 117[119,1] 118[120,1] 119[121,1] 120[122,1] 121[123,1] 122[124,1] 123[125,1] 124[126,1] 125[127,1] 126[128,1] 127[129,1] 133[130,1] 134[131,1] 135[132,1] 136[133,1] 139[134,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d2(0){ }d5(1){ }d8(2){ }d10(3){ }d11(11){ }d13(12){ }d14(13){ }d16(14){ }d27(25){ }d28(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
2, 5, 8, 10, 11, 13, 14, 16, 27, 28
;; rd  kill	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 27, 28
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(10)
2, 5, 8, 10, 11, 13, 14, 16, 27, 28

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d11(bb 0 insn -1) }u1(13){ d14(bb 0 insn -1) }u2(25){ d27(bb 0 insn -1) }u3(26){ d28(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134 135 136 139
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 133 134 135 136 139
;; live  kill	 14 [lr]
;; rd  in  	(10)
2, 5, 8, 10, 11, 13, 14, 16, 27, 28
;; rd  gen 	(6)
0, 130, 131, 132, 133, 134
;; rd  kill	(10)
0, 1, 2, 15, 16, 130, 131, 132, 133, 134
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(14)
0, 5, 8, 10, 11, 13, 14, 27, 28, 130, 131, 132, 133, 134
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d2(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 3
;;      reg 1 { d5(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 4
;;      reg 2 { d8(bb 0 insn -1) }
;;   UD chains for insn luid 5 uid 24
;;      reg 13 { d14(bb 0 insn -1) }
;;      reg 135 { d132(bb 2 insn 4) }
;;   UD chains for insn luid 6 uid 25
;;      reg 13 { d14(bb 0 insn -1) }
;;      reg 139 { d134(bb 2 insn 23) }
;;   UD chains for insn luid 7 uid 11
;;      reg 136 { d133(bb 2 insn 8) }
;;   UD chains for insn luid 8 uid 12
;;      reg 133 { d130(bb 2 insn 2) }
;;   UD chains for insn luid 9 uid 13
;;      reg 134 { d131(bb 2 insn 3) }
;;   UD chains for insn luid 10 uid 14
;;      reg 13 { d14(bb 0 insn -1) }
;;      reg 0 { d1(bb 2 insn 11) }
;;      reg 1 { d4(bb 2 insn 12) }
;;      reg 2 { d7(bb 2 insn 13) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u18(11){ d11(bb 0 insn -1) }u19(13){ d14(bb 0 insn -1) }u20(14){ }u21(25){ d27(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(14)
0, 5, 8, 10, 11, 13, 14, 27, 28, 130, 131, 132, 133, 134
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(14)
0, 5, 8, 10, 11, 13, 14, 27, 28, 130, 131, 132, 133, 134
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 14 { }
;;   reg 25 { d27(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 14 to worklist
  Adding insn 25 to worklist
  Adding insn 24 to worklist
Finished finding needed instructions:
Processing use of (reg 13 sp) in insn 24:
Processing use of (reg 135 [ pte ]) in insn 24:
  Adding insn 4 to worklist
Processing use of (reg 2 r2) in insn 4:
Processing use of (reg 13 sp) in insn 25:
Processing use of (reg 139 [+4 ]) in insn 25:
  Adding insn 23 to worklist
Processing use of (reg 13 sp) in insn 14:
Processing use of (reg 0 r0) in insn 14:
  Adding insn 11 to worklist
Processing use of (reg 1 r1) in insn 14:
  Adding insn 12 to worklist
Processing use of (reg 2 r2) in insn 14:
  Adding insn 13 to worklist
Processing use of (reg 134 [ line ]) in insn 13:
  Adding insn 3 to worklist
Processing use of (reg 1 r1) in insn 3:
Processing use of (reg 133 [ file ]) in insn 12:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 136) in insn 11:
  Adding insn 8 to worklist


__pte_error

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr]
;;  ref usage 	r0={3d,2u} r1={3d,2u} r2={3d,2u} r3={2d} r11={1d,2u} r12={2d} r13={1d,5u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,2u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r139={1d,1u} 
;;    total ref usage 157{135d,22u,0e} in 11{10 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129
0[0,3] 1[3,3] 2[6,3] 3[9,2] 11[11,1] 12[12,2] 13[14,1] 14[15,2] 15[17,1] 16[18,1] 17[19,1] 18[20,1] 19[21,1] 20[22,1] 21[23,1] 22[24,1] 23[25,1] 24[26,1] 25[27,1] 26[28,1] 27[29,1] 28[30,1] 29[31,1] 30[32,1] 31[33,1] 32[34,1] 33[35,1] 34[36,1] 35[37,1] 36[38,1] 37[39,1] 38[40,1] 39[41,1] 40[42,1] 41[43,1] 42[44,1] 43[45,1] 44[46,1] 45[47,1] 46[48,1] 47[49,1] 48[50,1] 49[51,1] 50[52,1] 51[53,1] 52[54,1] 53[55,1] 54[56,1] 55[57,1] 56[58,1] 57[59,1] 58[60,1] 59[61,1] 60[62,1] 61[63,1] 62[64,1] 63[65,1] 64[66,1] 65[67,1] 66[68,1] 67[69,1] 68[70,1] 69[71,1] 70[72,1] 71[73,1] 72[74,1] 73[75,1] 74[76,1] 75[77,1] 76[78,1] 77[79,1] 78[80,1] 79[81,1] 80[82,1] 81[83,1] 82[84,1] 83[85,1] 84[86,1] 85[87,1] 86[88,1] 87[89,1] 88[90,1] 89[91,1] 90[92,1] 91[93,1] 92[94,1] 93[95,1] 94[96,1] 95[97,1] 96[98,1] 97[99,1] 98[100,1] 99[101,1] 100[102,1] 101[103,1] 102[104,1] 103[105,1] 104[106,1] 105[107,1] 106[108,1] 107[109,1] 108[110,1] 109[111,1] 110[112,1] 111[113,1] 112[114,1] 113[115,1] 114[116,1] 115[117,1] 116[118,1] 117[119,1] 118[120,1] 119[121,1] 120[122,1] 121[123,1] 122[124,1] 123[125,1] 124[126,1] 125[127,1] 126[128,1] 127[129,1] 133[130,1] 134[131,1] 135[132,1] 136[133,1] 139[134,1] 
(note 1 0 6 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134 135 136 139
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 133 134 135 136 139
;; live  kill	 14 [lr]
;; rd  in  	(10)
2, 5, 8, 10, 11, 13, 14, 16, 27, 28
;; rd  gen 	(6)
0, 130, 131, 132, 133, 134
;; rd  kill	(10)
0, 1, 2, 15, 16, 130, 131, 132, 133, 134

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 6 3 2 arch/arm/kernel/traps.c:729 (set (reg/v/f:SI 133 [ file ])
        (reg:SI 0 r0 [ file ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ file ])
        (nil)))

(insn 3 2 4 2 arch/arm/kernel/traps.c:729 (set (reg/v:SI 134 [ line ])
        (reg:SI 1 r1 [ line ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ line ])
        (nil)))

(insn 4 3 5 2 arch/arm/kernel/traps.c:729 (set (reg/v:SI 135 [ pte ])
        (reg:SI 2 r2 [ pte ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ pte ])
        (nil)))

(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)

(insn 8 5 23 2 arch/arm/kernel/traps.c:730 (set (reg/f:SI 136)
        (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x11295400>)) 167 {*arm_movsi_insn} (nil))

(insn 23 8 24 2 arch/arm/kernel/traps.c:730 (set (reg:SI 139 [+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 24 23 25 2 arch/arm/kernel/traps.c:730 (set (mem/i:SI (reg/f:SI 13 sp) [0 S4 A64])
        (reg/v:SI 135 [ pte ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 135 [ pte ])
        (nil)))

(insn 25 24 11 2 arch/arm/kernel/traps.c:730 (set (mem/i:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 139 [+4 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 139 [+4 ])
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn 11 25 12 2 arch/arm/kernel/traps.c:730 (set (reg:SI 0 r0)
        (reg/f:SI 136)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 136)
        (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x11295400>)
            (nil))))

(insn 12 11 13 2 arch/arm/kernel/traps.c:730 (set (reg:SI 1 r1)
        (reg/v/f:SI 133 [ file ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 133 [ file ])
        (nil)))

(insn 13 12 14 2 arch/arm/kernel/traps.c:730 (set (reg:SI 2 r2)
        (reg/v:SI 134 [ line ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 134 [ line ])
        (nil)))

(call_insn 14 13 0 2 arch/arm/kernel/traps.c:730 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10aa9180 printk>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(14)
0, 5, 8, 10, 11, 13, 14, 27, 28, 130, 131, 132, 133, 134


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function __bug (__bug)[0:1076]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 4 n_edges 3 count 4 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 4 n_edges 3 count 5 (  1.2)
df_worklist_dataflow_doublequeue:n_basic_blocks 4 n_edges 3 count 5 (  1.2)


__bug

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr]
;;  ref usage 	r0={3d,2u} r1={3d,2u} r2={3d,1u} r3={2d} r11={1d,3u} r12={2d} r13={1d,4u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,3u} r26={1d,2u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,1u} r134={1d,1u} r136={1d,2u} 
;;    total ref usage 155{133d,22u,0e} in 9{8 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129
0[0,3] 1[3,3] 2[6,3] 3[9,2] 11[11,1] 12[12,2] 13[14,1] 14[15,2] 15[17,1] 16[18,1] 17[19,1] 18[20,1] 19[21,1] 20[22,1] 21[23,1] 22[24,1] 23[25,1] 24[26,1] 25[27,1] 26[28,1] 27[29,1] 28[30,1] 29[31,1] 30[32,1] 31[33,1] 32[34,1] 33[35,1] 34[36,1] 35[37,1] 36[38,1] 37[39,1] 38[40,1] 39[41,1] 40[42,1] 41[43,1] 42[44,1] 43[45,1] 44[46,1] 45[47,1] 46[48,1] 47[49,1] 48[50,1] 49[51,1] 50[52,1] 51[53,1] 52[54,1] 53[55,1] 54[56,1] 55[57,1] 56[58,1] 57[59,1] 58[60,1] 59[61,1] 60[62,1] 61[63,1] 62[64,1] 63[65,1] 64[66,1] 65[67,1] 66[68,1] 67[69,1] 68[70,1] 69[71,1] 70[72,1] 71[73,1] 72[74,1] 73[75,1] 74[76,1] 75[77,1] 76[78,1] 77[79,1] 78[80,1] 79[81,1] 80[82,1] 81[83,1] 82[84,1] 83[85,1] 84[86,1] 85[87,1] 86[88,1] 87[89,1] 88[90,1] 89[91,1] 90[92,1] 91[93,1] 92[94,1] 93[95,1] 94[96,1] 95[97,1] 96[98,1] 97[99,1] 98[100,1] 99[101,1] 100[102,1] 101[103,1] 102[104,1] 103[105,1] 104[106,1] 105[107,1] 106[108,1] 107[109,1] 108[110,1] 109[111,1] 110[112,1] 111[113,1] 112[114,1] 113[115,1] 114[116,1] 115[117,1] 116[118,1] 117[119,1] 118[120,1] 119[121,1] 120[122,1] 121[123,1] 122[124,1] 123[125,1] 124[126,1] 125[127,1] 126[128,1] 127[129,1] 133[130,1] 134[131,1] 136[132,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d2(0){ }d5(1){ }d8(2){ }d10(3){ }d11(11){ }d13(12){ }d14(13){ }d16(14){ }d27(25){ }d28(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
2, 5, 8, 10, 11, 13, 14, 16, 27, 28
;; rd  kill	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 27, 28
;; lr  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(10)
2, 5, 8, 10, 11, 13, 14, 16, 27, 28

( 0 )->[2]->( 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d11(bb 0 insn -1) }u1(13){ d14(bb 0 insn -1) }u2(25){ d27(bb 0 insn -1) }u3(26){ d28(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134 136
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 133 134 136
;; live  kill	 14 [lr]
;; rd  in  	(10)
2, 5, 8, 10, 11, 13, 14, 16, 27, 28
;; rd  gen 	(4)
1, 130, 131, 132
;; rd  kill	(8)
0, 1, 2, 15, 16, 130, 131, 132
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(12)
1, 5, 8, 10, 11, 13, 14, 27, 28, 130, 131, 132
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d2(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 3
;;      reg 1 { d5(bb 0 insn -1) }
;;   UD chains for insn luid 3 uid 9
;;      reg 133 { d130(bb 2 insn 2) }
;;   UD chains for insn luid 4 uid 10
;;      reg 134 { d131(bb 2 insn 3) }
;;   UD chains for insn luid 5 uid 11
;;      reg 13 { d14(bb 0 insn -1) }
;;      reg 0 { d0(bb 2 insn 8) }
;;      reg 1 { d4(bb 2 insn 9) }
;;      reg 2 { d7(bb 2 insn 10) }
;;   UD chains for insn luid 7 uid 14
;;      reg 136 { d132(bb 2 insn 12) }
;;      reg 136 { d132(bb 2 insn 12) }

( 2 3 )->[3]->( 3 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u14(11){ d11(bb 0 insn -1) }u15(13){ d14(bb 0 insn -1) }u16(25){ d27(bb 0 insn -1) }u17(26){ d28(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(12)
1, 5, 8, 10, 11, 13, 14, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(12)
1, 5, 8, 10, 11, 13, 14, 27, 28, 130, 131, 132
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }

( )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u18(11){ }u19(13){ }u20(14){ }u21(25){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	
;; live  gen 	
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(0)

;;  UD chains for artificial uses
;;   reg 11 { }
;;   reg 13 { }
;;   reg 14 { }
;;   reg 25 { }

Finding needed instructions:
  Adding insn 14 to worklist
  Adding insn 11 to worklist
  Adding insn 45 to worklist
Finished finding needed instructions:
Processing use of (reg 13 sp) in insn 11:
Processing use of (reg 0 r0) in insn 11:
  Adding insn 8 to worklist
Processing use of (reg 1 r1) in insn 11:
  Adding insn 9 to worklist
Processing use of (reg 2 r2) in insn 11:
  Adding insn 10 to worklist
Processing use of (reg 134 [ line ]) in insn 10:
  Adding insn 3 to worklist
Processing use of (reg 1 r1) in insn 3:
Processing use of (reg 133 [ file ]) in insn 9:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 136) in insn 14:
  Adding insn 12 to worklist
Processing use of (reg 136) in insn 14:


__bug

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr]
;;  ref usage 	r0={3d,2u} r1={3d,2u} r2={3d,1u} r3={2d} r11={1d,3u} r12={2d} r13={1d,4u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,3u} r26={1d,2u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,1u} r134={1d,1u} r136={1d,2u} 
;;    total ref usage 155{133d,22u,0e} in 9{8 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129
0[0,3] 1[3,3] 2[6,3] 3[9,2] 11[11,1] 12[12,2] 13[14,1] 14[15,2] 15[17,1] 16[18,1] 17[19,1] 18[20,1] 19[21,1] 20[22,1] 21[23,1] 22[24,1] 23[25,1] 24[26,1] 25[27,1] 26[28,1] 27[29,1] 28[30,1] 29[31,1] 30[32,1] 31[33,1] 32[34,1] 33[35,1] 34[36,1] 35[37,1] 36[38,1] 37[39,1] 38[40,1] 39[41,1] 40[42,1] 41[43,1] 42[44,1] 43[45,1] 44[46,1] 45[47,1] 46[48,1] 47[49,1] 48[50,1] 49[51,1] 50[52,1] 51[53,1] 52[54,1] 53[55,1] 54[56,1] 55[57,1] 56[58,1] 57[59,1] 58[60,1] 59[61,1] 60[62,1] 61[63,1] 62[64,1] 63[65,1] 64[66,1] 65[67,1] 66[68,1] 67[69,1] 68[70,1] 69[71,1] 70[72,1] 71[73,1] 72[74,1] 73[75,1] 74[76,1] 75[77,1] 76[78,1] 77[79,1] 78[80,1] 79[81,1] 80[82,1] 81[83,1] 82[84,1] 83[85,1] 84[86,1] 85[87,1] 86[88,1] 87[89,1] 88[90,1] 89[91,1] 90[92,1] 91[93,1] 92[94,1] 93[95,1] 94[96,1] 95[97,1] 96[98,1] 97[99,1] 98[100,1] 99[101,1] 100[102,1] 101[103,1] 102[104,1] 103[105,1] 104[106,1] 105[107,1] 106[108,1] 107[109,1] 108[110,1] 109[111,1] 110[112,1] 111[113,1] 112[114,1] 113[115,1] 114[116,1] 115[117,1] 116[118,1] 117[119,1] 118[120,1] 119[121,1] 120[122,1] 121[123,1] 122[124,1] 123[125,1] 124[126,1] 125[127,1] 126[128,1] 127[129,1] 133[130,1] 134[131,1] 136[132,1] 
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134 136
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 133 134 136
;; live  kill	 14 [lr]
;; rd  in  	(10)
2, 5, 8, 10, 11, 13, 14, 16, 27, 28
;; rd  gen 	(4)
1, 130, 131, 132
;; rd  kill	(8)
0, 1, 2, 15, 16, 130, 131, 132

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 5 3 2 arch/arm/kernel/traps.c:712 (set (reg/v/f:SI 133 [ file ])
        (reg:SI 0 r0 [ file ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ file ])
        (nil)))

(insn 3 2 4 2 arch/arm/kernel/traps.c:712 (set (reg/v:SI 134 [ line ])
        (reg:SI 1 r1 [ line ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ line ])
        (nil)))

(note 4 3 8 2 NOTE_INSN_FUNCTION_BEG)

(insn 8 4 9 2 arch/arm/kernel/traps.c:713 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x11295300>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x11295300>)
        (nil)))

(insn 9 8 10 2 arch/arm/kernel/traps.c:713 (set (reg:SI 1 r1)
        (reg/v/f:SI 133 [ file ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 133 [ file ])
        (nil)))

(insn 10 9 11 2 arch/arm/kernel/traps.c:713 (set (reg:SI 2 r2)
        (reg/v:SI 134 [ line ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 134 [ line ])
        (nil)))

(call_insn 11 10 12 2 arch/arm/kernel/traps.c:713 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10aa9180 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 12 11 14 2 arch/arm/kernel/traps.c:714 (set (reg/f:SI 136)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 14 12 16 2 arch/arm/kernel/traps.c:714 (set (mem:SI (reg/f:SI 136) [0 S4 A32])
        (reg/f:SI 136)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 136)
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))
;; End of basic block 2 -> ( 3)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(12)
1, 5, 8, 10, 11, 13, 14, 27, 28, 130, 131, 132


;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u14(11){ }u15(13){ }u16(25){ }u17(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(12)
1, 5, 8, 10, 11, 13, 14, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  2 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%]  (dfs_back)
(code_label 16 14 15 3 20 "" [1 uses])

(note 15 16 45 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(jump_insn 45 15 46 3 (set (pc)
        (label_ref 16)) -1 (nil))
;; End of basic block 3 -> ( 3)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(12)
1, 5, 8, 10, 11, 13, 14, 27, 28, 130, 131, 132


;; Succ edge  3 [100.0%]  (dfs_back)

(barrier 46 45 0)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function abort (abort)[0:1082]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 4 n_edges 3 count 4 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 4 n_edges 3 count 5 (  1.2)
df_worklist_dataflow_doublequeue:n_basic_blocks 4 n_edges 3 count 5 (  1.2)


abort

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr]
;;  ref usage 	r0={3d,1u} r1={3d,1u} r2={3d,1u} r3={2d} r11={1d,3u} r12={2d} r13={1d,4u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,3u} r26={1d,2u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r135={1d,2u} 
;;    total ref usage 149{131d,18u,0e} in 7{6 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129
0[0,3] 1[3,3] 2[6,3] 3[9,2] 11[11,1] 12[12,2] 13[14,1] 14[15,2] 15[17,1] 16[18,1] 17[19,1] 18[20,1] 19[21,1] 20[22,1] 21[23,1] 22[24,1] 23[25,1] 24[26,1] 25[27,1] 26[28,1] 27[29,1] 28[30,1] 29[31,1] 30[32,1] 31[33,1] 32[34,1] 33[35,1] 34[36,1] 35[37,1] 36[38,1] 37[39,1] 38[40,1] 39[41,1] 40[42,1] 41[43,1] 42[44,1] 43[45,1] 44[46,1] 45[47,1] 46[48,1] 47[49,1] 48[50,1] 49[51,1] 50[52,1] 51[53,1] 52[54,1] 53[55,1] 54[56,1] 55[57,1] 56[58,1] 57[59,1] 58[60,1] 59[61,1] 60[62,1] 61[63,1] 62[64,1] 63[65,1] 64[66,1] 65[67,1] 66[68,1] 67[69,1] 68[70,1] 69[71,1] 70[72,1] 71[73,1] 72[74,1] 73[75,1] 74[76,1] 75[77,1] 76[78,1] 77[79,1] 78[80,1] 79[81,1] 80[82,1] 81[83,1] 82[84,1] 83[85,1] 84[86,1] 85[87,1] 86[88,1] 87[89,1] 88[90,1] 89[91,1] 90[92,1] 91[93,1] 92[94,1] 93[95,1] 94[96,1] 95[97,1] 96[98,1] 97[99,1] 98[100,1] 99[101,1] 100[102,1] 101[103,1] 102[104,1] 103[105,1] 104[106,1] 105[107,1] 106[108,1] 107[109,1] 108[110,1] 109[111,1] 110[112,1] 111[113,1] 112[114,1] 113[115,1] 114[116,1] 115[117,1] 116[118,1] 117[119,1] 118[120,1] 119[121,1] 120[122,1] 121[123,1] 122[124,1] 123[125,1] 124[126,1] 125[127,1] 126[128,1] 127[129,1] 135[130,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d2(0){ }d5(1){ }d8(2){ }d10(3){ }d11(11){ }d13(12){ }d14(13){ }d16(14){ }d27(25){ }d28(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
2, 5, 8, 10, 11, 13, 14, 16, 27, 28
;; rd  kill	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 27, 28
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(10)
2, 5, 8, 10, 11, 13, 14, 16, 27, 28

( 0 )->[2]->( 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d11(bb 0 insn -1) }u1(13){ d14(bb 0 insn -1) }u2(25){ d27(bb 0 insn -1) }u3(26){ d28(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 135
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 135
;; live  kill	 14 [lr]
;; rd  in  	(10)
2, 5, 8, 10, 11, 13, 14, 16, 27, 28
;; rd  gen 	(2)
1, 130
;; rd  kill	(6)
0, 1, 2, 15, 16, 130
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(10)
1, 5, 8, 10, 11, 13, 14, 27, 28, 130
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }
;;   UD chains for insn luid 3 uid 10
;;      reg 13 { d14(bb 0 insn -1) }
;;      reg 0 { d0(bb 2 insn 7) }
;;      reg 1 { d3(bb 2 insn 8) }
;;      reg 2 { d7(bb 2 insn 9) }
;;   UD chains for insn luid 5 uid 13
;;      reg 135 { d130(bb 2 insn 11) }
;;      reg 135 { d130(bb 2 insn 11) }

( 2 3 )->[3]->( 3 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u10(11){ d11(bb 0 insn -1) }u11(13){ d14(bb 0 insn -1) }u12(25){ d27(bb 0 insn -1) }u13(26){ d28(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(10)
1, 5, 8, 10, 11, 13, 14, 27, 28, 130
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(10)
1, 5, 8, 10, 11, 13, 14, 27, 28, 130
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }

( )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u14(11){ }u15(13){ }u16(14){ }u17(25){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	
;; live  gen 	
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(0)

;;  UD chains for artificial uses
;;   reg 11 { }
;;   reg 13 { }
;;   reg 14 { }
;;   reg 25 { }

Finding needed instructions:
  Adding insn 13 to worklist
  Adding insn 10 to worklist
  Adding insn 26 to worklist
Finished finding needed instructions:
Processing use of (reg 13 sp) in insn 10:
Processing use of (reg 0 r0) in insn 10:
  Adding insn 7 to worklist
Processing use of (reg 1 r1) in insn 10:
  Adding insn 8 to worklist
Processing use of (reg 2 r2) in insn 10:
  Adding insn 9 to worklist
Processing use of (reg 135) in insn 13:
  Adding insn 11 to worklist
Processing use of (reg 135) in insn 13:


abort

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr]
;;  ref usage 	r0={3d,1u} r1={3d,1u} r2={3d,1u} r3={2d} r11={1d,3u} r12={2d} r13={1d,4u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,3u} r26={1d,2u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r135={1d,2u} 
;;    total ref usage 149{131d,18u,0e} in 7{6 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129
0[0,3] 1[3,3] 2[6,3] 3[9,2] 11[11,1] 12[12,2] 13[14,1] 14[15,2] 15[17,1] 16[18,1] 17[19,1] 18[20,1] 19[21,1] 20[22,1] 21[23,1] 22[24,1] 23[25,1] 24[26,1] 25[27,1] 26[28,1] 27[29,1] 28[30,1] 29[31,1] 30[32,1] 31[33,1] 32[34,1] 33[35,1] 34[36,1] 35[37,1] 36[38,1] 37[39,1] 38[40,1] 39[41,1] 40[42,1] 41[43,1] 42[44,1] 43[45,1] 44[46,1] 45[47,1] 46[48,1] 47[49,1] 48[50,1] 49[51,1] 50[52,1] 51[53,1] 52[54,1] 53[55,1] 54[56,1] 55[57,1] 56[58,1] 57[59,1] 58[60,1] 59[61,1] 60[62,1] 61[63,1] 62[64,1] 63[65,1] 64[66,1] 65[67,1] 66[68,1] 67[69,1] 68[70,1] 69[71,1] 70[72,1] 71[73,1] 72[74,1] 73[75,1] 74[76,1] 75[77,1] 76[78,1] 77[79,1] 78[80,1] 79[81,1] 80[82,1] 81[83,1] 82[84,1] 83[85,1] 84[86,1] 85[87,1] 86[88,1] 87[89,1] 88[90,1] 89[91,1] 90[92,1] 91[93,1] 92[94,1] 93[95,1] 94[96,1] 95[97,1] 96[98,1] 97[99,1] 98[100,1] 99[101,1] 100[102,1] 101[103,1] 102[104,1] 103[105,1] 104[106,1] 105[107,1] 106[108,1] 107[109,1] 108[110,1] 109[111,1] 110[112,1] 111[113,1] 112[114,1] 113[115,1] 114[116,1] 115[117,1] 116[118,1] 117[119,1] 118[120,1] 119[121,1] 120[122,1] 121[123,1] 122[124,1] 123[125,1] 124[126,1] 125[127,1] 126[128,1] 127[129,1] 135[130,1] 
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 135
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 135
;; live  kill	 14 [lr]
;; rd  in  	(10)
2, 5, 8, 10, 11, 13, 14, 16, 27, 28
;; rd  gen 	(2)
1, 130
;; rd  kill	(6)
0, 1, 2, 15, 16, 130

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 2 8 2 arch/arm/kernel/traps.c:713 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x11295300>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x11295300>)
        (nil)))

(insn 8 7 9 2 arch/arm/kernel/traps.c:713 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x1129a800>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x1129a800>)
        (nil)))

(insn 9 8 10 2 arch/arm/kernel/traps.c:713 (set (reg:SI 2 r2)
        (const_int 752 [0x2f0])) 167 {*arm_movsi_insn} (nil))

(call_insn 10 9 11 2 arch/arm/kernel/traps.c:713 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10aa9180 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 11 10 13 2 arch/arm/kernel/traps.c:714 (set (reg/f:SI 135)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 13 11 15 2 arch/arm/kernel/traps.c:714 (set (mem:SI (reg/f:SI 135) [0 S4 A32])
        (reg/f:SI 135)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 135)
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))
;; End of basic block 2 -> ( 3)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(10)
1, 5, 8, 10, 11, 13, 14, 27, 28, 130


;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u10(11){ }u11(13){ }u12(25){ }u13(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(10)
1, 5, 8, 10, 11, 13, 14, 27, 28, 130
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  2 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%]  (dfs_back)
(code_label 15 13 14 3 26 "" [1 uses])

(note 14 15 26 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(jump_insn 26 14 27 3 (set (pc)
        (label_ref 15)) -1 (nil))
;; End of basic block 3 -> ( 3)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(10)
1, 5, 8, 10, 11, 13, 14, 27, 28, 130


;; Succ edge  3 [100.0%]  (dfs_back)

(barrier 27 26 0)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function __readwrite_bug (__readwrite_bug)[0:1077]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 4 n_edges 3 count 4 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 4 n_edges 3 count 5 (  1.2)
df_worklist_dataflow_doublequeue:n_basic_blocks 4 n_edges 3 count 5 (  1.2)


__readwrite_bug

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr]
;;  ref usage 	r0={5d,3u} r1={5d,2u} r2={4d,1u} r3={3d} r11={1d,3u} r12={3d} r13={1d,5u} r14={3d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={1d,3u} r26={1d,2u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r133={1d,1u} r137={1d,2u} 
;;    total ref usage 274{251d,23u,0e} in 11{9 regular + 2 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248
0[0,5] 1[5,5] 2[10,4] 3[14,3] 11[17,1] 12[18,3] 13[21,1] 14[22,3] 15[25,2] 16[27,2] 17[29,2] 18[31,2] 19[33,2] 20[35,2] 21[37,2] 22[39,2] 23[41,2] 24[43,2] 25[45,1] 26[46,1] 27[47,2] 28[49,2] 29[51,2] 30[53,2] 31[55,2] 32[57,2] 33[59,2] 34[61,2] 35[63,2] 36[65,2] 37[67,2] 38[69,2] 39[71,2] 40[73,2] 41[75,2] 42[77,2] 43[79,2] 44[81,2] 45[83,2] 46[85,2] 47[87,2] 48[89,2] 49[91,2] 50[93,2] 51[95,2] 52[97,2] 53[99,2] 54[101,2] 55[103,2] 56[105,2] 57[107,2] 58[109,2] 59[111,2] 60[113,2] 61[115,2] 62[117,2] 63[119,2] 64[121,2] 65[123,2] 66[125,2] 67[127,2] 68[129,2] 69[131,2] 70[133,2] 71[135,2] 72[137,2] 73[139,2] 74[141,2] 75[143,2] 76[145,2] 77[147,2] 78[149,2] 79[151,2] 80[153,2] 81[155,2] 82[157,2] 83[159,2] 84[161,2] 85[163,2] 86[165,2] 87[167,2] 88[169,2] 89[171,2] 90[173,2] 91[175,2] 92[177,2] 93[179,2] 94[181,2] 95[183,2] 96[185,2] 97[187,2] 98[189,2] 99[191,2] 100[193,2] 101[195,2] 102[197,2] 103[199,2] 104[201,2] 105[203,2] 106[205,2] 107[207,2] 108[209,2] 109[211,2] 110[213,2] 111[215,2] 112[217,2] 113[219,2] 114[221,2] 115[223,2] 116[225,2] 117[227,2] 118[229,2] 119[231,2] 120[233,2] 121[235,2] 122[237,2] 123[239,2] 124[241,2] 125[243,2] 126[245,2] 127[247,2] 133[249,1] 137[250,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d4(0){ }d9(1){ }d13(2){ }d16(3){ }d17(11){ }d20(12){ }d21(13){ }d24(14){ }d45(25){ }d46(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
4, 9, 13, 16, 17, 20, 21, 24, 45, 46
;; rd  kill	(27)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 45, 46
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(10)
4, 9, 13, 16, 17, 20, 21, 24, 45, 46

( 0 )->[2]->( 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d17(bb 0 insn -1) }u1(13){ d21(bb 0 insn -1) }u2(25){ d45(bb 0 insn -1) }u3(26){ d46(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 137
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 133 137
;; live  kill	 14 [lr]
;; rd  in  	(10)
4, 9, 13, 16, 17, 20, 21, 24, 45, 46
;; rd  gen 	(3)
2, 249, 250
;; rd  kill	(10)
0, 1, 2, 3, 4, 22, 23, 24, 249, 250
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(11)
2, 9, 13, 16, 17, 20, 21, 45, 46, 249, 250
;;  UD chains for artificial uses
;;   reg 11 { d17(bb 0 insn -1) }
;;   reg 13 { d21(bb 0 insn -1) }
;;   reg 25 { d45(bb 0 insn -1) }
;;   reg 26 { d46(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d4(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 8
;;      reg 133 { d249(bb 2 insn 2) }
;;   UD chains for insn luid 3 uid 9
;;      reg 13 { d21(bb 0 insn -1) }
;;      reg 0 { d1(bb 2 insn 7) }
;;      reg 1 { d8(bb 2 insn 8) }
;;   UD chains for insn luid 7 uid 15
;;      reg 13 { d21(bb 0 insn -1) }
;;      reg 0 { d0(bb 2 insn 12) }
;;      reg 1 { d5(bb 2 insn 13) }
;;      reg 2 { d11(bb 2 insn 14) }
;;   UD chains for insn luid 9 uid 18
;;      reg 137 { d250(bb 2 insn 16) }
;;      reg 137 { d250(bb 2 insn 16) }

( 2 3 )->[3]->( 3 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u15(11){ d17(bb 0 insn -1) }u16(13){ d21(bb 0 insn -1) }u17(25){ d45(bb 0 insn -1) }u18(26){ d46(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(11)
2, 9, 13, 16, 17, 20, 21, 45, 46, 249, 250
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(11)
2, 9, 13, 16, 17, 20, 21, 45, 46, 249, 250
;;  UD chains for artificial uses
;;   reg 11 { d17(bb 0 insn -1) }
;;   reg 13 { d21(bb 0 insn -1) }
;;   reg 25 { d45(bb 0 insn -1) }
;;   reg 26 { d46(bb 0 insn -1) }

( )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u19(11){ }u20(13){ }u21(14){ }u22(25){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	
;; live  gen 	
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(0)

;;  UD chains for artificial uses
;;   reg 11 { }
;;   reg 13 { }
;;   reg 14 { }
;;   reg 25 { }

Finding needed instructions:
  Adding insn 18 to worklist
  Adding insn 15 to worklist
  Adding insn 9 to worklist
  Adding insn 31 to worklist
Finished finding needed instructions:
Processing use of (reg 13 sp) in insn 9:
Processing use of (reg 0 r0) in insn 9:
  Adding insn 7 to worklist
Processing use of (reg 1 r1) in insn 9:
  Adding insn 8 to worklist
Processing use of (reg 133 [ fn ]) in insn 8:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 13 sp) in insn 15:
Processing use of (reg 0 r0) in insn 15:
  Adding insn 12 to worklist
Processing use of (reg 1 r1) in insn 15:
  Adding insn 13 to worklist
Processing use of (reg 2 r2) in insn 15:
  Adding insn 14 to worklist
Processing use of (reg 137) in insn 18:
  Adding insn 16 to worklist
Processing use of (reg 137) in insn 18:


__readwrite_bug

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr]
;;  ref usage 	r0={5d,3u} r1={5d,2u} r2={4d,1u} r3={3d} r11={1d,3u} r12={3d} r13={1d,5u} r14={3d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={1d,3u} r26={1d,2u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r133={1d,1u} r137={1d,2u} 
;;    total ref usage 274{251d,23u,0e} in 11{9 regular + 2 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248
0[0,5] 1[5,5] 2[10,4] 3[14,3] 11[17,1] 12[18,3] 13[21,1] 14[22,3] 15[25,2] 16[27,2] 17[29,2] 18[31,2] 19[33,2] 20[35,2] 21[37,2] 22[39,2] 23[41,2] 24[43,2] 25[45,1] 26[46,1] 27[47,2] 28[49,2] 29[51,2] 30[53,2] 31[55,2] 32[57,2] 33[59,2] 34[61,2] 35[63,2] 36[65,2] 37[67,2] 38[69,2] 39[71,2] 40[73,2] 41[75,2] 42[77,2] 43[79,2] 44[81,2] 45[83,2] 46[85,2] 47[87,2] 48[89,2] 49[91,2] 50[93,2] 51[95,2] 52[97,2] 53[99,2] 54[101,2] 55[103,2] 56[105,2] 57[107,2] 58[109,2] 59[111,2] 60[113,2] 61[115,2] 62[117,2] 63[119,2] 64[121,2] 65[123,2] 66[125,2] 67[127,2] 68[129,2] 69[131,2] 70[133,2] 71[135,2] 72[137,2] 73[139,2] 74[141,2] 75[143,2] 76[145,2] 77[147,2] 78[149,2] 79[151,2] 80[153,2] 81[155,2] 82[157,2] 83[159,2] 84[161,2] 85[163,2] 86[165,2] 87[167,2] 88[169,2] 89[171,2] 90[173,2] 91[175,2] 92[177,2] 93[179,2] 94[181,2] 95[183,2] 96[185,2] 97[187,2] 98[189,2] 99[191,2] 100[193,2] 101[195,2] 102[197,2] 103[199,2] 104[201,2] 105[203,2] 106[205,2] 107[207,2] 108[209,2] 109[211,2] 110[213,2] 111[215,2] 112[217,2] 113[219,2] 114[221,2] 115[223,2] 116[225,2] 117[227,2] 118[229,2] 119[231,2] 120[233,2] 121[235,2] 122[237,2] 123[239,2] 124[241,2] 125[243,2] 126[245,2] 127[247,2] 133[249,1] 137[250,1] 
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 137
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 133 137
;; live  kill	 14 [lr]
;; rd  in  	(10)
4, 9, 13, 16, 17, 20, 21, 24, 45, 46
;; rd  gen 	(3)
2, 249, 250
;; rd  kill	(10)
0, 1, 2, 3, 4, 22, 23, 24, 249, 250

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 arch/arm/kernel/traps.c:722 (set (reg/v/f:SI 133 [ fn ])
        (reg:SI 0 r0 [ fn ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ fn ])
        (nil)))

(note 3 2 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 3 8 2 arch/arm/kernel/traps.c:723 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC5") [flags 0x82] <string_cst 0x1124ae00>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC5") [flags 0x82] <string_cst 0x1124ae00>)
        (nil)))

(insn 8 7 9 2 arch/arm/kernel/traps.c:723 (set (reg:SI 1 r1)
        (reg/v/f:SI 133 [ fn ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 133 [ fn ])
        (nil)))

(call_insn 9 8 12 2 arch/arm/kernel/traps.c:723 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10aa9180 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 12 9 13 2 arch/arm/kernel/traps.c:713 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x11295300>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x11295300>)
        (nil)))

(insn 13 12 14 2 arch/arm/kernel/traps.c:713 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x1129a800>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x1129a800>)
        (nil)))

(insn 14 13 15 2 arch/arm/kernel/traps.c:713 (set (reg:SI 2 r2)
        (const_int 724 [0x2d4])) 167 {*arm_movsi_insn} (nil))

(call_insn 15 14 16 2 arch/arm/kernel/traps.c:713 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10aa9180 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 16 15 18 2 arch/arm/kernel/traps.c:714 (set (reg/f:SI 137)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 18 16 20 2 arch/arm/kernel/traps.c:714 (set (mem:SI (reg/f:SI 137) [0 S4 A32])
        (reg/f:SI 137)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 137)
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))
;; End of basic block 2 -> ( 3)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(11)
2, 9, 13, 16, 17, 20, 21, 45, 46, 249, 250


;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u15(11){ }u16(13){ }u17(25){ }u18(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(11)
2, 9, 13, 16, 17, 20, 21, 45, 46, 249, 250
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  2 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%]  (dfs_back)
(code_label 20 18 19 3 31 "" [1 uses])

(note 19 20 31 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(jump_insn 31 19 32 3 (set (pc)
        (label_ref 20)) -1 (nil))
;; End of basic block 3 -> ( 3)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(11)
2, 9, 13, 16, 17, 20, 21, 45, 46, 249, 250


;; Succ edge  3 [100.0%]  (dfs_back)

(barrier 32 31 0)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function do_unexp_fiq (do_unexp_fiq)[0:1069]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


do_unexp_fiq

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 13[sp] 14[lr]
;;  ref usage 	r0={5d,2u} r1={3d} r2={3d} r3={3d} r11={1d,2u} r12={3d} r13={1d,4u} r14={2d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={1d,2u} r26={1d,1u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r134={1d,1u} r135={1d,1u} 
;;    total ref usage 261{247d,14u,0e} in 6{4 regular + 2 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244
0[0,5] 1[5,3] 2[8,3] 3[11,3] 11[14,1] 12[15,3] 13[18,1] 14[19,2] 15[21,2] 16[23,2] 17[25,2] 18[27,2] 19[29,2] 20[31,2] 21[33,2] 22[35,2] 23[37,2] 24[39,2] 25[41,1] 26[42,1] 27[43,2] 28[45,2] 29[47,2] 30[49,2] 31[51,2] 32[53,2] 33[55,2] 34[57,2] 35[59,2] 36[61,2] 37[63,2] 38[65,2] 39[67,2] 40[69,2] 41[71,2] 42[73,2] 43[75,2] 44[77,2] 45[79,2] 46[81,2] 47[83,2] 48[85,2] 49[87,2] 50[89,2] 51[91,2] 52[93,2] 53[95,2] 54[97,2] 55[99,2] 56[101,2] 57[103,2] 58[105,2] 59[107,2] 60[109,2] 61[111,2] 62[113,2] 63[115,2] 64[117,2] 65[119,2] 66[121,2] 67[123,2] 68[125,2] 69[127,2] 70[129,2] 71[131,2] 72[133,2] 73[135,2] 74[137,2] 75[139,2] 76[141,2] 77[143,2] 78[145,2] 79[147,2] 80[149,2] 81[151,2] 82[153,2] 83[155,2] 84[157,2] 85[159,2] 86[161,2] 87[163,2] 88[165,2] 89[167,2] 90[169,2] 91[171,2] 92[173,2] 93[175,2] 94[177,2] 95[179,2] 96[181,2] 97[183,2] 98[185,2] 99[187,2] 100[189,2] 101[191,2] 102[193,2] 103[195,2] 104[197,2] 105[199,2] 106[201,2] 107[203,2] 108[205,2] 109[207,2] 110[209,2] 111[211,2] 112[213,2] 113[215,2] 114[217,2] 115[219,2] 116[221,2] 117[223,2] 118[225,2] 119[227,2] 120[229,2] 121[231,2] 122[233,2] 123[235,2] 124[237,2] 125[239,2] 126[241,2] 127[243,2] 134[245,1] 135[246,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d4(0){ }d7(1){ }d10(2){ }d13(3){ }d14(11){ }d17(12){ }d18(13){ }d20(14){ }d41(25){ }d42(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
4, 7, 10, 13, 14, 17, 18, 20, 41, 42
;; rd  kill	(23)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 41, 42
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(10)
4, 7, 10, 13, 14, 17, 18, 20, 41, 42

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d14(bb 0 insn -1) }u1(13){ d18(bb 0 insn -1) }u2(25){ d41(bb 0 insn -1) }u3(26){ d42(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 135
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 134 135
;; live  kill	 14 [lr]
;; rd  in  	(10)
4, 7, 10, 13, 14, 17, 18, 20, 41, 42
;; rd  gen 	(3)
0, 245, 246
;; rd  kill	(9)
0, 1, 2, 3, 4, 19, 20, 245, 246
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(11)
0, 7, 10, 13, 14, 17, 18, 41, 42, 245, 246
;;  UD chains for artificial uses
;;   reg 11 { d14(bb 0 insn -1) }
;;   reg 13 { d18(bb 0 insn -1) }
;;   reg 25 { d41(bb 0 insn -1) }
;;   reg 26 { d42(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 7
;;      reg 134 { d245(bb 2 insn 6) }
;;   UD chains for insn luid 2 uid 8
;;      reg 13 { d18(bb 0 insn -1) }
;;      reg 0 { d3(bb 2 insn 7) }
;;   UD chains for insn luid 4 uid 10
;;      reg 135 { d246(bb 2 insn 9) }
;;   UD chains for insn luid 5 uid 11
;;      reg 13 { d18(bb 0 insn -1) }
;;      reg 0 { d1(bb 2 insn 10) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u10(11){ d14(bb 0 insn -1) }u11(13){ d18(bb 0 insn -1) }u12(14){ }u13(25){ d41(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(11)
0, 7, 10, 13, 14, 17, 18, 41, 42, 245, 246
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(11)
0, 7, 10, 13, 14, 17, 18, 41, 42, 245, 246
;;  UD chains for artificial uses
;;   reg 11 { d14(bb 0 insn -1) }
;;   reg 13 { d18(bb 0 insn -1) }
;;   reg 14 { }
;;   reg 25 { d41(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 11 to worklist
  Adding insn 8 to worklist
Finished finding needed instructions:
Processing use of (reg 13 sp) in insn 8:
Processing use of (reg 0 r0) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 134) in insn 7:
  Adding insn 6 to worklist
Processing use of (reg 13 sp) in insn 11:
Processing use of (reg 0 r0) in insn 11:
  Adding insn 10 to worklist
Processing use of (reg 135) in insn 10:
  Adding insn 9 to worklist


do_unexp_fiq

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 13[sp] 14[lr]
;;  ref usage 	r0={5d,2u} r1={3d} r2={3d} r3={3d} r11={1d,2u} r12={3d} r13={1d,4u} r14={2d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={1d,2u} r26={1d,1u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r134={1d,1u} r135={1d,1u} 
;;    total ref usage 261{247d,14u,0e} in 6{4 regular + 2 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244
0[0,5] 1[5,3] 2[8,3] 3[11,3] 11[14,1] 12[15,3] 13[18,1] 14[19,2] 15[21,2] 16[23,2] 17[25,2] 18[27,2] 19[29,2] 20[31,2] 21[33,2] 22[35,2] 23[37,2] 24[39,2] 25[41,1] 26[42,1] 27[43,2] 28[45,2] 29[47,2] 30[49,2] 31[51,2] 32[53,2] 33[55,2] 34[57,2] 35[59,2] 36[61,2] 37[63,2] 38[65,2] 39[67,2] 40[69,2] 41[71,2] 42[73,2] 43[75,2] 44[77,2] 45[79,2] 46[81,2] 47[83,2] 48[85,2] 49[87,2] 50[89,2] 51[91,2] 52[93,2] 53[95,2] 54[97,2] 55[99,2] 56[101,2] 57[103,2] 58[105,2] 59[107,2] 60[109,2] 61[111,2] 62[113,2] 63[115,2] 64[117,2] 65[119,2] 66[121,2] 67[123,2] 68[125,2] 69[127,2] 70[129,2] 71[131,2] 72[133,2] 73[135,2] 74[137,2] 75[139,2] 76[141,2] 77[143,2] 78[145,2] 79[147,2] 80[149,2] 81[151,2] 82[153,2] 83[155,2] 84[157,2] 85[159,2] 86[161,2] 87[163,2] 88[165,2] 89[167,2] 90[169,2] 91[171,2] 92[173,2] 93[175,2] 94[177,2] 95[179,2] 96[181,2] 97[183,2] 98[185,2] 99[187,2] 100[189,2] 101[191,2] 102[193,2] 103[195,2] 104[197,2] 105[199,2] 106[201,2] 107[203,2] 108[205,2] 109[207,2] 110[209,2] 111[211,2] 112[213,2] 113[215,2] 114[217,2] 115[219,2] 116[221,2] 117[223,2] 118[225,2] 119[227,2] 120[229,2] 121[231,2] 122[233,2] 123[235,2] 124[237,2] 125[239,2] 126[241,2] 127[243,2] 134[245,1] 135[246,1] 
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 135
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 134 135
;; live  kill	 14 [lr]
;; rd  in  	(10)
4, 7, 10, 13, 14, 17, 18, 20, 41, 42
;; rd  gen 	(3)
0, 245, 246
;; rd  kill	(9)
0, 1, 2, 3, 4, 19, 20, 245, 246

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 3 7 2 arch/arm/kernel/traps.c:401 (set (reg/f:SI 134)
        (symbol_ref/v/f:SI ("*.LC6") [flags 0x82] <string_cst 0x11236af0>)) 167 {*arm_movsi_insn} (nil))

(insn 7 6 8 2 arch/arm/kernel/traps.c:401 (set (reg:SI 0 r0)
        (reg/f:SI 134)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 134)
        (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC6") [flags 0x82] <string_cst 0x11236af0>)
            (nil))))

(call_insn 8 7 9 2 arch/arm/kernel/traps.c:401 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10aa9180 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_UNUSED (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 9 8 10 2 arch/arm/kernel/traps.c:402 (set (reg/f:SI 135)
        (symbol_ref/v/f:SI ("*.LC7") [flags 0x82] <string_cst 0x1124a5c0>)) 167 {*arm_movsi_insn} (nil))

(insn 10 9 11 2 arch/arm/kernel/traps.c:402 (set (reg:SI 0 r0)
        (reg/f:SI 135)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 135)
        (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC7") [flags 0x82] <string_cst 0x1124a5c0>)
            (nil))))

(call_insn/j 11 10 12 2 arch/arm/kernel/traps.c:402 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10aa9180 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (expr_list:REG_UNUSED (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 2 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(11)
0, 7, 10, 13, 14, 17, 18, 41, 42, 245, 246


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 12 11 0)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function __bad_xchg (__bad_xchg)[0:1074]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 4 n_edges 3 count 4 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 4 n_edges 3 count 5 (  1.2)
df_worklist_dataflow_doublequeue:n_basic_blocks 4 n_edges 3 count 5 (  1.2)


__bad_xchg

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr]
;;  ref usage 	r0={5d,3u} r1={5d,3u} r2={5d,2u} r3={4d,1u} r11={1d,3u} r12={3d} r13={1d,5u} r14={3d,2u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={1d,3u} r26={1d,2u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r134={1d,1u} r135={1d,1u} r136={1d,1u} r140={1d,2u} 
;;    total ref usage 284{255d,29u,0e} in 15{13 regular + 2 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250
0[0,5] 1[5,5] 2[10,5] 3[15,4] 11[19,1] 12[20,3] 13[23,1] 14[24,3] 15[27,2] 16[29,2] 17[31,2] 18[33,2] 19[35,2] 20[37,2] 21[39,2] 22[41,2] 23[43,2] 24[45,2] 25[47,1] 26[48,1] 27[49,2] 28[51,2] 29[53,2] 30[55,2] 31[57,2] 32[59,2] 33[61,2] 34[63,2] 35[65,2] 36[67,2] 37[69,2] 38[71,2] 39[73,2] 40[75,2] 41[77,2] 42[79,2] 43[81,2] 44[83,2] 45[85,2] 46[87,2] 47[89,2] 48[91,2] 49[93,2] 50[95,2] 51[97,2] 52[99,2] 53[101,2] 54[103,2] 55[105,2] 56[107,2] 57[109,2] 58[111,2] 59[113,2] 60[115,2] 61[117,2] 62[119,2] 63[121,2] 64[123,2] 65[125,2] 66[127,2] 67[129,2] 68[131,2] 69[133,2] 70[135,2] 71[137,2] 72[139,2] 73[141,2] 74[143,2] 75[145,2] 76[147,2] 77[149,2] 78[151,2] 79[153,2] 80[155,2] 81[157,2] 82[159,2] 83[161,2] 84[163,2] 85[165,2] 86[167,2] 87[169,2] 88[171,2] 89[173,2] 90[175,2] 91[177,2] 92[179,2] 93[181,2] 94[183,2] 95[185,2] 96[187,2] 97[189,2] 98[191,2] 99[193,2] 100[195,2] 101[197,2] 102[199,2] 103[201,2] 104[203,2] 105[205,2] 106[207,2] 107[209,2] 108[211,2] 109[213,2] 110[215,2] 111[217,2] 112[219,2] 113[221,2] 114[223,2] 115[225,2] 116[227,2] 117[229,2] 118[231,2] 119[233,2] 120[235,2] 121[237,2] 122[239,2] 123[241,2] 124[243,2] 125[245,2] 126[247,2] 127[249,2] 134[251,1] 135[252,1] 136[253,1] 140[254,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d4(0){ }d9(1){ }d14(2){ }d18(3){ }d19(11){ }d22(12){ }d23(13){ }d26(14){ }d47(25){ }d48(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
4, 9, 14, 18, 19, 22, 23, 26, 47, 48
;; rd  kill	(29)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 47, 48
;; lr  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
4, 9, 14, 18, 19, 22, 23, 26, 47, 48

( 0 )->[2]->( 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d19(bb 0 insn -1) }u1(13){ d23(bb 0 insn -1) }u2(25){ d47(bb 0 insn -1) }u3(26){ d48(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 135 136 140
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 134 135 136 140
;; live  kill	 14 [lr]
;; rd  in  	(10)
4, 9, 14, 18, 19, 22, 23, 26, 47, 48
;; rd  gen 	(5)
2, 251, 252, 253, 254
;; rd  kill	(12)
0, 1, 2, 3, 4, 24, 25, 26, 251, 252, 253, 254
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 9, 14, 18, 19, 22, 23, 47, 48, 251, 252, 253, 254
;;  UD chains for artificial uses
;;   reg 11 { d19(bb 0 insn -1) }
;;   reg 13 { d23(bb 0 insn -1) }
;;   reg 25 { d47(bb 0 insn -1) }
;;   reg 26 { d48(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 34
;;      reg 14 { d26(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 2
;;      reg 0 { d4(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 3
;;      reg 1 { d9(bb 0 insn -1) }
;;   UD chains for insn luid 4 uid 10
;;      reg 136 { d253(bb 2 insn 34) }
;;   UD chains for insn luid 5 uid 11
;;      reg 134 { d251(bb 2 insn 2) }
;;   UD chains for insn luid 6 uid 12
;;      reg 135 { d252(bb 2 insn 3) }
;;   UD chains for insn luid 7 uid 13
;;      reg 13 { d23(bb 0 insn -1) }
;;      reg 0 { d1(bb 2 insn 9) }
;;      reg 1 { d6(bb 2 insn 10) }
;;      reg 2 { d13(bb 2 insn 11) }
;;      reg 3 { d17(bb 2 insn 12) }
;;   UD chains for insn luid 11 uid 19
;;      reg 13 { d23(bb 0 insn -1) }
;;      reg 0 { d0(bb 2 insn 16) }
;;      reg 1 { d5(bb 2 insn 17) }
;;      reg 2 { d11(bb 2 insn 18) }
;;   UD chains for insn luid 13 uid 22
;;      reg 140 { d254(bb 2 insn 20) }
;;      reg 140 { d254(bb 2 insn 20) }

( 2 3 )->[3]->( 3 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u21(11){ d19(bb 0 insn -1) }u22(13){ d23(bb 0 insn -1) }u23(25){ d47(bb 0 insn -1) }u24(26){ d48(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 9, 14, 18, 19, 22, 23, 47, 48, 251, 252, 253, 254
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 9, 14, 18, 19, 22, 23, 47, 48, 251, 252, 253, 254
;;  UD chains for artificial uses
;;   reg 11 { d19(bb 0 insn -1) }
;;   reg 13 { d23(bb 0 insn -1) }
;;   reg 25 { d47(bb 0 insn -1) }
;;   reg 26 { d48(bb 0 insn -1) }

( )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u25(11){ }u26(13){ }u27(14){ }u28(25){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	
;; live  gen 	
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(0)

;;  UD chains for artificial uses
;;   reg 11 { }
;;   reg 13 { }
;;   reg 14 { }
;;   reg 25 { }

Finding needed instructions:
  Adding insn 22 to worklist
  Adding insn 19 to worklist
  Adding insn 13 to worklist
  Adding insn 36 to worklist
Finished finding needed instructions:
Processing use of (reg 13 sp) in insn 13:
Processing use of (reg 0 r0) in insn 13:
  Adding insn 9 to worklist
Processing use of (reg 1 r1) in insn 13:
  Adding insn 10 to worklist
Processing use of (reg 2 r2) in insn 13:
  Adding insn 11 to worklist
Processing use of (reg 3 r3) in insn 13:
  Adding insn 12 to worklist
Processing use of (reg 135 [ size ]) in insn 12:
  Adding insn 3 to worklist
Processing use of (reg 1 r1) in insn 3:
Processing use of (reg 134 [ ptr ]) in insn 11:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 136) in insn 10:
  Adding insn 34 to worklist
Processing use of (reg 14 lr) in insn 34:
Processing use of (reg 13 sp) in insn 19:
Processing use of (reg 0 r0) in insn 19:
  Adding insn 16 to worklist
Processing use of (reg 1 r1) in insn 19:
  Adding insn 17 to worklist
Processing use of (reg 2 r2) in insn 19:
  Adding insn 18 to worklist
Processing use of (reg 140) in insn 22:
  Adding insn 20 to worklist
Processing use of (reg 140) in insn 22:


__bad_xchg

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr]
;;  ref usage 	r0={5d,3u} r1={5d,3u} r2={5d,2u} r3={4d,1u} r11={1d,3u} r12={3d} r13={1d,5u} r14={3d,2u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={1d,3u} r26={1d,2u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r134={1d,1u} r135={1d,1u} r136={1d,1u} r140={1d,2u} 
;;    total ref usage 284{255d,29u,0e} in 15{13 regular + 2 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250
0[0,5] 1[5,5] 2[10,5] 3[15,4] 11[19,1] 12[20,3] 13[23,1] 14[24,3] 15[27,2] 16[29,2] 17[31,2] 18[33,2] 19[35,2] 20[37,2] 21[39,2] 22[41,2] 23[43,2] 24[45,2] 25[47,1] 26[48,1] 27[49,2] 28[51,2] 29[53,2] 30[55,2] 31[57,2] 32[59,2] 33[61,2] 34[63,2] 35[65,2] 36[67,2] 37[69,2] 38[71,2] 39[73,2] 40[75,2] 41[77,2] 42[79,2] 43[81,2] 44[83,2] 45[85,2] 46[87,2] 47[89,2] 48[91,2] 49[93,2] 50[95,2] 51[97,2] 52[99,2] 53[101,2] 54[103,2] 55[105,2] 56[107,2] 57[109,2] 58[111,2] 59[113,2] 60[115,2] 61[117,2] 62[119,2] 63[121,2] 64[123,2] 65[125,2] 66[127,2] 67[129,2] 68[131,2] 69[133,2] 70[135,2] 71[137,2] 72[139,2] 73[141,2] 74[143,2] 75[145,2] 76[147,2] 77[149,2] 78[151,2] 79[153,2] 80[155,2] 81[157,2] 82[159,2] 83[161,2] 84[163,2] 85[165,2] 86[167,2] 87[169,2] 88[171,2] 89[173,2] 90[175,2] 91[177,2] 92[179,2] 93[181,2] 94[183,2] 95[185,2] 96[187,2] 97[189,2] 98[191,2] 99[193,2] 100[195,2] 101[197,2] 102[199,2] 103[201,2] 104[203,2] 105[205,2] 106[207,2] 107[209,2] 108[211,2] 109[213,2] 110[215,2] 111[217,2] 112[219,2] 113[221,2] 114[223,2] 115[225,2] 116[227,2] 117[229,2] 118[231,2] 119[233,2] 120[235,2] 121[237,2] 122[239,2] 123[241,2] 124[243,2] 125[245,2] 126[247,2] 127[249,2] 134[251,1] 135[252,1] 136[253,1] 140[254,1] 
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 135 136 140
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 134 135 136 140
;; live  kill	 14 [lr]
;; rd  in  	(10)
4, 9, 14, 18, 19, 22, 23, 26, 47, 48
;; rd  gen 	(5)
2, 251, 252, 253, 254
;; rd  kill	(12)
0, 1, 2, 3, 4, 24, 25, 26, 251, 252, 253, 254

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 34 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 34 5 2 2 (set (reg:SI 136)
        (reg:SI 14 lr)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 14 lr)
        (nil)))

(insn 2 34 3 2 arch/arm/kernel/traps.c:677 (set (reg/v/f:SI 134 [ ptr ])
        (reg:SI 0 r0 [ ptr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ ptr ])
        (nil)))

(insn 3 2 4 2 arch/arm/kernel/traps.c:677 (set (reg/v:SI 135 [ size ])
        (reg:SI 1 r1 [ size ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ size ])
        (nil)))

(note 4 3 9 2 NOTE_INSN_FUNCTION_BEG)

(insn 9 4 10 2 arch/arm/kernel/traps.c:678 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC8") [flags 0x82] <string_cst 0x11236b40>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC8") [flags 0x82] <string_cst 0x11236b40>)
        (nil)))

(insn 10 9 11 2 arch/arm/kernel/traps.c:678 (set (reg:SI 1 r1)
        (reg:SI 136)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 136)
        (nil)))

(insn 11 10 12 2 arch/arm/kernel/traps.c:678 (set (reg:SI 2 r2)
        (reg/v/f:SI 134 [ ptr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 134 [ ptr ])
        (nil)))

(insn 12 11 13 2 arch/arm/kernel/traps.c:678 (set (reg:SI 3 r3)
        (reg/v:SI 135 [ size ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 135 [ size ])
        (nil)))

(call_insn 13 12 16 2 arch/arm/kernel/traps.c:678 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10aa9180 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_UNUSED (reg:SI 0 r0)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 16 13 17 2 arch/arm/kernel/traps.c:713 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x11295300>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x11295300>)
        (nil)))

(insn 17 16 18 2 arch/arm/kernel/traps.c:713 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x1129a800>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x1129a800>)
        (nil)))

(insn 18 17 19 2 arch/arm/kernel/traps.c:713 (set (reg:SI 2 r2)
        (const_int 680 [0x2a8])) 167 {*arm_movsi_insn} (nil))

(call_insn 19 18 20 2 arch/arm/kernel/traps.c:713 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10aa9180 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 20 19 22 2 arch/arm/kernel/traps.c:714 (set (reg/f:SI 140)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 22 20 24 2 arch/arm/kernel/traps.c:714 (set (mem:SI (reg/f:SI 140) [0 S4 A32])
        (reg/f:SI 140)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 140)
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))
;; End of basic block 2 -> ( 3)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 9, 14, 18, 19, 22, 23, 47, 48, 251, 252, 253, 254


;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u21(11){ }u22(13){ }u23(25){ }u24(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 9, 14, 18, 19, 22, 23, 47, 48, 251, 252, 253, 254
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  2 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%]  (dfs_back)
(code_label 24 22 23 3 40 "" [1 uses])

(note 23 24 36 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(jump_insn 36 23 37 3 (set (pc)
        (label_ref 24)) -1 (nil))
;; End of basic block 3 -> ( 3)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 9, 14, 18, 19, 22, 23, 47, 48, 251, 252, 253, 254


;; Succ edge  3 [100.0%]  (dfs_back)

(barrier 37 36 0)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function unregister_undef_hook (unregister_undef_hook)[0:1066]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


unregister_undef_hook

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr]
;;  ref usage 	r0={5d,4u} r1={4d,1u} r2={3d} r3={3d} r11={1d,2u} r12={3d} r13={1d,4u} r14={2d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={1d,2u} r26={1d,1u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r133={1d,2u} r134={1d,2u} r135={1d,1u} r136={1d,4u} r137={1d,1u} r138={1d,2u} r139={1d,1u} r140={1d,1u} 
;;    total ref usage 283{254d,29u,0e} in 17{15 regular + 2 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245
0[0,5] 1[5,4] 2[9,3] 3[12,3] 11[15,1] 12[16,3] 13[19,1] 14[20,2] 15[22,2] 16[24,2] 17[26,2] 18[28,2] 19[30,2] 20[32,2] 21[34,2] 22[36,2] 23[38,2] 24[40,2] 25[42,1] 26[43,1] 27[44,2] 28[46,2] 29[48,2] 30[50,2] 31[52,2] 32[54,2] 33[56,2] 34[58,2] 35[60,2] 36[62,2] 37[64,2] 38[66,2] 39[68,2] 40[70,2] 41[72,2] 42[74,2] 43[76,2] 44[78,2] 45[80,2] 46[82,2] 47[84,2] 48[86,2] 49[88,2] 50[90,2] 51[92,2] 52[94,2] 53[96,2] 54[98,2] 55[100,2] 56[102,2] 57[104,2] 58[106,2] 59[108,2] 60[110,2] 61[112,2] 62[114,2] 63[116,2] 64[118,2] 65[120,2] 66[122,2] 67[124,2] 68[126,2] 69[128,2] 70[130,2] 71[132,2] 72[134,2] 73[136,2] 74[138,2] 75[140,2] 76[142,2] 77[144,2] 78[146,2] 79[148,2] 80[150,2] 81[152,2] 82[154,2] 83[156,2] 84[158,2] 85[160,2] 86[162,2] 87[164,2] 88[166,2] 89[168,2] 90[170,2] 91[172,2] 92[174,2] 93[176,2] 94[178,2] 95[180,2] 96[182,2] 97[184,2] 98[186,2] 99[188,2] 100[190,2] 101[192,2] 102[194,2] 103[196,2] 104[198,2] 105[200,2] 106[202,2] 107[204,2] 108[206,2] 109[208,2] 110[210,2] 111[212,2] 112[214,2] 113[216,2] 114[218,2] 115[220,2] 116[222,2] 117[224,2] 118[226,2] 119[228,2] 120[230,2] 121[232,2] 122[234,2] 123[236,2] 124[238,2] 125[240,2] 126[242,2] 127[244,2] 133[246,1] 134[247,1] 135[248,1] 136[249,1] 137[250,1] 138[251,1] 139[252,1] 140[253,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d4(0){ }d8(1){ }d11(2){ }d14(3){ }d15(11){ }d18(12){ }d19(13){ }d21(14){ }d42(25){ }d43(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
4, 8, 11, 14, 15, 18, 19, 21, 42, 43
;; rd  kill	(24)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 42, 43
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(10)
4, 8, 11, 14, 15, 18, 19, 21, 42, 43

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d15(bb 0 insn -1) }u1(13){ d19(bb 0 insn -1) }u2(25){ d42(bb 0 insn -1) }u3(26){ d43(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134 135 136 137 138 139 140
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 133 134 135 136 137 138 139 140
;; live  kill	 14 [lr]
;; rd  in  	(10)
4, 8, 11, 14, 15, 18, 19, 21, 42, 43
;; rd  gen 	(8)
246, 247, 248, 249, 250, 251, 252, 253
;; rd  kill	(10)
20, 21, 246, 247, 248, 249, 250, 251, 252, 253
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(17)
4, 8, 11, 14, 15, 18, 19, 42, 43, 246, 247, 248, 249, 250, 251, 252, 253
;;  UD chains for artificial uses
;;   reg 11 { d15(bb 0 insn -1) }
;;   reg 13 { d19(bb 0 insn -1) }
;;   reg 25 { d42(bb 0 insn -1) }
;;   reg 26 { d43(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d4(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 7
;;      reg 137 { d250(bb 2 insn 6) }
;;   UD chains for insn luid 3 uid 8
;;      reg 138 { d251(bb 2 insn 7) }
;;   UD chains for insn luid 4 uid 9
;;      reg 13 { d19(bb 0 insn -1) }
;;      reg 0 { d3(bb 2 insn 8) }
;;   UD chains for insn luid 5 uid 10
;;      reg 0 { d2(bb 2 insn 9) }
;;   UD chains for insn luid 6 uid 11
;;      reg 136 { d249(bb 2 insn 2) }
;;   UD chains for insn luid 7 uid 12
;;      reg 136 { d249(bb 2 insn 2) }
;;   UD chains for insn luid 8 uid 13
;;      reg 133 { d246(bb 2 insn 11) }
;;      reg 134 { d247(bb 2 insn 12) }
;;   UD chains for insn luid 9 uid 14
;;      reg 133 { d246(bb 2 insn 11) }
;;      reg 134 { d247(bb 2 insn 12) }
;;   UD chains for insn luid 11 uid 16
;;      reg 136 { d249(bb 2 insn 2) }
;;      reg 139 { d252(bb 2 insn 15) }
;;   UD chains for insn luid 13 uid 18
;;      reg 136 { d249(bb 2 insn 2) }
;;      reg 140 { d253(bb 2 insn 17) }
;;   UD chains for insn luid 14 uid 21
;;      reg 138 { d251(bb 2 insn 7) }
;;   UD chains for insn luid 15 uid 22
;;      reg 135 { d248(bb 2 insn 10) }
;;   UD chains for insn luid 16 uid 23
;;      reg 13 { d19(bb 0 insn -1) }
;;      reg 0 { d0(bb 2 insn 21) }
;;      reg 1 { d6(bb 2 insn 22) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u25(11){ d15(bb 0 insn -1) }u26(13){ d19(bb 0 insn -1) }u27(14){ }u28(25){ d42(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(17)
4, 8, 11, 14, 15, 18, 19, 42, 43, 246, 247, 248, 249, 250, 251, 252, 253
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(17)
4, 8, 11, 14, 15, 18, 19, 42, 43, 246, 247, 248, 249, 250, 251, 252, 253
;;  UD chains for artificial uses
;;   reg 11 { d15(bb 0 insn -1) }
;;   reg 13 { d19(bb 0 insn -1) }
;;   reg 14 { }
;;   reg 25 { d42(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 23 to worklist
  Adding insn 18 to worklist
  Adding insn 16 to worklist
  Adding insn 14 to worklist
  Adding insn 13 to worklist
  Adding insn 9 to worklist
Finished finding needed instructions:
Processing use of (reg 13 sp) in insn 9:
Processing use of (reg 0 r0) in insn 9:
  Adding insn 8 to worklist
Processing use of (reg 138) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 137) in insn 7:
  Adding insn 6 to worklist
Processing use of (reg 133 [ D.18887 ]) in insn 13:
  Adding insn 11 to worklist
Processing use of (reg 134 [ D.18886 ]) in insn 13:
  Adding insn 12 to worklist
Processing use of (reg 136 [ hook ]) in insn 12:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 136 [ hook ]) in insn 11:
Processing use of (reg 133 [ D.18887 ]) in insn 14:
Processing use of (reg 134 [ D.18886 ]) in insn 14:
Processing use of (reg 136 [ hook ]) in insn 16:
Processing use of (reg 139) in insn 16:
  Adding insn 15 to worklist
Processing use of (reg 136 [ hook ]) in insn 18:
Processing use of (reg 140) in insn 18:
  Adding insn 17 to worklist
Processing use of (reg 13 sp) in insn 23:
Processing use of (reg 0 r0) in insn 23:
  Adding insn 21 to worklist
Processing use of (reg 1 r1) in insn 23:
  Adding insn 22 to worklist
Processing use of (reg 135 [ flags ]) in insn 22:
  Adding insn 10 to worklist
Processing use of (reg 0 r0) in insn 10:
Processing use of (reg 138) in insn 21:


unregister_undef_hook

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr]
;;  ref usage 	r0={5d,4u} r1={4d,1u} r2={3d} r3={3d} r11={1d,2u} r12={3d} r13={1d,4u} r14={2d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={1d,2u} r26={1d,1u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r133={1d,2u} r134={1d,2u} r135={1d,1u} r136={1d,4u} r137={1d,1u} r138={1d,2u} r139={1d,1u} r140={1d,1u} 
;;    total ref usage 283{254d,29u,0e} in 17{15 regular + 2 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245
0[0,5] 1[5,4] 2[9,3] 3[12,3] 11[15,1] 12[16,3] 13[19,1] 14[20,2] 15[22,2] 16[24,2] 17[26,2] 18[28,2] 19[30,2] 20[32,2] 21[34,2] 22[36,2] 23[38,2] 24[40,2] 25[42,1] 26[43,1] 27[44,2] 28[46,2] 29[48,2] 30[50,2] 31[52,2] 32[54,2] 33[56,2] 34[58,2] 35[60,2] 36[62,2] 37[64,2] 38[66,2] 39[68,2] 40[70,2] 41[72,2] 42[74,2] 43[76,2] 44[78,2] 45[80,2] 46[82,2] 47[84,2] 48[86,2] 49[88,2] 50[90,2] 51[92,2] 52[94,2] 53[96,2] 54[98,2] 55[100,2] 56[102,2] 57[104,2] 58[106,2] 59[108,2] 60[110,2] 61[112,2] 62[114,2] 63[116,2] 64[118,2] 65[120,2] 66[122,2] 67[124,2] 68[126,2] 69[128,2] 70[130,2] 71[132,2] 72[134,2] 73[136,2] 74[138,2] 75[140,2] 76[142,2] 77[144,2] 78[146,2] 79[148,2] 80[150,2] 81[152,2] 82[154,2] 83[156,2] 84[158,2] 85[160,2] 86[162,2] 87[164,2] 88[166,2] 89[168,2] 90[170,2] 91[172,2] 92[174,2] 93[176,2] 94[178,2] 95[180,2] 96[182,2] 97[184,2] 98[186,2] 99[188,2] 100[190,2] 101[192,2] 102[194,2] 103[196,2] 104[198,2] 105[200,2] 106[202,2] 107[204,2] 108[206,2] 109[208,2] 110[210,2] 111[212,2] 112[214,2] 113[216,2] 114[218,2] 115[220,2] 116[222,2] 117[224,2] 118[226,2] 119[228,2] 120[230,2] 121[232,2] 122[234,2] 123[236,2] 124[238,2] 125[240,2] 126[242,2] 127[244,2] 133[246,1] 134[247,1] 135[248,1] 136[249,1] 137[250,1] 138[251,1] 139[252,1] 140[253,1] 
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134 135 136 137 138 139 140
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 133 134 135 136 137 138 139 140
;; live  kill	 14 [lr]
;; rd  in  	(10)
4, 8, 11, 14, 15, 18, 19, 21, 42, 43
;; rd  gen 	(8)
246, 247, 248, 249, 250, 251, 252, 253
;; rd  kill	(10)
20, 21, 246, 247, 248, 249, 250, 251, 252, 253

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 arch/arm/kernel/traps.c:317 (set (reg/v/f:SI 136 [ hook ])
        (reg:SI 0 r0 [ hook ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ hook ])
        (nil)))

(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 3 7 2 arch/arm/kernel/traps.c:320 (set (reg/f:SI 137)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 7 6 8 2 arch/arm/kernel/traps.c:320 (set (reg/f:SI 138)
        (plus:SI (reg/f:SI 137)
            (const_int 4 [0x4]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 137)
        (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 4 [0x4])))
            (nil))))

(insn 8 7 9 2 arch/arm/kernel/traps.c:320 (set (reg:SI 0 r0)
        (reg/f:SI 138)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 4 [0x4])))
        (nil)))

(call_insn 9 8 10 2 arch/arm/kernel/traps.c:320 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("_raw_spin_lock_irqsave") [flags 0x41] <function_decl 0x10b28b80 _raw_spin_lock_irqsave>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 10 9 11 2 arch/arm/kernel/traps.c:320 (set (reg/v:SI 135 [ flags ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 11 10 12 2 include/linux/list.h:106 (set (reg/f:SI 133 [ D.18887 ])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 136 [ hook ])
                (const_int 4 [0x4])) [0 <variable>.node.prev+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 12 11 13 2 include/linux/list.h:106 (set (reg/f:SI 134 [ D.18886 ])
        (mem/s/f/j:SI (reg/v/f:SI 136 [ hook ]) [0 <variable>.node.next+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 13 12 14 2 include/linux/list.h:88 (set (mem/s/f/j:SI (plus:SI (reg/f:SI 134 [ D.18886 ])
                (const_int 4 [0x4])) [0 <variable>.prev+0 S4 A32])
        (reg/f:SI 133 [ D.18887 ])) 167 {*arm_movsi_insn} (nil))

(insn 14 13 15 2 include/linux/list.h:89 (set (mem/s/f/j:SI (reg/f:SI 133 [ D.18887 ]) [0 <variable>.next+0 S4 A32])
        (reg/f:SI 134 [ D.18886 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 134 [ D.18886 ])
        (expr_list:REG_DEAD (reg/f:SI 133 [ D.18887 ])
            (nil))))

(insn 15 14 16 2 include/linux/list.h:107 (set (reg:SI 139)
        (const_int 1048832 [0x100100])) 167 {*arm_movsi_insn} (nil))

(insn 16 15 17 2 include/linux/list.h:107 (set (mem/s/f/j:SI (reg/v/f:SI 136 [ hook ]) [0 <variable>.node.next+0 S4 A32])
        (reg:SI 139)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 139)
        (expr_list:REG_EQUAL (const_int 1048832 [0x100100])
            (nil))))

(insn 17 16 18 2 include/linux/list.h:108 (set (reg:SI 140)
        (const_int 2097664 [0x200200])) 167 {*arm_movsi_insn} (nil))

(insn 18 17 21 2 include/linux/list.h:108 (set (mem/s/f/j:SI (plus:SI (reg/v/f:SI 136 [ hook ])
                (const_int 4 [0x4])) [0 <variable>.node.prev+0 S4 A32])
        (reg:SI 140)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 140)
        (expr_list:REG_DEAD (reg/v/f:SI 136 [ hook ])
            (expr_list:REG_EQUAL (const_int 2097664 [0x200200])
                (nil)))))

(insn 21 18 22 2 include/linux/spinlock.h:340 (set (reg:SI 0 r0)
        (reg/f:SI 138)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 138)
        (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 4 [0x4])))
            (nil))))

(insn 22 21 23 2 include/linux/spinlock.h:340 (set (reg:SI 1 r1)
        (reg/v:SI 135 [ flags ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 135 [ flags ])
        (nil)))

(call_insn/j 23 22 24 2 include/linux/spinlock.h:340 (parallel [
            (call (mem:SI (symbol_ref:SI ("_raw_spin_unlock_irqrestore") [flags 0x41] <function_decl 0x10b28f00 _raw_spin_unlock_irqrestore>) [0 S4 A32])
                (const_int 0 [0x0]))
            (return)
            (use (const_int 0 [0x0]))
        ]) 258 {*sibcall_insn} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(17)
4, 8, 11, 14, 15, 18, 19, 42, 43, 246, 247, 248, 249, 250, 251, 252, 253


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 24 23 0)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function register_undef_hook (register_undef_hook)[0:1065]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


register_undef_hook

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr]
;;  ref usage 	r0={5d,4u} r1={4d,1u} r2={3d} r3={3d} r11={1d,2u} r12={3d} r13={1d,4u} r14={2d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={1d,2u} r26={1d,1u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r133={1d,2u} r134={1d,1u} r136={1d,4u} r137={1d,1u} r138={1d,2u} r139={1d,3u} 
;;    total ref usage 280{252d,28u,0e} in 15{13 regular + 2 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245
0[0,5] 1[5,4] 2[9,3] 3[12,3] 11[15,1] 12[16,3] 13[19,1] 14[20,2] 15[22,2] 16[24,2] 17[26,2] 18[28,2] 19[30,2] 20[32,2] 21[34,2] 22[36,2] 23[38,2] 24[40,2] 25[42,1] 26[43,1] 27[44,2] 28[46,2] 29[48,2] 30[50,2] 31[52,2] 32[54,2] 33[56,2] 34[58,2] 35[60,2] 36[62,2] 37[64,2] 38[66,2] 39[68,2] 40[70,2] 41[72,2] 42[74,2] 43[76,2] 44[78,2] 45[80,2] 46[82,2] 47[84,2] 48[86,2] 49[88,2] 50[90,2] 51[92,2] 52[94,2] 53[96,2] 54[98,2] 55[100,2] 56[102,2] 57[104,2] 58[106,2] 59[108,2] 60[110,2] 61[112,2] 62[114,2] 63[116,2] 64[118,2] 65[120,2] 66[122,2] 67[124,2] 68[126,2] 69[128,2] 70[130,2] 71[132,2] 72[134,2] 73[136,2] 74[138,2] 75[140,2] 76[142,2] 77[144,2] 78[146,2] 79[148,2] 80[150,2] 81[152,2] 82[154,2] 83[156,2] 84[158,2] 85[160,2] 86[162,2] 87[164,2] 88[166,2] 89[168,2] 90[170,2] 91[172,2] 92[174,2] 93[176,2] 94[178,2] 95[180,2] 96[182,2] 97[184,2] 98[186,2] 99[188,2] 100[190,2] 101[192,2] 102[194,2] 103[196,2] 104[198,2] 105[200,2] 106[202,2] 107[204,2] 108[206,2] 109[208,2] 110[210,2] 111[212,2] 112[214,2] 113[216,2] 114[218,2] 115[220,2] 116[222,2] 117[224,2] 118[226,2] 119[228,2] 120[230,2] 121[232,2] 122[234,2] 123[236,2] 124[238,2] 125[240,2] 126[242,2] 127[244,2] 133[246,1] 134[247,1] 136[248,1] 137[249,1] 138[250,1] 139[251,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d4(0){ }d8(1){ }d11(2){ }d14(3){ }d15(11){ }d18(12){ }d19(13){ }d21(14){ }d42(25){ }d43(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
4, 8, 11, 14, 15, 18, 19, 21, 42, 43
;; rd  kill	(24)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 42, 43
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(10)
4, 8, 11, 14, 15, 18, 19, 21, 42, 43

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d15(bb 0 insn -1) }u1(13){ d19(bb 0 insn -1) }u2(25){ d42(bb 0 insn -1) }u3(26){ d43(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134 136 137 138 139
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 133 134 136 137 138 139
;; live  kill	 14 [lr]
;; rd  in  	(10)
4, 8, 11, 14, 15, 18, 19, 21, 42, 43
;; rd  gen 	(6)
246, 247, 248, 249, 250, 251
;; rd  kill	(8)
20, 21, 246, 247, 248, 249, 250, 251
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(15)
4, 8, 11, 14, 15, 18, 19, 42, 43, 246, 247, 248, 249, 250, 251
;;  UD chains for artificial uses
;;   reg 11 { d15(bb 0 insn -1) }
;;   reg 13 { d19(bb 0 insn -1) }
;;   reg 25 { d42(bb 0 insn -1) }
;;   reg 26 { d43(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d4(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 7
;;      reg 137 { d249(bb 2 insn 6) }
;;   UD chains for insn luid 3 uid 8
;;      reg 138 { d250(bb 2 insn 7) }
;;   UD chains for insn luid 4 uid 9
;;      reg 13 { d19(bb 0 insn -1) }
;;      reg 0 { d3(bb 2 insn 8) }
;;   UD chains for insn luid 5 uid 10
;;      reg 0 { d2(bb 2 insn 9) }
;;   UD chains for insn luid 7 uid 13
;;      reg 139 { d251(bb 2 insn 12) }
;;   UD chains for insn luid 8 uid 14
;;      reg 133 { d246(bb 2 insn 13) }
;;      reg 136 { d248(bb 2 insn 2) }
;;   UD chains for insn luid 9 uid 15
;;      reg 133 { d246(bb 2 insn 13) }
;;      reg 136 { d248(bb 2 insn 2) }
;;   UD chains for insn luid 10 uid 17
;;      reg 136 { d248(bb 2 insn 2) }
;;      reg 139 { d251(bb 2 insn 12) }
;;   UD chains for insn luid 11 uid 19
;;      reg 136 { d248(bb 2 insn 2) }
;;      reg 139 { d251(bb 2 insn 12) }
;;   UD chains for insn luid 12 uid 22
;;      reg 138 { d250(bb 2 insn 7) }
;;   UD chains for insn luid 13 uid 23
;;      reg 134 { d247(bb 2 insn 10) }
;;   UD chains for insn luid 14 uid 24
;;      reg 13 { d19(bb 0 insn -1) }
;;      reg 0 { d0(bb 2 insn 22) }
;;      reg 1 { d6(bb 2 insn 23) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u24(11){ d15(bb 0 insn -1) }u25(13){ d19(bb 0 insn -1) }u26(14){ }u27(25){ d42(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(15)
4, 8, 11, 14, 15, 18, 19, 42, 43, 246, 247, 248, 249, 250, 251
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(15)
4, 8, 11, 14, 15, 18, 19, 42, 43, 246, 247, 248, 249, 250, 251
;;  UD chains for artificial uses
;;   reg 11 { d15(bb 0 insn -1) }
;;   reg 13 { d19(bb 0 insn -1) }
;;   reg 14 { }
;;   reg 25 { d42(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 24 to worklist
  Adding insn 19 to worklist
  Adding insn 17 to worklist
  Adding insn 15 to worklist
  Adding insn 14 to worklist
  Adding insn 9 to worklist
Finished finding needed instructions:
Processing use of (reg 13 sp) in insn 9:
Processing use of (reg 0 r0) in insn 9:
  Adding insn 8 to worklist
Processing use of (reg 138) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 137) in insn 7:
  Adding insn 6 to worklist
Processing use of (reg 133 [ D.18899 ]) in insn 14:
  Adding insn 13 to worklist
Processing use of (reg 136 [ hook ]) in insn 14:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 139) in insn 13:
  Adding insn 12 to worklist
Processing use of (reg 133 [ D.18899 ]) in insn 15:
Processing use of (reg 136 [ hook ]) in insn 15:
Processing use of (reg 136 [ hook ]) in insn 17:
Processing use of (reg 139) in insn 17:
Processing use of (reg 136 [ hook ]) in insn 19:
Processing use of (reg 139) in insn 19:
Processing use of (reg 13 sp) in insn 24:
Processing use of (reg 0 r0) in insn 24:
  Adding insn 22 to worklist
Processing use of (reg 1 r1) in insn 24:
  Adding insn 23 to worklist
Processing use of (reg 134 [ flags ]) in insn 23:
  Adding insn 10 to worklist
Processing use of (reg 0 r0) in insn 10:
Processing use of (reg 138) in insn 22:


register_undef_hook

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr]
;;  ref usage 	r0={5d,4u} r1={4d,1u} r2={3d} r3={3d} r11={1d,2u} r12={3d} r13={1d,4u} r14={2d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={1d,2u} r26={1d,1u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r133={1d,2u} r134={1d,1u} r136={1d,4u} r137={1d,1u} r138={1d,2u} r139={1d,3u} 
;;    total ref usage 280{252d,28u,0e} in 15{13 regular + 2 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245
0[0,5] 1[5,4] 2[9,3] 3[12,3] 11[15,1] 12[16,3] 13[19,1] 14[20,2] 15[22,2] 16[24,2] 17[26,2] 18[28,2] 19[30,2] 20[32,2] 21[34,2] 22[36,2] 23[38,2] 24[40,2] 25[42,1] 26[43,1] 27[44,2] 28[46,2] 29[48,2] 30[50,2] 31[52,2] 32[54,2] 33[56,2] 34[58,2] 35[60,2] 36[62,2] 37[64,2] 38[66,2] 39[68,2] 40[70,2] 41[72,2] 42[74,2] 43[76,2] 44[78,2] 45[80,2] 46[82,2] 47[84,2] 48[86,2] 49[88,2] 50[90,2] 51[92,2] 52[94,2] 53[96,2] 54[98,2] 55[100,2] 56[102,2] 57[104,2] 58[106,2] 59[108,2] 60[110,2] 61[112,2] 62[114,2] 63[116,2] 64[118,2] 65[120,2] 66[122,2] 67[124,2] 68[126,2] 69[128,2] 70[130,2] 71[132,2] 72[134,2] 73[136,2] 74[138,2] 75[140,2] 76[142,2] 77[144,2] 78[146,2] 79[148,2] 80[150,2] 81[152,2] 82[154,2] 83[156,2] 84[158,2] 85[160,2] 86[162,2] 87[164,2] 88[166,2] 89[168,2] 90[170,2] 91[172,2] 92[174,2] 93[176,2] 94[178,2] 95[180,2] 96[182,2] 97[184,2] 98[186,2] 99[188,2] 100[190,2] 101[192,2] 102[194,2] 103[196,2] 104[198,2] 105[200,2] 106[202,2] 107[204,2] 108[206,2] 109[208,2] 110[210,2] 111[212,2] 112[214,2] 113[216,2] 114[218,2] 115[220,2] 116[222,2] 117[224,2] 118[226,2] 119[228,2] 120[230,2] 121[232,2] 122[234,2] 123[236,2] 124[238,2] 125[240,2] 126[242,2] 127[244,2] 133[246,1] 134[247,1] 136[248,1] 137[249,1] 138[250,1] 139[251,1] 
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134 136 137 138 139
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 133 134 136 137 138 139
;; live  kill	 14 [lr]
;; rd  in  	(10)
4, 8, 11, 14, 15, 18, 19, 21, 42, 43
;; rd  gen 	(6)
246, 247, 248, 249, 250, 251
;; rd  kill	(8)
20, 21, 246, 247, 248, 249, 250, 251

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 arch/arm/kernel/traps.c:308 (set (reg/v/f:SI 136 [ hook ])
        (reg:SI 0 r0 [ hook ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ hook ])
        (nil)))

(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 3 7 2 arch/arm/kernel/traps.c:311 (set (reg/f:SI 137)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 7 6 8 2 arch/arm/kernel/traps.c:311 (set (reg/f:SI 138)
        (plus:SI (reg/f:SI 137)
            (const_int 4 [0x4]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 137)
        (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 4 [0x4])))
            (nil))))

(insn 8 7 9 2 arch/arm/kernel/traps.c:311 (set (reg:SI 0 r0)
        (reg/f:SI 138)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 4 [0x4])))
        (nil)))

(call_insn 9 8 10 2 arch/arm/kernel/traps.c:311 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("_raw_spin_lock_irqsave") [flags 0x41] <function_decl 0x10b28b80 _raw_spin_lock_irqsave>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 10 9 12 2 arch/arm/kernel/traps.c:311 (set (reg/v:SI 134 [ flags ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 12 10 13 2 include/linux/list.h:62 (set (reg/f:SI 139)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 13 12 14 2 include/linux/list.h:62 (set (reg/f:SI 133 [ D.18899 ])
        (mem/s/f/j/c:SI (reg/f:SI 139) [0 undef_hook.next+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 14 13 15 2 include/linux/list.h:41 (set (mem/s/f/j:SI (plus:SI (reg/f:SI 133 [ D.18899 ])
                (const_int 4 [0x4])) [0 <variable>.prev+0 S4 A32])
        (reg/v/f:SI 136 [ hook ])) 167 {*arm_movsi_insn} (nil))

(insn 15 14 17 2 include/linux/list.h:42 (set (mem/s/f/j:SI (reg/v/f:SI 136 [ hook ]) [0 <variable>.node.next+0 S4 A32])
        (reg/f:SI 133 [ D.18899 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 133 [ D.18899 ])
        (nil)))

(insn 17 15 19 2 include/linux/list.h:43 (set (mem/s/f/j:SI (plus:SI (reg/v/f:SI 136 [ hook ])
                (const_int 4 [0x4])) [0 <variable>.node.prev+0 S4 A32])
        (reg/f:SI 139)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn 19 17 22 2 include/linux/list.h:44 (set (mem/s/f/j/c:SI (reg/f:SI 139) [0 undef_hook.next+0 S4 A32])
        (reg/v/f:SI 136 [ hook ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 139)
        (expr_list:REG_DEAD (reg/v/f:SI 136 [ hook ])
            (nil))))

(insn 22 19 23 2 include/linux/spinlock.h:340 (set (reg:SI 0 r0)
        (reg/f:SI 138)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 138)
        (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 4 [0x4])))
            (nil))))

(insn 23 22 24 2 include/linux/spinlock.h:340 (set (reg:SI 1 r1)
        (reg/v:SI 134 [ flags ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 134 [ flags ])
        (nil)))

(call_insn/j 24 23 25 2 include/linux/spinlock.h:340 (parallel [
            (call (mem:SI (symbol_ref:SI ("_raw_spin_unlock_irqrestore") [flags 0x41] <function_decl 0x10b28f00 _raw_spin_unlock_irqrestore>) [0 S4 A32])
                (const_int 0 [0x0]))
            (return)
            (use (const_int 0 [0x0]))
        ]) 258 {*sibcall_insn} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(15)
4, 8, 11, 14, 15, 18, 19, 42, 43, 246, 247, 248, 249, 250, 251


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 25 24 0)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function dump_mem (dump_mem)[0:1057]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 13 n_edges 16 count 36 (  2.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 13 n_edges 16 count 34 (  2.6)
df_worklist_dataflow_doublequeue:n_basic_blocks 13 n_edges 16 count 37 (  2.8)


dump_mem

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={11d,6u} r1={11d,6u} r2={10d,5u} r3={8d,3u} r11={1d,12u} r12={6d} r13={1d,20u,2d} r14={6d,1u} r15={5d} r16={5d} r17={5d} r18={5d} r19={5d} r20={5d} r21={5d} r22={5d} r23={5d} r24={12d,6u} r25={1d,14u,3d} r26={1d,11u} r27={5d} r28={5d} r29={5d} r30={5d} r31={5d} r32={5d} r33={5d} r34={5d} r35={5d} r36={5d} r37={5d} r38={5d} r39={5d} r40={5d} r41={5d} r42={5d} r43={5d} r44={5d} r45={5d} r46={5d} r47={5d} r48={5d} r49={5d} r50={5d} r51={5d} r52={5d} r53={5d} r54={5d} r55={5d} r56={5d} r57={5d} r58={5d} r59={5d} r60={5d} r61={5d} r62={5d} r63={5d} r64={5d} r65={5d} r66={5d} r67={5d} r68={5d} r69={5d} r70={5d} r71={5d} r72={5d} r73={5d} r74={5d} r75={5d} r76={5d} r77={5d} r78={5d} r79={5d} r80={5d} r81={5d} r82={5d} r83={5d} r84={5d} r85={5d} r86={5d} r87={5d} r88={5d} r89={5d} r90={5d} r91={5d} r92={5d} r93={5d} r94={5d} r95={5d} r96={5d} r97={5d} r98={5d} r99={5d} r100={5d} r101={5d} r102={5d} r103={5d} r104={5d} r105={5d} r106={5d} r107={5d} r108={5d} r109={5d} r110={5d} r111={5d} r112={5d} r113={5d} r114={5d} r115={5d} r116={5d} r117={5d} r118={5d} r119={5d} r120={5d} r121={5d} r122={5d} r123={5d} r124={5d} r125={5d} r126={5d} r127={5d} r138={2d,3u} r142={1d,1u} r143={1d,1u} r144={2d,4u} r145={2d,2u} r146={1d,1u} r147={2d,4u,1d} r148={1d,2u} r149={1d,1u} r150={1d,3u} r151={1d,3u} r152={1d,2u} r153={1d,1u} r156={1d,2u} r166={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r171={1d,1u} r173={1d,1u} r174={1d,1u} r176={1d,1u} r177={1d,1u} r181={1d,3u} r184={1d,2u} 
;;    total ref usage 781{647d,128u,6e} in 66{61 regular + 5 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617
0[0,11] 1[11,11] 2[22,10] 3[32,8] 11[40,1] 12[41,6] 13[47,1] 14[48,6] 15[54,5] 16[59,5] 17[64,5] 18[69,5] 19[74,5] 20[79,5] 21[84,5] 22[89,5] 23[94,5] 24[99,12] 25[111,1] 26[112,1] 27[113,5] 28[118,5] 29[123,5] 30[128,5] 31[133,5] 32[138,5] 33[143,5] 34[148,5] 35[153,5] 36[158,5] 37[163,5] 38[168,5] 39[173,5] 40[178,5] 41[183,5] 42[188,5] 43[193,5] 44[198,5] 45[203,5] 46[208,5] 47[213,5] 48[218,5] 49[223,5] 50[228,5] 51[233,5] 52[238,5] 53[243,5] 54[248,5] 55[253,5] 56[258,5] 57[263,5] 58[268,5] 59[273,5] 60[278,5] 61[283,5] 62[288,5] 63[293,5] 64[298,5] 65[303,5] 66[308,5] 67[313,5] 68[318,5] 69[323,5] 70[328,5] 71[333,5] 72[338,5] 73[343,5] 74[348,5] 75[353,5] 76[358,5] 77[363,5] 78[368,5] 79[373,5] 80[378,5] 81[383,5] 82[388,5] 83[393,5] 84[398,5] 85[403,5] 86[408,5] 87[413,5] 88[418,5] 89[423,5] 90[428,5] 91[433,5] 92[438,5] 93[443,5] 94[448,5] 95[453,5] 96[458,5] 97[463,5] 98[468,5] 99[473,5] 100[478,5] 101[483,5] 102[488,5] 103[493,5] 104[498,5] 105[503,5] 106[508,5] 107[513,5] 108[518,5] 109[523,5] 110[528,5] 111[533,5] 112[538,5] 113[543,5] 114[548,5] 115[553,5] 116[558,5] 117[563,5] 118[568,5] 119[573,5] 120[578,5] 121[583,5] 122[588,5] 123[593,5] 124[598,5] 125[603,5] 126[608,5] 127[613,5] 138[618,2] 142[620,1] 143[621,1] 144[622,2] 145[624,2] 146[626,1] 147[627,2] 148[629,1] 149[630,1] 150[631,1] 151[632,1] 152[633,1] 153[634,1] 156[635,1] 166[636,1] 168[637,1] 169[638,1] 170[639,1] 171[640,1] 173[641,1] 174[642,1] 176[643,1] 177[644,1] 181[645,1] 184[646,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d10(0){ }d21(1){ }d31(2){ }d39(3){ }d40(11){ }d46(12){ }d47(13){ }d53(14){ }d111(25){ }d112(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
10, 21, 31, 39, 40, 46, 47, 53, 111, 112
;; rd  kill	(56)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 111, 112
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(10)
10, 21, 31, 39, 40, 46, 47, 53, 111, 112

( 0 )->[2]->( 11 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d40(bb 0 insn -1) }u1(13){ d47(bb 0 insn -1) }u2(25){ d111(bb 0 insn -1) }u3(26){ d112(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 146 147 148 149 150 151 152 153 156 181 184
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 146 147 148 149 150 151 152 153 156 181 184
;; live  kill	 14 [lr]
;; rd  in  	(10)
10, 21, 31, 39, 40, 46, 47, 53, 111, 112
;; rd  gen 	(12)
9, 626, 628, 629, 630, 631, 632, 633, 634, 635, 645, 646
;; rd  kill	(29)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 48, 49, 50, 51, 52, 53, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 645, 646
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 147 148 150 151 181 184
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 150 151 181 184
;; rd  out 	(20)
9, 21, 31, 39, 40, 46, 47, 111, 112, 626, 628, 629, 630, 631, 632, 633, 634, 635, 645, 646
;;  UD chains for artificial uses
;;   reg 11 { d40(bb 0 insn -1) }
;;   reg 13 { d47(bb 0 insn -1) }
;;   reg 25 { d111(bb 0 insn -1) }
;;   reg 26 { d112(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 7
;;      reg 0 { d10(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 8
;;      reg 1 { d21(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 9
;;      reg 2 { d31(bb 0 insn -1) }
;;   UD chains for insn luid 3 uid 10
;;      reg 3 { d39(bb 0 insn -1) }
;;   UD chains for insn luid 4 uid 15
;;      reg 13 { d47(bb 0 insn -1) }
;;   UD chains for insn luid 5 uid 16
;;      reg 153 { d634(bb 2 insn 15) }
;;   eq_note reg 13 { }
;;   UD chains for insn luid 6 uid 17
;;      reg 152 { d633(bb 2 insn 16) }
;;   UD chains for insn luid 8 uid 22
;;      reg 152 { d633(bb 2 insn 16) }
;;      reg 156 { d635(bb 2 insn 21) }
;;   UD chains for insn luid 9 uid 24
;;      reg 13 { d47(bb 0 insn -1) }
;;      reg 151 { d632(bb 2 insn 10) }
;;   UD chains for insn luid 11 uid 26
;;      reg 148 { d629(bb 2 insn 7) }
;;   UD chains for insn luid 12 uid 27
;;      reg 149 { d630(bb 2 insn 8) }
;;   UD chains for insn luid 13 uid 28
;;      reg 150 { d631(bb 2 insn 9) }
;;   UD chains for insn luid 14 uid 29
;;      reg 13 { d47(bb 0 insn -1) }
;;      reg 0 { d2(bb 2 insn 25) }
;;      reg 1 { d20(bb 2 insn 26) }
;;      reg 2 { d30(bb 2 insn 27) }
;;      reg 3 { d38(bb 2 insn 28) }
;;   UD chains for insn luid 15 uid 30
;;      reg 150 { d631(bb 2 insn 9) }
;;   UD chains for insn luid 16 uid 35
;;      reg 25 { d111(bb 0 insn -1) }
;;   UD chains for insn luid 17 uid 40
;;      reg 156 { d635(bb 2 insn 21) }

( 11 )->[3]->( 9 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u27(11){ d40(bb 0 insn -1) }u28(13){ d47(bb 0 insn -1) }u29(25){ d111(bb 0 insn -1) }u30(26){ d112(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 150 151 181 184
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 181 184
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 138 144 145
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 150 151 181 184
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 138 144 145
;; live  kill	 14 [lr]
;; rd  in  	(38)
3, 9, 21, 31, 39, 40, 46, 47, 100, 111, 112, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 645, 646
;; rd  gen 	(4)
8, 618, 623, 624
;; rd  kill	(23)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 48, 49, 50, 51, 52, 53, 618, 619, 622, 623, 624, 625
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 144 145 146 147 148 150 151 181 184
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 144 145 146 147 148 150 151 181 184
;; rd  out 	(34)
8, 21, 31, 39, 40, 46, 47, 100, 111, 112, 618, 620, 621, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 645, 646
;;  UD chains for artificial uses
;;   reg 11 { d40(bb 0 insn -1) }
;;   reg 13 { d47(bb 0 insn -1) }
;;   reg 25 { d111(bb 0 insn -1) }
;;   reg 26 { d112(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 36
;;      reg 181 { d645(bb 2 insn 35) }
;;   eq_note reg 25 { }
;;   UD chains for insn luid 3 uid 39
;;      reg 13 { d47(bb 0 insn -1) }
;;      reg 0 { d1(bb 3 insn 36) }
;;      reg 1 { d13(bb 3 insn 122) }
;;      reg 2 { d22(bb 3 insn 123) }
;;   UD chains for insn luid 4 uid 42
;;      reg 25 { d111(bb 0 insn -1) }
;;      reg 184 { d646(bb 2 insn 40) }
;;   UD chains for insn luid 5 uid 43
;;      reg 181 { d645(bb 2 insn 35) }
;;   eq_note reg 25 { }
;;   UD chains for insn luid 6 uid 44
;;      reg 147 { d628(bb 2 insn 30) d627(bb 10 insn 99) }

( 9 )->[4]->( 5 8 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u42(11){ d40(bb 0 insn -1) }u43(13){ d47(bb 0 insn -1) }u44(25){ d111(bb 0 insn -1) }u45(26){ d112(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 144 145 146 147 148 150 151 181 184
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 150
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 144 145 146 147 148 150 151 181 184
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(39)
4, 6, 8, 21, 31, 39, 40, 46, 47, 102, 111, 112, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 645, 646
;; rd  gen 	(1)
108
;; rd  kill	(12)
99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 144 145 146 147 148 150 151 181 184
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 144 145 146 147 148 150 151 181 184
;; rd  out 	(39)
4, 6, 8, 21, 31, 39, 40, 46, 47, 108, 111, 112, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 645, 646
;;  UD chains for artificial uses
;;   reg 11 { d40(bb 0 insn -1) }
;;   reg 13 { d47(bb 0 insn -1) }
;;   reg 25 { d111(bb 0 insn -1) }
;;   reg 26 { d112(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 49
;;      reg 144 { d623(bb 3 insn 44) d622(bb 8 insn 73) }
;;      reg 150 { d631(bb 2 insn 9) }
;;   UD chains for insn luid 1 uid 50
;;      reg 24 { d108(bb 4 insn 49) }

( 4 )->[5]->( 6 7 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u49(11){ d40(bb 0 insn -1) }u50(13){ d47(bb 0 insn -1) }u51(25){ d111(bb 0 insn -1) }u52(26){ d112(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 144 145 146 147 148 150 151 181 184
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 184
;; lr  def 	 24 [cc] 142 143
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 144 145 146 147 148 150 151 181 184
;; live  gen 	 24 [cc] 142 143
;; live  kill	 24 [cc]
;; rd  in  	(39)
4, 6, 8, 21, 31, 39, 40, 46, 47, 108, 111, 112, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 645, 646
;; rd  gen 	(3)
107, 620, 621
;; rd  kill	(14)
99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 620, 621
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 142 144 145 146 147 148 150 151 181 184
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 142 144 145 146 147 148 150 151 181 184
;; rd  out 	(39)
4, 6, 8, 21, 31, 39, 40, 46, 47, 107, 111, 112, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 645, 646
;;  UD chains for artificial uses
;;   reg 11 { d40(bb 0 insn -1) }
;;   reg 13 { d47(bb 0 insn -1) }
;;   reg 25 { d111(bb 0 insn -1) }
;;   reg 26 { d112(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 53
;;      reg 144 { d623(bb 3 insn 44) d622(bb 8 insn 73) }
;;      reg 184 { d646(bb 2 insn 40) }
;;   UD chains for insn luid 1 uid 54
;;      reg 143 { d621(bb 5 insn 53) }
;;   UD chains for insn luid 2 uid 55
;;      reg 24 { d107(bb 5 insn 54) }

( 5 )->[6]->( 8 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u57(11){ d40(bb 0 insn -1) }u58(13){ d47(bb 0 insn -1) }u59(25){ d111(bb 0 insn -1) }u60(26){ d112(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 142 144 145 146 147 148 150 151 181 184
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 142
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 142 144 145 146 147 148 150 151 181 184
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	 14 [lr]
;; rd  in  	(39)
4, 6, 8, 21, 31, 39, 40, 46, 47, 107, 111, 112, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 645, 646
;; rd  gen 	(1)
6
;; rd  kill	(17)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 48, 49, 50, 51, 52, 53
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 144 145 146 147 148 150 151 181 184
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 144 145 146 147 148 150 151 181 184
;; rd  out 	(37)
6, 21, 31, 39, 40, 46, 47, 107, 111, 112, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 645, 646
;;  UD chains for artificial uses
;;   reg 11 { d40(bb 0 insn -1) }
;;   reg 13 { d47(bb 0 insn -1) }
;;   reg 25 { d111(bb 0 insn -1) }
;;   reg 26 { d112(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 58
;;      reg 138 { d619(bb 8 insn 74) d618(bb 3 insn 43) }
;;   UD chains for insn luid 2 uid 60
;;      reg 142 { d620(bb 5 insn 53) }
;;   UD chains for insn luid 3 uid 61
;;      reg 13 { d47(bb 0 insn -1) }
;;      reg 0 { d7(bb 6 insn 58) }
;;      reg 1 { d12(bb 6 insn 120) }
;;      reg 2 { d27(bb 6 insn 60) }

( 5 )->[7]->( 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u67(11){ d40(bb 0 insn -1) }u68(13){ d47(bb 0 insn -1) }u69(25){ d111(bb 0 insn -1) }u70(26){ d112(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 144 145 146 147 148 150 151 181 184
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 144 145 146 147 148 150 151 181 184
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]
;; rd  in  	(39)
4, 6, 8, 21, 31, 39, 40, 46, 47, 107, 111, 112, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 645, 646
;; rd  gen 	(1)
4
;; rd  kill	(17)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 48, 49, 50, 51, 52, 53
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 144 145 146 147 148 150 151 181 184
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 144 145 146 147 148 150 151 181 184
;; rd  out 	(37)
4, 21, 31, 39, 40, 46, 47, 107, 111, 112, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 645, 646
;;  UD chains for artificial uses
;;   reg 11 { d40(bb 0 insn -1) }
;;   reg 13 { d47(bb 0 insn -1) }
;;   reg 25 { d111(bb 0 insn -1) }
;;   reg 26 { d112(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 67
;;      reg 138 { d619(bb 8 insn 74) d618(bb 3 insn 43) }
;;   UD chains for insn luid 2 uid 69
;;      reg 13 { d47(bb 0 insn -1) }
;;      reg 0 { d5(bb 7 insn 67) }
;;      reg 1 { d11(bb 7 insn 119) }

( 4 7 6 )->[8]->( 9 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u75(11){ d40(bb 0 insn -1) }u76(13){ d47(bb 0 insn -1) }u77(25){ d111(bb 0 insn -1) }u78(26){ d112(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 144 145 146 147 148 150 151 181 184
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 144 145
;; lr  def 	 138 144 145
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 144 145 146 147 148 150 151 181 184
;; live  gen 	 138 144 145
;; live  kill	
;; rd  in  	(40)
4, 6, 8, 21, 31, 39, 40, 46, 47, 107, 108, 111, 112, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 645, 646
;; rd  gen 	(3)
619, 622, 625
;; rd  kill	(6)
618, 619, 622, 623, 624, 625
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 144 145 146 147 148 150 151 181 184
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 144 145 146 147 148 150 151 181 184
;; rd  out 	(37)
4, 6, 8, 21, 31, 39, 40, 46, 47, 107, 108, 111, 112, 619, 620, 621, 622, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 645, 646
;;  UD chains for artificial uses
;;   reg 11 { d40(bb 0 insn -1) }
;;   reg 13 { d47(bb 0 insn -1) }
;;   reg 25 { d111(bb 0 insn -1) }
;;   reg 26 { d112(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 72
;;      reg 145 { d625(bb 8 insn 72) d624(bb 3 insn 125) }
;;   UD chains for insn luid 1 uid 73
;;      reg 144 { d623(bb 3 insn 44) d622(bb 8 insn 73) }
;;   UD chains for insn luid 2 uid 74
;;      reg 138 { d619(bb 8 insn 74) d618(bb 3 insn 43) }

( 8 3 )->[9]->( 4 10 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u82(11){ d40(bb 0 insn -1) }u83(13){ d47(bb 0 insn -1) }u84(25){ d111(bb 0 insn -1) }u85(26){ d112(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 144 145 146 147 148 150 151 181 184
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 151
;; lr  def 	 24 [cc] 166 168 169 170 171
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 144 145 146 147 148 150 151 181 184
;; live  gen 	 24 [cc] 166 168 169 170 171
;; live  kill	
;; rd  in  	(41)
4, 6, 8, 21, 31, 39, 40, 46, 47, 100, 107, 108, 111, 112, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 645, 646
;; rd  gen 	(6)
102, 636, 637, 638, 639, 640
;; rd  kill	(17)
99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 636, 637, 638, 639, 640
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 144 145 146 147 148 150 151 181 184
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 144 145 146 147 148 150 151 181 184
;; rd  out 	(39)
4, 6, 8, 21, 31, 39, 40, 46, 47, 102, 111, 112, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 645, 646
;;  UD chains for artificial uses
;;   reg 11 { d40(bb 0 insn -1) }
;;   reg 13 { d47(bb 0 insn -1) }
;;   reg 25 { d111(bb 0 insn -1) }
;;   reg 26 { d112(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 78
;;      reg 144 { d623(bb 3 insn 44) d622(bb 8 insn 73) }
;;      reg 151 { d632(bb 2 insn 10) }
;;   UD chains for insn luid 1 uid 79
;;      reg 24 { d104(bb 9 insn 78) }
;;   UD chains for insn luid 2 uid 81
;;      reg 145 { d625(bb 8 insn 72) d624(bb 3 insn 125) }
;;   UD chains for insn luid 3 uid 82
;;      reg 24 { d103(bb 9 insn 81) }
;;   UD chains for insn luid 4 uid 84
;;      reg 166 { d636(bb 9 insn 79) }
;;      reg 168 { d637(bb 9 insn 82) }
;;   UD chains for insn luid 5 uid 85
;;      reg 169 { d638(bb 9 insn 84) }
;;   UD chains for insn luid 6 uid 86
;;      reg 170 { d639(bb 9 insn 85) }
;;   UD chains for insn luid 7 uid 87
;;      reg 171 { d640(bb 9 insn 86) }
;;   UD chains for insn luid 8 uid 88
;;      reg 24 { d102(bb 9 insn 87) }

( 9 )->[10]->( 11 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u97(11){ d40(bb 0 insn -1) }u98(13){ d47(bb 0 insn -1) }u99(25){ d111(bb 0 insn -1) }u100(26){ d112(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 150 151 181 184
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 181
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 147 173 174
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 150 151 181 184
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 147 173 174
;; live  kill	 14 [lr]
;; rd  in  	(39)
4, 6, 8, 21, 31, 39, 40, 46, 47, 102, 111, 112, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 645, 646
;; rd  gen 	(4)
3, 627, 641, 642
;; rd  kill	(21)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 48, 49, 50, 51, 52, 53, 627, 628, 641, 642
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 147 148 150 151 181 184
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 150 151 181 184
;; rd  out 	(36)
3, 21, 31, 39, 40, 46, 47, 102, 111, 112, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 645, 646
;;  UD chains for artificial uses
;;   reg 11 { d40(bb 0 insn -1) }
;;   reg 13 { d47(bb 0 insn -1) }
;;   reg 25 { d111(bb 0 insn -1) }
;;   reg 26 { d112(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 91
;;      reg 147 { d628(bb 2 insn 30) d627(bb 10 insn 99) }
;;   UD chains for insn luid 1 uid 92
;;      reg 174 { d642(bb 10 insn 91) }
;;   eq_note reg 147 { }
;;   UD chains for insn luid 3 uid 95
;;      reg 148 { d629(bb 2 insn 7) }
;;   UD chains for insn luid 4 uid 96
;;      reg 173 { d641(bb 10 insn 92) }
;;   UD chains for insn luid 5 uid 97
;;      reg 181 { d645(bb 2 insn 35) }
;;   eq_note reg 25 { }
;;   UD chains for insn luid 6 uid 98
;;      reg 13 { d47(bb 0 insn -1) }
;;      reg 0 { d0(bb 10 insn 131) }
;;      reg 1 { d15(bb 10 insn 95) }
;;      reg 2 { d24(bb 10 insn 96) }
;;      reg 3 { d32(bb 10 insn 97) }
;;   UD chains for insn luid 7 uid 99
;;      reg 147 { d628(bb 2 insn 30) d627(bb 10 insn 99) }

( 10 2 )->[11]->( 3 12 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u114(11){ d40(bb 0 insn -1) }u115(13){ d47(bb 0 insn -1) }u116(25){ d111(bb 0 insn -1) }u117(26){ d112(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 147 148 150 151 181 184
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 151
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 150 151 181 184
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(38)
3, 9, 21, 31, 39, 40, 46, 47, 102, 111, 112, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 645, 646
;; rd  gen 	(1)
100
;; rd  kill	(12)
99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 147 148 150 151 181 184
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 150 151 181 184
;; rd  out 	(38)
3, 9, 21, 31, 39, 40, 46, 47, 100, 111, 112, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 645, 646
;;  UD chains for artificial uses
;;   reg 11 { d40(bb 0 insn -1) }
;;   reg 13 { d47(bb 0 insn -1) }
;;   reg 25 { d111(bb 0 insn -1) }
;;   reg 26 { d112(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 103
;;      reg 147 { d628(bb 2 insn 30) d627(bb 10 insn 99) }
;;      reg 151 { d632(bb 2 insn 10) }
;;   UD chains for insn luid 1 uid 104
;;      reg 24 { d100(bb 11 insn 103) }

( 11 )->[12]->( 1 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u121(11){ d40(bb 0 insn -1) }u122(13){ d47(bb 0 insn -1) }u123(25){ d111(bb 0 insn -1) }u124(26){ d112(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146
;; lr  def 	 176 177
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146
;; live  gen 	 176 177
;; live  kill	
;; rd  in  	(38)
3, 9, 21, 31, 39, 40, 46, 47, 100, 111, 112, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 645, 646
;; rd  gen 	(2)
643, 644
;; rd  kill	(2)
643, 644
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(40)
3, 9, 21, 31, 39, 40, 46, 47, 100, 111, 112, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646
;;  UD chains for artificial uses
;;   reg 11 { d40(bb 0 insn -1) }
;;   reg 13 { d47(bb 0 insn -1) }
;;   reg 25 { d111(bb 0 insn -1) }
;;   reg 26 { d112(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 107
;;      reg 13 { d47(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 108
;;      reg 177 { d644(bb 12 insn 107) }
;;   eq_note reg 13 { }
;;   UD chains for insn luid 2 uid 109
;;      reg 146 { d626(bb 2 insn 17) }
;;      reg 176 { d643(bb 12 insn 108) }

( 12 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u130(11){ d40(bb 0 insn -1) }u131(13){ d47(bb 0 insn -1) }u132(14){ }u133(25){ d111(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(40)
3, 9, 21, 31, 39, 40, 46, 47, 100, 111, 112, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(40)
3, 9, 21, 31, 39, 40, 46, 47, 100, 111, 112, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646
;;  UD chains for artificial uses
;;   reg 11 { d40(bb 0 insn -1) }
;;   reg 13 { d47(bb 0 insn -1) }
;;   reg 14 { }
;;   reg 25 { d111(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 132 to worklist
  Adding insn 29 to worklist
  Adding insn 24 to worklist
  Adding insn 22 to worklist
  Adding insn 134 to worklist
  Adding insn 42 to worklist
  Adding insn 39 to worklist
  Adding insn 50 to worklist
  Adding insn 55 to worklist
  Adding insn 53 to worklist
  Adding insn 136 to worklist
  Adding insn 61 to worklist
  Adding insn 69 to worklist
  Adding insn 88 to worklist
  Adding insn 98 to worklist
  Adding insn 104 to worklist
  Adding insn 109 to worklist
Finished finding needed instructions:
Processing use of (reg 146 [ fs ]) in insn 109:
  Adding insn 17 to worklist
Processing use of (reg 176) in insn 109:
  Adding insn 108 to worklist
Processing use of (reg 177) in insn 108:
  Adding insn 107 to worklist
Processing use of (reg 13 sp) in insn 107:
Processing use of (reg 152) in insn 17:
  Adding insn 16 to worklist
Processing use of (reg 153) in insn 16:
  Adding insn 15 to worklist
Processing use of (reg 13 sp) in insn 15:
Processing use of (reg 24 cc) in insn 104:
  Adding insn 103 to worklist
Processing use of (reg 147 [ first ]) in insn 103:
  Adding insn 30 to worklist
  Adding insn 99 to worklist
Processing use of (reg 151 [ top ]) in insn 103:
  Adding insn 10 to worklist
Processing use of (reg 3 r3) in insn 10:
Processing use of (reg 147 [ first ]) in insn 99:
Processing use of (reg 150 [ bottom ]) in insn 30:
  Adding insn 9 to worklist
Processing use of (reg 2 r2) in insn 9:
Processing use of (reg 13 sp) in insn 98:
Processing use of (reg 0 r0) in insn 98:
  Adding insn 131 to worklist
Processing use of (reg 1 r1) in insn 98:
  Adding insn 95 to worklist
Processing use of (reg 2 r2) in insn 98:
  Adding insn 96 to worklist
Processing use of (reg 3 r3) in insn 98:
  Adding insn 97 to worklist
Processing use of (reg 181) in insn 97:
  Adding insn 35 to worklist
Processing use of (reg 25 sfp) in insn 35:
Processing use of (reg 173) in insn 96:
  Adding insn 92 to worklist
Processing use of (reg 174) in insn 92:
  Adding insn 91 to worklist
Processing use of (reg 147 [ first ]) in insn 91:
Processing use of (reg 148 [ lvl ]) in insn 95:
  Adding insn 7 to worklist
Processing use of (reg 0 r0) in insn 7:
Processing use of (reg 24 cc) in insn 88:
  Adding insn 87 to worklist
Processing use of (reg 171) in insn 87:
  Adding insn 86 to worklist
Processing use of (reg 170) in insn 86:
  Adding insn 85 to worklist
Processing use of (subreg (reg 169) 0) in insn 85:
  Adding insn 84 to worklist
Processing use of (reg 166) in insn 84:
  Adding insn 79 to worklist
Processing use of (reg 168) in insn 84:
  Adding insn 82 to worklist
Processing use of (reg 24 cc) in insn 82:
  Adding insn 81 to worklist
Processing use of (reg 145 [ i ]) in insn 81:
  Adding insn 72 to worklist
  Adding insn 125 to worklist
Processing use of (reg 145 [ i ]) in insn 72:
Processing use of (reg 24 cc) in insn 79:
  Adding insn 78 to worklist
Processing use of (reg 144 [ p ]) in insn 78:
  Adding insn 44 to worklist
  Adding insn 73 to worklist
Processing use of (reg 151 [ top ]) in insn 78:
Processing use of (reg 144 [ p ]) in insn 73:
Processing use of (reg 147 [ first ]) in insn 44:
Processing use of (reg 13 sp) in insn 69:
Processing use of (reg 0 r0) in insn 69:
  Adding insn 67 to worklist
Processing use of (reg 1 r1) in insn 69:
  Adding insn 119 to worklist
Processing use of (reg 138 [ ivtmp.628 ]) in insn 67:
  Adding insn 74 to worklist
  Adding insn 43 to worklist
Processing use of (reg 181) in insn 43:
Processing use of (reg 138 [ ivtmp.628 ]) in insn 74:
Processing use of (reg 13 sp) in insn 61:
Processing use of (reg 0 r0) in insn 61:
  Adding insn 58 to worklist
Processing use of (reg 1 r1) in insn 61:
  Adding insn 120 to worklist
Processing use of (reg 2 r2) in insn 61:
  Adding insn 60 to worklist
Processing use of (reg 142 [ __gu_val ]) in insn 60:
Processing use of (reg 138 [ ivtmp.628 ]) in insn 58:
Processing use of (reg 144 [ p ]) in insn 53:
Processing use of (reg 184) in insn 53:
  Adding insn 40 to worklist
Processing use of (reg 156) in insn 40:
  Adding insn 21 to worklist
Processing use of (reg 24 cc) in insn 55:
  Adding insn 54 to worklist
Processing use of (reg 143 [ __gu_err ]) in insn 54:
Processing use of (reg 24 cc) in insn 50:
  Adding insn 49 to worklist
Processing use of (reg 144 [ p ]) in insn 49:
Processing use of (reg 150 [ bottom ]) in insn 49:
Processing use of (reg 13 sp) in insn 39:
Processing use of (reg 0 r0) in insn 39:
  Adding insn 36 to worklist
Processing use of (reg 1 r1) in insn 39:
  Adding insn 122 to worklist
Processing use of (reg 2 r2) in insn 39:
  Adding insn 123 to worklist
Processing use of (reg 181) in insn 36:
Processing use of (reg 25 sfp) in insn 42:
Processing use of (subreg (reg 184) 0) in insn 42:
Processing use of (reg 152) in insn 22:
Processing use of (reg 156) in insn 22:
Processing use of (reg 13 sp) in insn 24:
Processing use of (reg 151 [ top ]) in insn 24:
Processing use of (reg 13 sp) in insn 29:
Processing use of (reg 0 r0) in insn 29:
  Adding insn 25 to worklist
Processing use of (reg 1 r1) in insn 29:
  Adding insn 26 to worklist
Processing use of (reg 2 r2) in insn 29:
  Adding insn 27 to worklist
Processing use of (reg 3 r3) in insn 29:
  Adding insn 28 to worklist
Processing use of (reg 150 [ bottom ]) in insn 28:
Processing use of (reg 149 [ str ]) in insn 27:
  Adding insn 8 to worklist
Processing use of (reg 1 r1) in insn 8:
Processing use of (reg 148 [ lvl ]) in insn 26:


dump_mem

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={11d,6u} r1={11d,6u} r2={10d,5u} r3={8d,3u} r11={1d,12u} r12={6d} r13={1d,20u,2d} r14={6d,1u} r15={5d} r16={5d} r17={5d} r18={5d} r19={5d} r20={5d} r21={5d} r22={5d} r23={5d} r24={12d,6u} r25={1d,14u,3d} r26={1d,11u} r27={5d} r28={5d} r29={5d} r30={5d} r31={5d} r32={5d} r33={5d} r34={5d} r35={5d} r36={5d} r37={5d} r38={5d} r39={5d} r40={5d} r41={5d} r42={5d} r43={5d} r44={5d} r45={5d} r46={5d} r47={5d} r48={5d} r49={5d} r50={5d} r51={5d} r52={5d} r53={5d} r54={5d} r55={5d} r56={5d} r57={5d} r58={5d} r59={5d} r60={5d} r61={5d} r62={5d} r63={5d} r64={5d} r65={5d} r66={5d} r67={5d} r68={5d} r69={5d} r70={5d} r71={5d} r72={5d} r73={5d} r74={5d} r75={5d} r76={5d} r77={5d} r78={5d} r79={5d} r80={5d} r81={5d} r82={5d} r83={5d} r84={5d} r85={5d} r86={5d} r87={5d} r88={5d} r89={5d} r90={5d} r91={5d} r92={5d} r93={5d} r94={5d} r95={5d} r96={5d} r97={5d} r98={5d} r99={5d} r100={5d} r101={5d} r102={5d} r103={5d} r104={5d} r105={5d} r106={5d} r107={5d} r108={5d} r109={5d} r110={5d} r111={5d} r112={5d} r113={5d} r114={5d} r115={5d} r116={5d} r117={5d} r118={5d} r119={5d} r120={5d} r121={5d} r122={5d} r123={5d} r124={5d} r125={5d} r126={5d} r127={5d} r138={2d,3u} r142={1d,1u} r143={1d,1u} r144={2d,4u} r145={2d,2u} r146={1d,1u} r147={2d,4u,1d} r148={1d,2u} r149={1d,1u} r150={1d,3u} r151={1d,3u} r152={1d,2u} r153={1d,1u} r156={1d,2u} r166={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r171={1d,1u} r173={1d,1u} r174={1d,1u} r176={1d,1u} r177={1d,1u} r181={1d,3u} r184={1d,2u} 
;;    total ref usage 781{647d,128u,6e} in 66{61 regular + 5 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617
0[0,11] 1[11,11] 2[22,10] 3[32,8] 11[40,1] 12[41,6] 13[47,1] 14[48,6] 15[54,5] 16[59,5] 17[64,5] 18[69,5] 19[74,5] 20[79,5] 21[84,5] 22[89,5] 23[94,5] 24[99,12] 25[111,1] 26[112,1] 27[113,5] 28[118,5] 29[123,5] 30[128,5] 31[133,5] 32[138,5] 33[143,5] 34[148,5] 35[153,5] 36[158,5] 37[163,5] 38[168,5] 39[173,5] 40[178,5] 41[183,5] 42[188,5] 43[193,5] 44[198,5] 45[203,5] 46[208,5] 47[213,5] 48[218,5] 49[223,5] 50[228,5] 51[233,5] 52[238,5] 53[243,5] 54[248,5] 55[253,5] 56[258,5] 57[263,5] 58[268,5] 59[273,5] 60[278,5] 61[283,5] 62[288,5] 63[293,5] 64[298,5] 65[303,5] 66[308,5] 67[313,5] 68[318,5] 69[323,5] 70[328,5] 71[333,5] 72[338,5] 73[343,5] 74[348,5] 75[353,5] 76[358,5] 77[363,5] 78[368,5] 79[373,5] 80[378,5] 81[383,5] 82[388,5] 83[393,5] 84[398,5] 85[403,5] 86[408,5] 87[413,5] 88[418,5] 89[423,5] 90[428,5] 91[433,5] 92[438,5] 93[443,5] 94[448,5] 95[453,5] 96[458,5] 97[463,5] 98[468,5] 99[473,5] 100[478,5] 101[483,5] 102[488,5] 103[493,5] 104[498,5] 105[503,5] 106[508,5] 107[513,5] 108[518,5] 109[523,5] 110[528,5] 111[533,5] 112[538,5] 113[543,5] 114[548,5] 115[553,5] 116[558,5] 117[563,5] 118[568,5] 119[573,5] 120[578,5] 121[583,5] 122[588,5] 123[593,5] 124[598,5] 125[603,5] 126[608,5] 127[613,5] 138[618,2] 142[620,1] 143[621,1] 144[622,2] 145[624,2] 146[626,1] 147[627,2] 148[629,1] 149[630,1] 150[631,1] 151[632,1] 152[633,1] 153[634,1] 156[635,1] 166[636,1] 168[637,1] 169[638,1] 170[639,1] 171[640,1] 173[641,1] 174[642,1] 176[643,1] 177[644,1] 181[645,1] 184[646,1] 
(note 6 0 12 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 146 147 148 149 150 151 152 153 156 181 184
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 146 147 148 149 150 151 152 153 156 181 184
;; live  kill	 14 [lr]
;; rd  in  	(10)
10, 21, 31, 39, 40, 46, 47, 53, 111, 112
;; rd  gen 	(12)
9, 626, 628, 629, 630, 631, 632, 633, 634, 635, 645, 646
;; rd  kill	(29)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 48, 49, 50, 51, 52, 53, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 645, 646

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 12 6 7 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 7 12 8 2 arch/arm/kernel/traps.c:88 (set (reg/v/f:SI 148 [ lvl ])
        (reg:SI 0 r0 [ lvl ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ lvl ])
        (nil)))

(insn 8 7 9 2 arch/arm/kernel/traps.c:88 (set (reg/v/f:SI 149 [ str ])
        (reg:SI 1 r1 [ str ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ str ])
        (nil)))

(insn 9 8 10 2 arch/arm/kernel/traps.c:88 (set (reg/v:SI 150 [ bottom ])
        (reg:SI 2 r2 [ bottom ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ bottom ])
        (nil)))

(insn 10 9 11 2 arch/arm/kernel/traps.c:88 (set (reg/v:SI 151 [ top ])
        (reg:SI 3 r3 [ top ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [ top ])
        (nil)))

(note 11 10 15 2 NOTE_INSN_FUNCTION_BEG)

(insn 15 11 16 2 arch/arm/kernel/traps.c:98 (set (reg:SI 153)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 16 15 17 2 arch/arm/kernel/traps.c:98 (set (reg:SI 152)
        (and:SI (reg:SI 153)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 153)
        (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
                (const_int -8192 [0xffffffffffffe000]))
            (nil))))

(insn 17 16 21 2 arch/arm/kernel/traps.c:98 (set (reg/v:SI 146 [ fs ])
        (mem/s/j:SI (plus:SI (reg:SI 152)
                (const_int 8 [0x8])) [0 <variable>.addr_limit+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 21 17 22 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/uaccess.h:65 (set (reg:SI 156)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 22 21 24 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/uaccess.h:65 (set (mem/s/j:SI (plus:SI (reg:SI 152)
                (const_int 8 [0x8])) [0 <variable>.addr_limit+0 S4 A64])
        (reg:SI 156)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 152)
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn 24 22 25 2 arch/arm/kernel/traps.c:101 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg/v:SI 151 [ top ])) 167 {*arm_movsi_insn} (nil))

(insn 25 24 26 2 arch/arm/kernel/traps.c:101 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC9") [flags 0x82] <string_cst 0x112b0e00>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC9") [flags 0x82] <string_cst 0x112b0e00>)
        (nil)))

(insn 26 25 27 2 arch/arm/kernel/traps.c:101 (set (reg:SI 1 r1)
        (reg/v/f:SI 148 [ lvl ])) 167 {*arm_movsi_insn} (nil))

(insn 27 26 28 2 arch/arm/kernel/traps.c:101 (set (reg:SI 2 r2)
        (reg/v/f:SI 149 [ str ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 149 [ str ])
        (nil)))

(insn 28 27 29 2 arch/arm/kernel/traps.c:101 (set (reg:SI 3 r3)
        (reg/v:SI 150 [ bottom ])) 167 {*arm_movsi_insn} (nil))

(call_insn 29 28 30 2 arch/arm/kernel/traps.c:101 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10aa9180 printk>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_UNUSED (reg:SI 0 r0)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 30 29 35 2 arch/arm/kernel/traps.c:103 (set (reg/v:SI 147 [ first ])
        (and:SI (reg/v:SI 150 [ bottom ])
            (const_int -32 [0xffffffffffffffe0]))) 67 {*arm_andsi3_insn} (nil))

(insn 35 30 40 2 arch/arm/kernel/traps.c:107 discrim 3 (set (reg/f:SI 181)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -84 [0xffffffffffffffac]))) 4 {*arm_addsi3} (nil))

(insn 40 35 132 2 arch/arm/kernel/traps.c:108 (set (reg:SI 184)
        (reg:SI 156)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 156)
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(jump_insn 132 40 133 2 arch/arm/kernel/traps.c:103 (set (pc)
        (label_ref 100)) -1 (nil))
;; End of basic block 2 -> ( 11)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 147 148 150 151 181 184
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 150 151 181 184
;; rd  out 	(20)
9, 21, 31, 39, 40, 46, 47, 111, 112, 626, 628, 629, 630, 631, 632, 633, 634, 635, 645, 646


;; Succ edge  11 [100.0%] 

(barrier 133 132 102)

;; Start of basic block ( 11) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u27(11){ }u28(13){ }u29(25){ }u30(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 150 151 181 184
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 181 184
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 138 144 145
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 150 151 181 184
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 138 144 145
;; live  kill	 14 [lr]
;; rd  in  	(38)
3, 9, 21, 31, 39, 40, 46, 47, 100, 111, 112, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 645, 646
;; rd  gen 	(4)
8, 618, 623, 624
;; rd  kill	(23)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 48, 49, 50, 51, 52, 53, 618, 619, 622, 623, 624, 625

;; Pred edge  11 [0.0%] 
(code_label 102 133 33 3 58 "" [1 uses])

(note 33 102 36 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 36 33 122 3 arch/arm/kernel/traps.c:107 discrim 3 (set (reg:SI 0 r0)
        (reg/f:SI 181)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -84 [0xffffffffffffffac]))
        (nil)))

(insn 122 36 123 3 arch/arm/kernel/traps.c:107 discrim 3 (set (reg:SI 1 r1)
        (const_int 32 [0x20])) 167 {*arm_movsi_insn} (nil))

(insn 123 122 39 3 arch/arm/kernel/traps.c:107 discrim 3 (set (reg:SI 2 r2)
        (const_int 81 [0x51])) 167 {*arm_movsi_insn} (nil))

(call_insn 39 123 42 3 arch/arm/kernel/traps.c:107 discrim 3 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memset") [flags 0x41] <function_decl 0x51154f80 memset>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 42 39 43 3 arch/arm/kernel/traps.c:108 (set (mem/s/j:QI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 str+80 S1 A32])
        (subreg:QI (reg:SI 184) 0)) 178 {*arm_movqi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 43 42 44 3 arch/arm/kernel/traps.c:108 (set (reg:SI 138 [ ivtmp.628 ])
        (reg/f:SI 181)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -84 [0xffffffffffffffac]))
        (nil)))

(insn 44 43 125 3 arch/arm/kernel/traps.c:108 (set (reg/v:SI 144 [ p ])
        (reg/v:SI 147 [ first ])) 167 {*arm_movsi_insn} (nil))

(insn 125 44 134 3 arch/arm/kernel/traps.c:110 (set (reg/v:SI 145 [ i ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(jump_insn 134 125 135 3 arch/arm/kernel/traps.c:110 (set (pc)
        (label_ref 75)) -1 (nil))
;; End of basic block 3 -> ( 9)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 144 145 146 147 148 150 151 181 184
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 144 145 146 147 148 150 151 181 184
;; rd  out 	(34)
8, 21, 31, 39, 40, 46, 47, 100, 111, 112, 618, 620, 621, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 645, 646


;; Succ edge  9 [100.0%] 

(barrier 135 134 77)

;; Start of basic block ( 9) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u42(11){ }u43(13){ }u44(25){ }u45(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 144 145 146 147 148 150 151 181 184
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 150
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 144 145 146 147 148 150 151 181 184
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(39)
4, 6, 8, 21, 31, 39, 40, 46, 47, 102, 111, 112, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 645, 646
;; rd  gen 	(1)
108
;; rd  kill	(12)
99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110

;; Pred edge  9 [91.0%] 
(code_label 77 135 48 4 57 "" [1 uses])

(note 48 77 49 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 49 48 50 4 arch/arm/kernel/traps.c:111 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 144 [ p ])
            (reg/v:SI 150 [ bottom ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 50 49 51 4 arch/arm/kernel/traps.c:111 (set (pc)
        (if_then_else (ltu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 70)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 4 -> ( 5 8)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 144 145 146 147 148 150 151 181 184
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 144 145 146 147 148 150 151 181 184
;; rd  out 	(39)
4, 6, 8, 21, 31, 39, 40, 46, 47, 108, 111, 112, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 645, 646


;; Succ edge  5 [50.0%]  (fallthru)
;; Succ edge  8 [50.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u49(11){ }u50(13){ }u51(25){ }u52(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 144 145 146 147 148 150 151 181 184
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 184
;; lr  def 	 24 [cc] 142 143
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 144 145 146 147 148 150 151 181 184
;; live  gen 	 24 [cc] 142 143
;; live  kill	 24 [cc]
;; rd  in  	(39)
4, 6, 8, 21, 31, 39, 40, 46, 47, 108, 111, 112, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 645, 646
;; rd  gen 	(3)
107, 620, 621
;; rd  kill	(14)
99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 620, 621

;; Pred edge  4 [50.0%]  (fallthru)
(note 51 50 53 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 53 51 54 5 arch/arm/kernel/traps.c:113 discrim 4 (parallel [
            (set (reg/v:SI 143 [ __gu_err ])
                (asm_operands/v:SI ("1:	ldr	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg/v:SI 144 [ p ])
                        (const_int -14 [0xfffffffffffffff2])
                        (reg:SI 184)
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 7011996))
            (set (reg/v:SI 142 [ __gu_val ])
                (asm_operands/v:SI ("1:	ldr	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=&r") 1 [
                        (reg/v:SI 144 [ p ])
                        (const_int -14 [0xfffffffffffffff2])
                        (reg:SI 184)
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 7011996))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(insn 54 53 55 5 arch/arm/kernel/traps.c:113 discrim 5 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 143 [ __gu_err ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 143 [ __gu_err ])
        (nil)))

(jump_insn 55 54 56 5 arch/arm/kernel/traps.c:113 discrim 5 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 64)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 5 -> ( 6 7)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 142 144 145 146 147 148 150 151 181 184
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 142 144 145 146 147 148 150 151 181 184
;; rd  out 	(39)
4, 6, 8, 21, 31, 39, 40, 46, 47, 107, 111, 112, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 645, 646


;; Succ edge  6 [50.0%]  (fallthru)
;; Succ edge  7 [50.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u57(11){ }u58(13){ }u59(25){ }u60(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 142 144 145 146 147 148 150 151 181 184
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 142
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 142 144 145 146 147 148 150 151 181 184
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	 14 [lr]
;; rd  in  	(39)
4, 6, 8, 21, 31, 39, 40, 46, 47, 107, 111, 112, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 645, 646
;; rd  gen 	(1)
6
;; rd  kill	(17)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 48, 49, 50, 51, 52, 53

;; Pred edge  5 [50.0%]  (fallthru)
(note 56 55 58 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 58 56 120 6 arch/arm/kernel/traps.c:114 (set (reg:SI 0 r0)
        (reg:SI 138 [ ivtmp.628 ])) 167 {*arm_movsi_insn} (nil))

(insn 120 58 60 6 arch/arm/kernel/traps.c:114 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC10") [flags 0x82] <string_cst 0x112b1700>)) 167 {*arm_movsi_insn} (nil))

(insn 60 120 61 6 arch/arm/kernel/traps.c:114 (set (reg:SI 2 r2)
        (reg/v:SI 142 [ __gu_val ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 142 [ __gu_val ])
        (nil)))

(call_insn 61 60 136 6 arch/arm/kernel/traps.c:114 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sprintf") [flags 0x41] <function_decl 0x5115e780 sprintf>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(jump_insn 136 61 137 6 (set (pc)
        (label_ref 70)) -1 (nil))
;; End of basic block 6 -> ( 8)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 144 145 146 147 148 150 151 181 184
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 144 145 146 147 148 150 151 181 184
;; rd  out 	(37)
6, 21, 31, 39, 40, 46, 47, 107, 111, 112, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 645, 646


;; Succ edge  8 [100.0%] 

(barrier 137 136 64)

;; Start of basic block ( 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u67(11){ }u68(13){ }u69(25){ }u70(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 144 145 146 147 148 150 151 181 184
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 144 145 146 147 148 150 151 181 184
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]
;; rd  in  	(39)
4, 6, 8, 21, 31, 39, 40, 46, 47, 107, 111, 112, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 645, 646
;; rd  gen 	(1)
4
;; rd  kill	(17)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 48, 49, 50, 51, 52, 53

;; Pred edge  5 [50.0%] 
(code_label 64 137 65 7 56 "" [1 uses])

(note 65 64 67 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 67 65 119 7 arch/arm/kernel/traps.c:116 (set (reg:SI 0 r0)
        (reg:SI 138 [ ivtmp.628 ])) 167 {*arm_movsi_insn} (nil))

(insn 119 67 69 7 arch/arm/kernel/traps.c:116 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC11") [flags 0x82] <string_cst 0x112b4d50>)) 167 {*arm_movsi_insn} (nil))

(call_insn 69 119 70 7 arch/arm/kernel/traps.c:116 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcpy") [flags 0x41] <function_decl 0x51157700 __builtin_strcpy>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 7 -> ( 8)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 144 145 146 147 148 150 151 181 184
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 144 145 146 147 148 150 151 181 184
;; rd  out 	(37)
4, 21, 31, 39, 40, 46, 47, 107, 111, 112, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 645, 646


;; Succ edge  8 [100.0%]  (fallthru)

;; Start of basic block ( 4 7 6) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u75(11){ }u76(13){ }u77(25){ }u78(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 144 145 146 147 148 150 151 181 184
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 144 145
;; lr  def 	 138 144 145
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 144 145 146 147 148 150 151 181 184
;; live  gen 	 138 144 145
;; live  kill	
;; rd  in  	(40)
4, 6, 8, 21, 31, 39, 40, 46, 47, 107, 108, 111, 112, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 645, 646
;; rd  gen 	(3)
619, 622, 625
;; rd  kill	(6)
618, 619, 622, 623, 624, 625

;; Pred edge  4 [50.0%] 
;; Pred edge  7 [100.0%]  (fallthru)
;; Pred edge  6 [100.0%] 
(code_label 70 69 71 8 55 "" [2 uses])

(note 71 70 72 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 72 71 73 8 arch/arm/kernel/traps.c:110 (set (reg/v:SI 145 [ i ])
        (plus:SI (reg/v:SI 145 [ i ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 73 72 74 8 arch/arm/kernel/traps.c:110 (set (reg/v:SI 144 [ p ])
        (plus:SI (reg/v:SI 144 [ p ])
            (const_int 4 [0x4]))) 4 {*arm_addsi3} (nil))

(insn 74 73 75 8 arch/arm/kernel/traps.c:110 (set (reg:SI 138 [ ivtmp.628 ])
        (plus:SI (reg:SI 138 [ ivtmp.628 ])
            (const_int 9 [0x9]))) 4 {*arm_addsi3} (nil))
;; End of basic block 8 -> ( 9)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 144 145 146 147 148 150 151 181 184
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 144 145 146 147 148 150 151 181 184
;; rd  out 	(37)
4, 6, 8, 21, 31, 39, 40, 46, 47, 107, 108, 111, 112, 619, 620, 621, 622, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 645, 646


;; Succ edge  9 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 8 3) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u82(11){ }u83(13){ }u84(25){ }u85(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 144 145 146 147 148 150 151 181 184
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 151
;; lr  def 	 24 [cc] 166 168 169 170 171
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 144 145 146 147 148 150 151 181 184
;; live  gen 	 24 [cc] 166 168 169 170 171
;; live  kill	
;; rd  in  	(41)
4, 6, 8, 21, 31, 39, 40, 46, 47, 100, 107, 108, 111, 112, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 645, 646
;; rd  gen 	(6)
102, 636, 637, 638, 639, 640
;; rd  kill	(17)
99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 636, 637, 638, 639, 640

;; Pred edge  8 [100.0%]  (fallthru,dfs_back)
;; Pred edge  3 [100.0%] 
(code_label 75 74 76 9 54 "" [1 uses])

(note 76 75 78 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 78 76 79 9 arch/arm/kernel/traps.c:110 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 144 [ p ])
            (reg/v:SI 151 [ top ]))) 219 {*arm_cmpsi_insn} (nil))

(insn 79 78 81 9 arch/arm/kernel/traps.c:110 discrim 1 (set (reg:SI 166)
        (ltu:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 81 79 82 9 arch/arm/kernel/traps.c:110 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 145 [ i ])
            (const_int 7 [0x7]))) 219 {*arm_cmpsi_insn} (nil))

(insn 82 81 84 9 arch/arm/kernel/traps.c:110 discrim 1 (set (reg:SI 168)
        (le:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 84 82 85 9 arch/arm/kernel/traps.c:110 discrim 1 (set (reg:SI 169)
        (and:SI (reg:SI 166)
            (reg:SI 168))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 168)
        (expr_list:REG_DEAD (reg:SI 166)
            (nil))))

(insn 85 84 86 9 arch/arm/kernel/traps.c:110 discrim 1 (set (reg:QI 170)
        (subreg:QI (reg:SI 169) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 169)
        (nil)))

(insn 86 85 87 9 arch/arm/kernel/traps.c:110 discrim 1 (set (reg:SI 171)
        (zero_extend:SI (reg:QI 170))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 170)
        (nil)))

(insn 87 86 88 9 arch/arm/kernel/traps.c:110 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 171)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 171)
        (nil)))

(jump_insn 88 87 89 9 arch/arm/kernel/traps.c:110 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 77)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil))))
;; End of basic block 9 -> ( 4 10)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 144 145 146 147 148 150 151 181 184
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 144 145 146 147 148 150 151 181 184
;; rd  out 	(39)
4, 6, 8, 21, 31, 39, 40, 46, 47, 102, 111, 112, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 645, 646


;; Succ edge  4 [91.0%] 
;; Succ edge  10 [9.0%]  (fallthru,loop_exit)

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u97(11){ }u98(13){ }u99(25){ }u100(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 150 151 181 184
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 181
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 147 173 174
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 150 151 181 184
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 147 173 174
;; live  kill	 14 [lr]
;; rd  in  	(39)
4, 6, 8, 21, 31, 39, 40, 46, 47, 102, 111, 112, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 645, 646
;; rd  gen 	(4)
3, 627, 641, 642
;; rd  kill	(21)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 48, 49, 50, 51, 52, 53, 627, 628, 641, 642

;; Pred edge  9 [9.0%]  (fallthru,loop_exit)
(note 89 88 91 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 91 89 92 10 arch/arm/kernel/traps.c:119 (set (reg:SI 174)
        (ashift:SI (reg/v:SI 147 [ first ])
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (nil))

(insn 92 91 131 10 arch/arm/kernel/traps.c:119 (set (reg:SI 173)
        (lshiftrt:SI (reg:SI 174)
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 174)
        (expr_list:REG_EQUAL (and:SI (reg/v:SI 147 [ first ])
                (const_int 65535 [0xffff]))
            (nil))))

(insn 131 92 95 10 arch/arm/kernel/traps.c:119 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC12") [flags 0x82] <string_cst 0x112b4f00>)) 167 {*arm_movsi_insn} (nil))

(insn 95 131 96 10 arch/arm/kernel/traps.c:119 (set (reg:SI 1 r1)
        (reg/v/f:SI 148 [ lvl ])) 167 {*arm_movsi_insn} (nil))

(insn 96 95 97 10 arch/arm/kernel/traps.c:119 (set (reg:SI 2 r2)
        (reg:SI 173)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 173)
        (nil)))

(insn 97 96 98 10 arch/arm/kernel/traps.c:119 (set (reg:SI 3 r3)
        (reg/f:SI 181)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -84 [0xffffffffffffffac]))
        (nil)))

(call_insn 98 97 99 10 arch/arm/kernel/traps.c:119 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10aa9180 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_UNUSED (reg:SI 0 r0)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 99 98 100 10 arch/arm/kernel/traps.c:103 (set (reg/v:SI 147 [ first ])
        (plus:SI (reg/v:SI 147 [ first ])
            (const_int 32 [0x20]))) 4 {*arm_addsi3} (nil))
;; End of basic block 10 -> ( 11)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 147 148 150 151 181 184
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 150 151 181 184
;; rd  out 	(36)
3, 21, 31, 39, 40, 46, 47, 102, 111, 112, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 645, 646


;; Succ edge  11 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 10 2) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u114(11){ }u115(13){ }u116(25){ }u117(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 147 148 150 151 181 184
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 151
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 150 151 181 184
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(38)
3, 9, 21, 31, 39, 40, 46, 47, 102, 111, 112, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 645, 646
;; rd  gen 	(1)
100
;; rd  kill	(12)
99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110

;; Pred edge  10 [100.0%]  (fallthru,dfs_back)
;; Pred edge  2 [100.0%] 
(code_label 100 99 101 11 53 "" [1 uses])

(note 101 100 103 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 103 101 104 11 arch/arm/kernel/traps.c:103 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 147 [ first ])
            (reg/v:SI 151 [ top ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 104 103 105 11 arch/arm/kernel/traps.c:103 discrim 1 (set (pc)
        (if_then_else (ltu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 102)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 4 [0x4])
            (nil))))
;; End of basic block 11 -> ( 3 12)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 147 148 150 151 181 184
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 150 151 181 184
;; rd  out 	(38)
3, 9, 21, 31, 39, 40, 46, 47, 100, 111, 112, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 645, 646


;; Succ edge  3 [0.0%] 
;; Succ edge  12 [100.0%]  (fallthru,loop_exit)

;; Start of basic block ( 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u121(11){ }u122(13){ }u123(25){ }u124(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146
;; lr  def 	 176 177
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146
;; live  gen 	 176 177
;; live  kill	
;; rd  in  	(38)
3, 9, 21, 31, 39, 40, 46, 47, 100, 111, 112, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 645, 646
;; rd  gen 	(2)
643, 644
;; rd  kill	(2)
643, 644

;; Pred edge  11 [100.0%]  (fallthru,loop_exit)
(note 105 104 107 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 107 105 108 12 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/uaccess.h:65 (set (reg:SI 177)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 108 107 109 12 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/uaccess.h:65 (set (reg:SI 176)
        (and:SI (reg:SI 177)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 177)
        (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
                (const_int -8192 [0xffffffffffffe000]))
            (nil))))

(insn 109 108 0 12 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/uaccess.h:65 (set (mem/s/j:SI (plus:SI (reg:SI 176)
                (const_int 8 [0x8])) [0 <variable>.addr_limit+0 S4 A64])
        (reg/v:SI 146 [ fs ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 176)
        (expr_list:REG_DEAD (reg/v:SI 146 [ fs ])
            (nil))))
;; End of basic block 12 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(40)
3, 9, 21, 31, 39, 40, 46, 47, 100, 111, 112, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function dump_backtrace_entry (dump_backtrace_entry)[0:1056]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 7 count 8 (  1.3)
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 7 count 10 (  1.7)
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 7 count 10 (  1.7)


dump_backtrace_entry

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={5d,3u} r1={5d,3u} r2={5d,3u} r3={5d,2u} r11={1d,5u} r12={3d} r13={1d,8u} r14={2d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={4d,2u} r25={1d,5u} r26={1d,4u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r133={1d,4u,2d} r134={1d,2u} r135={1d,2u} r137={1d,1u} r138={1d,1u} r141={1d,1u} r142={1d,1u} 
;;    total ref usage 310{260d,48u,2e} in 22{20 regular + 2 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252
0[0,5] 1[5,5] 2[10,5] 3[15,5] 11[20,1] 12[21,3] 13[24,1] 14[25,2] 15[27,2] 16[29,2] 17[31,2] 18[33,2] 19[35,2] 20[37,2] 21[39,2] 22[41,2] 23[43,2] 24[45,4] 25[49,1] 26[50,1] 27[51,2] 28[53,2] 29[55,2] 30[57,2] 31[59,2] 32[61,2] 33[63,2] 34[65,2] 35[67,2] 36[69,2] 37[71,2] 38[73,2] 39[75,2] 40[77,2] 41[79,2] 42[81,2] 43[83,2] 44[85,2] 45[87,2] 46[89,2] 47[91,2] 48[93,2] 49[95,2] 50[97,2] 51[99,2] 52[101,2] 53[103,2] 54[105,2] 55[107,2] 56[109,2] 57[111,2] 58[113,2] 59[115,2] 60[117,2] 61[119,2] 62[121,2] 63[123,2] 64[125,2] 65[127,2] 66[129,2] 67[131,2] 68[133,2] 69[135,2] 70[137,2] 71[139,2] 72[141,2] 73[143,2] 74[145,2] 75[147,2] 76[149,2] 77[151,2] 78[153,2] 79[155,2] 80[157,2] 81[159,2] 82[161,2] 83[163,2] 84[165,2] 85[167,2] 86[169,2] 87[171,2] 88[173,2] 89[175,2] 90[177,2] 91[179,2] 92[181,2] 93[183,2] 94[185,2] 95[187,2] 96[189,2] 97[191,2] 98[193,2] 99[195,2] 100[197,2] 101[199,2] 102[201,2] 103[203,2] 104[205,2] 105[207,2] 106[209,2] 107[211,2] 108[213,2] 109[215,2] 110[217,2] 111[219,2] 112[221,2] 113[223,2] 114[225,2] 115[227,2] 116[229,2] 117[231,2] 118[233,2] 119[235,2] 120[237,2] 121[239,2] 122[241,2] 123[243,2] 124[245,2] 125[247,2] 126[249,2] 127[251,2] 133[253,1] 134[254,1] 135[255,1] 137[256,1] 138[257,1] 141[258,1] 142[259,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d4(0){ }d9(1){ }d14(2){ }d19(3){ }d20(11){ }d23(12){ }d24(13){ }d26(14){ }d49(25){ }d50(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
4, 9, 14, 19, 20, 23, 24, 26, 49, 50
;; rd  kill	(29)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 49, 50
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(10)
4, 9, 14, 19, 20, 23, 24, 26, 49, 50

( 0 )->[2]->( 3 5 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d20(bb 0 insn -1) }u1(13){ d24(bb 0 insn -1) }u2(25){ d49(bb 0 insn -1) }u3(26){ d50(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134 135 137
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc] 133 134 135 137
;; live  kill	 14 [lr]
;; rd  in  	(10)
4, 9, 14, 19, 20, 23, 24, 26, 49, 50
;; rd  gen 	(6)
3, 47, 253, 254, 255, 256
;; rd  kill	(15)
0, 1, 2, 3, 4, 25, 26, 45, 46, 47, 48, 253, 254, 255, 256
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 135
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135
;; rd  out 	(14)
3, 9, 14, 19, 20, 23, 24, 47, 49, 50, 253, 254, 255, 256
;;  UD chains for artificial uses
;;   reg 11 { d20(bb 0 insn -1) }
;;   reg 13 { d24(bb 0 insn -1) }
;;   reg 25 { d49(bb 0 insn -1) }
;;   reg 26 { d50(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d4(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 3
;;      reg 1 { d9(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 4
;;      reg 2 { d14(bb 0 insn -1) }
;;   UD chains for insn luid 3 uid 9
;;      reg 13 { d24(bb 0 insn -1) }
;;      reg 134 { d254(bb 2 insn 3) }
;;   UD chains for insn luid 5 uid 11
;;      reg 133 { d253(bb 2 insn 2) }
;;   UD chains for insn luid 6 uid 12
;;      reg 133 { d253(bb 2 insn 2) }
;;   UD chains for insn luid 7 uid 13
;;      reg 134 { d254(bb 2 insn 3) }
;;   UD chains for insn luid 8 uid 14
;;      reg 13 { d24(bb 0 insn -1) }
;;      reg 0 { d1(bb 2 insn 10) }
;;      reg 1 { d8(bb 2 insn 11) }
;;      reg 2 { d13(bb 2 insn 12) }
;;      reg 3 { d18(bb 2 insn 13) }
;;   UD chains for insn luid 10 uid 16
;;      reg 133 { d253(bb 2 insn 2) }
;;      reg 137 { d256(bb 2 insn 15) }
;;   eq_note reg 133 { }
;;   UD chains for insn luid 11 uid 17
;;      reg 24 { d47(bb 2 insn 16) }

( 2 )->[3]->( 4 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u21(11){ d20(bb 0 insn -1) }u22(13){ d24(bb 0 insn -1) }u23(25){ d49(bb 0 insn -1) }u24(26){ d50(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 135
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc] 138
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135
;; live  gen 	 24 [cc] 138
;; live  kill	
;; rd  in  	(14)
3, 9, 14, 19, 20, 23, 24, 47, 49, 50, 253, 254, 255, 256
;; rd  gen 	(2)
46, 257
;; rd  kill	(5)
45, 46, 47, 48, 257
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; rd  out 	(15)
3, 9, 14, 19, 20, 23, 24, 46, 49, 50, 253, 254, 255, 256, 257
;;  UD chains for artificial uses
;;   reg 11 { d20(bb 0 insn -1) }
;;   reg 13 { d24(bb 0 insn -1) }
;;   reg 25 { d49(bb 0 insn -1) }
;;   reg 26 { d50(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 20
;;      reg 133 { d253(bb 2 insn 2) }
;;      reg 138 { d257(bb 3 insn 19) }
;;   eq_note reg 133 { }
;;   UD chains for insn luid 2 uid 21
;;      reg 24 { d46(bb 3 insn 20) }

( 3 )->[4]->( 1 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u29(11){ d20(bb 0 insn -1) }u30(13){ d24(bb 0 insn -1) }u31(25){ d49(bb 0 insn -1) }u32(26){ d50(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 141 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 141 142
;; live  kill	
;; rd  in  	(15)
3, 9, 14, 19, 20, 23, 24, 46, 49, 50, 253, 254, 255, 256, 257
;; rd  gen 	(2)
258, 259
;; rd  kill	(2)
258, 259
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(17)
3, 9, 14, 19, 20, 23, 24, 46, 49, 50, 253, 254, 255, 256, 257, 258, 259
;;  UD chains for artificial uses
;;   reg 11 { d20(bb 0 insn -1) }
;;   reg 13 { d24(bb 0 insn -1) }
;;   reg 25 { d49(bb 0 insn -1) }
;;   reg 26 { d50(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 30
;;      reg 135 { d255(bb 2 insn 4) }
;;   UD chains for insn luid 1 uid 31
;;      reg 135 { d255(bb 2 insn 4) }
;;   UD chains for insn luid 4 uid 34
;;      reg 141 { d258(bb 4 insn 30) }
;;   UD chains for insn luid 5 uid 35
;;      reg 142 { d259(bb 4 insn 31) }
;;   UD chains for insn luid 6 uid 36
;;      reg 13 { d24(bb 0 insn -1) }
;;      reg 0 { d0(bb 4 insn 32) }
;;      reg 1 { d5(bb 4 insn 33) }
;;      reg 2 { d11(bb 4 insn 34) }
;;      reg 3 { d16(bb 4 insn 35) }

( 3 2 )->[5]->( 1 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u42(11){ d20(bb 0 insn -1) }u43(13){ d24(bb 0 insn -1) }u44(25){ d49(bb 0 insn -1) }u45(26){ d50(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(16)
3, 9, 14, 19, 20, 23, 24, 46, 47, 49, 50, 253, 254, 255, 256, 257
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(16)
3, 9, 14, 19, 20, 23, 24, 46, 47, 49, 50, 253, 254, 255, 256, 257
;;  UD chains for artificial uses
;;   reg 11 { d20(bb 0 insn -1) }
;;   reg 13 { d24(bb 0 insn -1) }
;;   reg 25 { d49(bb 0 insn -1) }
;;   reg 26 { d50(bb 0 insn -1) }

( 4 5 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u46(11){ d20(bb 0 insn -1) }u47(13){ d24(bb 0 insn -1) }u48(14){ }u49(25){ d49(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(18)
3, 9, 14, 19, 20, 23, 24, 46, 47, 49, 50, 253, 254, 255, 256, 257, 258, 259
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(18)
3, 9, 14, 19, 20, 23, 24, 46, 47, 49, 50, 253, 254, 255, 256, 257, 258, 259
;;  UD chains for artificial uses
;;   reg 11 { d20(bb 0 insn -1) }
;;   reg 13 { d24(bb 0 insn -1) }
;;   reg 14 { }
;;   reg 25 { d49(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 17 to worklist
  Adding insn 14 to worklist
  Adding insn 9 to worklist
  Adding insn 21 to worklist
  Adding insn 36 to worklist
Finished finding needed instructions:
Processing use of (reg 13 sp) in insn 36:
Processing use of (reg 0 r0) in insn 36:
  Adding insn 32 to worklist
Processing use of (reg 1 r1) in insn 36:
  Adding insn 33 to worklist
Processing use of (reg 2 r2) in insn 36:
  Adding insn 34 to worklist
Processing use of (reg 3 r3) in insn 36:
  Adding insn 35 to worklist
Processing use of (reg 142) in insn 35:
  Adding insn 31 to worklist
Processing use of (reg 135 [ frame ]) in insn 31:
  Adding insn 4 to worklist
Processing use of (reg 2 r2) in insn 4:
Processing use of (reg 141) in insn 34:
  Adding insn 30 to worklist
Processing use of (reg 135 [ frame ]) in insn 30:
Processing use of (reg 24 cc) in insn 21:
  Adding insn 20 to worklist
Processing use of (reg 133 [ where ]) in insn 20:
  Adding insn 2 to worklist
Processing use of (reg 138) in insn 20:
  Adding insn 19 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 13 sp) in insn 9:
Processing use of (reg 134 [ from ]) in insn 9:
  Adding insn 3 to worklist
Processing use of (reg 1 r1) in insn 3:
Processing use of (reg 13 sp) in insn 14:
Processing use of (reg 0 r0) in insn 14:
  Adding insn 10 to worklist
Processing use of (reg 1 r1) in insn 14:
  Adding insn 11 to worklist
Processing use of (reg 2 r2) in insn 14:
  Adding insn 12 to worklist
Processing use of (reg 3 r3) in insn 14:
  Adding insn 13 to worklist
Processing use of (reg 134 [ from ]) in insn 13:
Processing use of (reg 133 [ where ]) in insn 12:
Processing use of (reg 133 [ where ]) in insn 11:
Processing use of (reg 24 cc) in insn 17:
  Adding insn 16 to worklist
Processing use of (reg 133 [ where ]) in insn 16:
Processing use of (reg 137) in insn 16:
  Adding insn 15 to worklist


dump_backtrace_entry

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={5d,3u} r1={5d,3u} r2={5d,3u} r3={5d,2u} r11={1d,5u} r12={3d} r13={1d,8u} r14={2d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={4d,2u} r25={1d,5u} r26={1d,4u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r133={1d,4u,2d} r134={1d,2u} r135={1d,2u} r137={1d,1u} r138={1d,1u} r141={1d,1u} r142={1d,1u} 
;;    total ref usage 310{260d,48u,2e} in 22{20 regular + 2 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252
0[0,5] 1[5,5] 2[10,5] 3[15,5] 11[20,1] 12[21,3] 13[24,1] 14[25,2] 15[27,2] 16[29,2] 17[31,2] 18[33,2] 19[35,2] 20[37,2] 21[39,2] 22[41,2] 23[43,2] 24[45,4] 25[49,1] 26[50,1] 27[51,2] 28[53,2] 29[55,2] 30[57,2] 31[59,2] 32[61,2] 33[63,2] 34[65,2] 35[67,2] 36[69,2] 37[71,2] 38[73,2] 39[75,2] 40[77,2] 41[79,2] 42[81,2] 43[83,2] 44[85,2] 45[87,2] 46[89,2] 47[91,2] 48[93,2] 49[95,2] 50[97,2] 51[99,2] 52[101,2] 53[103,2] 54[105,2] 55[107,2] 56[109,2] 57[111,2] 58[113,2] 59[115,2] 60[117,2] 61[119,2] 62[121,2] 63[123,2] 64[125,2] 65[127,2] 66[129,2] 67[131,2] 68[133,2] 69[135,2] 70[137,2] 71[139,2] 72[141,2] 73[143,2] 74[145,2] 75[147,2] 76[149,2] 77[151,2] 78[153,2] 79[155,2] 80[157,2] 81[159,2] 82[161,2] 83[163,2] 84[165,2] 85[167,2] 86[169,2] 87[171,2] 88[173,2] 89[175,2] 90[177,2] 91[179,2] 92[181,2] 93[183,2] 94[185,2] 95[187,2] 96[189,2] 97[191,2] 98[193,2] 99[195,2] 100[197,2] 101[199,2] 102[201,2] 103[203,2] 104[205,2] 105[207,2] 106[209,2] 107[211,2] 108[213,2] 109[215,2] 110[217,2] 111[219,2] 112[221,2] 113[223,2] 114[225,2] 115[227,2] 116[229,2] 117[231,2] 118[233,2] 119[235,2] 120[237,2] 121[239,2] 122[241,2] 123[243,2] 124[245,2] 125[247,2] 126[249,2] 127[251,2] 133[253,1] 134[254,1] 135[255,1] 137[256,1] 138[257,1] 141[258,1] 142[259,1] 
(note 1 0 6 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134 135 137
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc] 133 134 135 137
;; live  kill	 14 [lr]
;; rd  in  	(10)
4, 9, 14, 19, 20, 23, 24, 26, 49, 50
;; rd  gen 	(6)
3, 47, 253, 254, 255, 256
;; rd  kill	(15)
0, 1, 2, 3, 4, 25, 26, 45, 46, 47, 48, 253, 254, 255, 256

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 6 3 2 arch/arm/kernel/traps.c:56 (set (reg/v:SI 133 [ where ])
        (reg:SI 0 r0 [ where ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ where ])
        (nil)))

(insn 3 2 4 2 arch/arm/kernel/traps.c:56 (set (reg/v:SI 134 [ from ])
        (reg:SI 1 r1 [ from ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ from ])
        (nil)))

(insn 4 3 5 2 arch/arm/kernel/traps.c:56 (set (reg/v:SI 135 [ frame ])
        (reg:SI 2 r2 [ frame ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ frame ])
        (nil)))

(note 5 4 9 2 NOTE_INSN_FUNCTION_BEG)

(insn 9 5 10 2 arch/arm/kernel/traps.c:58 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg/v:SI 134 [ from ])) 167 {*arm_movsi_insn} (nil))

(insn 10 9 11 2 arch/arm/kernel/traps.c:58 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC13") [flags 0x82] <string_cst 0x112bee40>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC13") [flags 0x82] <string_cst 0x112bee40>)
        (nil)))

(insn 11 10 12 2 arch/arm/kernel/traps.c:58 (set (reg:SI 1 r1)
        (reg/v:SI 133 [ where ])) 167 {*arm_movsi_insn} (nil))

(insn 12 11 13 2 arch/arm/kernel/traps.c:58 (set (reg:SI 2 r2)
        (reg/v:SI 133 [ where ])) 167 {*arm_movsi_insn} (nil))

(insn 13 12 14 2 arch/arm/kernel/traps.c:58 (set (reg:SI 3 r3)
        (reg/v:SI 134 [ from ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 134 [ from ])
        (nil)))

(call_insn 14 13 15 2 arch/arm/kernel/traps.c:58 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10aa9180 printk>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_UNUSED (reg:SI 0 r0)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 15 14 16 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/traps.h:43 (set (reg/f:SI 137)
        (symbol_ref:SI ("__exception_text_start") [flags 0xc0] <var_decl 0x1119ff00 __exception_text_start>)) 167 {*arm_movsi_insn} (nil))

(insn 16 15 17 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/traps.h:43 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 133 [ where ])
            (reg/f:SI 137))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/f:SI 137)
        (expr_list:REG_EQUAL (compare:CC (reg/v:SI 133 [ where ])
                (symbol_ref:SI ("__exception_text_start") [flags 0xc0] <var_decl 0x1119ff00 __exception_text_start>))
            (nil))))

(jump_insn 17 16 18 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/traps.h:43 (set (pc)
        (if_then_else (ltu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 41)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 2 -> ( 3 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 135
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135
;; rd  out 	(14)
3, 9, 14, 19, 20, 23, 24, 47, 49, 50, 253, 254, 255, 256


;; Succ edge  3 [50.0%]  (fallthru)
;; Succ edge  5 [50.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u21(11){ }u22(13){ }u23(25){ }u24(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 135
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc] 138
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135
;; live  gen 	 24 [cc] 138
;; live  kill	
;; rd  in  	(14)
3, 9, 14, 19, 20, 23, 24, 47, 49, 50, 253, 254, 255, 256
;; rd  gen 	(2)
46, 257
;; rd  kill	(5)
45, 46, 47, 48, 257

;; Pred edge  2 [50.0%]  (fallthru)
(note 18 17 19 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 19 18 20 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/traps.h:44 (set (reg/f:SI 138)
        (symbol_ref:SI ("__exception_text_end") [flags 0xc0] <var_decl 0x1119ff60 __exception_text_end>)) 167 {*arm_movsi_insn} (nil))

(insn 20 19 21 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/traps.h:44 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 133 [ where ])
            (reg/f:SI 138))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/f:SI 138)
        (expr_list:REG_DEAD (reg/v:SI 133 [ where ])
            (expr_list:REG_EQUAL (compare:CC (reg/v:SI 133 [ where ])
                    (symbol_ref:SI ("__exception_text_end") [flags 0xc0] <var_decl 0x1119ff60 __exception_text_end>))
                (nil)))))

(jump_insn 21 20 26 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/traps.h:44 (set (pc)
        (if_then_else (geu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 41)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 3 -> ( 4 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; rd  out 	(15)
3, 9, 14, 19, 20, 23, 24, 46, 49, 50, 253, 254, 255, 256, 257


;; Succ edge  4 [50.0%]  (fallthru)
;; Succ edge  5 [50.0%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u29(11){ }u30(13){ }u31(25){ }u32(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 141 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 141 142
;; live  kill	
;; rd  in  	(15)
3, 9, 14, 19, 20, 23, 24, 46, 49, 50, 253, 254, 255, 256, 257
;; rd  gen 	(2)
258, 259
;; rd  kill	(2)
258, 259

;; Pred edge  3 [50.0%]  (fallthru)
(code_label 26 21 27 4 64 "" [0 uses])

(note 27 26 30 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 30 27 31 4 arch/arm/kernel/traps.c:64 (set (reg:SI 141)
        (plus:SI (reg/v:SI 135 [ frame ])
            (const_int 4 [0x4]))) 4 {*arm_addsi3} (nil))

(insn 31 30 32 4 arch/arm/kernel/traps.c:64 (set (reg:SI 142)
        (plus:SI (reg/v:SI 135 [ frame ])
            (const_int 76 [0x4c]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/v:SI 135 [ frame ])
        (nil)))

(insn 32 31 33 4 arch/arm/kernel/traps.c:64 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC14") [flags 0x82] <string_cst 0x112bca60>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC14") [flags 0x82] <string_cst 0x112bca60>)
        (nil)))

(insn 33 32 34 4 arch/arm/kernel/traps.c:64 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC15") [flags 0x82] <string_cst 0x112bb570>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC15") [flags 0x82] <string_cst 0x112bb570>)
        (nil)))

(insn 34 33 35 4 arch/arm/kernel/traps.c:64 (set (reg:SI 2 r2)
        (reg:SI 141)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 141)
        (nil)))

(insn 35 34 36 4 arch/arm/kernel/traps.c:64 (set (reg:SI 3 r3)
        (reg:SI 142)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 142)
        (nil)))

(call_insn/j 36 35 37 4 arch/arm/kernel/traps.c:64 (parallel [
            (call (mem:SI (symbol_ref:SI ("dump_mem") [flags 0x3] <function_decl 0x111aa800 dump_mem>) [0 S4 A32])
                (const_int 0 [0x0]))
            (return)
            (use (const_int 0 [0x0]))
        ]) 258 {*sibcall_insn} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_DEAD (reg:SI 0 r0)
                    (expr_list:REG_EH_REGION (const_int 0 [0x0])
                        (nil))))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 4 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(17)
3, 9, 14, 19, 20, 23, 24, 46, 49, 50, 253, 254, 255, 256, 257, 258, 259


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 37 36 41)

;; Start of basic block ( 3 2) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u42(11){ }u43(13){ }u44(25){ }u45(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(16)
3, 9, 14, 19, 20, 23, 24, 46, 47, 49, 50, 253, 254, 255, 256, 257
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  3 [50.0%] 
;; Pred edge  2 [50.0%] 
(code_label 41 37 44 5 65 "" [2 uses])

(note 44 41 0 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 5 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(16)
3, 9, 14, 19, 20, 23, 24, 46, 47, 49, 50, 253, 254, 255, 256, 257


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function show_stack (show_stack)[0:1061]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


show_stack

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr]
;;  ref usage 	r0={3d,2u} r1={3d,1u} r2={2d} r3={2d} r11={1d,2u} r12={2d} r13={1d,3u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,2u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,1u} 
;;    total ref usage 143{130d,13u,0e} in 5{4 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128
0[0,3] 1[3,3] 2[6,2] 3[8,2] 11[10,1] 12[11,2] 13[13,1] 14[14,2] 15[16,1] 16[17,1] 17[18,1] 18[19,1] 19[20,1] 20[21,1] 21[22,1] 22[23,1] 23[24,1] 24[25,1] 25[26,1] 26[27,1] 27[28,1] 28[29,1] 29[30,1] 30[31,1] 31[32,1] 32[33,1] 33[34,1] 34[35,1] 35[36,1] 36[37,1] 37[38,1] 38[39,1] 39[40,1] 40[41,1] 41[42,1] 42[43,1] 43[44,1] 44[45,1] 45[46,1] 46[47,1] 47[48,1] 48[49,1] 49[50,1] 50[51,1] 51[52,1] 52[53,1] 53[54,1] 54[55,1] 55[56,1] 56[57,1] 57[58,1] 58[59,1] 59[60,1] 60[61,1] 61[62,1] 62[63,1] 63[64,1] 64[65,1] 65[66,1] 66[67,1] 67[68,1] 68[69,1] 69[70,1] 70[71,1] 71[72,1] 72[73,1] 73[74,1] 74[75,1] 75[76,1] 76[77,1] 77[78,1] 78[79,1] 79[80,1] 80[81,1] 81[82,1] 82[83,1] 83[84,1] 84[85,1] 85[86,1] 86[87,1] 87[88,1] 88[89,1] 89[90,1] 90[91,1] 91[92,1] 92[93,1] 93[94,1] 94[95,1] 95[96,1] 96[97,1] 97[98,1] 98[99,1] 99[100,1] 100[101,1] 101[102,1] 102[103,1] 103[104,1] 104[105,1] 105[106,1] 106[107,1] 107[108,1] 108[109,1] 109[110,1] 110[111,1] 111[112,1] 112[113,1] 113[114,1] 114[115,1] 115[116,1] 116[117,1] 117[118,1] 118[119,1] 119[120,1] 120[121,1] 121[122,1] 122[123,1] 123[124,1] 124[125,1] 125[126,1] 126[127,1] 127[128,1] 133[129,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d2(0){ }d5(1){ }d7(2){ }d9(3){ }d10(11){ }d12(12){ }d13(13){ }d15(14){ }d26(25){ }d27(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
2, 5, 7, 9, 10, 12, 13, 15, 26, 27
;; rd  kill	(18)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 26, 27
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(10)
2, 5, 7, 9, 10, 12, 13, 15, 26, 27

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d10(bb 0 insn -1) }u1(13){ d13(bb 0 insn -1) }u2(25){ d26(bb 0 insn -1) }u3(26){ d27(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 133
;; live  kill	 14 [lr]
;; rd  in  	(10)
2, 5, 7, 9, 10, 12, 13, 15, 26, 27
;; rd  gen 	(1)
129
;; rd  kill	(3)
14, 15, 129
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(10)
2, 5, 7, 9, 10, 12, 13, 26, 27, 129
;;  UD chains for artificial uses
;;   reg 11 { d10(bb 0 insn -1) }
;;   reg 13 { d13(bb 0 insn -1) }
;;   reg 25 { d26(bb 0 insn -1) }
;;   reg 26 { d27(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d2(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 8
;;      reg 133 { d129(bb 2 insn 2) }
;;   UD chains for insn luid 3 uid 9
;;      reg 13 { d13(bb 0 insn -1) }
;;      reg 0 { d1(bb 2 insn 7) }
;;      reg 1 { d4(bb 2 insn 8) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u9(11){ d10(bb 0 insn -1) }u10(13){ d13(bb 0 insn -1) }u11(14){ }u12(25){ d26(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(10)
2, 5, 7, 9, 10, 12, 13, 26, 27, 129
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(10)
2, 5, 7, 9, 10, 12, 13, 26, 27, 129
;;  UD chains for artificial uses
;;   reg 11 { d10(bb 0 insn -1) }
;;   reg 13 { d13(bb 0 insn -1) }
;;   reg 14 { }
;;   reg 25 { d26(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 10 to worklist
  Adding insn 9 to worklist
Finished finding needed instructions:
Processing use of (reg 13 sp) in insn 9:
Processing use of (reg 0 r0) in insn 9:
  Adding insn 7 to worklist
Processing use of (reg 1 r1) in insn 9:
  Adding insn 8 to worklist
Processing use of (reg 133 [ tsk ]) in insn 8:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:


show_stack

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr]
;;  ref usage 	r0={3d,2u} r1={3d,1u} r2={2d} r3={2d} r11={1d,2u} r12={2d} r13={1d,3u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,2u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,1u} 
;;    total ref usage 143{130d,13u,0e} in 5{4 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128
0[0,3] 1[3,3] 2[6,2] 3[8,2] 11[10,1] 12[11,2] 13[13,1] 14[14,2] 15[16,1] 16[17,1] 17[18,1] 18[19,1] 19[20,1] 20[21,1] 21[22,1] 22[23,1] 23[24,1] 24[25,1] 25[26,1] 26[27,1] 27[28,1] 28[29,1] 29[30,1] 30[31,1] 31[32,1] 32[33,1] 33[34,1] 34[35,1] 35[36,1] 36[37,1] 37[38,1] 38[39,1] 39[40,1] 40[41,1] 41[42,1] 42[43,1] 43[44,1] 44[45,1] 45[46,1] 46[47,1] 47[48,1] 48[49,1] 49[50,1] 50[51,1] 51[52,1] 52[53,1] 53[54,1] 54[55,1] 55[56,1] 56[57,1] 57[58,1] 58[59,1] 59[60,1] 60[61,1] 61[62,1] 62[63,1] 63[64,1] 64[65,1] 65[66,1] 66[67,1] 67[68,1] 68[69,1] 69[70,1] 70[71,1] 71[72,1] 72[73,1] 73[74,1] 74[75,1] 75[76,1] 76[77,1] 77[78,1] 78[79,1] 79[80,1] 80[81,1] 81[82,1] 82[83,1] 83[84,1] 84[85,1] 85[86,1] 86[87,1] 87[88,1] 88[89,1] 89[90,1] 90[91,1] 91[92,1] 92[93,1] 93[94,1] 94[95,1] 95[96,1] 96[97,1] 97[98,1] 98[99,1] 99[100,1] 100[101,1] 101[102,1] 102[103,1] 103[104,1] 104[105,1] 105[106,1] 106[107,1] 107[108,1] 108[109,1] 109[110,1] 110[111,1] 111[112,1] 112[113,1] 113[114,1] 114[115,1] 115[116,1] 116[117,1] 117[118,1] 118[119,1] 119[120,1] 120[121,1] 121[122,1] 122[123,1] 123[124,1] 124[125,1] 125[126,1] 126[127,1] 127[128,1] 133[129,1] 
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 133
;; live  kill	 14 [lr]
;; rd  in  	(10)
2, 5, 7, 9, 10, 12, 13, 15, 26, 27
;; rd  gen 	(1)
129
;; rd  kill	(3)
14, 15, 129

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 5 4 2 arch/arm/kernel/traps.c:213 (set (reg/v/f:SI 133 [ tsk ])
        (reg:SI 0 r0 [ tsk ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ tsk ])
        (nil)))

(note 4 2 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 8 2 arch/arm/kernel/traps.c:166 (set (reg:SI 0 r0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 8 7 9 2 arch/arm/kernel/traps.c:166 (set (reg:SI 1 r1)
        (reg/v/f:SI 133 [ tsk ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 133 [ tsk ])
        (nil)))

(call_insn 9 8 10 2 arch/arm/kernel/traps.c:166 (parallel [
            (call (mem:SI (symbol_ref:SI ("unwind_backtrace") [flags 0x41] <function_decl 0x111aa680 unwind_backtrace>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 10 9 0 2 arch/arm/kernel/traps.c:215 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 6935662)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(10)
2, 5, 7, 9, 10, 12, 13, 26, 27, 129


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function dump_stack (dump_stack)[0:1060] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


dump_stack

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp]
;;  ref usage 	r0={3d,2u} r1={3d,1u} r2={2d} r3={2d} r11={1d,2u} r12={2d} r13={1d,3u} r14={1d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,2u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 140{128d,12u,0e} in 3{2 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127
0[0,3] 1[3,3] 2[6,2] 3[8,2] 11[10,1] 12[11,2] 13[13,1] 14[14,1] 15[15,1] 16[16,1] 17[17,1] 18[18,1] 19[19,1] 20[20,1] 21[21,1] 22[22,1] 23[23,1] 24[24,1] 25[25,1] 26[26,1] 27[27,1] 28[28,1] 29[29,1] 30[30,1] 31[31,1] 32[32,1] 33[33,1] 34[34,1] 35[35,1] 36[36,1] 37[37,1] 38[38,1] 39[39,1] 40[40,1] 41[41,1] 42[42,1] 43[43,1] 44[44,1] 45[45,1] 46[46,1] 47[47,1] 48[48,1] 49[49,1] 50[50,1] 51[51,1] 52[52,1] 53[53,1] 54[54,1] 55[55,1] 56[56,1] 57[57,1] 58[58,1] 59[59,1] 60[60,1] 61[61,1] 62[62,1] 63[63,1] 64[64,1] 65[65,1] 66[66,1] 67[67,1] 68[68,1] 69[69,1] 70[70,1] 71[71,1] 72[72,1] 73[73,1] 74[74,1] 75[75,1] 76[76,1] 77[77,1] 78[78,1] 79[79,1] 80[80,1] 81[81,1] 82[82,1] 83[83,1] 84[84,1] 85[85,1] 86[86,1] 87[87,1] 88[88,1] 89[89,1] 90[90,1] 91[91,1] 92[92,1] 93[93,1] 94[94,1] 95[95,1] 96[96,1] 97[97,1] 98[98,1] 99[99,1] 100[100,1] 101[101,1] 102[102,1] 103[103,1] 104[104,1] 105[105,1] 106[106,1] 107[107,1] 108[108,1] 109[109,1] 110[110,1] 111[111,1] 112[112,1] 113[113,1] 114[114,1] 115[115,1] 116[116,1] 117[117,1] 118[118,1] 119[119,1] 120[120,1] 121[121,1] 122[122,1] 123[123,1] 124[124,1] 125[125,1] 126[126,1] 127[127,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d2(0){ }d5(1){ }d7(2){ }d9(3){ }d10(11){ }d12(12){ }d13(13){ }d14(14){ }d25(25){ }d26(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
2, 5, 7, 9, 10, 12, 13, 14, 25, 26
;; rd  kill	(17)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 25, 26
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
2, 5, 7, 9, 10, 12, 13, 14, 25, 26

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d10(bb 0 insn -1) }u1(13){ d13(bb 0 insn -1) }u2(25){ d25(bb 0 insn -1) }u3(26){ d26(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	
;; rd  in  	(10)
2, 5, 7, 9, 10, 12, 13, 14, 25, 26
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
2, 5, 7, 9, 10, 12, 13, 14, 25, 26
;;  UD chains for artificial uses
;;   reg 11 { d10(bb 0 insn -1) }
;;   reg 13 { d13(bb 0 insn -1) }
;;   reg 25 { d25(bb 0 insn -1) }
;;   reg 26 { d26(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 6
;;      reg 0 { d1(bb 2 insn 5) }
;;   UD chains for insn luid 2 uid 7
;;      reg 13 { d13(bb 0 insn -1) }
;;      reg 0 { d1(bb 2 insn 5) }
;;      reg 1 { d3(bb 2 insn 6) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u8(11){ d10(bb 0 insn -1) }u9(13){ d13(bb 0 insn -1) }u10(14){ d14(bb 0 insn -1) }u11(25){ d25(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(10)
2, 5, 7, 9, 10, 12, 13, 14, 25, 26
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(10)
2, 5, 7, 9, 10, 12, 13, 14, 25, 26
;;  UD chains for artificial uses
;;   reg 11 { d10(bb 0 insn -1) }
;;   reg 13 { d13(bb 0 insn -1) }
;;   reg 14 { d14(bb 0 insn -1) }
;;   reg 25 { d25(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 7 to worklist
Finished finding needed instructions:
Processing use of (reg 13 sp) in insn 7:
Processing use of (reg 0 r0) in insn 7:
  Adding insn 5 to worklist
Processing use of (reg 1 r1) in insn 7:
  Adding insn 6 to worklist
Processing use of (reg 0 r0) in insn 6:


dump_stack

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp]
;;  ref usage 	r0={3d,2u} r1={3d,1u} r2={2d} r3={2d} r11={1d,2u} r12={2d} r13={1d,3u} r14={1d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,2u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 140{128d,12u,0e} in 3{2 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127
0[0,3] 1[3,3] 2[6,2] 3[8,2] 11[10,1] 12[11,2] 13[13,1] 14[14,1] 15[15,1] 16[16,1] 17[17,1] 18[18,1] 19[19,1] 20[20,1] 21[21,1] 22[22,1] 23[23,1] 24[24,1] 25[25,1] 26[26,1] 27[27,1] 28[28,1] 29[29,1] 30[30,1] 31[31,1] 32[32,1] 33[33,1] 34[34,1] 35[35,1] 36[36,1] 37[37,1] 38[38,1] 39[39,1] 40[40,1] 41[41,1] 42[42,1] 43[43,1] 44[44,1] 45[45,1] 46[46,1] 47[47,1] 48[48,1] 49[49,1] 50[50,1] 51[51,1] 52[52,1] 53[53,1] 54[54,1] 55[55,1] 56[56,1] 57[57,1] 58[58,1] 59[59,1] 60[60,1] 61[61,1] 62[62,1] 63[63,1] 64[64,1] 65[65,1] 66[66,1] 67[67,1] 68[68,1] 69[69,1] 70[70,1] 71[71,1] 72[72,1] 73[73,1] 74[74,1] 75[75,1] 76[76,1] 77[77,1] 78[78,1] 79[79,1] 80[80,1] 81[81,1] 82[82,1] 83[83,1] 84[84,1] 85[85,1] 86[86,1] 87[87,1] 88[88,1] 89[89,1] 90[90,1] 91[91,1] 92[92,1] 93[93,1] 94[94,1] 95[95,1] 96[96,1] 97[97,1] 98[98,1] 99[99,1] 100[100,1] 101[101,1] 102[102,1] 103[103,1] 104[104,1] 105[105,1] 106[106,1] 107[107,1] 108[108,1] 109[109,1] 110[110,1] 111[111,1] 112[112,1] 113[113,1] 114[114,1] 115[115,1] 116[116,1] 117[117,1] 118[118,1] 119[119,1] 120[120,1] 121[121,1] 122[122,1] 123[123,1] 124[124,1] 125[125,1] 126[126,1] 127[127,1] 
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	
;; rd  in  	(10)
2, 5, 7, 9, 10, 12, 13, 14, 25, 26
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)

(insn 5 2 6 2 arch/arm/kernel/traps.c:166 (set (reg:SI 0 r0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 6 5 7 2 arch/arm/kernel/traps.c:166 (set (reg:SI 1 r1)
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(call_insn/j 7 6 8 2 arch/arm/kernel/traps.c:166 (parallel [
            (call (mem:SI (symbol_ref:SI ("unwind_backtrace") [flags 0x41] <function_decl 0x111aa680 unwind_backtrace>) [0 S4 A32])
                (const_int 0 [0x0]))
            (return)
            (use (const_int 0 [0x0]))
        ]) 258 {*sibcall_insn} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
2, 5, 7, 9, 10, 12, 13, 14, 25, 26


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 8 7 0)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function __div0 (__div0)[0:1081]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


__div0

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 13[sp] 14[lr]
;;  ref usage 	r0={4d,1u} r1={3d} r2={3d} r3={3d} r11={1d,2u} r12={3d} r13={1d,4u} r14={2d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={1d,2u} r26={1d,1u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r133={1d,1u} 
;;    total ref usage 257{245d,12u,0e} in 4{2 regular + 2 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243
0[0,4] 1[4,3] 2[7,3] 3[10,3] 11[13,1] 12[14,3] 13[17,1] 14[18,2] 15[20,2] 16[22,2] 17[24,2] 18[26,2] 19[28,2] 20[30,2] 21[32,2] 22[34,2] 23[36,2] 24[38,2] 25[40,1] 26[41,1] 27[42,2] 28[44,2] 29[46,2] 30[48,2] 31[50,2] 32[52,2] 33[54,2] 34[56,2] 35[58,2] 36[60,2] 37[62,2] 38[64,2] 39[66,2] 40[68,2] 41[70,2] 42[72,2] 43[74,2] 44[76,2] 45[78,2] 46[80,2] 47[82,2] 48[84,2] 49[86,2] 50[88,2] 51[90,2] 52[92,2] 53[94,2] 54[96,2] 55[98,2] 56[100,2] 57[102,2] 58[104,2] 59[106,2] 60[108,2] 61[110,2] 62[112,2] 63[114,2] 64[116,2] 65[118,2] 66[120,2] 67[122,2] 68[124,2] 69[126,2] 70[128,2] 71[130,2] 72[132,2] 73[134,2] 74[136,2] 75[138,2] 76[140,2] 77[142,2] 78[144,2] 79[146,2] 80[148,2] 81[150,2] 82[152,2] 83[154,2] 84[156,2] 85[158,2] 86[160,2] 87[162,2] 88[164,2] 89[166,2] 90[168,2] 91[170,2] 92[172,2] 93[174,2] 94[176,2] 95[178,2] 96[180,2] 97[182,2] 98[184,2] 99[186,2] 100[188,2] 101[190,2] 102[192,2] 103[194,2] 104[196,2] 105[198,2] 106[200,2] 107[202,2] 108[204,2] 109[206,2] 110[208,2] 111[210,2] 112[212,2] 113[214,2] 114[216,2] 115[218,2] 116[220,2] 117[222,2] 118[224,2] 119[226,2] 120[228,2] 121[230,2] 122[232,2] 123[234,2] 124[236,2] 125[238,2] 126[240,2] 127[242,2] 133[244,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d3(0){ }d6(1){ }d9(2){ }d12(3){ }d13(11){ }d16(12){ }d17(13){ }d19(14){ }d40(25){ }d41(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
3, 6, 9, 12, 13, 16, 17, 19, 40, 41
;; rd  kill	(22)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 40, 41
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(10)
3, 6, 9, 12, 13, 16, 17, 19, 40, 41

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d13(bb 0 insn -1) }u1(13){ d17(bb 0 insn -1) }u2(25){ d40(bb 0 insn -1) }u3(26){ d41(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 133
;; live  kill	 14 [lr]
;; rd  in  	(10)
3, 6, 9, 12, 13, 16, 17, 19, 40, 41
;; rd  gen 	(1)
244
;; rd  kill	(3)
18, 19, 244
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(10)
3, 6, 9, 12, 13, 16, 17, 40, 41, 244
;;  UD chains for artificial uses
;;   reg 11 { d13(bb 0 insn -1) }
;;   reg 13 { d17(bb 0 insn -1) }
;;   reg 25 { d40(bb 0 insn -1) }
;;   reg 26 { d41(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 6
;;      reg 133 { d244(bb 2 insn 5) }
;;   UD chains for insn luid 2 uid 7
;;      reg 13 { d17(bb 0 insn -1) }
;;      reg 0 { d2(bb 2 insn 6) }
;;   UD chains for insn luid 3 uid 8
;;      reg 13 { d17(bb 0 insn -1) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u8(11){ d13(bb 0 insn -1) }u9(13){ d17(bb 0 insn -1) }u10(14){ }u11(25){ d40(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(10)
3, 6, 9, 12, 13, 16, 17, 40, 41, 244
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(10)
3, 6, 9, 12, 13, 16, 17, 40, 41, 244
;;  UD chains for artificial uses
;;   reg 11 { d13(bb 0 insn -1) }
;;   reg 13 { d17(bb 0 insn -1) }
;;   reg 14 { }
;;   reg 25 { d40(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 8 to worklist
  Adding insn 7 to worklist
Finished finding needed instructions:
Processing use of (reg 13 sp) in insn 7:
Processing use of (reg 0 r0) in insn 7:
  Adding insn 6 to worklist
Processing use of (reg 133) in insn 6:
  Adding insn 5 to worklist
Processing use of (reg 13 sp) in insn 8:


__div0

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 13[sp] 14[lr]
;;  ref usage 	r0={4d,1u} r1={3d} r2={3d} r3={3d} r11={1d,2u} r12={3d} r13={1d,4u} r14={2d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={1d,2u} r26={1d,1u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r133={1d,1u} 
;;    total ref usage 257{245d,12u,0e} in 4{2 regular + 2 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243
0[0,4] 1[4,3] 2[7,3] 3[10,3] 11[13,1] 12[14,3] 13[17,1] 14[18,2] 15[20,2] 16[22,2] 17[24,2] 18[26,2] 19[28,2] 20[30,2] 21[32,2] 22[34,2] 23[36,2] 24[38,2] 25[40,1] 26[41,1] 27[42,2] 28[44,2] 29[46,2] 30[48,2] 31[50,2] 32[52,2] 33[54,2] 34[56,2] 35[58,2] 36[60,2] 37[62,2] 38[64,2] 39[66,2] 40[68,2] 41[70,2] 42[72,2] 43[74,2] 44[76,2] 45[78,2] 46[80,2] 47[82,2] 48[84,2] 49[86,2] 50[88,2] 51[90,2] 52[92,2] 53[94,2] 54[96,2] 55[98,2] 56[100,2] 57[102,2] 58[104,2] 59[106,2] 60[108,2] 61[110,2] 62[112,2] 63[114,2] 64[116,2] 65[118,2] 66[120,2] 67[122,2] 68[124,2] 69[126,2] 70[128,2] 71[130,2] 72[132,2] 73[134,2] 74[136,2] 75[138,2] 76[140,2] 77[142,2] 78[144,2] 79[146,2] 80[148,2] 81[150,2] 82[152,2] 83[154,2] 84[156,2] 85[158,2] 86[160,2] 87[162,2] 88[164,2] 89[166,2] 90[168,2] 91[170,2] 92[172,2] 93[174,2] 94[176,2] 95[178,2] 96[180,2] 97[182,2] 98[184,2] 99[186,2] 100[188,2] 101[190,2] 102[192,2] 103[194,2] 104[196,2] 105[198,2] 106[200,2] 107[202,2] 108[204,2] 109[206,2] 110[208,2] 111[210,2] 112[212,2] 113[214,2] 114[216,2] 115[218,2] 116[220,2] 117[222,2] 118[224,2] 119[226,2] 120[228,2] 121[230,2] 122[232,2] 123[234,2] 124[236,2] 125[238,2] 126[240,2] 127[242,2] 133[244,1] 
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 133
;; live  kill	 14 [lr]
;; rd  in  	(10)
3, 6, 9, 12, 13, 16, 17, 19, 40, 41
;; rd  gen 	(1)
244
;; rd  kill	(3)
18, 19, 244

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)

(insn 5 2 6 2 arch/arm/kernel/traps.c:745 (set (reg/f:SI 133)
        (symbol_ref/v/f:SI ("*.LC16") [flags 0x82] <string_cst 0x11260d40>)) 167 {*arm_movsi_insn} (nil))

(insn 6 5 7 2 arch/arm/kernel/traps.c:745 (set (reg:SI 0 r0)
        (reg/f:SI 133)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 133)
        (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC16") [flags 0x82] <string_cst 0x11260d40>)
            (nil))))

(call_insn 7 6 8 2 arch/arm/kernel/traps.c:745 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10aa9180 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_UNUSED (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(call_insn/j 8 7 9 2 arch/arm/kernel/traps.c:746 (parallel [
            (call (mem:SI (symbol_ref:SI ("dump_stack") [flags 0x3] <function_decl 0x10aa9400 dump_stack>) [0 S4 A32])
                (const_int 0 [0x0]))
            (return)
            (use (const_int 0 [0x0]))
        ]) 258 {*sibcall_insn} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(10)
3, 6, 9, 12, 13, 16, 17, 40, 41, 244


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 9 8 0)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function die (die)[0:1063]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 23 n_edges 29 count 43 (  1.9)
df_worklist_dataflow_doublequeue:n_basic_blocks 23 n_edges 29 count 48 (  2.1)
df_worklist_dataflow_doublequeue:n_basic_blocks 23 n_edges 29 count 51 (  2.2)


die

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={38d,20u} r1={29d,9u} r2={27d,7u} r3={26d,5u} r11={1d,22u} r12={21d} r13={1d,50u,5d} r14={21d,1u} r15={20d} r16={20d} r17={20d} r18={20d} r19={20d} r20={20d} r21={20d} r22={20d} r23={20d} r24={36d,13u} r25={1d,24u,1d} r26={1d,21u} r27={20d} r28={20d} r29={20d} r30={20d} r31={20d} r32={20d} r33={20d} r34={20d} r35={20d} r36={20d} r37={20d} r38={20d} r39={20d} r40={20d} r41={20d} r42={20d} r43={20d} r44={20d} r45={20d} r46={20d} r47={20d} r48={20d} r49={20d} r50={20d} r51={20d} r52={20d} r53={20d} r54={20d} r55={20d} r56={20d} r57={20d} r58={20d} r59={20d} r60={20d} r61={20d} r62={20d} r63={20d} r64={20d} r65={20d} r66={20d} r67={20d} r68={20d} r69={20d} r70={20d} r71={20d} r72={20d} r73={20d} r74={20d} r75={20d} r76={20d} r77={20d} r78={20d} r79={20d} r80={20d} r81={20d} r82={20d} r83={20d} r84={20d} r85={20d} r86={20d} r87={20d} r88={20d} r89={20d} r90={20d} r91={20d} r92={20d} r93={20d} r94={20d} r95={20d} r96={20d} r97={20d} r98={20d} r99={20d} r100={20d} r101={20d} r102={20d} r103={20d} r104={20d} r105={20d} r106={20d} r107={20d} r108={20d} r109={20d} r110={20d} r111={20d} r112={20d} r113={20d} r114={20d} r115={20d} r116={20d} r117={20d} r118={20d} r119={20d} r120={20d} r121={20d} r122={20d} r123={20d} r124={20d} r125={20d} r126={20d} r127={20d} r134={2d,2u} r135={2d,3u} r137={1d,2u} r138={1d,5u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={2d,2u} r147={2d,1u} r148={2d,1u} r149={2d,3u} r150={2d,3u} r151={1d,1u} r152={1d,1u} r153={1d,4u} r154={1d,2u} r155={1d,1u} r157={1d,1u} r159={1d,2u,2d} r160={1d,2u} r161={1d,2u} r162={1d,7u} r163={1d,2u} r164={1d,1u} r167={1d,2u} r168={1d,1u} r170={1d,1u} r171={1d,2u} r172={1d,1u} r175={1d,1u} r176={1d,1u} r177={1d,1u} r179={1d,1u} r180={1d,1u} r181={1d,1u} r182={1d,1u} r183={1d,1u} r184={1d,1u} r185={1d,1u} r186={1d,1u,1d} r187={1d,1u} r190={1d,1u} r191={1d,1u} r192={1d,1u} r193={1d,2u} r194={1d,1u} r197={1d,2u} r199={1d,1u} r200={1d,1u} r201={1d,1u} r203={1d,1u} r207={1d,1u} r208={1d,1u} r209={1d,1u} r212={1d,1u} r213={1d,1u} r214={1d,1u} r215={1d,1u,1d} r216={1d,1u} r218={1d,1u} r219={1d,1u} r221={1d,1u} r224={1d,1u} r225={1d,1u} r226={1d,1u} 
;;    total ref usage 2752{2474d,268u,10e} in 159{139 regular + 20 call} insns.
;; Reaching defs:

  sparse invalidated 	0, 24
  dense invalidated 	
0[0,38] 1[38,29] 2[67,27] 3[94,26] 11[120,1] 12[121,21] 13[142,1] 14[143,21] 15[164,20] 16[184,20] 17[204,20] 18[224,20] 19[244,20] 20[264,20] 21[284,20] 22[304,20] 23[324,20] 24[344,36] 25[380,1] 26[381,1] 27[382,20] 28[402,20] 29[422,20] 30[442,20] 31[462,20] 32[482,20] 33[502,20] 34[522,20] 35[542,20] 36[562,20] 37[582,20] 38[602,20] 39[622,20] 40[642,20] 41[662,20] 42[682,20] 43[702,20] 44[722,20] 45[742,20] 46[762,20] 47[782,20] 48[802,20] 49[822,20] 50[842,20] 51[862,20] 52[882,20] 53[902,20] 54[922,20] 55[942,20] 56[962,20] 57[982,20] 58[1002,20] 59[1022,20] 60[1042,20] 61[1062,20] 62[1082,20] 63[1102,20] 64[1122,20] 65[1142,20] 66[1162,20] 67[1182,20] 68[1202,20] 69[1222,20] 70[1242,20] 71[1262,20] 72[1282,20] 73[1302,20] 74[1322,20] 75[1342,20] 76[1362,20] 77[1382,20] 78[1402,20] 79[1422,20] 80[1442,20] 81[1462,20] 82[1482,20] 83[1502,20] 84[1522,20] 85[1542,20] 86[1562,20] 87[1582,20] 88[1602,20] 89[1622,20] 90[1642,20] 91[1662,20] 92[1682,20] 93[1702,20] 94[1722,20] 95[1742,20] 96[1762,20] 97[1782,20] 98[1802,20] 99[1822,20] 100[1842,20] 101[1862,20] 102[1882,20] 103[1902,20] 104[1922,20] 105[1942,20] 106[1962,20] 107[1982,20] 108[2002,20] 109[2022,20] 110[2042,20] 111[2062,20] 112[2082,20] 113[2102,20] 114[2122,20] 115[2142,20] 116[2162,20] 117[2182,20] 118[2202,20] 119[2222,20] 120[2242,20] 121[2262,20] 122[2282,20] 123[2302,20] 124[2322,20] 125[2342,20] 126[2362,20] 127[2382,20] 134[2402,2] 135[2404,2] 137[2406,1] 138[2407,1] 143[2408,1] 144[2409,1] 145[2410,1] 146[2411,2] 147[2413,2] 148[2415,2] 149[2417,2] 150[2419,2] 151[2421,1] 152[2422,1] 153[2423,1] 154[2424,1] 155[2425,1] 157[2426,1] 159[2427,1] 160[2428,1] 161[2429,1] 162[2430,1] 163[2431,1] 164[2432,1] 167[2433,1] 168[2434,1] 170[2435,1] 171[2436,1] 172[2437,1] 175[2438,1] 176[2439,1] 177[2440,1] 179[2441,1] 180[2442,1] 181[2443,1] 182[2444,1] 183[2445,1] 184[2446,1] 185[2447,1] 186[2448,1] 187[2449,1] 190[2450,1] 191[2451,1] 192[2452,1] 193[2453,1] 194[2454,1] 197[2455,1] 199[2456,1] 200[2457,1] 201[2458,1] 203[2459,1] 207[2460,1] 208[2461,1] 209[2462,1] 212[2463,1] 213[2464,1] 214[2465,1] 215[2466,1] 216[2467,1] 218[2468,1] 219[2469,1] 221[2470,1] 224[2471,1] 225[2472,1] 226[2473,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d37(0){ }d66(1){ }d93(2){ }d119(3){ }d120(11){ }d141(12){ }d142(13){ }d163(14){ }d380(25){ }d381(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
37, 66, 93, 119, 120, 141, 142, 163, 380, 381
;; rd  kill	(128)
38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 380, 381
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(10)
37, 66, 93, 119, 120, 141, 142, 163, 380, 381

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d120(bb 0 insn -1) }u1(13){ d142(bb 0 insn -1) }u2(25){ d380(bb 0 insn -1) }u3(26){ d381(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 160 161 162 163 164 167 168
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 24 [cc] 160 161 162 163 164 167 168
;; live  kill	 14 [lr]
;; rd  in  	(10)
37, 66, 93, 119, 120, 141, 142, 163, 380, 381
;; rd  gen 	(8)
377, 2428, 2429, 2430, 2431, 2432, 2433, 2434
;; rd  kill	(28)
143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 2428, 2429, 2430, 2431, 2432, 2433, 2434
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 161 162 163 167
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 161 162 163 167
;; rd  out 	(17)
37, 66, 93, 119, 120, 141, 142, 377, 380, 381, 2428, 2429, 2430, 2431, 2432, 2433, 2434
;;  UD chains for artificial uses
;;   reg 11 { d120(bb 0 insn -1) }
;;   reg 13 { d142(bb 0 insn -1) }
;;   reg 25 { d380(bb 0 insn -1) }
;;   reg 26 { d381(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 3
;;      reg 0 { d37(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 4
;;      reg 1 { d66(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 5
;;      reg 2 { d93(bb 0 insn -1) }
;;   UD chains for insn luid 3 uid 10
;;      reg 13 { d142(bb 0 insn -1) }
;;   UD chains for insn luid 4 uid 11
;;      reg 164 { d2432(bb 2 insn 10) }
;;   eq_note reg 13 { }
;;   UD chains for insn luid 5 uid 12
;;      reg 13 { d142(bb 0 insn -1) }
;;   UD chains for insn luid 7 uid 16
;;      reg 13 { d142(bb 0 insn -1) }
;;      reg 0 { d7(bb 2 insn 15) }
;;   UD chains for insn luid 9 uid 18
;;      reg 167 { d2433(bb 2 insn 17) }
;;   UD chains for insn luid 10 uid 19
;;      reg 168 { d2434(bb 2 insn 18) }
;;   UD chains for insn luid 11 uid 20
;;      reg 24 { d377(bb 2 insn 19) }

( 2 )->[3]->( 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u16(11){ d120(bb 0 insn -1) }u17(13){ d142(bb 0 insn -1) }u18(25){ d380(bb 0 insn -1) }u19(26){ d381(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 161 162 163 167
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167
;; lr  def 	 170
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 161 162 163 167
;; live  gen 	 170
;; live  kill	
;; rd  in  	(17)
37, 66, 93, 119, 120, 141, 142, 377, 380, 381, 2428, 2429, 2430, 2431, 2432, 2433, 2434
;; rd  gen 	(1)
2435
;; rd  kill	(1)
2435
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 161 162 163
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 161 162 163
;; rd  out 	(18)
37, 66, 93, 119, 120, 141, 142, 377, 380, 381, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435
;;  UD chains for artificial uses
;;   reg 11 { d120(bb 0 insn -1) }
;;   reg 13 { d142(bb 0 insn -1) }
;;   reg 25 { d380(bb 0 insn -1) }
;;   reg 26 { d381(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 24
;;      reg 167 { d2433(bb 2 insn 17) }
;;      reg 170 { d2435(bb 3 insn 23) }

( 3 2 )->[4]->( 16 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u22(11){ d120(bb 0 insn -1) }u23(13){ d142(bb 0 insn -1) }u24(25){ d380(bb 0 insn -1) }u25(26){ d381(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 161 162 163
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 161 162 163
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 137 138 159 171 172 175 176 177
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 161 162 163
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc] 137 138 159 171 172 175 176 177
;; live  kill	 14 [lr]
;; rd  in  	(18)
37, 66, 93, 119, 120, 141, 142, 377, 380, 381, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435
;; rd  gen 	(10)
30, 373, 2406, 2407, 2427, 2436, 2437, 2438, 2439, 2440
;; rd  kill	(29)
143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 2406, 2407, 2427, 2436, 2437, 2438, 2439, 2440
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 159 160 162
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 159 160 162
;; rd  out 	(26)
30, 66, 93, 119, 120, 141, 142, 373, 380, 381, 2406, 2407, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440
;;  UD chains for artificial uses
;;   reg 11 { d120(bb 0 insn -1) }
;;   reg 13 { d142(bb 0 insn -1) }
;;   reg 25 { d380(bb 0 insn -1) }
;;   reg 26 { d381(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 28
;;      reg 13 { d142(bb 0 insn -1) }
;;      reg 0 { d34(bb 4 insn 27) }
;;   UD chains for insn luid 2 uid 29
;;      reg 160 { d2428(bb 2 insn 11) }
;;   UD chains for insn luid 4 uid 31
;;      reg 171 { d2436(bb 4 insn 30) }
;;   UD chains for insn luid 5 uid 32
;;      reg 172 { d2437(bb 4 insn 31) }
;;   UD chains for insn luid 6 uid 34
;;      reg 137 { d2406(bb 4 insn 32) }
;;      reg 171 { d2436(bb 4 insn 30) }
;;   UD chains for insn luid 8 uid 37
;;      reg 161 { d2429(bb 2 insn 3) }
;;   UD chains for insn luid 9 uid 38
;;      reg 163 { d2431(bb 2 insn 5) }
;;   UD chains for insn luid 10 uid 39
;;      reg 137 { d2406(bb 4 insn 32) }
;;   UD chains for insn luid 11 uid 40
;;      reg 13 { d142(bb 0 insn -1) }
;;      reg 0 { d6(bb 4 insn 36) }
;;      reg 1 { d62(bb 4 insn 37) }
;;      reg 2 { d89(bb 4 insn 38) }
;;      reg 3 { d115(bb 4 insn 39) }
;;   UD chains for insn luid 12 uid 41
;;      reg 138 { d2407(bb 4 insn 29) }
;;   UD chains for insn luid 13 uid 42
;;      reg 13 { d142(bb 0 insn -1) }
;;      reg 175 { d2438(bb 4 insn 41) }
;;   UD chains for insn luid 15 uid 44
;;      reg 13 { d142(bb 0 insn -1) }
;;      reg 176 { d2439(bb 4 insn 43) }
;;   UD chains for insn luid 17 uid 46
;;      reg 161 { d2429(bb 2 insn 3) }
;;   UD chains for insn luid 18 uid 47
;;      reg 162 { d2430(bb 2 insn 4) }
;;   UD chains for insn luid 19 uid 48
;;      reg 163 { d2431(bb 2 insn 5) }
;;   UD chains for insn luid 20 uid 49
;;      reg 13 { d142(bb 0 insn -1) }
;;      reg 0 { d31(bb 4 insn 45) }
;;      reg 1 { d60(bb 4 insn 46) }
;;      reg 2 { d87(bb 4 insn 47) }
;;      reg 3 { d113(bb 4 insn 48) }
;;   UD chains for insn luid 21 uid 50
;;      reg 0 { d30(bb 4 insn 49) }
;;   UD chains for insn luid 23 uid 52
;;      reg 159 { d2427(bb 4 insn 50) }
;;      reg 177 { d2440(bb 4 insn 51) }
;;   eq_note reg 159 { }
;;   UD chains for insn luid 24 uid 53
;;      reg 24 { d373(bb 4 insn 52) }

( 4 )->[5]->( 7 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u59(11){ d120(bb 0 insn -1) }u60(13){ d142(bb 0 insn -1) }u61(25){ d380(bb 0 insn -1) }u62(26){ d381(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 159 160 162
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 160 162
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 179 180 181 182
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 159 160 162
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc] 179 180 181 182
;; live  kill	 14 [lr]
;; rd  in  	(26)
30, 66, 93, 119, 120, 141, 142, 373, 380, 381, 2406, 2407, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440
;; rd  gen 	(6)
26, 369, 2441, 2442, 2443, 2444
;; rd  kill	(25)
143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 2441, 2442, 2443, 2444
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 159 162
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 159 162
;; rd  out 	(30)
26, 66, 93, 119, 120, 141, 142, 369, 380, 381, 2406, 2407, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444
;;  UD chains for artificial uses
;;   reg 11 { d120(bb 0 insn -1) }
;;   reg 13 { d142(bb 0 insn -1) }
;;   reg 25 { d380(bb 0 insn -1) }
;;   reg 26 { d381(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 55
;;      reg 13 { d142(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 56
;;      reg 162 { d2430(bb 2 insn 4) }
;;   UD chains for insn luid 2 uid 57
;;      reg 13 { d142(bb 0 insn -1) }
;;      reg 0 { d28(bb 5 insn 56) }
;;   UD chains for insn luid 3 uid 59
;;      reg 138 { d2407(bb 4 insn 29) }
;;   UD chains for insn luid 4 uid 60
;;      reg 160 { d2428(bb 2 insn 11) }
;;   UD chains for insn luid 5 uid 61
;;      reg 13 { d142(bb 0 insn -1) }
;;      reg 180 { d2442(bb 5 insn 60) }
;;   UD chains for insn luid 8 uid 64
;;      reg 179 { d2441(bb 5 insn 59) }
;;   UD chains for insn luid 9 uid 65
;;      reg 138 { d2407(bb 4 insn 29) }
;;   UD chains for insn luid 10 uid 66
;;      reg 13 { d142(bb 0 insn -1) }
;;      reg 0 { d5(bb 5 insn 62) }
;;      reg 1 { d56(bb 5 insn 63) }
;;      reg 2 { d83(bb 5 insn 64) }
;;      reg 3 { d109(bb 5 insn 65) }
;;   UD chains for insn luid 11 uid 67
;;      reg 162 { d2430(bb 2 insn 4) }
;;   UD chains for insn luid 12 uid 68
;;      reg 182 { d2444(bb 5 insn 67) }
;;   UD chains for insn luid 13 uid 69
;;      reg 181 { d2443(bb 5 insn 68) }
;;   UD chains for insn luid 14 uid 70
;;      reg 24 { d369(bb 5 insn 69) }

( 5 )->[6]->( 7 16 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u82(11){ d120(bb 0 insn -1) }u83(13){ d142(bb 0 insn -1) }u84(25){ d380(bb 0 insn -1) }u85(26){ d381(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 159 162
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 183 184 185 186 187
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 159 162
;; live  gen 	 24 [cc] 183 184 185 186 187
;; live  kill	
;; rd  in  	(30)
26, 66, 93, 119, 120, 141, 142, 369, 380, 381, 2406, 2407, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444
;; rd  gen 	(6)
368, 2445, 2446, 2447, 2448, 2449
;; rd  kill	(5)
2445, 2446, 2447, 2448, 2449
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 159 162
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 159 162
;; rd  out 	(35)
26, 66, 93, 119, 120, 141, 142, 368, 380, 381, 2406, 2407, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449
;;  UD chains for artificial uses
;;   reg 11 { d120(bb 0 insn -1) }
;;   reg 13 { d142(bb 0 insn -1) }
;;   reg 25 { d380(bb 0 insn -1) }
;;   reg 26 { d381(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 73
;;      reg 13 { d142(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 74
;;      reg 184 { d2446(bb 6 insn 73) }
;;   eq_note reg 13 { }
;;   UD chains for insn luid 2 uid 75
;;      reg 183 { d2445(bb 6 insn 74) }
;;   UD chains for insn luid 3 uid 76
;;      reg 186 { d2448(bb 6 insn 75) }
;;   UD chains for insn luid 4 uid 77
;;      reg 187 { d2449(bb 6 insn 76) }
;;   eq_note reg 186 { }
;;   UD chains for insn luid 5 uid 78
;;      reg 185 { d2447(bb 6 insn 77) }
;;   UD chains for insn luid 6 uid 79
;;      reg 24 { d368(bb 6 insn 78) }

( 5 6 )->[7]->( 14 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u95(11){ d120(bb 0 insn -1) }u96(13){ d142(bb 0 insn -1) }u97(25){ d380(bb 0 insn -1) }u98(26){ d381(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 159 162
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 162
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 135 149 150 151 152 153 154 190 191 192 193 194 197 224 225 226
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 159 162
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc] 134 135 149 150 151 152 153 154 190 191 192 193 194 197 224 225 226
;; live  kill	 14 [lr]
;; rd  in  	(36)
26, 66, 93, 119, 120, 141, 142, 368, 369, 380, 381, 2406, 2407, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449
;; rd  gen 	(18)
347, 2403, 2405, 2418, 2420, 2421, 2422, 2423, 2424, 2450, 2451, 2452, 2453, 2454, 2455, 2471, 2472, 2473
;; rd  kill	(42)
143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 2402, 2403, 2404, 2405, 2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2450, 2451, 2452, 2453, 2454, 2455, 2471, 2472, 2473
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 149 150 151 152 153 159 224 225 226
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 149 150 151 152 153 159 224 225 226
;; rd  out 	(52)
26, 66, 93, 119, 120, 141, 142, 347, 380, 381, 2403, 2405, 2406, 2407, 2418, 2420, 2421, 2422, 2423, 2424, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455, 2471, 2472, 2473
;;  UD chains for artificial uses
;;   reg 11 { d120(bb 0 insn -1) }
;;   reg 13 { d142(bb 0 insn -1) }
;;   reg 25 { d380(bb 0 insn -1) }
;;   reg 26 { d381(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 84
;;      reg 138 { d2407(bb 4 insn 29) }
;;   UD chains for insn luid 1 uid 85
;;      reg 191 { d2451(bb 7 insn 84) }
;;   UD chains for insn luid 4 uid 88
;;      reg 162 { d2430(bb 2 insn 4) }
;;   UD chains for insn luid 5 uid 89
;;      reg 190 { d2450(bb 7 insn 85) }
;;   UD chains for insn luid 6 uid 90
;;      reg 13 { d142(bb 0 insn -1) }
;;      reg 0 { d4(bb 7 insn 86) }
;;      reg 1 { d40(bb 7 insn 87) }
;;      reg 2 { d81(bb 7 insn 88) }
;;      reg 3 { d107(bb 7 insn 89) }
;;   UD chains for insn luid 7 uid 91
;;      reg 162 { d2430(bb 2 insn 4) }
;;   UD chains for insn luid 8 uid 92
;;      reg 138 { d2407(bb 4 insn 29) }
;;   UD chains for insn luid 9 uid 93
;;      reg 13 { d142(bb 0 insn -1) }
;;      reg 0 { d24(bb 7 insn 91) }
;;      reg 1 { d53(bb 7 insn 92) }
;;   UD chains for insn luid 10 uid 94
;;      reg 162 { d2430(bb 2 insn 4) }
;;   UD chains for insn luid 11 uid 95
;;      reg 162 { d2430(bb 2 insn 4) }
;;   UD chains for insn luid 12 uid 96
;;      reg 192 { d2452(bb 7 insn 95) }
;;   UD chains for insn luid 13 uid 261
;;      reg 153 { d2423(bb 7 insn 96) }
;;   UD chains for insn luid 14 uid 262
;;      reg 24 { d347(bb 7 insn 261) }
;;   UD chains for insn luid 15 uid 109
;;      reg 13 { d142(bb 0 insn -1) }
;;   UD chains for insn luid 16 uid 110
;;      reg 194 { d2454(bb 7 insn 109) }
;;   eq_note reg 13 { }
;;   UD chains for insn luid 17 uid 111
;;      reg 193 { d2453(bb 7 insn 110) }
;;   UD chains for insn luid 19 uid 116
;;      reg 193 { d2453(bb 7 insn 110) }
;;      reg 197 { d2455(bb 7 insn 115) }
;;   UD chains for insn luid 20 uid 117
;;      reg 154 { d2424(bb 7 insn 94) }
;;   UD chains for insn luid 21 uid 118
;;      reg 154 { d2424(bb 7 insn 94) }
;;   UD chains for insn luid 23 uid 120
;;      reg 25 { d380(bb 0 insn -1) }
;;   UD chains for insn luid 24 uid 127
;;      reg 197 { d2455(bb 7 insn 115) }

( 14 )->[8]->( 9 10 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u128(11){ d120(bb 0 insn -1) }u129(13){ d142(bb 0 insn -1) }u130(25){ d380(bb 0 insn -1) }u131(26){ d381(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 149 150 151 152 153 159 224 225 226
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 149 150 151 152 153 159 224 225 226
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(71)
21, 26, 66, 93, 119, 120, 141, 142, 360, 380, 381, 2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410, 2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459, 2471, 2472, 2473
;; rd  gen 	(1)
365
;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 149 150 151 152 153 159 224 225 226
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 149 150 151 152 153 159 224 225 226
;; rd  out 	(71)
21, 26, 66, 93, 119, 120, 141, 142, 365, 380, 381, 2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410, 2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459, 2471, 2472, 2473
;;  UD chains for artificial uses
;;   reg 11 { d120(bb 0 insn -1) }
;;   reg 13 { d142(bb 0 insn -1) }
;;   reg 25 { d380(bb 0 insn -1) }
;;   reg 26 { d381(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 124
;;      reg 153 { d2423(bb 7 insn 96) }
;;   UD chains for insn luid 1 uid 125
;;      reg 24 { d365(bb 8 insn 124) }

( 8 )->[9]->( 11 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u134(11){ d120(bb 0 insn -1) }u135(13){ d142(bb 0 insn -1) }u136(25){ d380(bb 0 insn -1) }u137(26){ d381(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 149 150 151 152 153 159 224 225 226
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 224
;; lr  def 	 24 [cc] 144 145 146 147 148 199 200 201
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 149 150 151 152 153 159 224 225 226
;; live  gen 	 144 145 146 147 148 199 200 201
;; live  kill	 24 [cc]
;; rd  in  	(71)
21, 26, 66, 93, 119, 120, 141, 142, 365, 380, 381, 2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410, 2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459, 2471, 2472, 2473
;; rd  gen 	(8)
2409, 2410, 2412, 2414, 2416, 2456, 2457, 2458
;; rd  kill	(11)
2409, 2410, 2411, 2412, 2413, 2414, 2415, 2416, 2456, 2457, 2458
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 147 148 149 150 151 152 153 159 224 225 226
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 147 148 149 150 151 152 153 159 224 225 226
;; rd  out 	(68)
21, 26, 66, 93, 119, 120, 141, 142, 380, 381, 2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410, 2412, 2414, 2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459, 2471, 2472, 2473
;;  UD chains for artificial uses
;;   reg 11 { d120(bb 0 insn -1) }
;;   reg 13 { d142(bb 0 insn -1) }
;;   reg 25 { d380(bb 0 insn -1) }
;;   reg 26 { d381(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 128
;;      reg 135 { d2405(bb 7 insn 117) d2404(bb 12 insn 167) }
;;      reg 224 { d2471(bb 7 insn 127) }
;;   UD chains for insn luid 1 uid 129
;;      reg 135 { d2405(bb 7 insn 117) d2404(bb 12 insn 167) }
;;   UD chains for insn luid 2 uid 130
;;      reg 146 { d2411(bb 9 insn 128) }
;;      reg 199 { d2456(bb 9 insn 129) }
;;   UD chains for insn luid 3 uid 131
;;      reg 144 { d2409(bb 9 insn 130) }
;;   UD chains for insn luid 4 uid 132
;;      reg 145 { d2410(bb 9 insn 128) }
;;      reg 200 { d2457(bb 9 insn 131) }
;;   UD chains for insn luid 5 uid 133
;;      reg 201 { d2458(bb 9 insn 132) }
;;   UD chains for insn luid 6 uid 134
;;      reg 146 { d2412(bb 9 insn 130) }

( 8 )->[10]->( 11 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u148(11){ d120(bb 0 insn -1) }u149(13){ d142(bb 0 insn -1) }u150(25){ d380(bb 0 insn -1) }u151(26){ d381(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 149 150 151 152 153 159 224 225 226
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 153
;; lr  def 	 24 [cc] 143 147 148
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 149 150 151 152 153 159 224 225 226
;; live  gen 	 143 147 148
;; live  kill	 24 [cc]
;; rd  in  	(71)
21, 26, 66, 93, 119, 120, 141, 142, 365, 380, 381, 2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410, 2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459, 2471, 2472, 2473
;; rd  gen 	(3)
2408, 2413, 2415
;; rd  kill	(5)
2408, 2413, 2414, 2415, 2416
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 147 148 149 150 151 152 153 159 224 225 226
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 147 148 149 150 151 152 153 159 224 225 226
;; rd  out 	(68)
21, 26, 66, 93, 119, 120, 141, 142, 380, 381, 2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410, 2412, 2413, 2415, 2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459, 2471, 2472, 2473
;;  UD chains for artificial uses
;;   reg 11 { d120(bb 0 insn -1) }
;;   reg 13 { d142(bb 0 insn -1) }
;;   reg 25 { d380(bb 0 insn -1) }
;;   reg 26 { d381(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 140
;;      reg 134 { d2403(bb 7 insn 118) d2402(bb 12 insn 168) }
;;      reg 153 { d2423(bb 7 insn 96) }
;;   UD chains for insn luid 1 uid 141
;;      reg 143 { d2408(bb 10 insn 140) }

( 10 9 )->[11]->( 12 13 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u155(11){ d120(bb 0 insn -1) }u156(13){ d142(bb 0 insn -1) }u157(25){ d380(bb 0 insn -1) }u158(26){ d381(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 147 148 149 150 151 152 153 159 224 225 226
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 147 148 149 150 151 152 153 159 224 225 226
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(70)
21, 26, 66, 93, 119, 120, 141, 142, 380, 381, 2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410, 2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459, 2471, 2472, 2473
;; rd  gen 	(1)
363
;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 148 149 150 151 152 153 159 224 225 226
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 148 149 150 151 152 153 159 224 225 226
;; rd  out 	(71)
21, 26, 66, 93, 119, 120, 141, 142, 363, 380, 381, 2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410, 2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459, 2471, 2472, 2473
;;  UD chains for artificial uses
;;   reg 11 { d120(bb 0 insn -1) }
;;   reg 13 { d142(bb 0 insn -1) }
;;   reg 25 { d380(bb 0 insn -1) }
;;   reg 26 { d381(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 144
;;      reg 147 { d2414(bb 9 insn 134) d2413(bb 10 insn 141) }
;;   UD chains for insn luid 1 uid 145
;;      reg 24 { d363(bb 11 insn 144) }

( 11 )->[12]->( 14 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u161(11){ d120(bb 0 insn -1) }u162(13){ d142(bb 0 insn -1) }u163(25){ d380(bb 0 insn -1) }u164(26){ d381(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 148 149 150 151 152 153 159 224 225 226
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 148 149 150 152 225 226
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 135 149 150 157 203
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 148 149 150 151 152 153 159 224 225 226
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc] 134 135 149 150 157 203
;; live  kill	 14 [lr]
;; rd  in  	(71)
21, 26, 66, 93, 119, 120, 141, 142, 363, 380, 381, 2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410, 2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459, 2471, 2472, 2473
;; rd  gen 	(7)
21, 2402, 2404, 2417, 2419, 2426, 2459
;; rd  kill	(31)
143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 2402, 2403, 2404, 2405, 2417, 2418, 2419, 2420, 2426, 2459
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 149 150 151 152 153 159 224 225 226
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 149 150 151 152 153 159 224 225 226
;; rd  out 	(66)
21, 66, 93, 119, 120, 141, 142, 363, 380, 381, 2402, 2404, 2406, 2407, 2408, 2409, 2410, 2412, 2413, 2414, 2415, 2416, 2417, 2419, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459, 2471, 2472, 2473
;;  UD chains for artificial uses
;;   reg 11 { d120(bb 0 insn -1) }
;;   reg 13 { d142(bb 0 insn -1) }
;;   reg 25 { d380(bb 0 insn -1) }
;;   reg 26 { d381(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 265
;;      reg 149 { d2418(bb 7 insn 119) d2417(bb 12 insn 166) }
;;   UD chains for insn luid 1 uid 266
;;      reg 24 { d346(bb 12 insn 265) }
;;      reg 225 { d2472(bb 7 insn 263) }
;;      reg 226 { d2473(bb 7 insn 264) }
;;   UD chains for insn luid 2 uid 158
;;      reg 150 { d2420(bb 7 insn 120) d2419(bb 12 insn 165) }
;;   UD chains for insn luid 3 uid 159
;;      reg 157 { d2426(bb 12 insn 266) }
;;   UD chains for insn luid 4 uid 160
;;      reg 152 { d2422(bb 7 insn 262) }
;;   UD chains for insn luid 5 uid 161
;;      reg 148 { d2416(bb 9 insn 133) d2415(bb 10 insn 140) }
;;   UD chains for insn luid 6 uid 162
;;      reg 13 { d142(bb 0 insn -1) }
;;      reg 0 { d22(bb 12 insn 158) }
;;      reg 1 { d51(bb 12 insn 159) }
;;      reg 2 { d78(bb 12 insn 160) }
;;      reg 3 { d104(bb 12 insn 161) }
;;   UD chains for insn luid 7 uid 163
;;      reg 0 { d21(bb 12 insn 162) }
;;   UD chains for insn luid 8 uid 165
;;      reg 150 { d2420(bb 7 insn 120) d2419(bb 12 insn 165) }
;;      reg 203 { d2459(bb 12 insn 163) }
;;   UD chains for insn luid 9 uid 166
;;      reg 149 { d2418(bb 7 insn 119) d2417(bb 12 insn 166) }
;;   UD chains for insn luid 10 uid 167
;;      reg 135 { d2405(bb 7 insn 117) d2404(bb 12 insn 167) }
;;   UD chains for insn luid 11 uid 168
;;      reg 134 { d2403(bb 7 insn 118) d2402(bb 12 insn 168) }

( 11 )->[13]->( 15 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u184(11){ d120(bb 0 insn -1) }u185(13){ d142(bb 0 insn -1) }u186(25){ d380(bb 0 insn -1) }u187(26){ d381(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151 159
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151 159
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]
;; rd  in  	(71)
21, 26, 66, 93, 119, 120, 141, 142, 363, 380, 381, 2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410, 2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459, 2471, 2472, 2473
;; rd  gen 	(1)
19
;; rd  kill	(21)
143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 159
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 159
;; rd  out 	(70)
19, 66, 93, 119, 120, 141, 142, 363, 380, 381, 2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410, 2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459, 2471, 2472, 2473
;;  UD chains for artificial uses
;;   reg 11 { d120(bb 0 insn -1) }
;;   reg 13 { d142(bb 0 insn -1) }
;;   reg 25 { d380(bb 0 insn -1) }
;;   reg 26 { d381(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 174
;;      reg 150 { d2420(bb 7 insn 120) d2419(bb 12 insn 165) }
;;   UD chains for insn luid 2 uid 176
;;      reg 13 { d142(bb 0 insn -1) }
;;      reg 0 { d20(bb 13 insn 174) }
;;      reg 1 { d39(bb 13 insn 175) }

( 7 12 )->[14]->( 8 15 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u192(11){ d120(bb 0 insn -1) }u193(13){ d142(bb 0 insn -1) }u194(25){ d380(bb 0 insn -1) }u195(26){ d381(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 149 150 151 152 153 159 224 225 226
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 153
;; lr  def 	 24 [cc] 155
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 149 150 151 152 153 159 224 225 226
;; live  gen 	 24 [cc] 155
;; live  kill	
;; rd  in  	(72)
21, 26, 66, 93, 119, 120, 141, 142, 347, 363, 380, 381, 2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410, 2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459, 2471, 2472, 2473
;; rd  gen 	(2)
360, 2425
;; rd  kill	(1)
2425
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 149 150 151 152 153 159 224 225 226
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 149 150 151 152 153 159 224 225 226
;; rd  out 	(71)
21, 26, 66, 93, 119, 120, 141, 142, 360, 380, 381, 2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410, 2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459, 2471, 2472, 2473
;;  UD chains for artificial uses
;;   reg 11 { d120(bb 0 insn -1) }
;;   reg 13 { d142(bb 0 insn -1) }
;;   reg 25 { d380(bb 0 insn -1) }
;;   reg 26 { d381(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 267
;;      reg 153 { d2423(bb 7 insn 96) }
;;   UD chains for insn luid 1 uid 268
;;      reg 24 { d345(bb 14 insn 267) }
;;   UD chains for insn luid 2 uid 193
;;      reg 149 { d2418(bb 7 insn 119) d2417(bb 12 insn 166) }
;;      reg 155 { d2425(bb 14 insn 268) }
;;   UD chains for insn luid 3 uid 194
;;      reg 24 { d360(bb 14 insn 193) }

( 14 13 )->[15]->( 16 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u201(11){ d120(bb 0 insn -1) }u202(13){ d142(bb 0 insn -1) }u203(25){ d380(bb 0 insn -1) }u204(26){ d381(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 159
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 207 208 209
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 159
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 207 208 209
;; live  kill	 14 [lr]
;; rd  in  	(73)
19, 21, 26, 66, 93, 119, 120, 141, 142, 360, 363, 380, 381, 2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410, 2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459, 2471, 2472, 2473
;; rd  gen 	(4)
18, 2460, 2461, 2462
;; rd  kill	(24)
143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 2460, 2461, 2462
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 159
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 159
;; rd  out 	(74)
18, 66, 93, 119, 120, 141, 142, 360, 363, 380, 381, 2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410, 2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459, 2460, 2461, 2462, 2471, 2472, 2473
;;  UD chains for artificial uses
;;   reg 11 { d120(bb 0 insn -1) }
;;   reg 13 { d142(bb 0 insn -1) }
;;   reg 25 { d380(bb 0 insn -1) }
;;   reg 26 { d381(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 199
;;      reg 25 { d380(bb 0 insn -1) }
;;   UD chains for insn luid 3 uid 202
;;      reg 207 { d2460(bb 15 insn 199) }
;;   eq_note reg 25 { }
;;   UD chains for insn luid 4 uid 203
;;      reg 13 { d142(bb 0 insn -1) }
;;      reg 0 { d3(bb 15 insn 200) }
;;      reg 1 { d38(bb 15 insn 201) }
;;      reg 2 { d75(bb 15 insn 202) }
;;   UD chains for insn luid 5 uid 205
;;      reg 13 { d142(bb 0 insn -1) }
;;   UD chains for insn luid 6 uid 206
;;      reg 209 { d2462(bb 15 insn 205) }
;;   eq_note reg 13 { }
;;   UD chains for insn luid 7 uid 207
;;      reg 151 { d2421(bb 7 insn 111) }
;;      reg 208 { d2461(bb 15 insn 206) }

( 4 6 15 )->[16]->( 17 18 )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u217(11){ d120(bb 0 insn -1) }u218(13){ d142(bb 0 insn -1) }u219(25){ d380(bb 0 insn -1) }u220(26){ d381(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 159
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 212 213 214 215 216
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 159
;; live  gen 	 0 [r0] 24 [cc] 212 213 214 215 216
;; live  kill	 14 [lr]
;; rd  in  	(78)
18, 26, 30, 66, 93, 119, 120, 141, 142, 360, 363, 368, 373, 380, 381, 2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410, 2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459, 2460, 2461, 2462, 2471, 2472, 2473
;; rd  gen 	(6)
354, 2463, 2464, 2465, 2466, 2467
;; rd  kill	(26)
143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 2463, 2464, 2465, 2466, 2467
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 159
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 159
;; rd  out 	(80)
18, 26, 30, 66, 93, 119, 120, 141, 142, 354, 380, 381, 2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410, 2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459, 2460, 2461, 2462, 2463, 2464, 2465, 2466, 2467, 2471, 2472, 2473
;;  UD chains for artificial uses
;;   reg 11 { d120(bb 0 insn -1) }
;;   reg 13 { d142(bb 0 insn -1) }
;;   reg 25 { d380(bb 0 insn -1) }
;;   reg 26 { d381(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 211
;;      reg 13 { d142(bb 0 insn -1) }
;;      reg 0 { d17(bb 16 insn 210) }
;;   UD chains for insn luid 3 uid 213
;;      reg 13 { d142(bb 0 insn -1) }
;;      reg 0 { d15(bb 16 insn 212) }
;;   UD chains for insn luid 5 uid 217
;;      reg 13 { d142(bb 0 insn -1) }
;;      reg 0 { d2(bb 16 insn 216) }
;;   UD chains for insn luid 6 uid 218
;;      reg 13 { d142(bb 0 insn -1) }
;;   UD chains for insn luid 7 uid 220
;;      reg 13 { d142(bb 0 insn -1) }
;;   UD chains for insn luid 8 uid 221
;;      reg 213 { d2464(bb 16 insn 220) }
;;   eq_note reg 13 { }
;;   UD chains for insn luid 9 uid 222
;;      reg 212 { d2463(bb 16 insn 221) }
;;   UD chains for insn luid 10 uid 223
;;      reg 215 { d2466(bb 16 insn 222) }
;;   UD chains for insn luid 11 uid 224
;;      reg 216 { d2467(bb 16 insn 223) }
;;   eq_note reg 215 { }
;;   UD chains for insn luid 12 uid 225
;;      reg 214 { d2465(bb 16 insn 224) }
;;   UD chains for insn luid 13 uid 226
;;      reg 24 { d354(bb 16 insn 225) }

( 16 )->[17]->( )
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u237(11){ d120(bb 0 insn -1) }u238(13){ d142(bb 0 insn -1) }u239(25){ d380(bb 0 insn -1) }u240(26){ d381(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]
;; rd  in  	(80)
18, 26, 30, 66, 93, 119, 120, 141, 142, 354, 380, 381, 2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410, 2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459, 2460, 2461, 2462, 2463, 2464, 2465, 2466, 2467, 2471, 2472, 2473
;; rd  gen 	(0)

;; rd  kill	(21)
143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163
;; lr  out 	 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(80)
18, 26, 30, 66, 93, 119, 120, 141, 142, 354, 380, 381, 2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410, 2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459, 2460, 2461, 2462, 2463, 2464, 2465, 2466, 2467, 2471, 2472, 2473
;;  UD chains for artificial uses
;;   reg 11 { d120(bb 0 insn -1) }
;;   reg 13 { d142(bb 0 insn -1) }
;;   reg 25 { d380(bb 0 insn -1) }
;;   reg 26 { d381(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 230
;;      reg 13 { d142(bb 0 insn -1) }
;;      reg 0 { d1(bb 17 insn 229) }

( 16 )->[18]->( 19 20 )
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u243(11){ d120(bb 0 insn -1) }u244(13){ d142(bb 0 insn -1) }u245(25){ d380(bb 0 insn -1) }u246(26){ d381(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 159
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 218 219
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 159
;; live  gen 	 24 [cc] 218 219
;; live  kill	
;; rd  in  	(80)
18, 26, 30, 66, 93, 119, 120, 141, 142, 354, 380, 381, 2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410, 2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459, 2460, 2461, 2462, 2463, 2464, 2465, 2466, 2467, 2471, 2472, 2473
;; rd  gen 	(3)
352, 2468, 2469
;; rd  kill	(2)
2468, 2469
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 159
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 159
;; rd  out 	(82)
18, 26, 30, 66, 93, 119, 120, 141, 142, 352, 380, 381, 2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410, 2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459, 2460, 2461, 2462, 2463, 2464, 2465, 2466, 2467, 2468, 2469, 2471, 2472, 2473
;;  UD chains for artificial uses
;;   reg 11 { d120(bb 0 insn -1) }
;;   reg 13 { d142(bb 0 insn -1) }
;;   reg 25 { d380(bb 0 insn -1) }
;;   reg 26 { d381(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 235
;;      reg 218 { d2468(bb 18 insn 234) }
;;   UD chains for insn luid 2 uid 236
;;      reg 219 { d2469(bb 18 insn 235) }
;;   UD chains for insn luid 3 uid 237
;;      reg 24 { d352(bb 18 insn 236) }

( 18 )->[19]->( )
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u250(11){ d120(bb 0 insn -1) }u251(13){ d142(bb 0 insn -1) }u252(25){ d380(bb 0 insn -1) }u253(26){ d381(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]
;; rd  in  	(82)
18, 26, 30, 66, 93, 119, 120, 141, 142, 352, 380, 381, 2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410, 2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459, 2460, 2461, 2462, 2463, 2464, 2465, 2466, 2467, 2468, 2469, 2471, 2472, 2473
;; rd  gen 	(0)

;; rd  kill	(21)
143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163
;; lr  out 	 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(82)
18, 26, 30, 66, 93, 119, 120, 141, 142, 352, 380, 381, 2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410, 2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459, 2460, 2461, 2462, 2463, 2464, 2465, 2466, 2467, 2468, 2469, 2471, 2472, 2473
;;  UD chains for artificial uses
;;   reg 11 { d120(bb 0 insn -1) }
;;   reg 13 { d142(bb 0 insn -1) }
;;   reg 25 { d380(bb 0 insn -1) }
;;   reg 26 { d381(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 241
;;      reg 13 { d142(bb 0 insn -1) }
;;      reg 0 { d0(bb 19 insn 240) }

( 18 )->[20]->( 21 22 )
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u256(11){ d120(bb 0 insn -1) }u257(13){ d142(bb 0 insn -1) }u258(25){ d380(bb 0 insn -1) }u259(26){ d381(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 159
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 159
;; lr  def 	 24 [cc] 221
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 159
;; live  gen 	 24 [cc] 221
;; live  kill	
;; rd  in  	(82)
18, 26, 30, 66, 93, 119, 120, 141, 142, 352, 380, 381, 2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410, 2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459, 2460, 2461, 2462, 2463, 2464, 2465, 2466, 2467, 2468, 2469, 2471, 2472, 2473
;; rd  gen 	(2)
350, 2470
;; rd  kill	(1)
2470
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(83)
18, 26, 30, 66, 93, 119, 120, 141, 142, 350, 380, 381, 2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410, 2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459, 2460, 2461, 2462, 2463, 2464, 2465, 2466, 2467, 2468, 2469, 2470, 2471, 2472, 2473
;;  UD chains for artificial uses
;;   reg 11 { d120(bb 0 insn -1) }
;;   reg 13 { d142(bb 0 insn -1) }
;;   reg 25 { d380(bb 0 insn -1) }
;;   reg 26 { d381(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 246
;;      reg 159 { d2427(bb 4 insn 50) }
;;      reg 221 { d2470(bb 20 insn 245) }
;;   eq_note reg 159 { }
;;   UD chains for insn luid 2 uid 247
;;      reg 24 { d350(bb 20 insn 246) }

( 20 )->[21]->( )
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u264(11){ d120(bb 0 insn -1) }u265(13){ d142(bb 0 insn -1) }u266(25){ d380(bb 0 insn -1) }u267(26){ d381(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]
;; rd  in  	(83)
18, 26, 30, 66, 93, 119, 120, 141, 142, 350, 380, 381, 2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410, 2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459, 2460, 2461, 2462, 2463, 2464, 2465, 2466, 2467, 2468, 2469, 2470, 2471, 2472, 2473
;; rd  gen 	(0)

;; rd  kill	(21)
143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163
;; lr  out 	 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(83)
18, 26, 30, 66, 93, 119, 120, 141, 142, 350, 380, 381, 2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410, 2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459, 2460, 2461, 2462, 2463, 2464, 2465, 2466, 2467, 2468, 2469, 2470, 2471, 2472, 2473
;;  UD chains for artificial uses
;;   reg 11 { d120(bb 0 insn -1) }
;;   reg 13 { d142(bb 0 insn -1) }
;;   reg 25 { d380(bb 0 insn -1) }
;;   reg 26 { d381(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 250
;;      reg 13 { d142(bb 0 insn -1) }
;;      reg 0 { d9(bb 21 insn 249) }

( 20 )->[22]->( 1 )
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u270(11){ d120(bb 0 insn -1) }u271(13){ d142(bb 0 insn -1) }u272(25){ d380(bb 0 insn -1) }u273(26){ d381(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(83)
18, 26, 30, 66, 93, 119, 120, 141, 142, 350, 380, 381, 2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410, 2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459, 2460, 2461, 2462, 2463, 2464, 2465, 2466, 2467, 2468, 2469, 2470, 2471, 2472, 2473
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(83)
18, 26, 30, 66, 93, 119, 120, 141, 142, 350, 380, 381, 2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410, 2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459, 2460, 2461, 2462, 2463, 2464, 2465, 2466, 2467, 2468, 2469, 2470, 2471, 2472, 2473
;;  UD chains for artificial uses
;;   reg 11 { d120(bb 0 insn -1) }
;;   reg 13 { d142(bb 0 insn -1) }
;;   reg 25 { d380(bb 0 insn -1) }
;;   reg 26 { d381(bb 0 insn -1) }

( 22 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u274(11){ d120(bb 0 insn -1) }u275(13){ d142(bb 0 insn -1) }u276(14){ }u277(25){ d380(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(83)
18, 26, 30, 66, 93, 119, 120, 141, 142, 350, 380, 381, 2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410, 2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459, 2460, 2461, 2462, 2463, 2464, 2465, 2466, 2467, 2468, 2469, 2470, 2471, 2472, 2473
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(83)
18, 26, 30, 66, 93, 119, 120, 141, 142, 350, 380, 381, 2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410, 2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459, 2460, 2461, 2462, 2463, 2464, 2465, 2466, 2467, 2468, 2469, 2470, 2471, 2472, 2473
;;  UD chains for artificial uses
;;   reg 11 { d120(bb 0 insn -1) }
;;   reg 13 { d142(bb 0 insn -1) }
;;   reg 14 { }
;;   reg 25 { d380(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 20 to worklist
  Adding insn 16 to worklist
  Adding insn 12 to worklist
  Adding insn 24 to worklist
  Adding insn 53 to worklist
  Adding insn 49 to worklist
  Adding insn 44 to worklist
  Adding insn 42 to worklist
  Adding insn 40 to worklist
  Adding insn 34 to worklist
  Adding insn 28 to worklist
  Adding insn 70 to worklist
  Adding insn 66 to worklist
  Adding insn 61 to worklist
  Adding insn 57 to worklist
  Adding insn 55 to worklist
  Adding insn 79 to worklist
  Adding insn 272 to worklist
  Adding insn 116 to worklist
  Adding insn 93 to worklist
  Adding insn 90 to worklist
  Adding insn 125 to worklist
  Adding insn 274 to worklist
  Adding insn 130 to worklist
  Adding insn 128 to worklist
  Adding insn 140 to worklist
  Adding insn 145 to worklist
  Adding insn 276 to worklist
  Adding insn 162 to worklist
  Adding insn 278 to worklist
  Adding insn 176 to worklist
  Adding insn 194 to worklist
  Adding insn 207 to worklist
  Adding insn 203 to worklist
  Adding insn 226 to worklist
  Adding insn 218 to worklist
  Adding insn 217 to worklist
  Adding insn 213 to worklist
  Adding insn 211 to worklist
  Adding insn 230 to worklist
  Adding insn 237 to worklist
  Adding insn 241 to worklist
  Adding insn 247 to worklist
  Adding insn 250 to worklist
Finished finding needed instructions:
Processing use of (reg 13 sp) in insn 250:
Processing use of (reg 0 r0) in insn 250:
  Adding insn 249 to worklist
Processing use of (reg 24 cc) in insn 247:
  Adding insn 246 to worklist
Processing use of (reg 159 [ ret ]) in insn 246:
  Adding insn 50 to worklist
Processing use of (reg 221) in insn 246:
  Adding insn 245 to worklist
Processing use of (reg 0 r0) in insn 50:
Processing use of (reg 13 sp) in insn 241:
Processing use of (reg 0 r0) in insn 241:
  Adding insn 240 to worklist
Processing use of (reg 24 cc) in insn 237:
  Adding insn 236 to worklist
Processing use of (reg 219 [ panic_on_oops ]) in insn 236:
  Adding insn 235 to worklist
Processing use of (reg 218) in insn 235:
  Adding insn 234 to worklist
Processing use of (reg 13 sp) in insn 230:
Processing use of (reg 0 r0) in insn 230:
  Adding insn 229 to worklist
Processing use of (reg 13 sp) in insn 211:
Processing use of (reg 0 r0) in insn 211:
  Adding insn 210 to worklist
Processing use of (reg 13 sp) in insn 213:
Processing use of (reg 0 r0) in insn 213:
  Adding insn 212 to worklist
Processing use of (reg 13 sp) in insn 217:
Processing use of (reg 0 r0) in insn 217:
  Adding insn 216 to worklist
Processing use of (reg 13 sp) in insn 218:
Processing use of (reg 24 cc) in insn 226:
  Adding insn 225 to worklist
Processing use of (reg 214) in insn 225:
  Adding insn 224 to worklist
Processing use of (reg 216) in insn 224:
  Adding insn 223 to worklist
Processing use of (reg 215 [ <variable>.preempt_count ]) in insn 223:
  Adding insn 222 to worklist
Processing use of (reg 212) in insn 222:
  Adding insn 221 to worklist
Processing use of (reg 213) in insn 221:
  Adding insn 220 to worklist
Processing use of (reg 13 sp) in insn 220:
Processing use of (reg 13 sp) in insn 203:
Processing use of (reg 0 r0) in insn 203:
  Adding insn 200 to worklist
Processing use of (reg 1 r1) in insn 203:
  Adding insn 201 to worklist
Processing use of (reg 2 r2) in insn 203:
  Adding insn 202 to worklist
Processing use of (reg 207) in insn 202:
  Adding insn 199 to worklist
Processing use of (reg 25 sfp) in insn 199:
Processing use of (reg 151 [ fs ]) in insn 207:
  Adding insn 111 to worklist
Processing use of (reg 208) in insn 207:
  Adding insn 206 to worklist
Processing use of (reg 209) in insn 206:
  Adding insn 205 to worklist
Processing use of (reg 13 sp) in insn 205:
Processing use of (reg 193) in insn 111:
  Adding insn 110 to worklist
Processing use of (reg 194) in insn 110:
  Adding insn 109 to worklist
Processing use of (reg 13 sp) in insn 109:
Processing use of (reg 24 cc) in insn 194:
  Adding insn 193 to worklist
Processing use of (reg 149 [ i ]) in insn 193:
  Adding insn 119 to worklist
  Adding insn 166 to worklist
Processing use of (reg 155 [ iftmp.278 ]) in insn 193:
  Adding insn 268 to worklist
Processing use of (reg 24 cc) in insn 268:
  Adding insn 267 to worklist
Processing use of (reg 153 [ thumb ]) in insn 267:
  Adding insn 96 to worklist
Processing use of (reg 192 [ <variable>.uregs+64 ]) in insn 96:
  Adding insn 95 to worklist
Processing use of (reg 162 [ regs ]) in insn 95:
  Adding insn 4 to worklist
Processing use of (reg 1 r1) in insn 4:
Processing use of (reg 149 [ i ]) in insn 166:
Processing use of (reg 13 sp) in insn 176:
Processing use of (reg 0 r0) in insn 176:
  Adding insn 174 to worklist
Processing use of (reg 1 r1) in insn 176:
  Adding insn 175 to worklist
Processing use of (reg 150 [ p ]) in insn 174:
  Adding insn 120 to worklist
  Adding insn 165 to worklist
Processing use of (reg 150 [ p ]) in insn 165:
Processing use of (reg 203) in insn 165:
  Adding insn 163 to worklist
Processing use of (reg 0 r0) in insn 163:
Processing use of (reg 25 sfp) in insn 120:
Processing use of (reg 13 sp) in insn 162:
Processing use of (reg 0 r0) in insn 162:
  Adding insn 158 to worklist
Processing use of (reg 1 r1) in insn 162:
  Adding insn 159 to worklist
Processing use of (reg 2 r2) in insn 162:
  Adding insn 160 to worklist
Processing use of (reg 3 r3) in insn 162:
  Adding insn 161 to worklist
Processing use of (reg 148 [ val ]) in insn 161:
  Adding insn 133 to worklist
Processing use of (subreg (reg 201) 0) in insn 133:
  Adding insn 132 to worklist
Processing use of (reg 145 [ __b1 ]) in insn 132:
Processing use of (reg 200) in insn 132:
  Adding insn 131 to worklist
Processing use of (reg 144 [ __b2 ]) in insn 131:
Processing use of (reg 152 [ width ]) in insn 160:
  Adding insn 262 to worklist
Processing use of (reg 24 cc) in insn 262:
  Adding insn 261 to worklist
Processing use of (reg 153 [ thumb ]) in insn 261:
Processing use of (reg 157 [ iftmp.277 ]) in insn 159:
  Adding insn 266 to worklist
Processing use of (reg 24 cc) in insn 266:
  Adding insn 265 to worklist
Processing use of (reg 225) in insn 266:
  Adding insn 263 to worklist
Processing use of (reg 226) in insn 266:
  Adding insn 264 to worklist
Processing use of (reg 149 [ i ]) in insn 265:
Processing use of (reg 150 [ p ]) in insn 158:
Processing use of (reg 24 cc) in insn 145:
  Adding insn 144 to worklist
Processing use of (reg 147 [ bad ]) in insn 144:
  Adding insn 134 to worklist
  Adding insn 141 to worklist
Processing use of (reg 143 [ __gu_err ]) in insn 141:
Processing use of (reg 146 [ __gu_err ]) in insn 134:
Processing use of (reg 134 [ ivtmp.756 ]) in insn 140:
  Adding insn 118 to worklist
  Adding insn 168 to worklist
Processing use of (reg 153 [ thumb ]) in insn 140:
Processing use of (reg 134 [ ivtmp.756 ]) in insn 168:
Processing use of (reg 154 [ addr ]) in insn 118:
  Adding insn 94 to worklist
Processing use of (reg 162 [ regs ]) in insn 94:
Processing use of (reg 135 [ ivtmp.752 ]) in insn 128:
  Adding insn 117 to worklist
  Adding insn 167 to worklist
Processing use of (reg 224) in insn 128:
  Adding insn 127 to worklist
Processing use of (reg 197) in insn 127:
  Adding insn 115 to worklist
Processing use of (reg 135 [ ivtmp.752 ]) in insn 167:
Processing use of (reg 154 [ addr ]) in insn 117:
Processing use of (reg 146 [ __gu_err ]) in insn 130:
Processing use of (reg 199) in insn 130:
  Adding insn 129 to worklist
Processing use of (reg 135 [ ivtmp.752 ]) in insn 129:
Processing use of (reg 24 cc) in insn 125:
  Adding insn 124 to worklist
Processing use of (reg 153 [ thumb ]) in insn 124:
Processing use of (reg 13 sp) in insn 90:
Processing use of (reg 0 r0) in insn 90:
  Adding insn 86 to worklist
Processing use of (reg 1 r1) in insn 90:
  Adding insn 87 to worklist
Processing use of (reg 2 r2) in insn 90:
  Adding insn 88 to worklist
Processing use of (reg 3 r3) in insn 90:
  Adding insn 89 to worklist
Processing use of (reg 190) in insn 89:
  Adding insn 85 to worklist
Processing use of (reg 191 [ <variable>.stack ]) in insn 85:
  Adding insn 84 to worklist
Processing use of (reg 138 [ tsk ]) in insn 84:
  Adding insn 29 to worklist
Processing use of (reg 160 [ thread ]) in insn 29:
  Adding insn 11 to worklist
Processing use of (reg 164) in insn 11:
  Adding insn 10 to worklist
Processing use of (reg 13 sp) in insn 10:
Processing use of (reg 162 [ regs ]) in insn 88:
Processing use of (reg 13 sp) in insn 93:
Processing use of (reg 0 r0) in insn 93:
  Adding insn 91 to worklist
Processing use of (reg 1 r1) in insn 93:
  Adding insn 92 to worklist
Processing use of (reg 138 [ tsk ]) in insn 92:
Processing use of (reg 162 [ regs ]) in insn 91:
Processing use of (reg 193) in insn 116:
Processing use of (reg 197) in insn 116:
Processing use of (reg 24 cc) in insn 79:
  Adding insn 78 to worklist
Processing use of (reg 185) in insn 78:
  Adding insn 77 to worklist
Processing use of (reg 187) in insn 77:
  Adding insn 76 to worklist
Processing use of (reg 186 [ <variable>.preempt_count ]) in insn 76:
  Adding insn 75 to worklist
Processing use of (reg 183) in insn 75:
  Adding insn 74 to worklist
Processing use of (reg 184) in insn 74:
  Adding insn 73 to worklist
Processing use of (reg 13 sp) in insn 73:
Processing use of (reg 13 sp) in insn 55:
Processing use of (reg 13 sp) in insn 57:
Processing use of (reg 0 r0) in insn 57:
  Adding insn 56 to worklist
Processing use of (reg 162 [ regs ]) in insn 56:
Processing use of (reg 13 sp) in insn 61:
Processing use of (reg 180) in insn 61:
  Adding insn 60 to worklist
Processing use of (reg 160 [ thread ]) in insn 60:
Processing use of (reg 13 sp) in insn 66:
Processing use of (reg 0 r0) in insn 66:
  Adding insn 62 to worklist
Processing use of (reg 1 r1) in insn 66:
  Adding insn 63 to worklist
Processing use of (reg 2 r2) in insn 66:
  Adding insn 64 to worklist
Processing use of (reg 3 r3) in insn 66:
  Adding insn 65 to worklist
Processing use of (reg 138 [ tsk ]) in insn 65:
Processing use of (reg 179) in insn 64:
  Adding insn 59 to worklist
Processing use of (reg 138 [ tsk ]) in insn 59:
Processing use of (reg 24 cc) in insn 70:
  Adding insn 69 to worklist
Processing use of (reg 181) in insn 69:
  Adding insn 68 to worklist
Processing use of (reg 182 [ <variable>.uregs+64 ]) in insn 68:
  Adding insn 67 to worklist
Processing use of (reg 162 [ regs ]) in insn 67:
Processing use of (reg 13 sp) in insn 28:
Processing use of (reg 0 r0) in insn 28:
  Adding insn 27 to worklist
Processing use of (reg 137 [ die_counter.280 ]) in insn 34:
  Adding insn 32 to worklist
Processing use of (reg 171) in insn 34:
  Adding insn 30 to worklist
Processing use of (reg 172 [ die_counter ]) in insn 32:
  Adding insn 31 to worklist
Processing use of (reg 171) in insn 31:
Processing use of (reg 13 sp) in insn 40:
Processing use of (reg 0 r0) in insn 40:
  Adding insn 36 to worklist
Processing use of (reg 1 r1) in insn 40:
  Adding insn 37 to worklist
Processing use of (reg 2 r2) in insn 40:
  Adding insn 38 to worklist
Processing use of (reg 3 r3) in insn 40:
  Adding insn 39 to worklist
Processing use of (reg 137 [ die_counter.280 ]) in insn 39:
Processing use of (reg 163 [ err ]) in insn 38:
  Adding insn 5 to worklist
Processing use of (reg 2 r2) in insn 5:
Processing use of (reg 161 [ str ]) in insn 37:
  Adding insn 3 to worklist
Processing use of (reg 0 r0) in insn 3:
Processing use of (reg 13 sp) in insn 42:
Processing use of (reg 175 [ <variable>.thread.trap_no ]) in insn 42:
  Adding insn 41 to worklist
Processing use of (reg 138 [ tsk ]) in insn 41:
Processing use of (reg 13 sp) in insn 44:
Processing use of (reg 176) in insn 44:
  Adding insn 43 to worklist
Processing use of (reg 13 sp) in insn 49:
Processing use of (reg 0 r0) in insn 49:
  Adding insn 45 to worklist
Processing use of (reg 1 r1) in insn 49:
  Adding insn 46 to worklist
Processing use of (reg 2 r2) in insn 49:
  Adding insn 47 to worklist
Processing use of (reg 3 r3) in insn 49:
  Adding insn 48 to worklist
Processing use of (reg 163 [ err ]) in insn 48:
Processing use of (reg 162 [ regs ]) in insn 47:
Processing use of (reg 161 [ str ]) in insn 46:
Processing use of (reg 24 cc) in insn 53:
  Adding insn 52 to worklist
Processing use of (reg 159 [ ret ]) in insn 52:
Processing use of (reg 177) in insn 52:
  Adding insn 51 to worklist
Processing use of (reg 167) in insn 24:
  Adding insn 17 to worklist
Processing use of (reg 170) in insn 24:
  Adding insn 23 to worklist
Processing use of (reg 13 sp) in insn 12:
Processing use of (reg 13 sp) in insn 16:
Processing use of (reg 0 r0) in insn 16:
  Adding insn 15 to worklist
Processing use of (reg 24 cc) in insn 20:
  Adding insn 19 to worklist
Processing use of (reg 168 [ console_printk ]) in insn 19:
  Adding insn 18 to worklist
Processing use of (reg 167) in insn 18:


die

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={38d,20u} r1={29d,9u} r2={27d,7u} r3={26d,5u} r11={1d,22u} r12={21d} r13={1d,50u,5d} r14={21d,1u} r15={20d} r16={20d} r17={20d} r18={20d} r19={20d} r20={20d} r21={20d} r22={20d} r23={20d} r24={36d,13u} r25={1d,24u,1d} r26={1d,21u} r27={20d} r28={20d} r29={20d} r30={20d} r31={20d} r32={20d} r33={20d} r34={20d} r35={20d} r36={20d} r37={20d} r38={20d} r39={20d} r40={20d} r41={20d} r42={20d} r43={20d} r44={20d} r45={20d} r46={20d} r47={20d} r48={20d} r49={20d} r50={20d} r51={20d} r52={20d} r53={20d} r54={20d} r55={20d} r56={20d} r57={20d} r58={20d} r59={20d} r60={20d} r61={20d} r62={20d} r63={20d} r64={20d} r65={20d} r66={20d} r67={20d} r68={20d} r69={20d} r70={20d} r71={20d} r72={20d} r73={20d} r74={20d} r75={20d} r76={20d} r77={20d} r78={20d} r79={20d} r80={20d} r81={20d} r82={20d} r83={20d} r84={20d} r85={20d} r86={20d} r87={20d} r88={20d} r89={20d} r90={20d} r91={20d} r92={20d} r93={20d} r94={20d} r95={20d} r96={20d} r97={20d} r98={20d} r99={20d} r100={20d} r101={20d} r102={20d} r103={20d} r104={20d} r105={20d} r106={20d} r107={20d} r108={20d} r109={20d} r110={20d} r111={20d} r112={20d} r113={20d} r114={20d} r115={20d} r116={20d} r117={20d} r118={20d} r119={20d} r120={20d} r121={20d} r122={20d} r123={20d} r124={20d} r125={20d} r126={20d} r127={20d} r134={2d,2u} r135={2d,3u} r137={1d,2u} r138={1d,5u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={2d,2u} r147={2d,1u} r148={2d,1u} r149={2d,3u} r150={2d,3u} r151={1d,1u} r152={1d,1u} r153={1d,4u} r154={1d,2u} r155={1d,1u} r157={1d,1u} r159={1d,2u,2d} r160={1d,2u} r161={1d,2u} r162={1d,7u} r163={1d,2u} r164={1d,1u} r167={1d,2u} r168={1d,1u} r170={1d,1u} r171={1d,2u} r172={1d,1u} r175={1d,1u} r176={1d,1u} r177={1d,1u} r179={1d,1u} r180={1d,1u} r181={1d,1u} r182={1d,1u} r183={1d,1u} r184={1d,1u} r185={1d,1u} r186={1d,1u,1d} r187={1d,1u} r190={1d,1u} r191={1d,1u} r192={1d,1u} r193={1d,2u} r194={1d,1u} r197={1d,2u} r199={1d,1u} r200={1d,1u} r201={1d,1u} r203={1d,1u} r207={1d,1u} r208={1d,1u} r209={1d,1u} r212={1d,1u} r213={1d,1u} r214={1d,1u} r215={1d,1u,1d} r216={1d,1u} r218={1d,1u} r219={1d,1u} r221={1d,1u} r224={1d,1u} r225={1d,1u} r226={1d,1u} 
;;    total ref usage 2752{2474d,268u,10e} in 159{139 regular + 20 call} insns.
;; Reaching defs:

  sparse invalidated 	0, 24
  dense invalidated 	
0[0,38] 1[38,29] 2[67,27] 3[94,26] 11[120,1] 12[121,21] 13[142,1] 14[143,21] 15[164,20] 16[184,20] 17[204,20] 18[224,20] 19[244,20] 20[264,20] 21[284,20] 22[304,20] 23[324,20] 24[344,36] 25[380,1] 26[381,1] 27[382,20] 28[402,20] 29[422,20] 30[442,20] 31[462,20] 32[482,20] 33[502,20] 34[522,20] 35[542,20] 36[562,20] 37[582,20] 38[602,20] 39[622,20] 40[642,20] 41[662,20] 42[682,20] 43[702,20] 44[722,20] 45[742,20] 46[762,20] 47[782,20] 48[802,20] 49[822,20] 50[842,20] 51[862,20] 52[882,20] 53[902,20] 54[922,20] 55[942,20] 56[962,20] 57[982,20] 58[1002,20] 59[1022,20] 60[1042,20] 61[1062,20] 62[1082,20] 63[1102,20] 64[1122,20] 65[1142,20] 66[1162,20] 67[1182,20] 68[1202,20] 69[1222,20] 70[1242,20] 71[1262,20] 72[1282,20] 73[1302,20] 74[1322,20] 75[1342,20] 76[1362,20] 77[1382,20] 78[1402,20] 79[1422,20] 80[1442,20] 81[1462,20] 82[1482,20] 83[1502,20] 84[1522,20] 85[1542,20] 86[1562,20] 87[1582,20] 88[1602,20] 89[1622,20] 90[1642,20] 91[1662,20] 92[1682,20] 93[1702,20] 94[1722,20] 95[1742,20] 96[1762,20] 97[1782,20] 98[1802,20] 99[1822,20] 100[1842,20] 101[1862,20] 102[1882,20] 103[1902,20] 104[1922,20] 105[1942,20] 106[1962,20] 107[1982,20] 108[2002,20] 109[2022,20] 110[2042,20] 111[2062,20] 112[2082,20] 113[2102,20] 114[2122,20] 115[2142,20] 116[2162,20] 117[2182,20] 118[2202,20] 119[2222,20] 120[2242,20] 121[2262,20] 122[2282,20] 123[2302,20] 124[2322,20] 125[2342,20] 126[2362,20] 127[2382,20] 134[2402,2] 135[2404,2] 137[2406,1] 138[2407,1] 143[2408,1] 144[2409,1] 145[2410,1] 146[2411,2] 147[2413,2] 148[2415,2] 149[2417,2] 150[2419,2] 151[2421,1] 152[2422,1] 153[2423,1] 154[2424,1] 155[2425,1] 157[2426,1] 159[2427,1] 160[2428,1] 161[2429,1] 162[2430,1] 163[2431,1] 164[2432,1] 167[2433,1] 168[2434,1] 170[2435,1] 171[2436,1] 172[2437,1] 175[2438,1] 176[2439,1] 177[2440,1] 179[2441,1] 180[2442,1] 181[2443,1] 182[2444,1] 183[2445,1] 184[2446,1] 185[2447,1] 186[2448,1] 187[2449,1] 190[2450,1] 191[2451,1] 192[2452,1] 193[2453,1] 194[2454,1] 197[2455,1] 199[2456,1] 200[2457,1] 201[2458,1] 203[2459,1] 207[2460,1] 208[2461,1] 209[2462,1] 212[2463,1] 213[2464,1] 214[2465,1] 215[2466,1] 216[2467,1] 218[2468,1] 219[2469,1] 221[2470,1] 224[2471,1] 225[2472,1] 226[2473,1] 
(note 2 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 160 161 162 163 164 167 168
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 24 [cc] 160 161 162 163 164 167 168
;; live  kill	 14 [lr]
;; rd  in  	(10)
37, 66, 93, 119, 120, 141, 142, 163, 380, 381
;; rd  gen 	(8)
377, 2428, 2429, 2430, 2431, 2432, 2433, 2434
;; rd  kill	(28)
143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 2428, 2429, 2430, 2431, 2432, 2433, 2434

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 2 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 3 7 4 2 arch/arm/kernel/traps.c:264 (set (reg/v/f:SI 161 [ str ])
        (reg:SI 0 r0 [ str ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ str ])
        (nil)))

(insn 4 3 5 2 arch/arm/kernel/traps.c:264 (set (reg/v/f:SI 162 [ regs ])
        (reg:SI 1 r1 [ regs ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ regs ])
        (nil)))

(insn 5 4 6 2 arch/arm/kernel/traps.c:264 (set (reg/v:SI 163 [ err ])
        (reg:SI 2 r2 [ err ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ err ])
        (nil)))

(note 6 5 10 2 NOTE_INSN_FUNCTION_BEG)

(insn 10 6 11 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 164)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 11 10 12 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/v/f:SI 160 [ thread ])
        (and:SI (reg:SI 164)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 164)
        (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
                (const_int -8192 [0xffffffffffffe000]))
            (nil))))

(call_insn 12 11 15 2 arch/arm/kernel/traps.c:268 (parallel [
            (call (mem:SI (symbol_ref:SI ("oops_enter") [flags 0x41] <function_decl 0x10aa9d80 oops_enter>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(insn 15 12 16 2 include/linux/spinlock.h:310 (set (reg:SI 0 r0)
        (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 12 [0xc])))) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 12 [0xc])))
        (nil)))

(call_insn 16 15 17 2 include/linux/spinlock.h:310 (parallel [
            (call (mem:SI (symbol_ref:SI ("_raw_spin_lock_irq") [flags 0x41] <function_decl 0x10b28b00 _raw_spin_lock_irq>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 17 16 18 2 include/linux/printk.h:41 (set (reg/f:SI 167)
        (symbol_ref:SI ("console_printk") [flags 0xc0] <var_decl 0x10a9ad20 console_printk>)) 167 {*arm_movsi_insn} (nil))

(insn 18 17 19 2 include/linux/printk.h:41 (set (reg:SI 168 [ console_printk ])
        (mem/s/j:SI (reg/f:SI 167) [0 console_printk+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/j:SI (symbol_ref:SI ("console_printk") [flags 0xc0] <var_decl 0x10a9ad20 console_printk>) [0 console_printk+0 S4 A32])
        (nil)))

(insn 19 18 20 2 include/linux/printk.h:41 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 168 [ console_printk ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 168 [ console_printk ])
        (nil)))

(jump_insn 20 19 21 2 include/linux/printk.h:41 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 25)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 161 162 163 167
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 161 162 163 167
;; rd  out 	(17)
37, 66, 93, 119, 120, 141, 142, 377, 380, 381, 2428, 2429, 2430, 2431, 2432, 2433, 2434


;; Succ edge  3 [50.0%]  (fallthru)
;; Succ edge  4 [50.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u16(11){ }u17(13){ }u18(25){ }u19(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 161 162 163 167
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167
;; lr  def 	 170
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 161 162 163 167
;; live  gen 	 170
;; live  kill	
;; rd  in  	(17)
37, 66, 93, 119, 120, 141, 142, 377, 380, 381, 2428, 2429, 2430, 2431, 2432, 2433, 2434
;; rd  gen 	(1)
2435
;; rd  kill	(1)
2435

;; Pred edge  2 [50.0%]  (fallthru)
(note 21 20 23 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 23 21 24 3 include/linux/printk.h:42 (set (reg:SI 170)
        (const_int 15 [0xf])) 167 {*arm_movsi_insn} (nil))

(insn 24 23 25 3 include/linux/printk.h:42 (set (mem/s/j:SI (reg/f:SI 167) [0 console_printk+0 S4 A32])
        (reg:SI 170)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 170)
        (expr_list:REG_DEAD (reg/f:SI 167)
            (expr_list:REG_EQUAL (const_int 15 [0xf])
                (nil)))))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 161 162 163
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 161 162 163
;; rd  out 	(18)
37, 66, 93, 119, 120, 141, 142, 377, 380, 381, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 3 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u22(11){ }u23(13){ }u24(25){ }u25(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 161 162 163
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 161 162 163
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 137 138 159 171 172 175 176 177
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 161 162 163
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc] 137 138 159 171 172 175 176 177
;; live  kill	 14 [lr]
;; rd  in  	(18)
37, 66, 93, 119, 120, 141, 142, 377, 380, 381, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435
;; rd  gen 	(10)
30, 373, 2406, 2407, 2427, 2436, 2437, 2438, 2439, 2440
;; rd  kill	(29)
143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 2406, 2407, 2427, 2436, 2437, 2438, 2439, 2440

;; Pred edge  3 [100.0%]  (fallthru)
;; Pred edge  2 [50.0%] 
(code_label 25 24 26 4 77 "" [1 uses])

(note 26 25 27 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 27 26 28 4 arch/arm/kernel/traps.c:272 (set (reg:SI 0 r0)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(call_insn 28 27 29 4 arch/arm/kernel/traps.c:272 (parallel [
            (call (mem:SI (symbol_ref:SI ("bust_spinlocks") [flags 0x41] <function_decl 0x10ad6080 bust_spinlocks>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 29 28 30 4 arch/arm/kernel/traps.c:231 (set (reg/v/f:SI 138 [ tsk ])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 160 [ thread ])
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 30 29 31 4 arch/arm/kernel/traps.c:235 (set (reg/f:SI 171)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 31 30 32 4 arch/arm/kernel/traps.c:235 (set (reg:SI 172 [ die_counter ])
        (mem/c/i:SI (plus:SI (reg/f:SI 171)
                (const_int 20 [0x14])) [0 die_counter+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 20 [0x14]))) [0 die_counter+0 S4 A32])
        (nil)))

(insn 32 31 34 4 arch/arm/kernel/traps.c:235 (set (reg:SI 137 [ die_counter.280 ])
        (plus:SI (reg:SI 172 [ die_counter ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 172 [ die_counter ])
        (nil)))

(insn 34 32 36 4 arch/arm/kernel/traps.c:235 (set (mem/c/i:SI (plus:SI (reg/f:SI 171)
                (const_int 20 [0x14])) [0 die_counter+0 S4 A32])
        (reg:SI 137 [ die_counter.280 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 171)
        (nil)))

(insn 36 34 37 4 arch/arm/kernel/traps.c:235 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC17") [flags 0x82] <string_cst 0x11236c80>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC17") [flags 0x82] <string_cst 0x11236c80>)
        (nil)))

(insn 37 36 38 4 arch/arm/kernel/traps.c:235 (set (reg:SI 1 r1)
        (reg/v/f:SI 161 [ str ])) 167 {*arm_movsi_insn} (nil))

(insn 38 37 39 4 arch/arm/kernel/traps.c:235 (set (reg:SI 2 r2)
        (reg/v:SI 163 [ err ])) 167 {*arm_movsi_insn} (nil))

(insn 39 38 40 4 arch/arm/kernel/traps.c:235 (set (reg:SI 3 r3)
        (reg:SI 137 [ die_counter.280 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 137 [ die_counter.280 ])
        (nil)))

(call_insn 40 39 41 4 arch/arm/kernel/traps.c:235 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10aa9180 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_UNUSED (reg:SI 0 r0)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 41 40 42 4 arch/arm/kernel/traps.c:239 (set (reg:SI 175 [ <variable>.thread.trap_no ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 138 [ tsk ])
                (const_int 788 [0x314])) [0 <variable>.thread.trap_no+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 42 41 43 4 arch/arm/kernel/traps.c:239 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg:SI 175 [ <variable>.thread.trap_no ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 175 [ <variable>.thread.trap_no ])
        (nil)))

(insn 43 42 44 4 arch/arm/kernel/traps.c:239 (set (reg:SI 176)
        (const_int 11 [0xb])) 167 {*arm_movsi_insn} (nil))

(insn 44 43 45 4 arch/arm/kernel/traps.c:239 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 176)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 176)
        (expr_list:REG_EQUAL (const_int 11 [0xb])
            (nil))))

(insn 45 44 46 4 arch/arm/kernel/traps.c:239 (set (reg:SI 0 r0)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 46 45 47 4 arch/arm/kernel/traps.c:239 (set (reg:SI 1 r1)
        (reg/v/f:SI 161 [ str ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 161 [ str ])
        (nil)))

(insn 47 46 48 4 arch/arm/kernel/traps.c:239 (set (reg:SI 2 r2)
        (reg/v/f:SI 162 [ regs ])) 167 {*arm_movsi_insn} (nil))

(insn 48 47 49 4 arch/arm/kernel/traps.c:239 (set (reg:SI 3 r3)
        (reg/v:SI 163 [ err ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 163 [ err ])
        (nil)))

(call_insn 49 48 50 4 arch/arm/kernel/traps.c:239 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("notify_die") [flags 0x41] <function_decl 0x10bcbc80 notify_die>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 50 49 51 4 arch/arm/kernel/traps.c:239 (set (reg/v:SI 159 [ ret ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 51 50 52 4 arch/arm/kernel/traps.c:240 (set (reg:SI 177)
        (const_int 32769 [0x8001])) 167 {*arm_movsi_insn} (nil))

(insn 52 51 53 4 arch/arm/kernel/traps.c:240 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 159 [ ret ])
            (reg:SI 177))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 177)
        (expr_list:REG_EQUAL (compare:CC (reg/v:SI 159 [ ret ])
                (const_int 32769 [0x8001]))
            (nil))))

(jump_insn 53 52 54 4 arch/arm/kernel/traps.c:240 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 208)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 4 -> ( 16 5)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 159 160 162
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 159 160 162
;; rd  out 	(26)
30, 66, 93, 119, 120, 141, 142, 373, 380, 381, 2406, 2407, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440


;; Succ edge  16 [100.0%] 
;; Succ edge  5 [0.0%]  (fallthru)

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u59(11){ }u60(13){ }u61(25){ }u62(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 159 160 162
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 160 162
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 179 180 181 182
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 159 160 162
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc] 179 180 181 182
;; live  kill	 14 [lr]
;; rd  in  	(26)
30, 66, 93, 119, 120, 141, 142, 373, 380, 381, 2406, 2407, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440
;; rd  gen 	(6)
26, 369, 2441, 2442, 2443, 2444
;; rd  kill	(25)
143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 2441, 2442, 2443, 2444

;; Pred edge  4 [0.0%]  (fallthru)
(note 54 53 55 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(call_insn 55 54 56 5 arch/arm/kernel/traps.c:243 (parallel [
            (call (mem:SI (symbol_ref:SI ("print_modules") [flags 0x41] <function_decl 0x10e8fc80 print_modules>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(insn 56 55 57 5 arch/arm/kernel/traps.c:244 (set (reg:SI 0 r0)
        (reg/v/f:SI 162 [ regs ])) 167 {*arm_movsi_insn} (nil))

(call_insn 57 56 59 5 arch/arm/kernel/traps.c:244 (parallel [
            (call (mem:SI (symbol_ref:SI ("__show_regs") [flags 0x41] <function_decl 0x512f9000 __show_regs>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 59 57 60 5 arch/arm/kernel/traps.c:245 (set (reg/f:SI 179)
        (plus:SI (reg/v/f:SI 138 [ tsk ])
            (const_int 756 [0x2f4]))) 4 {*arm_addsi3} (nil))

(insn 60 59 61 5 arch/arm/kernel/traps.c:245 (set (reg/f:SI 180)
        (plus:SI (reg/v/f:SI 160 [ thread ])
            (const_int 752 [0x2f0]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/v/f:SI 160 [ thread ])
        (nil)))

(insn 61 60 62 5 arch/arm/kernel/traps.c:245 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg/f:SI 180)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 180)
        (nil)))

(insn 62 61 63 5 arch/arm/kernel/traps.c:245 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC18") [flags 0x82] <string_cst 0x11236cd0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC18") [flags 0x82] <string_cst 0x11236cd0>)
        (nil)))

(insn 63 62 64 5 arch/arm/kernel/traps.c:245 (set (reg:SI 1 r1)
        (const_int 16 [0x10])) 167 {*arm_movsi_insn} (nil))

(insn 64 63 65 5 arch/arm/kernel/traps.c:245 (set (reg:SI 2 r2)
        (reg/f:SI 179)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 179)
        (nil)))

(insn 65 64 66 5 arch/arm/kernel/traps.c:245 (set (reg:SI 3 r3)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 138 [ tsk ])
                (const_int 532 [0x214])) [0 <variable>.pid+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn 66 65 67 5 arch/arm/kernel/traps.c:245 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10aa9180 printk>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_UNUSED (reg:SI 0 r0)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 67 66 68 5 arch/arm/kernel/traps.c:248 (set (reg:SI 182 [ <variable>.uregs+64 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 162 [ regs ])
                (const_int 64 [0x40])) [0 <variable>.uregs+64 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 68 67 69 5 arch/arm/kernel/traps.c:248 (set (reg:SI 181)
        (and:SI (reg:SI 182 [ <variable>.uregs+64 ])
            (const_int 15 [0xf]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 182 [ <variable>.uregs+64 ])
        (nil)))

(insn 69 68 70 5 arch/arm/kernel/traps.c:248 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 181)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 181)
        (nil)))

(jump_insn 70 69 71 5 arch/arm/kernel/traps.c:248 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 80)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 4 [0x4])
            (nil))))
;; End of basic block 5 -> ( 7 6)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 159 162
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 159 162
;; rd  out 	(30)
26, 66, 93, 119, 120, 141, 142, 369, 380, 381, 2406, 2407, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444


;; Succ edge  7 [0.0%] 
;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u82(11){ }u83(13){ }u84(25){ }u85(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 159 162
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 183 184 185 186 187
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 159 162
;; live  gen 	 24 [cc] 183 184 185 186 187
;; live  kill	
;; rd  in  	(30)
26, 66, 93, 119, 120, 141, 142, 369, 380, 381, 2406, 2407, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444
;; rd  gen 	(6)
368, 2445, 2446, 2447, 2448, 2449
;; rd  kill	(5)
2445, 2446, 2447, 2448, 2449

;; Pred edge  5 [100.0%]  (fallthru)
(note 71 70 73 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 73 71 74 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 184)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 74 73 75 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 183)
        (and:SI (reg:SI 184)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 184)
        (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
                (const_int -8192 [0xffffffffffffe000]))
            (nil))))

(insn 75 74 76 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 186 [ <variable>.preempt_count ])
        (mem/s/j:SI (plus:SI (reg:SI 183)
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 183)
        (nil)))

(insn 76 75 77 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 187)
        (and:SI (reg:SI 186 [ <variable>.preempt_count ])
            (const_int 67108863 [0x3ffffff]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 186 [ <variable>.preempt_count ])
        (nil)))

(insn 77 76 78 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 185)
        (and:SI (reg:SI 187)
            (const_int -256 [0xffffffffffffff00]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 187)
        (expr_list:REG_EQUAL (and:SI (reg:SI 186 [ <variable>.preempt_count ])
                (const_int 67108608 [0x3ffff00]))
            (nil))))

(insn 78 77 79 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 185)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 185)
        (nil)))

(jump_insn 79 78 80 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 208)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 6 -> ( 7 16)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 159 162
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 159 162
;; rd  out 	(35)
26, 66, 93, 119, 120, 141, 142, 368, 380, 381, 2406, 2407, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449


;; Succ edge  7 [0.0%]  (fallthru)
;; Succ edge  16 [100.0%] 

;; Start of basic block ( 5 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u95(11){ }u96(13){ }u97(25){ }u98(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 159 162
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 162
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 135 149 150 151 152 153 154 190 191 192 193 194 197 224 225 226
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 159 162
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc] 134 135 149 150 151 152 153 154 190 191 192 193 194 197 224 225 226
;; live  kill	 14 [lr]
;; rd  in  	(36)
26, 66, 93, 119, 120, 141, 142, 368, 369, 380, 381, 2406, 2407, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449
;; rd  gen 	(18)
347, 2403, 2405, 2418, 2420, 2421, 2422, 2423, 2424, 2450, 2451, 2452, 2453, 2454, 2455, 2471, 2472, 2473
;; rd  kill	(42)
143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 2402, 2403, 2404, 2405, 2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2450, 2451, 2452, 2453, 2454, 2455, 2471, 2472, 2473

;; Pred edge  5 [0.0%] 
;; Pred edge  6 [0.0%]  (fallthru)
(code_label 80 79 81 7 79 "" [1 uses])

(note 81 80 84 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 84 81 85 7 arch/arm/kernel/traps.c:249 (set (reg/f:SI 191 [ <variable>.stack ])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 138 [ tsk ])
                (const_int 4 [0x4])) [0 <variable>.stack+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 85 84 86 7 arch/arm/kernel/traps.c:249 (set (reg/f:SI 190)
        (plus:SI (reg/f:SI 191 [ <variable>.stack ])
            (const_int 8192 [0x2000]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 191 [ <variable>.stack ])
        (nil)))

(insn 86 85 87 7 arch/arm/kernel/traps.c:249 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC19") [flags 0x82] <string_cst 0x112cf6a0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC19") [flags 0x82] <string_cst 0x112cf6a0>)
        (nil)))

(insn 87 86 88 7 arch/arm/kernel/traps.c:249 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC20") [flags 0x82] <string_cst 0x112d3360>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC20") [flags 0x82] <string_cst 0x112d3360>)
        (nil)))

(insn 88 87 89 7 arch/arm/kernel/traps.c:249 (set (reg:SI 2 r2)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 162 [ regs ])
                (const_int 52 [0x34])) [0 <variable>.uregs+52 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 89 88 90 7 arch/arm/kernel/traps.c:249 (set (reg:SI 3 r3)
        (reg/f:SI 190)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 190)
        (nil)))

(call_insn 90 89 91 7 arch/arm/kernel/traps.c:249 (parallel [
            (call (mem:SI (symbol_ref:SI ("dump_mem") [flags 0x3] <function_decl 0x111aa800 dump_mem>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_DEAD (reg:SI 0 r0)
                    (expr_list:REG_EH_REGION (const_int 0 [0x0])
                        (nil))))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 91 90 92 7 arch/arm/kernel/traps.c:166 (set (reg:SI 0 r0)
        (reg/v/f:SI 162 [ regs ])) 167 {*arm_movsi_insn} (nil))

(insn 92 91 93 7 arch/arm/kernel/traps.c:166 (set (reg:SI 1 r1)
        (reg/v/f:SI 138 [ tsk ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 138 [ tsk ])
        (nil)))

(call_insn 93 92 94 7 arch/arm/kernel/traps.c:166 (parallel [
            (call (mem:SI (symbol_ref:SI ("unwind_backtrace") [flags 0x41] <function_decl 0x111aa680 unwind_backtrace>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 94 93 95 7 arch/arm/kernel/traps.c:127 (set (reg/v:SI 154 [ addr ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 162 [ regs ])
                (const_int 60 [0x3c])) [0 <variable>.uregs+60 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 95 94 96 7 arch/arm/kernel/traps.c:128 (set (reg:SI 192 [ <variable>.uregs+64 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 162 [ regs ])
                (const_int 64 [0x40])) [0 <variable>.uregs+64 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 162 [ regs ])
        (nil)))

(insn 96 95 261 7 arch/arm/kernel/traps.c:128 (set (reg/v:SI 153 [ thumb ])
        (and:SI (reg:SI 192 [ <variable>.uregs+64 ])
            (const_int 32 [0x20]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 192 [ <variable>.uregs+64 ])
        (nil)))

(insn 261 96 262 7 arch/arm/kernel/traps.c:129 discrim 2 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 153 [ thumb ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn 262 261 109 7 arch/arm/kernel/traps.c:129 discrim 2 (set (reg/v:SI 152 [ width ])
        (if_then_else:SI (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (const_int 4 [0x4])
            (const_int 8 [0x8]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 109 262 110 7 arch/arm/kernel/traps.c:139 (set (reg:SI 194)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 110 109 111 7 arch/arm/kernel/traps.c:139 (set (reg:SI 193)
        (and:SI (reg:SI 194)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 194)
        (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
                (const_int -8192 [0xffffffffffffe000]))
            (nil))))

(insn 111 110 115 7 arch/arm/kernel/traps.c:139 (set (reg/v:SI 151 [ fs ])
        (mem/s/j:SI (plus:SI (reg:SI 193)
                (const_int 8 [0x8])) [0 <variable>.addr_limit+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 115 111 116 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/uaccess.h:65 (set (reg:SI 197)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 116 115 117 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/uaccess.h:65 (set (mem/s/j:SI (plus:SI (reg:SI 193)
                (const_int 8 [0x8])) [0 <variable>.addr_limit+0 S4 A64])
        (reg:SI 197)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 193)
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn 117 116 118 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/uaccess.h:65 (set (reg:SI 135 [ ivtmp.752 ])
        (plus:SI (reg/v:SI 154 [ addr ])
            (const_int -8 [0xfffffffffffffff8]))) 4 {*arm_addsi3} (nil))

(insn 118 117 119 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/uaccess.h:65 (set (reg:SI 134 [ ivtmp.756 ])
        (plus:SI (reg/v:SI 154 [ addr ])
            (const_int -16 [0xfffffffffffffff0]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/v:SI 154 [ addr ])
        (nil)))

(insn 119 118 120 7 arch/arm/kernel/traps.c:142 (set (reg/v:SI 149 [ i ])
        (const_int -4 [0xfffffffffffffffc])) 167 {*arm_movsi_insn} (nil))

(insn 120 119 127 7 arch/arm/kernel/traps.c:131 (set (reg/v/f:SI 150 [ p ])
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -56 [0xffffffffffffffc8]))) 4 {*arm_addsi3} (nil))

(insn 127 120 263 7 arch/arm/kernel/traps.c:146 discrim 3 (set (reg:SI 224)
        (reg:SI 197)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 197)
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn 263 127 264 7 arch/arm/kernel/traps.c:151 discrim 2 (set (reg/f:SI 225)
        (symbol_ref/v/f:SI ("*.LC22") [flags 0x82] <string_cst 0x112dc0f0>)) 167 {*arm_movsi_insn} (nil))

(insn 264 263 272 7 arch/arm/kernel/traps.c:151 discrim 2 (set (reg/f:SI 226)
        (symbol_ref/v/f:SI ("*.LC21") [flags 0x82] <string_cst 0x112da3a0>)) 167 {*arm_movsi_insn} (nil))

(jump_insn 272 264 273 7 (set (pc)
        (label_ref 179)) -1 (nil))
;; End of basic block 7 -> ( 14)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 149 150 151 152 153 159 224 225 226
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 149 150 151 152 153 159 224 225 226
;; rd  out 	(52)
26, 66, 93, 119, 120, 141, 142, 347, 380, 381, 2403, 2405, 2406, 2407, 2418, 2420, 2421, 2422, 2423, 2424, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455, 2471, 2472, 2473


;; Succ edge  14 [100.0%] 

(barrier 273 272 192)

;; Start of basic block ( 14) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u128(11){ }u129(13){ }u130(25){ }u131(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 149 150 151 152 153 159 224 225 226
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 149 150 151 152 153 159 224 225 226
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(71)
21, 26, 66, 93, 119, 120, 141, 142, 360, 380, 381, 2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410, 2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459, 2471, 2472, 2473
;; rd  gen 	(1)
365
;; rd  kill	(0)


;; Pred edge  14 [95.5%] 
(code_label 192 273 123 8 91 "" [1 uses])

(note 123 192 124 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 124 123 125 8 arch/arm/kernel/traps.c:145 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 153 [ thumb ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 125 124 126 8 arch/arm/kernel/traps.c:145 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 137)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 8 -> ( 9 10)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 149 150 151 152 153 159 224 225 226
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 149 150 151 152 153 159 224 225 226
;; rd  out 	(71)
21, 26, 66, 93, 119, 120, 141, 142, 365, 380, 381, 2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410, 2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459, 2471, 2472, 2473


;; Succ edge  9 [50.0%]  (fallthru)
;; Succ edge  10 [50.0%] 

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u134(11){ }u135(13){ }u136(25){ }u137(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 149 150 151 152 153 159 224 225 226
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 224
;; lr  def 	 24 [cc] 144 145 146 147 148 199 200 201
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 149 150 151 152 153 159 224 225 226
;; live  gen 	 144 145 146 147 148 199 200 201
;; live  kill	 24 [cc]
;; rd  in  	(71)
21, 26, 66, 93, 119, 120, 141, 142, 365, 380, 381, 2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410, 2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459, 2471, 2472, 2473
;; rd  gen 	(8)
2409, 2410, 2412, 2414, 2416, 2456, 2457, 2458
;; rd  kill	(11)
2409, 2410, 2411, 2412, 2413, 2414, 2415, 2416, 2456, 2457, 2458

;; Pred edge  8 [50.0%]  (fallthru)
(note 126 125 128 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 128 126 129 9 arch/arm/kernel/traps.c:146 discrim 3 (parallel [
            (set (reg/v:SI 146 [ __gu_err ])
                (asm_operands/v:SI ("1:	ldrb	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg:SI 135 [ ivtmp.752 ])
                        (const_int -14 [0xfffffffffffffff2])
                        (reg:SI 224)
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 7012004))
            (set (reg/v:SI 145 [ __b1 ])
                (asm_operands/v:SI ("1:	ldrb	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=&r") 1 [
                        (reg:SI 135 [ ivtmp.752 ])
                        (const_int -14 [0xfffffffffffffff2])
                        (reg:SI 224)
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 7012004))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(insn 129 128 130 9 arch/arm/kernel/traps.c:146 discrim 3 (set (reg:SI 199)
        (plus:SI (reg:SI 135 [ ivtmp.752 ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 130 129 131 9 arch/arm/kernel/traps.c:146 discrim 3 (parallel [
            (set (reg/v:SI 146 [ __gu_err ])
                (asm_operands/v:SI ("1:	ldrb	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg:SI 199)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 146 [ __gu_err ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 7012004))
            (set (reg/v:SI 144 [ __b2 ])
                (asm_operands/v:SI ("1:	ldrb	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=&r") 1 [
                        (reg:SI 199)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 146 [ __gu_err ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 7012004))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg:SI 199)
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))

(insn 131 130 132 9 arch/arm/kernel/traps.c:146 discrim 5 (set (reg:SI 200)
        (ashift:SI (reg/v:SI 144 [ __b2 ])
            (const_int 8 [0x8]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg/v:SI 144 [ __b2 ])
        (nil)))

(insn 132 131 133 9 arch/arm/kernel/traps.c:146 discrim 5 (set (reg:SI 201)
        (ior:SI (reg:SI 200)
            (reg/v:SI 145 [ __b1 ]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 200)
        (expr_list:REG_DEAD (reg/v:SI 145 [ __b1 ])
            (nil))))

(insn 133 132 134 9 arch/arm/kernel/traps.c:146 discrim 5 (set (reg/v:SI 148 [ val ])
        (zero_extend:SI (subreg:HI (reg:SI 201) 0))) 144 {*arm_zero_extendhisi2_v6} (expr_list:REG_DEAD (reg:SI 201)
        (nil)))

(insn 134 133 274 9 arch/arm/kernel/traps.c:146 discrim 5 (set (reg/v:SI 147 [ bad ])
        (reg/v:SI 146 [ __gu_err ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 146 [ __gu_err ])
        (nil)))

(jump_insn 274 134 275 9 (set (pc)
        (label_ref 142)) -1 (nil))
;; End of basic block 9 -> ( 11)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 147 148 149 150 151 152 153 159 224 225 226
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 147 148 149 150 151 152 153 159 224 225 226
;; rd  out 	(68)
21, 26, 66, 93, 119, 120, 141, 142, 380, 381, 2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410, 2412, 2414, 2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459, 2471, 2472, 2473


;; Succ edge  11 [100.0%] 

(barrier 275 274 137)

;; Start of basic block ( 8) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u148(11){ }u149(13){ }u150(25){ }u151(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 149 150 151 152 153 159 224 225 226
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 153
;; lr  def 	 24 [cc] 143 147 148
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 149 150 151 152 153 159 224 225 226
;; live  gen 	 143 147 148
;; live  kill	 24 [cc]
;; rd  in  	(71)
21, 26, 66, 93, 119, 120, 141, 142, 365, 380, 381, 2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410, 2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459, 2471, 2472, 2473
;; rd  gen 	(3)
2408, 2413, 2415
;; rd  kill	(5)
2408, 2413, 2414, 2415, 2416

;; Pred edge  8 [50.0%] 
(code_label 137 275 138 10 83 "" [1 uses])

(note 138 137 140 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 140 138 141 10 arch/arm/kernel/traps.c:148 discrim 4 (parallel [
            (set (reg/v:SI 143 [ __gu_err ])
                (asm_operands/v:SI ("1:	ldr	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg:SI 134 [ ivtmp.756 ])
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 153 [ thumb ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 7012010))
            (set (reg/v:SI 148 [ val ])
                (asm_operands/v:SI ("1:	ldr	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=&r") 1 [
                        (reg:SI 134 [ ivtmp.756 ])
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 153 [ thumb ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 7012010))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(insn 141 140 142 10 arch/arm/kernel/traps.c:148 discrim 5 (set (reg/v:SI 147 [ bad ])
        (reg/v:SI 143 [ __gu_err ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 143 [ __gu_err ])
        (nil)))
;; End of basic block 10 -> ( 11)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 147 148 149 150 151 152 153 159 224 225 226
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 147 148 149 150 151 152 153 159 224 225 226
;; rd  out 	(68)
21, 26, 66, 93, 119, 120, 141, 142, 380, 381, 2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410, 2412, 2413, 2415, 2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459, 2471, 2472, 2473


;; Succ edge  11 [100.0%]  (fallthru)

;; Start of basic block ( 10 9) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u155(11){ }u156(13){ }u157(25){ }u158(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 147 148 149 150 151 152 153 159 224 225 226
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 147 148 149 150 151 152 153 159 224 225 226
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(70)
21, 26, 66, 93, 119, 120, 141, 142, 380, 381, 2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410, 2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459, 2471, 2472, 2473
;; rd  gen 	(1)
363
;; rd  kill	(0)


;; Pred edge  10 [100.0%]  (fallthru)
;; Pred edge  9 [100.0%] 
(code_label 142 141 143 11 84 "" [1 uses])

(note 143 142 144 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 144 143 145 11 arch/arm/kernel/traps.c:150 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 147 [ bad ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 147 [ bad ])
        (nil)))

(jump_insn 145 144 146 11 arch/arm/kernel/traps.c:150 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 171)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 450 [0x1c2])
            (nil))))
;; End of basic block 11 -> ( 12 13)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 148 149 150 151 152 153 159 224 225 226
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 148 149 150 151 152 153 159 224 225 226
;; rd  out 	(71)
21, 26, 66, 93, 119, 120, 141, 142, 363, 380, 381, 2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410, 2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459, 2471, 2472, 2473


;; Succ edge  12 [95.5%]  (fallthru)
;; Succ edge  13 [4.5%]  (loop_exit)

;; Start of basic block ( 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u161(11){ }u162(13){ }u163(25){ }u164(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 148 149 150 151 152 153 159 224 225 226
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 148 149 150 152 225 226
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 135 149 150 157 203
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 148 149 150 151 152 153 159 224 225 226
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc] 134 135 149 150 157 203
;; live  kill	 14 [lr]
;; rd  in  	(71)
21, 26, 66, 93, 119, 120, 141, 142, 363, 380, 381, 2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410, 2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459, 2471, 2472, 2473
;; rd  gen 	(7)
21, 2402, 2404, 2417, 2419, 2426, 2459
;; rd  kill	(31)
143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 2402, 2403, 2404, 2405, 2417, 2418, 2419, 2420, 2426, 2459

;; Pred edge  11 [95.5%]  (fallthru)
(note 146 145 265 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 265 146 266 12 arch/arm/kernel/traps.c:151 discrim 2 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 149 [ i ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn 266 265 158 12 arch/arm/kernel/traps.c:151 discrim 2 (set (reg/f:SI 157 [ iftmp.277 ])
        (if_then_else:SI (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (reg/f:SI 225)
            (reg/f:SI 226))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 158 266 159 12 arch/arm/kernel/traps.c:151 discrim 3 (set (reg:SI 0 r0)
        (reg/v/f:SI 150 [ p ])) 167 {*arm_movsi_insn} (nil))

(insn 159 158 160 12 arch/arm/kernel/traps.c:151 discrim 3 (set (reg:SI 1 r1)
        (reg/f:SI 157 [ iftmp.277 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 157 [ iftmp.277 ])
        (nil)))

(insn 160 159 161 12 arch/arm/kernel/traps.c:151 discrim 3 (set (reg:SI 2 r2)
        (reg/v:SI 152 [ width ])) 167 {*arm_movsi_insn} (nil))

(insn 161 160 162 12 arch/arm/kernel/traps.c:151 discrim 3 (set (reg:SI 3 r3)
        (reg/v:SI 148 [ val ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 148 [ val ])
        (nil)))

(call_insn 162 161 163 12 arch/arm/kernel/traps.c:151 discrim 3 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sprintf") [flags 0x41] <function_decl 0x5115e780 sprintf>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 163 162 165 12 arch/arm/kernel/traps.c:151 discrim 3 (set (reg:SI 203)
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 165 163 166 12 arch/arm/kernel/traps.c:151 discrim 3 (set (reg/v/f:SI 150 [ p ])
        (plus:SI (reg/v/f:SI 150 [ p ])
            (reg:SI 203))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 203)
        (nil)))

(insn 166 165 167 12 arch/arm/kernel/traps.c:142 (set (reg/v:SI 149 [ i ])
        (plus:SI (reg/v:SI 149 [ i ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 167 166 168 12 arch/arm/kernel/traps.c:142 (set (reg:SI 135 [ ivtmp.752 ])
        (plus:SI (reg:SI 135 [ ivtmp.752 ])
            (const_int 2 [0x2]))) 4 {*arm_addsi3} (nil))

(insn 168 167 276 12 arch/arm/kernel/traps.c:142 (set (reg:SI 134 [ ivtmp.756 ])
        (plus:SI (reg:SI 134 [ ivtmp.756 ])
            (const_int 4 [0x4]))) 4 {*arm_addsi3} (nil))

(jump_insn 276 168 277 12 (set (pc)
        (label_ref 179)) -1 (nil))
;; End of basic block 12 -> ( 14)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 149 150 151 152 153 159 224 225 226
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 149 150 151 152 153 159 224 225 226
;; rd  out 	(66)
21, 66, 93, 119, 120, 141, 142, 363, 380, 381, 2402, 2404, 2406, 2407, 2408, 2409, 2410, 2412, 2413, 2414, 2415, 2416, 2417, 2419, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459, 2471, 2472, 2473


;; Succ edge  14 [100.0%]  (dfs_back)

(barrier 277 276 171)

;; Start of basic block ( 11) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u184(11){ }u185(13){ }u186(25){ }u187(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151 159
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151 159
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]
;; rd  in  	(71)
21, 26, 66, 93, 119, 120, 141, 142, 363, 380, 381, 2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410, 2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459, 2471, 2472, 2473
;; rd  gen 	(1)
19
;; rd  kill	(21)
143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163

;; Pred edge  11 [4.5%]  (loop_exit)
(code_label 171 277 172 13 85 "" [1 uses])

(note 172 171 174 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 174 172 175 13 arch/arm/kernel/traps.c:154 (set (reg:SI 0 r0)
        (reg/v/f:SI 150 [ p ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 150 [ p ])
        (nil)))

(insn 175 174 176 13 arch/arm/kernel/traps.c:154 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC23") [flags 0x82] <string_cst 0x112dc5a0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC23") [flags 0x82] <string_cst 0x112dc5a0>)
        (nil)))

(call_insn 176 175 278 13 arch/arm/kernel/traps.c:154 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcpy") [flags 0x41] <function_decl 0x51157700 __builtin_strcpy>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(jump_insn 278 176 279 13 (set (pc)
        (label_ref 195)) -1 (nil))
;; End of basic block 13 -> ( 15)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 159
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 159
;; rd  out 	(70)
19, 66, 93, 119, 120, 141, 142, 363, 380, 381, 2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410, 2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459, 2471, 2472, 2473


;; Succ edge  15 [100.0%] 

(barrier 279 278 179)

;; Start of basic block ( 7 12) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u192(11){ }u193(13){ }u194(25){ }u195(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 149 150 151 152 153 159 224 225 226
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 153
;; lr  def 	 24 [cc] 155
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 149 150 151 152 153 159 224 225 226
;; live  gen 	 24 [cc] 155
;; live  kill	
;; rd  in  	(72)
21, 26, 66, 93, 119, 120, 141, 142, 347, 363, 380, 381, 2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410, 2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459, 2471, 2472, 2473
;; rd  gen 	(2)
360, 2425
;; rd  kill	(1)
2425

;; Pred edge  7 [100.0%] 
;; Pred edge  12 [100.0%]  (dfs_back)
(code_label 179 279 180 14 82 "" [2 uses])

(note 180 179 267 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 267 180 268 14 arch/arm/kernel/traps.c:142 discrim 3 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 153 [ thumb ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn 268 267 193 14 arch/arm/kernel/traps.c:142 discrim 3 (set (reg:SI 155 [ iftmp.278 ])
        (if_then_else:SI (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (const_int 2 [0x2])
            (const_int 1 [0x1]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 193 268 194 14 arch/arm/kernel/traps.c:142 discrim 4 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 149 [ i ])
            (reg:SI 155 [ iftmp.278 ]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 155 [ iftmp.278 ])
        (nil)))

(jump_insn 194 193 195 14 arch/arm/kernel/traps.c:142 discrim 4 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 192)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9550 [0x254e])
            (nil))))
;; End of basic block 14 -> ( 8 15)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 149 150 151 152 153 159 224 225 226
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 149 150 151 152 153 159 224 225 226
;; rd  out 	(71)
21, 26, 66, 93, 119, 120, 141, 142, 360, 380, 381, 2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410, 2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459, 2471, 2472, 2473


;; Succ edge  8 [95.5%] 
;; Succ edge  15 [4.5%]  (fallthru,loop_exit)

;; Start of basic block ( 14 13) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u201(11){ }u202(13){ }u203(25){ }u204(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 159
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 207 208 209
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 159
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 207 208 209
;; live  kill	 14 [lr]
;; rd  in  	(73)
19, 21, 26, 66, 93, 119, 120, 141, 142, 360, 363, 380, 381, 2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410, 2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459, 2471, 2472, 2473
;; rd  gen 	(4)
18, 2460, 2461, 2462
;; rd  kill	(24)
143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 2460, 2461, 2462

;; Pred edge  14 [4.5%]  (fallthru,loop_exit)
;; Pred edge  13 [100.0%] 
(code_label 195 194 196 15 88 "" [1 uses])

(note 196 195 199 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 199 196 200 15 arch/arm/kernel/traps.c:158 (set (reg/f:SI 207)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -56 [0xffffffffffffffc8]))) 4 {*arm_addsi3} (nil))

(insn 200 199 201 15 arch/arm/kernel/traps.c:158 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC24") [flags 0x82] <string_cst 0x112dc9f0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC24") [flags 0x82] <string_cst 0x112dc9f0>)
        (nil)))

(insn 201 200 202 15 arch/arm/kernel/traps.c:158 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC19") [flags 0x82] <string_cst 0x112cf6a0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC19") [flags 0x82] <string_cst 0x112cf6a0>)
        (nil)))

(insn 202 201 203 15 arch/arm/kernel/traps.c:158 (set (reg:SI 2 r2)
        (reg/f:SI 207)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 207)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -56 [0xffffffffffffffc8]))
            (nil))))

(call_insn 203 202 205 15 arch/arm/kernel/traps.c:158 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10aa9180 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 205 203 206 15 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/uaccess.h:65 (set (reg:SI 209)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 206 205 207 15 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/uaccess.h:65 (set (reg:SI 208)
        (and:SI (reg:SI 209)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 209)
        (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
                (const_int -8192 [0xffffffffffffe000]))
            (nil))))

(insn 207 206 208 15 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/uaccess.h:65 (set (mem/s/j:SI (plus:SI (reg:SI 208)
                (const_int 8 [0x8])) [0 <variable>.addr_limit+0 S4 A64])
        (reg/v:SI 151 [ fs ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 208)
        (expr_list:REG_DEAD (reg/v:SI 151 [ fs ])
            (nil))))
;; End of basic block 15 -> ( 16)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 159
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 159
;; rd  out 	(74)
18, 66, 93, 119, 120, 141, 142, 360, 363, 380, 381, 2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410, 2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459, 2460, 2461, 2462, 2471, 2472, 2473


;; Succ edge  16 [100.0%]  (fallthru)

;; Start of basic block ( 4 6 15) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u217(11){ }u218(13){ }u219(25){ }u220(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 159
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 212 213 214 215 216
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 159
;; live  gen 	 0 [r0] 24 [cc] 212 213 214 215 216
;; live  kill	 14 [lr]
;; rd  in  	(78)
18, 26, 30, 66, 93, 119, 120, 141, 142, 360, 363, 368, 373, 380, 381, 2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410, 2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459, 2460, 2461, 2462, 2471, 2472, 2473
;; rd  gen 	(6)
354, 2463, 2464, 2465, 2466, 2467
;; rd  kill	(26)
143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 2463, 2464, 2465, 2466, 2467

;; Pred edge  4 [100.0%] 
;; Pred edge  6 [100.0%] 
;; Pred edge  15 [100.0%]  (fallthru)
(code_label 208 207 209 16 78 "" [2 uses])

(note 209 208 210 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 210 209 211 16 arch/arm/kernel/traps.c:278 (set (reg:SI 0 r0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(call_insn 211 210 212 16 arch/arm/kernel/traps.c:278 (parallel [
            (call (mem:SI (symbol_ref:SI ("bust_spinlocks") [flags 0x41] <function_decl 0x10ad6080 bust_spinlocks>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 212 211 213 16 arch/arm/kernel/traps.c:279 (set (reg:SI 0 r0)
        (const_int 7 [0x7])) 167 {*arm_movsi_insn} (nil))

(call_insn 213 212 216 16 arch/arm/kernel/traps.c:279 (parallel [
            (call (mem:SI (symbol_ref:SI ("add_taint") [flags 0x41] <function_decl 0x10ad6200 add_taint>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 216 213 217 16 include/linux/spinlock.h:335 (set (reg:SI 0 r0)
        (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 12 [0xc])))) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 12 [0xc])))
        (nil)))

(call_insn 217 216 218 16 include/linux/spinlock.h:335 (parallel [
            (call (mem:SI (symbol_ref:SI ("_raw_spin_unlock_irq") [flags 0x41] <function_decl 0x10b28e80 _raw_spin_unlock_irq>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(call_insn 218 217 220 16 arch/arm/kernel/traps.c:281 (parallel [
            (call (mem:SI (symbol_ref:SI ("oops_exit") [flags 0x41] <function_decl 0x10aa9e00 oops_exit>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(insn 220 218 221 16 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 213)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 221 220 222 16 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 212)
        (and:SI (reg:SI 213)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 213)
        (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
                (const_int -8192 [0xffffffffffffe000]))
            (nil))))

(insn 222 221 223 16 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 215 [ <variable>.preempt_count ])
        (mem/s/j:SI (plus:SI (reg:SI 212)
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 212)
        (nil)))

(insn 223 222 224 16 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 216)
        (and:SI (reg:SI 215 [ <variable>.preempt_count ])
            (const_int 67108863 [0x3ffffff]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 215 [ <variable>.preempt_count ])
        (nil)))

(insn 224 223 225 16 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 214)
        (and:SI (reg:SI 216)
            (const_int -256 [0xffffffffffffff00]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 216)
        (expr_list:REG_EQUAL (and:SI (reg:SI 215 [ <variable>.preempt_count ])
                (const_int 67108608 [0x3ffff00]))
            (nil))))

(insn 225 224 226 16 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 214)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 214)
        (nil)))

(jump_insn 226 225 227 16 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 232)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 16 -> ( 17 18)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 159
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 159
;; rd  out 	(80)
18, 26, 30, 66, 93, 119, 120, 141, 142, 354, 380, 381, 2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410, 2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459, 2460, 2461, 2462, 2463, 2464, 2465, 2466, 2467, 2471, 2472, 2473


;; Succ edge  17 [0.0%]  (fallthru)
;; Succ edge  18 [100.0%] 

;; Start of basic block ( 16) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u237(11){ }u238(13){ }u239(25){ }u240(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]
;; rd  in  	(80)
18, 26, 30, 66, 93, 119, 120, 141, 142, 354, 380, 381, 2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410, 2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459, 2460, 2461, 2462, 2463, 2464, 2465, 2466, 2467, 2471, 2472, 2473
;; rd  gen 	(0)

;; rd  kill	(21)
143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163

;; Pred edge  16 [0.0%]  (fallthru)
(note 227 226 229 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 229 227 230 17 arch/arm/kernel/traps.c:284 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC25") [flags 0x82] <string_cst 0x11266dc0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC25") [flags 0x82] <string_cst 0x11266dc0>)
        (nil)))

(call_insn 230 229 231 17 arch/arm/kernel/traps.c:284 (parallel [
            (call (mem:SI (symbol_ref:SI ("panic") [flags 0x41] <function_decl 0x10aa9d00 panic>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_NORETURN (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 17 -> ()
;; lr  out 	 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(80)
18, 26, 30, 66, 93, 119, 120, 141, 142, 354, 380, 381, 2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410, 2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459, 2460, 2461, 2462, 2463, 2464, 2465, 2466, 2467, 2471, 2472, 2473



(barrier 231 230 232)

;; Start of basic block ( 16) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u243(11){ }u244(13){ }u245(25){ }u246(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 159
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 218 219
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 159
;; live  gen 	 24 [cc] 218 219
;; live  kill	
;; rd  in  	(80)
18, 26, 30, 66, 93, 119, 120, 141, 142, 354, 380, 381, 2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410, 2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459, 2460, 2461, 2462, 2463, 2464, 2465, 2466, 2467, 2471, 2472, 2473
;; rd  gen 	(3)
352, 2468, 2469
;; rd  kill	(2)
2468, 2469

;; Pred edge  16 [100.0%] 
(code_label 232 231 233 18 92 "" [1 uses])

(note 233 232 234 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 234 233 235 18 arch/arm/kernel/traps.c:285 (set (reg/f:SI 218)
        (symbol_ref:SI ("panic_on_oops") [flags 0xc0] <var_decl 0x10ac6900 panic_on_oops>)) 167 {*arm_movsi_insn} (nil))

(insn 235 234 236 18 arch/arm/kernel/traps.c:285 (set (reg:SI 219 [ panic_on_oops ])
        (mem/c/i:SI (reg/f:SI 218) [0 panic_on_oops+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 218)
        (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("panic_on_oops") [flags 0xc0] <var_decl 0x10ac6900 panic_on_oops>) [0 panic_on_oops+0 S4 A32])
            (nil))))

(insn 236 235 237 18 arch/arm/kernel/traps.c:285 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 219 [ panic_on_oops ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 219 [ panic_on_oops ])
        (nil)))

(jump_insn 237 236 238 18 arch/arm/kernel/traps.c:285 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 243)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 18 -> ( 19 20)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 159
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 159
;; rd  out 	(82)
18, 26, 30, 66, 93, 119, 120, 141, 142, 352, 380, 381, 2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410, 2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459, 2460, 2461, 2462, 2463, 2464, 2465, 2466, 2467, 2468, 2469, 2471, 2472, 2473


;; Succ edge  19 [0.0%]  (fallthru)
;; Succ edge  20 [100.0%] 

;; Start of basic block ( 18) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u250(11){ }u251(13){ }u252(25){ }u253(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]
;; rd  in  	(82)
18, 26, 30, 66, 93, 119, 120, 141, 142, 352, 380, 381, 2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410, 2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459, 2460, 2461, 2462, 2463, 2464, 2465, 2466, 2467, 2468, 2469, 2471, 2472, 2473
;; rd  gen 	(0)

;; rd  kill	(21)
143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163

;; Pred edge  18 [0.0%]  (fallthru)
(note 238 237 240 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 240 238 241 19 arch/arm/kernel/traps.c:286 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC26") [flags 0x82] <string_cst 0x112dcd50>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC26") [flags 0x82] <string_cst 0x112dcd50>)
        (nil)))

(call_insn 241 240 242 19 arch/arm/kernel/traps.c:286 (parallel [
            (call (mem:SI (symbol_ref:SI ("panic") [flags 0x41] <function_decl 0x10aa9d00 panic>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_NORETURN (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 19 -> ()
;; lr  out 	 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(82)
18, 26, 30, 66, 93, 119, 120, 141, 142, 352, 380, 381, 2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410, 2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459, 2460, 2461, 2462, 2463, 2464, 2465, 2466, 2467, 2468, 2469, 2471, 2472, 2473



(barrier 242 241 243)

;; Start of basic block ( 18) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u256(11){ }u257(13){ }u258(25){ }u259(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 159
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 159
;; lr  def 	 24 [cc] 221
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 159
;; live  gen 	 24 [cc] 221
;; live  kill	
;; rd  in  	(82)
18, 26, 30, 66, 93, 119, 120, 141, 142, 352, 380, 381, 2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410, 2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459, 2460, 2461, 2462, 2463, 2464, 2465, 2466, 2467, 2468, 2469, 2471, 2472, 2473
;; rd  gen 	(2)
350, 2470
;; rd  kill	(1)
2470

;; Pred edge  18 [100.0%] 
(code_label 243 242 244 20 93 "" [1 uses])

(note 244 243 245 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn 245 244 246 20 arch/arm/kernel/traps.c:287 (set (reg:SI 221)
        (const_int 32769 [0x8001])) 167 {*arm_movsi_insn} (nil))

(insn 246 245 247 20 arch/arm/kernel/traps.c:287 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 159 [ ret ])
            (reg:SI 221))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 221)
        (expr_list:REG_DEAD (reg/v:SI 159 [ ret ])
            (expr_list:REG_EQUAL (compare:CC (reg/v:SI 159 [ ret ])
                    (const_int 32769 [0x8001]))
                (nil)))))

(jump_insn 247 246 248 20 arch/arm/kernel/traps.c:287 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 257)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 20 -> ( 21 22)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(83)
18, 26, 30, 66, 93, 119, 120, 141, 142, 350, 380, 381, 2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410, 2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459, 2460, 2461, 2462, 2463, 2464, 2465, 2466, 2467, 2468, 2469, 2470, 2471, 2472, 2473


;; Succ edge  21 [0.0%]  (fallthru)
;; Succ edge  22 [100.0%] 

;; Start of basic block ( 20) -> 21
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u264(11){ }u265(13){ }u266(25){ }u267(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]
;; rd  in  	(83)
18, 26, 30, 66, 93, 119, 120, 141, 142, 350, 380, 381, 2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410, 2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459, 2460, 2461, 2462, 2463, 2464, 2465, 2466, 2467, 2468, 2469, 2470, 2471, 2472, 2473
;; rd  gen 	(0)

;; rd  kill	(21)
143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163

;; Pred edge  20 [0.0%]  (fallthru)
(note 248 247 249 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn 249 248 250 21 arch/arm/kernel/traps.c:288 (set (reg:SI 0 r0)
        (const_int 11 [0xb])) 167 {*arm_movsi_insn} (nil))

(call_insn 250 249 251 21 arch/arm/kernel/traps.c:288 (parallel [
            (call (mem:SI (symbol_ref:SI ("do_exit") [flags 0x41] <function_decl 0x10aa9f80 do_exit>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_NORETURN (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 21 -> ()
;; lr  out 	 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(83)
18, 26, 30, 66, 93, 119, 120, 141, 142, 350, 380, 381, 2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410, 2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459, 2460, 2461, 2462, 2463, 2464, 2465, 2466, 2467, 2468, 2469, 2470, 2471, 2472, 2473



(barrier 251 250 257)

;; Start of basic block ( 20) -> 22
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u270(11){ }u271(13){ }u272(25){ }u273(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(83)
18, 26, 30, 66, 93, 119, 120, 141, 142, 350, 380, 381, 2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410, 2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459, 2460, 2461, 2462, 2463, 2464, 2465, 2466, 2467, 2468, 2469, 2470, 2471, 2472, 2473
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  20 [100.0%] 
(code_label 257 251 260 22 95 "" [1 uses])

(note 260 257 0 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 22 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(83)
18, 26, 30, 66, 93, 119, 120, 141, 142, 350, 380, 381, 2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410, 2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459, 2460, 2461, 2462, 2463, 2464, 2465, 2466, 2467, 2468, 2469, 2470, 2471, 2472, 2473


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function bad_mode (bad_mode)[0:1070]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 4 count 7 (  1.4)


bad_mode

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={7d,4u} r1={6d,3u} r2={5d,1u} r3={4d} r11={1d,4u} r12={4d} r13={1d,7u} r14={4d,1u} r15={3d} r16={3d} r17={3d} r18={3d} r19={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={5d,1u} r25={1d,4u} r26={1d,3u} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r81={3d} r82={3d} r83={3d} r84={3d} r85={3d} r86={3d} r87={3d} r88={3d} r89={3d} r90={3d} r91={3d} r92={3d} r93={3d} r94={3d} r95={3d} r96={3d} r97={3d} r98={3d} r99={3d} r100={3d} r101={3d} r102={3d} r103={3d} r104={3d} r105={3d} r106={3d} r107={3d} r108={3d} r109={3d} r110={3d} r111={3d} r112={3d} r113={3d} r114={3d} r115={3d} r116={3d} r117={3d} r118={3d} r119={3d} r120={3d} r121={3d} r122={3d} r123={3d} r124={3d} r125={3d} r126={3d} r127={3d} r133={1d,1u} r134={1d,1u,1d} r135={1d,2u} r136={1d,1u} r138={1d,1u} r140={1d,1u} 
;;    total ref usage 411{375d,35u,1e} in 19{16 regular + 3 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368
0[0,7] 1[7,6] 2[13,5] 3[18,4] 11[22,1] 12[23,4] 13[27,1] 14[28,4] 15[32,3] 16[35,3] 17[38,3] 18[41,3] 19[44,3] 20[47,3] 21[50,3] 22[53,3] 23[56,3] 24[59,5] 25[64,1] 26[65,1] 27[66,3] 28[69,3] 29[72,3] 30[75,3] 31[78,3] 32[81,3] 33[84,3] 34[87,3] 35[90,3] 36[93,3] 37[96,3] 38[99,3] 39[102,3] 40[105,3] 41[108,3] 42[111,3] 43[114,3] 44[117,3] 45[120,3] 46[123,3] 47[126,3] 48[129,3] 49[132,3] 50[135,3] 51[138,3] 52[141,3] 53[144,3] 54[147,3] 55[150,3] 56[153,3] 57[156,3] 58[159,3] 59[162,3] 60[165,3] 61[168,3] 62[171,3] 63[174,3] 64[177,3] 65[180,3] 66[183,3] 67[186,3] 68[189,3] 69[192,3] 70[195,3] 71[198,3] 72[201,3] 73[204,3] 74[207,3] 75[210,3] 76[213,3] 77[216,3] 78[219,3] 79[222,3] 80[225,3] 81[228,3] 82[231,3] 83[234,3] 84[237,3] 85[240,3] 86[243,3] 87[246,3] 88[249,3] 89[252,3] 90[255,3] 91[258,3] 92[261,3] 93[264,3] 94[267,3] 95[270,3] 96[273,3] 97[276,3] 98[279,3] 99[282,3] 100[285,3] 101[288,3] 102[291,3] 103[294,3] 104[297,3] 105[300,3] 106[303,3] 107[306,3] 108[309,3] 109[312,3] 110[315,3] 111[318,3] 112[321,3] 113[324,3] 114[327,3] 115[330,3] 116[333,3] 117[336,3] 118[339,3] 119[342,3] 120[345,3] 121[348,3] 122[351,3] 123[354,3] 124[357,3] 125[360,3] 126[363,3] 127[366,3] 133[369,1] 134[370,1] 135[371,1] 136[372,1] 138[373,1] 140[374,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d6(0){ }d12(1){ }d17(2){ }d21(3){ }d22(11){ }d26(12){ }d27(13){ }d31(14){ }d64(25){ }d65(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
6, 12, 17, 21, 22, 26, 27, 31, 64, 65
;; rd  kill	(34)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 64, 65
;; lr  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(10)
6, 12, 17, 21, 22, 26, 27, 31, 64, 65

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d22(bb 0 insn -1) }u1(13){ d27(bb 0 insn -1) }u2(25){ d64(bb 0 insn -1) }u3(26){ d65(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 133 134 135 136
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 133 134 135 136
;; live  kill	
;; rd  in  	(10)
6, 12, 17, 21, 22, 26, 27, 31, 64, 65
;; rd  gen 	(5)
63, 369, 370, 371, 372
;; rd  kill	(9)
59, 60, 61, 62, 63, 369, 370, 371, 372
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 135
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 135
;; rd  out 	(15)
6, 12, 17, 21, 22, 26, 27, 31, 63, 64, 65, 369, 370, 371, 372
;;  UD chains for artificial uses
;;   reg 11 { d22(bb 0 insn -1) }
;;   reg 13 { d27(bb 0 insn -1) }
;;   reg 25 { d64(bb 0 insn -1) }
;;   reg 26 { d65(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d6(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 3
;;      reg 1 { d12(bb 0 insn -1) }
;;   UD chains for insn luid 3 uid 8
;;      reg 135 { d371(bb 2 insn 7) }
;;   UD chains for insn luid 4 uid 9
;;      reg 136 { d372(bb 2 insn 8) }
;;   UD chains for insn luid 5 uid 10
;;      reg 24 { d63(bb 2 insn 9) }

( 2 )->[3]->( 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u9(11){ d22(bb 0 insn -1) }u10(13){ d27(bb 0 insn -1) }u11(25){ d64(bb 0 insn -1) }u12(26){ d65(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 135
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 138
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 135
;; live  gen 	 138
;; live  kill	
;; rd  in  	(15)
6, 12, 17, 21, 22, 26, 27, 31, 63, 64, 65, 369, 370, 371, 372
;; rd  gen 	(1)
373
;; rd  kill	(1)
373
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134
;; rd  out 	(16)
6, 12, 17, 21, 22, 26, 27, 31, 63, 64, 65, 369, 370, 371, 372, 373
;;  UD chains for artificial uses
;;   reg 11 { d22(bb 0 insn -1) }
;;   reg 13 { d27(bb 0 insn -1) }
;;   reg 25 { d64(bb 0 insn -1) }
;;   reg 26 { d65(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 14
;;      reg 135 { d371(bb 2 insn 7) }
;;      reg 138 { d373(bb 3 insn 13) }

( 3 2 )->[4]->( )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u15(11){ d22(bb 0 insn -1) }u16(13){ d27(bb 0 insn -1) }u17(25){ d64(bb 0 insn -1) }u18(26){ d65(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 140
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 140
;; live  kill	 14 [lr] 24 [cc]
;; rd  in  	(16)
6, 12, 17, 21, 22, 26, 27, 31, 63, 64, 65, 369, 370, 371, 372, 373
;; rd  gen 	(1)
374
;; rd  kill	(5)
28, 29, 30, 31, 374
;; lr  out 	 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(16)
6, 12, 17, 21, 22, 26, 27, 63, 64, 65, 369, 370, 371, 372, 373, 374
;;  UD chains for artificial uses
;;   reg 11 { d22(bb 0 insn -1) }
;;   reg 13 { d27(bb 0 insn -1) }
;;   reg 25 { d64(bb 0 insn -1) }
;;   reg 26 { d65(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 20
;;      reg 134 { d370(bb 2 insn 3) }
;;      reg 140 { d374(bb 4 insn 18) }
;;   eq_note reg 134 { }
;;   UD chains for insn luid 3 uid 21
;;      reg 13 { d27(bb 0 insn -1) }
;;      reg 0 { d2(bb 4 insn 19) }
;;      reg 1 { d11(bb 4 insn 20) }
;;   UD chains for insn luid 5 uid 24
;;      reg 133 { d369(bb 2 insn 2) }
;;   UD chains for insn luid 7 uid 26
;;      reg 13 { d27(bb 0 insn -1) }
;;      reg 0 { d1(bb 4 insn 23) }
;;      reg 1 { d9(bb 4 insn 24) }
;;      reg 2 { d15(bb 4 insn 25) }
;;   UD chains for insn luid 10 uid 30
;;      reg 13 { d27(bb 0 insn -1) }
;;      reg 0 { d0(bb 4 insn 29) }

( )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u32(11){ }u33(13){ }u34(14){ }u35(25){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	
;; live  gen 	
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(0)

;;  UD chains for artificial uses
;;   reg 11 { }
;;   reg 13 { }
;;   reg 14 { }
;;   reg 25 { }

Finding needed instructions:
  Adding insn 10 to worklist
  Adding insn 14 to worklist
  Adding insn 30 to worklist
  Adding insn 27 to worklist
  Adding insn 26 to worklist
  Adding insn 21 to worklist
Finished finding needed instructions:
Processing use of (reg 13 sp) in insn 21:
Processing use of (reg 0 r0) in insn 21:
  Adding insn 19 to worklist
Processing use of (reg 1 r1) in insn 21:
  Adding insn 20 to worklist
Processing use of (reg 134 [ reason ]) in insn 20:
  Adding insn 3 to worklist
Processing use of (reg 140) in insn 20:
  Adding insn 18 to worklist
Processing use of (reg 1 r1) in insn 3:
Processing use of (reg 13 sp) in insn 26:
Processing use of (reg 0 r0) in insn 26:
  Adding insn 23 to worklist
Processing use of (reg 1 r1) in insn 26:
  Adding insn 24 to worklist
Processing use of (reg 2 r2) in insn 26:
  Adding insn 25 to worklist
Processing use of (reg 133 [ regs ]) in insn 24:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 13 sp) in insn 30:
Processing use of (reg 0 r0) in insn 30:
  Adding insn 29 to worklist
Processing use of (reg 135) in insn 14:
  Adding insn 7 to worklist
Processing use of (reg 138) in insn 14:
  Adding insn 13 to worklist
Processing use of (reg 24 cc) in insn 10:
  Adding insn 9 to worklist
Processing use of (reg 136 [ console_printk ]) in insn 9:
  Adding insn 8 to worklist
Processing use of (reg 135) in insn 8:


bad_mode

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={7d,4u} r1={6d,3u} r2={5d,1u} r3={4d} r11={1d,4u} r12={4d} r13={1d,7u} r14={4d,1u} r15={3d} r16={3d} r17={3d} r18={3d} r19={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={5d,1u} r25={1d,4u} r26={1d,3u} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r81={3d} r82={3d} r83={3d} r84={3d} r85={3d} r86={3d} r87={3d} r88={3d} r89={3d} r90={3d} r91={3d} r92={3d} r93={3d} r94={3d} r95={3d} r96={3d} r97={3d} r98={3d} r99={3d} r100={3d} r101={3d} r102={3d} r103={3d} r104={3d} r105={3d} r106={3d} r107={3d} r108={3d} r109={3d} r110={3d} r111={3d} r112={3d} r113={3d} r114={3d} r115={3d} r116={3d} r117={3d} r118={3d} r119={3d} r120={3d} r121={3d} r122={3d} r123={3d} r124={3d} r125={3d} r126={3d} r127={3d} r133={1d,1u} r134={1d,1u,1d} r135={1d,2u} r136={1d,1u} r138={1d,1u} r140={1d,1u} 
;;    total ref usage 411{375d,35u,1e} in 19{16 regular + 3 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368
0[0,7] 1[7,6] 2[13,5] 3[18,4] 11[22,1] 12[23,4] 13[27,1] 14[28,4] 15[32,3] 16[35,3] 17[38,3] 18[41,3] 19[44,3] 20[47,3] 21[50,3] 22[53,3] 23[56,3] 24[59,5] 25[64,1] 26[65,1] 27[66,3] 28[69,3] 29[72,3] 30[75,3] 31[78,3] 32[81,3] 33[84,3] 34[87,3] 35[90,3] 36[93,3] 37[96,3] 38[99,3] 39[102,3] 40[105,3] 41[108,3] 42[111,3] 43[114,3] 44[117,3] 45[120,3] 46[123,3] 47[126,3] 48[129,3] 49[132,3] 50[135,3] 51[138,3] 52[141,3] 53[144,3] 54[147,3] 55[150,3] 56[153,3] 57[156,3] 58[159,3] 59[162,3] 60[165,3] 61[168,3] 62[171,3] 63[174,3] 64[177,3] 65[180,3] 66[183,3] 67[186,3] 68[189,3] 69[192,3] 70[195,3] 71[198,3] 72[201,3] 73[204,3] 74[207,3] 75[210,3] 76[213,3] 77[216,3] 78[219,3] 79[222,3] 80[225,3] 81[228,3] 82[231,3] 83[234,3] 84[237,3] 85[240,3] 86[243,3] 87[246,3] 88[249,3] 89[252,3] 90[255,3] 91[258,3] 92[261,3] 93[264,3] 94[267,3] 95[270,3] 96[273,3] 97[276,3] 98[279,3] 99[282,3] 100[285,3] 101[288,3] 102[291,3] 103[294,3] 104[297,3] 105[300,3] 106[303,3] 107[306,3] 108[309,3] 109[312,3] 110[315,3] 111[318,3] 112[321,3] 113[324,3] 114[327,3] 115[330,3] 116[333,3] 117[336,3] 118[339,3] 119[342,3] 120[345,3] 121[348,3] 122[351,3] 123[354,3] 124[357,3] 125[360,3] 126[363,3] 127[366,3] 133[369,1] 134[370,1] 135[371,1] 136[372,1] 138[373,1] 140[374,1] 
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 133 134 135 136
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 133 134 135 136
;; live  kill	
;; rd  in  	(10)
6, 12, 17, 21, 22, 26, 27, 31, 64, 65
;; rd  gen 	(5)
63, 369, 370, 371, 372
;; rd  kill	(9)
59, 60, 61, 62, 63, 369, 370, 371, 372

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 5 3 2 arch/arm/kernel/traps.c:412 (set (reg/v/f:SI 133 [ regs ])
        (reg:SI 0 r0 [ regs ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ regs ])
        (nil)))

(insn 3 2 4 2 arch/arm/kernel/traps.c:412 (set (reg/v:SI 134 [ reason ])
        (reg:SI 1 r1 [ reason ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ reason ])
        (nil)))

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 8 2 include/linux/printk.h:41 (set (reg/f:SI 135)
        (symbol_ref:SI ("console_printk") [flags 0xc0] <var_decl 0x10a9ad20 console_printk>)) 167 {*arm_movsi_insn} (nil))

(insn 8 7 9 2 include/linux/printk.h:41 (set (reg:SI 136 [ console_printk ])
        (mem/s/j:SI (reg/f:SI 135) [0 console_printk+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/j:SI (symbol_ref:SI ("console_printk") [flags 0xc0] <var_decl 0x10a9ad20 console_printk>) [0 console_printk+0 S4 A32])
        (nil)))

(insn 9 8 10 2 include/linux/printk.h:41 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 136 [ console_printk ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 136 [ console_printk ])
        (nil)))

(jump_insn 10 9 11 2 include/linux/printk.h:41 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 15)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 135
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 135
;; rd  out 	(15)
6, 12, 17, 21, 22, 26, 27, 31, 63, 64, 65, 369, 370, 371, 372


;; Succ edge  3 [50.0%]  (fallthru)
;; Succ edge  4 [50.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u9(11){ }u10(13){ }u11(25){ }u12(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 135
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 138
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 135
;; live  gen 	 138
;; live  kill	
;; rd  in  	(15)
6, 12, 17, 21, 22, 26, 27, 31, 63, 64, 65, 369, 370, 371, 372
;; rd  gen 	(1)
373
;; rd  kill	(1)
373

;; Pred edge  2 [50.0%]  (fallthru)
(note 11 10 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 13 11 14 3 include/linux/printk.h:42 (set (reg:SI 138)
        (const_int 15 [0xf])) 167 {*arm_movsi_insn} (nil))

(insn 14 13 15 3 include/linux/printk.h:42 (set (mem/s/j:SI (reg/f:SI 135) [0 console_printk+0 S4 A32])
        (reg:SI 138)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 138)
        (expr_list:REG_DEAD (reg/f:SI 135)
            (expr_list:REG_EQUAL (const_int 15 [0xf])
                (nil)))))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134
;; rd  out 	(16)
6, 12, 17, 21, 22, 26, 27, 31, 63, 64, 65, 369, 370, 371, 372, 373


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 3 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u15(11){ }u16(13){ }u17(25){ }u18(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 140
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 140
;; live  kill	 14 [lr] 24 [cc]
;; rd  in  	(16)
6, 12, 17, 21, 22, 26, 27, 31, 63, 64, 65, 369, 370, 371, 372, 373
;; rd  gen 	(1)
374
;; rd  kill	(5)
28, 29, 30, 31, 374

;; Pred edge  3 [100.0%]  (fallthru)
;; Pred edge  2 [50.0%] 
(code_label 15 14 16 4 100 "" [1 uses])

(note 16 15 18 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 18 16 19 4 arch/arm/kernel/traps.c:415 (set (reg/f:SI 140)
        (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 19 18 20 4 arch/arm/kernel/traps.c:415 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC27") [flags 0x82] <string_cst 0x11271a40>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC27") [flags 0x82] <string_cst 0x11271a40>)
        (nil)))

(insn 20 19 21 4 arch/arm/kernel/traps.c:415 (set (reg:SI 1 r1)
        (mem/s/u/f/j:SI (plus:SI (mult:SI (reg/v:SI 134 [ reason ])
                    (const_int 4 [0x4]))
                (reg/f:SI 140)) [0 handler S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 140)
        (expr_list:REG_DEAD (reg/v:SI 134 [ reason ])
            (expr_list:REG_EQUAL (mem/s/u/f/j:SI (plus:SI (mult:SI (reg/v:SI 134 [ reason ])
                            (const_int 4 [0x4]))
                        (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])) [0 handler S4 A32])
                (nil)))))

(call_insn 21 20 23 4 arch/arm/kernel/traps.c:415 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10aa9180 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 23 21 24 4 arch/arm/kernel/traps.c:417 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC28") [flags 0x82] <string_cst 0x112edd80>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC28") [flags 0x82] <string_cst 0x112edd80>)
        (nil)))

(insn 24 23 25 4 arch/arm/kernel/traps.c:417 (set (reg:SI 1 r1)
        (reg/v/f:SI 133 [ regs ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 133 [ regs ])
        (nil)))

(insn 25 24 26 4 arch/arm/kernel/traps.c:417 (set (reg:SI 2 r2)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(call_insn 26 25 27 4 arch/arm/kernel/traps.c:417 (parallel [
            (call (mem:SI (symbol_ref:SI ("die") [flags 0x3] <function_decl 0x512e8c80 die>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_DEAD (reg:SI 0 r0)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 27 26 29 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/irqflags.h:35 (parallel [
            (asm_operands/v ("	cpsid i			@ arch_local_irq_disable") ("") 0 []
                 [] 1179107)
            (clobber (reg:QI 24 cc))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(insn 29 27 30 4 arch/arm/kernel/traps.c:419 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC29") [flags 0x82] <string_cst 0x112edf60>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC29") [flags 0x82] <string_cst 0x112edf60>)
        (nil)))

(call_insn 30 29 31 4 arch/arm/kernel/traps.c:419 (parallel [
            (call (mem:SI (symbol_ref:SI ("panic") [flags 0x41] <function_decl 0x10aa9d00 panic>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_NORETURN (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 4 -> ()
;; lr  out 	 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(16)
6, 12, 17, 21, 22, 26, 27, 63, 64, 65, 369, 370, 371, 372, 373, 374



(barrier 31 30 0)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function arm_notify_die (arm_notify_die)[0:1064]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 8 (  1.6)


arm_notify_die

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 24[cc]
;;  ref usage 	r0={4d,2u} r1={4d,3u} r2={5d,3u} r3={3d,1u} r11={1d,4u} r12={3d} r13={1d,7u,1d} r14={1d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={3d,1u} r25={1d,4u} r26={1d,4u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r137={1d,1u} r138={1d,2u} r139={1d,2u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,3u} r144={1d,1u} r145={1d,1u} r148={1d,1u} 
;;    total ref usage 302{257d,44u,1e} in 20{18 regular + 2 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246
0[0,4] 1[4,4] 2[8,5] 3[13,3] 11[16,1] 12[17,3] 13[20,1] 14[21,1] 15[22,2] 16[24,2] 17[26,2] 18[28,2] 19[30,2] 20[32,2] 21[34,2] 22[36,2] 23[38,2] 24[40,3] 25[43,1] 26[44,1] 27[45,2] 28[47,2] 29[49,2] 30[51,2] 31[53,2] 32[55,2] 33[57,2] 34[59,2] 35[61,2] 36[63,2] 37[65,2] 38[67,2] 39[69,2] 40[71,2] 41[73,2] 42[75,2] 43[77,2] 44[79,2] 45[81,2] 46[83,2] 47[85,2] 48[87,2] 49[89,2] 50[91,2] 51[93,2] 52[95,2] 53[97,2] 54[99,2] 55[101,2] 56[103,2] 57[105,2] 58[107,2] 59[109,2] 60[111,2] 61[113,2] 62[115,2] 63[117,2] 64[119,2] 65[121,2] 66[123,2] 67[125,2] 68[127,2] 69[129,2] 70[131,2] 71[133,2] 72[135,2] 73[137,2] 74[139,2] 75[141,2] 76[143,2] 77[145,2] 78[147,2] 79[149,2] 80[151,2] 81[153,2] 82[155,2] 83[157,2] 84[159,2] 85[161,2] 86[163,2] 87[165,2] 88[167,2] 89[169,2] 90[171,2] 91[173,2] 92[175,2] 93[177,2] 94[179,2] 95[181,2] 96[183,2] 97[185,2] 98[187,2] 99[189,2] 100[191,2] 101[193,2] 102[195,2] 103[197,2] 104[199,2] 105[201,2] 106[203,2] 107[205,2] 108[207,2] 109[209,2] 110[211,2] 111[213,2] 112[215,2] 113[217,2] 114[219,2] 115[221,2] 116[223,2] 117[225,2] 118[227,2] 119[229,2] 120[231,2] 121[233,2] 122[235,2] 123[237,2] 124[239,2] 125[241,2] 126[243,2] 127[245,2] 137[247,1] 138[248,1] 139[249,1] 140[250,1] 141[251,1] 142[252,1] 143[253,1] 144[254,1] 145[255,1] 148[256,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d3(0){ }d7(1){ }d12(2){ }d15(3){ }d16(11){ }d19(12){ }d20(13){ }d21(14){ }d43(25){ }d44(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
3, 7, 12, 15, 16, 19, 20, 21, 43, 44
;; rd  kill	(24)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 43, 44
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
3, 7, 12, 15, 16, 19, 20, 21, 43, 44

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d16(bb 0 insn -1) }u1(13){ d20(bb 0 insn -1) }u2(25){ d43(bb 0 insn -1) }u3(26){ d44(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 137 138 139 140 141 142
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 137 138 139 140 141 142
;; live  kill	
;; rd  in  	(10)
3, 7, 12, 15, 16, 19, 20, 21, 43, 44
;; rd  gen 	(7)
42, 247, 248, 249, 250, 251, 252
;; rd  kill	(9)
40, 41, 42, 247, 248, 249, 250, 251, 252
;; lr  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 140
;; live  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 140
;; rd  out 	(17)
3, 7, 12, 15, 16, 19, 20, 21, 42, 43, 44, 247, 248, 249, 250, 251, 252
;;  UD chains for artificial uses
;;   reg 11 { d16(bb 0 insn -1) }
;;   reg 13 { d20(bb 0 insn -1) }
;;   reg 25 { d43(bb 0 insn -1) }
;;   reg 26 { d44(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 3
;;      reg 1 { d7(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 4
;;      reg 2 { d12(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 5
;;      reg 3 { d15(bb 0 insn -1) }
;;   UD chains for insn luid 3 uid 6
;;      reg 26 { d44(bb 0 insn -1) }
;;   UD chains for insn luid 4 uid 10
;;      reg 137 { d247(bb 2 insn 3) }
;;   UD chains for insn luid 5 uid 11
;;      reg 142 { d252(bb 2 insn 10) }
;;   UD chains for insn luid 6 uid 12
;;      reg 141 { d251(bb 2 insn 11) }
;;   UD chains for insn luid 7 uid 13
;;      reg 24 { d42(bb 2 insn 12) }

( 2 )->[3]->( 1 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u12(11){ d16(bb 0 insn -1) }u13(13){ d20(bb 0 insn -1) }u14(25){ d43(bb 0 insn -1) }u15(26){ d44(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 140
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 143 144 145 148
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 140
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 143 144 145 148
;; live  kill	
;; rd  in  	(17)
3, 7, 12, 15, 16, 19, 20, 21, 42, 43, 44, 247, 248, 249, 250, 251, 252
;; rd  gen 	(5)
1, 253, 254, 255, 256
;; rd  kill	(8)
0, 1, 2, 3, 253, 254, 255, 256
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(21)
1, 7, 12, 15, 16, 19, 20, 21, 42, 43, 44, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256
;;  UD chains for artificial uses
;;   reg 11 { d16(bb 0 insn -1) }
;;   reg 13 { d20(bb 0 insn -1) }
;;   reg 25 { d43(bb 0 insn -1) }
;;   reg 26 { d44(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 16
;;      reg 13 { d20(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 17
;;      reg 144 { d254(bb 3 insn 16) }
;;   eq_note reg 13 { }
;;   UD chains for insn luid 2 uid 18
;;      reg 143 { d253(bb 3 insn 17) }
;;   UD chains for insn luid 3 uid 19
;;      reg 139 { d249(bb 2 insn 5) }
;;      reg 145 { d255(bb 3 insn 18) }
;;   UD chains for insn luid 4 uid 23
;;      reg 143 { d253(bb 3 insn 17) }
;;   UD chains for insn luid 5 uid 24
;;      reg 140 { d250(bb 2 insn 6) }
;;      reg 148 { d256(bb 3 insn 23) }
;;   UD chains for insn luid 6 uid 28
;;      reg 138 { d248(bb 2 insn 4) }
;;   UD chains for insn luid 7 uid 29
;;      reg 138 { d248(bb 2 insn 4) }
;;   UD chains for insn luid 8 uid 30
;;      reg 143 { d253(bb 3 insn 17) }
;;   UD chains for insn luid 9 uid 31
;;      reg 13 { d20(bb 0 insn -1) }
;;      reg 0 { d2(bb 3 insn 28) }
;;      reg 1 { d6(bb 3 insn 29) }
;;      reg 2 { d8(bb 3 insn 30) }

( 2 )->[4]->( 1 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u32(11){ d16(bb 0 insn -1) }u33(13){ d20(bb 0 insn -1) }u34(25){ d43(bb 0 insn -1) }u35(26){ d44(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  gen 	 2 [r2]
;; live  kill	
;; rd  in  	(17)
3, 7, 12, 15, 16, 19, 20, 21, 42, 43, 44, 247, 248, 249, 250, 251, 252
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(17)
3, 7, 12, 15, 16, 19, 20, 21, 42, 43, 44, 247, 248, 249, 250, 251, 252
;;  UD chains for artificial uses
;;   reg 11 { d16(bb 0 insn -1) }
;;   reg 13 { d20(bb 0 insn -1) }
;;   reg 25 { d43(bb 0 insn -1) }
;;   reg 26 { d44(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 37
;;      reg 139 { d249(bb 2 insn 5) }
;;   UD chains for insn luid 1 uid 38
;;      reg 13 { d20(bb 0 insn -1) }
;;      reg 0 { d3(bb 0 insn -1) }
;;      reg 1 { d7(bb 0 insn -1) }
;;      reg 2 { d10(bb 4 insn 37) }

( 4 3 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u41(11){ d16(bb 0 insn -1) }u42(13){ d20(bb 0 insn -1) }u43(14){ d21(bb 0 insn -1) }u44(25){ d43(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(22)
1, 3, 7, 12, 15, 16, 19, 20, 21, 42, 43, 44, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(22)
1, 3, 7, 12, 15, 16, 19, 20, 21, 42, 43, 44, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256
;;  UD chains for artificial uses
;;   reg 11 { d16(bb 0 insn -1) }
;;   reg 13 { d20(bb 0 insn -1) }
;;   reg 14 { d21(bb 0 insn -1) }
;;   reg 25 { d43(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 13 to worklist
  Adding insn 31 to worklist
  Adding insn 24 to worklist
  Adding insn 19 to worklist
  Adding insn 38 to worklist
Finished finding needed instructions:
Processing use of (reg 13 sp) in insn 38:
Processing use of (reg 0 r0) in insn 38:
Processing use of (reg 1 r1) in insn 38:
Processing use of (reg 2 r2) in insn 38:
  Adding insn 37 to worklist
Processing use of (reg 139 [ err ]) in insn 37:
  Adding insn 5 to worklist
Processing use of (reg 3 r3) in insn 5:
Processing use of (reg 139 [ err ]) in insn 19:
Processing use of (reg 145 [ <variable>.task ]) in insn 19:
  Adding insn 18 to worklist
Processing use of (reg 143) in insn 18:
  Adding insn 17 to worklist
Processing use of (reg 144) in insn 17:
  Adding insn 16 to worklist
Processing use of (reg 13 sp) in insn 16:
Processing use of (reg 140 [ trap ]) in insn 24:
  Adding insn 6 to worklist
Processing use of (reg 148 [ <variable>.task ]) in insn 24:
  Adding insn 23 to worklist
Processing use of (reg 143) in insn 23:
Processing use of (reg 26 afp) in insn 6:
Processing use of (reg 13 sp) in insn 31:
Processing use of (reg 0 r0) in insn 31:
  Adding insn 28 to worklist
Processing use of (reg 1 r1) in insn 31:
  Adding insn 29 to worklist
Processing use of (reg 2 r2) in insn 31:
  Adding insn 30 to worklist
Processing use of (reg 143) in insn 30:
Processing use of (reg 138 [ info ]) in insn 29:
  Adding insn 4 to worklist
Processing use of (reg 2 r2) in insn 4:
Processing use of (reg 138 [ info ]) in insn 28:
Processing use of (reg 24 cc) in insn 13:
  Adding insn 12 to worklist
Processing use of (reg 141) in insn 12:
  Adding insn 11 to worklist
Processing use of (reg 142 [ <variable>.uregs+64 ]) in insn 11:
  Adding insn 10 to worklist
Processing use of (reg 137 [ regs ]) in insn 10:
  Adding insn 3 to worklist
Processing use of (reg 1 r1) in insn 3:


arm_notify_die

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 24[cc]
;;  ref usage 	r0={4d,2u} r1={4d,3u} r2={5d,3u} r3={3d,1u} r11={1d,4u} r12={3d} r13={1d,7u,1d} r14={1d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={3d,1u} r25={1d,4u} r26={1d,4u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r137={1d,1u} r138={1d,2u} r139={1d,2u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,3u} r144={1d,1u} r145={1d,1u} r148={1d,1u} 
;;    total ref usage 302{257d,44u,1e} in 20{18 regular + 2 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246
0[0,4] 1[4,4] 2[8,5] 3[13,3] 11[16,1] 12[17,3] 13[20,1] 14[21,1] 15[22,2] 16[24,2] 17[26,2] 18[28,2] 19[30,2] 20[32,2] 21[34,2] 22[36,2] 23[38,2] 24[40,3] 25[43,1] 26[44,1] 27[45,2] 28[47,2] 29[49,2] 30[51,2] 31[53,2] 32[55,2] 33[57,2] 34[59,2] 35[61,2] 36[63,2] 37[65,2] 38[67,2] 39[69,2] 40[71,2] 41[73,2] 42[75,2] 43[77,2] 44[79,2] 45[81,2] 46[83,2] 47[85,2] 48[87,2] 49[89,2] 50[91,2] 51[93,2] 52[95,2] 53[97,2] 54[99,2] 55[101,2] 56[103,2] 57[105,2] 58[107,2] 59[109,2] 60[111,2] 61[113,2] 62[115,2] 63[117,2] 64[119,2] 65[121,2] 66[123,2] 67[125,2] 68[127,2] 69[129,2] 70[131,2] 71[133,2] 72[135,2] 73[137,2] 74[139,2] 75[141,2] 76[143,2] 77[145,2] 78[147,2] 79[149,2] 80[151,2] 81[153,2] 82[155,2] 83[157,2] 84[159,2] 85[161,2] 86[163,2] 87[165,2] 88[167,2] 89[169,2] 90[171,2] 91[173,2] 92[175,2] 93[177,2] 94[179,2] 95[181,2] 96[183,2] 97[185,2] 98[187,2] 99[189,2] 100[191,2] 101[193,2] 102[195,2] 103[197,2] 104[199,2] 105[201,2] 106[203,2] 107[205,2] 108[207,2] 109[209,2] 110[211,2] 111[213,2] 112[215,2] 113[217,2] 114[219,2] 115[221,2] 116[223,2] 117[225,2] 118[227,2] 119[229,2] 120[231,2] 121[233,2] 122[235,2] 123[237,2] 124[239,2] 125[241,2] 126[243,2] 127[245,2] 137[247,1] 138[248,1] 139[249,1] 140[250,1] 141[251,1] 142[252,1] 143[253,1] 144[254,1] 145[255,1] 148[256,1] 
(note 1 0 8 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 137 138 139 140 141 142
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 137 138 139 140 141 142
;; live  kill	
;; rd  in  	(10)
3, 7, 12, 15, 16, 19, 20, 21, 43, 44
;; rd  gen 	(7)
42, 247, 248, 249, 250, 251, 252
;; rd  kill	(9)
40, 41, 42, 247, 248, 249, 250, 251, 252

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 8 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 3 8 4 2 arch/arm/kernel/traps.c:293 (set (reg/v/f:SI 137 [ regs ])
        (reg:SI 1 r1 [ regs ])) 167 {*arm_movsi_insn} (nil))

(insn 4 3 5 2 arch/arm/kernel/traps.c:293 (set (reg/v/f:SI 138 [ info ])
        (reg:SI 2 r2 [ info ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ info ])
        (nil)))

(insn 5 4 6 2 arch/arm/kernel/traps.c:293 (set (reg/v:SI 139 [ err ])
        (reg:SI 3 r3 [ err ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [ err ])
        (nil)))

(insn 6 5 7 2 arch/arm/kernel/traps.c:293 (set (reg/v:SI 140 [ trap ])
        (mem/c/i:SI (plus:SI (reg/f:SI 26 afp)
                (const_int 4 [0x4])) [0 trap+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(note 7 6 10 2 NOTE_INSN_FUNCTION_BEG)

(insn 10 7 11 2 arch/arm/kernel/traps.c:294 (set (reg:SI 142 [ <variable>.uregs+64 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 137 [ regs ])
                (const_int 64 [0x40])) [0 <variable>.uregs+64 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 137 [ regs ])
        (nil)))

(insn 11 10 12 2 arch/arm/kernel/traps.c:294 (set (reg:SI 141)
        (and:SI (reg:SI 142 [ <variable>.uregs+64 ])
            (const_int 15 [0xf]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 142 [ <variable>.uregs+64 ])
        (nil)))

(insn 12 11 13 2 arch/arm/kernel/traps.c:294 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 141)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 141)
        (nil)))

(jump_insn 13 12 14 2 arch/arm/kernel/traps.c:294 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 33)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 140
;; live  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 140
;; rd  out 	(17)
3, 7, 12, 15, 16, 19, 20, 21, 42, 43, 44, 247, 248, 249, 250, 251, 252


;; Succ edge  3 [39.0%]  (fallthru)
;; Succ edge  4 [61.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u12(11){ }u13(13){ }u14(25){ }u15(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 140
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 143 144 145 148
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 140
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 143 144 145 148
;; live  kill	
;; rd  in  	(17)
3, 7, 12, 15, 16, 19, 20, 21, 42, 43, 44, 247, 248, 249, 250, 251, 252
;; rd  gen 	(5)
1, 253, 254, 255, 256
;; rd  kill	(8)
0, 1, 2, 3, 253, 254, 255, 256

;; Pred edge  2 [39.0%]  (fallthru)
(note 14 13 16 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 16 14 17 3 arch/arm/kernel/traps.c:295 (set (reg:SI 144)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 17 16 18 3 arch/arm/kernel/traps.c:295 (set (reg:SI 143)
        (and:SI (reg:SI 144)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 144)
        (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
                (const_int -8192 [0xffffffffffffe000]))
            (nil))))

(insn 18 17 19 3 arch/arm/kernel/traps.c:295 (set (reg/f:SI 145 [ <variable>.task ])
        (mem/s/f/j:SI (plus:SI (reg:SI 143)
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 19 18 23 3 arch/arm/kernel/traps.c:295 (set (mem/s/j:SI (plus:SI (reg/f:SI 145 [ <variable>.task ])
                (const_int 792 [0x318])) [0 <variable>.thread.error_code+0 S4 A64])
        (reg/v:SI 139 [ err ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 145 [ <variable>.task ])
        (expr_list:REG_DEAD (reg/v:SI 139 [ err ])
            (nil))))

(insn 23 19 24 3 arch/arm/kernel/traps.c:296 (set (reg/f:SI 148 [ <variable>.task ])
        (mem/s/f/j:SI (plus:SI (reg:SI 143)
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 24 23 28 3 arch/arm/kernel/traps.c:296 (set (mem/s/j:SI (plus:SI (reg/f:SI 148 [ <variable>.task ])
                (const_int 788 [0x314])) [0 <variable>.thread.trap_no+0 S4 A32])
        (reg/v:SI 140 [ trap ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 148 [ <variable>.task ])
        (expr_list:REG_DEAD (reg/v:SI 140 [ trap ])
            (nil))))

(insn 28 24 29 3 arch/arm/kernel/traps.c:298 (set (reg:SI 0 r0)
        (mem/s/j:SI (reg/v/f:SI 138 [ info ]) [0 <variable>.si_signo+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 29 28 30 3 arch/arm/kernel/traps.c:298 (set (reg:SI 1 r1)
        (reg/v/f:SI 138 [ info ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 138 [ info ])
        (nil)))

(insn 30 29 31 3 arch/arm/kernel/traps.c:298 (set (reg:SI 2 r2)
        (mem/s/f/j:SI (plus:SI (reg:SI 143)
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 143)
        (nil)))

(call_insn/j 31 30 32 3 arch/arm/kernel/traps.c:298 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("force_sig_info") [flags 0x41] <function_decl 0x11008e80 force_sig_info>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))
;; End of basic block 3 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(21)
1, 7, 12, 15, 16, 19, 20, 21, 42, 43, 44, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 32 31 33)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u32(11){ }u33(13){ }u34(25){ }u35(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  gen 	 2 [r2]
;; live  kill	
;; rd  in  	(17)
3, 7, 12, 15, 16, 19, 20, 21, 42, 43, 44, 247, 248, 249, 250, 251, 252
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  2 [61.0%] 
(code_label 33 32 34 4 105 "" [1 uses])

(note 34 33 37 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 37 34 38 4 arch/arm/kernel/traps.c:300 (set (reg:SI 2 r2)
        (reg/v:SI 139 [ err ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 139 [ err ])
        (nil)))

(call_insn/j 38 37 39 4 arch/arm/kernel/traps.c:300 (parallel [
            (call (mem:SI (symbol_ref:SI ("die") [flags 0x3] <function_decl 0x512e8c80 die>) [0 S4 A32])
                (const_int 0 [0x0]))
            (return)
            (use (const_int 0 [0x0]))
        ]) 258 {*sibcall_insn} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_DEAD (reg:SI 0 r0)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))
;; End of basic block 4 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(17)
3, 7, 12, 15, 16, 19, 20, 21, 42, 43, 44, 247, 248, 249, 250, 251, 252


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 39 38 0)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function baddataabort (baddataabort)[0:1075]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


baddataabort

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr]
;;  ref usage 	r0={3d,1u} r1={3d,2u} r2={3d,2u} r3={3d,1u} r11={1d,2u} r12={2d} r13={1d,4u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,7u,1d} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,1u} r135={1d,1u} r136={1d,2u} r137={1d,1u} r138={1d,2u} r139={1d,1u} r140={1d,1u} r141={1d,1u} 
;;    total ref usage 171{139d,31u,1e} in 18{17 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130
0[0,3] 1[3,3] 2[6,3] 3[9,3] 11[12,1] 12[13,2] 13[15,1] 14[16,2] 15[18,1] 16[19,1] 17[20,1] 18[21,1] 19[22,1] 20[23,1] 21[24,1] 22[25,1] 23[26,1] 24[27,1] 25[28,1] 26[29,1] 27[30,1] 28[31,1] 29[32,1] 30[33,1] 31[34,1] 32[35,1] 33[36,1] 34[37,1] 35[38,1] 36[39,1] 37[40,1] 38[41,1] 39[42,1] 40[43,1] 41[44,1] 42[45,1] 43[46,1] 44[47,1] 45[48,1] 46[49,1] 47[50,1] 48[51,1] 49[52,1] 50[53,1] 51[54,1] 52[55,1] 53[56,1] 54[57,1] 55[58,1] 56[59,1] 57[60,1] 58[61,1] 59[62,1] 60[63,1] 61[64,1] 62[65,1] 63[66,1] 64[67,1] 65[68,1] 66[69,1] 67[70,1] 68[71,1] 69[72,1] 70[73,1] 71[74,1] 72[75,1] 73[76,1] 74[77,1] 75[78,1] 76[79,1] 77[80,1] 78[81,1] 79[82,1] 80[83,1] 81[84,1] 82[85,1] 83[86,1] 84[87,1] 85[88,1] 86[89,1] 87[90,1] 88[91,1] 89[92,1] 90[93,1] 91[94,1] 92[95,1] 93[96,1] 94[97,1] 95[98,1] 96[99,1] 97[100,1] 98[101,1] 99[102,1] 100[103,1] 101[104,1] 102[105,1] 103[106,1] 104[107,1] 105[108,1] 106[109,1] 107[110,1] 108[111,1] 109[112,1] 110[113,1] 111[114,1] 112[115,1] 113[116,1] 114[117,1] 115[118,1] 116[119,1] 117[120,1] 118[121,1] 119[122,1] 120[123,1] 121[124,1] 122[125,1] 123[126,1] 124[127,1] 125[128,1] 126[129,1] 127[130,1] 133[131,1] 135[132,1] 136[133,1] 137[134,1] 138[135,1] 139[136,1] 140[137,1] 141[138,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d2(0){ }d5(1){ }d8(2){ }d11(3){ }d12(11){ }d14(12){ }d15(13){ }d17(14){ }d28(25){ }d29(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
2, 5, 8, 11, 12, 14, 15, 17, 28, 29
;; rd  kill	(20)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 28, 29
;; lr  out 	 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(10)
2, 5, 8, 11, 12, 14, 15, 17, 28, 29

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d12(bb 0 insn -1) }u1(13){ d15(bb 0 insn -1) }u2(25){ d28(bb 0 insn -1) }u3(26){ d29(bb 0 insn -1) }}
;; lr  in  	 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 135 136 137 138 139 140 141
;; live  in  	 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 133 135 136 137 138 139 140 141
;; live  kill	 14 [lr]
;; rd  in  	(10)
2, 5, 8, 11, 12, 14, 15, 17, 28, 29
;; rd  gen 	(8)
131, 132, 133, 134, 135, 136, 137, 138
;; rd  kill	(10)
16, 17, 131, 132, 133, 134, 135, 136, 137, 138
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(17)
2, 5, 8, 11, 12, 14, 15, 28, 29, 131, 132, 133, 134, 135, 136, 137, 138
;;  UD chains for artificial uses
;;   reg 11 { d12(bb 0 insn -1) }
;;   reg 13 { d15(bb 0 insn -1) }
;;   reg 25 { d28(bb 0 insn -1) }
;;   reg 26 { d29(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 3
;;      reg 1 { d5(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 4
;;      reg 2 { d8(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 8
;;      reg 136 { d133(bb 2 insn 4) }
;;   UD chains for insn luid 4 uid 10
;;      reg 25 { d28(bb 0 insn -1) }
;;      reg 137 { d134(bb 2 insn 9) }
;;   UD chains for insn luid 6 uid 12
;;      reg 25 { d28(bb 0 insn -1) }
;;      reg 138 { d135(bb 2 insn 11) }
;;   UD chains for insn luid 8 uid 14
;;      reg 25 { d28(bb 0 insn -1) }
;;      reg 139 { d136(bb 2 insn 13) }
;;   UD chains for insn luid 9 uid 15
;;      reg 25 { d28(bb 0 insn -1) }
;;      reg 133 { d131(bb 2 insn 8) }
;;   UD chains for insn luid 11 uid 17
;;      reg 25 { d28(bb 0 insn -1) }
;;   UD chains for insn luid 12 uid 19
;;      reg 13 { d15(bb 0 insn -1) }
;;      reg 138 { d135(bb 2 insn 11) }
;;   UD chains for insn luid 13 uid 20
;;      reg 140 { d137(bb 2 insn 16) }
;;   UD chains for insn luid 14 uid 21
;;      reg 136 { d133(bb 2 insn 4) }
;;   UD chains for insn luid 15 uid 22
;;      reg 141 { d138(bb 2 insn 17) }
;;   eq_note reg 25 { }
;;   UD chains for insn luid 16 uid 23
;;      reg 135 { d132(bb 2 insn 3) }
;;   UD chains for insn luid 17 uid 24
;;      reg 13 { d15(bb 0 insn -1) }
;;      reg 0 { d1(bb 2 insn 20) }
;;      reg 1 { d4(bb 2 insn 21) }
;;      reg 2 { d7(bb 2 insn 22) }
;;      reg 3 { d10(bb 2 insn 23) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u28(11){ d12(bb 0 insn -1) }u29(13){ d15(bb 0 insn -1) }u30(14){ }u31(25){ d28(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(17)
2, 5, 8, 11, 12, 14, 15, 28, 29, 131, 132, 133, 134, 135, 136, 137, 138
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(17)
2, 5, 8, 11, 12, 14, 15, 28, 29, 131, 132, 133, 134, 135, 136, 137, 138
;;  UD chains for artificial uses
;;   reg 11 { d12(bb 0 insn -1) }
;;   reg 13 { d15(bb 0 insn -1) }
;;   reg 14 { }
;;   reg 25 { d28(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 24 to worklist
  Adding insn 19 to worklist
  Adding insn 15 to worklist
  Adding insn 14 to worklist
  Adding insn 12 to worklist
  Adding insn 10 to worklist
Finished finding needed instructions:
Processing use of (reg 25 sfp) in insn 10:
Processing use of (reg 137) in insn 10:
  Adding insn 9 to worklist
Processing use of (reg 25 sfp) in insn 12:
Processing use of (reg 138) in insn 12:
  Adding insn 11 to worklist
Processing use of (reg 25 sfp) in insn 14:
Processing use of (reg 139) in insn 14:
  Adding insn 13 to worklist
Processing use of (reg 25 sfp) in insn 15:
Processing use of (reg 133 [ addr ]) in insn 15:
  Adding insn 8 to worklist
Processing use of (reg 136 [ regs ]) in insn 8:
  Adding insn 4 to worklist
Processing use of (reg 2 r2) in insn 4:
Processing use of (reg 13 sp) in insn 19:
Processing use of (reg 138) in insn 19:
Processing use of (reg 13 sp) in insn 24:
Processing use of (reg 0 r0) in insn 24:
  Adding insn 20 to worklist
Processing use of (reg 1 r1) in insn 24:
  Adding insn 21 to worklist
Processing use of (reg 2 r2) in insn 24:
  Adding insn 22 to worklist
Processing use of (reg 3 r3) in insn 24:
  Adding insn 23 to worklist
Processing use of (reg 135 [ instr ]) in insn 23:
  Adding insn 3 to worklist
Processing use of (reg 1 r1) in insn 3:
Processing use of (reg 141) in insn 22:
  Adding insn 17 to worklist
Processing use of (reg 25 sfp) in insn 17:
Processing use of (reg 136 [ regs ]) in insn 21:
Processing use of (reg 140) in insn 20:
  Adding insn 16 to worklist


baddataabort

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr]
;;  ref usage 	r0={3d,1u} r1={3d,2u} r2={3d,2u} r3={3d,1u} r11={1d,2u} r12={2d} r13={1d,4u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,7u,1d} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,1u} r135={1d,1u} r136={1d,2u} r137={1d,1u} r138={1d,2u} r139={1d,1u} r140={1d,1u} r141={1d,1u} 
;;    total ref usage 171{139d,31u,1e} in 18{17 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130
0[0,3] 1[3,3] 2[6,3] 3[9,3] 11[12,1] 12[13,2] 13[15,1] 14[16,2] 15[18,1] 16[19,1] 17[20,1] 18[21,1] 19[22,1] 20[23,1] 21[24,1] 22[25,1] 23[26,1] 24[27,1] 25[28,1] 26[29,1] 27[30,1] 28[31,1] 29[32,1] 30[33,1] 31[34,1] 32[35,1] 33[36,1] 34[37,1] 35[38,1] 36[39,1] 37[40,1] 38[41,1] 39[42,1] 40[43,1] 41[44,1] 42[45,1] 43[46,1] 44[47,1] 45[48,1] 46[49,1] 47[50,1] 48[51,1] 49[52,1] 50[53,1] 51[54,1] 52[55,1] 53[56,1] 54[57,1] 55[58,1] 56[59,1] 57[60,1] 58[61,1] 59[62,1] 60[63,1] 61[64,1] 62[65,1] 63[66,1] 64[67,1] 65[68,1] 66[69,1] 67[70,1] 68[71,1] 69[72,1] 70[73,1] 71[74,1] 72[75,1] 73[76,1] 74[77,1] 75[78,1] 76[79,1] 77[80,1] 78[81,1] 79[82,1] 80[83,1] 81[84,1] 82[85,1] 83[86,1] 84[87,1] 85[88,1] 86[89,1] 87[90,1] 88[91,1] 89[92,1] 90[93,1] 91[94,1] 92[95,1] 93[96,1] 94[97,1] 95[98,1] 96[99,1] 97[100,1] 98[101,1] 99[102,1] 100[103,1] 101[104,1] 102[105,1] 103[106,1] 104[107,1] 105[108,1] 106[109,1] 107[110,1] 108[111,1] 109[112,1] 110[113,1] 111[114,1] 112[115,1] 113[116,1] 114[117,1] 115[118,1] 116[119,1] 117[120,1] 118[121,1] 119[122,1] 120[123,1] 121[124,1] 122[125,1] 123[126,1] 124[127,1] 125[128,1] 126[129,1] 127[130,1] 133[131,1] 135[132,1] 136[133,1] 137[134,1] 138[135,1] 139[136,1] 140[137,1] 141[138,1] 
(note 1 0 6 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 135 136 137 138 139 140 141
;; live  in  	 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 133 135 136 137 138 139 140 141
;; live  kill	 14 [lr]
;; rd  in  	(10)
2, 5, 8, 11, 12, 14, 15, 17, 28, 29
;; rd  gen 	(8)
131, 132, 133, 134, 135, 136, 137, 138
;; rd  kill	(10)
16, 17, 131, 132, 133, 134, 135, 136, 137, 138

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 3 6 4 2 arch/arm/kernel/traps.c:690 (set (reg/v:SI 135 [ instr ])
        (reg:SI 1 r1 [ instr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ instr ])
        (nil)))

(insn 4 3 5 2 arch/arm/kernel/traps.c:690 (set (reg/v/f:SI 136 [ regs ])
        (reg:SI 2 r2 [ regs ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ regs ])
        (nil)))

(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)

(insn 8 5 9 2 arch/arm/kernel/traps.c:691 (set (reg/v:SI 133 [ addr ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 136 [ regs ])
                (const_int 60 [0x3c])) [0 <variable>.uregs+60 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 9 8 10 2 arch/arm/kernel/traps.c:703 (set (reg:SI 137)
        (const_int 4 [0x4])) 167 {*arm_movsi_insn} (nil))

(insn 10 9 11 2 arch/arm/kernel/traps.c:703 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -128 [0xffffffffffffff80])) [0 info.si_signo+0 S4 A64])
        (reg:SI 137)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 137)
        (expr_list:REG_EQUAL (const_int 4 [0x4])
            (nil))))

(insn 11 10 12 2 arch/arm/kernel/traps.c:704 (set (reg:SI 138)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 12 11 13 2 arch/arm/kernel/traps.c:704 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -124 [0xffffffffffffff84])) [0 info.si_errno+0 S4 A32])
        (reg:SI 138)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 13 12 14 2 arch/arm/kernel/traps.c:705 (set (reg:SI 139)
        (const_int 196609 [0x30001])) 167 {*arm_movsi_insn} (nil))

(insn 14 13 15 2 arch/arm/kernel/traps.c:705 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -120 [0xffffffffffffff88])) [0 info.si_code+0 S4 A64])
        (reg:SI 139)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 139)
        (expr_list:REG_EQUAL (const_int 196609 [0x30001])
            (nil))))

(insn 15 14 16 2 arch/arm/kernel/traps.c:706 (set (mem/s/f/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -116 [0xffffffffffffff8c])) [0 info._sifields._sigfault._addr+0 S4 A32])
        (reg/v:SI 133 [ addr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 133 [ addr ])
        (nil)))

(insn 16 15 17 2 arch/arm/kernel/traps.c:708 (set (reg/f:SI 140)
        (symbol_ref/v/f:SI ("*.LC30") [flags 0x82] <string_cst 0x11273e00>)) 167 {*arm_movsi_insn} (nil))

(insn 17 16 19 2 arch/arm/kernel/traps.c:708 (set (reg/f:SI 141)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -128 [0xffffffffffffff80]))) 4 {*arm_addsi3} (nil))

(insn 19 17 20 2 arch/arm/kernel/traps.c:708 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg:SI 138)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 138)
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn 20 19 21 2 arch/arm/kernel/traps.c:708 (set (reg:SI 0 r0)
        (reg/f:SI 140)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 140)
        (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC30") [flags 0x82] <string_cst 0x11273e00>)
            (nil))))

(insn 21 20 22 2 arch/arm/kernel/traps.c:708 (set (reg:SI 1 r1)
        (reg/v/f:SI 136 [ regs ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 136 [ regs ])
        (nil)))

(insn 22 21 23 2 arch/arm/kernel/traps.c:708 (set (reg:SI 2 r2)
        (reg/f:SI 141)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 141)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -128 [0xffffffffffffff80]))
            (nil))))

(insn 23 22 24 2 arch/arm/kernel/traps.c:708 (set (reg:SI 3 r3)
        (reg/v:SI 135 [ instr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 135 [ instr ])
        (nil)))

(call_insn 24 23 0 2 arch/arm/kernel/traps.c:708 (parallel [
            (call (mem:SI (symbol_ref:SI ("arm_notify_die") [flags 0x3] <function_decl 0x512e8d00 arm_notify_die>) [0 S4 A32])
                (const_int 8 [0x8]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_DEAD (reg:SI 0 r0)
                    (expr_list:REG_EH_REGION (const_int 0 [0x0])
                        (nil))))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(17)
2, 5, 8, 11, 12, 14, 15, 28, 29, 131, 132, 133, 134, 135, 136, 137, 138


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function bad_syscall (bad_syscall)[0:1071]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 10 (  1.4)
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 12 (  1.7)
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 12 (  1.7)


bad_syscall

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={5d,5u} r1={4d,3u} r2={4d,1u} r3={4d,1u} r11={1d,6u} r12={3d} r13={1d,10u,1d} r14={3d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={5d,3u} r25={1d,11u,1d} r26={1d,5u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r135={1d,1u} r136={2d,1u} r137={1d,2u} r139={1d,1u} r140={1d,5u} r141={1d,2u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,2u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r157={1d,1u} 
;;    total ref usage 346{272d,72u,2e} in 39{37 regular + 2 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251
0[0,5] 1[5,4] 2[9,4] 3[13,4] 11[17,1] 12[18,3] 13[21,1] 14[22,3] 15[25,2] 16[27,2] 17[29,2] 18[31,2] 19[33,2] 20[35,2] 21[37,2] 22[39,2] 23[41,2] 24[43,5] 25[48,1] 26[49,1] 27[50,2] 28[52,2] 29[54,2] 30[56,2] 31[58,2] 32[60,2] 33[62,2] 34[64,2] 35[66,2] 36[68,2] 37[70,2] 38[72,2] 39[74,2] 40[76,2] 41[78,2] 42[80,2] 43[82,2] 44[84,2] 45[86,2] 46[88,2] 47[90,2] 48[92,2] 49[94,2] 50[96,2] 51[98,2] 52[100,2] 53[102,2] 54[104,2] 55[106,2] 56[108,2] 57[110,2] 58[112,2] 59[114,2] 60[116,2] 61[118,2] 62[120,2] 63[122,2] 64[124,2] 65[126,2] 66[128,2] 67[130,2] 68[132,2] 69[134,2] 70[136,2] 71[138,2] 72[140,2] 73[142,2] 74[144,2] 75[146,2] 76[148,2] 77[150,2] 78[152,2] 79[154,2] 80[156,2] 81[158,2] 82[160,2] 83[162,2] 84[164,2] 85[166,2] 86[168,2] 87[170,2] 88[172,2] 89[174,2] 90[176,2] 91[178,2] 92[180,2] 93[182,2] 94[184,2] 95[186,2] 96[188,2] 97[190,2] 98[192,2] 99[194,2] 100[196,2] 101[198,2] 102[200,2] 103[202,2] 104[204,2] 105[206,2] 106[208,2] 107[210,2] 108[212,2] 109[214,2] 110[216,2] 111[218,2] 112[220,2] 113[222,2] 114[224,2] 115[226,2] 116[228,2] 117[230,2] 118[232,2] 119[234,2] 120[236,2] 121[238,2] 122[240,2] 123[242,2] 124[244,2] 125[246,2] 126[248,2] 127[250,2] 135[252,1] 136[253,2] 137[255,1] 139[256,1] 140[257,1] 141[258,1] 142[259,1] 143[260,1] 144[261,1] 145[262,1] 148[263,1] 149[264,1] 150[265,1] 151[266,1] 152[267,1] 153[268,1] 154[269,1] 155[270,1] 157[271,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d4(0){ }d8(1){ }d12(2){ }d16(3){ }d17(11){ }d20(12){ }d21(13){ }d24(14){ }d48(25){ }d49(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
4, 8, 12, 16, 17, 20, 21, 24, 48, 49
;; rd  kill	(27)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 48, 49
;; lr  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(10)
4, 8, 12, 16, 17, 20, 21, 24, 48, 49

( 0 )->[2]->( 3 5 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d17(bb 0 insn -1) }u1(13){ d21(bb 0 insn -1) }u2(25){ d48(bb 0 insn -1) }u3(26){ d49(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 139 140 141 142 143 144 145
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 139 140 141 142 143 144 145
;; live  kill	
;; rd  in  	(10)
4, 8, 12, 16, 17, 20, 21, 24, 48, 49
;; rd  gen 	(8)
47, 256, 257, 258, 259, 260, 261, 262
;; rd  kill	(12)
43, 44, 45, 46, 47, 256, 257, 258, 259, 260, 261, 262
;; lr  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 141
;; live  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 141
;; rd  out 	(18)
4, 8, 12, 16, 17, 20, 21, 24, 47, 48, 49, 256, 257, 258, 259, 260, 261, 262
;;  UD chains for artificial uses
;;   reg 11 { d17(bb 0 insn -1) }
;;   reg 13 { d21(bb 0 insn -1) }
;;   reg 25 { d48(bb 0 insn -1) }
;;   reg 26 { d49(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d4(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 3
;;      reg 1 { d8(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 9
;;      reg 13 { d21(bb 0 insn -1) }
;;   UD chains for insn luid 3 uid 10
;;      reg 142 { d259(bb 2 insn 9) }
;;   eq_note reg 13 { }
;;   UD chains for insn luid 4 uid 11
;;      reg 141 { d258(bb 2 insn 10) }
;;   UD chains for insn luid 5 uid 12
;;      reg 143 { d260(bb 2 insn 11) }
;;   UD chains for insn luid 6 uid 13
;;      reg 145 { d262(bb 2 insn 12) }
;;   UD chains for insn luid 7 uid 14
;;      reg 144 { d261(bb 2 insn 13) }
;;   UD chains for insn luid 8 uid 15
;;      reg 24 { d47(bb 2 insn 14) }

( 2 )->[3]->( 4 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u14(11){ d17(bb 0 insn -1) }u15(13){ d21(bb 0 insn -1) }u16(25){ d48(bb 0 insn -1) }u17(26){ d49(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 24 [cc] 137 148
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 141
;; live  gen 	 24 [cc] 137 148
;; live  kill	
;; rd  in  	(18)
4, 8, 12, 16, 17, 20, 21, 24, 47, 48, 49, 256, 257, 258, 259, 260, 261, 262
;; rd  gen 	(3)
46, 255, 263
;; rd  kill	(7)
43, 44, 45, 46, 47, 255, 263
;; lr  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 140
;; live  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 140
;; rd  out 	(20)
4, 8, 12, 16, 17, 20, 21, 24, 46, 48, 49, 255, 256, 257, 258, 259, 260, 261, 262, 263
;;  UD chains for artificial uses
;;   reg 11 { d17(bb 0 insn -1) }
;;   reg 13 { d21(bb 0 insn -1) }
;;   reg 25 { d48(bb 0 insn -1) }
;;   reg 26 { d49(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 19
;;      reg 141 { d258(bb 2 insn 10) }
;;   UD chains for insn luid 1 uid 20
;;      reg 148 { d263(bb 3 insn 19) }
;;   UD chains for insn luid 2 uid 21
;;      reg 137 { d255(bb 3 insn 20) }
;;   UD chains for insn luid 3 uid 22
;;      reg 24 { d46(bb 3 insn 21) }

( 3 )->[4]->( 6 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u22(11){ d17(bb 0 insn -1) }u23(13){ d21(bb 0 insn -1) }u24(25){ d48(bb 0 insn -1) }u25(26){ d49(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 140
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 140
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 136
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 140
;; live  gen 	 136
;; live  kill	 14 [lr]
;; rd  in  	(20)
4, 8, 12, 16, 17, 20, 21, 24, 46, 48, 49, 255, 256, 257, 258, 259, 260, 261, 262, 263
;; rd  gen 	(1)
254
;; rd  kill	(5)
22, 23, 24, 253, 254
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; rd  out 	(20)
4, 8, 12, 16, 17, 20, 21, 46, 48, 49, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263
;;  UD chains for artificial uses
;;   reg 11 { d17(bb 0 insn -1) }
;;   reg 13 { d21(bb 0 insn -1) }
;;   reg 25 { d48(bb 0 insn -1) }
;;   reg 26 { d49(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 26
;;      reg 13 { d21(bb 0 insn -1) }
;;      reg 0 { d4(bb 0 insn -1) }
;;      reg 1 { d8(bb 0 insn -1) }
;;      reg 137 { d255(bb 3 insn 20) }
;;   UD chains for insn luid 1 uid 27
;;      reg 140 { d257(bb 2 insn 3) }

( 2 3 )->[5]->( 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u31(11){ d17(bb 0 insn -1) }u32(13){ d21(bb 0 insn -1) }u33(25){ d48(bb 0 insn -1) }u34(26){ d49(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 135 136 149 150 151 152 153 154 155 157
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc] 135 136 149 150 151 152 153 154 155 157
;; live  kill	 14 [lr]
;; rd  in  	(21)
4, 8, 12, 16, 17, 20, 21, 24, 46, 47, 48, 49, 255, 256, 257, 258, 259, 260, 261, 262, 263
;; rd  gen 	(10)
252, 253, 264, 265, 266, 267, 268, 269, 270, 271
;; rd  kill	(14)
22, 23, 24, 252, 253, 254, 264, 265, 266, 267, 268, 269, 270, 271
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; rd  out 	(30)
4, 8, 12, 16, 17, 20, 21, 46, 47, 48, 49, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271
;;  UD chains for artificial uses
;;   reg 11 { d17(bb 0 insn -1) }
;;   reg 13 { d21(bb 0 insn -1) }
;;   reg 25 { d48(bb 0 insn -1) }
;;   reg 26 { d49(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 33
;;      reg 25 { d48(bb 0 insn -1) }
;;      reg 149 { d264(bb 5 insn 32) }
;;   UD chains for insn luid 3 uid 35
;;      reg 25 { d48(bb 0 insn -1) }
;;      reg 150 { d265(bb 5 insn 34) }
;;   UD chains for insn luid 5 uid 37
;;      reg 25 { d48(bb 0 insn -1) }
;;      reg 151 { d266(bb 5 insn 36) }
;;   UD chains for insn luid 6 uid 38
;;      reg 140 { d257(bb 2 insn 3) }
;;   UD chains for insn luid 7 uid 39
;;      reg 153 { d268(bb 5 insn 38) }
;;   UD chains for insn luid 8 uid 80
;;      reg 152 { d267(bb 5 insn 39) }
;;   UD chains for insn luid 9 uid 81
;;      reg 24 { d43(bb 5 insn 80) }
;;   UD chains for insn luid 10 uid 51
;;      reg 140 { d257(bb 2 insn 3) }
;;   UD chains for insn luid 11 uid 52
;;      reg 135 { d252(bb 5 insn 81) }
;;      reg 154 { d269(bb 5 insn 51) }
;;   UD chains for insn luid 12 uid 53
;;      reg 25 { d48(bb 0 insn -1) }
;;      reg 155 { d270(bb 5 insn 52) }
;;   UD chains for insn luid 13 uid 55
;;      reg 25 { d48(bb 0 insn -1) }
;;   UD chains for insn luid 14 uid 57
;;      reg 13 { d21(bb 0 insn -1) }
;;      reg 150 { d265(bb 5 insn 34) }
;;   UD chains for insn luid 16 uid 59
;;      reg 140 { d257(bb 2 insn 3) }
;;   UD chains for insn luid 17 uid 60
;;      reg 157 { d271(bb 5 insn 55) }
;;   eq_note reg 25 { }
;;   UD chains for insn luid 18 uid 61
;;      reg 139 { d256(bb 2 insn 2) }
;;   UD chains for insn luid 19 uid 62
;;      reg 13 { d21(bb 0 insn -1) }
;;      reg 0 { d0(bb 5 insn 58) }
;;      reg 1 { d6(bb 5 insn 59) }
;;      reg 2 { d10(bb 5 insn 60) }
;;      reg 3 { d14(bb 5 insn 61) }
;;   UD chains for insn luid 20 uid 63
;;      reg 140 { d257(bb 2 insn 3) }

( 5 4 )->[6]->( 1 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u63(11){ d17(bb 0 insn -1) }u64(13){ d21(bb 0 insn -1) }u65(25){ d48(bb 0 insn -1) }u66(26){ d49(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(31)
4, 8, 12, 16, 17, 20, 21, 46, 47, 48, 49, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271
;; rd  gen 	(1)
1
;; rd  kill	(5)
0, 1, 2, 3, 4
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(31)
1, 8, 12, 16, 17, 20, 21, 46, 47, 48, 49, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271
;;  UD chains for artificial uses
;;   reg 11 { d17(bb 0 insn -1) }
;;   reg 13 { d21(bb 0 insn -1) }
;;   reg 25 { d48(bb 0 insn -1) }
;;   reg 26 { d49(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 70
;;      reg 136 { d254(bb 4 insn 27) d253(bb 5 insn 63) }
;;   UD chains for insn luid 1 uid 76
;;      reg 0 { d1(bb 6 insn 70) }

( 6 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u69(0){ d1(bb 6 insn 70) }u70(11){ d17(bb 0 insn -1) }u71(13){ d21(bb 0 insn -1) }u72(14){ }u73(25){ d48(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(31)
1, 8, 12, 16, 17, 20, 21, 46, 47, 48, 49, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(31)
1, 8, 12, 16, 17, 20, 21, 46, 47, 48, 49, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271
;;  UD chains for artificial uses
;;   reg 0 { d1(bb 6 insn 70) }
;;   reg 11 { d17(bb 0 insn -1) }
;;   reg 13 { d21(bb 0 insn -1) }
;;   reg 14 { }
;;   reg 25 { d48(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 15 to worklist
  Adding insn 22 to worklist
  Adding insn 82 to worklist
  Adding insn 26 to worklist
  Adding insn 62 to worklist
  Adding insn 57 to worklist
  Adding insn 53 to worklist
  Adding insn 37 to worklist
  Adding insn 35 to worklist
  Adding insn 33 to worklist
  Adding insn 76 to worklist
Finished finding needed instructions:
  Adding insn 70 to worklist
Processing use of (reg 136 [ D.18619 ]) in insn 70:
  Adding insn 27 to worklist
  Adding insn 63 to worklist
Processing use of (reg 140 [ regs ]) in insn 63:
  Adding insn 3 to worklist
Processing use of (reg 1 r1) in insn 3:
Processing use of (reg 140 [ regs ]) in insn 27:
Processing use of (reg 0 r0) in insn 76:
Processing use of (reg 25 sfp) in insn 33:
Processing use of (reg 149) in insn 33:
  Adding insn 32 to worklist
Processing use of (reg 25 sfp) in insn 35:
Processing use of (reg 150) in insn 35:
  Adding insn 34 to worklist
Processing use of (reg 25 sfp) in insn 37:
Processing use of (reg 151) in insn 37:
  Adding insn 36 to worklist
Processing use of (reg 25 sfp) in insn 53:
Processing use of (reg 155) in insn 53:
  Adding insn 52 to worklist
Processing use of (reg 135 [ iftmp.302 ]) in insn 52:
  Adding insn 81 to worklist
Processing use of (reg 154 [ <variable>.uregs+60 ]) in insn 52:
  Adding insn 51 to worklist
Processing use of (reg 140 [ regs ]) in insn 51:
Processing use of (reg 24 cc) in insn 81:
  Adding insn 80 to worklist
Processing use of (reg 152) in insn 80:
  Adding insn 39 to worklist
Processing use of (reg 153 [ <variable>.uregs+64 ]) in insn 39:
  Adding insn 38 to worklist
Processing use of (reg 140 [ regs ]) in insn 38:
Processing use of (reg 13 sp) in insn 57:
Processing use of (reg 150) in insn 57:
Processing use of (reg 13 sp) in insn 62:
Processing use of (reg 0 r0) in insn 62:
  Adding insn 58 to worklist
Processing use of (reg 1 r1) in insn 62:
  Adding insn 59 to worklist
Processing use of (reg 2 r2) in insn 62:
  Adding insn 60 to worklist
Processing use of (reg 3 r3) in insn 62:
  Adding insn 61 to worklist
Processing use of (reg 139 [ n ]) in insn 61:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 157) in insn 60:
  Adding insn 55 to worklist
Processing use of (reg 25 sfp) in insn 55:
Processing use of (reg 140 [ regs ]) in insn 59:
Processing use of (reg 13 sp) in insn 26:
Processing use of (reg 0 r0) in insn 26:
Processing use of (reg 1 r1) in insn 26:
Processing use of (reg 137 [ D.18616 ]) in insn 26:
  Adding insn 20 to worklist
Processing use of (reg 148 [ <variable>.exec_domain ]) in insn 20:
  Adding insn 19 to worklist
Processing use of (reg 141) in insn 19:
  Adding insn 10 to worklist
Processing use of (reg 142) in insn 10:
  Adding insn 9 to worklist
Processing use of (reg 13 sp) in insn 9:
Processing use of (reg 24 cc) in insn 22:
  Adding insn 21 to worklist
Processing use of (reg 137 [ D.18616 ]) in insn 21:
Processing use of (reg 24 cc) in insn 15:
  Adding insn 14 to worklist
Processing use of (reg 144) in insn 14:
  Adding insn 13 to worklist
Processing use of (reg 145 [ <variable>.personality ]) in insn 13:
  Adding insn 12 to worklist
Processing use of (reg 143 [ <variable>.task ]) in insn 12:
  Adding insn 11 to worklist
Processing use of (reg 141) in insn 11:


bad_syscall

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={5d,5u} r1={4d,3u} r2={4d,1u} r3={4d,1u} r11={1d,6u} r12={3d} r13={1d,10u,1d} r14={3d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={5d,3u} r25={1d,11u,1d} r26={1d,5u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r135={1d,1u} r136={2d,1u} r137={1d,2u} r139={1d,1u} r140={1d,5u} r141={1d,2u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,2u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r157={1d,1u} 
;;    total ref usage 346{272d,72u,2e} in 39{37 regular + 2 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251
0[0,5] 1[5,4] 2[9,4] 3[13,4] 11[17,1] 12[18,3] 13[21,1] 14[22,3] 15[25,2] 16[27,2] 17[29,2] 18[31,2] 19[33,2] 20[35,2] 21[37,2] 22[39,2] 23[41,2] 24[43,5] 25[48,1] 26[49,1] 27[50,2] 28[52,2] 29[54,2] 30[56,2] 31[58,2] 32[60,2] 33[62,2] 34[64,2] 35[66,2] 36[68,2] 37[70,2] 38[72,2] 39[74,2] 40[76,2] 41[78,2] 42[80,2] 43[82,2] 44[84,2] 45[86,2] 46[88,2] 47[90,2] 48[92,2] 49[94,2] 50[96,2] 51[98,2] 52[100,2] 53[102,2] 54[104,2] 55[106,2] 56[108,2] 57[110,2] 58[112,2] 59[114,2] 60[116,2] 61[118,2] 62[120,2] 63[122,2] 64[124,2] 65[126,2] 66[128,2] 67[130,2] 68[132,2] 69[134,2] 70[136,2] 71[138,2] 72[140,2] 73[142,2] 74[144,2] 75[146,2] 76[148,2] 77[150,2] 78[152,2] 79[154,2] 80[156,2] 81[158,2] 82[160,2] 83[162,2] 84[164,2] 85[166,2] 86[168,2] 87[170,2] 88[172,2] 89[174,2] 90[176,2] 91[178,2] 92[180,2] 93[182,2] 94[184,2] 95[186,2] 96[188,2] 97[190,2] 98[192,2] 99[194,2] 100[196,2] 101[198,2] 102[200,2] 103[202,2] 104[204,2] 105[206,2] 106[208,2] 107[210,2] 108[212,2] 109[214,2] 110[216,2] 111[218,2] 112[220,2] 113[222,2] 114[224,2] 115[226,2] 116[228,2] 117[230,2] 118[232,2] 119[234,2] 120[236,2] 121[238,2] 122[240,2] 123[242,2] 124[244,2] 125[246,2] 126[248,2] 127[250,2] 135[252,1] 136[253,2] 137[255,1] 139[256,1] 140[257,1] 141[258,1] 142[259,1] 143[260,1] 144[261,1] 145[262,1] 148[263,1] 149[264,1] 150[265,1] 151[266,1] 152[267,1] 153[268,1] 154[269,1] 155[270,1] 157[271,1] 
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 139 140 141 142 143 144 145
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 139 140 141 142 143 144 145
;; live  kill	
;; rd  in  	(10)
4, 8, 12, 16, 17, 20, 21, 24, 48, 49
;; rd  gen 	(8)
47, 256, 257, 258, 259, 260, 261, 262
;; rd  kill	(12)
43, 44, 45, 46, 47, 256, 257, 258, 259, 260, 261, 262

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 5 3 2 arch/arm/kernel/traps.c:423 (set (reg/v:SI 139 [ n ])
        (reg:SI 0 r0 [ n ])) 167 {*arm_movsi_insn} (nil))

(insn 3 2 4 2 arch/arm/kernel/traps.c:423 (set (reg/v/f:SI 140 [ regs ])
        (reg:SI 1 r1 [ regs ])) 167 {*arm_movsi_insn} (nil))

(note 4 3 9 2 NOTE_INSN_FUNCTION_BEG)

(insn 9 4 10 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 142)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 10 9 11 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 141)
        (and:SI (reg:SI 142)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 142)
        (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
                (const_int -8192 [0xffffffffffffe000]))
            (nil))))

(insn 11 10 12 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 143 [ <variable>.task ])
        (mem/s/f/j:SI (plus:SI (reg:SI 141)
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 12 11 13 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 145 [ <variable>.personality ])
        (mem/s/j:SI (plus:SI (reg/f:SI 143 [ <variable>.task ])
                (const_int 524 [0x20c])) [0 <variable>.personality+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 143 [ <variable>.task ])
        (nil)))

(insn 13 12 14 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 144)
        (and:SI (reg:SI 145 [ <variable>.personality ])
            (const_int 255 [0xff]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 145 [ <variable>.personality ])
        (nil)))

(insn 14 13 15 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 144)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 144)
        (nil)))

(jump_insn 15 14 16 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 30)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 2 -> ( 3 5)
;; lr  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 141
;; live  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 141
;; rd  out 	(18)
4, 8, 12, 16, 17, 20, 21, 24, 47, 48, 49, 256, 257, 258, 259, 260, 261, 262


;; Succ edge  3 [50.0%]  (fallthru)
;; Succ edge  5 [50.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u14(11){ }u15(13){ }u16(25){ }u17(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 24 [cc] 137 148
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 141
;; live  gen 	 24 [cc] 137 148
;; live  kill	
;; rd  in  	(18)
4, 8, 12, 16, 17, 20, 21, 24, 47, 48, 49, 256, 257, 258, 259, 260, 261, 262
;; rd  gen 	(3)
46, 255, 263
;; rd  kill	(7)
43, 44, 45, 46, 47, 255, 263

;; Pred edge  2 [50.0%]  (fallthru)
(note 16 15 19 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 19 16 20 3 arch/arm/kernel/traps.c:428 (set (reg/f:SI 148 [ <variable>.exec_domain ])
        (mem/s/f/j:SI (plus:SI (reg:SI 141)
                (const_int 16 [0x10])) [0 <variable>.exec_domain+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 141)
        (nil)))

(insn 20 19 21 3 arch/arm/kernel/traps.c:428 (set (reg/f:SI 137 [ D.18616 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 148 [ <variable>.exec_domain ])
                (const_int 4 [0x4])) [0 <variable>.handler+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 148 [ <variable>.exec_domain ])
        (nil)))

(insn 21 20 22 3 arch/arm/kernel/traps.c:427 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 137 [ D.18616 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 22 21 23 3 arch/arm/kernel/traps.c:427 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 30)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 4032 [0xfc0])
            (nil))))
;; End of basic block 3 -> ( 4 5)
;; lr  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 140
;; live  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 140
;; rd  out 	(20)
4, 8, 12, 16, 17, 20, 21, 24, 46, 48, 49, 255, 256, 257, 258, 259, 260, 261, 262, 263


;; Succ edge  4 [59.7%]  (fallthru)
;; Succ edge  5 [40.3%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u22(11){ }u23(13){ }u24(25){ }u25(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 140
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 140
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 136
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 140
;; live  gen 	 136
;; live  kill	 14 [lr]
;; rd  in  	(20)
4, 8, 12, 16, 17, 20, 21, 24, 46, 48, 49, 255, 256, 257, 258, 259, 260, 261, 262, 263
;; rd  gen 	(1)
254
;; rd  kill	(5)
22, 23, 24, 253, 254

;; Pred edge  3 [59.7%]  (fallthru)
(note 23 22 26 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(call_insn 26 23 27 4 arch/arm/kernel/traps.c:429 (parallel [
            (call (mem:SI (reg/f:SI 137 [ D.18616 ]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 244 {*call_reg_armv5} (expr_list:REG_DEAD (reg/f:SI 137 [ D.18616 ])
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_DEAD (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 27 26 82 4 arch/arm/kernel/traps.c:430 (set (reg:SI 136 [ D.18619 ])
        (mem/s/j:SI (reg/v/f:SI 140 [ regs ]) [0 <variable>.uregs+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 140 [ regs ])
        (nil)))

(jump_insn 82 27 83 4 arch/arm/kernel/traps.c:430 (set (pc)
        (label_ref 64)) -1 (nil))
;; End of basic block 4 -> ( 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; rd  out 	(20)
4, 8, 12, 16, 17, 20, 21, 46, 48, 49, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263


;; Succ edge  6 [100.0%] 

(barrier 83 82 30)

;; Start of basic block ( 2 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u31(11){ }u32(13){ }u33(25){ }u34(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 135 136 149 150 151 152 153 154 155 157
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc] 135 136 149 150 151 152 153 154 155 157
;; live  kill	 14 [lr]
;; rd  in  	(21)
4, 8, 12, 16, 17, 20, 21, 24, 46, 47, 48, 49, 255, 256, 257, 258, 259, 260, 261, 262, 263
;; rd  gen 	(10)
252, 253, 264, 265, 266, 267, 268, 269, 270, 271
;; rd  kill	(14)
22, 23, 24, 252, 253, 254, 264, 265, 266, 267, 268, 269, 270, 271

;; Pred edge  2 [50.0%] 
;; Pred edge  3 [40.3%] 
(code_label 30 83 31 5 112 "" [2 uses])

(note 31 30 32 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 32 31 33 5 arch/arm/kernel/traps.c:441 (set (reg:SI 149)
        (const_int 4 [0x4])) 167 {*arm_movsi_insn} (nil))

(insn 33 32 34 5 arch/arm/kernel/traps.c:441 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -128 [0xffffffffffffff80])) [0 info.si_signo+0 S4 A64])
        (reg:SI 149)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 149)
        (expr_list:REG_EQUAL (const_int 4 [0x4])
            (nil))))

(insn 34 33 35 5 arch/arm/kernel/traps.c:442 (set (reg:SI 150)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 35 34 36 5 arch/arm/kernel/traps.c:442 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -124 [0xffffffffffffff84])) [0 info.si_errno+0 S4 A32])
        (reg:SI 150)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 36 35 37 5 arch/arm/kernel/traps.c:443 (set (reg:SI 151)
        (const_int 196612 [0x30004])) 167 {*arm_movsi_insn} (nil))

(insn 37 36 38 5 arch/arm/kernel/traps.c:443 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -120 [0xffffffffffffff88])) [0 info.si_code+0 S4 A64])
        (reg:SI 151)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 151)
        (expr_list:REG_EQUAL (const_int 196612 [0x30004])
            (nil))))

(insn 38 37 39 5 arch/arm/kernel/traps.c:445 (set (reg:SI 153 [ <variable>.uregs+64 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 140 [ regs ])
                (const_int 64 [0x40])) [0 <variable>.uregs+64 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 39 38 80 5 arch/arm/kernel/traps.c:445 (set (reg:SI 152)
        (and:SI (reg:SI 153 [ <variable>.uregs+64 ])
            (const_int 32 [0x20]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 153 [ <variable>.uregs+64 ])
        (nil)))

(insn 80 39 81 5 arch/arm/kernel/traps.c:444 discrim 2 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 152)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 152)
        (nil)))

(insn 81 80 51 5 arch/arm/kernel/traps.c:444 discrim 2 (set (reg:SI 135 [ iftmp.302 ])
        (if_then_else:SI (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (const_int -2 [0xfffffffffffffffe])
            (const_int -4 [0xfffffffffffffffc]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 51 81 52 5 arch/arm/kernel/traps.c:444 discrim 3 (set (reg:SI 154 [ <variable>.uregs+60 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 140 [ regs ])
                (const_int 60 [0x3c])) [0 <variable>.uregs+60 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 52 51 53 5 arch/arm/kernel/traps.c:444 discrim 3 (set (reg:SI 155)
        (plus:SI (reg:SI 135 [ iftmp.302 ])
            (reg:SI 154 [ <variable>.uregs+60 ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 154 [ <variable>.uregs+60 ])
        (expr_list:REG_DEAD (reg:SI 135 [ iftmp.302 ])
            (nil))))

(insn 53 52 55 5 arch/arm/kernel/traps.c:444 discrim 3 (set (mem/s/f/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -116 [0xffffffffffffff8c])) [0 info._sifields._sigfault._addr+0 S4 A32])
        (reg:SI 155)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 155)
        (nil)))

(insn 55 53 57 5 arch/arm/kernel/traps.c:447 (set (reg/f:SI 157)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -128 [0xffffffffffffff80]))) 4 {*arm_addsi3} (nil))

(insn 57 55 58 5 arch/arm/kernel/traps.c:447 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg:SI 150)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 150)
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn 58 57 59 5 arch/arm/kernel/traps.c:447 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC31") [flags 0x82] <string_cst 0x11300840>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC31") [flags 0x82] <string_cst 0x11300840>)
        (nil)))

(insn 59 58 60 5 arch/arm/kernel/traps.c:447 (set (reg:SI 1 r1)
        (reg/v/f:SI 140 [ regs ])) 167 {*arm_movsi_insn} (nil))

(insn 60 59 61 5 arch/arm/kernel/traps.c:447 (set (reg:SI 2 r2)
        (reg/f:SI 157)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 157)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -128 [0xffffffffffffff80]))
            (nil))))

(insn 61 60 62 5 arch/arm/kernel/traps.c:447 (set (reg:SI 3 r3)
        (reg/v:SI 139 [ n ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 139 [ n ])
        (nil)))

(call_insn 62 61 63 5 arch/arm/kernel/traps.c:447 (parallel [
            (call (mem:SI (symbol_ref:SI ("arm_notify_die") [flags 0x3] <function_decl 0x512e8d00 arm_notify_die>) [0 S4 A32])
                (const_int 8 [0x8]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_DEAD (reg:SI 0 r0)
                    (expr_list:REG_EH_REGION (const_int 0 [0x0])
                        (nil))))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 63 62 64 5 arch/arm/kernel/traps.c:449 (set (reg:SI 136 [ D.18619 ])
        (mem/s/j:SI (reg/v/f:SI 140 [ regs ]) [0 <variable>.uregs+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 140 [ regs ])
        (nil)))
;; End of basic block 5 -> ( 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; rd  out 	(30)
4, 8, 12, 16, 17, 20, 21, 46, 47, 48, 49, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271


;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 5 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u63(11){ }u64(13){ }u65(25){ }u66(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(31)
4, 8, 12, 16, 17, 20, 21, 46, 47, 48, 49, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271
;; rd  gen 	(1)
1
;; rd  kill	(5)
0, 1, 2, 3, 4

;; Pred edge  5 [100.0%]  (fallthru)
;; Pred edge  4 [100.0%] 
(code_label 64 63 65 6 113 "" [1 uses])

(note 65 64 70 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 70 65 76 6 arch/arm/kernel/traps.c:450 (set (reg/i:SI 0 r0)
        (reg:SI 136 [ D.18619 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 136 [ D.18619 ])
        (nil)))

(insn 76 70 0 6 arch/arm/kernel/traps.c:450 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 6 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(31)
1, 8, 12, 16, 17, 20, 21, 46, 47, 48, 49, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function arm_syscall (arm_syscall)[0:1073]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 22 n_edges 34 count 41 (  1.9)
df_worklist_dataflow_doublequeue:n_basic_blocks 22 n_edges 34 count 42 (  1.9)
df_worklist_dataflow_doublequeue:n_basic_blocks 22 n_edges 34 count 42 (  1.9)


arm_syscall

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={19d,14u} r1={15d,7u} r2={12d,2u} r3={12d,2u} r11={1d,21u} r12={10d} r13={1d,35u,2d} r14={10d,1u} r15={9d} r16={9d} r17={9d} r18={9d} r19={9d} r20={9d} r21={9d} r22={9d} r23={9d} r24={23d,11u} r25={1d,31u,2d} r26={1d,20u} r27={9d} r28={9d} r29={9d} r30={9d} r31={9d} r32={9d} r33={9d} r34={9d} r35={9d} r36={9d} r37={9d} r38={9d} r39={9d} r40={9d} r41={9d} r42={9d} r43={9d} r44={9d} r45={9d} r46={9d} r47={9d} r48={9d} r49={9d} r50={9d} r51={9d} r52={9d} r53={9d} r54={9d} r55={9d} r56={9d} r57={9d} r58={9d} r59={9d} r60={9d} r61={9d} r62={9d} r63={9d} r64={9d} r65={9d} r66={9d} r67={9d} r68={9d} r69={9d} r70={9d} r71={9d} r72={9d} r73={9d} r74={9d} r75={9d} r76={9d} r77={9d} r78={9d} r79={9d} r80={9d} r81={9d} r82={9d} r83={9d} r84={9d} r85={9d} r86={9d} r87={9d} r88={9d} r89={9d} r90={9d} r91={9d} r92={9d} r93={9d} r94={9d} r95={9d} r96={9d} r97={9d} r98={9d} r99={9d} r100={9d} r101={9d} r102={9d} r103={9d} r104={9d} r105={9d} r106={9d} r107={9d} r108={9d} r109={9d} r110={9d} r111={9d} r112={9d} r113={9d} r114={9d} r115={9d} r116={9d} r117={9d} r118={9d} r119={9d} r120={9d} r121={9d} r122={9d} r123={9d} r124={9d} r125={9d} r126={9d} r127={9d} r133={1d,1u,1d} r134={1d,3u} r135={1d,2u} r136={1d,2u} r137={1d,3u} r139={1d,3u} r140={1d,3u} r142={1d,1u,1d} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,3u,1d} r147={11d,1u} r149={1d,3u,1d} r150={1d,19u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,5u} r155={1d,1u} r158={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,1u} r169={1d,1u} r170={1d,1u} r172={1d,1u} r173={1d,1u} r174={1d,1u} r175={1d,2u} r176={1d,1u} r177={1d,1u} r178={1d,1u,1d} r179={1d,1u} r180={1d,1u} r181={1d,1u,1d} r182={1d,1u} r183={1d,1u} r184={1d,1u} r185={1d,1u} r186={1d,1u} r187={1d,1u} r188={1d,1u} r189={1d,1u} r190={1d,1u} r191={1d,1u} r192={1d,1u} r193={1d,1u} r194={1d,1u} r195={1d,1u} r196={1d,1u} r197={1d,1u} r198={1d,2u} r200={1d,1u} r201={1d,1u} r202={1d,3u} r203={1d,1u} r204={1d,1u} r205={1d,1u} r206={1d,1u} r207={1d,1u} r209={1d,1u} 
;;    total ref usage 1433{1172d,251u,10e} in 149{140 regular + 9 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	
0[0,19] 1[19,15] 2[34,12] 3[46,12] 11[58,1] 12[59,10] 13[69,1] 14[70,10] 15[80,9] 16[89,9] 17[98,9] 18[107,9] 19[116,9] 20[125,9] 21[134,9] 22[143,9] 23[152,9] 24[161,23] 25[184,1] 26[185,1] 27[186,9] 28[195,9] 29[204,9] 30[213,9] 31[222,9] 32[231,9] 33[240,9] 34[249,9] 35[258,9] 36[267,9] 37[276,9] 38[285,9] 39[294,9] 40[303,9] 41[312,9] 42[321,9] 43[330,9] 44[339,9] 45[348,9] 46[357,9] 47[366,9] 48[375,9] 49[384,9] 50[393,9] 51[402,9] 52[411,9] 53[420,9] 54[429,9] 55[438,9] 56[447,9] 57[456,9] 58[465,9] 59[474,9] 60[483,9] 61[492,9] 62[501,9] 63[510,9] 64[519,9] 65[528,9] 66[537,9] 67[546,9] 68[555,9] 69[564,9] 70[573,9] 71[582,9] 72[591,9] 73[600,9] 74[609,9] 75[618,9] 76[627,9] 77[636,9] 78[645,9] 79[654,9] 80[663,9] 81[672,9] 82[681,9] 83[690,9] 84[699,9] 85[708,9] 86[717,9] 87[726,9] 88[735,9] 89[744,9] 90[753,9] 91[762,9] 92[771,9] 93[780,9] 94[789,9] 95[798,9] 96[807,9] 97[816,9] 98[825,9] 99[834,9] 100[843,9] 101[852,9] 102[861,9] 103[870,9] 104[879,9] 105[888,9] 106[897,9] 107[906,9] 108[915,9] 109[924,9] 110[933,9] 111[942,9] 112[951,9] 113[960,9] 114[969,9] 115[978,9] 116[987,9] 117[996,9] 118[1005,9] 119[1014,9] 120[1023,9] 121[1032,9] 122[1041,9] 123[1050,9] 124[1059,9] 125[1068,9] 126[1077,9] 127[1086,9] 133[1095,1] 134[1096,1] 135[1097,1] 136[1098,1] 137[1099,1] 139[1100,1] 140[1101,1] 142[1102,1] 143[1103,1] 144[1104,1] 145[1105,1] 146[1106,1] 147[1107,11] 149[1118,1] 150[1119,1] 151[1120,1] 152[1121,1] 153[1122,1] 154[1123,1] 155[1124,1] 158[1125,1] 160[1126,1] 161[1127,1] 162[1128,1] 163[1129,1] 164[1130,1] 165[1131,1] 166[1132,1] 167[1133,1] 169[1134,1] 170[1135,1] 172[1136,1] 173[1137,1] 174[1138,1] 175[1139,1] 176[1140,1] 177[1141,1] 178[1142,1] 179[1143,1] 180[1144,1] 181[1145,1] 182[1146,1] 183[1147,1] 184[1148,1] 185[1149,1] 186[1150,1] 187[1151,1] 188[1152,1] 189[1153,1] 190[1154,1] 191[1155,1] 192[1156,1] 193[1157,1] 194[1158,1] 195[1159,1] 196[1160,1] 197[1161,1] 198[1162,1] 200[1163,1] 201[1164,1] 202[1165,1] 203[1166,1] 204[1167,1] 205[1168,1] 206[1169,1] 207[1170,1] 209[1171,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d18(0){ }d33(1){ }d45(2){ }d57(3){ }d58(11){ }d68(12){ }d69(13){ }d79(14){ }d184(25){ }d185(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
18, 33, 45, 57, 58, 68, 69, 79, 184, 185
;; rd  kill	(82)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 184, 185
;; lr  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
18, 33, 45, 57, 58, 68, 69, 79, 184, 185

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d58(bb 0 insn -1) }u1(13){ d69(bb 0 insn -1) }u2(25){ d184(bb 0 insn -1) }u3(26){ d185(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 142 149 150 151
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 142 149 150 151
;; live  kill	
;; rd  in  	(10)
18, 33, 45, 57, 58, 68, 69, 79, 184, 185
;; rd  gen 	(5)
183, 1102, 1118, 1119, 1120
;; rd  kill	(27)
161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 1102, 1118, 1119, 1120
;; lr  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 149 150
;; live  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 149 150
;; rd  out 	(15)
18, 33, 45, 57, 58, 68, 69, 79, 183, 184, 185, 1102, 1118, 1119, 1120
;;  UD chains for artificial uses
;;   reg 11 { d58(bb 0 insn -1) }
;;   reg 13 { d69(bb 0 insn -1) }
;;   reg 25 { d184(bb 0 insn -1) }
;;   reg 26 { d185(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d18(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 3
;;      reg 1 { d33(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 7
;;      reg 13 { d69(bb 0 insn -1) }
;;   UD chains for insn luid 3 uid 8
;;      reg 149 { d1118(bb 2 insn 2) }
;;   UD chains for insn luid 4 uid 9
;;      reg 151 { d1120(bb 2 insn 8) }
;;   UD chains for insn luid 5 uid 10
;;      reg 24 { d183(bb 2 insn 9) }

( 2 )->[3]->( 21 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u10(11){ d58(bb 0 insn -1) }u11(13){ d69(bb 0 insn -1) }u12(25){ d184(bb 0 insn -1) }u13(26){ d185(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 147
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 147
;; live  kill	 14 [lr]
;; rd  in  	(15)
18, 33, 45, 57, 58, 68, 69, 79, 183, 184, 185, 1102, 1118, 1119, 1120
;; rd  gen 	(2)
17, 1117
;; rd  kill	(40)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; rd  out 	(15)
17, 33, 45, 57, 58, 68, 69, 183, 184, 185, 1102, 1117, 1118, 1119, 1120
;;  UD chains for artificial uses
;;   reg 11 { d58(bb 0 insn -1) }
;;   reg 13 { d69(bb 0 insn -1) }
;;   reg 25 { d184(bb 0 insn -1) }
;;   reg 26 { d185(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 14
;;      reg 13 { d69(bb 0 insn -1) }
;;      reg 0 { d18(bb 0 insn -1) }
;;      reg 1 { d33(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 15
;;      reg 0 { d17(bb 3 insn 14) }

( 2 )->[4]->( 18 5 6 7 13 15 17 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u18(11){ d58(bb 0 insn -1) }u19(13){ d69(bb 0 insn -1) }u20(25){ d184(bb 0 insn -1) }u21(26){ d185(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 149 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149
;; lr  def 	 24 [cc] 146 152
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 149 150
;; live  gen 	 146 152
;; live  kill	 24 [cc]
;; rd  in  	(15)
18, 33, 45, 57, 58, 68, 69, 79, 183, 184, 185, 1102, 1118, 1119, 1120
;; rd  gen 	(2)
1106, 1121
;; rd  kill	(25)
161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 1106, 1121
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 146 149 150
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 146 149 150
;; rd  out 	(16)
18, 33, 45, 57, 58, 68, 69, 79, 184, 185, 1102, 1106, 1118, 1119, 1120, 1121
;;  UD chains for artificial uses
;;   reg 11 { d58(bb 0 insn -1) }
;;   reg 13 { d69(bb 0 insn -1) }
;;   reg 25 { d184(bb 0 insn -1) }
;;   reg 26 { d185(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 20
;;      reg 149 { d1118(bb 2 insn 2) }
;;   UD chains for insn luid 1 uid 21
;;      reg 152 { d1121(bb 4 insn 20) }
;;   eq_note reg 149 { }
;;   UD chains for insn luid 2 uid 22
;;      reg 146 { d1106(bb 4 insn 21) }
;;      reg 146 { d1106(bb 4 insn 21) }

( 4 )->[5]->( 21 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u27(11){ d58(bb 0 insn -1) }u28(13){ d69(bb 0 insn -1) }u29(25){ d184(bb 0 insn -1) }u30(26){ d185(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 147 153 154 155 158
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 147 153 154 155 158
;; live  kill	 14 [lr]
;; rd  in  	(16)
18, 33, 45, 57, 58, 68, 69, 79, 184, 185, 1102, 1106, 1118, 1119, 1120, 1121
;; rd  gen 	(5)
1109, 1122, 1123, 1124, 1125
;; rd  kill	(25)
70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1122, 1123, 1124, 1125
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; rd  out 	(20)
18, 33, 45, 57, 58, 68, 69, 184, 185, 1102, 1106, 1109, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125
;;  UD chains for artificial uses
;;   reg 11 { d58(bb 0 insn -1) }
;;   reg 13 { d69(bb 0 insn -1) }
;;   reg 25 { d184(bb 0 insn -1) }
;;   reg 26 { d185(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 29
;;      reg 25 { d184(bb 0 insn -1) }
;;      reg 153 { d1122(bb 5 insn 28) }
;;   UD chains for insn luid 3 uid 31
;;      reg 25 { d184(bb 0 insn -1) }
;;      reg 154 { d1123(bb 5 insn 30) }
;;   UD chains for insn luid 5 uid 33
;;      reg 25 { d184(bb 0 insn -1) }
;;      reg 155 { d1124(bb 5 insn 32) }
;;   UD chains for insn luid 6 uid 35
;;      reg 25 { d184(bb 0 insn -1) }
;;      reg 154 { d1123(bb 5 insn 30) }
;;   UD chains for insn luid 7 uid 37
;;      reg 25 { d184(bb 0 insn -1) }
;;   UD chains for insn luid 8 uid 39
;;      reg 13 { d69(bb 0 insn -1) }
;;      reg 154 { d1123(bb 5 insn 30) }
;;   UD chains for insn luid 10 uid 41
;;      reg 150 { d1119(bb 2 insn 3) }
;;   UD chains for insn luid 11 uid 42
;;      reg 158 { d1125(bb 5 insn 37) }
;;   eq_note reg 25 { }
;;   UD chains for insn luid 12 uid 43
;;      reg 154 { d1123(bb 5 insn 30) }
;;   UD chains for insn luid 13 uid 44
;;      reg 13 { d69(bb 0 insn -1) }
;;      reg 0 { d1(bb 5 insn 40) }
;;      reg 1 { d31(bb 5 insn 41) }
;;      reg 2 { d43(bb 5 insn 42) }
;;      reg 3 { d46(bb 5 insn 43) }
;;   UD chains for insn luid 14 uid 45
;;      reg 154 { d1123(bb 5 insn 30) }

( 4 )->[6]->( 21 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u52(11){ d58(bb 0 insn -1) }u53(13){ d69(bb 0 insn -1) }u54(25){ d184(bb 0 insn -1) }u55(26){ d185(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 144 145 147 160 161 162 163 164
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 144 145 147 160 161 162 163 164
;; live  kill	 14 [lr]
;; rd  in  	(16)
18, 33, 45, 57, 58, 68, 69, 79, 184, 185, 1102, 1106, 1118, 1119, 1120, 1121
;; rd  gen 	(8)
1104, 1105, 1116, 1126, 1127, 1128, 1129, 1130
;; rd  kill	(28)
70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 1104, 1105, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1126, 1127, 1128, 1129, 1130
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; rd  out 	(23)
18, 33, 45, 57, 58, 68, 69, 184, 185, 1102, 1104, 1105, 1106, 1116, 1118, 1119, 1120, 1121, 1126, 1127, 1128, 1129, 1130
;;  UD chains for artificial uses
;;   reg 11 { d58(bb 0 insn -1) }
;;   reg 13 { d69(bb 0 insn -1) }
;;   reg 25 { d184(bb 0 insn -1) }
;;   reg 26 { d185(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 50
;;      reg 150 { d1119(bb 2 insn 3) }
;;   UD chains for insn luid 1 uid 51
;;      reg 150 { d1119(bb 2 insn 3) }
;;   UD chains for insn luid 2 uid 52
;;      reg 161 { d1127(bb 6 insn 51) }
;;   UD chains for insn luid 3 uid 240
;;      reg 160 { d1126(bb 6 insn 52) }
;;   UD chains for insn luid 4 uid 241
;;      reg 24 { d162(bb 6 insn 240) }
;;   UD chains for insn luid 5 uid 64
;;      reg 144 { d1104(bb 6 insn 241) }
;;      reg 145 { d1105(bb 6 insn 50) }
;;   UD chains for insn luid 6 uid 65
;;      reg 150 { d1119(bb 2 insn 3) }
;;      reg 162 { d1128(bb 6 insn 64) }
;;   UD chains for insn luid 7 uid 67
;;      reg 13 { d69(bb 0 insn -1) }
;;   UD chains for insn luid 8 uid 68
;;      reg 164 { d1130(bb 6 insn 67) }
;;   eq_note reg 13 { }
;;   UD chains for insn luid 9 uid 69
;;      reg 163 { d1129(bb 6 insn 68) }
;;   UD chains for insn luid 10 uid 70
;;      reg 150 { d1119(bb 2 insn 3) }
;;   UD chains for insn luid 11 uid 71
;;      reg 13 { d69(bb 0 insn -1) }
;;      reg 0 { d15(bb 6 insn 69) }
;;      reg 1 { d29(bb 6 insn 70) }
;;   UD chains for insn luid 12 uid 72
;;      reg 150 { d1119(bb 2 insn 3) }

( 4 )->[7]->( 8 9 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u74(11){ d58(bb 0 insn -1) }u75(13){ d69(bb 0 insn -1) }u76(25){ d184(bb 0 insn -1) }u77(26){ d185(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150
;; lr  def 	 24 [cc] 136 139 140 165 166 167 169 170 172 173 174 175
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 150
;; live  gen 	 24 [cc] 136 139 140 165 166 167 169 170 172 173 174 175
;; live  kill	
;; rd  in  	(16)
18, 33, 45, 57, 58, 68, 69, 79, 184, 185, 1102, 1106, 1118, 1119, 1120, 1121
;; rd  gen 	(13)
176, 1098, 1100, 1101, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139
;; rd  kill	(35)
161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 1098, 1100, 1101, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 139 140 175
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 139 140 175
;; rd  out 	(29)
18, 33, 45, 57, 58, 68, 69, 79, 176, 184, 185, 1098, 1100, 1101, 1102, 1106, 1118, 1119, 1120, 1121, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139
;;  UD chains for artificial uses
;;   reg 11 { d58(bb 0 insn -1) }
;;   reg 13 { d69(bb 0 insn -1) }
;;   reg 25 { d184(bb 0 insn -1) }
;;   reg 26 { d185(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 77
;;      reg 150 { d1119(bb 2 insn 3) }
;;   UD chains for insn luid 1 uid 78
;;      reg 150 { d1119(bb 2 insn 3) }
;;   UD chains for insn luid 2 uid 80
;;      reg 13 { d69(bb 0 insn -1) }
;;   UD chains for insn luid 3 uid 81
;;      reg 166 { d1132(bb 7 insn 80) }
;;   eq_note reg 13 { }
;;   UD chains for insn luid 4 uid 82
;;      reg 165 { d1131(bb 7 insn 81) }
;;   UD chains for insn luid 5 uid 83
;;      reg 167 { d1133(bb 7 insn 82) }
;;   UD chains for insn luid 6 uid 84
;;      reg 150 { d1119(bb 2 insn 3) }
;;   UD chains for insn luid 7 uid 85
;;      reg 169 { d1134(bb 7 insn 84) }
;;   UD chains for insn luid 8 uid 86
;;      reg 24 { d178(bb 7 insn 85) }
;;   UD chains for insn luid 9 uid 88
;;      reg 139 { d1100(bb 7 insn 77) }
;;      reg 140 { d1101(bb 7 insn 78) }
;;   UD chains for insn luid 10 uid 89
;;      reg 24 { d177(bb 7 insn 88) }
;;   UD chains for insn luid 11 uid 91
;;      reg 170 { d1135(bb 7 insn 86) }
;;      reg 172 { d1136(bb 7 insn 89) }
;;   UD chains for insn luid 12 uid 92
;;      reg 173 { d1137(bb 7 insn 91) }
;;   UD chains for insn luid 13 uid 93
;;      reg 174 { d1138(bb 7 insn 92) }
;;   UD chains for insn luid 14 uid 94
;;      reg 175 { d1139(bb 7 insn 93) }
;;   UD chains for insn luid 15 uid 95
;;      reg 24 { d176(bb 7 insn 94) }

( 7 )->[8]->( 21 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u97(11){ d58(bb 0 insn -1) }u98(13){ d69(bb 0 insn -1) }u99(25){ d184(bb 0 insn -1) }u100(26){ d185(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 147
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 147
;; live  kill	
;; rd  in  	(29)
18, 33, 45, 57, 58, 68, 69, 79, 176, 184, 185, 1098, 1100, 1101, 1102, 1106, 1118, 1119, 1120, 1121, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139
;; rd  gen 	(1)
1115
;; rd  kill	(11)
1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147
;; rd  out 	(30)
18, 33, 45, 57, 58, 68, 69, 79, 176, 184, 185, 1098, 1100, 1101, 1102, 1106, 1115, 1118, 1119, 1120, 1121, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139
;;  UD chains for artificial uses
;;   reg 11 { d58(bb 0 insn -1) }
;;   reg 13 { d69(bb 0 insn -1) }
;;   reg 25 { d184(bb 0 insn -1) }
;;   reg 26 { d185(bb 0 insn -1) }

( 7 )->[9]->( 10 12 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u101(11){ d58(bb 0 insn -1) }u102(13){ d69(bb 0 insn -1) }u103(25){ d184(bb 0 insn -1) }u104(26){ d185(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 139 140 175
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 139
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 137
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 139 140 175
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 134 137
;; live  kill	 14 [lr]
;; rd  in  	(29)
18, 33, 45, 57, 58, 68, 69, 79, 176, 184, 185, 1098, 1100, 1101, 1102, 1106, 1118, 1119, 1120, 1121, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139
;; rd  gen 	(4)
10, 173, 1096, 1099
;; rd  kill	(54)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 1096, 1099
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 137 139 140 175
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 137 139 140 175
;; rd  out 	(30)
10, 33, 45, 57, 58, 68, 69, 173, 184, 185, 1096, 1098, 1099, 1100, 1101, 1102, 1106, 1118, 1119, 1120, 1121, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139
;;  UD chains for artificial uses
;;   reg 11 { d58(bb 0 insn -1) }
;;   reg 13 { d69(bb 0 insn -1) }
;;   reg 25 { d184(bb 0 insn -1) }
;;   reg 26 { d185(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 102
;;      reg 136 { d1098(bb 7 insn 83) }
;;   UD chains for insn luid 1 uid 103
;;      reg 134 { d1096(bb 9 insn 102) }
;;   UD chains for insn luid 2 uid 104
;;      reg 13 { d69(bb 0 insn -1) }
;;      reg 0 { d13(bb 9 insn 103) }
;;   UD chains for insn luid 3 uid 105
;;      reg 136 { d1098(bb 7 insn 83) }
;;   UD chains for insn luid 4 uid 106
;;      reg 139 { d1100(bb 7 insn 77) }
;;   UD chains for insn luid 5 uid 107
;;      reg 13 { d69(bb 0 insn -1) }
;;      reg 0 { d11(bb 9 insn 105) }
;;      reg 1 { d26(bb 9 insn 106) }
;;   UD chains for insn luid 6 uid 108
;;      reg 0 { d10(bb 9 insn 107) }
;;   UD chains for insn luid 7 uid 109
;;      reg 137 { d1099(bb 9 insn 108) }
;;   UD chains for insn luid 8 uid 110
;;      reg 24 { d173(bb 9 insn 109) }

( 9 )->[10]->( 11 12 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u117(11){ d58(bb 0 insn -1) }u118(13){ d69(bb 0 insn -1) }u119(25){ d184(bb 0 insn -1) }u120(26){ d185(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 137 139 140 175
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 140
;; lr  def 	 24 [cc] 135
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 137 139 140 175
;; live  gen 	 24 [cc] 135
;; live  kill	
;; rd  in  	(30)
10, 33, 45, 57, 58, 68, 69, 173, 184, 185, 1096, 1098, 1099, 1100, 1101, 1102, 1106, 1118, 1119, 1120, 1121, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139
;; rd  gen 	(2)
172, 1097
;; rd  kill	(24)
161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 1097
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 137 139 140 175
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 137 139 140 175
;; rd  out 	(31)
10, 33, 45, 57, 58, 68, 69, 172, 184, 185, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1106, 1118, 1119, 1120, 1121, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139
;;  UD chains for artificial uses
;;   reg 11 { d58(bb 0 insn -1) }
;;   reg 13 { d69(bb 0 insn -1) }
;;   reg 25 { d184(bb 0 insn -1) }
;;   reg 26 { d185(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 112
;;      reg 137 { d1099(bb 9 insn 108) }
;;   UD chains for insn luid 1 uid 113
;;      reg 135 { d1097(bb 10 insn 112) }
;;      reg 140 { d1101(bb 7 insn 78) }
;;   UD chains for insn luid 2 uid 114
;;      reg 24 { d172(bb 10 insn 113) }

( 10 )->[11]->( 21 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u125(11){ d58(bb 0 insn -1) }u126(13){ d69(bb 0 insn -1) }u127(25){ d184(bb 0 insn -1) }u128(26){ d185(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 137 139 140 175
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 137 139 140 175
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 147 176 177 178 179 180 181 182 183 184 185
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 137 139 140 175
;; live  gen 	 0 [r0] 1 [r1] 133 147 176 177 178 179 180 181 182 183 184 185
;; live  kill	 14 [lr] 24 [cc]
;; rd  in  	(31)
10, 33, 45, 57, 58, 68, 69, 172, 184, 185, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1106, 1118, 1119, 1120, 1121, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139
;; rd  gen 	(12)
1095, 1108, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149
;; rd  kill	(32)
70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 1095, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; rd  out 	(43)
10, 33, 45, 57, 58, 68, 69, 172, 184, 185, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1106, 1108, 1118, 1119, 1120, 1121, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149
;;  UD chains for artificial uses
;;   reg 11 { d58(bb 0 insn -1) }
;;   reg 13 { d69(bb 0 insn -1) }
;;   reg 25 { d184(bb 0 insn -1) }
;;   reg 26 { d185(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 116
;;      reg 137 { d1099(bb 9 insn 108) }
;;   UD chains for insn luid 1 uid 117
;;      reg 140 { d1101(bb 7 insn 78) }
;;      reg 176 { d1140(bb 11 insn 116) }
;;   UD chains for insn luid 2 uid 118
;;      reg 134 { d1096(bb 9 insn 102) }
;;   UD chains for insn luid 3 uid 119
;;      reg 13 { d69(bb 0 insn -1) }
;;      reg 0 { d9(bb 11 insn 118) }
;;   UD chains for insn luid 5 uid 121
;;      reg 135 { d1097(bb 10 insn 112) }
;;      reg 139 { d1100(bb 7 insn 77) }
;;   UD chains for insn luid 6 uid 122
;;      reg 178 { d1142(bb 11 insn 121) }
;;   UD chains for insn luid 7 uid 123
;;      reg 180 { d1144(bb 11 insn 122) }
;;   eq_note reg 178 { }
;;   UD chains for insn luid 8 uid 124
;;      reg 133 { d1095(bb 11 insn 117) }
;;   UD chains for insn luid 9 uid 125
;;      reg 182 { d1146(bb 11 insn 124) }
;;   eq_note reg 133 { }
;;   UD chains for insn luid 10 uid 126
;;      reg 181 { d1145(bb 11 insn 125) }
;;   UD chains for insn luid 11 uid 127
;;      reg 184 { d1148(bb 11 insn 126) }
;;   eq_note reg 181 { }
;;   UD chains for insn luid 12 uid 128
;;      reg 177 { d1141(bb 11 insn 120) }
;;   UD chains for insn luid 13 uid 129
;;      reg 179 { d1143(bb 11 insn 123) }
;;   UD chains for insn luid 14 uid 130
;;      reg 183 { d1147(bb 11 insn 127) }
;;   UD chains for insn luid 15 uid 131
;;      reg 13 { d69(bb 0 insn -1) }
;;      reg 0 { d7(bb 11 insn 129) }
;;      reg 1 { d23(bb 11 insn 130) }
;;      reg 185 { d1149(bb 11 insn 128) }
;;   UD chains for insn luid 16 uid 132
;;      reg 175 { d1139(bb 7 insn 93) }

( 9 10 )->[12]->( 21 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u154(11){ d58(bb 0 insn -1) }u155(13){ d69(bb 0 insn -1) }u156(25){ d184(bb 0 insn -1) }u157(26){ d185(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 147
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; live  gen 	 0 [r0] 147
;; live  kill	 14 [lr]
;; rd  in  	(32)
10, 33, 45, 57, 58, 68, 69, 172, 173, 184, 185, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1106, 1118, 1119, 1120, 1121, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139
;; rd  gen 	(1)
1114
;; rd  kill	(21)
70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; rd  out 	(33)
10, 33, 45, 57, 58, 68, 69, 172, 173, 184, 185, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1106, 1114, 1118, 1119, 1120, 1121, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139
;;  UD chains for artificial uses
;;   reg 11 { d58(bb 0 insn -1) }
;;   reg 13 { d69(bb 0 insn -1) }
;;   reg 25 { d184(bb 0 insn -1) }
;;   reg 26 { d185(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 137
;;      reg 134 { d1096(bb 9 insn 102) }
;;   UD chains for insn luid 1 uid 138
;;      reg 13 { d69(bb 0 insn -1) }
;;      reg 0 { d5(bb 12 insn 137) }

( 4 )->[13]->( 20 14 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u161(11){ d58(bb 0 insn -1) }u162(13){ d69(bb 0 insn -1) }u163(25){ d184(bb 0 insn -1) }u164(26){ d185(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 186 187 188
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150
;; live  gen 	 24 [cc] 186 187 188
;; live  kill	
;; rd  in  	(16)
18, 33, 45, 57, 58, 68, 69, 79, 184, 185, 1102, 1106, 1118, 1119, 1120, 1121
;; rd  gen 	(4)
166, 1150, 1151, 1152
;; rd  kill	(26)
161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 1150, 1151, 1152
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150
;; rd  out 	(20)
18, 33, 45, 57, 58, 68, 69, 79, 166, 184, 185, 1102, 1106, 1118, 1119, 1120, 1121, 1150, 1151, 1152
;;  UD chains for artificial uses
;;   reg 11 { d58(bb 0 insn -1) }
;;   reg 13 { d69(bb 0 insn -1) }
;;   reg 25 { d184(bb 0 insn -1) }
;;   reg 26 { d185(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 145
;;      reg 186 { d1150(bb 13 insn 144) }
;;   UD chains for insn luid 2 uid 146
;;      reg 188 { d1152(bb 13 insn 145) }
;;   UD chains for insn luid 3 uid 147
;;      reg 187 { d1151(bb 13 insn 146) }
;;   UD chains for insn luid 4 uid 148
;;      reg 24 { d166(bb 13 insn 147) }

( 13 )->[14]->( 21 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u169(11){ d58(bb 0 insn -1) }u170(13){ d69(bb 0 insn -1) }u171(25){ d184(bb 0 insn -1) }u172(26){ d185(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150
;; lr  def 	 147 189 190
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 150
;; live  gen 	 147 189 190
;; live  kill	
;; rd  in  	(20)
18, 33, 45, 57, 58, 68, 69, 79, 166, 184, 185, 1102, 1106, 1118, 1119, 1120, 1121, 1150, 1151, 1152
;; rd  gen 	(3)
1113, 1153, 1154
;; rd  kill	(13)
1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1153, 1154
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147
;; rd  out 	(23)
18, 33, 45, 57, 58, 68, 69, 79, 166, 184, 185, 1102, 1106, 1113, 1118, 1119, 1120, 1121, 1150, 1151, 1152, 1153, 1154
;;  UD chains for artificial uses
;;   reg 11 { d58(bb 0 insn -1) }
;;   reg 13 { d69(bb 0 insn -1) }
;;   reg 25 { d184(bb 0 insn -1) }
;;   reg 26 { d185(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 150
;;      reg 150 { d1119(bb 2 insn 3) }
;;   UD chains for insn luid 1 uid 151
;;      reg 189 { d1153(bb 14 insn 150) }
;;   UD chains for insn luid 2 uid 152
;;      reg 150 { d1119(bb 2 insn 3) }
;;      reg 190 { d1154(bb 14 insn 151) }
;;   UD chains for insn luid 3 uid 153
;;      reg 150 { d1119(bb 2 insn 3) }

( 4 )->[15]->( 20 16 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u178(11){ d58(bb 0 insn -1) }u179(13){ d69(bb 0 insn -1) }u180(25){ d184(bb 0 insn -1) }u181(26){ d185(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 191 192 193
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150
;; live  gen 	 24 [cc] 191 192 193
;; live  kill	
;; rd  in  	(16)
18, 33, 45, 57, 58, 68, 69, 79, 184, 185, 1102, 1106, 1118, 1119, 1120, 1121
;; rd  gen 	(4)
165, 1155, 1156, 1157
;; rd  kill	(26)
161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 1155, 1156, 1157
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150
;; rd  out 	(20)
18, 33, 45, 57, 58, 68, 69, 79, 165, 184, 185, 1102, 1106, 1118, 1119, 1120, 1121, 1155, 1156, 1157
;;  UD chains for artificial uses
;;   reg 11 { d58(bb 0 insn -1) }
;;   reg 13 { d69(bb 0 insn -1) }
;;   reg 25 { d184(bb 0 insn -1) }
;;   reg 26 { d185(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 159
;;      reg 191 { d1155(bb 15 insn 158) }
;;   UD chains for insn luid 2 uid 160
;;      reg 193 { d1157(bb 15 insn 159) }
;;   UD chains for insn luid 3 uid 161
;;      reg 192 { d1156(bb 15 insn 160) }
;;   UD chains for insn luid 4 uid 162
;;      reg 24 { d165(bb 15 insn 161) }

( 15 )->[16]->( 21 )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u186(11){ d58(bb 0 insn -1) }u187(13){ d69(bb 0 insn -1) }u188(25){ d184(bb 0 insn -1) }u189(26){ d185(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150
;; lr  def 	 147 194 195
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 150
;; live  gen 	 147 194 195
;; live  kill	
;; rd  in  	(20)
18, 33, 45, 57, 58, 68, 69, 79, 165, 184, 185, 1102, 1106, 1118, 1119, 1120, 1121, 1155, 1156, 1157
;; rd  gen 	(3)
1112, 1158, 1159
;; rd  kill	(13)
1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1158, 1159
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147
;; rd  out 	(23)
18, 33, 45, 57, 58, 68, 69, 79, 165, 184, 185, 1102, 1106, 1112, 1118, 1119, 1120, 1121, 1155, 1156, 1157, 1158, 1159
;;  UD chains for artificial uses
;;   reg 11 { d58(bb 0 insn -1) }
;;   reg 13 { d69(bb 0 insn -1) }
;;   reg 25 { d184(bb 0 insn -1) }
;;   reg 26 { d185(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 164
;;      reg 150 { d1119(bb 2 insn 3) }
;;   UD chains for insn luid 1 uid 165
;;      reg 194 { d1158(bb 16 insn 164) }
;;   UD chains for insn luid 2 uid 166
;;      reg 150 { d1119(bb 2 insn 3) }
;;      reg 195 { d1159(bb 16 insn 165) }
;;   UD chains for insn luid 3 uid 167
;;      reg 150 { d1119(bb 2 insn 3) }

( 4 )->[17]->( 21 )
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u195(11){ d58(bb 0 insn -1) }u196(13){ d69(bb 0 insn -1) }u197(25){ d184(bb 0 insn -1) }u198(26){ d185(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 150
;; lr  def 	 147 196 197 198
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 150
;; live  gen 	 147 196 197 198
;; live  kill	
;; rd  in  	(16)
18, 33, 45, 57, 58, 68, 69, 79, 184, 185, 1102, 1106, 1118, 1119, 1120, 1121
;; rd  gen 	(4)
1111, 1160, 1161, 1162
;; rd  kill	(14)
1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1160, 1161, 1162
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147
;; rd  out 	(20)
18, 33, 45, 57, 58, 68, 69, 79, 184, 185, 1102, 1106, 1111, 1118, 1119, 1120, 1121, 1160, 1161, 1162
;;  UD chains for artificial uses
;;   reg 11 { d58(bb 0 insn -1) }
;;   reg 13 { d69(bb 0 insn -1) }
;;   reg 25 { d184(bb 0 insn -1) }
;;   reg 26 { d185(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 172
;;      reg 142 { d1102(bb 2 insn 7) }
;;   UD chains for insn luid 1 uid 173
;;      reg 197 { d1161(bb 17 insn 172) }
;;   eq_note reg 142 { }
;;   UD chains for insn luid 2 uid 174
;;      reg 150 { d1119(bb 2 insn 3) }
;;   UD chains for insn luid 3 uid 175
;;      reg 196 { d1160(bb 17 insn 173) }
;;      reg 198 { d1162(bb 17 insn 174) }
;;   UD chains for insn luid 4 uid 177
;;      reg 198 { d1162(bb 17 insn 174) }

( 4 )->[18]->( 19 20 )
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u206(11){ d58(bb 0 insn -1) }u207(13){ d69(bb 0 insn -1) }u208(25){ d184(bb 0 insn -1) }u209(26){ d185(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 149 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146
;; lr  def 	 24 [cc] 200
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 149 150
;; live  gen 	 24 [cc] 200
;; live  kill	
;; rd  in  	(16)
18, 33, 45, 57, 58, 68, 69, 79, 184, 185, 1102, 1106, 1118, 1119, 1120, 1121
;; rd  gen 	(2)
164, 1163
;; rd  kill	(24)
161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 1163
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150
;; rd  out 	(18)
18, 33, 45, 57, 58, 68, 69, 79, 164, 184, 185, 1102, 1106, 1118, 1119, 1120, 1121, 1163
;;  UD chains for artificial uses
;;   reg 11 { d58(bb 0 insn -1) }
;;   reg 13 { d69(bb 0 insn -1) }
;;   reg 25 { d184(bb 0 insn -1) }
;;   reg 26 { d185(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 184
;;      reg 146 { d1106(bb 4 insn 21) }
;;      reg 200 { d1163(bb 18 insn 183) }
;;   eq_note reg 146 { }
;;   UD chains for insn luid 2 uid 185
;;      reg 24 { d164(bb 18 insn 184) }

( 18 )->[19]->( 21 )
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u214(11){ d58(bb 0 insn -1) }u215(13){ d69(bb 0 insn -1) }u216(25){ d184(bb 0 insn -1) }u217(26){ d185(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 147
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 147
;; live  kill	
;; rd  in  	(18)
18, 33, 45, 57, 58, 68, 69, 79, 164, 184, 185, 1102, 1106, 1118, 1119, 1120, 1121, 1163
;; rd  gen 	(1)
1110
;; rd  kill	(11)
1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147
;; rd  out 	(19)
18, 33, 45, 57, 58, 68, 69, 79, 164, 184, 185, 1102, 1106, 1110, 1118, 1119, 1120, 1121, 1163
;;  UD chains for artificial uses
;;   reg 11 { d58(bb 0 insn -1) }
;;   reg 13 { d69(bb 0 insn -1) }
;;   reg 25 { d184(bb 0 insn -1) }
;;   reg 26 { d185(bb 0 insn -1) }

( 13 15 18 )->[20]->( 21 )
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u218(11){ d58(bb 0 insn -1) }u219(13){ d69(bb 0 insn -1) }u220(25){ d184(bb 0 insn -1) }u221(26){ d185(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 143 147 201 202 203 204 205 206 207 209
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc] 143 147 201 202 203 204 205 206 207 209
;; live  kill	 14 [lr]
;; rd  in  	(26)
18, 33, 45, 57, 58, 68, 69, 79, 164, 165, 166, 184, 185, 1102, 1106, 1118, 1119, 1120, 1121, 1150, 1151, 1152, 1155, 1156, 1157, 1163
;; rd  gen 	(10)
1103, 1107, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171
;; rd  kill	(30)
70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 1103, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; rd  out 	(35)
18, 33, 45, 57, 58, 68, 69, 164, 165, 166, 184, 185, 1102, 1103, 1106, 1107, 1118, 1119, 1120, 1121, 1150, 1151, 1152, 1155, 1156, 1157, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171
;;  UD chains for artificial uses
;;   reg 11 { d58(bb 0 insn -1) }
;;   reg 13 { d69(bb 0 insn -1) }
;;   reg 25 { d184(bb 0 insn -1) }
;;   reg 26 { d185(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 193
;;      reg 25 { d184(bb 0 insn -1) }
;;      reg 201 { d1164(bb 20 insn 192) }
;;   UD chains for insn luid 3 uid 195
;;      reg 25 { d184(bb 0 insn -1) }
;;      reg 202 { d1165(bb 20 insn 194) }
;;   UD chains for insn luid 5 uid 197
;;      reg 25 { d184(bb 0 insn -1) }
;;      reg 203 { d1166(bb 20 insn 196) }
;;   UD chains for insn luid 6 uid 198
;;      reg 150 { d1119(bb 2 insn 3) }
;;   UD chains for insn luid 7 uid 199
;;      reg 205 { d1168(bb 20 insn 198) }
;;   UD chains for insn luid 8 uid 242
;;      reg 204 { d1167(bb 20 insn 199) }
;;   UD chains for insn luid 9 uid 243
;;      reg 24 { d161(bb 20 insn 242) }
;;   UD chains for insn luid 10 uid 211
;;      reg 150 { d1119(bb 2 insn 3) }
;;   UD chains for insn luid 11 uid 212
;;      reg 143 { d1103(bb 20 insn 243) }
;;      reg 206 { d1169(bb 20 insn 211) }
;;   UD chains for insn luid 12 uid 213
;;      reg 25 { d184(bb 0 insn -1) }
;;      reg 207 { d1170(bb 20 insn 212) }
;;   UD chains for insn luid 13 uid 215
;;      reg 25 { d184(bb 0 insn -1) }
;;   UD chains for insn luid 14 uid 217
;;      reg 13 { d69(bb 0 insn -1) }
;;      reg 202 { d1165(bb 20 insn 194) }
;;   UD chains for insn luid 16 uid 219
;;      reg 150 { d1119(bb 2 insn 3) }
;;   UD chains for insn luid 17 uid 220
;;      reg 209 { d1171(bb 20 insn 215) }
;;   eq_note reg 25 { }
;;   UD chains for insn luid 18 uid 221
;;      reg 149 { d1118(bb 2 insn 2) }
;;   UD chains for insn luid 19 uid 222
;;      reg 13 { d69(bb 0 insn -1) }
;;      reg 0 { d0(bb 20 insn 218) }
;;      reg 1 { d20(bb 20 insn 219) }
;;      reg 2 { d35(bb 20 insn 220) }
;;      reg 3 { d48(bb 20 insn 221) }
;;   UD chains for insn luid 20 uid 223
;;      reg 202 { d1165(bb 20 insn 194) }

( 11 3 5 6 12 14 20 16 17 8 19 )->[21]->( 1 )
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u250(11){ d58(bb 0 insn -1) }u251(13){ d69(bb 0 insn -1) }u252(25){ d184(bb 0 insn -1) }u253(26){ d185(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(96)
10, 17, 18, 33, 45, 57, 58, 68, 69, 79, 164, 165, 166, 172, 173, 176, 183, 184, 185, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171
;; rd  gen 	(1)
2
;; rd  kill	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(94)
2, 33, 45, 57, 58, 68, 69, 79, 164, 165, 166, 172, 173, 176, 183, 184, 185, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171
;;  UD chains for artificial uses
;;   reg 11 { d58(bb 0 insn -1) }
;;   reg 13 { d69(bb 0 insn -1) }
;;   reg 25 { d184(bb 0 insn -1) }
;;   reg 26 { d185(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 230
;;      reg 147 { d1117(bb 3 insn 15) d1116(bb 6 insn 72) d1115(bb 8 insn 97) d1114(bb 12 insn 139) d1113(bb 14 insn 153) d1112(bb 16 insn 167) d1111(bb 17 insn 178) d1110(bb 19 insn 187) d1109(bb 5 insn 45) d1108(bb 11 insn 132) d1107(bb 20 insn 223) }
;;   UD chains for insn luid 1 uid 236
;;      reg 0 { d2(bb 21 insn 230) }

( 21 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u256(0){ d2(bb 21 insn 230) }u257(11){ d58(bb 0 insn -1) }u258(13){ d69(bb 0 insn -1) }u259(14){ d79(bb 0 insn -1) }u260(25){ d184(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(94)
2, 33, 45, 57, 58, 68, 69, 79, 164, 165, 166, 172, 173, 176, 183, 184, 185, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(94)
2, 33, 45, 57, 58, 68, 69, 79, 164, 165, 166, 172, 173, 176, 183, 184, 185, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171
;;  UD chains for artificial uses
;;   reg 0 { d2(bb 21 insn 230) }
;;   reg 11 { d58(bb 0 insn -1) }
;;   reg 13 { d69(bb 0 insn -1) }
;;   reg 14 { d79(bb 0 insn -1) }
;;   reg 25 { d184(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 10 to worklist
  Adding insn 244 to worklist
  Adding insn 14 to worklist
  Adding insn 22 to worklist
  Adding insn 246 to worklist
  Adding insn 44 to worklist
  Adding insn 39 to worklist
  Adding insn 35 to worklist
  Adding insn 33 to worklist
  Adding insn 31 to worklist
  Adding insn 29 to worklist
  Adding insn 248 to worklist
  Adding insn 71 to worklist
  Adding insn 65 to worklist
  Adding insn 95 to worklist
  Adding insn 250 to worklist
  Adding insn 110 to worklist
  Adding insn 107 to worklist
  Adding insn 104 to worklist
  Adding insn 114 to worklist
  Adding insn 252 to worklist
  Adding insn 131 to worklist
  Adding insn 119 to worklist
  Adding insn 254 to worklist
  Adding insn 138 to worklist
  Adding insn 148 to worklist
  Adding insn 256 to worklist
  Adding insn 152 to worklist
  Adding insn 162 to worklist
  Adding insn 258 to worklist
  Adding insn 166 to worklist
  Adding insn 260 to worklist
  Adding insn 177 to worklist
  Adding insn 175 to worklist
  Adding insn 185 to worklist
  Adding insn 262 to worklist
  Adding insn 222 to worklist
  Adding insn 217 to worklist
  Adding insn 213 to worklist
  Adding insn 197 to worklist
  Adding insn 195 to worklist
  Adding insn 193 to worklist
  Adding insn 236 to worklist
Finished finding needed instructions:
  Adding insn 230 to worklist
Processing use of (reg 147 [ D.18677 ]) in insn 230:
  Adding insn 15 to worklist
  Adding insn 72 to worklist
  Adding insn 97 to worklist
  Adding insn 139 to worklist
  Adding insn 153 to worklist
  Adding insn 167 to worklist
  Adding insn 178 to worklist
  Adding insn 187 to worklist
  Adding insn 45 to worklist
  Adding insn 132 to worklist
  Adding insn 223 to worklist
Processing use of (reg 202) in insn 223:
  Adding insn 194 to worklist
Processing use of (reg 175) in insn 132:
  Adding insn 93 to worklist
Processing use of (reg 174) in insn 93:
  Adding insn 92 to worklist
Processing use of (subreg (reg 173) 0) in insn 92:
  Adding insn 91 to worklist
Processing use of (reg 170) in insn 91:
  Adding insn 86 to worklist
Processing use of (reg 172) in insn 91:
  Adding insn 89 to worklist
Processing use of (reg 24 cc) in insn 89:
  Adding insn 88 to worklist
Processing use of (reg 139 [ start ]) in insn 88:
  Adding insn 77 to worklist
Processing use of (reg 140 [ end ]) in insn 88:
  Adding insn 78 to worklist
Processing use of (reg 150 [ regs ]) in insn 78:
  Adding insn 3 to worklist
Processing use of (reg 1 r1) in insn 3:
Processing use of (reg 150 [ regs ]) in insn 77:
Processing use of (reg 24 cc) in insn 86:
  Adding insn 85 to worklist
Processing use of (reg 169 [ <variable>.uregs+8 ]) in insn 85:
  Adding insn 84 to worklist
Processing use of (reg 150 [ regs ]) in insn 84:
Processing use of (reg 154) in insn 45:
  Adding insn 30 to worklist
Processing use of (reg 150 [ regs ]) in insn 167:
Processing use of (reg 150 [ regs ]) in insn 153:
Processing use of (reg 150 [ regs ]) in insn 72:
Processing use of (reg 0 r0) in insn 15:
Processing use of (reg 0 r0) in insn 236:
Processing use of (reg 25 sfp) in insn 193:
Processing use of (reg 201) in insn 193:
  Adding insn 192 to worklist
Processing use of (reg 25 sfp) in insn 195:
Processing use of (reg 202) in insn 195:
Processing use of (reg 25 sfp) in insn 197:
Processing use of (reg 203) in insn 197:
  Adding insn 196 to worklist
Processing use of (reg 25 sfp) in insn 213:
Processing use of (reg 207) in insn 213:
  Adding insn 212 to worklist
Processing use of (reg 143 [ iftmp.307 ]) in insn 212:
  Adding insn 243 to worklist
Processing use of (reg 206 [ <variable>.uregs+60 ]) in insn 212:
  Adding insn 211 to worklist
Processing use of (reg 150 [ regs ]) in insn 211:
Processing use of (reg 24 cc) in insn 243:
  Adding insn 242 to worklist
Processing use of (reg 204) in insn 242:
  Adding insn 199 to worklist
Processing use of (reg 205 [ <variable>.uregs+64 ]) in insn 199:
  Adding insn 198 to worklist
Processing use of (reg 150 [ regs ]) in insn 198:
Processing use of (reg 13 sp) in insn 217:
Processing use of (reg 202) in insn 217:
Processing use of (reg 13 sp) in insn 222:
Processing use of (reg 0 r0) in insn 222:
  Adding insn 218 to worklist
Processing use of (reg 1 r1) in insn 222:
  Adding insn 219 to worklist
Processing use of (reg 2 r2) in insn 222:
  Adding insn 220 to worklist
Processing use of (reg 3 r3) in insn 222:
  Adding insn 221 to worklist
Processing use of (reg 149 [ no ]) in insn 221:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 209) in insn 220:
  Adding insn 215 to worklist
Processing use of (reg 25 sfp) in insn 215:
Processing use of (reg 150 [ regs ]) in insn 219:
Processing use of (reg 24 cc) in insn 185:
  Adding insn 184 to worklist
Processing use of (reg 146 [ D.18679 ]) in insn 184:
  Adding insn 21 to worklist
Processing use of (reg 200) in insn 184:
  Adding insn 183 to worklist
Processing use of (reg 152) in insn 21:
  Adding insn 20 to worklist
Processing use of (reg 149 [ no ]) in insn 20:
Processing use of (reg 196) in insn 175:
  Adding insn 173 to worklist
Processing use of (reg 198 [ <variable>.uregs ]) in insn 175:
  Adding insn 174 to worklist
Processing use of (reg 150 [ regs ]) in insn 174:
Processing use of (reg 197) in insn 173:
  Adding insn 172 to worklist
Processing use of (reg 142 [ sp.88 ]) in insn 172:
  Adding insn 7 to worklist
Processing use of (reg 13 sp) in insn 7:
Processing use of (reg 198 [ <variable>.uregs ]) in insn 177:
Processing use of (reg 150 [ regs ]) in insn 166:
Processing use of (reg 195) in insn 166:
  Adding insn 165 to worklist
Processing use of (reg 194 [ <variable>.uregs+64 ]) in insn 165:
  Adding insn 164 to worklist
Processing use of (reg 150 [ regs ]) in insn 164:
Processing use of (reg 24 cc) in insn 162:
  Adding insn 161 to worklist
Processing use of (reg 192) in insn 161:
  Adding insn 160 to worklist
Processing use of (reg 193 [ elf_hwcap ]) in insn 160:
  Adding insn 159 to worklist
Processing use of (reg 191) in insn 159:
  Adding insn 158 to worklist
Processing use of (reg 150 [ regs ]) in insn 152:
Processing use of (reg 190) in insn 152:
  Adding insn 151 to worklist
Processing use of (reg 189 [ <variable>.uregs+64 ]) in insn 151:
  Adding insn 150 to worklist
Processing use of (reg 150 [ regs ]) in insn 150:
Processing use of (reg 24 cc) in insn 148:
  Adding insn 147 to worklist
Processing use of (reg 187) in insn 147:
  Adding insn 146 to worklist
Processing use of (reg 188 [ elf_hwcap ]) in insn 146:
  Adding insn 145 to worklist
Processing use of (reg 186) in insn 145:
  Adding insn 144 to worklist
Processing use of (reg 13 sp) in insn 138:
Processing use of (reg 0 r0) in insn 138:
  Adding insn 137 to worklist
Processing use of (reg 134 [ D.19141 ]) in insn 137:
  Adding insn 102 to worklist
Processing use of (reg 136 [ mm ]) in insn 102:
  Adding insn 83 to worklist
Processing use of (reg 167 [ <variable>.task ]) in insn 83:
  Adding insn 82 to worklist
Processing use of (reg 165) in insn 82:
  Adding insn 81 to worklist
Processing use of (reg 166) in insn 81:
  Adding insn 80 to worklist
Processing use of (reg 13 sp) in insn 80:
Processing use of (reg 13 sp) in insn 119:
Processing use of (reg 0 r0) in insn 119:
  Adding insn 118 to worklist
Processing use of (reg 134 [ D.19141 ]) in insn 118:
Processing use of (reg 13 sp) in insn 131:
Processing use of (reg 0 r0) in insn 131:
  Adding insn 129 to worklist
Processing use of (reg 1 r1) in insn 131:
  Adding insn 130 to worklist
Processing use of (reg 185 [ cpu_cache.coherent_user_range ]) in insn 131:
  Adding insn 128 to worklist
Processing use of (reg 177) in insn 128:
  Adding insn 120 to worklist
Processing use of (reg 183) in insn 130:
  Adding insn 127 to worklist
Processing use of (reg 184) in insn 127:
  Adding insn 126 to worklist
Processing use of (reg 181) in insn 126:
  Adding insn 125 to worklist
Processing use of (reg 182) in insn 125:
  Adding insn 124 to worklist
Processing use of (reg 133 [ end.889 ]) in insn 124:
  Adding insn 117 to worklist
Processing use of (reg 140 [ end ]) in insn 117:
Processing use of (reg 176 [ <variable>.vm_end ]) in insn 117:
  Adding insn 116 to worklist
Processing use of (reg 137 [ vma ]) in insn 116:
  Adding insn 108 to worklist
Processing use of (reg 0 r0) in insn 108:
Processing use of (reg 179) in insn 129:
  Adding insn 123 to worklist
Processing use of (reg 180) in insn 123:
  Adding insn 122 to worklist
Processing use of (reg 178) in insn 122:
  Adding insn 121 to worklist
Processing use of (reg 135 [ D.19140 ]) in insn 121:
  Adding insn 112 to worklist
Processing use of (reg 139 [ start ]) in insn 121:
Processing use of (reg 137 [ vma ]) in insn 112:
Processing use of (reg 24 cc) in insn 114:
  Adding insn 113 to worklist
Processing use of (reg 135 [ D.19140 ]) in insn 113:
Processing use of (reg 140 [ end ]) in insn 113:
Processing use of (reg 13 sp) in insn 104:
Processing use of (reg 0 r0) in insn 104:
  Adding insn 103 to worklist
Processing use of (reg 134 [ D.19141 ]) in insn 103:
Processing use of (reg 13 sp) in insn 107:
Processing use of (reg 0 r0) in insn 107:
  Adding insn 105 to worklist
Processing use of (reg 1 r1) in insn 107:
  Adding insn 106 to worklist
Processing use of (reg 139 [ start ]) in insn 106:
Processing use of (reg 136 [ mm ]) in insn 105:
Processing use of (reg 24 cc) in insn 110:
  Adding insn 109 to worklist
Processing use of (reg 137 [ vma ]) in insn 109:
Processing use of (reg 24 cc) in insn 95:
  Adding insn 94 to worklist
Processing use of (reg 175) in insn 94:
Processing use of (reg 150 [ regs ]) in insn 65:
Processing use of (reg 162) in insn 65:
  Adding insn 64 to worklist
Processing use of (reg 144 [ iftmp.305 ]) in insn 64:
  Adding insn 241 to worklist
Processing use of (reg 145 [ D.18680 ]) in insn 64:
  Adding insn 50 to worklist
Processing use of (reg 150 [ regs ]) in insn 50:
Processing use of (reg 24 cc) in insn 241:
  Adding insn 240 to worklist
Processing use of (reg 160) in insn 240:
  Adding insn 52 to worklist
Processing use of (reg 161 [ <variable>.uregs+64 ]) in insn 52:
  Adding insn 51 to worklist
Processing use of (reg 150 [ regs ]) in insn 51:
Processing use of (reg 13 sp) in insn 71:
Processing use of (reg 0 r0) in insn 71:
  Adding insn 69 to worklist
Processing use of (reg 1 r1) in insn 71:
  Adding insn 70 to worklist
Processing use of (reg 150 [ regs ]) in insn 70:
Processing use of (reg 163) in insn 69:
  Adding insn 68 to worklist
Processing use of (reg 164) in insn 68:
  Adding insn 67 to worklist
Processing use of (reg 13 sp) in insn 67:
Processing use of (reg 25 sfp) in insn 29:
Processing use of (reg 153) in insn 29:
  Adding insn 28 to worklist
Processing use of (reg 25 sfp) in insn 31:
Processing use of (reg 154) in insn 31:
Processing use of (reg 25 sfp) in insn 33:
Processing use of (reg 155) in insn 33:
  Adding insn 32 to worklist
Processing use of (reg 25 sfp) in insn 35:
Processing use of (reg 154) in insn 35:
Processing use of (reg 13 sp) in insn 39:
Processing use of (reg 154) in insn 39:
Processing use of (reg 13 sp) in insn 44:
Processing use of (reg 0 r0) in insn 44:
  Adding insn 40 to worklist
Processing use of (reg 1 r1) in insn 44:
  Adding insn 41 to worklist
Processing use of (reg 2 r2) in insn 44:
  Adding insn 42 to worklist
Processing use of (reg 3 r3) in insn 44:
  Adding insn 43 to worklist
Processing use of (reg 154) in insn 43:
Processing use of (reg 158) in insn 42:
  Adding insn 37 to worklist
Processing use of (reg 25 sfp) in insn 37:
Processing use of (reg 150 [ regs ]) in insn 41:
Processing use of (reg 146 [ D.18679 ]) in insn 22:
Processing use of (reg 146 [ D.18679 ]) in insn 22:
Processing use of (reg 13 sp) in insn 14:
Processing use of (reg 0 r0) in insn 14:
Processing use of (reg 1 r1) in insn 14:
Processing use of (reg 24 cc) in insn 10:
  Adding insn 9 to worklist
Processing use of (reg 151) in insn 9:
  Adding insn 8 to worklist
Processing use of (reg 149 [ no ]) in insn 8:


arm_syscall

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={19d,14u} r1={15d,7u} r2={12d,2u} r3={12d,2u} r11={1d,21u} r12={10d} r13={1d,35u,2d} r14={10d,1u} r15={9d} r16={9d} r17={9d} r18={9d} r19={9d} r20={9d} r21={9d} r22={9d} r23={9d} r24={23d,11u} r25={1d,31u,2d} r26={1d,20u} r27={9d} r28={9d} r29={9d} r30={9d} r31={9d} r32={9d} r33={9d} r34={9d} r35={9d} r36={9d} r37={9d} r38={9d} r39={9d} r40={9d} r41={9d} r42={9d} r43={9d} r44={9d} r45={9d} r46={9d} r47={9d} r48={9d} r49={9d} r50={9d} r51={9d} r52={9d} r53={9d} r54={9d} r55={9d} r56={9d} r57={9d} r58={9d} r59={9d} r60={9d} r61={9d} r62={9d} r63={9d} r64={9d} r65={9d} r66={9d} r67={9d} r68={9d} r69={9d} r70={9d} r71={9d} r72={9d} r73={9d} r74={9d} r75={9d} r76={9d} r77={9d} r78={9d} r79={9d} r80={9d} r81={9d} r82={9d} r83={9d} r84={9d} r85={9d} r86={9d} r87={9d} r88={9d} r89={9d} r90={9d} r91={9d} r92={9d} r93={9d} r94={9d} r95={9d} r96={9d} r97={9d} r98={9d} r99={9d} r100={9d} r101={9d} r102={9d} r103={9d} r104={9d} r105={9d} r106={9d} r107={9d} r108={9d} r109={9d} r110={9d} r111={9d} r112={9d} r113={9d} r114={9d} r115={9d} r116={9d} r117={9d} r118={9d} r119={9d} r120={9d} r121={9d} r122={9d} r123={9d} r124={9d} r125={9d} r126={9d} r127={9d} r133={1d,1u,1d} r134={1d,3u} r135={1d,2u} r136={1d,2u} r137={1d,3u} r139={1d,3u} r140={1d,3u} r142={1d,1u,1d} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,3u,1d} r147={11d,1u} r149={1d,3u,1d} r150={1d,19u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,5u} r155={1d,1u} r158={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,1u} r169={1d,1u} r170={1d,1u} r172={1d,1u} r173={1d,1u} r174={1d,1u} r175={1d,2u} r176={1d,1u} r177={1d,1u} r178={1d,1u,1d} r179={1d,1u} r180={1d,1u} r181={1d,1u,1d} r182={1d,1u} r183={1d,1u} r184={1d,1u} r185={1d,1u} r186={1d,1u} r187={1d,1u} r188={1d,1u} r189={1d,1u} r190={1d,1u} r191={1d,1u} r192={1d,1u} r193={1d,1u} r194={1d,1u} r195={1d,1u} r196={1d,1u} r197={1d,1u} r198={1d,2u} r200={1d,1u} r201={1d,1u} r202={1d,3u} r203={1d,1u} r204={1d,1u} r205={1d,1u} r206={1d,1u} r207={1d,1u} r209={1d,1u} 
;;    total ref usage 1433{1172d,251u,10e} in 149{140 regular + 9 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	
0[0,19] 1[19,15] 2[34,12] 3[46,12] 11[58,1] 12[59,10] 13[69,1] 14[70,10] 15[80,9] 16[89,9] 17[98,9] 18[107,9] 19[116,9] 20[125,9] 21[134,9] 22[143,9] 23[152,9] 24[161,23] 25[184,1] 26[185,1] 27[186,9] 28[195,9] 29[204,9] 30[213,9] 31[222,9] 32[231,9] 33[240,9] 34[249,9] 35[258,9] 36[267,9] 37[276,9] 38[285,9] 39[294,9] 40[303,9] 41[312,9] 42[321,9] 43[330,9] 44[339,9] 45[348,9] 46[357,9] 47[366,9] 48[375,9] 49[384,9] 50[393,9] 51[402,9] 52[411,9] 53[420,9] 54[429,9] 55[438,9] 56[447,9] 57[456,9] 58[465,9] 59[474,9] 60[483,9] 61[492,9] 62[501,9] 63[510,9] 64[519,9] 65[528,9] 66[537,9] 67[546,9] 68[555,9] 69[564,9] 70[573,9] 71[582,9] 72[591,9] 73[600,9] 74[609,9] 75[618,9] 76[627,9] 77[636,9] 78[645,9] 79[654,9] 80[663,9] 81[672,9] 82[681,9] 83[690,9] 84[699,9] 85[708,9] 86[717,9] 87[726,9] 88[735,9] 89[744,9] 90[753,9] 91[762,9] 92[771,9] 93[780,9] 94[789,9] 95[798,9] 96[807,9] 97[816,9] 98[825,9] 99[834,9] 100[843,9] 101[852,9] 102[861,9] 103[870,9] 104[879,9] 105[888,9] 106[897,9] 107[906,9] 108[915,9] 109[924,9] 110[933,9] 111[942,9] 112[951,9] 113[960,9] 114[969,9] 115[978,9] 116[987,9] 117[996,9] 118[1005,9] 119[1014,9] 120[1023,9] 121[1032,9] 122[1041,9] 123[1050,9] 124[1059,9] 125[1068,9] 126[1077,9] 127[1086,9] 133[1095,1] 134[1096,1] 135[1097,1] 136[1098,1] 137[1099,1] 139[1100,1] 140[1101,1] 142[1102,1] 143[1103,1] 144[1104,1] 145[1105,1] 146[1106,1] 147[1107,11] 149[1118,1] 150[1119,1] 151[1120,1] 152[1121,1] 153[1122,1] 154[1123,1] 155[1124,1] 158[1125,1] 160[1126,1] 161[1127,1] 162[1128,1] 163[1129,1] 164[1130,1] 165[1131,1] 166[1132,1] 167[1133,1] 169[1134,1] 170[1135,1] 172[1136,1] 173[1137,1] 174[1138,1] 175[1139,1] 176[1140,1] 177[1141,1] 178[1142,1] 179[1143,1] 180[1144,1] 181[1145,1] 182[1146,1] 183[1147,1] 184[1148,1] 185[1149,1] 186[1150,1] 187[1151,1] 188[1152,1] 189[1153,1] 190[1154,1] 191[1155,1] 192[1156,1] 193[1157,1] 194[1158,1] 195[1159,1] 196[1160,1] 197[1161,1] 198[1162,1] 200[1163,1] 201[1164,1] 202[1165,1] 203[1166,1] 204[1167,1] 205[1168,1] 206[1169,1] 207[1170,1] 209[1171,1] 
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 142 149 150 151
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 142 149 150 151
;; live  kill	
;; rd  in  	(10)
18, 33, 45, 57, 58, 68, 69, 79, 184, 185
;; rd  gen 	(5)
183, 1102, 1118, 1119, 1120
;; rd  kill	(27)
161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 1102, 1118, 1119, 1120

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 5 3 2 arch/arm/kernel/traps.c:482 (set (reg/v:SI 149 [ no ])
        (reg:SI 0 r0 [ no ])) 167 {*arm_movsi_insn} (nil))

(insn 3 2 4 2 arch/arm/kernel/traps.c:482 (set (reg/v/f:SI 150 [ regs ])
        (reg:SI 1 r1 [ regs ])) 167 {*arm_movsi_insn} (nil))

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 8 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 142 [ sp.88 ])
        (reg/v:SI 13 sp [ sp ])) 167 {*arm_movsi_insn} (nil))

(insn 8 7 9 2 arch/arm/kernel/traps.c:486 (set (reg:SI 151)
        (ashiftrt:SI (reg/v:SI 149 [ no ])
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (nil))

(insn 9 8 10 2 arch/arm/kernel/traps.c:486 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 151)
            (const_int 15 [0xf]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 151)
        (nil)))

(jump_insn 10 9 11 2 arch/arm/kernel/traps.c:486 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 18)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5983 [0x175f])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 149 150
;; live  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 149 150
;; rd  out 	(15)
18, 33, 45, 57, 58, 68, 69, 79, 183, 184, 185, 1102, 1118, 1119, 1120


;; Succ edge  3 [40.2%]  (fallthru)
;; Succ edge  4 [59.8%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u10(11){ }u11(13){ }u12(25){ }u13(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 147
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 147
;; live  kill	 14 [lr]
;; rd  in  	(15)
18, 33, 45, 57, 58, 68, 69, 79, 183, 184, 185, 1102, 1118, 1119, 1120
;; rd  gen 	(2)
17, 1117
;; rd  kill	(40)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117

;; Pred edge  2 [40.2%]  (fallthru)
(note 11 10 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(call_insn 14 11 15 3 arch/arm/kernel/traps.c:487 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("bad_syscall") [flags 0x3] <function_decl 0x111e7800 bad_syscall>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 15 14 244 3 arch/arm/kernel/traps.c:487 (set (reg:SI 147 [ D.18677 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(jump_insn 244 15 245 3 arch/arm/kernel/traps.c:487 (set (pc)
        (label_ref 224)) -1 (nil))
;; End of basic block 3 -> ( 21)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; rd  out 	(15)
17, 33, 45, 57, 58, 68, 69, 183, 184, 185, 1102, 1117, 1118, 1119, 1120


;; Succ edge  21 [100.0%] 

(barrier 245 244 18)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u18(11){ }u19(13){ }u20(25){ }u21(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 149 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149
;; lr  def 	 24 [cc] 146 152
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 149 150
;; live  gen 	 146 152
;; live  kill	 24 [cc]
;; rd  in  	(15)
18, 33, 45, 57, 58, 68, 69, 79, 183, 184, 185, 1102, 1118, 1119, 1120
;; rd  gen 	(2)
1106, 1121
;; rd  kill	(25)
161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 1106, 1121

;; Pred edge  2 [59.8%] 
(code_label 18 245 19 4 121 "" [1 uses])

(note 19 18 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 20 19 21 4 arch/arm/kernel/traps.c:489 (set (reg:SI 152)
        (ashift:SI (reg/v:SI 149 [ no ])
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (nil))

(insn 21 20 22 4 arch/arm/kernel/traps.c:489 (set (reg:SI 146 [ D.18679 ])
        (lshiftrt:SI (reg:SI 152)
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 152)
        (expr_list:REG_EQUAL (and:SI (reg/v:SI 149 [ no ])
                (const_int 65535 [0xffff]))
            (nil))))

(jump_insn 22 21 23 4 arch/arm/kernel/traps.c:489 (parallel [
            (set (pc)
                (if_then_else (leu (reg:SI 146 [ D.18679 ])
                        (const_int 5 [0x5]))
                    (mem:SI (plus:SI (mult:SI (reg:SI 146 [ D.18679 ])
                                (const_int 4 [0x4]))
                            (label_ref 23)) [0 S4 A32])
                    (label_ref 181)))
            (clobber (reg:CC 24 cc))
            (use (label_ref 23))
        ]) 265 {arm_casesi_internal} (expr_list:REG_UNUSED (reg:CC 24 cc)
        (insn_list:REG_LABEL_TARGET 181 (nil))))
;; End of basic block 4 -> ( 18 5 6 7 13 15 17)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 146 149 150
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 146 149 150
;; rd  out 	(16)
18, 33, 45, 57, 58, 68, 69, 79, 184, 185, 1102, 1106, 1118, 1119, 1120, 1121


;; Succ edge  18 [14.3%] 
;; Succ edge  5 [14.3%] 
;; Succ edge  6 [14.3%] 
;; Succ edge  7 [14.3%] 
;; Succ edge  13 [14.3%] 
;; Succ edge  15 [14.3%] 
;; Succ edge  17 [14.3%] 

;; Insn is not within a basic block
(code_label 23 22 24 130 "" [2 uses])

;; Insn is not within a basic block
(jump_insn 24 23 25 arch/arm/kernel/traps.c:489 (addr_vec:SI [
            (label_ref:SI 26)
            (label_ref:SI 48)
            (label_ref:SI 75)
            (label_ref:SI 142)
            (label_ref:SI 156)
            (label_ref:SI 170)
        ]) -1 (nil))

(barrier 25 24 26)

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u27(11){ }u28(13){ }u29(25){ }u30(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 147 153 154 155 158
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 147 153 154 155 158
;; live  kill	 14 [lr]
;; rd  in  	(16)
18, 33, 45, 57, 58, 68, 69, 79, 184, 185, 1102, 1106, 1118, 1119, 1120, 1121
;; rd  gen 	(5)
1109, 1122, 1123, 1124, 1125
;; rd  kill	(25)
70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1122, 1123, 1124, 1125

;; Pred edge  4 [14.3%] 
(code_label 26 25 27 5 124 "" [1 uses])

(note 27 26 28 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 28 27 29 5 arch/arm/kernel/traps.c:491 (set (reg:SI 153)
        (const_int 11 [0xb])) 167 {*arm_movsi_insn} (nil))

(insn 29 28 30 5 arch/arm/kernel/traps.c:491 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -128 [0xffffffffffffff80])) [0 info.si_signo+0 S4 A64])
        (reg:SI 153)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 153)
        (expr_list:REG_EQUAL (const_int 11 [0xb])
            (nil))))

(insn 30 29 31 5 arch/arm/kernel/traps.c:492 (set (reg:SI 154)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 31 30 32 5 arch/arm/kernel/traps.c:492 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -124 [0xffffffffffffff84])) [0 info.si_errno+0 S4 A32])
        (reg:SI 154)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 32 31 33 5 arch/arm/kernel/traps.c:493 (set (reg:SI 155)
        (const_int 196609 [0x30001])) 167 {*arm_movsi_insn} (nil))

(insn 33 32 35 5 arch/arm/kernel/traps.c:493 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -120 [0xffffffffffffff88])) [0 info.si_code+0 S4 A64])
        (reg:SI 155)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 155)
        (expr_list:REG_EQUAL (const_int 196609 [0x30001])
            (nil))))

(insn 35 33 37 5 arch/arm/kernel/traps.c:494 (set (mem/s/f/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -116 [0xffffffffffffff8c])) [0 info._sifields._sigfault._addr+0 S4 A32])
        (reg:SI 154)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 37 35 39 5 arch/arm/kernel/traps.c:496 (set (reg/f:SI 158)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -128 [0xffffffffffffff80]))) 4 {*arm_addsi3} (nil))

(insn 39 37 40 5 arch/arm/kernel/traps.c:496 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg:SI 154)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 40 39 41 5 arch/arm/kernel/traps.c:496 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC32") [flags 0x82] <string_cst 0x1123f9f0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC32") [flags 0x82] <string_cst 0x1123f9f0>)
        (nil)))

(insn 41 40 42 5 arch/arm/kernel/traps.c:496 (set (reg:SI 1 r1)
        (reg/v/f:SI 150 [ regs ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 150 [ regs ])
        (nil)))

(insn 42 41 43 5 arch/arm/kernel/traps.c:496 (set (reg:SI 2 r2)
        (reg/f:SI 158)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 158)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -128 [0xffffffffffffff80]))
            (nil))))

(insn 43 42 44 5 arch/arm/kernel/traps.c:496 (set (reg:SI 3 r3)
        (reg:SI 154)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(call_insn 44 43 45 5 arch/arm/kernel/traps.c:496 (parallel [
            (call (mem:SI (symbol_ref:SI ("arm_notify_die") [flags 0x3] <function_decl 0x512e8d00 arm_notify_die>) [0 S4 A32])
                (const_int 8 [0x8]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_DEAD (reg:SI 0 r0)
                    (expr_list:REG_EH_REGION (const_int 0 [0x0])
                        (nil))))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 45 44 246 5 arch/arm/kernel/traps.c:497 (set (reg:SI 147 [ D.18677 ])
        (reg:SI 154)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 154)
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(jump_insn 246 45 247 5 arch/arm/kernel/traps.c:497 (set (pc)
        (label_ref 224)) -1 (nil))
;; End of basic block 5 -> ( 21)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; rd  out 	(20)
18, 33, 45, 57, 58, 68, 69, 184, 185, 1102, 1106, 1109, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125


;; Succ edge  21 [100.0%] 

(barrier 247 246 48)

;; Start of basic block ( 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u52(11){ }u53(13){ }u54(25){ }u55(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 144 145 147 160 161 162 163 164
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 144 145 147 160 161 162 163 164
;; live  kill	 14 [lr]
;; rd  in  	(16)
18, 33, 45, 57, 58, 68, 69, 79, 184, 185, 1102, 1106, 1118, 1119, 1120, 1121
;; rd  gen 	(8)
1104, 1105, 1116, 1126, 1127, 1128, 1129, 1130
;; rd  kill	(28)
70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 1104, 1105, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1126, 1127, 1128, 1129, 1130

;; Pred edge  4 [14.3%] 
(code_label 48 247 49 6 125 "" [1 uses])

(note 49 48 50 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 50 49 51 6 arch/arm/kernel/traps.c:500 (set (reg:SI 145 [ D.18680 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 150 [ regs ])
                (const_int 60 [0x3c])) [0 <variable>.uregs+60 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 51 50 52 6 arch/arm/kernel/traps.c:500 (set (reg:SI 161 [ <variable>.uregs+64 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 150 [ regs ])
                (const_int 64 [0x40])) [0 <variable>.uregs+64 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 52 51 240 6 arch/arm/kernel/traps.c:500 (set (reg:SI 160)
        (and:SI (reg:SI 161 [ <variable>.uregs+64 ])
            (const_int 32 [0x20]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 161 [ <variable>.uregs+64 ])
        (nil)))

(insn 240 52 241 6 arch/arm/kernel/traps.c:500 discrim 2 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 160)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 160)
        (nil)))

(insn 241 240 64 6 arch/arm/kernel/traps.c:500 discrim 2 (set (reg:SI 144 [ iftmp.305 ])
        (if_then_else:SI (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (const_int 2 [0x2])
            (const_int 4 [0x4]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 64 241 65 6 arch/arm/kernel/traps.c:500 discrim 3 (set (reg:SI 162)
        (minus:SI (reg:SI 145 [ D.18680 ])
            (reg:SI 144 [ iftmp.305 ]))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg:SI 145 [ D.18680 ])
        (expr_list:REG_DEAD (reg:SI 144 [ iftmp.305 ])
            (nil))))

(insn 65 64 67 6 arch/arm/kernel/traps.c:500 discrim 3 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 150 [ regs ])
                (const_int 60 [0x3c])) [0 <variable>.uregs+60 S4 A32])
        (reg:SI 162)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 162)
        (nil)))

(insn 67 65 68 6 arch/arm/kernel/traps.c:501 (set (reg:SI 164)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 68 67 69 6 arch/arm/kernel/traps.c:501 (set (reg:SI 163)
        (and:SI (reg:SI 164)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 164)
        (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
                (const_int -8192 [0xffffffffffffe000]))
            (nil))))

(insn 69 68 70 6 arch/arm/kernel/traps.c:501 (set (reg:SI 0 r0)
        (mem/s/f/j:SI (plus:SI (reg:SI 163)
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 163)
        (nil)))

(insn 70 69 71 6 arch/arm/kernel/traps.c:501 (set (reg:SI 1 r1)
        (reg/v/f:SI 150 [ regs ])) 167 {*arm_movsi_insn} (nil))

(call_insn 71 70 72 6 arch/arm/kernel/traps.c:501 (parallel [
            (call (mem:SI (symbol_ref:SI ("ptrace_break") [flags 0x41] <function_decl 0x111aa500 ptrace_break>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 72 71 248 6 arch/arm/kernel/traps.c:502 (set (reg:SI 147 [ D.18677 ])
        (mem/s/j:SI (reg/v/f:SI 150 [ regs ]) [0 <variable>.uregs+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 150 [ regs ])
        (nil)))

(jump_insn 248 72 249 6 arch/arm/kernel/traps.c:502 (set (pc)
        (label_ref 224)) -1 (nil))
;; End of basic block 6 -> ( 21)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; rd  out 	(23)
18, 33, 45, 57, 58, 68, 69, 184, 185, 1102, 1104, 1105, 1106, 1116, 1118, 1119, 1120, 1121, 1126, 1127, 1128, 1129, 1130


;; Succ edge  21 [100.0%] 

(barrier 249 248 75)

;; Start of basic block ( 4) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u74(11){ }u75(13){ }u76(25){ }u77(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150
;; lr  def 	 24 [cc] 136 139 140 165 166 167 169 170 172 173 174 175
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 150
;; live  gen 	 24 [cc] 136 139 140 165 166 167 169 170 172 173 174 175
;; live  kill	
;; rd  in  	(16)
18, 33, 45, 57, 58, 68, 69, 79, 184, 185, 1102, 1106, 1118, 1119, 1120, 1121
;; rd  gen 	(13)
176, 1098, 1100, 1101, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139
;; rd  kill	(35)
161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 1098, 1100, 1101, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139

;; Pred edge  4 [14.3%] 
(code_label 75 249 76 7 126 "" [1 uses])

(note 76 75 77 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 77 76 78 7 arch/arm/kernel/traps.c:519 (set (reg/v:SI 139 [ start ])
        (mem/s/j:SI (reg/v/f:SI 150 [ regs ]) [0 <variable>.uregs+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 78 77 80 7 arch/arm/kernel/traps.c:519 (set (reg/v:SI 140 [ end ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 150 [ regs ])
                (const_int 4 [0x4])) [0 <variable>.uregs+4 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 80 78 81 7 arch/arm/kernel/traps.c:455 (set (reg:SI 166)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 81 80 82 7 arch/arm/kernel/traps.c:455 (set (reg:SI 165)
        (and:SI (reg:SI 166)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 166)
        (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
                (const_int -8192 [0xffffffffffffe000]))
            (nil))))

(insn 82 81 83 7 arch/arm/kernel/traps.c:455 (set (reg/f:SI 167 [ <variable>.task ])
        (mem/s/f/j:SI (plus:SI (reg:SI 165)
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 165)
        (nil)))

(insn 83 82 84 7 arch/arm/kernel/traps.c:455 (set (reg/v/f:SI 136 [ mm ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 167 [ <variable>.task ])
                (const_int 496 [0x1f0])) [0 <variable>.active_mm+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 167 [ <variable>.task ])
        (nil)))

(insn 84 83 85 7 arch/arm/kernel/traps.c:519 (set (reg:SI 169 [ <variable>.uregs+8 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 150 [ regs ])
                (const_int 8 [0x8])) [0 <variable>.uregs+8 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 150 [ regs ])
        (nil)))

(insn 85 84 86 7 arch/arm/kernel/traps.c:519 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 169 [ <variable>.uregs+8 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 169 [ <variable>.uregs+8 ])
        (nil)))

(insn 86 85 88 7 arch/arm/kernel/traps.c:519 (set (reg:SI 170)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 88 86 89 7 arch/arm/kernel/traps.c:458 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 140 [ end ])
            (reg/v:SI 139 [ start ]))) 219 {*arm_cmpsi_insn} (nil))

(insn 89 88 91 7 arch/arm/kernel/traps.c:458 (set (reg:SI 172)
        (ltu:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 91 89 92 7 arch/arm/kernel/traps.c:458 (set (reg:SI 173)
        (ior:SI (reg:SI 170)
            (reg:SI 172))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 172)
        (expr_list:REG_DEAD (reg:SI 170)
            (nil))))

(insn 92 91 93 7 arch/arm/kernel/traps.c:458 (set (reg:QI 174)
        (subreg:QI (reg:SI 173) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 173)
        (nil)))

(insn 93 92 94 7 arch/arm/kernel/traps.c:458 (set (reg:SI 175)
        (zero_extend:SI (reg:QI 174))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 174)
        (nil)))

(insn 94 93 95 7 arch/arm/kernel/traps.c:458 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 175)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 95 94 96 7 arch/arm/kernel/traps.c:458 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 100)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3898 [0xf3a])
            (nil))))
;; End of basic block 7 -> ( 8 9)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 139 140 175
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 139 140 175
;; rd  out 	(29)
18, 33, 45, 57, 58, 68, 69, 79, 176, 184, 185, 1098, 1100, 1101, 1102, 1106, 1118, 1119, 1120, 1121, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139


;; Succ edge  8 [61.0%]  (fallthru)
;; Succ edge  9 [39.0%] 

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u97(11){ }u98(13){ }u99(25){ }u100(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 147
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 147
;; live  kill	
;; rd  in  	(29)
18, 33, 45, 57, 58, 68, 69, 79, 176, 184, 185, 1098, 1100, 1101, 1102, 1106, 1118, 1119, 1120, 1121, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139
;; rd  gen 	(1)
1115
;; rd  kill	(11)
1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117

;; Pred edge  7 [61.0%]  (fallthru)
(note 96 95 97 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 97 96 250 8 arch/arm/kernel/traps.c:520 (set (reg:SI 147 [ D.18677 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(jump_insn 250 97 251 8 (set (pc)
        (label_ref 224)) -1 (nil))
;; End of basic block 8 -> ( 21)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147
;; rd  out 	(30)
18, 33, 45, 57, 58, 68, 69, 79, 176, 184, 185, 1098, 1100, 1101, 1102, 1106, 1115, 1118, 1119, 1120, 1121, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139


;; Succ edge  21 [100.0%] 

(barrier 251 250 100)

;; Start of basic block ( 7) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u101(11){ }u102(13){ }u103(25){ }u104(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 139 140 175
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 139
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 137
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 139 140 175
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 134 137
;; live  kill	 14 [lr]
;; rd  in  	(29)
18, 33, 45, 57, 58, 68, 69, 79, 176, 184, 185, 1098, 1100, 1101, 1102, 1106, 1118, 1119, 1120, 1121, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139
;; rd  gen 	(4)
10, 173, 1096, 1099
;; rd  kill	(54)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 1096, 1099

;; Pred edge  7 [39.0%] 
(code_label 100 251 101 9 133 "" [1 uses])

(note 101 100 102 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 102 101 103 9 arch/arm/kernel/traps.c:461 (set (reg/f:SI 134 [ D.19141 ])
        (plus:SI (reg/v/f:SI 136 [ mm ])
            (const_int 60 [0x3c]))) 4 {*arm_addsi3} (nil))

(insn 103 102 104 9 arch/arm/kernel/traps.c:461 (set (reg:SI 0 r0)
        (reg/f:SI 134 [ D.19141 ])) 167 {*arm_movsi_insn} (nil))

(call_insn 104 103 105 9 arch/arm/kernel/traps.c:461 (parallel [
            (call (mem:SI (symbol_ref:SI ("down_read") [flags 0x41] <function_decl 0x10cb2700 down_read>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 105 104 106 9 arch/arm/kernel/traps.c:462 (set (reg:SI 0 r0)
        (reg/v/f:SI 136 [ mm ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 136 [ mm ])
        (nil)))

(insn 106 105 107 9 arch/arm/kernel/traps.c:462 (set (reg:SI 1 r1)
        (reg/v:SI 139 [ start ])) 167 {*arm_movsi_insn} (nil))

(call_insn 107 106 108 9 arch/arm/kernel/traps.c:462 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("find_vma") [flags 0x41] <function_decl 0x1118a380 find_vma>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 108 107 109 9 arch/arm/kernel/traps.c:462 (set (reg/v/f:SI 137 [ vma ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 109 108 110 9 arch/arm/kernel/traps.c:463 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 137 [ vma ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 110 109 111 9 arch/arm/kernel/traps.c:463 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 135)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 441 [0x1b9])
            (nil))))
;; End of basic block 9 -> ( 10 12)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 137 139 140 175
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 137 139 140 175
;; rd  out 	(30)
10, 33, 45, 57, 58, 68, 69, 173, 184, 185, 1096, 1098, 1099, 1100, 1101, 1102, 1106, 1118, 1119, 1120, 1121, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139


;; Succ edge  10 [95.6%]  (fallthru)
;; Succ edge  12 [4.4%] 

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u117(11){ }u118(13){ }u119(25){ }u120(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 137 139 140 175
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 140
;; lr  def 	 24 [cc] 135
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 137 139 140 175
;; live  gen 	 24 [cc] 135
;; live  kill	
;; rd  in  	(30)
10, 33, 45, 57, 58, 68, 69, 173, 184, 185, 1096, 1098, 1099, 1100, 1101, 1102, 1106, 1118, 1119, 1120, 1121, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139
;; rd  gen 	(2)
172, 1097
;; rd  kill	(24)
161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 1097

;; Pred edge  9 [95.6%]  (fallthru)
(note 111 110 112 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 112 111 113 10 arch/arm/kernel/traps.c:463 discrim 1 (set (reg:SI 135 [ D.19140 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 137 [ vma ])
                (const_int 4 [0x4])) [0 <variable>.vm_start+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 113 112 114 10 arch/arm/kernel/traps.c:463 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 135 [ D.19140 ])
            (reg/v:SI 140 [ end ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 114 113 115 10 arch/arm/kernel/traps.c:463 discrim 1 (set (pc)
        (if_then_else (geu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 135)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 10 -> ( 11 12)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 137 139 140 175
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 137 139 140 175
;; rd  out 	(31)
10, 33, 45, 57, 58, 68, 69, 172, 184, 185, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1106, 1118, 1119, 1120, 1121, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139


;; Succ edge  11 [61.0%]  (fallthru)
;; Succ edge  12 [39.0%] 

;; Start of basic block ( 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u125(11){ }u126(13){ }u127(25){ }u128(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 137 139 140 175
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 137 139 140 175
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 147 176 177 178 179 180 181 182 183 184 185
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 137 139 140 175
;; live  gen 	 0 [r0] 1 [r1] 133 147 176 177 178 179 180 181 182 183 184 185
;; live  kill	 14 [lr] 24 [cc]
;; rd  in  	(31)
10, 33, 45, 57, 58, 68, 69, 172, 184, 185, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1106, 1118, 1119, 1120, 1121, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139
;; rd  gen 	(12)
1095, 1108, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149
;; rd  kill	(32)
70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 1095, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149

;; Pred edge  10 [61.0%]  (fallthru)
(note 115 114 116 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 116 115 117 11 arch/arm/kernel/traps.c:463 discrim 1 (set (reg:SI 176 [ <variable>.vm_end ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 137 [ vma ])
                (const_int 8 [0x8])) [0 <variable>.vm_end+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 137 [ vma ])
        (nil)))

(insn 117 116 118 11 arch/arm/kernel/traps.c:463 discrim 1 (parallel [
            (set (reg/v:SI 133 [ end.889 ])
                (umin:SI (reg/v:SI 140 [ end ])
                    (reg:SI 176 [ <variable>.vm_end ])))
            (clobber (reg:CC 24 cc))
        ]) 107 {*arm_uminsi3} (expr_list:REG_DEAD (reg:SI 176 [ <variable>.vm_end ])
        (expr_list:REG_DEAD (reg/v:SI 140 [ end ])
            (expr_list:REG_UNUSED (reg:CC 24 cc)
                (nil)))))

(insn 118 117 119 11 arch/arm/kernel/traps.c:469 (set (reg:SI 0 r0)
        (reg/f:SI 134 [ D.19141 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 134 [ D.19141 ])
        (nil)))

(call_insn 119 118 120 11 arch/arm/kernel/traps.c:469 (parallel [
            (call (mem:SI (symbol_ref:SI ("up_read") [flags 0x41] <function_decl 0x10cb2900 up_read>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 120 119 121 11 arch/arm/kernel/traps.c:470 (set (reg/f:SI 177)
        (symbol_ref:SI ("cpu_cache") [flags 0xc0] <var_decl 0x111974e0 cpu_cache>)) 167 {*arm_movsi_insn} (nil))

(insn 121 120 122 11 arch/arm/kernel/traps.c:470 (parallel [
            (set (reg:SI 178)
                (umax:SI (reg:SI 135 [ D.19140 ])
                    (reg/v:SI 139 [ start ])))
            (clobber (reg:CC 24 cc))
        ]) 106 {*arm_umaxsi3} (expr_list:REG_DEAD (reg/v:SI 139 [ start ])
        (expr_list:REG_DEAD (reg:SI 135 [ D.19140 ])
            (expr_list:REG_UNUSED (reg:CC 24 cc)
                (nil)))))

(insn 122 121 123 11 arch/arm/kernel/traps.c:470 (set (reg:SI 180)
        (and:SI (reg:SI 178)
            (const_int -4081 [0xfffffffffffff00f]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 178)
        (nil)))

(insn 123 122 124 11 arch/arm/kernel/traps.c:470 (set (reg:SI 179)
        (and:SI (reg:SI 180)
            (const_int -16 [0xfffffffffffffff0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 180)
        (expr_list:REG_EQUAL (and:SI (reg:SI 178)
                (const_int -4096 [0xfffffffffffff000]))
            (nil))))

(insn 124 123 125 11 arch/arm/kernel/traps.c:470 (set (reg:SI 182)
        (plus:SI (reg/v:SI 133 [ end.889 ])
            (const_int 4080 [0xff0]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/v:SI 133 [ end.889 ])
        (nil)))

(insn 125 124 126 11 arch/arm/kernel/traps.c:470 (set (reg:SI 181)
        (plus:SI (reg:SI 182)
            (const_int 15 [0xf]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 182)
        (expr_list:REG_EQUAL (plus:SI (reg/v:SI 133 [ end.889 ])
                (const_int 4095 [0xfff]))
            (nil))))

(insn 126 125 127 11 arch/arm/kernel/traps.c:470 (set (reg:SI 184)
        (and:SI (reg:SI 181)
            (const_int -4081 [0xfffffffffffff00f]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 181)
        (nil)))

(insn 127 126 128 11 arch/arm/kernel/traps.c:470 (set (reg:SI 183)
        (and:SI (reg:SI 184)
            (const_int -16 [0xfffffffffffffff0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 184)
        (expr_list:REG_EQUAL (and:SI (reg:SI 181)
                (const_int -4096 [0xfffffffffffff000]))
            (nil))))

(insn 128 127 129 11 arch/arm/kernel/traps.c:470 (set (reg/f:SI 185 [ cpu_cache.coherent_user_range ])
        (mem/s/f/j/c:SI (plus:SI (reg/f:SI 177)
                (const_int 20 [0x14])) [0 cpu_cache.coherent_user_range+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 177)
        (expr_list:REG_EQUAL (mem/s/f/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("cpu_cache") [flags 0xc0] <var_decl 0x111974e0 cpu_cache>)
                        (const_int 20 [0x14]))) [0 cpu_cache.coherent_user_range+0 S4 A32])
            (nil))))

(insn 129 128 130 11 arch/arm/kernel/traps.c:470 (set (reg:SI 0 r0)
        (reg:SI 179)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 179)
        (nil)))

(insn 130 129 131 11 arch/arm/kernel/traps.c:470 (set (reg:SI 1 r1)
        (reg:SI 183)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 183)
        (nil)))

(call_insn 131 130 132 11 arch/arm/kernel/traps.c:470 (parallel [
            (call (mem:SI (reg/f:SI 185 [ cpu_cache.coherent_user_range ]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 244 {*call_reg_armv5} (expr_list:REG_DEAD (reg/f:SI 185 [ cpu_cache.coherent_user_range ])
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_DEAD (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 132 131 252 11 arch/arm/kernel/traps.c:520 (set (reg:SI 147 [ D.18677 ])
        (reg:SI 175)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 175)
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(jump_insn 252 132 253 11 (set (pc)
        (label_ref 224)) -1 (nil))
;; End of basic block 11 -> ( 21)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; rd  out 	(43)
10, 33, 45, 57, 58, 68, 69, 172, 184, 185, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1106, 1108, 1118, 1119, 1120, 1121, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149


;; Succ edge  21 [100.0%] 

(barrier 253 252 135)

;; Start of basic block ( 9 10) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u154(11){ }u155(13){ }u156(25){ }u157(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 147
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; live  gen 	 0 [r0] 147
;; live  kill	 14 [lr]
;; rd  in  	(32)
10, 33, 45, 57, 58, 68, 69, 172, 173, 184, 185, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1106, 1118, 1119, 1120, 1121, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139
;; rd  gen 	(1)
1114
;; rd  kill	(21)
70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117

;; Pred edge  9 [4.4%] 
;; Pred edge  10 [39.0%] 
(code_label 135 253 136 12 134 "" [2 uses])

(note 136 135 137 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 137 136 138 12 arch/arm/kernel/traps.c:473 (set (reg:SI 0 r0)
        (reg/f:SI 134 [ D.19141 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 134 [ D.19141 ])
        (nil)))

(call_insn 138 137 139 12 arch/arm/kernel/traps.c:473 (parallel [
            (call (mem:SI (symbol_ref:SI ("up_read") [flags 0x41] <function_decl 0x10cb2900 up_read>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 139 138 254 12 arch/arm/kernel/traps.c:520 (set (reg:SI 147 [ D.18677 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(jump_insn 254 139 255 12 (set (pc)
        (label_ref 224)) -1 (nil))
;; End of basic block 12 -> ( 21)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; rd  out 	(33)
10, 33, 45, 57, 58, 68, 69, 172, 173, 184, 185, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1106, 1114, 1118, 1119, 1120, 1121, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139


;; Succ edge  21 [100.0%] 

(barrier 255 254 142)

;; Start of basic block ( 4) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u161(11){ }u162(13){ }u163(25){ }u164(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 186 187 188
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150
;; live  gen 	 24 [cc] 186 187 188
;; live  kill	
;; rd  in  	(16)
18, 33, 45, 57, 58, 68, 69, 79, 184, 185, 1102, 1106, 1118, 1119, 1120, 1121
;; rd  gen 	(4)
166, 1150, 1151, 1152
;; rd  kill	(26)
161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 1150, 1151, 1152

;; Pred edge  4 [14.3%] 
(code_label 142 255 143 13 127 "" [1 uses])

(note 143 142 144 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 144 143 145 13 arch/arm/kernel/traps.c:523 (set (reg/f:SI 186)
        (symbol_ref:SI ("elf_hwcap") [flags 0xc0] <var_decl 0x512d73c0 elf_hwcap>)) 167 {*arm_movsi_insn} (nil))

(insn 145 144 146 13 arch/arm/kernel/traps.c:523 (set (reg:SI 188 [ elf_hwcap ])
        (mem/c/i:SI (reg/f:SI 186) [0 elf_hwcap+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 186)
        (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("elf_hwcap") [flags 0xc0] <var_decl 0x512d73c0 elf_hwcap>) [0 elf_hwcap+0 S4 A32])
            (nil))))

(insn 146 145 147 13 arch/arm/kernel/traps.c:523 (set (reg:SI 187)
        (and:SI (reg:SI 188 [ elf_hwcap ])
            (const_int 8 [0x8]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 188 [ elf_hwcap ])
        (nil)))

(insn 147 146 148 13 arch/arm/kernel/traps.c:523 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 187)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 187)
        (nil)))

(jump_insn 148 147 149 13 arch/arm/kernel/traps.c:523 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 190)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
            (nil))))
;; End of basic block 13 -> ( 20 14)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150
;; rd  out 	(20)
18, 33, 45, 57, 58, 68, 69, 79, 166, 184, 185, 1102, 1106, 1118, 1119, 1120, 1121, 1150, 1151, 1152


;; Succ edge  20 [61.0%] 
;; Succ edge  14 [39.0%]  (fallthru)

;; Start of basic block ( 13) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u169(11){ }u170(13){ }u171(25){ }u172(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150
;; lr  def 	 147 189 190
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 150
;; live  gen 	 147 189 190
;; live  kill	
;; rd  in  	(20)
18, 33, 45, 57, 58, 68, 69, 79, 166, 184, 185, 1102, 1106, 1118, 1119, 1120, 1121, 1150, 1151, 1152
;; rd  gen 	(3)
1113, 1153, 1154
;; rd  kill	(13)
1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1153, 1154

;; Pred edge  13 [39.0%]  (fallthru)
(note 149 148 150 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 150 149 151 14 arch/arm/kernel/traps.c:525 (set (reg:SI 189 [ <variable>.uregs+64 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 150 [ regs ])
                (const_int 64 [0x40])) [0 <variable>.uregs+64 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 151 150 152 14 arch/arm/kernel/traps.c:525 (set (reg:SI 190)
        (and:SI (reg:SI 189 [ <variable>.uregs+64 ])
            (const_int -17 [0xffffffffffffffef]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 189 [ <variable>.uregs+64 ])
        (nil)))

(insn 152 151 153 14 arch/arm/kernel/traps.c:525 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 150 [ regs ])
                (const_int 64 [0x40])) [0 <variable>.uregs+64 S4 A32])
        (reg:SI 190)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 190)
        (nil)))

(insn 153 152 256 14 arch/arm/kernel/traps.c:526 (set (reg:SI 147 [ D.18677 ])
        (mem/s/j:SI (reg/v/f:SI 150 [ regs ]) [0 <variable>.uregs+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 150 [ regs ])
        (nil)))

(jump_insn 256 153 257 14 arch/arm/kernel/traps.c:526 (set (pc)
        (label_ref 224)) -1 (nil))
;; End of basic block 14 -> ( 21)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147
;; rd  out 	(23)
18, 33, 45, 57, 58, 68, 69, 79, 166, 184, 185, 1102, 1106, 1113, 1118, 1119, 1120, 1121, 1150, 1151, 1152, 1153, 1154


;; Succ edge  21 [100.0%] 

(barrier 257 256 156)

;; Start of basic block ( 4) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u178(11){ }u179(13){ }u180(25){ }u181(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 191 192 193
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150
;; live  gen 	 24 [cc] 191 192 193
;; live  kill	
;; rd  in  	(16)
18, 33, 45, 57, 58, 68, 69, 79, 184, 185, 1102, 1106, 1118, 1119, 1120, 1121
;; rd  gen 	(4)
165, 1155, 1156, 1157
;; rd  kill	(26)
161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 1155, 1156, 1157

;; Pred edge  4 [14.3%] 
(code_label 156 257 157 15 128 "" [1 uses])

(note 157 156 158 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 158 157 159 15 arch/arm/kernel/traps.c:529 (set (reg/f:SI 191)
        (symbol_ref:SI ("elf_hwcap") [flags 0xc0] <var_decl 0x512d73c0 elf_hwcap>)) 167 {*arm_movsi_insn} (nil))

(insn 159 158 160 15 arch/arm/kernel/traps.c:529 (set (reg:SI 193 [ elf_hwcap ])
        (mem/c/i:SI (reg/f:SI 191) [0 elf_hwcap+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 191)
        (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("elf_hwcap") [flags 0xc0] <var_decl 0x512d73c0 elf_hwcap>) [0 elf_hwcap+0 S4 A32])
            (nil))))

(insn 160 159 161 15 arch/arm/kernel/traps.c:529 (set (reg:SI 192)
        (and:SI (reg:SI 193 [ elf_hwcap ])
            (const_int 8 [0x8]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 193 [ elf_hwcap ])
        (nil)))

(insn 161 160 162 15 arch/arm/kernel/traps.c:529 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 192)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 192)
        (nil)))

(jump_insn 162 161 163 15 arch/arm/kernel/traps.c:529 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 190)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
            (nil))))
;; End of basic block 15 -> ( 20 16)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150
;; rd  out 	(20)
18, 33, 45, 57, 58, 68, 69, 79, 165, 184, 185, 1102, 1106, 1118, 1119, 1120, 1121, 1155, 1156, 1157


;; Succ edge  20 [61.0%] 
;; Succ edge  16 [39.0%]  (fallthru)

;; Start of basic block ( 15) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u186(11){ }u187(13){ }u188(25){ }u189(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150
;; lr  def 	 147 194 195
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 150
;; live  gen 	 147 194 195
;; live  kill	
;; rd  in  	(20)
18, 33, 45, 57, 58, 68, 69, 79, 165, 184, 185, 1102, 1106, 1118, 1119, 1120, 1121, 1155, 1156, 1157
;; rd  gen 	(3)
1112, 1158, 1159
;; rd  kill	(13)
1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1158, 1159

;; Pred edge  15 [39.0%]  (fallthru)
(note 163 162 164 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 164 163 165 16 arch/arm/kernel/traps.c:531 (set (reg:SI 194 [ <variable>.uregs+64 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 150 [ regs ])
                (const_int 64 [0x40])) [0 <variable>.uregs+64 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 165 164 166 16 arch/arm/kernel/traps.c:531 (set (reg:SI 195)
        (ior:SI (reg:SI 194 [ <variable>.uregs+64 ])
            (const_int 16 [0x10]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 194 [ <variable>.uregs+64 ])
        (nil)))

(insn 166 165 167 16 arch/arm/kernel/traps.c:531 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 150 [ regs ])
                (const_int 64 [0x40])) [0 <variable>.uregs+64 S4 A32])
        (reg:SI 195)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 195)
        (nil)))

(insn 167 166 258 16 arch/arm/kernel/traps.c:532 (set (reg:SI 147 [ D.18677 ])
        (mem/s/j:SI (reg/v/f:SI 150 [ regs ]) [0 <variable>.uregs+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 150 [ regs ])
        (nil)))

(jump_insn 258 167 259 16 arch/arm/kernel/traps.c:532 (set (pc)
        (label_ref 224)) -1 (nil))
;; End of basic block 16 -> ( 21)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147
;; rd  out 	(23)
18, 33, 45, 57, 58, 68, 69, 79, 165, 184, 185, 1102, 1106, 1112, 1118, 1119, 1120, 1121, 1155, 1156, 1157, 1158, 1159


;; Succ edge  21 [100.0%] 

(barrier 259 258 170)

;; Start of basic block ( 4) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u195(11){ }u196(13){ }u197(25){ }u198(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 150
;; lr  def 	 147 196 197 198
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 150
;; live  gen 	 147 196 197 198
;; live  kill	
;; rd  in  	(16)
18, 33, 45, 57, 58, 68, 69, 79, 184, 185, 1102, 1106, 1118, 1119, 1120, 1121
;; rd  gen 	(4)
1111, 1160, 1161, 1162
;; rd  kill	(14)
1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1160, 1161, 1162

;; Pred edge  4 [14.3%] 
(code_label 170 259 171 17 129 "" [1 uses])

(note 171 170 172 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 172 171 173 17 arch/arm/kernel/traps.c:535 (set (reg:SI 197)
        (and:SI (reg:SI 142 [ sp.88 ])
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 142 [ sp.88 ])
        (nil)))

(insn 173 172 174 17 arch/arm/kernel/traps.c:535 (set (reg:SI 196)
        (and:SI (reg:SI 197)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 197)
        (expr_list:REG_EQUAL (and:SI (reg:SI 142 [ sp.88 ])
                (const_int -8192 [0xffffffffffffe000]))
            (nil))))

(insn 174 173 175 17 arch/arm/kernel/traps.c:535 (set (reg:SI 198 [ <variable>.uregs ])
        (mem/s/j:SI (reg/v/f:SI 150 [ regs ]) [0 <variable>.uregs+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 150 [ regs ])
        (nil)))

(insn 175 174 177 17 arch/arm/kernel/traps.c:535 (set (mem/s/j:SI (plus:SI (reg:SI 196)
                (const_int 96 [0x60])) [0 <variable>.tp_value+0 S4 A64])
        (reg:SI 198 [ <variable>.uregs ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 196)
        (nil)))

(insn 177 175 178 17 arch/arm/kernel/traps.c:539 (asm_operands/v ("mcr p15, 0, %0, c13, c0, 3") ("") 0 [
            (reg:SI 198 [ <variable>.uregs ])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 6977136) -1 (expr_list:REG_DEAD (reg:SI 198 [ <variable>.uregs ])
        (nil)))

(insn 178 177 260 17 arch/arm/kernel/traps.c:550 (set (reg:SI 147 [ D.18677 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(jump_insn 260 178 261 17 arch/arm/kernel/traps.c:550 (set (pc)
        (label_ref 224)) -1 (nil))
;; End of basic block 17 -> ( 21)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147
;; rd  out 	(20)
18, 33, 45, 57, 58, 68, 69, 79, 184, 185, 1102, 1106, 1111, 1118, 1119, 1120, 1121, 1160, 1161, 1162


;; Succ edge  21 [100.0%] 

(barrier 261 260 181)

;; Start of basic block ( 4) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u206(11){ }u207(13){ }u208(25){ }u209(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 149 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146
;; lr  def 	 24 [cc] 200
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 149 150
;; live  gen 	 24 [cc] 200
;; live  kill	
;; rd  in  	(16)
18, 33, 45, 57, 58, 68, 69, 79, 184, 185, 1102, 1106, 1118, 1119, 1120, 1121
;; rd  gen 	(2)
164, 1163
;; rd  kill	(24)
161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 1163

;; Pred edge  4 [14.3%] 
(code_label 181 261 182 18 123 "" [1 uses])

(note 182 181 183 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 183 182 184 18 arch/arm/kernel/traps.c:609 (set (reg:SI 200)
        (const_int 2047 [0x7ff])) 167 {*arm_movsi_insn} (nil))

(insn 184 183 185 18 arch/arm/kernel/traps.c:609 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 146 [ D.18679 ])
            (reg:SI 200))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 200)
        (expr_list:REG_DEAD (reg:SI 146 [ D.18679 ])
            (expr_list:REG_EQUAL (compare:CC (reg:SI 146 [ D.18679 ])
                    (const_int 2047 [0x7ff]))
                (nil)))))

(jump_insn 185 184 186 18 arch/arm/kernel/traps.c:609 (set (pc)
        (if_then_else (gt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 190)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
            (nil))))
;; End of basic block 18 -> ( 19 20)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150
;; rd  out 	(18)
18, 33, 45, 57, 58, 68, 69, 79, 164, 184, 185, 1102, 1106, 1118, 1119, 1120, 1121, 1163


;; Succ edge  19 [39.0%]  (fallthru)
;; Succ edge  20 [61.0%] 

;; Start of basic block ( 18) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u214(11){ }u215(13){ }u216(25){ }u217(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 147
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 147
;; live  kill	
;; rd  in  	(18)
18, 33, 45, 57, 58, 68, 69, 79, 164, 184, 185, 1102, 1106, 1118, 1119, 1120, 1121, 1163
;; rd  gen 	(1)
1110
;; rd  kill	(11)
1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117

;; Pred edge  18 [39.0%]  (fallthru)
(note 186 185 187 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 187 186 262 19 arch/arm/kernel/traps.c:610 (set (reg:SI 147 [ D.18677 ])
        (const_int -38 [0xffffffffffffffda])) 167 {*arm_movsi_insn} (nil))

(jump_insn 262 187 263 19 (set (pc)
        (label_ref 224)) -1 (nil))
;; End of basic block 19 -> ( 21)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147
;; rd  out 	(19)
18, 33, 45, 57, 58, 68, 69, 79, 164, 184, 185, 1102, 1106, 1110, 1118, 1119, 1120, 1121, 1163


;; Succ edge  21 [100.0%] 

(barrier 263 262 190)

;; Start of basic block ( 13 15 18) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u218(11){ }u219(13){ }u220(25){ }u221(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 143 147 201 202 203 204 205 206 207 209
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc] 143 147 201 202 203 204 205 206 207 209
;; live  kill	 14 [lr]
;; rd  in  	(26)
18, 33, 45, 57, 58, 68, 69, 79, 164, 165, 166, 184, 185, 1102, 1106, 1118, 1119, 1120, 1121, 1150, 1151, 1152, 1155, 1156, 1157, 1163
;; rd  gen 	(10)
1103, 1107, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171
;; rd  kill	(30)
70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 1103, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171

;; Pred edge  13 [61.0%] 
;; Pred edge  15 [61.0%] 
;; Pred edge  18 [61.0%] 
(code_label 190 263 191 20 135 "" [3 uses])

(note 191 190 192 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn 192 191 193 20 arch/arm/kernel/traps.c:628 (set (reg:SI 201)
        (const_int 4 [0x4])) 167 {*arm_movsi_insn} (nil))

(insn 193 192 194 20 arch/arm/kernel/traps.c:628 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -128 [0xffffffffffffff80])) [0 info.si_signo+0 S4 A64])
        (reg:SI 201)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 201)
        (expr_list:REG_EQUAL (const_int 4 [0x4])
            (nil))))

(insn 194 193 195 20 arch/arm/kernel/traps.c:629 (set (reg:SI 202)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 195 194 196 20 arch/arm/kernel/traps.c:629 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -124 [0xffffffffffffff84])) [0 info.si_errno+0 S4 A32])
        (reg:SI 202)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 196 195 197 20 arch/arm/kernel/traps.c:630 (set (reg:SI 203)
        (const_int 196612 [0x30004])) 167 {*arm_movsi_insn} (nil))

(insn 197 196 198 20 arch/arm/kernel/traps.c:630 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -120 [0xffffffffffffff88])) [0 info.si_code+0 S4 A64])
        (reg:SI 203)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 203)
        (expr_list:REG_EQUAL (const_int 196612 [0x30004])
            (nil))))

(insn 198 197 199 20 arch/arm/kernel/traps.c:632 (set (reg:SI 205 [ <variable>.uregs+64 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 150 [ regs ])
                (const_int 64 [0x40])) [0 <variable>.uregs+64 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 199 198 242 20 arch/arm/kernel/traps.c:632 (set (reg:SI 204)
        (and:SI (reg:SI 205 [ <variable>.uregs+64 ])
            (const_int 32 [0x20]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 205 [ <variable>.uregs+64 ])
        (nil)))

(insn 242 199 243 20 arch/arm/kernel/traps.c:631 discrim 2 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 204)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 204)
        (nil)))

(insn 243 242 211 20 arch/arm/kernel/traps.c:631 discrim 2 (set (reg:SI 143 [ iftmp.307 ])
        (if_then_else:SI (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (const_int -2 [0xfffffffffffffffe])
            (const_int -4 [0xfffffffffffffffc]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 211 243 212 20 arch/arm/kernel/traps.c:631 discrim 3 (set (reg:SI 206 [ <variable>.uregs+60 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 150 [ regs ])
                (const_int 60 [0x3c])) [0 <variable>.uregs+60 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 212 211 213 20 arch/arm/kernel/traps.c:631 discrim 3 (set (reg:SI 207)
        (plus:SI (reg:SI 143 [ iftmp.307 ])
            (reg:SI 206 [ <variable>.uregs+60 ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 206 [ <variable>.uregs+60 ])
        (expr_list:REG_DEAD (reg:SI 143 [ iftmp.307 ])
            (nil))))

(insn 213 212 215 20 arch/arm/kernel/traps.c:631 discrim 3 (set (mem/s/f/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -116 [0xffffffffffffff8c])) [0 info._sifields._sigfault._addr+0 S4 A32])
        (reg:SI 207)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 207)
        (nil)))

(insn 215 213 217 20 arch/arm/kernel/traps.c:634 (set (reg/f:SI 209)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -128 [0xffffffffffffff80]))) 4 {*arm_addsi3} (nil))

(insn 217 215 218 20 arch/arm/kernel/traps.c:634 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg:SI 202)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 218 217 219 20 arch/arm/kernel/traps.c:634 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC33") [flags 0x82] <string_cst 0x113100c0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC33") [flags 0x82] <string_cst 0x113100c0>)
        (nil)))

(insn 219 218 220 20 arch/arm/kernel/traps.c:634 (set (reg:SI 1 r1)
        (reg/v/f:SI 150 [ regs ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 150 [ regs ])
        (nil)))

(insn 220 219 221 20 arch/arm/kernel/traps.c:634 (set (reg:SI 2 r2)
        (reg/f:SI 209)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 209)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -128 [0xffffffffffffff80]))
            (nil))))

(insn 221 220 222 20 arch/arm/kernel/traps.c:634 (set (reg:SI 3 r3)
        (reg/v:SI 149 [ no ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 149 [ no ])
        (nil)))

(call_insn 222 221 223 20 arch/arm/kernel/traps.c:634 (parallel [
            (call (mem:SI (symbol_ref:SI ("arm_notify_die") [flags 0x3] <function_decl 0x512e8d00 arm_notify_die>) [0 S4 A32])
                (const_int 8 [0x8]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_DEAD (reg:SI 0 r0)
                    (expr_list:REG_EH_REGION (const_int 0 [0x0])
                        (nil))))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 223 222 224 20 arch/arm/kernel/traps.c:635 (set (reg:SI 147 [ D.18677 ])
        (reg:SI 202)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 202)
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))
;; End of basic block 20 -> ( 21)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; rd  out 	(35)
18, 33, 45, 57, 58, 68, 69, 164, 165, 166, 184, 185, 1102, 1103, 1106, 1107, 1118, 1119, 1120, 1121, 1150, 1151, 1152, 1155, 1156, 1157, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171


;; Succ edge  21 [100.0%]  (fallthru)

;; Start of basic block ( 11 3 5 6 12 14 20 16 17 8 19) -> 21
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u250(11){ }u251(13){ }u252(25){ }u253(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(96)
10, 17, 18, 33, 45, 57, 58, 68, 69, 79, 164, 165, 166, 172, 173, 176, 183, 184, 185, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171
;; rd  gen 	(1)
2
;; rd  kill	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18

;; Pred edge  11 [100.0%] 
;; Pred edge  3 [100.0%] 
;; Pred edge  5 [100.0%] 
;; Pred edge  6 [100.0%] 
;; Pred edge  12 [100.0%] 
;; Pred edge  14 [100.0%] 
;; Pred edge  20 [100.0%]  (fallthru)
;; Pred edge  16 [100.0%] 
;; Pred edge  17 [100.0%] 
;; Pred edge  8 [100.0%] 
;; Pred edge  19 [100.0%] 
(code_label 224 223 225 21 122 "" [10 uses])

(note 225 224 230 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn 230 225 236 21 arch/arm/kernel/traps.c:636 (set (reg/i:SI 0 r0)
        (reg:SI 147 [ D.18677 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 147 [ D.18677 ])
        (nil)))

(insn 236 230 0 21 arch/arm/kernel/traps.c:636 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 21 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(94)
2, 33, 45, 57, 58, 68, 69, 79, 164, 165, 166, 172, 173, 176, 183, 184, 185, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function do_undefinstr (do_undefinstr)[0:1068]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 18 n_edges 25 count 37 (  2.1)
df_worklist_dataflow_doublequeue:n_basic_blocks 18 n_edges 25 count 37 (  2.1)
df_worklist_dataflow_doublequeue:n_basic_blocks 18 n_edges 25 count 39 (  2.2)


do_undefinstr

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={15d,10u} r1={8d,3u} r2={9d,4u} r3={8d,1u} r11={1d,17u} r12={5d} r13={1d,22u} r14={8d,1u} r15={4d} r16={4d} r17={4d} r18={4d} r19={4d} r20={4d} r21={4d} r22={4d} r23={4d} r24={16d,9u} r25={1d,22u,1d} r26={1d,16u} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r81={4d} r82={4d} r83={4d} r84={4d} r85={4d} r86={4d} r87={4d} r88={4d} r89={4d} r90={4d} r91={4d} r92={4d} r93={4d} r94={4d} r95={4d} r96={4d} r97={4d} r98={4d} r99={4d} r100={4d} r101={4d} r102={4d} r103={4d} r104={4d} r105={4d} r106={4d} r107={4d} r108={4d} r109={4d} r110={4d} r111={4d} r112={4d} r113={4d} r114={4d} r115={4d} r116={4d} r117={4d} r118={4d} r119={4d} r120={4d} r121={4d} r122={4d} r123={4d} r124={4d} r125={4d} r126={4d} r127={4d} r133={1d,1u} r135={2d,7u,1d} r136={1d,1u} r137={2d,2u} r139={1d,1u} r141={4d,4u,1d} r142={1d,1u} r143={1d,1u} r144={1d,1u} r146={1d,6u} r147={1d,6u} r148={1d,2u} r149={1d,2u} r150={1d,1u} r151={1d,1u} r153={1d,1u} r154={1d,1u} r157={1d,2u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r168={1d,1u} r169={1d,2u} r170={1d,1u} r172={1d,1u} r173={1d,1u} r174={1d,1u} 
;;    total ref usage 712{549d,160u,3e} in 81{77 regular + 4 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512
0[0,15] 1[15,8] 2[23,9] 3[32,8] 11[40,1] 12[41,5] 13[46,1] 14[47,8] 15[55,4] 16[59,4] 17[63,4] 18[67,4] 19[71,4] 20[75,4] 21[79,4] 22[83,4] 23[87,4] 24[91,16] 25[107,1] 26[108,1] 27[109,4] 28[113,4] 29[117,4] 30[121,4] 31[125,4] 32[129,4] 33[133,4] 34[137,4] 35[141,4] 36[145,4] 37[149,4] 38[153,4] 39[157,4] 40[161,4] 41[165,4] 42[169,4] 43[173,4] 44[177,4] 45[181,4] 46[185,4] 47[189,4] 48[193,4] 49[197,4] 50[201,4] 51[205,4] 52[209,4] 53[213,4] 54[217,4] 55[221,4] 56[225,4] 57[229,4] 58[233,4] 59[237,4] 60[241,4] 61[245,4] 62[249,4] 63[253,4] 64[257,4] 65[261,4] 66[265,4] 67[269,4] 68[273,4] 69[277,4] 70[281,4] 71[285,4] 72[289,4] 73[293,4] 74[297,4] 75[301,4] 76[305,4] 77[309,4] 78[313,4] 79[317,4] 80[321,4] 81[325,4] 82[329,4] 83[333,4] 84[337,4] 85[341,4] 86[345,4] 87[349,4] 88[353,4] 89[357,4] 90[361,4] 91[365,4] 92[369,4] 93[373,4] 94[377,4] 95[381,4] 96[385,4] 97[389,4] 98[393,4] 99[397,4] 100[401,4] 101[405,4] 102[409,4] 103[413,4] 104[417,4] 105[421,4] 106[425,4] 107[429,4] 108[433,4] 109[437,4] 110[441,4] 111[445,4] 112[449,4] 113[453,4] 114[457,4] 115[461,4] 116[465,4] 117[469,4] 118[473,4] 119[477,4] 120[481,4] 121[485,4] 122[489,4] 123[493,4] 124[497,4] 125[501,4] 126[505,4] 127[509,4] 133[513,1] 135[514,2] 136[516,1] 137[517,2] 139[519,1] 141[520,4] 142[524,1] 143[525,1] 144[526,1] 146[527,1] 147[528,1] 148[529,1] 149[530,1] 150[531,1] 151[532,1] 153[533,1] 154[534,1] 157[535,1] 158[536,1] 159[537,1] 160[538,1] 161[539,1] 162[540,1] 163[541,1] 164[542,1] 168[543,1] 169[544,1] 170[545,1] 172[546,1] 173[547,1] 174[548,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d14(0){ }d22(1){ }d31(2){ }d39(3){ }d40(11){ }d45(12){ }d46(13){ }d54(14){ }d107(25){ }d108(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
14, 22, 31, 39, 40, 45, 46, 54, 107, 108
;; rd  kill	(57)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 107, 108
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(10)
14, 22, 31, 39, 40, 45, 46, 54, 107, 108

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d40(bb 0 insn -1) }u1(13){ d46(bb 0 insn -1) }u2(25){ d107(bb 0 insn -1) }u3(26){ d108(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 142 146 147 148 149 150 151
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 142 146 147 148 149 150 151
;; live  kill	
;; rd  in  	(10)
14, 22, 31, 39, 40, 45, 46, 54, 107, 108
;; rd  gen 	(8)
106, 524, 527, 528, 529, 530, 531, 532
;; rd  kill	(23)
91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 524, 527, 528, 529, 530, 531, 532
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148
;; rd  out 	(18)
14, 22, 31, 39, 40, 45, 46, 54, 106, 107, 108, 524, 527, 528, 529, 530, 531, 532
;;  UD chains for artificial uses
;;   reg 11 { d40(bb 0 insn -1) }
;;   reg 13 { d46(bb 0 insn -1) }
;;   reg 25 { d107(bb 0 insn -1) }
;;   reg 26 { d108(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d14(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 6
;;      reg 147 { d528(bb 2 insn 2) }
;;   UD chains for insn luid 2 uid 7
;;      reg 149 { d530(bb 2 insn 6) }
;;   UD chains for insn luid 3 uid 138
;;      reg 148 { d529(bb 2 insn 7) }
;;   UD chains for insn luid 4 uid 139
;;      reg 24 { d93(bb 2 insn 138) }
;;   UD chains for insn luid 5 uid 19
;;      reg 147 { d528(bb 2 insn 2) }
;;   UD chains for insn luid 6 uid 20
;;      reg 142 { d524(bb 2 insn 139) }
;;      reg 150 { d531(bb 2 insn 19) }
;;   UD chains for insn luid 7 uid 21
;;      reg 146 { d527(bb 2 insn 20) }
;;      reg 147 { d528(bb 2 insn 2) }
;;   UD chains for insn luid 8 uid 24
;;      reg 149 { d530(bb 2 insn 6) }
;;   UD chains for insn luid 9 uid 25
;;      reg 151 { d532(bb 2 insn 24) }
;;   UD chains for insn luid 10 uid 26
;;      reg 24 { d106(bb 2 insn 25) }

( 2 )->[3]->( 8 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u17(11){ d40(bb 0 insn -1) }u18(13){ d46(bb 0 insn -1) }u19(25){ d107(bb 0 insn -1) }u20(26){ d108(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146
;; lr  def 	 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147
;; live  gen 	 141
;; live  kill	
;; rd  in  	(18)
14, 22, 31, 39, 40, 45, 46, 54, 106, 107, 108, 524, 527, 528, 529, 530, 531, 532
;; rd  gen 	(1)
523
;; rd  kill	(4)
520, 521, 522, 523
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 146 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 146 147
;; rd  out 	(19)
14, 22, 31, 39, 40, 45, 46, 54, 106, 107, 108, 523, 524, 527, 528, 529, 530, 531, 532
;;  UD chains for artificial uses
;;   reg 11 { d40(bb 0 insn -1) }
;;   reg 13 { d46(bb 0 insn -1) }
;;   reg 25 { d107(bb 0 insn -1) }
;;   reg 26 { d108(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 28
;;      reg 146 { d527(bb 2 insn 20) }

( 2 )->[4]->( 5 7 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u22(11){ d40(bb 0 insn -1) }u23(13){ d46(bb 0 insn -1) }u24(25){ d107(bb 0 insn -1) }u25(26){ d108(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(18)
14, 22, 31, 39, 40, 45, 46, 54, 106, 107, 108, 524, 527, 528, 529, 530, 531, 532
;; rd  gen 	(1)
91
;; rd  kill	(16)
91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147
;; rd  out 	(18)
14, 22, 31, 39, 40, 45, 46, 54, 91, 107, 108, 524, 527, 528, 529, 530, 531, 532
;;  UD chains for artificial uses
;;   reg 11 { d40(bb 0 insn -1) }
;;   reg 13 { d46(bb 0 insn -1) }
;;   reg 25 { d107(bb 0 insn -1) }
;;   reg 26 { d108(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 34
;;      reg 148 { d529(bb 2 insn 7) }
;;   UD chains for insn luid 1 uid 35
;;      reg 24 { d91(bb 4 insn 34) }

( 4 )->[5]->( 6 8 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u28(11){ d40(bb 0 insn -1) }u29(13){ d46(bb 0 insn -1) }u30(25){ d107(bb 0 insn -1) }u31(26){ d108(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146
;; lr  def 	 0 [r0] 2 [r2] 3 [r3] 14 [lr] 24 [cc] 141 144 153
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147
;; live  gen 	 0 [r0] 2 [r2] 24 [cc] 141 144 153
;; live  kill	 3 [r3] 14 [lr] 24 [cc]
;; rd  in  	(18)
14, 22, 31, 39, 40, 45, 46, 54, 91, 107, 108, 524, 527, 528, 529, 530, 531, 532
;; rd  gen 	(6)
13, 30, 104, 522, 526, 533
;; rd  kill	(62)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 47, 48, 49, 50, 51, 52, 53, 54, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 520, 521, 522, 523, 526, 533
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 146 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 146 147
;; rd  out 	(19)
13, 22, 30, 40, 45, 46, 104, 107, 108, 522, 524, 526, 527, 528, 529, 530, 531, 532, 533
;;  UD chains for artificial uses
;;   reg 11 { d40(bb 0 insn -1) }
;;   reg 13 { d46(bb 0 insn -1) }
;;   reg 25 { d107(bb 0 insn -1) }
;;   reg 26 { d108(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 38
;;      reg 146 { d527(bb 2 insn 20) }
;;   UD chains for insn luid 1 uid 39
;;      reg 0 { d4(bb 5 insn 38) }
;;   UD chains for insn luid 2 uid 40
;;      reg 2 { d30(bb 5 insn 39) }
;;   UD chains for insn luid 3 uid 41
;;      reg 144 { d526(bb 5 insn 40) }
;;   UD chains for insn luid 5 uid 43
;;      reg 141 { d522(bb 5 insn 41) }
;;      reg 153 { d533(bb 5 insn 42) }
;;   eq_note reg 141 { }
;;   UD chains for insn luid 6 uid 44
;;      reg 24 { d104(bb 5 insn 43) }

( 5 )->[6]->( 8 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u40(11){ d40(bb 0 insn -1) }u41(13){ d46(bb 0 insn -1) }u42(25){ d107(bb 0 insn -1) }u43(26){ d108(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 146 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 146
;; lr  def 	 0 [r0] 2 [r2] 3 [r3] 14 [lr] 24 [cc] 133 141 143 154
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 146 147
;; live  gen 	 0 [r0] 2 [r2] 133 141 143 154
;; live  kill	 3 [r3] 14 [lr] 24 [cc]
;; rd  in  	(19)
13, 22, 30, 40, 45, 46, 104, 107, 108, 522, 524, 526, 527, 528, 529, 530, 531, 532, 533
;; rd  gen 	(6)
12, 29, 513, 521, 525, 534
;; rd  kill	(63)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 47, 48, 49, 50, 51, 52, 53, 54, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 513, 520, 521, 522, 523, 525, 534
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 146 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 146 147
;; rd  out 	(21)
12, 22, 29, 40, 45, 46, 107, 108, 513, 521, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534
;;  UD chains for artificial uses
;;   reg 11 { d40(bb 0 insn -1) }
;;   reg 13 { d46(bb 0 insn -1) }
;;   reg 25 { d107(bb 0 insn -1) }
;;   reg 26 { d108(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 46
;;      reg 146 { d527(bb 2 insn 20) }
;;   UD chains for insn luid 1 uid 47
;;      reg 0 { d3(bb 6 insn 46) }
;;   UD chains for insn luid 2 uid 48
;;      reg 2 { d29(bb 6 insn 47) }
;;   UD chains for insn luid 3 uid 49
;;      reg 141 { d522(bb 5 insn 41) }
;;   UD chains for insn luid 4 uid 50
;;      reg 143 { d525(bb 6 insn 48) }
;;   UD chains for insn luid 5 uid 51
;;      reg 133 { d513(bb 6 insn 49) }
;;      reg 154 { d534(bb 6 insn 50) }

( 4 )->[7]->( 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u51(11){ d40(bb 0 insn -1) }u52(13){ d46(bb 0 insn -1) }u53(25){ d107(bb 0 insn -1) }u54(26){ d108(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146
;; lr  def 	 0 [r0] 2 [r2] 14 [lr] 24 [cc] 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147
;; live  gen 	 0 [r0] 2 [r2] 141
;; live  kill	 14 [lr] 24 [cc]
;; rd  in  	(18)
14, 22, 31, 39, 40, 45, 46, 54, 91, 107, 108, 524, 527, 528, 529, 530, 531, 532
;; rd  gen 	(3)
10, 28, 520
;; rd  kill	(52)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 23, 24, 25, 26, 27, 28, 29, 30, 31, 47, 48, 49, 50, 51, 52, 53, 54, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 520, 521, 522, 523
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 146 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 146 147
;; rd  out 	(17)
10, 22, 28, 39, 40, 45, 46, 107, 108, 520, 524, 527, 528, 529, 530, 531, 532
;;  UD chains for artificial uses
;;   reg 11 { d40(bb 0 insn -1) }
;;   reg 13 { d46(bb 0 insn -1) }
;;   reg 25 { d107(bb 0 insn -1) }
;;   reg 26 { d108(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 56
;;      reg 146 { d527(bb 2 insn 20) }
;;   UD chains for insn luid 1 uid 57
;;      reg 0 { d11(bb 7 insn 56) }
;;   UD chains for insn luid 2 uid 58
;;      reg 2 { d28(bb 7 insn 57) }

( 5 3 7 6 )->[8]->( 13 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u58(11){ d40(bb 0 insn -1) }u59(13){ d46(bb 0 insn -1) }u60(25){ d107(bb 0 insn -1) }u61(26){ d108(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 146 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 135 136 137 157 174
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 146 147
;; live  gen 	 0 [r0] 135 136 137 157 174
;; live  kill	 14 [lr]
;; rd  in  	(34)
10, 12, 13, 14, 22, 28, 29, 30, 31, 39, 40, 45, 46, 54, 104, 106, 107, 108, 513, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534
;; rd  gen 	(6)
9, 515, 516, 518, 535, 548
;; rd  kill	(30)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 47, 48, 49, 50, 51, 52, 53, 54, 514, 515, 516, 517, 518, 535, 548
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 141 146 147 174
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 141 146 147 174
;; rd  out 	(35)
9, 22, 28, 29, 30, 31, 39, 40, 45, 46, 104, 106, 107, 108, 513, 515, 516, 518, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 548
;;  UD chains for artificial uses
;;   reg 11 { d40(bb 0 insn -1) }
;;   reg 13 { d46(bb 0 insn -1) }
;;   reg 25 { d107(bb 0 insn -1) }
;;   reg 26 { d108(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 64
;;      reg 13 { d46(bb 0 insn -1) }
;;      reg 0 { d2(bb 8 insn 63) }
;;   UD chains for insn luid 2 uid 65
;;      reg 0 { d9(bb 8 insn 64) }
;;   UD chains for insn luid 4 uid 67
;;      reg 157 { d535(bb 8 insn 66) }
;;   UD chains for insn luid 6 uid 93
;;      reg 157 { d535(bb 8 insn 66) }

( 13 )->[9]->( 10 12 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u67(11){ d40(bb 0 insn -1) }u68(13){ d46(bb 0 insn -1) }u69(25){ d107(bb 0 insn -1) }u70(26){ d108(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 141 146 147 174
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 141
;; lr  def 	 24 [cc] 158 159 160
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 141 146 147 174
;; live  gen 	 24 [cc] 158 159 160
;; live  kill	
;; rd  in  	(43)
9, 22, 28, 29, 30, 31, 39, 40, 45, 46, 92, 107, 108, 513, 514, 515, 516, 517, 518, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 548
;; rd  gen 	(4)
100, 536, 537, 538
;; rd  kill	(19)
91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 536, 537, 538
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 141 146 147 174
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 141 146 147 174
;; rd  out 	(43)
9, 22, 28, 29, 30, 31, 39, 40, 45, 46, 100, 107, 108, 513, 514, 515, 516, 517, 518, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 548
;;  UD chains for artificial uses
;;   reg 11 { d40(bb 0 insn -1) }
;;   reg 13 { d46(bb 0 insn -1) }
;;   reg 25 { d107(bb 0 insn -1) }
;;   reg 26 { d108(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 72
;;      reg 135 { d515(bb 8 insn 67) d514(bb 12 insn 88) }
;;   UD chains for insn luid 1 uid 73
;;      reg 141 { d523(bb 3 insn 28) d522(bb 5 insn 41) d521(bb 6 insn 51) d520(bb 7 insn 58) }
;;      reg 159 { d537(bb 9 insn 72) }
;;   UD chains for insn luid 2 uid 74
;;      reg 135 { d515(bb 8 insn 67) d514(bb 12 insn 88) }
;;   UD chains for insn luid 3 uid 75
;;      reg 158 { d536(bb 9 insn 73) }
;;      reg 160 { d538(bb 9 insn 74) }
;;   UD chains for insn luid 4 uid 76
;;      reg 24 { d100(bb 9 insn 75) }

( 9 )->[10]->( 11 12 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u78(11){ d40(bb 0 insn -1) }u79(13){ d46(bb 0 insn -1) }u80(25){ d107(bb 0 insn -1) }u81(26){ d108(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 141 146 147 174
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 147
;; lr  def 	 24 [cc] 161 162 163 164
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 141 146 147 174
;; live  gen 	 24 [cc] 161 162 163 164
;; live  kill	
;; rd  in  	(43)
9, 22, 28, 29, 30, 31, 39, 40, 45, 46, 100, 107, 108, 513, 514, 515, 516, 517, 518, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 548
;; rd  gen 	(5)
99, 539, 540, 541, 542
;; rd  kill	(20)
91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 539, 540, 541, 542
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 141 146 147 174
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 141 146 147 174
;; rd  out 	(43)
9, 22, 28, 29, 30, 31, 39, 40, 45, 46, 99, 107, 108, 513, 514, 515, 516, 517, 518, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 548
;;  UD chains for artificial uses
;;   reg 11 { d40(bb 0 insn -1) }
;;   reg 13 { d46(bb 0 insn -1) }
;;   reg 25 { d107(bb 0 insn -1) }
;;   reg 26 { d108(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 78
;;      reg 135 { d515(bb 8 insn 67) d514(bb 12 insn 88) }
;;   UD chains for insn luid 1 uid 79
;;      reg 147 { d528(bb 2 insn 2) }
;;   UD chains for insn luid 2 uid 80
;;      reg 162 { d540(bb 10 insn 78) }
;;      reg 163 { d541(bb 10 insn 79) }
;;   UD chains for insn luid 3 uid 81
;;      reg 135 { d515(bb 8 insn 67) d514(bb 12 insn 88) }
;;   UD chains for insn luid 4 uid 82
;;      reg 161 { d539(bb 10 insn 80) }
;;      reg 164 { d542(bb 10 insn 81) }
;;   UD chains for insn luid 5 uid 83
;;      reg 24 { d99(bb 10 insn 82) }

( 10 )->[11]->( 12 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u90(11){ d40(bb 0 insn -1) }u91(13){ d46(bb 0 insn -1) }u92(25){ d107(bb 0 insn -1) }u93(26){ d108(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 141 146 147 174
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 137
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 141 146 147 174
;; live  gen 	 137
;; live  kill	
;; rd  in  	(43)
9, 22, 28, 29, 30, 31, 39, 40, 45, 46, 99, 107, 108, 513, 514, 515, 516, 517, 518, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 548
;; rd  gen 	(1)
517
;; rd  kill	(2)
517, 518
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 141 146 147 174
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 141 146 147 174
;; rd  out 	(42)
9, 22, 28, 29, 30, 31, 39, 40, 45, 46, 99, 107, 108, 513, 514, 515, 516, 517, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 548
;;  UD chains for artificial uses
;;   reg 11 { d40(bb 0 insn -1) }
;;   reg 13 { d46(bb 0 insn -1) }
;;   reg 25 { d107(bb 0 insn -1) }
;;   reg 26 { d108(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 85
;;      reg 135 { d515(bb 8 insn 67) d514(bb 12 insn 88) }

( 9 10 11 )->[12]->( 13 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u95(11){ d40(bb 0 insn -1) }u96(13){ d46(bb 0 insn -1) }u97(25){ d107(bb 0 insn -1) }u98(26){ d108(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 141 146 147 174
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 135
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 141 146 147 174
;; live  gen 	 135
;; live  kill	
;; rd  in  	(44)
9, 22, 28, 29, 30, 31, 39, 40, 45, 46, 99, 100, 107, 108, 513, 514, 515, 516, 517, 518, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 548
;; rd  gen 	(1)
514
;; rd  kill	(2)
514, 515
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 141 146 147 174
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 141 146 147 174
;; rd  out 	(43)
9, 22, 28, 29, 30, 31, 39, 40, 45, 46, 99, 100, 107, 108, 513, 514, 516, 517, 518, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 548
;;  UD chains for artificial uses
;;   reg 11 { d40(bb 0 insn -1) }
;;   reg 13 { d46(bb 0 insn -1) }
;;   reg 25 { d107(bb 0 insn -1) }
;;   reg 26 { d108(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 88
;;      reg 135 { d515(bb 8 insn 67) d514(bb 12 insn 88) }

( 12 8 )->[13]->( 9 14 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u100(11){ d40(bb 0 insn -1) }u101(13){ d46(bb 0 insn -1) }u102(25){ d107(bb 0 insn -1) }u103(26){ d108(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 141 146 147 174
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 174
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 141 146 147 174
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(46)
9, 22, 28, 29, 30, 31, 39, 40, 45, 46, 99, 100, 104, 106, 107, 108, 513, 514, 515, 516, 517, 518, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 548
;; rd  gen 	(1)
92
;; rd  kill	(16)
91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 141 146 147 174
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 141 146 147 174
;; rd  out 	(43)
9, 22, 28, 29, 30, 31, 39, 40, 45, 46, 92, 107, 108, 513, 514, 515, 516, 517, 518, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 548
;;  UD chains for artificial uses
;;   reg 11 { d40(bb 0 insn -1) }
;;   reg 13 { d46(bb 0 insn -1) }
;;   reg 25 { d107(bb 0 insn -1) }
;;   reg 26 { d108(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 94
;;      reg 135 { d515(bb 8 insn 67) d514(bb 12 insn 88) }
;;      reg 174 { d548(bb 8 insn 93) }
;;   eq_note reg 135 { }
;;   UD chains for insn luid 1 uid 95
;;      reg 24 { d92(bb 13 insn 94) }

( 13 )->[14]->( 15 16 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u108(11){ d40(bb 0 insn -1) }u109(13){ d46(bb 0 insn -1) }u110(25){ d107(bb 0 insn -1) }u111(26){ d108(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 146 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 146 147
;; live  gen 	 0 [r0] 1 [r1] 24 [cc]
;; live  kill	 14 [lr]
;; rd  in  	(43)
9, 22, 28, 29, 30, 31, 39, 40, 45, 46, 92, 107, 108, 513, 514, 515, 516, 517, 518, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 548
;; rd  gen 	(1)
97
;; rd  kill	(24)
47, 48, 49, 50, 51, 52, 53, 54, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 146 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 146 147
;; rd  out 	(43)
9, 22, 28, 29, 30, 31, 39, 40, 45, 46, 97, 107, 108, 513, 514, 515, 516, 517, 518, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 548
;;  UD chains for artificial uses
;;   reg 11 { d40(bb 0 insn -1) }
;;   reg 13 { d46(bb 0 insn -1) }
;;   reg 25 { d107(bb 0 insn -1) }
;;   reg 26 { d108(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 100
;;      reg 136 { d516(bb 8 insn 65) }
;;   UD chains for insn luid 2 uid 101
;;      reg 13 { d46(bb 0 insn -1) }
;;      reg 0 { d1(bb 14 insn 99) }
;;      reg 1 { d20(bb 14 insn 100) }
;;   UD chains for insn luid 3 uid 102
;;      reg 137 { d518(bb 8 insn 68) d517(bb 11 insn 85) }
;;   UD chains for insn luid 4 uid 103
;;      reg 24 { d97(bb 14 insn 102) }

( 14 )->[15]->( 17 16 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u118(11){ d40(bb 0 insn -1) }u119(13){ d46(bb 0 insn -1) }u120(25){ d107(bb 0 insn -1) }u121(26){ d108(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 146 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 147
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 139
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 146 147
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 139
;; live  kill	 14 [lr]
;; rd  in  	(43)
9, 22, 28, 29, 30, 31, 39, 40, 45, 46, 97, 107, 108, 513, 514, 515, 516, 517, 518, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 548
;; rd  gen 	(3)
6, 95, 519
;; rd  kill	(40)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 47, 48, 49, 50, 51, 52, 53, 54, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 519
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147
;; rd  out 	(44)
6, 22, 28, 29, 30, 31, 39, 40, 45, 46, 95, 107, 108, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 548
;;  UD chains for artificial uses
;;   reg 11 { d40(bb 0 insn -1) }
;;   reg 13 { d46(bb 0 insn -1) }
;;   reg 25 { d107(bb 0 insn -1) }
;;   reg 26 { d108(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 105
;;      reg 147 { d528(bb 2 insn 2) }
;;   UD chains for insn luid 1 uid 106
;;      reg 141 { d523(bb 3 insn 28) d522(bb 5 insn 41) d521(bb 6 insn 51) d520(bb 7 insn 58) }
;;   UD chains for insn luid 2 uid 107
;;      reg 13 { d46(bb 0 insn -1) }
;;      reg 0 { d7(bb 15 insn 105) }
;;      reg 1 { d18(bb 15 insn 106) }
;;      reg 137 { d518(bb 8 insn 68) d517(bb 11 insn 85) }
;;   UD chains for insn luid 3 uid 108
;;      reg 0 { d6(bb 15 insn 107) }
;;   UD chains for insn luid 4 uid 109
;;      reg 139 { d519(bb 15 insn 108) }
;;   UD chains for insn luid 5 uid 110
;;      reg 24 { d95(bb 15 insn 109) }

( 15 14 )->[16]->( 17 )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u131(11){ d40(bb 0 insn -1) }u132(13){ d46(bb 0 insn -1) }u133(25){ d107(bb 0 insn -1) }u134(26){ d108(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 168 169 170 172 173
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 168 169 170 172 173
;; live  kill	 14 [lr]
;; rd  in  	(46)
6, 9, 22, 28, 29, 30, 31, 39, 40, 45, 46, 95, 97, 107, 108, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 548
;; rd  gen 	(5)
543, 544, 545, 546, 547
;; rd  kill	(13)
47, 48, 49, 50, 51, 52, 53, 54, 543, 544, 545, 546, 547
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(51)
6, 9, 22, 28, 29, 30, 31, 39, 40, 45, 46, 95, 97, 107, 108, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548
;;  UD chains for artificial uses
;;   reg 11 { d40(bb 0 insn -1) }
;;   reg 13 { d46(bb 0 insn -1) }
;;   reg 25 { d107(bb 0 insn -1) }
;;   reg 26 { d108(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 114
;;      reg 25 { d107(bb 0 insn -1) }
;;      reg 168 { d543(bb 16 insn 113) }
;;   UD chains for insn luid 3 uid 116
;;      reg 25 { d107(bb 0 insn -1) }
;;      reg 169 { d544(bb 16 insn 115) }
;;   UD chains for insn luid 5 uid 118
;;      reg 25 { d107(bb 0 insn -1) }
;;      reg 170 { d545(bb 16 insn 117) }
;;   UD chains for insn luid 6 uid 119
;;      reg 25 { d107(bb 0 insn -1) }
;;      reg 146 { d527(bb 2 insn 20) }
;;   UD chains for insn luid 7 uid 121
;;      reg 25 { d107(bb 0 insn -1) }
;;   UD chains for insn luid 9 uid 123
;;      reg 13 { d46(bb 0 insn -1) }
;;      reg 173 { d547(bb 16 insn 122) }
;;   UD chains for insn luid 11 uid 125
;;      reg 147 { d528(bb 2 insn 2) }
;;   UD chains for insn luid 12 uid 126
;;      reg 172 { d546(bb 16 insn 121) }
;;   eq_note reg 25 { }
;;   UD chains for insn luid 13 uid 127
;;      reg 169 { d544(bb 16 insn 115) }
;;   UD chains for insn luid 14 uid 128
;;      reg 13 { d46(bb 0 insn -1) }
;;      reg 0 { d0(bb 16 insn 124) }
;;      reg 1 { d16(bb 16 insn 125) }
;;      reg 2 { d24(bb 16 insn 126) }
;;      reg 3 { d32(bb 16 insn 127) }

( 16 15 )->[17]->( 1 )
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u155(11){ d40(bb 0 insn -1) }u156(13){ d46(bb 0 insn -1) }u157(25){ d107(bb 0 insn -1) }u158(26){ d108(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(51)
6, 9, 22, 28, 29, 30, 31, 39, 40, 45, 46, 95, 97, 107, 108, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(51)
6, 9, 22, 28, 29, 30, 31, 39, 40, 45, 46, 95, 97, 107, 108, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548
;;  UD chains for artificial uses
;;   reg 11 { d40(bb 0 insn -1) }
;;   reg 13 { d46(bb 0 insn -1) }
;;   reg 25 { d107(bb 0 insn -1) }
;;   reg 26 { d108(bb 0 insn -1) }

( 17 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u159(11){ d40(bb 0 insn -1) }u160(13){ d46(bb 0 insn -1) }u161(14){ }u162(25){ d107(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(51)
6, 9, 22, 28, 29, 30, 31, 39, 40, 45, 46, 95, 97, 107, 108, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(51)
6, 9, 22, 28, 29, 30, 31, 39, 40, 45, 46, 95, 97, 107, 108, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548
;;  UD chains for artificial uses
;;   reg 11 { d40(bb 0 insn -1) }
;;   reg 13 { d46(bb 0 insn -1) }
;;   reg 14 { }
;;   reg 25 { d107(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 26 to worklist
  Adding insn 21 to worklist
  Adding insn 141 to worklist
  Adding insn 35 to worklist
  Adding insn 44 to worklist
  Adding insn 39 to worklist
  Adding insn 143 to worklist
  Adding insn 47 to worklist
  Adding insn 57 to worklist
  Adding insn 145 to worklist
  Adding insn 64 to worklist
  Adding insn 76 to worklist
  Adding insn 83 to worklist
  Adding insn 95 to worklist
  Adding insn 103 to worklist
  Adding insn 101 to worklist
  Adding insn 110 to worklist
  Adding insn 107 to worklist
  Adding insn 128 to worklist
  Adding insn 123 to worklist
  Adding insn 119 to worklist
  Adding insn 118 to worklist
  Adding insn 116 to worklist
  Adding insn 114 to worklist
Finished finding needed instructions:
Processing use of (reg 25 sfp) in insn 114:
Processing use of (reg 168) in insn 114:
  Adding insn 113 to worklist
Processing use of (reg 25 sfp) in insn 116:
Processing use of (reg 169) in insn 116:
  Adding insn 115 to worklist
Processing use of (reg 25 sfp) in insn 118:
Processing use of (reg 170) in insn 118:
  Adding insn 117 to worklist
Processing use of (reg 25 sfp) in insn 119:
Processing use of (reg 146 [ D.18571 ]) in insn 119:
  Adding insn 20 to worklist
Processing use of (reg 142 [ correction ]) in insn 20:
  Adding insn 139 to worklist
Processing use of (reg 150 [ <variable>.uregs+60 ]) in insn 20:
  Adding insn 19 to worklist
Processing use of (reg 147 [ regs ]) in insn 19:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 24 cc) in insn 139:
  Adding insn 138 to worklist
Processing use of (reg 148) in insn 138:
  Adding insn 7 to worklist
Processing use of (reg 149 [ <variable>.uregs+64 ]) in insn 7:
  Adding insn 6 to worklist
Processing use of (reg 147 [ regs ]) in insn 6:
Processing use of (reg 13 sp) in insn 123:
Processing use of (reg 173) in insn 123:
  Adding insn 122 to worklist
Processing use of (reg 13 sp) in insn 128:
Processing use of (reg 0 r0) in insn 128:
  Adding insn 124 to worklist
Processing use of (reg 1 r1) in insn 128:
  Adding insn 125 to worklist
Processing use of (reg 2 r2) in insn 128:
  Adding insn 126 to worklist
Processing use of (reg 3 r3) in insn 128:
  Adding insn 127 to worklist
Processing use of (reg 169) in insn 127:
Processing use of (reg 172) in insn 126:
  Adding insn 121 to worklist
Processing use of (reg 25 sfp) in insn 121:
Processing use of (reg 147 [ regs ]) in insn 125:
Processing use of (reg 13 sp) in insn 107:
Processing use of (reg 0 r0) in insn 107:
  Adding insn 105 to worklist
Processing use of (reg 1 r1) in insn 107:
  Adding insn 106 to worklist
Processing use of (reg 137 [ fn ]) in insn 107:
  Adding insn 68 to worklist
  Adding insn 85 to worklist
Processing use of (reg 135 [ hook ]) in insn 85:
  Adding insn 67 to worklist
  Adding insn 88 to worklist
Processing use of (reg 135 [ hook ]) in insn 88:
Processing use of (reg 157) in insn 67:
  Adding insn 66 to worklist
Processing use of (reg 141 [ instr ]) in insn 106:
  Adding insn 28 to worklist
  Adding insn 41 to worklist
  Adding insn 51 to worklist
  Adding insn 58 to worklist
Processing use of (reg 2 r2) in insn 58:
Processing use of (reg 133 [ instr.916 ]) in insn 51:
  Adding insn 49 to worklist
Processing use of (reg 154 [ __r2.298 ]) in insn 51:
  Adding insn 50 to worklist
Processing use of (subreg (reg 143 [ __r2.298 ]) 0) in insn 50:
  Adding insn 48 to worklist
Processing use of (reg 2 r2) in insn 48:
Processing use of (reg 141 [ instr ]) in insn 49:
Processing use of (subreg (reg 144 [ __r2.295 ]) 0) in insn 41:
  Adding insn 40 to worklist
Processing use of (reg 2 r2) in insn 40:
Processing use of (reg 146 [ D.18571 ]) in insn 28:
Processing use of (reg 147 [ regs ]) in insn 105:
Processing use of (reg 24 cc) in insn 110:
  Adding insn 109 to worklist
Processing use of (reg 139 [ D.19153 ]) in insn 109:
  Adding insn 108 to worklist
Processing use of (reg 0 r0) in insn 108:
Processing use of (reg 13 sp) in insn 101:
Processing use of (reg 0 r0) in insn 101:
  Adding insn 99 to worklist
Processing use of (reg 1 r1) in insn 101:
  Adding insn 100 to worklist
Processing use of (reg 136 [ flags ]) in insn 100:
  Adding insn 65 to worklist
Processing use of (reg 0 r0) in insn 65:
Processing use of (reg 24 cc) in insn 103:
  Adding insn 102 to worklist
Processing use of (reg 137 [ fn ]) in insn 102:
Processing use of (reg 24 cc) in insn 95:
  Adding insn 94 to worklist
Processing use of (reg 135 [ hook ]) in insn 94:
Processing use of (reg 174) in insn 94:
  Adding insn 93 to worklist
Processing use of (reg 157) in insn 93:
Processing use of (reg 24 cc) in insn 83:
  Adding insn 82 to worklist
Processing use of (reg 161) in insn 82:
  Adding insn 80 to worklist
Processing use of (reg 164 [ <variable>.cpsr_val ]) in insn 82:
  Adding insn 81 to worklist
Processing use of (reg 135 [ hook ]) in insn 81:
Processing use of (reg 162 [ <variable>.cpsr_mask ]) in insn 80:
  Adding insn 78 to worklist
Processing use of (reg 163 [ <variable>.uregs+64 ]) in insn 80:
  Adding insn 79 to worklist
Processing use of (reg 147 [ regs ]) in insn 79:
Processing use of (reg 135 [ hook ]) in insn 78:
Processing use of (reg 24 cc) in insn 76:
  Adding insn 75 to worklist
Processing use of (reg 158) in insn 75:
  Adding insn 73 to worklist
Processing use of (reg 160 [ <variable>.instr_val ]) in insn 75:
  Adding insn 74 to worklist
Processing use of (reg 135 [ hook ]) in insn 74:
Processing use of (reg 141 [ instr ]) in insn 73:
Processing use of (reg 159 [ <variable>.instr_mask ]) in insn 73:
  Adding insn 72 to worklist
Processing use of (reg 135 [ hook ]) in insn 72:
Processing use of (reg 13 sp) in insn 64:
Processing use of (reg 0 r0) in insn 64:
  Adding insn 63 to worklist
Processing use of (reg 0 r0) in insn 57:
  Adding insn 56 to worklist
Processing use of (reg 146 [ D.18571 ]) in insn 56:
Processing use of (reg 0 r0) in insn 47:
  Adding insn 46 to worklist
Processing use of (reg 146 [ D.18571 ]) in insn 46:
Processing use of (reg 0 r0) in insn 39:
  Adding insn 38 to worklist
Processing use of (reg 146 [ D.18571 ]) in insn 38:
Processing use of (reg 24 cc) in insn 44:
  Adding insn 43 to worklist
Processing use of (reg 141 [ instr ]) in insn 43:
Processing use of (reg 153) in insn 43:
  Adding insn 42 to worklist
Processing use of (reg 24 cc) in insn 35:
  Adding insn 34 to worklist
Processing use of (reg 148) in insn 34:
Processing use of (reg 146 [ D.18571 ]) in insn 21:
Processing use of (reg 147 [ regs ]) in insn 21:
Processing use of (reg 24 cc) in insn 26:
  Adding insn 25 to worklist
Processing use of (reg 151) in insn 25:
  Adding insn 24 to worklist
Processing use of (reg 149 [ <variable>.uregs+64 ]) in insn 24:


do_undefinstr

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={15d,10u} r1={8d,3u} r2={9d,4u} r3={8d,1u} r11={1d,17u} r12={5d} r13={1d,22u} r14={8d,1u} r15={4d} r16={4d} r17={4d} r18={4d} r19={4d} r20={4d} r21={4d} r22={4d} r23={4d} r24={16d,9u} r25={1d,22u,1d} r26={1d,16u} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r81={4d} r82={4d} r83={4d} r84={4d} r85={4d} r86={4d} r87={4d} r88={4d} r89={4d} r90={4d} r91={4d} r92={4d} r93={4d} r94={4d} r95={4d} r96={4d} r97={4d} r98={4d} r99={4d} r100={4d} r101={4d} r102={4d} r103={4d} r104={4d} r105={4d} r106={4d} r107={4d} r108={4d} r109={4d} r110={4d} r111={4d} r112={4d} r113={4d} r114={4d} r115={4d} r116={4d} r117={4d} r118={4d} r119={4d} r120={4d} r121={4d} r122={4d} r123={4d} r124={4d} r125={4d} r126={4d} r127={4d} r133={1d,1u} r135={2d,7u,1d} r136={1d,1u} r137={2d,2u} r139={1d,1u} r141={4d,4u,1d} r142={1d,1u} r143={1d,1u} r144={1d,1u} r146={1d,6u} r147={1d,6u} r148={1d,2u} r149={1d,2u} r150={1d,1u} r151={1d,1u} r153={1d,1u} r154={1d,1u} r157={1d,2u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r168={1d,1u} r169={1d,2u} r170={1d,1u} r172={1d,1u} r173={1d,1u} r174={1d,1u} 
;;    total ref usage 712{549d,160u,3e} in 81{77 regular + 4 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512
0[0,15] 1[15,8] 2[23,9] 3[32,8] 11[40,1] 12[41,5] 13[46,1] 14[47,8] 15[55,4] 16[59,4] 17[63,4] 18[67,4] 19[71,4] 20[75,4] 21[79,4] 22[83,4] 23[87,4] 24[91,16] 25[107,1] 26[108,1] 27[109,4] 28[113,4] 29[117,4] 30[121,4] 31[125,4] 32[129,4] 33[133,4] 34[137,4] 35[141,4] 36[145,4] 37[149,4] 38[153,4] 39[157,4] 40[161,4] 41[165,4] 42[169,4] 43[173,4] 44[177,4] 45[181,4] 46[185,4] 47[189,4] 48[193,4] 49[197,4] 50[201,4] 51[205,4] 52[209,4] 53[213,4] 54[217,4] 55[221,4] 56[225,4] 57[229,4] 58[233,4] 59[237,4] 60[241,4] 61[245,4] 62[249,4] 63[253,4] 64[257,4] 65[261,4] 66[265,4] 67[269,4] 68[273,4] 69[277,4] 70[281,4] 71[285,4] 72[289,4] 73[293,4] 74[297,4] 75[301,4] 76[305,4] 77[309,4] 78[313,4] 79[317,4] 80[321,4] 81[325,4] 82[329,4] 83[333,4] 84[337,4] 85[341,4] 86[345,4] 87[349,4] 88[353,4] 89[357,4] 90[361,4] 91[365,4] 92[369,4] 93[373,4] 94[377,4] 95[381,4] 96[385,4] 97[389,4] 98[393,4] 99[397,4] 100[401,4] 101[405,4] 102[409,4] 103[413,4] 104[417,4] 105[421,4] 106[425,4] 107[429,4] 108[433,4] 109[437,4] 110[441,4] 111[445,4] 112[449,4] 113[453,4] 114[457,4] 115[461,4] 116[465,4] 117[469,4] 118[473,4] 119[477,4] 120[481,4] 121[485,4] 122[489,4] 123[493,4] 124[497,4] 125[501,4] 126[505,4] 127[509,4] 133[513,1] 135[514,2] 136[516,1] 137[517,2] 139[519,1] 141[520,4] 142[524,1] 143[525,1] 144[526,1] 146[527,1] 147[528,1] 148[529,1] 149[530,1] 150[531,1] 151[532,1] 153[533,1] 154[534,1] 157[535,1] 158[536,1] 159[537,1] 160[538,1] 161[539,1] 162[540,1] 163[541,1] 164[542,1] 168[543,1] 169[544,1] 170[545,1] 172[546,1] 173[547,1] 174[548,1] 
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 142 146 147 148 149 150 151
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 142 146 147 148 149 150 151
;; live  kill	
;; rd  in  	(10)
14, 22, 31, 39, 40, 45, 46, 54, 107, 108
;; rd  gen 	(8)
106, 524, 527, 528, 529, 530, 531, 532
;; rd  kill	(23)
91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 524, 527, 528, 529, 530, 531, 532

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 arch/arm/kernel/traps.c:342 (set (reg/v/f:SI 147 [ regs ])
        (reg:SI 0 r0 [ regs ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ regs ])
        (nil)))

(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 3 7 2 arch/arm/kernel/traps.c:343 (set (reg:SI 149 [ <variable>.uregs+64 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 147 [ regs ])
                (const_int 64 [0x40])) [0 <variable>.uregs+64 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 7 6 138 2 arch/arm/kernel/traps.c:343 (set (reg:SI 148)
        (and:SI (reg:SI 149 [ <variable>.uregs+64 ])
            (const_int 32 [0x20]))) 67 {*arm_andsi3_insn} (nil))

(insn 138 7 139 2 arch/arm/kernel/traps.c:343 discrim 2 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 148)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn 139 138 19 2 arch/arm/kernel/traps.c:343 discrim 2 (set (reg/v:SI 142 [ correction ])
        (if_then_else:SI (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (const_int 2 [0x2])
            (const_int 4 [0x4]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 19 139 20 2 arch/arm/kernel/traps.c:353 (set (reg:SI 150 [ <variable>.uregs+60 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 147 [ regs ])
                (const_int 60 [0x3c])) [0 <variable>.uregs+60 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 20 19 21 2 arch/arm/kernel/traps.c:353 (set (reg:SI 146 [ D.18571 ])
        (minus:SI (reg:SI 150 [ <variable>.uregs+60 ])
            (reg/v:SI 142 [ correction ]))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg:SI 150 [ <variable>.uregs+60 ])
        (expr_list:REG_DEAD (reg/v:SI 142 [ correction ])
            (nil))))

(insn 21 20 24 2 arch/arm/kernel/traps.c:353 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 147 [ regs ])
                (const_int 60 [0x3c])) [0 <variable>.uregs+60 S4 A32])
        (reg:SI 146 [ D.18571 ])) 167 {*arm_movsi_insn} (nil))

(insn 24 21 25 2 arch/arm/kernel/traps.c:357 (set (reg:SI 151)
        (and:SI (reg:SI 149 [ <variable>.uregs+64 ])
            (const_int 31 [0x1f]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 149 [ <variable>.uregs+64 ])
        (nil)))

(insn 25 24 26 2 arch/arm/kernel/traps.c:357 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 151)
            (const_int 19 [0x13]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 151)
        (nil)))

(jump_insn 26 25 27 2 arch/arm/kernel/traps.c:357 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 31)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148
;; rd  out 	(18)
14, 22, 31, 39, 40, 45, 46, 54, 106, 107, 108, 524, 527, 528, 529, 530, 531, 532


;; Succ edge  3 [28.0%]  (fallthru)
;; Succ edge  4 [72.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u17(11){ }u18(13){ }u19(25){ }u20(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146
;; lr  def 	 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147
;; live  gen 	 141
;; live  kill	
;; rd  in  	(18)
14, 22, 31, 39, 40, 45, 46, 54, 106, 107, 108, 524, 527, 528, 529, 530, 531, 532
;; rd  gen 	(1)
523
;; rd  kill	(4)
520, 521, 522, 523

;; Pred edge  2 [28.0%]  (fallthru)
(note 27 26 28 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 28 27 141 3 arch/arm/kernel/traps.c:367 (set (reg/v:SI 141 [ instr ])
        (mem:SI (reg:SI 146 [ D.18571 ]) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(jump_insn 141 28 142 3 (set (pc)
        (label_ref 59)) -1 (nil))
;; End of basic block 3 -> ( 8)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 146 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 146 147
;; rd  out 	(19)
14, 22, 31, 39, 40, 45, 46, 54, 106, 107, 108, 523, 524, 527, 528, 529, 530, 531, 532


;; Succ edge  8 [100.0%] 

(barrier 142 141 31)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u22(11){ }u23(13){ }u24(25){ }u25(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(18)
14, 22, 31, 39, 40, 45, 46, 54, 106, 107, 108, 524, 527, 528, 529, 530, 531, 532
;; rd  gen 	(1)
91
;; rd  kill	(16)
91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106

;; Pred edge  2 [72.0%] 
(code_label 31 142 32 4 148 "" [1 uses])

(note 32 31 34 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 34 32 35 4 arch/arm/kernel/traps.c:368 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 148)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 148)
        (nil)))

(jump_insn 35 34 36 4 arch/arm/kernel/traps.c:368 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 54)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 4 -> ( 5 7)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147
;; rd  out 	(18)
14, 22, 31, 39, 40, 45, 46, 54, 91, 107, 108, 524, 527, 528, 529, 530, 531, 532


;; Succ edge  5 [50.0%]  (fallthru)
;; Succ edge  7 [50.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u28(11){ }u29(13){ }u30(25){ }u31(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146
;; lr  def 	 0 [r0] 2 [r2] 3 [r3] 14 [lr] 24 [cc] 141 144 153
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147
;; live  gen 	 0 [r0] 2 [r2] 24 [cc] 141 144 153
;; live  kill	 3 [r3] 14 [lr] 24 [cc]
;; rd  in  	(18)
14, 22, 31, 39, 40, 45, 46, 54, 91, 107, 108, 524, 527, 528, 529, 530, 531, 532
;; rd  gen 	(6)
13, 30, 104, 522, 526, 533
;; rd  kill	(62)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 47, 48, 49, 50, 51, 52, 53, 54, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 520, 521, 522, 523, 526, 533

;; Pred edge  4 [50.0%]  (fallthru)
(note 36 35 38 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 38 36 39 5 arch/arm/kernel/traps.c:369 (set (reg/v:SI 0 r0 [ __p ])
        (reg:SI 146 [ D.18571 ])) 167 {*arm_movsi_insn} (nil))

(insn 39 38 40 5 arch/arm/kernel/traps.c:369 discrim 3 (parallel [
            (set (reg/v:SI 0 r0 [ __e ])
                (asm_operands/v:SI (".ifnc %0,r0 ; .err ; .endif
	.ifnc %1,r2 ; .err ; .endif
	bl	__get_user_2") ("=&r") 0 [
                        (reg/v:SI 0 r0 [ __p ])
                    ]
                     [
                        (asm_input:SI ("0") 0)
                    ] 7011968))
            (set (reg/v:SI 2 r2 [ __r2 ])
                (asm_operands/v:SI (".ifnc %0,r0 ; .err ; .endif
	.ifnc %1,r2 ; .err ; .endif
	bl	__get_user_2") ("=r") 1 [
                        (reg/v:SI 0 r0 [ __p ])
                    ]
                     [
                        (asm_input:SI ("0") 0)
                    ] 7011968))
            (clobber (reg:QI 24 cc))
            (clobber (reg:QI 14 lr))
            (clobber (reg:QI 3 r3))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (expr_list:REG_UNUSED (reg:QI 14 lr)
            (expr_list:REG_UNUSED (reg:QI 3 r3)
                (expr_list:REG_UNUSED (reg/v:SI 0 r0 [ __e ])
                    (nil))))))

(insn 40 39 41 5 arch/arm/kernel/traps.c:369 discrim 5 (set (reg:SI 144 [ __r2.295 ])
        (reg/v:SI 2 r2 [ __r2 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 2 r2 [ __r2 ])
        (nil)))

(insn 41 40 42 5 arch/arm/kernel/traps.c:369 discrim 5 (set (reg/v:SI 141 [ instr ])
        (zero_extend:SI (subreg:HI (reg:SI 144 [ __r2.295 ]) 0))) 144 {*arm_zero_extendhisi2_v6} (expr_list:REG_DEAD (reg:SI 144 [ __r2.295 ])
        (nil)))

(insn 42 41 43 5 arch/arm/kernel/traps.c:370 (set (reg:SI 153)
        (const_int 59391 [0xe7ff])) 167 {*arm_movsi_insn} (nil))

(insn 43 42 44 5 arch/arm/kernel/traps.c:370 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 141 [ instr ])
            (reg:SI 153))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 153)
        (expr_list:REG_EQUAL (compare:CC (reg/v:SI 141 [ instr ])
                (const_int 59391 [0xe7ff]))
            (nil))))

(jump_insn 44 43 45 5 arch/arm/kernel/traps.c:370 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 59)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 5 -> ( 6 8)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 146 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 146 147
;; rd  out 	(19)
13, 22, 30, 40, 45, 46, 104, 107, 108, 522, 524, 526, 527, 528, 529, 530, 531, 532, 533


;; Succ edge  6 [50.0%]  (fallthru)
;; Succ edge  8 [50.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u40(11){ }u41(13){ }u42(25){ }u43(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 146 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 146
;; lr  def 	 0 [r0] 2 [r2] 3 [r3] 14 [lr] 24 [cc] 133 141 143 154
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 146 147
;; live  gen 	 0 [r0] 2 [r2] 133 141 143 154
;; live  kill	 3 [r3] 14 [lr] 24 [cc]
;; rd  in  	(19)
13, 22, 30, 40, 45, 46, 104, 107, 108, 522, 524, 526, 527, 528, 529, 530, 531, 532, 533
;; rd  gen 	(6)
12, 29, 513, 521, 525, 534
;; rd  kill	(63)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 47, 48, 49, 50, 51, 52, 53, 54, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 513, 520, 521, 522, 523, 525, 534

;; Pred edge  5 [50.0%]  (fallthru)
(note 45 44 46 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 46 45 47 6 arch/arm/kernel/traps.c:372 (set (reg/v:SI 0 r0 [ __p ])
        (plus:SI (reg:SI 146 [ D.18571 ])
            (const_int 2 [0x2]))) 4 {*arm_addsi3} (nil))

(insn 47 46 48 6 arch/arm/kernel/traps.c:372 discrim 3 (parallel [
            (set (reg/v:SI 0 r0 [ __e ])
                (asm_operands/v:SI (".ifnc %0,r0 ; .err ; .endif
	.ifnc %1,r2 ; .err ; .endif
	bl	__get_user_2") ("=&r") 0 [
                        (reg/v:SI 0 r0 [ __p ])
                    ]
                     [
                        (asm_input:SI ("0") 0)
                    ] 7011973))
            (set (reg/v:SI 2 r2 [ __r2 ])
                (asm_operands/v:SI (".ifnc %0,r0 ; .err ; .endif
	.ifnc %1,r2 ; .err ; .endif
	bl	__get_user_2") ("=r") 1 [
                        (reg/v:SI 0 r0 [ __p ])
                    ]
                     [
                        (asm_input:SI ("0") 0)
                    ] 7011973))
            (clobber (reg:QI 24 cc))
            (clobber (reg:QI 14 lr))
            (clobber (reg:QI 3 r3))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (expr_list:REG_UNUSED (reg:QI 14 lr)
            (expr_list:REG_UNUSED (reg:QI 3 r3)
                (expr_list:REG_UNUSED (reg/v:SI 0 r0 [ __e ])
                    (nil))))))

(insn 48 47 49 6 arch/arm/kernel/traps.c:372 discrim 5 (set (reg:SI 143 [ __r2.298 ])
        (reg/v:SI 2 r2 [ __r2 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 2 r2 [ __r2 ])
        (nil)))

(insn 49 48 50 6 arch/arm/kernel/traps.c:373 (set (reg/v:SI 133 [ instr.916 ])
        (ashift:SI (reg/v:SI 141 [ instr ])
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg/v:SI 141 [ instr ])
        (nil)))

(insn 50 49 51 6 arch/arm/kernel/traps.c:374 (set (reg:SI 154 [ __r2.298 ])
        (zero_extend:SI (subreg:HI (reg:SI 143 [ __r2.298 ]) 0))) 144 {*arm_zero_extendhisi2_v6} (expr_list:REG_DEAD (reg:SI 143 [ __r2.298 ])
        (nil)))

(insn 51 50 143 6 arch/arm/kernel/traps.c:374 (set (reg/v:SI 141 [ instr ])
        (ior:SI (reg/v:SI 133 [ instr.916 ])
            (reg:SI 154 [ __r2.298 ]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 154 [ __r2.298 ])
        (expr_list:REG_DEAD (reg/v:SI 133 [ instr.916 ])
            (nil))))

(jump_insn 143 51 144 6 (set (pc)
        (label_ref 59)) -1 (nil))
;; End of basic block 6 -> ( 8)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 146 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 146 147
;; rd  out 	(21)
12, 22, 29, 40, 45, 46, 107, 108, 513, 521, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534


;; Succ edge  8 [100.0%] 

(barrier 144 143 54)

;; Start of basic block ( 4) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u51(11){ }u52(13){ }u53(25){ }u54(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146
;; lr  def 	 0 [r0] 2 [r2] 14 [lr] 24 [cc] 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147
;; live  gen 	 0 [r0] 2 [r2] 141
;; live  kill	 14 [lr] 24 [cc]
;; rd  in  	(18)
14, 22, 31, 39, 40, 45, 46, 54, 91, 107, 108, 524, 527, 528, 529, 530, 531, 532
;; rd  gen 	(3)
10, 28, 520
;; rd  kill	(52)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 23, 24, 25, 26, 27, 28, 29, 30, 31, 47, 48, 49, 50, 51, 52, 53, 54, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 520, 521, 522, 523

;; Pred edge  4 [50.0%] 
(code_label 54 144 55 7 150 "" [1 uses])

(note 55 54 56 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 56 55 57 7 arch/arm/kernel/traps.c:377 (set (reg/v:SI 0 r0 [ __p ])
        (reg:SI 146 [ D.18571 ])) 167 {*arm_movsi_insn} (nil))

(insn 57 56 58 7 arch/arm/kernel/traps.c:377 discrim 4 (parallel [
            (set (reg/v:SI 0 r0 [ __e ])
                (asm_operands/v:SI (".ifnc %0,r0 ; .err ; .endif
	.ifnc %1,r2 ; .err ; .endif
	bl	__get_user_4") ("=&r") 0 [
                        (reg/v:SI 0 r0 [ __p ])
                    ]
                     [
                        (asm_input:SI ("0") 0)
                    ] 7011979))
            (set (reg/v:SI 2 r2 [ __r2 ])
                (asm_operands/v:SI (".ifnc %0,r0 ; .err ; .endif
	.ifnc %1,r2 ; .err ; .endif
	bl	__get_user_4") ("=r") 1 [
                        (reg/v:SI 0 r0 [ __p ])
                    ]
                     [
                        (asm_input:SI ("0") 0)
                    ] 7011979))
            (clobber (reg:QI 24 cc))
            (clobber (reg:QI 14 lr))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (expr_list:REG_UNUSED (reg:QI 14 lr)
            (expr_list:REG_UNUSED (reg/v:SI 0 r0 [ __e ])
                (nil)))))

(insn 58 57 59 7 arch/arm/kernel/traps.c:377 discrim 5 (set (reg/v:SI 141 [ instr ])
        (reg/v:SI 2 r2 [ __r2 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 2 r2 [ __r2 ])
        (nil)))
;; End of basic block 7 -> ( 8)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 146 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 146 147
;; rd  out 	(17)
10, 22, 28, 39, 40, 45, 46, 107, 108, 520, 524, 527, 528, 529, 530, 531, 532


;; Succ edge  8 [100.0%]  (fallthru)

;; Start of basic block ( 5 3 7 6) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u58(11){ }u59(13){ }u60(25){ }u61(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 146 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 135 136 137 157 174
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 146 147
;; live  gen 	 0 [r0] 135 136 137 157 174
;; live  kill	 14 [lr]
;; rd  in  	(34)
10, 12, 13, 14, 22, 28, 29, 30, 31, 39, 40, 45, 46, 54, 104, 106, 107, 108, 513, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534
;; rd  gen 	(6)
9, 515, 516, 518, 535, 548
;; rd  kill	(30)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 47, 48, 49, 50, 51, 52, 53, 54, 514, 515, 516, 517, 518, 535, 548

;; Pred edge  5 [50.0%] 
;; Pred edge  3 [100.0%] 
;; Pred edge  7 [100.0%]  (fallthru)
;; Pred edge  6 [100.0%] 
(code_label 59 58 60 8 149 "" [3 uses])

(note 60 59 63 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 63 60 64 8 arch/arm/kernel/traps.c:331 (set (reg:SI 0 r0)
        (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 4 [0x4])))) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 4 [0x4])))
        (nil)))

(call_insn 64 63 65 8 arch/arm/kernel/traps.c:331 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("_raw_spin_lock_irqsave") [flags 0x41] <function_decl 0x10b28b80 _raw_spin_lock_irqsave>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 65 64 66 8 arch/arm/kernel/traps.c:331 (set (reg/v:SI 136 [ flags ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 66 65 67 8 arch/arm/kernel/traps.c:332 (set (reg/f:SI 157)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 67 66 68 8 arch/arm/kernel/traps.c:332 (set (reg/v/f:SI 135 [ hook ])
        (mem/s/f/j/c:SI (reg/f:SI 157) [0 undef_hook.next+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/f/j/c:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182]) [0 undef_hook.next+0 S4 A32])
        (nil)))

(insn 68 67 93 8 arch/arm/kernel/traps.c:329 (set (reg/v/f:SI 137 [ fn ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 93 68 145 8 arch/arm/kernel/traps.c:332 discrim 1 (set (reg/f:SI 174)
        (reg/f:SI 157)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 157)
        (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
            (nil))))

(jump_insn 145 93 146 8 (set (pc)
        (label_ref 90)) -1 (nil))
;; End of basic block 8 -> ( 13)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 141 146 147 174
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 141 146 147 174
;; rd  out 	(35)
9, 22, 28, 29, 30, 31, 39, 40, 45, 46, 104, 106, 107, 108, 513, 515, 516, 518, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 548


;; Succ edge  13 [100.0%] 

(barrier 146 145 92)

;; Start of basic block ( 13) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u67(11){ }u68(13){ }u69(25){ }u70(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 141 146 147 174
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 141
;; lr  def 	 24 [cc] 158 159 160
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 141 146 147 174
;; live  gen 	 24 [cc] 158 159 160
;; live  kill	
;; rd  in  	(43)
9, 22, 28, 29, 30, 31, 39, 40, 45, 46, 92, 107, 108, 513, 514, 515, 516, 517, 518, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 548
;; rd  gen 	(4)
100, 536, 537, 538
;; rd  kill	(19)
91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 536, 537, 538

;; Pred edge  13 [91.0%] 
(code_label 92 146 71 9 153 "" [1 uses])

(note 71 92 72 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 72 71 73 9 arch/arm/kernel/traps.c:333 (set (reg:SI 159 [ <variable>.instr_mask ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 135 [ hook ])
                (const_int 8 [0x8])) [0 <variable>.instr_mask+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 73 72 74 9 arch/arm/kernel/traps.c:333 (set (reg:SI 158)
        (and:SI (reg/v:SI 141 [ instr ])
            (reg:SI 159 [ <variable>.instr_mask ]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 159 [ <variable>.instr_mask ])
        (nil)))

(insn 74 73 75 9 arch/arm/kernel/traps.c:333 (set (reg:SI 160 [ <variable>.instr_val ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 135 [ hook ])
                (const_int 12 [0xc])) [0 <variable>.instr_val+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 75 74 76 9 arch/arm/kernel/traps.c:333 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 158)
            (reg:SI 160 [ <variable>.instr_val ]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 160 [ <variable>.instr_val ])
        (expr_list:REG_DEAD (reg:SI 158)
            (nil))))

(jump_insn 76 75 77 9 arch/arm/kernel/traps.c:333 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 86)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 9 -> ( 10 12)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 141 146 147 174
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 141 146 147 174
;; rd  out 	(43)
9, 22, 28, 29, 30, 31, 39, 40, 45, 46, 100, 107, 108, 513, 514, 515, 516, 517, 518, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 548


;; Succ edge  10 [28.0%]  (fallthru)
;; Succ edge  12 [72.0%] 

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u78(11){ }u79(13){ }u80(25){ }u81(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 141 146 147 174
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 147
;; lr  def 	 24 [cc] 161 162 163 164
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 141 146 147 174
;; live  gen 	 24 [cc] 161 162 163 164
;; live  kill	
;; rd  in  	(43)
9, 22, 28, 29, 30, 31, 39, 40, 45, 46, 100, 107, 108, 513, 514, 515, 516, 517, 518, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 548
;; rd  gen 	(5)
99, 539, 540, 541, 542
;; rd  kill	(20)
91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 539, 540, 541, 542

;; Pred edge  9 [28.0%]  (fallthru)
(note 77 76 78 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 78 77 79 10 arch/arm/kernel/traps.c:334 (set (reg:SI 162 [ <variable>.cpsr_mask ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 135 [ hook ])
                (const_int 16 [0x10])) [0 <variable>.cpsr_mask+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 79 78 80 10 arch/arm/kernel/traps.c:334 (set (reg:SI 163 [ <variable>.uregs+64 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 147 [ regs ])
                (const_int 64 [0x40])) [0 <variable>.uregs+64 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 80 79 81 10 arch/arm/kernel/traps.c:334 (set (reg:SI 161)
        (and:SI (reg:SI 162 [ <variable>.cpsr_mask ])
            (reg:SI 163 [ <variable>.uregs+64 ]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 163 [ <variable>.uregs+64 ])
        (expr_list:REG_DEAD (reg:SI 162 [ <variable>.cpsr_mask ])
            (nil))))

(insn 81 80 82 10 arch/arm/kernel/traps.c:334 (set (reg:SI 164 [ <variable>.cpsr_val ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 135 [ hook ])
                (const_int 20 [0x14])) [0 <variable>.cpsr_val+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 82 81 83 10 arch/arm/kernel/traps.c:334 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 161)
            (reg:SI 164 [ <variable>.cpsr_val ]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 164 [ <variable>.cpsr_val ])
        (expr_list:REG_DEAD (reg:SI 161)
            (nil))))

(jump_insn 83 82 84 10 arch/arm/kernel/traps.c:334 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 86)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 10 -> ( 11 12)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 141 146 147 174
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 141 146 147 174
;; rd  out 	(43)
9, 22, 28, 29, 30, 31, 39, 40, 45, 46, 99, 107, 108, 513, 514, 515, 516, 517, 518, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 548


;; Succ edge  11 [28.0%]  (fallthru)
;; Succ edge  12 [72.0%] 

;; Start of basic block ( 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u90(11){ }u91(13){ }u92(25){ }u93(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 141 146 147 174
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 137
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 141 146 147 174
;; live  gen 	 137
;; live  kill	
;; rd  in  	(43)
9, 22, 28, 29, 30, 31, 39, 40, 45, 46, 99, 107, 108, 513, 514, 515, 516, 517, 518, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 548
;; rd  gen 	(1)
517
;; rd  kill	(2)
517, 518

;; Pred edge  10 [28.0%]  (fallthru)
(note 84 83 85 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 85 84 86 11 arch/arm/kernel/traps.c:335 (set (reg/v/f:SI 137 [ fn ])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 135 [ hook ])
                (const_int 24 [0x18])) [0 <variable>.fn+0 S4 A32])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 11 -> ( 12)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 141 146 147 174
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 141 146 147 174
;; rd  out 	(42)
9, 22, 28, 29, 30, 31, 39, 40, 45, 46, 99, 107, 108, 513, 514, 515, 516, 517, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 548


;; Succ edge  12 [100.0%]  (fallthru)

;; Start of basic block ( 9 10 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u95(11){ }u96(13){ }u97(25){ }u98(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 141 146 147 174
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 135
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 141 146 147 174
;; live  gen 	 135
;; live  kill	
;; rd  in  	(44)
9, 22, 28, 29, 30, 31, 39, 40, 45, 46, 99, 100, 107, 108, 513, 514, 515, 516, 517, 518, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 548
;; rd  gen 	(1)
514
;; rd  kill	(2)
514, 515

;; Pred edge  9 [72.0%] 
;; Pred edge  10 [72.0%] 
;; Pred edge  11 [100.0%]  (fallthru)
(code_label 86 85 87 12 152 "" [2 uses])

(note 87 86 88 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 88 87 90 12 arch/arm/kernel/traps.c:332 (set (reg/v/f:SI 135 [ hook ])
        (mem/s/f/j:SI (reg/v/f:SI 135 [ hook ]) [0 <variable>.node.next+0 S4 A32])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 12 -> ( 13)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 141 146 147 174
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 141 146 147 174
;; rd  out 	(43)
9, 22, 28, 29, 30, 31, 39, 40, 45, 46, 99, 100, 107, 108, 513, 514, 516, 517, 518, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 548


;; Succ edge  13 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 12 8) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u100(11){ }u101(13){ }u102(25){ }u103(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 141 146 147 174
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 174
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 141 146 147 174
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(46)
9, 22, 28, 29, 30, 31, 39, 40, 45, 46, 99, 100, 104, 106, 107, 108, 513, 514, 515, 516, 517, 518, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 548
;; rd  gen 	(1)
92
;; rd  kill	(16)
91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106

;; Pred edge  12 [100.0%]  (fallthru,dfs_back)
;; Pred edge  8 [100.0%] 
(code_label 90 88 91 13 151 "" [1 uses])

(note 91 90 94 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 94 91 95 13 arch/arm/kernel/traps.c:332 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 135 [ hook ])
            (reg/f:SI 174))) 219 {*arm_cmpsi_insn} (expr_list:REG_EQUAL (compare:CC (reg/v/f:SI 135 [ hook ])
            (symbol_ref:SI ("*.LANCHOR1") [flags 0x182]))
        (nil)))

(jump_insn 95 94 96 13 arch/arm/kernel/traps.c:332 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 92)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil))))
;; End of basic block 13 -> ( 9 14)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 141 146 147 174
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 141 146 147 174
;; rd  out 	(43)
9, 22, 28, 29, 30, 31, 39, 40, 45, 46, 92, 107, 108, 513, 514, 515, 516, 517, 518, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 548


;; Succ edge  9 [91.0%] 
;; Succ edge  14 [9.0%]  (fallthru,loop_exit)

;; Start of basic block ( 13) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u108(11){ }u109(13){ }u110(25){ }u111(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 146 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 146 147
;; live  gen 	 0 [r0] 1 [r1] 24 [cc]
;; live  kill	 14 [lr]
;; rd  in  	(43)
9, 22, 28, 29, 30, 31, 39, 40, 45, 46, 92, 107, 108, 513, 514, 515, 516, 517, 518, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 548
;; rd  gen 	(1)
97
;; rd  kill	(24)
47, 48, 49, 50, 51, 52, 53, 54, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106

;; Pred edge  13 [9.0%]  (fallthru,loop_exit)
(note 96 95 99 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 99 96 100 14 include/linux/spinlock.h:340 (set (reg:SI 0 r0)
        (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 4 [0x4])))) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 4 [0x4])))
        (nil)))

(insn 100 99 101 14 include/linux/spinlock.h:340 (set (reg:SI 1 r1)
        (reg/v:SI 136 [ flags ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 136 [ flags ])
        (nil)))

(call_insn 101 100 102 14 include/linux/spinlock.h:340 (parallel [
            (call (mem:SI (symbol_ref:SI ("_raw_spin_unlock_irqrestore") [flags 0x41] <function_decl 0x10b28f00 _raw_spin_unlock_irqrestore>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 102 101 103 14 arch/arm/kernel/traps.c:338 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 137 [ fn ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 103 102 104 14 arch/arm/kernel/traps.c:338 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 111)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3017 [0xbc9])
            (nil))))
;; End of basic block 14 -> ( 15 16)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 146 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 146 147
;; rd  out 	(43)
9, 22, 28, 29, 30, 31, 39, 40, 45, 46, 97, 107, 108, 513, 514, 515, 516, 517, 518, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 548


;; Succ edge  15 [69.8%]  (fallthru)
;; Succ edge  16 [30.2%] 

;; Start of basic block ( 14) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u118(11){ }u119(13){ }u120(25){ }u121(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 146 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 147
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 139
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 146 147
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 139
;; live  kill	 14 [lr]
;; rd  in  	(43)
9, 22, 28, 29, 30, 31, 39, 40, 45, 46, 97, 107, 108, 513, 514, 515, 516, 517, 518, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 548
;; rd  gen 	(3)
6, 95, 519
;; rd  kill	(40)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 47, 48, 49, 50, 51, 52, 53, 54, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 519

;; Pred edge  14 [69.8%]  (fallthru)
(note 104 103 105 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 105 104 106 15 arch/arm/kernel/traps.c:338 discrim 1 (set (reg:SI 0 r0)
        (reg/v/f:SI 147 [ regs ])) 167 {*arm_movsi_insn} (nil))

(insn 106 105 107 15 arch/arm/kernel/traps.c:338 discrim 1 (set (reg:SI 1 r1)
        (reg/v:SI 141 [ instr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 141 [ instr ])
        (nil)))

(call_insn 107 106 108 15 arch/arm/kernel/traps.c:338 discrim 1 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (reg/v/f:SI 137 [ fn ]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 249 {*call_value_reg_armv5} (expr_list:REG_DEAD (reg/v/f:SI 137 [ fn ])
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 108 107 109 15 arch/arm/kernel/traps.c:338 discrim 1 (set (reg:SI 139 [ D.19153 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 109 108 110 15 arch/arm/kernel/traps.c:380 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 139 [ D.19153 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 139 [ D.19153 ])
        (nil)))

(jump_insn 110 109 111 15 arch/arm/kernel/traps.c:380 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 134)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 8745 [0x2229])
            (nil))))
;; End of basic block 15 -> ( 17 16)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147
;; rd  out 	(44)
6, 22, 28, 29, 30, 31, 39, 40, 45, 46, 95, 107, 108, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 548


;; Succ edge  17 [87.5%] 
;; Succ edge  16 [12.6%]  (fallthru)

;; Start of basic block ( 15 14) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u131(11){ }u132(13){ }u133(25){ }u134(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 168 169 170 172 173
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 168 169 170 172 173
;; live  kill	 14 [lr]
;; rd  in  	(46)
6, 9, 22, 28, 29, 30, 31, 39, 40, 45, 46, 95, 97, 107, 108, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 548
;; rd  gen 	(5)
543, 544, 545, 546, 547
;; rd  kill	(13)
47, 48, 49, 50, 51, 52, 53, 54, 543, 544, 545, 546, 547

;; Pred edge  15 [12.6%]  (fallthru)
;; Pred edge  14 [30.2%] 
(code_label 111 110 112 16 154 "" [1 uses])

(note 112 111 113 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 113 112 114 16 arch/arm/kernel/traps.c:391 (set (reg:SI 168)
        (const_int 4 [0x4])) 167 {*arm_movsi_insn} (nil))

(insn 114 113 115 16 arch/arm/kernel/traps.c:391 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -128 [0xffffffffffffff80])) [0 info.si_signo+0 S4 A64])
        (reg:SI 168)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 168)
        (expr_list:REG_EQUAL (const_int 4 [0x4])
            (nil))))

(insn 115 114 116 16 arch/arm/kernel/traps.c:392 (set (reg:SI 169)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 116 115 117 16 arch/arm/kernel/traps.c:392 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -124 [0xffffffffffffff84])) [0 info.si_errno+0 S4 A32])
        (reg:SI 169)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 117 116 118 16 arch/arm/kernel/traps.c:393 (set (reg:SI 170)
        (const_int 196609 [0x30001])) 167 {*arm_movsi_insn} (nil))

(insn 118 117 119 16 arch/arm/kernel/traps.c:393 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -120 [0xffffffffffffff88])) [0 info.si_code+0 S4 A64])
        (reg:SI 170)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 170)
        (expr_list:REG_EQUAL (const_int 196609 [0x30001])
            (nil))))

(insn 119 118 121 16 arch/arm/kernel/traps.c:394 (set (mem/s/f/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -116 [0xffffffffffffff8c])) [0 info._sifields._sigfault._addr+0 S4 A32])
        (reg:SI 146 [ D.18571 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 146 [ D.18571 ])
        (nil)))

(insn 121 119 122 16 arch/arm/kernel/traps.c:396 (set (reg/f:SI 172)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -128 [0xffffffffffffff80]))) 4 {*arm_addsi3} (nil))

(insn 122 121 123 16 arch/arm/kernel/traps.c:396 (set (reg:SI 173)
        (const_int 6 [0x6])) 167 {*arm_movsi_insn} (nil))

(insn 123 122 124 16 arch/arm/kernel/traps.c:396 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg:SI 173)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 173)
        (expr_list:REG_EQUAL (const_int 6 [0x6])
            (nil))))

(insn 124 123 125 16 arch/arm/kernel/traps.c:396 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC34") [flags 0x82] <string_cst 0x1127c100>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC34") [flags 0x82] <string_cst 0x1127c100>)
        (nil)))

(insn 125 124 126 16 arch/arm/kernel/traps.c:396 (set (reg:SI 1 r1)
        (reg/v/f:SI 147 [ regs ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 147 [ regs ])
        (nil)))

(insn 126 125 127 16 arch/arm/kernel/traps.c:396 (set (reg:SI 2 r2)
        (reg/f:SI 172)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 172)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -128 [0xffffffffffffff80]))
            (nil))))

(insn 127 126 128 16 arch/arm/kernel/traps.c:396 (set (reg:SI 3 r3)
        (reg:SI 169)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 169)
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(call_insn 128 127 134 16 arch/arm/kernel/traps.c:396 (parallel [
            (call (mem:SI (symbol_ref:SI ("arm_notify_die") [flags 0x3] <function_decl 0x512e8d00 arm_notify_die>) [0 S4 A32])
                (const_int 8 [0x8]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_DEAD (reg:SI 0 r0)
                    (expr_list:REG_EH_REGION (const_int 0 [0x0])
                        (nil))))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 16 -> ( 17)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(51)
6, 9, 22, 28, 29, 30, 31, 39, 40, 45, 46, 95, 97, 107, 108, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548


;; Succ edge  17 [100.0%]  (fallthru)

;; Start of basic block ( 16 15) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u155(11){ }u156(13){ }u157(25){ }u158(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(51)
6, 9, 22, 28, 29, 30, 31, 39, 40, 45, 46, 95, 97, 107, 108, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  16 [100.0%]  (fallthru)
;; Pred edge  15 [87.5%] 
(code_label 134 128 137 17 156 "" [1 uses])

(note 137 134 0 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 17 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(51)
6, 9, 22, 28, 29, 30, 31, 39, 40, 45, 46, 95, 97, 107, 108, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns
