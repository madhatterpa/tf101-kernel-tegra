
;; Function module_arch_cleanup (module_arch_cleanup)[0:994]



try_optimize_cfg iteration 1



module_arch_cleanup

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;;  exit block uses 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 3[r3] 4[r4] 5[r5] 6[r6] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={3d,2u} r1={2d} r2={2d} r3={3d,2u} r4={3d,4u} r5={3d,4u} r6={1d,2u} r12={1d} r13={2d,8u} r14={2d,2u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={3d,2u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 161{135d,26u,0e} in 13{12 regular + 1 call} insns.
(note 32 0 35 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  def 	 4 [r4] 5 [r5] 13 [sp]
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  gen 	 4 [r4] 5 [r5] 13 [sp]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 35 32 84 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn/f 84 35 85 2 arch/arm/kernel/module.c:337 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 4 r4)
                    ] 2))
            (use (reg:SI 5 r5))
            (use (reg:SI 6 r6))
            (use (reg:SI 14 lr))
        ]) -1 (expr_list:REG_DEAD (reg:SI 5 r5)
        (expr_list:REG_DEAD (reg:SI 4 r4)
            (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                        (set/f (reg/f:SI 13 sp)
                            (plus:SI (reg/f:SI 13 sp)
                                (const_int -16 [0xfffffffffffffff0])))
                        (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                            (reg:SI 4 r4))
                        (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                    (const_int 4 [0x4])) [0 S4 A32])
                            (reg:SI 5 r5))
                        (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                    (const_int 8 [0x8])) [0 S4 A32])
                            (reg:SI 6 r6))
                        (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                    (const_int 12 [0xc])) [0 S4 A32])
                            (reg:SI 14 lr))
                    ])
                (nil)))))

(note 85 84 34 2 NOTE_INSN_PROLOGUE_END)

(note 34 85 33 2 NOTE_INSN_FUNCTION_BEG)

(insn 33 34 38 2 arch/arm/kernel/module.c:337 (set (reg:SI 5 r5 [orig:164 ivtmp.305 ] [164])
        (reg:SI 0 r0 [ mod ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ mod ])
        (nil)))

(insn 38 33 50 2 arch/arm/kernel/module.c:341 (set (reg/v:SI 4 r4 [orig:165 i ] [165])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))
;; End of basic block 2 -> ( 3)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]


;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 5 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 3 [r3] 4 [r4] 5 [r5] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 3 [r3] 4 [r4] 5 [r5] 24 [cc]
;; live  kill	

;; Pred edge  5 [80.0%]  (dfs_back)
;; Pred edge  2 [100.0%]  (fallthru)
(code_label 50 38 39 3 3 "" [1 uses])

(note 39 50 40 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 40 39 48 3 arch/arm/kernel/module.c:342 (set (reg/f:SI 3 r3 [orig:166 D.18763 ] [166])
        (mem/s/f/j:SI (plus:SI (reg:SI 5 r5 [orig:164 ivtmp.305 ] [164])
                (const_int 224 [0xe0])) [0 <variable>.arch.unwind S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 48 40 49 3 arch/arm/kernel/module.c:341 (set (reg/v:SI 4 r4 [orig:165 i ] [165])
        (plus:SI (reg/v:SI 4 r4 [orig:165 i ] [165])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 49 48 44 3 arch/arm/kernel/module.c:341 (set (reg:SI 5 r5 [orig:164 ivtmp.305 ] [164])
        (plus:SI (reg:SI 5 r5 [orig:164 ivtmp.305 ] [164])
            (const_int 4 [0x4]))) 4 {*arm_addsi3} (nil))

(insn 44 49 41 3 arch/arm/kernel/module.c:343 (set (reg:SI 0 r0)
        (reg/f:SI 3 r3 [orig:166 D.18763 ] [166])) 167 {*arm_movsi_insn} (nil))

(insn 41 44 42 3 arch/arm/kernel/module.c:342 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 3 r3 [orig:166 D.18763 ] [166])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/f:SI 3 r3 [orig:166 D.18763 ] [166])
        (nil)))

(jump_insn 42 41 43 3 arch/arm/kernel/module.c:342 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 46)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3017 [0xbc9])
            (nil))))
;; End of basic block 3 -> ( 4 5)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]


;; Succ edge  4 [69.8%]  (fallthru)
;; Succ edge  5 [30.2%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  gen 	
;; live  kill	 14 [lr]

;; Pred edge  3 [69.8%]  (fallthru)
(note 43 42 45 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(call_insn 45 43 46 4 arch/arm/kernel/module.c:343 (parallel [
            (call (mem:SI (symbol_ref:SI ("unwind_table_del") [flags 0x41] <function_decl 0x11169e80 unwind_table_del>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 4 -> ( 5)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp]


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 3 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  3 [30.2%] 
;; Pred edge  4 [100.0%]  (fallthru)
(code_label 46 45 47 5 2 "" [1 uses])

(note 47 46 51 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 51 47 52 5 arch/arm/kernel/module.c:341 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 4 r4 [orig:165 i ] [165])
            (const_int 5 [0x5]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 52 51 88 5 arch/arm/kernel/module.c:341 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 50)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7999 [0x1f3f])
            (nil))))
;; End of basic block 5 -> ( 3 6)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]


;; Succ edge  3 [80.0%]  (dfs_back)
;; Succ edge  6 [20.0%]  (fallthru,loop_exit)

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  5 [20.0%]  (fallthru,loop_exit)
(note 88 52 86 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note 86 88 87 6 NOTE_INSN_EPILOGUE_BEG)

(jump_insn 87 86 89 6 arch/arm/kernel/module.c:345 (return) -1 (nil))
;; End of basic block 6 -> ( 1)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%] 

(barrier 89 87 82)

(note 82 89 83 NOTE_INSN_DELETED)

(note 83 82 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function module_finalize (module_finalize)[0:993]



try_optimize_cfg iteration 1

Forwarding edge 34->35 to 39 failed.


module_finalize

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 7[r7] 8[r8] 9[r9] 10[sl] 12[ip] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={31d,32u} r1={30d,16u} r2={18d,6u} r3={24d,11u} r4={3d,13u,1d} r5={6d,23u,1d} r6={3d,9u} r7={3d,4u} r8={4d,15u} r9={3d,4u} r10={3d,4u} r12={16d,2u} r13={3d,68u,1d} r14={15d,2u} r15={14d} r16={14d} r17={14d} r18={14d} r19={14d} r20={14d} r21={14d} r22={14d} r23={14d} r24={33d,19u} r27={14d} r28={14d} r29={14d} r30={14d} r31={14d} r32={14d} r33={14d} r34={14d} r35={14d} r36={14d} r37={14d} r38={14d} r39={14d} r40={14d} r41={14d} r42={14d} r43={14d} r44={14d} r45={14d} r46={14d} r47={14d} r48={14d} r49={14d} r50={14d} r51={14d} r52={14d} r53={14d} r54={14d} r55={14d} r56={14d} r57={14d} r58={14d} r59={14d} r60={14d} r61={14d} r62={14d} r63={14d} r64={14d} r65={14d} r66={14d} r67={14d} r68={14d} r69={14d} r70={14d} r71={14d} r72={14d} r73={14d} r74={14d} r75={14d} r76={14d} r77={14d} r78={14d} r79={14d} r80={14d} r81={14d} r82={14d} r83={14d} r84={14d} r85={14d} r86={14d} r87={14d} r88={14d} r89={14d} r90={14d} r91={14d} r92={14d} r93={14d} r94={14d} r95={14d} r96={14d} r97={14d} r98={14d} r99={14d} r100={14d} r101={14d} r102={14d} r103={14d} r104={14d} r105={14d} r106={14d} r107={14d} r108={14d} r109={14d} r110={14d} r111={14d} r112={14d} r113={14d} r114={14d} r115={14d} r116={14d} r117={14d} r118={14d} r119={14d} r120={14d} r121={14d} r122={14d} r123={14d} r124={14d} r125={14d} r126={14d} r127={14d} 
;;    total ref usage 1966{1735d,228u,3e} in 142{128 regular + 14 call} insns.
(note 7 0 12 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 12 [ip] 13 [sp]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 12 7 317 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn/f 317 12 318 2 arch/arm/kernel/module.c:274 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 4 r4)
                    ] 2))
            (use (reg:SI 5 r5))
            (use (reg:SI 6 r6))
            (use (reg:SI 7 r7))
            (use (reg:SI 8 r8))
            (use (reg:SI 9 r9))
            (use (reg:SI 10 sl))
            (use (reg:SI 14 lr))
        ]) -1 (expr_list:REG_DEAD (reg:SI 14 lr)
        (expr_list:REG_DEAD (reg:SI 10 sl)
            (expr_list:REG_DEAD (reg:SI 9 r9)
                (expr_list:REG_DEAD (reg:SI 8 r8)
                    (expr_list:REG_DEAD (reg:SI 7 r7)
                        (expr_list:REG_DEAD (reg:SI 6 r6)
                            (expr_list:REG_DEAD (reg:SI 5 r5)
                                (expr_list:REG_DEAD (reg:SI 4 r4)
                                    (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                                                (set/f (reg/f:SI 13 sp)
                                                    (plus:SI (reg/f:SI 13 sp)
                                                        (const_int -32 [0xffffffffffffffe0])))
                                                (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                                                    (reg:SI 4 r4))
                                                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                            (const_int 4 [0x4])) [0 S4 A32])
                                                    (reg:SI 5 r5))
                                                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                            (const_int 8 [0x8])) [0 S4 A32])
                                                    (reg:SI 6 r6))
                                                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                            (const_int 12 [0xc])) [0 S4 A32])
                                                    (reg:SI 7 r7))
                                                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                            (const_int 16 [0x10])) [0 S4 A32])
                                                    (reg:SI 8 r8))
                                                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                            (const_int 20 [0x14])) [0 S4 A32])
                                                    (reg:SI 9 r9))
                                                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                            (const_int 24 [0x18])) [0 S4 A32])
                                                    (reg:SI 10 sl))
                                                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                            (const_int 28 [0x1c])) [0 S4 A32])
                                                    (reg:SI 14 lr))
                                            ])
                                        (nil)))))))))))

(insn/f 318 317 319 2 arch/arm/kernel/module.c:274 (set (reg/f:SI 13 sp)
        (plus:SI (reg/f:SI 13 sp)
            (const_int -40 [0xffffffffffffffd8]))) -1 (nil))

(note 319 318 11 2 NOTE_INSN_PROLOGUE_END)

(note 11 319 17 2 NOTE_INSN_FUNCTION_BEG)

(note 17 11 23 2 NOTE_INSN_DELETED)

(note 23 17 25 2 NOTE_INSN_DELETED)

(note 25 23 8 2 NOTE_INSN_DELETED)

(insn 8 25 9 2 arch/arm/kernel/module.c:274 (set (reg/v/f:SI 6 r6 [orig:165 hdr ] [165])
        (reg:SI 0 r0 [ hdr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ hdr ])
        (nil)))

(insn 9 8 16 2 arch/arm/kernel/module.c:274 (set (reg/v/f:SI 4 r4 [orig:166 sechdrs ] [166])
        (reg:SI 1 r1 [ sechdrs ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ sechdrs ])
        (nil)))

(insn 16 9 26 2 arch/arm/kernel/module.c:277 (set (reg:SI 3 r3 [170])
        (const_int 40 [0x28])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 40 [0x28])
        (nil)))

(insn 26 16 15 2 arch/arm/kernel/module.c:282 discrim 1 (set (reg:SI 0 r0)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn 15 26 27 2 arch/arm/kernel/module.c:277 (set (reg:SI 12 ip [orig:168 <variable>.e_shstrndx ] [168])
        (zero_extend:SI (mem/s/j:HI (plus:SI (reg/v/f:SI 6 r6 [orig:165 hdr ] [165])
                    (const_int 50 [0x32])) [0 <variable>.e_shstrndx+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 27 15 21 2 arch/arm/kernel/module.c:282 discrim 1 (set (reg:SI 1 r1)
        (reg:SI 3 r3 [170])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 40 [0x28])
        (nil)))

(insn 21 27 10 2 arch/arm/kernel/module.c:278 (set (reg:SI 9 r9 [orig:173 <variable>.e_shnum ] [173])
        (zero_extend:SI (mem/s/j:HI (plus:SI (reg/v/f:SI 6 r6 [orig:165 hdr ] [165])
                    (const_int 48 [0x30])) [0 <variable>.e_shnum+0 S2 A32]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 10 21 29 2 arch/arm/kernel/module.c:274 (set (reg/v/f:SI 7 r7 [orig:167 mod ] [167])
        (reg:SI 2 r2 [ mod ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ mod ])
        (nil)))

(insn 29 10 18 2 arch/arm/kernel/module.c:284 (set (reg/v/f:SI 5 r5 [orig:148 s ] [148])
        (reg/v/f:SI 4 r4 [orig:166 sechdrs ] [166])) 167 {*arm_movsi_insn} (nil))

(insn 18 29 24 2 arch/arm/kernel/module.c:277 (set (reg/f:SI 12 ip [171])
        (plus:SI (mult:SI (reg:SI 3 r3 [170])
                (reg:SI 12 ip [orig:168 <variable>.e_shstrndx ] [168]))
            (reg/v/f:SI 4 r4 [orig:166 sechdrs ] [166]))) 40 {*mulsi3addsi_v6} (nil))

(insn 24 18 19 2 arch/arm/kernel/module.c:278 (set (reg/v/f:SI 9 r9 [orig:146 sechdrs_end ] [146])
        (plus:SI (mult:SI (reg:SI 3 r3 [170])
                (reg:SI 9 r9 [orig:173 <variable>.e_shnum ] [173]))
            (reg/v/f:SI 4 r4 [orig:166 sechdrs ] [166]))) 40 {*mulsi3addsi_v6} (expr_list:REG_DEAD (reg:SI 3 r3 [170])
        (nil)))

(insn 19 24 20 2 arch/arm/kernel/module.c:277 (set (reg:SI 10 sl [orig:172 <variable>.sh_offset ] [172])
        (mem/s/j:SI (plus:SI (reg/f:SI 12 ip [171])
                (const_int 16 [0x10])) [0 <variable>.sh_offset+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 12 ip [171])
        (nil)))

(insn 20 19 28 2 arch/arm/kernel/module.c:277 (set (reg/v/f:SI 10 sl [orig:147 secstrs ] [147])
        (plus:SI (reg/v/f:SI 6 r6 [orig:165 hdr ] [165])
            (reg:SI 10 sl [orig:172 <variable>.sh_offset ] [172]))) 4 {*arm_addsi3} (nil))

(call_insn 28 20 290 2 arch/arm/kernel/module.c:282 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("__memzero") [flags 0x41] <function_decl 0x10bb1200 __memzero>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(jump_insn 290 28 291 2 arch/arm/kernel/module.c:284 (set (pc)
        (label_ref 179)) 242 {*arm_jump} (nil))
;; End of basic block 2 -> ( 25)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  25 [100.0%] 

(barrier 291 290 181)

;; Start of basic block ( 25) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 3 [r3] 8 [r8] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 3 [r3] 8 [r8] 24 [cc]
;; live  kill	

;; Pred edge  25 [91.0%] 
(code_label 181 291 32 3 19 "" [1 uses])

(note 32 181 35 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 35 32 34 3 NOTE_INSN_DELETED)

(insn 34 35 33 3 arch/arm/kernel/module.c:287 (set (reg:SI 3 r3 [orig:178 <variable>.sh_flags ] [178])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:148 s ] [148])
                (const_int 8 [0x8])) [0 <variable>.sh_flags+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:148 s ] [148])
                (const_int 8 [0x8])) [0 <variable>.sh_flags+0 S4 A32])
        (nil)))

(insn 33 34 36 3 arch/arm/kernel/module.c:285 (set (reg:SI 8 r8 [orig:162 D.18688 ] [162])
        (mem/s/j:SI (reg/v/f:SI 5 r5 [orig:148 s ] [148]) [0 <variable>.sh_name+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 36 33 37 3 arch/arm/kernel/module.c:287 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 3 r3 [orig:178 <variable>.sh_flags ] [178])
                (const_int 1 [0x1])
                (const_int 1 [0x1]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg:SI 3 r3 [orig:178 <variable>.sh_flags ] [178])
        (nil)))

(jump_insn 37 36 38 3 arch/arm/kernel/module.c:287 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 176)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 3 -> ( 24 4)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  24 [50.0%] 
;; Succ edge  4 [50.0%]  (fallthru)

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; lr  use 	 8 [r8] 10 [sl] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 8 [r8] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 8 [r8] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  3 [50.0%]  (fallthru)
(note 38 37 44 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 44 38 39 4 NOTE_INSN_DELETED)

(insn 39 44 281 4 arch/arm/kernel/module.c:285 (set (reg/v/f:SI 8 r8 [orig:145 secname ] [145])
        (plus:SI (reg/v/f:SI 10 sl [orig:147 secstrs ] [147])
            (reg:SI 8 r8 [orig:162 D.18688 ] [162]))) 4 {*arm_addsi3} (nil))

(insn 281 39 42 4 arch/arm/kernel/module.c:290 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x111ac7b0>)) 167 {*arm_movsi_insn} (nil))

(insn 42 281 43 4 arch/arm/kernel/module.c:290 (set (reg:SI 1 r1)
        (reg/v/f:SI 8 r8 [orig:145 secname ] [145])) 167 {*arm_movsi_insn} (nil))

(call_insn/i 43 42 46 4 arch/arm/kernel/module.c:290 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcmp") [flags 0x41] <function_decl 0x51157680 strcmp>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 46 43 47 4 arch/arm/kernel/module.c:290 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(jump_insn 47 46 48 4 arch/arm/kernel/module.c:290 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 52)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  5 [50.0%]  (fallthru)
;; Succ edge  6 [50.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	
;; live  kill	

;; Pred edge  4 [50.0%]  (fallthru)
(note 48 47 49 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 49 48 292 5 arch/arm/kernel/module.c:291 (set (mem/s/f/j:SI (reg/f:SI 13 sp) [0 <variable>.unw_sec+0 S4 A64])
        (reg/v/f:SI 5 r5 [orig:148 s ] [148])) 167 {*arm_movsi_insn} (nil))

(jump_insn 292 49 293 5 (set (pc)
        (label_ref 176)) 242 {*arm_jump} (nil))
;; End of basic block 5 -> ( 24)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  24 [100.0%] 

(barrier 293 292 52)

;; Start of basic block ( 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; lr  use 	 8 [r8] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  4 [50.0%] 
(code_label 52 293 53 6 10 "" [1 uses])

(note 53 52 58 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note 58 53 282 6 NOTE_INSN_DELETED)

(insn 282 58 56 6 arch/arm/kernel/module.c:292 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x111b7d40>)) 167 {*arm_movsi_insn} (nil))

(insn 56 282 57 6 arch/arm/kernel/module.c:292 (set (reg:SI 1 r1)
        (reg/v/f:SI 8 r8 [orig:145 secname ] [145])) 167 {*arm_movsi_insn} (nil))

(call_insn/i 57 56 60 6 arch/arm/kernel/module.c:292 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcmp") [flags 0x41] <function_decl 0x51157680 strcmp>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 60 57 61 6 arch/arm/kernel/module.c:292 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(jump_insn 61 60 62 6 arch/arm/kernel/module.c:292 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 66)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 6 -> ( 7 8)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  7 [50.0%]  (fallthru)
;; Succ edge  8 [50.0%] 

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	
;; live  kill	

;; Pred edge  6 [50.0%]  (fallthru)
(note 62 61 63 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 63 62 294 7 arch/arm/kernel/module.c:293 (set (mem/s/f/j:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [0 <variable>.unw_sec+0 S4 A64])
        (reg/v/f:SI 5 r5 [orig:148 s ] [148])) 167 {*arm_movsi_insn} (nil))

(jump_insn 294 63 295 7 (set (pc)
        (label_ref 176)) 242 {*arm_jump} (nil))
;; End of basic block 7 -> ( 24)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  24 [100.0%] 

(barrier 295 294 66)

;; Start of basic block ( 6) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; lr  use 	 8 [r8] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  6 [50.0%] 
(code_label 66 295 67 8 11 "" [1 uses])

(note 67 66 72 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(note 72 67 283 8 NOTE_INSN_DELETED)

(insn 283 72 70 8 arch/arm/kernel/module.c:294 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x111ced50>)) 167 {*arm_movsi_insn} (nil))

(insn 70 283 71 8 arch/arm/kernel/module.c:294 (set (reg:SI 1 r1)
        (reg/v/f:SI 8 r8 [orig:145 secname ] [145])) 167 {*arm_movsi_insn} (nil))

(call_insn/i 71 70 74 8 arch/arm/kernel/module.c:294 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcmp") [flags 0x41] <function_decl 0x51157680 strcmp>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 74 71 75 8 arch/arm/kernel/module.c:294 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(jump_insn 75 74 76 8 arch/arm/kernel/module.c:294 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 80)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 8 -> ( 9 10)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  9 [50.0%]  (fallthru)
;; Succ edge  10 [50.0%] 

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	
;; live  kill	

;; Pred edge  8 [50.0%]  (fallthru)
(note 76 75 77 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 77 76 296 9 arch/arm/kernel/module.c:295 (set (mem/s/f/j:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 16 [0x10])) [0 <variable>.unw_sec+0 S4 A64])
        (reg/v/f:SI 5 r5 [orig:148 s ] [148])) 167 {*arm_movsi_insn} (nil))

(jump_insn 296 77 297 9 (set (pc)
        (label_ref 176)) 242 {*arm_jump} (nil))
;; End of basic block 9 -> ( 24)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  24 [100.0%] 

(barrier 297 296 80)

;; Start of basic block ( 8) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; lr  use 	 8 [r8] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  8 [50.0%] 
(code_label 80 297 81 10 12 "" [1 uses])

(note 81 80 86 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(note 86 81 284 10 NOTE_INSN_DELETED)

(insn 284 86 84 10 arch/arm/kernel/module.c:296 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x111ceea0>)) 167 {*arm_movsi_insn} (nil))

(insn 84 284 85 10 arch/arm/kernel/module.c:296 (set (reg:SI 1 r1)
        (reg/v/f:SI 8 r8 [orig:145 secname ] [145])) 167 {*arm_movsi_insn} (nil))

(call_insn/i 85 84 88 10 arch/arm/kernel/module.c:296 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcmp") [flags 0x41] <function_decl 0x51157680 strcmp>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 88 85 89 10 arch/arm/kernel/module.c:296 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(jump_insn 89 88 90 10 arch/arm/kernel/module.c:296 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 94)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 10 -> ( 11 12)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  11 [50.0%]  (fallthru)
;; Succ edge  12 [50.0%] 

;; Start of basic block ( 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	
;; live  kill	

;; Pred edge  10 [50.0%]  (fallthru)
(note 90 89 91 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 91 90 298 11 arch/arm/kernel/module.c:297 (set (mem/s/f/j:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 24 [0x18])) [0 <variable>.unw_sec+0 S4 A64])
        (reg/v/f:SI 5 r5 [orig:148 s ] [148])) 167 {*arm_movsi_insn} (nil))

(jump_insn 298 91 299 11 (set (pc)
        (label_ref 176)) 242 {*arm_jump} (nil))
;; End of basic block 11 -> ( 24)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  24 [100.0%] 

(barrier 299 298 94)

;; Start of basic block ( 10) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; lr  use 	 8 [r8] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  10 [50.0%] 
(code_label 94 299 95 12 13 "" [1 uses])

(note 95 94 100 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(note 100 95 285 12 NOTE_INSN_DELETED)

(insn 285 100 98 12 arch/arm/kernel/module.c:298 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x111ab440>)) 167 {*arm_movsi_insn} (nil))

(insn 98 285 99 12 arch/arm/kernel/module.c:298 (set (reg:SI 1 r1)
        (reg/v/f:SI 8 r8 [orig:145 secname ] [145])) 167 {*arm_movsi_insn} (nil))

(call_insn/i 99 98 102 12 arch/arm/kernel/module.c:298 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcmp") [flags 0x41] <function_decl 0x51157680 strcmp>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 102 99 103 12 arch/arm/kernel/module.c:298 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(jump_insn 103 102 104 12 arch/arm/kernel/module.c:298 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 108)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 12 -> ( 13 14)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  13 [50.0%]  (fallthru)
;; Succ edge  14 [50.0%] 

;; Start of basic block ( 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	
;; live  kill	

;; Pred edge  12 [50.0%]  (fallthru)
(note 104 103 105 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 105 104 300 13 arch/arm/kernel/module.c:299 (set (mem/s/f/j:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 32 [0x20])) [0 <variable>.unw_sec+0 S4 A64])
        (reg/v/f:SI 5 r5 [orig:148 s ] [148])) 167 {*arm_movsi_insn} (nil))

(jump_insn 300 105 301 13 (set (pc)
        (label_ref 176)) 242 {*arm_jump} (nil))
;; End of basic block 13 -> ( 24)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  24 [100.0%] 

(barrier 301 300 108)

;; Start of basic block ( 12) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; lr  use 	 8 [r8] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  12 [50.0%] 
(code_label 108 301 109 14 14 "" [1 uses])

(note 109 108 114 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(note 114 109 286 14 NOTE_INSN_DELETED)

(insn 286 114 112 14 arch/arm/kernel/module.c:300 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC5") [flags 0x82] <string_cst 0x111d9510>)) 167 {*arm_movsi_insn} (nil))

(insn 112 286 113 14 arch/arm/kernel/module.c:300 (set (reg:SI 1 r1)
        (reg/v/f:SI 8 r8 [orig:145 secname ] [145])) 167 {*arm_movsi_insn} (nil))

(call_insn/i 113 112 116 14 arch/arm/kernel/module.c:300 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcmp") [flags 0x41] <function_decl 0x51157680 strcmp>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 116 113 117 14 arch/arm/kernel/module.c:300 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(jump_insn 117 116 118 14 arch/arm/kernel/module.c:300 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 122)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 14 -> ( 15 16)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  15 [50.0%]  (fallthru)
;; Succ edge  16 [50.0%] 

;; Start of basic block ( 14) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	
;; live  kill	

;; Pred edge  14 [50.0%]  (fallthru)
(note 118 117 119 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 119 118 302 15 arch/arm/kernel/module.c:301 (set (mem/s/f/j:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 <variable>.txt_sec+0 S4 A32])
        (reg/v/f:SI 5 r5 [orig:148 s ] [148])) 167 {*arm_movsi_insn} (nil))

(jump_insn 302 119 303 15 (set (pc)
        (label_ref 176)) 242 {*arm_jump} (nil))
;; End of basic block 15 -> ( 24)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  24 [100.0%] 

(barrier 303 302 122)

;; Start of basic block ( 14) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; lr  use 	 8 [r8] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  14 [50.0%] 
(code_label 122 303 123 16 15 "" [1 uses])

(note 123 122 128 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(note 128 123 287 16 NOTE_INSN_DELETED)

(insn 287 128 126 16 arch/arm/kernel/module.c:302 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC6") [flags 0x82] <string_cst 0x111d9870>)) 167 {*arm_movsi_insn} (nil))

(insn 126 287 127 16 arch/arm/kernel/module.c:302 (set (reg:SI 1 r1)
        (reg/v/f:SI 8 r8 [orig:145 secname ] [145])) 167 {*arm_movsi_insn} (nil))

(call_insn/i 127 126 130 16 arch/arm/kernel/module.c:302 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcmp") [flags 0x41] <function_decl 0x51157680 strcmp>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 130 127 131 16 arch/arm/kernel/module.c:302 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(jump_insn 131 130 132 16 arch/arm/kernel/module.c:302 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 136)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 16 -> ( 17 18)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  17 [50.0%]  (fallthru)
;; Succ edge  18 [50.0%] 

;; Start of basic block ( 16) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	
;; live  kill	

;; Pred edge  16 [50.0%]  (fallthru)
(note 132 131 133 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 133 132 304 17 arch/arm/kernel/module.c:303 (set (mem/s/f/j:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 12 [0xc])) [0 <variable>.txt_sec+0 S4 A32])
        (reg/v/f:SI 5 r5 [orig:148 s ] [148])) 167 {*arm_movsi_insn} (nil))

(jump_insn 304 133 305 17 (set (pc)
        (label_ref 176)) 242 {*arm_jump} (nil))
;; End of basic block 17 -> ( 24)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  24 [100.0%] 

(barrier 305 304 136)

;; Start of basic block ( 16) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; lr  use 	 8 [r8] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  16 [50.0%] 
(code_label 136 305 137 18 16 "" [1 uses])

(note 137 136 142 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(note 142 137 288 18 NOTE_INSN_DELETED)

(insn 288 142 140 18 arch/arm/kernel/module.c:304 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC7") [flags 0x82] <string_cst 0x111cfcc0>)) 167 {*arm_movsi_insn} (nil))

(insn 140 288 141 18 arch/arm/kernel/module.c:304 (set (reg:SI 1 r1)
        (reg/v/f:SI 8 r8 [orig:145 secname ] [145])) 167 {*arm_movsi_insn} (nil))

(call_insn/i 141 140 144 18 arch/arm/kernel/module.c:304 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcmp") [flags 0x41] <function_decl 0x51157680 strcmp>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 144 141 145 18 arch/arm/kernel/module.c:304 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(jump_insn 145 144 146 18 arch/arm/kernel/module.c:304 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 150)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 18 -> ( 19 20)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  19 [50.0%]  (fallthru)
;; Succ edge  20 [50.0%] 

;; Start of basic block ( 18) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	
;; live  kill	

;; Pred edge  18 [50.0%]  (fallthru)
(note 146 145 147 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 147 146 306 19 arch/arm/kernel/module.c:305 (set (mem/s/f/j:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 20 [0x14])) [0 <variable>.txt_sec+0 S4 A32])
        (reg/v/f:SI 5 r5 [orig:148 s ] [148])) 167 {*arm_movsi_insn} (nil))

(jump_insn 306 147 307 19 (set (pc)
        (label_ref 176)) 242 {*arm_jump} (nil))
;; End of basic block 19 -> ( 24)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  24 [100.0%] 

(barrier 307 306 150)

;; Start of basic block ( 18) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; lr  use 	 8 [r8] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  18 [50.0%] 
(code_label 150 307 151 20 17 "" [1 uses])

(note 151 150 156 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(note 156 151 289 20 NOTE_INSN_DELETED)

(insn 289 156 154 20 arch/arm/kernel/module.c:306 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC8") [flags 0x82] <string_cst 0x111d9f00>)) 167 {*arm_movsi_insn} (nil))

(insn 154 289 155 20 arch/arm/kernel/module.c:306 (set (reg:SI 1 r1)
        (reg/v/f:SI 8 r8 [orig:145 secname ] [145])) 167 {*arm_movsi_insn} (nil))

(call_insn/i 155 154 158 20 arch/arm/kernel/module.c:306 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcmp") [flags 0x41] <function_decl 0x51157680 strcmp>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 158 155 159 20 arch/arm/kernel/module.c:306 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(jump_insn 159 158 160 20 arch/arm/kernel/module.c:306 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 164)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 20 -> ( 21 22)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  21 [50.0%]  (fallthru)
;; Succ edge  22 [50.0%] 

;; Start of basic block ( 20) -> 21
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	
;; live  kill	

;; Pred edge  20 [50.0%]  (fallthru)
(note 160 159 161 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn 161 160 308 21 arch/arm/kernel/module.c:307 (set (mem/s/f/j:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 28 [0x1c])) [0 <variable>.txt_sec+0 S4 A32])
        (reg/v/f:SI 5 r5 [orig:148 s ] [148])) 167 {*arm_movsi_insn} (nil))

(jump_insn 308 161 309 21 (set (pc)
        (label_ref 176)) 242 {*arm_jump} (nil))
;; End of basic block 21 -> ( 24)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  24 [100.0%] 

(barrier 309 308 164)

;; Start of basic block ( 20) -> 22
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; lr  use 	 8 [r8] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  20 [50.0%] 
(code_label 164 309 165 22 18 "" [1 uses])

(note 165 164 170 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(note 170 165 168 22 NOTE_INSN_DELETED)

(insn 168 170 167 22 arch/arm/kernel/module.c:308 (set (reg:SI 1 r1)
        (reg/v/f:SI 8 r8 [orig:145 secname ] [145])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 8 r8 [orig:145 secname ] [145])
        (nil)))

(insn 167 168 169 22 arch/arm/kernel/module.c:308 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC9") [flags 0x82] <string_cst 0x111d99c0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC9") [flags 0x82] <string_cst 0x111d99c0>)
        (nil)))

(call_insn/i 169 167 172 22 arch/arm/kernel/module.c:308 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcmp") [flags 0x41] <function_decl 0x51157680 strcmp>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 172 169 173 22 arch/arm/kernel/module.c:308 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(jump_insn 173 172 174 22 arch/arm/kernel/module.c:308 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 176)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 22 -> ( 23 24)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  23 [50.0%]  (fallthru)
;; Succ edge  24 [50.0%] 

;; Start of basic block ( 22) -> 23
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	
;; live  kill	

;; Pred edge  22 [50.0%]  (fallthru)
(note 174 173 175 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(insn 175 174 176 23 arch/arm/kernel/module.c:309 (set (mem/s/f/j:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 36 [0x24])) [0 <variable>.txt_sec+0 S4 A32])
        (reg/v/f:SI 5 r5 [orig:148 s ] [148])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 23 -> ( 24)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  24 [100.0%]  (fallthru)

;; Start of basic block ( 3 23 5 7 9 11 13 15 17 19 22 21) -> 24
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 5 [r5]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 5 [r5]
;; live  kill	

;; Pred edge  3 [50.0%] 
;; Pred edge  23 [100.0%]  (fallthru)
;; Pred edge  5 [100.0%] 
;; Pred edge  7 [100.0%] 
;; Pred edge  9 [100.0%] 
;; Pred edge  11 [100.0%] 
;; Pred edge  13 [100.0%] 
;; Pred edge  15 [100.0%] 
;; Pred edge  17 [100.0%] 
;; Pred edge  19 [100.0%] 
;; Pred edge  22 [50.0%] 
;; Pred edge  21 [100.0%] 
(code_label 176 175 177 24 9 "" [11 uses])

(note 177 176 178 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(insn 178 177 179 24 arch/arm/kernel/module.c:284 (set (reg/v/f:SI 5 r5 [orig:148 s ] [148])
        (plus:SI (reg/v/f:SI 5 r5 [orig:148 s ] [148])
            (const_int 40 [0x28]))) 4 {*arm_addsi3} (nil))
;; End of basic block 24 -> ( 25)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  25 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 24 2) -> 25
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 5 [r5] 9 [r9] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  24 [100.0%]  (fallthru,dfs_back)
;; Pred edge  2 [100.0%] 
(code_label 179 178 180 25 8 "" [1 uses])

(note 180 179 182 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(insn 182 180 183 25 arch/arm/kernel/module.c:284 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 5 r5 [orig:148 s ] [148])
            (reg/v/f:SI 9 r9 [orig:146 sechdrs_end ] [146]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 183 182 184 25 arch/arm/kernel/module.c:284 discrim 1 (set (pc)
        (if_then_else (ltu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 181)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil))))
;; End of basic block 25 -> ( 3 26)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  3 [91.0%] 
;; Succ edge  26 [9.0%]  (fallthru,loop_exit)

;; Start of basic block ( 25) -> 26
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 5 [r5] 8 [r8]
;; live  in  	 4 [r4] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 5 [r5] 8 [r8]
;; live  kill	

;; Pred edge  25 [9.0%]  (fallthru,loop_exit)
(note 184 183 186 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(insn 186 184 188 26 arch/arm/kernel/module.c:284 discrim 1 (set (reg:SI 5 r5 [orig:141 ivtmp.359 ] [141])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 188 186 210 26 arch/arm/kernel/module.c:313 (set (reg/f:SI 8 r8 [219])
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (plus:SI (reg/f:SI 13 sp)
            (const_int 0 [0x0]))
        (nil)))
;; End of basic block 26 -> ( 27)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  27 [100.0%]  (fallthru)

;; Start of basic block ( 30 26) -> 27
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 5 [r5] 8 [r8] 13 [sp]
;; lr  def 	 0 [r0] 3 [r3] 5 [r5] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 0 [r0] 3 [r3] 5 [r5] 24 [cc]
;; live  kill	

;; Pred edge  30 [80.0%]  (dfs_back)
;; Pred edge  26 [100.0%]  (fallthru)
(code_label 210 188 187 27 21 "" [1 uses])

(note 187 210 194 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(insn 194 187 189 27 arch/arm/kernel/module.c:313 discrim 1 (set (reg:SI 3 r3 [201])
        (plus:SI (reg/f:SI 8 r8 [219])
            (reg:SI 5 r5 [orig:141 ivtmp.359 ] [141]))) 4 {*arm_addsi3} (nil))

(insn 189 194 208 27 arch/arm/kernel/module.c:313 (set (reg/f:SI 0 r0 [orig:151 D.18733 ] [151])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 8 r8 [219])
                (reg:SI 5 r5 [orig:141 ivtmp.359 ] [141])) [0 <variable>.unw_sec+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 208 189 190 27 arch/arm/kernel/module.c:314 (set (reg:SI 5 r5 [orig:141 ivtmp.359 ] [141])
        (plus:SI (reg:SI 5 r5 [orig:141 ivtmp.359 ] [141])
            (const_int 8 [0x8]))) 4 {*arm_addsi3} (nil))

(insn 190 208 191 27 arch/arm/kernel/module.c:313 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 0 r0 [orig:151 D.18733 ] [151])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 191 190 192 27 arch/arm/kernel/module.c:313 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 206)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
            (nil))))
;; End of basic block 27 -> ( 28 30)
;; lr  out 	 0 [r0] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  28 [85.0%]  (fallthru)
;; Succ edge  30 [15.0%] 

;; Start of basic block ( 27) -> 28
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 2 [r2] 24 [cc]
;; live  in  	 0 [r0] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 2 [r2] 24 [cc]
;; live  kill	

;; Pred edge  27 [85.0%]  (fallthru)
(note 192 191 195 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(insn 195 192 196 28 arch/arm/kernel/module.c:313 discrim 1 (set (reg/f:SI 2 r2 [orig:150 D.18736 ] [150])
        (mem/s/f/j:SI (plus:SI (reg:SI 3 r3 [201])
                (const_int 4 [0x4])) [0 <variable>.txt_sec+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [201])
        (nil)))

(insn 196 195 197 28 arch/arm/kernel/module.c:313 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 2 r2 [orig:150 D.18736 ] [150])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 197 196 198 28 arch/arm/kernel/module.c:313 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 206)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3017 [0xbc9])
            (nil))))
;; End of basic block 28 -> ( 29 30)
;; lr  out 	 0 [r0] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  29 [69.8%]  (fallthru)
;; Succ edge  30 [30.2%] 

;; Start of basic block ( 28) -> 29
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; lr  use 	 0 [r0] 2 [r2] 7 [r7] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	 14 [lr]

;; Pred edge  28 [69.8%]  (fallthru)
(note 198 197 204 29 [bb 29] NOTE_INSN_BASIC_BLOCK)

(note 204 198 200 29 NOTE_INSN_DELETED)

(insn 200 204 202 29 arch/arm/kernel/module.c:315 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg/f:SI 0 r0 [orig:151 D.18733 ] [151])
                (const_int 20 [0x14])) [0 <variable>.sh_size+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 202 200 199 29 arch/arm/kernel/module.c:315 (set (reg:SI 3 r3)
        (mem/s/j:SI (plus:SI (reg/f:SI 2 r2 [orig:150 D.18736 ] [150])
                (const_int 20 [0x14])) [0 <variable>.sh_size+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 199 202 201 29 arch/arm/kernel/module.c:315 (set (reg:SI 0 r0)
        (mem/s/j:SI (plus:SI (reg/f:SI 0 r0 [orig:151 D.18733 ] [151])
                (const_int 12 [0xc])) [0 <variable>.sh_addr+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 201 199 203 29 arch/arm/kernel/module.c:315 (set (reg:SI 2 r2)
        (mem/s/j:SI (plus:SI (reg/f:SI 2 r2 [orig:150 D.18736 ] [150])
                (const_int 12 [0xc])) [0 <variable>.sh_addr+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn 203 201 205 29 arch/arm/kernel/module.c:315 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("unwind_table_add") [flags 0x41] <function_decl 0x11169e00 unwind_table_add>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 205 203 206 29 arch/arm/kernel/module.c:314 (set (mem/s/f/j:SI (plus:SI (reg:SI 7 r7 [orig:140 ivtmp.364 ] [140])
                (const_int 224 [0xe0])) [0 <variable>.arch.unwind S4 A32])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))
;; End of basic block 29 -> ( 30)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  30 [100.0%]  (fallthru)

;; Start of basic block ( 27 28 29) -> 30
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 5 [r5] 7 [r7] 13 [sp]
;; lr  def 	 7 [r7] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 7 [r7] 24 [cc]
;; live  kill	

;; Pred edge  27 [15.0%] 
;; Pred edge  28 [30.2%] 
;; Pred edge  29 [100.0%]  (fallthru)
(code_label 206 205 207 30 20 "" [2 uses])

(note 207 206 211 30 [bb 30] NOTE_INSN_BASIC_BLOCK)

(insn 211 207 209 30 arch/arm/kernel/module.c:312 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 5 r5 [orig:141 ivtmp.359 ] [141])
            (const_int 40 [0x28]))) 219 {*arm_cmpsi_insn} (nil))

(insn 209 211 212 30 arch/arm/kernel/module.c:314 (set (reg:SI 7 r7 [orig:140 ivtmp.364 ] [140])
        (plus:SI (reg:SI 7 r7 [orig:140 ivtmp.364 ] [140])
            (const_int 4 [0x4]))) 4 {*arm_addsi3} (nil))

(jump_insn 212 209 213 30 arch/arm/kernel/module.c:312 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 210)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 8000 [0x1f40])
            (nil))))
;; End of basic block 30 -> ( 27 31)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  27 [80.0%]  (dfs_back)
;; Succ edge  31 [20.0%]  (fallthru,loop_exit)

;; Start of basic block ( 30) -> 31
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 5 [r5] 6 [r6]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3] 5 [r5] 6 [r6]
;; live  kill	

;; Pred edge  30 [20.0%]  (fallthru,loop_exit)
(note 213 212 216 31 [bb 31] NOTE_INSN_BASIC_BLOCK)

(note 216 213 222 31 NOTE_INSN_DELETED)

(note 222 216 214 31 NOTE_INSN_DELETED)

(insn 214 222 220 31 arch/arm/kernel/module.c:260 (set (reg:SI 3 r3 [orig:202 <variable>.e_shstrndx ] [202])
        (zero_extend:SI (mem/s/j:HI (plus:SI (reg/v/f:SI 6 r6 [orig:165 hdr ] [165])
                    (const_int 50 [0x32])) [0 <variable>.e_shstrndx+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 220 214 217 31 arch/arm/kernel/module.c:262 (set (reg:SI 2 r2 [orig:207 <variable>.e_shnum ] [207])
        (zero_extend:SI (mem/s/j:HI (plus:SI (reg/v/f:SI 6 r6 [orig:165 hdr ] [165])
                    (const_int 48 [0x30])) [0 <variable>.e_shnum+0 S2 A32]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 217 220 223 31 arch/arm/kernel/module.c:260 (set (reg/f:SI 3 r3 [205])
        (plus:SI (mult:SI (reg:SI 5 r5 [orig:141 ivtmp.359 ] [141])
                (reg:SI 3 r3 [orig:202 <variable>.e_shstrndx ] [202]))
            (reg/v/f:SI 4 r4 [orig:166 sechdrs ] [166]))) 40 {*mulsi3addsi_v6} (nil))

(insn 223 217 218 31 arch/arm/kernel/module.c:262 (set (reg/v/f:SI 5 r5 [orig:143 se ] [143])
        (plus:SI (mult:SI (reg:SI 5 r5 [orig:141 ivtmp.359 ] [141])
                (reg:SI 2 r2 [orig:207 <variable>.e_shnum ] [207]))
            (reg/v/f:SI 4 r4 [orig:166 sechdrs ] [166]))) 40 {*mulsi3addsi_v6} (expr_list:REG_DEAD (reg:SI 2 r2 [orig:207 <variable>.e_shnum ] [207])
        (nil)))

(insn 218 223 219 31 arch/arm/kernel/module.c:260 (set (reg:SI 3 r3 [orig:206 <variable>.sh_offset ] [206])
        (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [205])
                (const_int 16 [0x10])) [0 <variable>.sh_offset+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 219 218 310 31 arch/arm/kernel/module.c:260 (set (reg/v/f:SI 6 r6 [orig:144 secstrs ] [144])
        (plus:SI (reg/v/f:SI 6 r6 [orig:165 hdr ] [165])
            (reg:SI 3 r3 [orig:206 <variable>.sh_offset ] [206]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 3 r3 [orig:206 <variable>.sh_offset ] [206])
        (nil)))

(jump_insn 310 219 311 31 (set (pc)
        (label_ref 239)) 242 {*arm_jump} (nil))
;; End of basic block 31 -> ( 34)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  34 [100.0%] 

(barrier 311 310 241)

;; Start of basic block ( 34) -> 32
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; lr  use 	 0 [r0] 4 [r4] 6 [r6] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  34 [95.5%] 
(code_label 241 311 226 32 24 "" [1 uses])

(note 226 241 229 32 [bb 32] NOTE_INSN_BASIC_BLOCK)

(note 229 226 233 32 NOTE_INSN_DELETED)

(note 233 229 228 32 NOTE_INSN_DELETED)

(insn 228 233 231 32 arch/arm/kernel/module.c:263 (set (reg:SI 1 r1 [orig:212 <variable>.sh_name ] [212])
        (mem/s/j:SI (reg/v/f:SI 4 r4 [orig:166 sechdrs ] [166]) [0 <variable>.sh_name+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (reg/v/f:SI 4 r4 [orig:166 sechdrs ] [166]) [0 <variable>.sh_name+0 S4 A32])
        (nil)))

(insn 231 228 232 32 arch/arm/kernel/module.c:263 (set (reg:SI 1 r1)
        (plus:SI (reg/v/f:SI 6 r6 [orig:144 secstrs ] [144])
            (reg:SI 1 r1 [orig:212 <variable>.sh_name ] [212]))) 4 {*arm_addsi3} (nil))

(call_insn/i 232 231 235 32 arch/arm/kernel/module.c:263 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcmp") [flags 0x41] <function_decl 0x51157680 strcmp>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 235 232 236 32 arch/arm/kernel/module.c:263 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(jump_insn 236 235 237 32 arch/arm/kernel/module.c:263 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 247)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 450 [0x1c2])
            (nil))))
;; End of basic block 32 -> ( 36 33)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  36 [4.5%]  (loop_exit)
;; Succ edge  33 [95.5%]  (fallthru)

;; Start of basic block ( 32) -> 33
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 4 [r4]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 4 [r4]
;; live  kill	

;; Pred edge  32 [95.5%]  (fallthru)
(note 237 236 238 33 [bb 33] NOTE_INSN_BASIC_BLOCK)

(insn 238 237 239 33 arch/arm/kernel/module.c:262 (set (reg/v/f:SI 4 r4 [orig:166 sechdrs ] [166])
        (plus:SI (reg/v/f:SI 4 r4 [orig:166 sechdrs ] [166])
            (const_int 40 [0x28]))) 4 {*arm_addsi3} (nil))
;; End of basic block 33 -> ( 34)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  34 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 33 31) -> 34
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 0 [r0] 24 [cc]
;; live  kill	

;; Pred edge  33 [100.0%]  (fallthru,dfs_back)
;; Pred edge  31 [100.0%] 
(code_label 239 238 240 34 22 "" [1 uses])

(note 240 239 279 34 [bb 34] NOTE_INSN_BASIC_BLOCK)

(insn 279 240 242 34 arch/arm/kernel/module.c:263 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC10") [flags 0x82] <string_cst 0x111db270>)) 167 {*arm_movsi_insn} (nil))

(insn 242 279 243 34 arch/arm/kernel/module.c:262 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 4 r4 [orig:166 sechdrs ] [166])
            (reg/v/f:SI 5 r5 [orig:143 se ] [143]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 243 242 312 34 arch/arm/kernel/module.c:262 discrim 1 (set (pc)
        (if_then_else (ltu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 241)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9550 [0x254e])
            (nil))))
;; End of basic block 34 -> ( 32 35)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  32 [95.5%] 
;; Succ edge  35 [4.5%]  (fallthru,loop_exit)

;; Start of basic block ( 34) -> 35
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	
;; live  kill	

;; Pred edge  34 [4.5%]  (fallthru,loop_exit)
(note 312 243 313 35 [bb 35] NOTE_INSN_BASIC_BLOCK)

(jump_insn 313 312 314 35 (set (pc)
        (label_ref 261)) 242 {*arm_jump} (nil))
;; End of basic block 35 -> ( 39)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  39 [100.0%] 

(barrier 314 313 247)

;; Start of basic block ( 32) -> 36
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  32 [4.5%]  (loop_exit)
(code_label 247 314 248 36 23 "" [1 uses])

(note 248 247 250 36 [bb 36] NOTE_INSN_BASIC_BLOCK)

(insn 250 248 251 36 arch/arm/kernel/module.c:326 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 4 r4 [orig:166 sechdrs ] [166])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 251 250 252 36 arch/arm/kernel/module.c:326 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 261)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 0 [0x0])
            (nil))))
;; End of basic block 36 -> ( 37 39)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  37 [100.0%]  (fallthru)
;; Succ edge  39

;; Start of basic block ( 36) -> 37
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  36 [100.0%]  (fallthru)
(note 252 251 253 37 [bb 37] NOTE_INSN_BASIC_BLOCK)

(insn 253 252 254 37 arch/arm/kernel/module.c:326 discrim 1 (set (reg/f:SI 3 r3 [214])
        (symbol_ref:SI ("smp_on_up") [flags 0xc0] <var_decl 0x111751e0 smp_on_up>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("smp_on_up") [flags 0xc0] <var_decl 0x111751e0 smp_on_up>)
        (nil)))

(insn 254 253 255 37 arch/arm/kernel/module.c:326 discrim 1 (set (reg:SI 3 r3 [orig:215 smp_on_up ] [215])
        (mem/c/i:SI (reg/f:SI 3 r3 [214]) [0 smp_on_up+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("smp_on_up") [flags 0xc0] <var_decl 0x111751e0 smp_on_up>) [0 smp_on_up+0 S4 A32])
        (nil)))

(insn 255 254 256 37 arch/arm/kernel/module.c:326 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [orig:215 smp_on_up ] [215])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [orig:215 smp_on_up ] [215])
        (nil)))

(jump_insn 256 255 257 37 arch/arm/kernel/module.c:326 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 261)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6102 [0x17d6])
            (nil))))
;; End of basic block 37 -> ( 38 39)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  38 [39.0%]  (fallthru)
;; Succ edge  39 [61.0%] 

;; Start of basic block ( 37) -> 38
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]

;; Pred edge  37 [39.0%]  (fallthru)
(note 257 256 259 38 [bb 38] NOTE_INSN_BASIC_BLOCK)

(insn 259 257 258 38 arch/arm/kernel/module.c:328 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:166 sechdrs ] [166])
                (const_int 20 [0x14])) [0 <variable>.sh_size+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 258 259 260 38 arch/arm/kernel/module.c:328 (set (reg:SI 0 r0)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:166 sechdrs ] [166])
                (const_int 12 [0xc])) [0 <variable>.sh_addr+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn 260 258 261 38 arch/arm/kernel/module.c:328 (parallel [
            (call (mem:SI (symbol_ref:SI ("fixup_smp") [flags 0x41] <function_decl 0x11179380 fixup_smp>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 38 -> ( 39)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  39 [100.0%]  (fallthru)

;; Start of basic block ( 36 37 38 35) -> 39
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  36
;; Pred edge  37 [61.0%] 
;; Pred edge  38 [100.0%]  (fallthru)
;; Pred edge  35 [100.0%] 
(code_label 261 260 262 39 25 "" [3 uses])

(note 262 261 267 39 [bb 39] NOTE_INSN_BASIC_BLOCK)

(insn 267 262 273 39 arch/arm/kernel/module.c:333 (set (reg/i:SI 0 r0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 273 267 320 39 arch/arm/kernel/module.c:333 (use (reg/i:SI 0 r0)) -1 (nil))

(note 320 273 321 39 NOTE_INSN_EPILOGUE_BEG)

(jump_insn 321 320 322 39 arch/arm/kernel/module.c:333 (unspec_volatile [
            (return)
        ] 1) -1 (nil))
;; End of basic block 39 -> ( 1)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  EXIT [100.0%] 

(barrier 322 321 315)

(note 315 322 316 NOTE_INSN_DELETED)

(note 316 315 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function apply_relocate (apply_relocate)[0:991]



try_optimize_cfg iteration 1

Forwarding edge 11->12 to 20 failed.
Forwarding edge 16->17 to 27 failed.
Forwarding edge 18->19 to 29 failed.
Splitting bb 27 before 1 insns
changing bb of uid 370
  unscanned insn
changing bb of uid 184
  from 27 to 37
changing bb of uid 307
  from 27 to 37
Cross jumping from bb 20 to bb 27; 1 common insns
changing bb of uid 371
  unscanned insn
changing bb of uid 115
  from 20 to 38
changing bb of uid 301
  from 20 to 38
scanning new insn with uid = 373.
deleting insn with uid = 371.
deleting insn with uid = 115.
deleting insn with uid = 301.
deleting insn with uid = 302.
deleting block 38
Splitting bb 31 before 1 insns
changing bb of uid 375
  unscanned insn
changing bb of uid 227
  from 31 to 39
changing bb of uid 311
  from 31 to 39
Cross jumping from bb 26 to bb 31; 1 common insns
changing bb of uid 376
  unscanned insn
changing bb of uid 174
  from 26 to 40
changing bb of uid 305
  from 26 to 40
scanning new insn with uid = 378.
deleting insn with uid = 376.
deleting insn with uid = 174.
deleting insn with uid = 305.
deleting insn with uid = 306.
deleting block 40
Splitting bb 6 before 1 insns
changing bb of uid 380
  unscanned insn
changing bb of uid 71
  from 6 to 41
changing bb of uid 289
  from 6 to 41
Cross jumping from bb 4 to bb 6; 1 common insns
changing bb of uid 381
  unscanned insn
changing bb of uid 45
  from 4 to 42
changing bb of uid 287
  from 4 to 42
scanning new insn with uid = 383.
deleting insn with uid = 381.
deleting insn with uid = 45.
deleting insn with uid = 287.
deleting insn with uid = 288.
deleting block 42
Cross jumping from bb 32 to bb 41; 1 common insns
changing bb of uid 385
  unscanned insn
changing bb of uid 238
  from 32 to 43
changing bb of uid 313
  from 32 to 43
scanning new insn with uid = 386.
deleting insn with uid = 385.
deleting insn with uid = 238.
deleting insn with uid = 313.
deleting insn with uid = 314.
deleting block 43
Cross jumping from bb 25 to bb 41; 1 common insns
changing bb of uid 388
  unscanned insn
changing bb of uid 165
  from 25 to 44
changing bb of uid 303
  from 25 to 44
scanning new insn with uid = 389.
deleting insn with uid = 388.
deleting insn with uid = 165.
deleting insn with uid = 303.
deleting insn with uid = 304.
deleting block 44


try_optimize_cfg iteration 2

Splitting bb 6 before 1 insns
changing bb of uid 391
  unscanned insn
changing bb of uid 70
  from 6 to 45
Cross jumping from bb 25 to bb 6; 1 common insns
changing bb of uid 392
  unscanned insn
changing bb of uid 164
  from 25 to 46
changing bb of uid 389
  from 25 to 46
scanning new insn with uid = 394.
deleting insn with uid = 392.
deleting insn with uid = 164.
deleting insn with uid = 389.
deleting insn with uid = 390.
deleting block 46
Forwarding edge 11->12 to 20 failed.
Forwarding edge 16->17 to 27 failed.
Forwarding edge 18->19 to 29 failed.


try_optimize_cfg iteration 3

Forwarding edge 11->12 to 20 failed.
Forwarding edge 16->17 to 27 failed.
Forwarding edge 18->19 to 29 failed.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 41 n_edges 57 count 114 (  2.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 41 n_edges 57 count 128 (  3.1)


apply_relocate

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 7[r7] 8[r8] 9[r9] 10[sl] 11[fp] 12[ip] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={16d,24u,8d} r1={9d,8u} r2={9d,6u,2d} r3={6d,5u} r4={15d,25u,1d} r5={10d,16u,1d} r6={3d,6u} r7={2d,6u} r8={9d,12u,1d} r9={13d,19u,1d} r10={17d,23u,1d} r11={4d,6u} r12={7d,16u,8d} r13={3d,69u,2d} r14={5d,3u} r15={3d} r16={3d} r17={3d} r18={3d} r19={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={19d,18u} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r81={3d} r82={3d} r83={3d} r84={3d} r85={3d} r86={3d} r87={3d} r88={3d} r89={3d} r90={3d} r91={3d} r92={3d} r93={3d} r94={3d} r95={3d} r96={3d} r97={3d} r98={3d} r99={3d} r100={3d} r101={3d} r102={3d} r103={3d} r104={3d} r105={3d} r106={3d} r107={3d} r108={3d} r109={3d} r110={3d} r111={3d} r112={3d} r113={3d} r114={3d} r115={3d} r116={3d} r117={3d} r118={3d} r119={3d} r120={3d} r121={3d} r122={3d} r123={3d} r124={3d} r125={3d} r126={3d} r127={3d} 
;;    total ref usage 764{477d,262u,25e} in 161{158 regular + 3 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(7){ }d-1(8){ }d-1(9){ }d-1(10){ }d-1(11){ }d-1(13){ }d-1(14){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  kill	
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]

( 0 )->[2]->( 34 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  def 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 12 [ip] 13 [sp]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 12 [ip] 13 [sp]
;; live  kill	
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]

( 34 )->[3]->( 4 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 6 [r6] 13 [sp]
;; lr  def 	 0 [r0] 4 [r4] 8 [r8] 12 [ip] 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 4 [r4] 8 [r8] 12 [ip] 24 [cc]
;; live  kill	
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]

( 3 )->[4]->( 41 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 1 [r1] 3 [r3] 7 [r7] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 1 [r1] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	 14 [lr]
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]

( 3 )->[5]->( 6 7 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 2 [r2] 6 [r6] 13 [sp]
;; lr  def 	 0 [r0] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 24 [cc]
;; live  kill	
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]

( 5 )->[6]->( 45 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; lr  use 	 1 [r1] 5 [r5] 7 [r7] 12 [ip] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 14 [lr]
;; live  in  	 1 [r1] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 14 [lr]
;; live  kill	
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]

( 6 25 )->[45]->( 41 )
;; bb 45 artificial_defs: { }
;; bb 45 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]

( 45 4 32 )->[41]->( 36 )
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]

( 5 )->[7]->( 13 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 12 [ip] 13 [sp]
;; lr  def 	 0 [r0] 4 [r4] 5 [r5] 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 4 [r4] 5 [r5] 24 [cc]
;; live  kill	
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]

( 7 )->[8]->( 21 9 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]

( 8 )->[9]->( 21 10 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 24 [cc]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 24 [cc]

( 9 )->[10]->( 33 11 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 24 [cc]
;; lr  use 	 13 [sp] 24 [cc]
;; lr  def 	
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 24 [cc]
;; live  gen 	
;; live  kill	
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]

( 10 )->[11]->( 12 32 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]

( 11 )->[12]->( 20 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]

( 7 )->[13]->( 28 14 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 24 [cc]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 24 [cc]

( 13 )->[14]->( 18 15 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 24 [cc]
;; lr  use 	 13 [sp] 24 [cc]
;; lr  def 	
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 24 [cc]
;; live  gen 	
;; live  kill	
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]

( 14 )->[15]->( 20 16 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]

( 15 )->[16]->( 17 32 )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]

( 16 )->[17]->( 27 )
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]

( 14 )->[18]->( 32 19 )
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 24 [cc]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 24 [cc]

( 18 )->[19]->( 29 )
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 24 [cc]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 24 [cc]
;; live  gen 	
;; live  kill	
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 24 [cc]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 24 [cc]

( 15 12 )->[20]->( 37 )
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 9 [r9] 12 [ip] 13 [sp]
;; lr  def 	 4 [r4] 5 [r5]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 4 [r4] 5 [r5]
;; live  kill	
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]

( 8 9 )->[21]->( 22 23 )
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 12 [ip] 13 [sp]
;; lr  def 	 10 [sl] 11 [fp] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 10 [sl] 11 [fp] 24 [cc]
;; live  kill	
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]

( 21 )->[22]->( 23 )
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 10 [sl] 13 [sp]
;; lr  def 	 10 [sl]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 10 [sl]
;; live  kill	
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]

( 21 22 )->[23]->( 25 24 )
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 5 [r5] 9 [r9] 10 [sl] 13 [sp]
;; lr  def 	 8 [r8] 9 [r9] 10 [sl] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 8 [r8] 9 [r9] 10 [sl] 24 [cc]
;; live  kill	 24 [cc]
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]

( 23 )->[24]->( 25 26 )
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 10 [sl] 13 [sp]
;; lr  def 	 8 [r8] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 8 [r8] 24 [cc]
;; live  kill	
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]

( 23 24 )->[25]->( 45 )
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 11 [fp] 13 [sp]
;; lr  use 	 1 [r1] 4 [r4] 5 [r5] 7 [r7] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 9 [r9] 10 [sl]
;; live  in  	 1 [r1] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 9 [r9] 10 [sl]
;; live  kill	
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]

( 24 )->[26]->( 39 )
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 10 [sl] 11 [fp] 13 [sp]
;; lr  def 	 10 [sl] 11 [fp]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 10 [sl] 11 [fp]
;; live  kill	
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]

( 17 )->[27]->( 37 )
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 12 [ip] 13 [sp]
;; lr  def 	 4 [r4]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 4 [r4]
;; live  kill	
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]

( 27 20 )->[37]->( 33 )
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 4 [r4] 12 [ip] 13 [sp]
;; lr  def 	
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]

( 13 )->[28]->( 33 )
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 5 [r5] 9 [r9] 12 [ip] 13 [sp]
;; lr  def 	 4 [r4] 5 [r5] 10 [sl]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 4 [r4] 5 [r5] 10 [sl]
;; live  kill	
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]

( 19 )->[29]->( 30 31 )
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 24 [cc]
;; lr  use 	 0 [r0] 9 [r9] 12 [ip] 13 [sp] 24 [cc]
;; lr  def 	 4 [r4] 5 [r5] 9 [r9] 10 [sl]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 24 [cc]
;; live  gen 	 4 [r4] 5 [r5] 9 [r9] 10 [sl]
;; live  kill	
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 12 [ip] 13 [sp] 14 [lr]

( 29 )->[30]->( 31 )
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 9 [r9] 13 [sp]
;; lr  def 	 9 [r9]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 9 [r9]
;; live  kill	
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 12 [ip] 13 [sp] 14 [lr]

( 29 30 )->[31]->( 39 )
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 5 [r5] 9 [r9] 13 [sp]
;; lr  def 	 4 [r4] 9 [r9] 10 [sl]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 4 [r4] 9 [r9] 10 [sl]
;; live  kill	
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]

( 31 26 )->[39]->( 33 )
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 10 [sl] 12 [ip] 13 [sp]
;; lr  def 	
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]

( 18 11 16 )->[32]->( 41 )
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 1 [r1] 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	 14 [lr]
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]

( 28 10 39 37 )->[33]->( 34 )
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 6 [r6] 13 [sp]
;; lr  def 	 3 [r3] 6 [r6]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 6 [r6]
;; live  kill	
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]

( 33 2 )->[34]->( 3 35 )
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 0 [r0] 12 [ip] 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 12 [ip] 24 [cc]
;; live  kill	
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]

( 34 )->[35]->( 36 )
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]

( 35 41 )->[36]->( 1 )
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]

( 36 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(4){ }u-1(5){ }u-1(6){ }u-1(7){ }u-1(8){ }u-1(9){ }u-1(10){ }u-1(11){ }u-1(13){ }u-1(14){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  def 	
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 285 to worklist
  Adding insn 324 to worklist
  Adding insn 345 to worklist
  Adding insn 344 to worklist
  Adding insn 3 to worklist
  Adding insn 364 to worklist
  Adding insn 35 to worklist
  Adding insn 383 to worklist
  Adding insn 44 to worklist
  Adding insn 59 to worklist
  Adding insn 349 to worklist
  Adding insn 65 to worklist
  Adding insn 64 to worklist
  Adding insn 63 to worklist
  Adding insn 70 to worklist
  Adding insn 289 to worklist
  Adding insn 80 to worklist
  Adding insn 82 to worklist
  Adding insn 84 to worklist
  Adding insn 86 to worklist
  Adding insn 88 to worklist
  Adding insn 292 to worklist
  Adding insn 93 to worklist
  Adding insn 95 to worklist
  Adding insn 97 to worklist
  Adding insn 99 to worklist
  Adding insn 295 to worklist
  Adding insn 104 to worklist
  Adding insn 299 to worklist
  Adding insn 373 to worklist
  Adding insn 126 to worklist
  Adding insn 147 to worklist
  Adding insn 353 to worklist
  Adding insn 151 to worklist
  Adding insn 394 to worklist
  Adding insn 159 to worklist
  Adding insn 158 to worklist
  Adding insn 157 to worklist
  Adding insn 156 to worklist
  Adding insn 378 to worklist
  Adding insn 307 to worklist
  Adding insn 184 to worklist
  Adding insn 309 to worklist
  Adding insn 195 to worklist
  Adding insn 214 to worklist
  Adding insn 311 to worklist
  Adding insn 227 to worklist
  Adding insn 386 to worklist
  Adding insn 237 to worklist
  Adding insn 251 to worklist
  Adding insn 368 to worklist
  Adding insn 266 to worklist
Finished finding needed instructions:
processing block 36 lr out =  0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
processing block 41 lr out =  0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
  Adding insn 71 to worklist
processing block 4 lr out =  4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
  Adding insn 40 to worklist
  Adding insn 42 to worklist
  Adding insn 41 to worklist
processing block 45 lr out =  4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
processing block 6 lr out =  0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
  Adding insn 351 to worklist
  Adding insn 66 to worklist
  Adding insn 68 to worklist
  Adding insn 67 to worklist
processing block 33 lr out =  1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
  Adding insn 244 to worklist
  Adding insn 243 to worklist
processing block 28 lr out =  1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
  Adding insn 194 to worklist
  Adding insn 193 to worklist
  Adding insn 191 to worklist
  Adding insn 192 to worklist
  Adding insn 190 to worklist
processing block 32 lr out =  4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
  Adding insn 234 to worklist
  Adding insn 236 to worklist
  Adding insn 235 to worklist
processing block 39 lr out =  1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
processing block 31 lr out =  0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
  Adding insn 226 to worklist
  Adding insn 316 to worklist
  Adding insn 223 to worklist
  Adding insn 222 to worklist
  Adding insn 315 to worklist
  Adding insn 219 to worklist
  Adding insn 221 to worklist
processing block 30 lr out =  0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
  Adding insn 216 to worklist
processing block 29 lr out =  0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
  Adding insn 211 to worklist
  Adding insn 209 to worklist
  Adding insn 208 to worklist
  Adding insn 207 to worklist
  Adding insn 206 to worklist
  Adding insn 205 to worklist
  Adding insn 203 to worklist
  Adding insn 210 to worklist
  Adding insn 201 to worklist
processing block 19 lr out =  0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 24 [cc]
processing block 18 lr out =  0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 24 [cc]
  Adding insn 103 to worklist
processing block 37 lr out =  1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
processing block 20 lr out =  0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
  Adding insn 114 to worklist
  Adding insn 112 to worklist
  Adding insn 113 to worklist
processing block 27 lr out =  0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
  Adding insn 183 to worklist
  Adding insn 182 to worklist
  Adding insn 181 to worklist
  Adding insn 180 to worklist
processing block 17 lr out =  0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
processing block 16 lr out =  0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
  Adding insn 98 to worklist
processing block 15 lr out =  0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
  Adding insn 96 to worklist
processing block 14 lr out =  0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
processing block 13 lr out =  0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 24 [cc]
  Adding insn 92 to worklist
processing block 25 lr out =  0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
  Adding insn 360 to worklist
  Adding insn 359 to worklist
  Adding insn 160 to worklist
  Adding insn 162 to worklist
  Adding insn 161 to worklist
processing block 26 lr out =  0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
  Adding insn 173 to worklist
  Adding insn 172 to worklist
  Adding insn 171 to worklist
processing block 24 lr out =  0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
  Adding insn 150 to worklist
  Adding insn 358 to worklist
processing block 23 lr out =  0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
  Adding insn 146 to worklist
  Adding insn 145 to worklist
  Adding insn 357 to worklist
  Adding insn 319 to worklist
  Adding insn 318 to worklist
  Adding insn 133 to worklist
  Adding insn 132 to worklist
  Adding insn 131 to worklist
processing block 22 lr out =  0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
  Adding insn 128 to worklist
processing block 21 lr out =  0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
  Adding insn 125 to worklist
  Adding insn 123 to worklist
  Adding insn 122 to worklist
  Adding insn 121 to worklist
processing block 12 lr out =  0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
processing block 11 lr out =  0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
  Adding insn 87 to worklist
processing block 10 lr out =  0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
processing block 9 lr out =  0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 24 [cc]
  Adding insn 83 to worklist
processing block 8 lr out =  0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
  Adding insn 81 to worklist
processing block 7 lr out =  0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
  Adding insn 77 to worklist
  Adding insn 79 to worklist
  Adding insn 76 to worklist
  Adding insn 352 to worklist
  Adding insn 78 to worklist
processing block 5 lr out =  1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
  Adding insn 54 to worklist
  Adding insn 350 to worklist
  Adding insn 58 to worklist
  Adding insn 53 to worklist
  Adding insn 57 to worklist
  Adding insn 52 to worklist
  Adding insn 55 to worklist
  Adding insn 348 to worklist
  Adding insn 56 to worklist
  Adding insn 347 to worklist
  Adding insn 51 to worklist
processing block 3 lr out =  0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
  Adding insn 34 to worklist
  Adding insn 28 to worklist
  Adding insn 27 to worklist
  Adding insn 32 to worklist
  Adding insn 26 to worklist
  Adding insn 346 to worklist
processing block 35 lr out =  0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
  Adding insn 253 to worklist
processing block 34 lr out =  1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
  Adding insn 250 to worklist
  Adding insn 248 to worklist
  Adding insn 361 to worklist
processing block 2 lr out =  1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
  Adding insn 19 to worklist
  Adding insn 20 to worklist
  Adding insn 16 to worklist
  Adding insn 12 to worklist
  Adding insn 22 to worklist
  Adding insn 15 to worklist
  Adding insn 6 to worklist
  Adding insn 21 to worklist
  Adding insn 10 to worklist
  Adding insn 5 to worklist
  Adding insn 365 to worklist


try_optimize_cfg iteration 1

Forwarding edge 11->12 to 20 failed.
Forwarding edge 16->17 to 27 failed.
Forwarding edge 18->19 to 29 failed.


apply_relocate

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 7[r7] 8[r8] 9[r9] 10[sl] 11[fp] 12[ip] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={16d,24u,8d} r1={9d,8u} r2={9d,6u,2d} r3={6d,5u} r4={15d,25u,1d} r5={10d,16u,1d} r6={3d,6u} r7={2d,6u} r8={9d,12u,1d} r9={13d,19u,1d} r10={17d,23u,1d} r11={4d,6u} r12={7d,16u,8d} r13={3d,69u,2d} r14={5d,3u} r15={3d} r16={3d} r17={3d} r18={3d} r19={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={19d,18u} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r81={3d} r82={3d} r83={3d} r84={3d} r85={3d} r86={3d} r87={3d} r88={3d} r89={3d} r90={3d} r91={3d} r92={3d} r93={3d} r94={3d} r95={3d} r96={3d} r97={3d} r98={3d} r99={3d} r100={3d} r101={3d} r102={3d} r103={3d} r104={3d} r105={3d} r106={3d} r107={3d} r108={3d} r109={3d} r110={3d} r111={3d} r112={3d} r113={3d} r114={3d} r115={3d} r116={3d} r117={3d} r118={3d} r119={3d} r120={3d} r121={3d} r122={3d} r123={3d} r124={3d} r125={3d} r126={3d} r127={3d} 
;;    total ref usage 764{477d,262u,25e} in 161{158 regular + 3 call} insns.
(note 1 0 8 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  def 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 12 [ip] 13 [sp]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 12 [ip] 13 [sp]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 8 1 364 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn/f 364 8 365 2 arch/arm/kernel/module.c:51 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 4 r4)
                    ] 2))
            (use (reg:SI 5 r5))
            (use (reg:SI 6 r6))
            (use (reg:SI 7 r7))
            (use (reg:SI 8 r8))
            (use (reg:SI 9 r9))
            (use (reg:SI 10 sl))
            (use (reg:SI 11 fp))
            (use (reg:SI 14 lr))
        ]) -1 (expr_list:REG_DEAD (reg:SI 8 r8)
        (expr_list:REG_DEAD (reg:SI 7 r7)
            (expr_list:REG_DEAD (reg:SI 6 r6)
                (expr_list:REG_DEAD (reg:SI 5 r5)
                    (expr_list:REG_DEAD (reg:SI 4 r4)
                        (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                                    (set/f (reg/f:SI 13 sp)
                                        (plus:SI (reg/f:SI 13 sp)
                                            (const_int -36 [0xffffffffffffffdc])))
                                    (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                                        (reg:SI 4 r4))
                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                (const_int 4 [0x4])) [0 S4 A32])
                                        (reg:SI 5 r5))
                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                (const_int 8 [0x8])) [0 S4 A32])
                                        (reg:SI 6 r6))
                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                (const_int 12 [0xc])) [0 S4 A32])
                                        (reg:SI 7 r7))
                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                (const_int 16 [0x10])) [0 S4 A32])
                                        (reg:SI 8 r8))
                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                (const_int 20 [0x14])) [0 S4 A32])
                                        (reg:SI 9 r9))
                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                (const_int 24 [0x18])) [0 S4 A32])
                                        (reg:SI 10 sl))
                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                (const_int 28 [0x1c])) [0 S4 A32])
                                        (reg:SI 11 fp))
                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                (const_int 32 [0x20])) [0 S4 A32])
                                        (reg:SI 14 lr))
                                ])
                            (nil))))))))

(insn/f 365 364 366 2 arch/arm/kernel/module.c:51 (set (reg/f:SI 13 sp)
        (plus:SI (reg/f:SI 13 sp)
            (const_int -60 [0xffffffffffffffc4]))) -1 (nil))

(note 366 365 4 2 NOTE_INSN_PROLOGUE_END)

(note 4 366 7 2 NOTE_INSN_DELETED)

(note 7 4 11 2 NOTE_INSN_FUNCTION_BEG)

(note 11 7 14 2 NOTE_INSN_DELETED)

(note 14 11 18 2 NOTE_INSN_DELETED)

(note 18 14 5 2 NOTE_INSN_DELETED)

(insn 5 18 10 2 arch/arm/kernel/module.c:51 (set (reg/v:SI 7 r7 [orig:169 relindex ] [169])
        (reg:SI 3 r3 [ relindex ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [ relindex ])
        (nil)))

(insn 10 5 21 2 arch/arm/kernel/module.c:52 (set (reg:SI 12 ip [172])
        (const_int 40 [0x28])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 40 [0x28])
        (nil)))

(insn 21 10 3 2 arch/arm/kernel/module.c:55 (set (reg:SI 6 r6 [orig:143 ivtmp.410 ] [143])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 3 21 6 2 arch/arm/kernel/module.c:51 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 52 [0x34])) [0 %sfp+-4 S4 A32])
        (reg:SI 1 r1 [ strtab ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ strtab ])
        (nil)))

(insn 6 3 15 2 arch/arm/kernel/module.c:51 (set (reg/v/f:SI 1 r1 [orig:170 module ] [170])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 96 [0x60])) [0 module+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/f/c/i:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 96 [0x60])) [0 module+0 S4 A32])
        (nil)))

(insn 15 6 22 2 arch/arm/kernel/module.c:53 (set (reg/v/f:SI 8 r8 [orig:150 relsec ] [150])
        (plus:SI (mult:SI (reg:SI 12 ip [172])
                (reg/v:SI 7 r7 [orig:169 relindex ] [169]))
            (reg/v/f:SI 0 r0 [orig:166 sechdrs ] [166]))) 40 {*mulsi3addsi_v6} (nil))

(insn 22 15 12 2 arch/arm/kernel/module.c:58 (set (reg/v:SI 3 r3 [orig:148 i ] [148])
        (reg:SI 6 r6 [orig:143 ivtmp.410 ] [143])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 12 22 139 2 arch/arm/kernel/module.c:52 (set (reg/v/f:SI 2 r2 [orig:151 symsec ] [151])
        (plus:SI (mult:SI (reg:SI 12 ip [172])
                (reg:SI 2 r2 [ symindex ]))
            (reg/v/f:SI 0 r0 [orig:166 sechdrs ] [166]))) 40 {*mulsi3addsi_v6} (nil))

(note 139 12 149 2 NOTE_INSN_DELETED)

(note 149 139 16 2 NOTE_INSN_DELETED)

(insn 16 149 20 2 arch/arm/kernel/module.c:54 (set (reg:SI 4 r4 [orig:176 <variable>.sh_info ] [176])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 8 r8 [orig:150 relsec ] [150])
                (const_int 28 [0x1c])) [0 <variable>.sh_info+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 8 r8 [orig:150 relsec ] [150])
                (const_int 28 [0x1c])) [0 <variable>.sh_info+0 S4 A32])
        (nil)))

(insn 20 16 344 2 arch/arm/kernel/module.c:55 (set (reg:SI 5 r5)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 8 r8 [orig:150 relsec ] [150])
                (const_int 12 [0xc])) [0 <variable>.sh_addr+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 344 20 19 2 arch/arm/kernel/module.c:55 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 48 [0x30])) [0 %sfp+-8 S4 A32])
        (reg:SI 5 r5)) 167 {*arm_movsi_insn} (nil))

(insn 19 344 345 2 arch/arm/kernel/module.c:54 (set (reg:SI 4 r4)
        (plus:SI (mult:SI (reg:SI 12 ip [172])
                (reg:SI 4 r4 [orig:176 <variable>.sh_info ] [176]))
            (reg/v/f:SI 0 r0 [orig:166 sechdrs ] [166]))) 40 {*mulsi3addsi_v6} (expr_list:REG_DEAD (reg:SI 12 ip [172])
        (expr_list:REG_DEAD (reg/v/f:SI 0 r0 [orig:166 sechdrs ] [166])
            (nil))))

(insn 345 19 324 2 arch/arm/kernel/module.c:54 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 44 [0x2c])) [0 %sfp+-12 S4 A32])
        (reg:SI 4 r4)) 167 {*arm_movsi_insn} (nil))

(insn 324 345 285 2 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 20 [0x14])) [0 %sfp+-36 S4 A32])
        (reg/v/f:SI 8 r8 [orig:150 relsec ] [150])) 167 {*arm_movsi_insn} (nil))

(jump_insn 285 324 286 2 arch/arm/kernel/module.c:58 (set (pc)
        (label_ref 245)) 242 {*arm_jump} (nil))
;; End of basic block 2 -> ( 34)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]


;; Succ edge  34 [100.0%] 

(barrier 286 285 247)

;; Start of basic block ( 34) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 6 [r6] 13 [sp]
;; lr  def 	 0 [r0] 4 [r4] 8 [r8] 12 [ip] 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 4 [r4] 8 [r8] 12 [ip] 24 [cc]
;; live  kill	

;; Pred edge  34 [98.0%] 
(code_label 247 286 25 3 49 "" [1 uses])

(note 25 247 33 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 33 25 346 3 NOTE_INSN_DELETED)

(insn 346 33 26 3 arch/arm/kernel/module.c:67 (set (reg:SI 8 r8)
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 48 [0x30])) [0 %sfp+-8 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 26 346 32 3 arch/arm/kernel/module.c:67 (set (reg:SI 0 r0 [178])
        (plus:SI (reg:SI 6 r6 [orig:143 ivtmp.410 ] [143])
            (reg:SI 8 r8))) 4 {*arm_addsi3} (nil))

(insn 32 26 27 3 arch/arm/kernel/module.c:68 (set (reg:SI 12 ip [orig:180 <variable>.sh_size ] [180])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 2 r2 [orig:151 symsec ] [151])
                (const_int 20 [0x14])) [0 <variable>.sh_size+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 2 r2 [orig:151 symsec ] [151])
                (const_int 20 [0x14])) [0 <variable>.sh_size+0 S4 A32])
        (nil)))

(insn 27 32 28 3 arch/arm/kernel/module.c:67 (set (reg:SI 4 r4 [orig:163 D.18553 ] [163])
        (mem/s/j:SI (plus:SI (reg:SI 0 r0 [178])
                (const_int 4 [0x4])) [0 <variable>.r_info+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [178])
        (nil)))

(insn 28 27 34 3 arch/arm/kernel/module.c:67 (set (reg:SI 0 r0 [orig:162 D.18554 ] [162])
        (lshiftrt:SI (reg:SI 4 r4 [orig:163 D.18553 ] [163])
            (const_int 8 [0x8]))) 117 {*arm_shiftsi3} (nil))

(insn 34 28 35 3 arch/arm/kernel/module.c:68 (set (reg:CC_SWP 24 cc)
        (compare:CC_SWP (lshiftrt:SI (reg:SI 12 ip [orig:180 <variable>.sh_size ] [180])
                (const_int 4 [0x4]))
            (reg:SI 0 r0 [orig:162 D.18554 ] [162]))) 221 {*arm_cmpsi_shiftsi_swp} (expr_list:REG_DEAD (reg:SI 12 ip [orig:180 <variable>.sh_size ] [180])
        (nil)))

(jump_insn 35 34 37 3 arch/arm/kernel/module.c:68 (set (pc)
        (if_then_else (geu (reg:CC_SWP 24 cc)
                (const_int 0 [0x0]))
            (label_ref 48)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_SWP 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 3 -> ( 4 5)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]


;; Succ edge  4 [0.0%]  (fallthru,loop_exit)
;; Succ edge  5 [100.0%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 1 [r1] 3 [r3] 7 [r7] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 1 [r1] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	 14 [lr]

;; Pred edge  3 [0.0%]  (fallthru,loop_exit)
(note 37 35 39 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 39 37 41 4 NOTE_INSN_DELETED)

(insn 41 39 42 4 arch/arm/kernel/module.c:69 (set (reg:SI 1 r1)
        (plus:SI (reg/v/f:SI 1 r1 [orig:170 module ] [170])
            (const_int 12 [0xc]))) 4 {*arm_addsi3} (nil))

(insn 42 41 40 4 arch/arm/kernel/module.c:69 (set (reg:SI 2 r2)
        (reg/v:SI 7 r7 [orig:169 relindex ] [169])) 167 {*arm_movsi_insn} (nil))

(insn 40 42 44 4 arch/arm/kernel/module.c:69 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC11") [flags 0x82] <string_cst 0x111ae190>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82] <string_cst 0x111ae190>)
        (nil)))

(call_insn 44 40 383 4 arch/arm/kernel/module.c:69 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_UNUSED (reg:SI 0 r0)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(jump_insn 383 44 384 4 (set (pc)
        (label_ref 382)) -1 (nil))
;; End of basic block 4 -> ( 41)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  41 [100.0%] 

(barrier 384 383 48)

;; Start of basic block ( 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 2 [r2] 6 [r6] 13 [sp]
;; lr  def 	 0 [r0] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 24 [cc]
;; live  kill	

;; Pred edge  3 [100.0%] 
(code_label 48 384 49 5 33 "" [1 uses])

(note 49 48 50 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 50 49 51 5 NOTE_INSN_DELETED)

(insn 51 50 347 5 arch/arm/kernel/module.c:74 (set (reg:SI 10 sl [orig:184 <variable>.sh_addr ] [184])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 2 r2 [orig:151 symsec ] [151])
                (const_int 12 [0xc])) [0 <variable>.sh_addr+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 2 r2 [orig:151 symsec ] [151])
                (const_int 12 [0xc])) [0 <variable>.sh_addr+0 S4 A32])
        (nil)))

(insn 347 51 56 5 arch/arm/kernel/module.c:77 (set (reg:SI 9 r9)
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 44 [0x2c])) [0 %sfp+-12 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 56 347 348 5 arch/arm/kernel/module.c:77 (set (reg:SI 5 r5 [orig:159 D.18569 ] [159])
        (mem/s/j:SI (plus:SI (reg:SI 9 r9)
                (const_int 20 [0x14])) [0 <variable>.sh_size+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 9 r9)
        (nil)))

(insn 348 56 55 5 arch/arm/kernel/module.c:77 (set (reg:SI 8 r8)
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 48 [0x30])) [0 %sfp+-8 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 55 348 52 5 arch/arm/kernel/module.c:77 (set (reg:SI 12 ip [orig:160 D.18568 ] [160])
        (mem/s/j:SI (plus:SI (reg:SI 6 r6 [orig:143 ivtmp.410 ] [143])
                (reg:SI 8 r8)) [0 <variable>.r_offset+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 52 55 57 5 arch/arm/kernel/module.c:74 (set (reg/v/f:SI 9 r9 [orig:146 sym ] [146])
        (plus:SI (mult:SI (reg:SI 0 r0 [orig:162 D.18554 ] [162])
                (const_int 16 [0x10]))
            (reg:SI 10 sl [orig:184 <variable>.sh_addr ] [184]))) 270 {*arith_shiftsi} (nil))

(insn 57 52 53 5 arch/arm/kernel/module.c:77 (set (reg:SI 11 fp [186])
        (plus:SI (reg:SI 5 r5 [orig:159 D.18569 ] [159])
            (const_int -4 [0xfffffffffffffffc]))) 4 {*arm_addsi3} (nil))

(insn 53 57 58 5 arch/arm/kernel/module.c:75 (set (reg:SI 0 r0 [orig:185 <variable>.st_name ] [185])
        (mem/s/j:SI (plus:SI (mult:SI (reg:SI 0 r0 [orig:162 D.18554 ] [162])
                    (const_int 16 [0x10]))
                (reg:SI 10 sl [orig:184 <variable>.sh_addr ] [184])) [0 <variable>.st_name+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 10 sl [orig:184 <variable>.sh_addr ] [184])
        (nil)))

(insn 58 53 350 5 arch/arm/kernel/module.c:77 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 12 ip [orig:160 D.18568 ] [160])
            (reg:SI 11 fp [186]))) 219 {*arm_cmpsi_insn} (nil))

(insn 350 58 54 5 arch/arm/kernel/module.c:75 (set (reg:SI 10 sl)
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 52 [0x34])) [0 %sfp+-4 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 54 350 349 5 arch/arm/kernel/module.c:75 (set (reg:SI 0 r0)
        (plus:SI (reg:SI 10 sl)
            (reg:SI 0 r0 [orig:185 <variable>.st_name ] [185]))) 4 {*arm_addsi3} (nil))

(insn 349 54 59 5 arch/arm/kernel/module.c:75 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 40 [0x28])) [0 %sfp+-16 S4 A32])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(jump_insn 59 349 60 5 arch/arm/kernel/module.c:77 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 74)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 5 -> ( 6 7)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  6 [0.0%]  (fallthru,loop_exit)
;; Succ edge  7 [100.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; lr  use 	 1 [r1] 5 [r5] 7 [r7] 12 [ip] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 14 [lr]
;; live  in  	 1 [r1] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 14 [lr]
;; live  kill	

;; Pred edge  5 [0.0%]  (fallthru,loop_exit)
(note 60 59 62 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note 62 60 67 6 NOTE_INSN_DELETED)

(insn 67 62 68 6 arch/arm/kernel/module.c:78 (set (reg:SI 1 r1)
        (plus:SI (reg/v/f:SI 1 r1 [orig:170 module ] [170])
            (const_int 12 [0xc]))) 4 {*arm_addsi3} (nil))

(insn 68 67 66 6 arch/arm/kernel/module.c:78 (set (reg:SI 2 r2)
        (reg/v:SI 7 r7 [orig:169 relindex ] [169])) 167 {*arm_movsi_insn} (nil))

(insn 66 68 351 6 arch/arm/kernel/module.c:78 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC12") [flags 0x82] <string_cst 0x111c3380>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC12") [flags 0x82] <string_cst 0x111c3380>)
        (nil)))

(insn 351 66 63 6 arch/arm/kernel/module.c:78 (set (reg:SI 14 lr)
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 40 [0x28])) [0 %sfp+-16 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 63 351 64 6 arch/arm/kernel/module.c:78 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg:SI 14 lr)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 14 lr)
        (nil)))

(insn 64 63 65 6 arch/arm/kernel/module.c:78 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 12 ip [orig:160 D.18568 ] [160])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 12 ip [orig:160 D.18568 ] [160])
        (nil)))

(insn 65 64 393 6 arch/arm/kernel/module.c:78 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg:SI 5 r5 [orig:159 D.18569 ] [159])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 6 -> ( 45)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  45 [100.0%]  (fallthru)

;; Start of basic block ( 6 25) -> 45
;; bb 45 artificial_defs: { }
;; bb 45 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  6 [100.0%]  (fallthru)
;; Pred edge  25 [100.0%] 
(code_label 393 65 391 45 55 "" [1 uses])

(note 391 393 70 45 [bb 45] NOTE_INSN_BASIC_BLOCK)

(call_insn 70 391 382 45 arch/arm/kernel/module.c:78 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 16 [0x10])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_UNUSED (reg:SI 0 r0)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 45 -> ( 41)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  41 [100.0%]  (fallthru)

;; Start of basic block ( 45 4 32) -> 41
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  45 [100.0%]  (fallthru)
;; Pred edge  4 [100.0%] 
;; Pred edge  32 [100.0%] 
(code_label 382 70 380 41 54 "" [2 uses])

(note 380 382 71 41 [bb 41] NOTE_INSN_BASIC_BLOCK)

(insn 71 380 289 41 arch/arm/kernel/module.c:81 (set (reg:SI 0 r0 [orig:161 D.18562 ] [161])
        (const_int -8 [0xfffffffffffffff8])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int -8 [0xfffffffffffffff8])
        (nil)))

(jump_insn 289 71 290 41 arch/arm/kernel/module.c:81 (set (pc)
        (label_ref 254)) 242 {*arm_jump} (nil))
;; End of basic block 41 -> ( 36)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  36 [100.0%] 

(barrier 290 289 74)

;; Start of basic block ( 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 12 [ip] 13 [sp]
;; lr  def 	 0 [r0] 4 [r4] 5 [r5] 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 4 [r4] 5 [r5] 24 [cc]
;; live  kill	

;; Pred edge  5 [100.0%] 
(code_label 74 290 75 7 35 "" [1 uses])

(note 75 74 78 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 78 75 352 7 arch/arm/kernel/module.c:86 (set (reg:SI 4 r4 [orig:158 D.18574 ] [158])
        (and:SI (reg:SI 4 r4 [orig:163 D.18553 ] [163])
            (const_int 255 [0xff]))) 67 {*arm_andsi3_insn} (nil))

(insn 352 78 76 7 arch/arm/kernel/module.c:84 (set (reg:SI 5 r5)
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 44 [0x2c])) [0 %sfp+-12 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 76 352 79 7 arch/arm/kernel/module.c:84 (set (reg:SI 0 r0 [orig:189 <variable>.sh_addr ] [189])
        (mem/s/j:SI (plus:SI (reg:SI 5 r5)
                (const_int 12 [0xc])) [0 <variable>.sh_addr+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 5 r5)
        (nil)))

(insn 79 76 77 7 arch/arm/kernel/module.c:86 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 4 r4 [orig:158 D.18574 ] [158])
            (const_int 29 [0x1d]))) 219 {*arm_cmpsi_insn} (nil))

(insn 77 79 80 7 arch/arm/kernel/module.c:84 (set (reg/v:SI 5 r5 [orig:147 loc ] [147])
        (plus:SI (reg:SI 12 ip [orig:160 D.18568 ] [160])
            (reg:SI 0 r0 [orig:189 <variable>.sh_addr ] [189]))) 4 {*arm_addsi3} (nil))

(jump_insn 80 77 268 7 arch/arm/kernel/module.c:86 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 91)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 7 -> ( 13 8)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  13 [50.0%] 
;; Succ edge  8 [50.0%]  (fallthru)

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  7 [50.0%]  (fallthru)
(note 268 80 81 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 81 268 82 8 arch/arm/kernel/module.c:86 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 4 r4 [orig:158 D.18574 ] [158])
            (const_int 28 [0x1c]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 82 81 269 8 arch/arm/kernel/module.c:86 (set (pc)
        (if_then_else (geu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 118)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 8 -> ( 21 9)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  21 [50.0%] 
;; Succ edge  9 [50.0%]  (fallthru)

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  8 [50.0%]  (fallthru)
(note 269 82 83 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 83 269 84 9 arch/arm/kernel/module.c:86 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 4 r4 [orig:158 D.18574 ] [158])
            (const_int 1 [0x1]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 84 83 270 9 arch/arm/kernel/module.c:86 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 118)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
        (nil)))
;; End of basic block 9 -> ( 21 10)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 24 [cc]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 24 [cc]


;; Succ edge  21 [29.0%] 
;; Succ edge  10 [71.0%]  (fallthru)

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 24 [cc]
;; lr  use 	 13 [sp] 24 [cc]
;; lr  def 	
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 24 [cc]
;; live  gen 	
;; live  kill	

;; Pred edge  9 [71.0%]  (fallthru)
(note 270 84 86 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(jump_insn 86 270 271 10 arch/arm/kernel/module.c:86 (set (pc)
        (if_then_else (ltu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 241)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 10 -> ( 33 11)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  33 [50.0%] 
;; Succ edge  11 [50.0%]  (fallthru)

;; Start of basic block ( 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  10 [50.0%]  (fallthru)
(note 271 86 87 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 87 271 88 11 arch/arm/kernel/module.c:86 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 4 r4 [orig:158 D.18574 ] [158])
            (const_int 2 [0x2]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 88 87 291 11 arch/arm/kernel/module.c:86 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 230)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 11 -> ( 12 32)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  12 [29.0%]  (fallthru)
;; Succ edge  32 [71.0%]  (loop_exit)

;; Start of basic block ( 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  11 [29.0%]  (fallthru)
(note 291 88 292 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(jump_insn 292 291 293 12 (set (pc)
        (label_ref 109)) 242 {*arm_jump} (nil))
;; End of basic block 12 -> ( 20)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  20 [100.0%] 

(barrier 293 292 91)

;; Start of basic block ( 7) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  7 [50.0%] 
(code_label 91 293 273 13 43 "" [1 uses])

(note 273 91 92 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 92 273 93 13 arch/arm/kernel/module.c:86 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 4 r4 [orig:158 D.18574 ] [158])
            (const_int 42 [0x2a]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 93 92 274 13 arch/arm/kernel/module.c:86 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 187)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
        (nil)))
;; End of basic block 13 -> ( 28 14)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 24 [cc]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 24 [cc]


;; Succ edge  28 [29.0%] 
;; Succ edge  14 [71.0%]  (fallthru)

;; Start of basic block ( 13) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 24 [cc]
;; lr  use 	 13 [sp] 24 [cc]
;; lr  def 	
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 24 [cc]
;; live  gen 	
;; live  kill	

;; Pred edge  13 [71.0%]  (fallthru)
(note 274 93 95 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(jump_insn 95 274 275 14 arch/arm/kernel/module.c:86 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 102)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 14 -> ( 18 15)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  18 [50.0%] 
;; Succ edge  15 [50.0%]  (fallthru)

;; Start of basic block ( 14) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  14 [50.0%]  (fallthru)
(note 275 95 96 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 96 275 97 15 arch/arm/kernel/module.c:86 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 4 r4 [orig:158 D.18574 ] [158])
            (const_int 38 [0x26]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 97 96 276 15 arch/arm/kernel/module.c:86 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 109)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
            (nil))))
;; End of basic block 15 -> ( 20 16)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  20 [29.0%] 
;; Succ edge  16 [71.0%]  (fallthru)

;; Start of basic block ( 15) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  15 [71.0%]  (fallthru)
(note 276 97 98 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 98 276 99 16 arch/arm/kernel/module.c:86 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 4 r4 [orig:158 D.18574 ] [158])
            (const_int 40 [0x28]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 99 98 294 16 arch/arm/kernel/module.c:86 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 230)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 16 -> ( 17 32)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  17 [29.0%]  (fallthru)
;; Succ edge  32 [71.0%]  (loop_exit)

;; Start of basic block ( 16) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  16 [29.0%]  (fallthru)
(note 294 99 295 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(jump_insn 295 294 296 17 (set (pc)
        (label_ref 177)) 242 {*arm_jump} (nil))
;; End of basic block 17 -> ( 27)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  27 [100.0%] 

(barrier 296 295 102)

;; Start of basic block ( 14) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  14 [50.0%] 
(code_label 102 296 278 18 44 "" [1 uses])

(note 278 102 103 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 103 278 104 18 arch/arm/kernel/module.c:86 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 4 r4 [orig:158 D.18574 ] [158])
            (const_int 44 [0x2c]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 104 103 297 18 arch/arm/kernel/module.c:86 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 230)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 18 -> ( 32 19)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 24 [cc]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 24 [cc]


;; Succ edge  32 [50.0%]  (loop_exit)
;; Succ edge  19 [50.0%]  (fallthru)

;; Start of basic block ( 18) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 24 [cc]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 24 [cc]
;; live  gen 	
;; live  kill	

;; Pred edge  18 [50.0%]  (fallthru)
(note 297 104 299 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(jump_insn 299 297 300 19 (set (pc)
        (label_ref 298)) 242 {*arm_jump} (nil))
;; End of basic block 19 -> ( 29)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 24 [cc]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 24 [cc]


;; Succ edge  29 [100.0%] 

(barrier 300 299 109)

;; Start of basic block ( 15 12) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 9 [r9] 12 [ip] 13 [sp]
;; lr  def 	 4 [r4] 5 [r5]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 4 [r4] 5 [r5]
;; live  kill	

;; Pred edge  15 [29.0%] 
;; Pred edge  12 [100.0%] 
(code_label 109 300 110 20 39 "" [2 uses])

(note 110 109 113 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn 113 110 112 20 arch/arm/kernel/module.c:93 (set (reg:SI 4 r4 [orig:191 <variable>.st_value ] [191])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 9 r9 [orig:146 sym ] [146])
                (const_int 4 [0x4])) [0 <variable>.st_value+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 112 113 114 20 arch/arm/kernel/module.c:93 (set (reg:SI 5 r5 [190])
        (mem:SI (plus:SI (reg:SI 12 ip [orig:160 D.18568 ] [160])
                (reg:SI 0 r0 [orig:189 <variable>.sh_addr ] [189])) [0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem:SI (plus:SI (reg:SI 12 ip [orig:160 D.18568 ] [160])
                (reg:SI 0 r0 [orig:189 <variable>.sh_addr ] [189])) [0 S4 A32])
        (nil)))

(insn 114 112 373 20 arch/arm/kernel/module.c:93 (set (reg:SI 4 r4 [192])
        (plus:SI (reg:SI 5 r5 [190])
            (reg:SI 4 r4 [orig:191 <variable>.st_value ] [191]))) 4 {*arm_addsi3} (expr_list:REG_EQUIV (mem:SI (plus:SI (reg:SI 12 ip [orig:160 D.18568 ] [160])
                (reg:SI 0 r0 [orig:189 <variable>.sh_addr ] [189])) [0 S4 A32])
        (nil)))

(jump_insn 373 114 374 20 (set (pc)
        (label_ref 372)) -1 (nil))
;; End of basic block 20 -> ( 37)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  37 [100.0%] 

(barrier 374 373 118)

;; Start of basic block ( 8 9) -> 21
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 12 [ip] 13 [sp]
;; lr  def 	 10 [sl] 11 [fp] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 10 [sl] 11 [fp] 24 [cc]
;; live  kill	

;; Pred edge  8 [50.0%] 
;; Pred edge  9 [29.0%] 
(code_label 118 374 119 21 38 "" [2 uses])

(note 119 118 124 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(note 124 119 121 21 NOTE_INSN_DELETED)

(insn 121 124 122 21 arch/arm/kernel/module.c:99 (set (reg:SI 11 fp [orig:140 temp.418 ] [140])
        (mem:SI (plus:SI (reg:SI 12 ip [orig:160 D.18568 ] [160])
                (reg:SI 0 r0 [orig:189 <variable>.sh_addr ] [189])) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 122 121 123 21 arch/arm/kernel/module.c:99 (set (reg:SI 10 sl [193])
        (and:SI (reg:SI 11 fp [orig:140 temp.418 ] [140])
            (const_int 16777215 [0xffffff]))) 67 {*arm_andsi3_insn} (nil))

(insn 123 122 125 21 arch/arm/kernel/module.c:99 (set (reg/v:SI 10 sl [orig:144 offset ] [144])
        (ashift:SI (reg:SI 10 sl [193])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (nil))

(insn 125 123 126 21 arch/arm/kernel/module.c:100 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 10 sl [orig:144 offset ] [144])
                (const_int 1 [0x1])
                (const_int 25 [0x19]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 126 125 127 21 arch/arm/kernel/module.c:100 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 129)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 21 -> ( 22 23)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  22 [50.0%]  (fallthru)
;; Succ edge  23 [50.0%] 

;; Start of basic block ( 21) -> 22
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 10 [sl] 13 [sp]
;; lr  def 	 10 [sl]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 10 [sl]
;; live  kill	

;; Pred edge  21 [50.0%]  (fallthru)
(note 127 126 128 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(insn 128 127 129 22 arch/arm/kernel/module.c:101 (set (reg/v:SI 10 sl [orig:144 offset ] [144])
        (plus:SI (reg/v:SI 10 sl [orig:144 offset ] [144])
            (const_int -67108864 [0xfffffffffc000000]))) 4 {*arm_addsi3} (nil))
;; End of basic block 22 -> ( 23)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  23 [100.0%]  (fallthru)

;; Start of basic block ( 21 22) -> 23
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 5 [r5] 9 [r9] 10 [sl] 13 [sp]
;; lr  def 	 8 [r8] 9 [r9] 10 [sl] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 8 [r8] 9 [r9] 10 [sl] 24 [cc]
;; live  kill	 24 [cc]

;; Pred edge  21 [50.0%] 
;; Pred edge  22 [100.0%]  (fallthru)
(code_label 129 128 130 23 45 "" [1 uses])

(note 130 129 135 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(note 135 130 136 23 NOTE_INSN_DELETED)

(note 136 135 140 23 NOTE_INSN_DELETED)

(note 140 136 141 23 NOTE_INSN_DELETED)

(note 141 140 143 23 NOTE_INSN_DELETED)

(note 143 141 144 23 NOTE_INSN_DELETED)

(note 144 143 131 23 NOTE_INSN_DELETED)

(insn 131 144 353 23 arch/arm/kernel/module.c:103 (set (reg:SI 9 r9)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 9 r9 [orig:146 sym ] [146])
                (const_int 4 [0x4])) [0 <variable>.st_value+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 353 131 132 23 arch/arm/kernel/module.c:103 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 36 [0x24])) [0 %sfp+-20 S4 A32])
        (reg:SI 9 r9)) 167 {*arm_movsi_insn} (nil))

(insn 132 353 133 23 arch/arm/kernel/module.c:103 (set (reg:SI 8 r8 [195])
        (minus:SI (reg:SI 9 r9)
            (reg/v:SI 5 r5 [orig:147 loc ] [147]))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg:SI 9 r9)
        (nil)))

(insn 133 132 318 23 arch/arm/kernel/module.c:103 (set (reg:SI 10 sl [orig:156 D.18586 ] [156])
        (plus:SI (reg:SI 8 r8 [195])
            (reg/v:SI 10 sl [orig:144 offset ] [144]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 8 r8 [195])
        (nil)))

(insn 318 133 319 23 arch/arm/kernel/module.c:104 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (and:SI (reg:SI 10 sl [orig:156 D.18586 ] [156])
                        (const_int 3 [0x3]))
                    (const_int 0 [0x0])))
            (set (reg:SI 8 r8)
                (and:SI (reg:SI 10 sl [orig:156 D.18586 ] [156])
                    (const_int 3 [0x3])))
        ]) 69 {*andsi3_compare0} (nil))

(insn 319 318 357 23 arch/arm/kernel/module.c:104 (set (reg:SI 8 r8)
        (if_then_else:SI (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (reg:SI 8 r8)
            (const_int 1 [0x1]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (nil)))

(insn 357 319 145 23 arch/arm/kernel/module.c:105 (set (reg:SI 9 r9)
        (const_int -33554431 [0xfffffffffe000001])) 167 {*arm_movsi_insn} (nil))

(insn 145 357 146 23 arch/arm/kernel/module.c:105 (parallel [
            (set (reg:SI 8 r8)
                (ior:SI (lt:SI (reg:SI 10 sl [orig:156 D.18586 ] [156])
                        (reg:SI 9 r9))
                    (reg:SI 8 r8)))
            (clobber (reg:CC 24 cc))
        ]) 280 {*cond_arith} (expr_list:REG_UNUSED (reg:CC 24 cc)
        (nil)))

(insn 146 145 147 23 arch/arm/kernel/module.c:105 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 8 r8)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 147 146 148 23 arch/arm/kernel/module.c:105 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 152)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 4 [0x4])
            (nil))))
;; End of basic block 23 -> ( 25 24)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  25 [0.0%]  (loop_exit)
;; Succ edge  24 [100.0%]  (fallthru)

;; Start of basic block ( 23) -> 24
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 10 [sl] 13 [sp]
;; lr  def 	 8 [r8] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 8 [r8] 24 [cc]
;; live  kill	

;; Pred edge  23 [100.0%]  (fallthru)
(note 148 147 358 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(insn 358 148 150 24 arch/arm/kernel/module.c:104 discrim 1 (set (reg:SI 8 r8)
        (const_int 33554431 [0x1ffffff])) 167 {*arm_movsi_insn} (nil))

(insn 150 358 151 24 arch/arm/kernel/module.c:104 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 10 sl [orig:156 D.18586 ] [156])
            (reg:SI 8 r8))) 219 {*arm_cmpsi_insn} (expr_list:REG_EQUAL (compare:CC (reg:SI 10 sl [orig:156 D.18586 ] [156])
            (const_int 33554431 [0x1ffffff]))
        (nil)))

(jump_insn 151 150 152 24 arch/arm/kernel/module.c:104 discrim 1 (set (pc)
        (if_then_else (le (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 168)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 24 -> ( 25 26)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  25 [0.0%]  (fallthru,loop_exit)
;; Succ edge  26 [100.0%] 

;; Start of basic block ( 23 24) -> 25
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 11 [fp] 13 [sp]
;; lr  use 	 1 [r1] 4 [r4] 5 [r5] 7 [r7] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 9 [r9] 10 [sl]
;; live  in  	 1 [r1] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 9 [r9] 10 [sl]
;; live  kill	

;; Pred edge  23 [0.0%]  (loop_exit)
;; Pred edge  24 [0.0%]  (fallthru,loop_exit)
(code_label 152 151 153 25 46 "" [1 uses])

(note 153 152 155 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(note 155 153 161 25 NOTE_INSN_DELETED)

(insn 161 155 162 25 arch/arm/kernel/module.c:107 (set (reg:SI 1 r1)
        (plus:SI (reg/v/f:SI 1 r1 [orig:170 module ] [170])
            (const_int 12 [0xc]))) 4 {*arm_addsi3} (nil))

(insn 162 161 160 25 arch/arm/kernel/module.c:107 (set (reg:SI 2 r2)
        (reg/v:SI 7 r7 [orig:169 relindex ] [169])) 167 {*arm_movsi_insn} (nil))

(insn 160 162 359 25 arch/arm/kernel/module.c:107 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC13") [flags 0x82] <string_cst 0x111c33f0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC13") [flags 0x82] <string_cst 0x111c33f0>)
        (nil)))

(insn 359 160 156 25 arch/arm/kernel/module.c:107 (set (reg:SI 9 r9)
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 40 [0x28])) [0 %sfp+-16 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 156 359 157 25 arch/arm/kernel/module.c:107 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg:SI 9 r9)) 167 {*arm_movsi_insn} (nil))

(insn 157 156 158 25 arch/arm/kernel/module.c:107 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 4 r4 [orig:158 D.18574 ] [158])) 167 {*arm_movsi_insn} (nil))

(insn 158 157 360 25 arch/arm/kernel/module.c:107 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/v:SI 5 r5 [orig:147 loc ] [147])) 167 {*arm_movsi_insn} (nil))

(insn 360 158 159 25 arch/arm/kernel/module.c:107 (set (reg:SI 10 sl)
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 36 [0x24])) [0 %sfp+-20 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 159 360 394 25 arch/arm/kernel/module.c:107 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg:SI 10 sl)) 167 {*arm_movsi_insn} (nil))

(jump_insn 394 159 395 25 (set (pc)
        (label_ref 393)) -1 (nil))
;; End of basic block 25 -> ( 45)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  45 [100.0%] 

(barrier 395 394 168)

;; Start of basic block ( 24) -> 26
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 10 [sl] 11 [fp] 13 [sp]
;; lr  def 	 10 [sl] 11 [fp]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 10 [sl] 11 [fp]
;; live  kill	

;; Pred edge  24 [100.0%] 
(code_label 168 395 169 26 47 "" [1 uses])

(note 169 168 170 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(note 170 169 171 26 NOTE_INSN_DELETED)

(insn 171 170 172 26 arch/arm/kernel/module.c:117 (set (reg:SI 10 sl [209])
        (zero_extract:SI (reg:SI 10 sl [orig:156 D.18586 ] [156])
            (const_int 24 [0x18])
            (const_int 2 [0x2]))) 124 {extzv_t2} (nil))

(insn 172 171 173 26 arch/arm/kernel/module.c:117 (set (reg:SI 11 fp [210])
        (and:SI (reg:SI 11 fp [orig:140 temp.418 ] [140])
            (const_int -16777216 [0xffffffffff000000]))) 67 {*arm_andsi3_insn} (nil))

(insn 173 172 378 26 arch/arm/kernel/module.c:117 (set (reg:SI 10 sl [211])
        (ior:SI (reg:SI 10 sl [209])
            (reg:SI 11 fp [210]))) 89 {*arm_iorsi3} (expr_list:REG_EQUIV (mem:SI (plus:SI (reg:SI 12 ip [orig:160 D.18568 ] [160])
                (reg:SI 0 r0 [orig:189 <variable>.sh_addr ] [189])) [0 S4 A32])
        (nil)))

(jump_insn 378 173 379 26 (set (pc)
        (label_ref 377)) -1 (nil))
;; End of basic block 26 -> ( 39)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  39 [100.0%] 

(barrier 379 378 177)

;; Start of basic block ( 17) -> 27
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 12 [ip] 13 [sp]
;; lr  def 	 4 [r4]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 4 [r4]
;; live  kill	

;; Pred edge  17 [100.0%] 
(code_label 177 379 178 27 40 "" [1 uses])

(note 178 177 180 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(insn 180 178 181 27 arch/arm/kernel/module.c:126 (set (reg:SI 4 r4 [213])
        (mem:SI (plus:SI (reg:SI 12 ip [orig:160 D.18568 ] [160])
                (reg:SI 0 r0 [orig:189 <variable>.sh_addr ] [189])) [0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem:SI (plus:SI (reg:SI 12 ip [orig:160 D.18568 ] [160])
                (reg:SI 0 r0 [orig:189 <variable>.sh_addr ] [189])) [0 S4 A32])
        (nil)))

(insn 181 180 182 27 arch/arm/kernel/module.c:126 (set (reg:SI 4 r4 [212])
        (and:SI (reg:SI 4 r4 [213])
            (const_int -268435441 [0xfffffffff000000f]))) 67 {*arm_andsi3_insn} (nil))

(insn 182 181 183 27 arch/arm/kernel/module.c:126 (set (reg:SI 4 r4 [215])
        (ior:SI (reg:SI 4 r4 [212])
            (const_int 27262976 [0x1a00000]))) 89 {*arm_iorsi3} (nil))

(insn 183 182 372 27 arch/arm/kernel/module.c:126 (set (reg:SI 4 r4 [214])
        (ior:SI (reg:SI 4 r4 [215])
            (const_int 61440 [0xf000]))) 89 {*arm_iorsi3} (expr_list:REG_EQUIV (mem:SI (plus:SI (reg:SI 12 ip [orig:160 D.18568 ] [160])
                (reg:SI 0 r0 [orig:189 <variable>.sh_addr ] [189])) [0 S4 A32])
        (expr_list:REG_EQUAL (ior:SI (reg:SI 4 r4 [212])
                (const_int 27324416 [0x1a0f000]))
            (nil))))
;; End of basic block 27 -> ( 37)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  37 [100.0%]  (fallthru)

;; Start of basic block ( 27 20) -> 37
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 4 [r4] 12 [ip] 13 [sp]
;; lr  def 	
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  27 [100.0%]  (fallthru)
;; Pred edge  20 [100.0%] 
(code_label 372 183 370 37 52 "" [1 uses])

(note 370 372 184 37 [bb 37] NOTE_INSN_BASIC_BLOCK)

(insn 184 370 307 37 arch/arm/kernel/module.c:126 (set (mem:SI (plus:SI (reg:SI 12 ip [orig:160 D.18568 ] [160])
                (reg:SI 0 r0 [orig:189 <variable>.sh_addr ] [189])) [0 S4 A32])
        (reg:SI 4 r4 [214])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 12 ip [orig:160 D.18568 ] [160])
        (expr_list:REG_DEAD (reg:SI 0 r0 [orig:189 <variable>.sh_addr ] [189])
            (nil))))

(jump_insn 307 184 308 37 arch/arm/kernel/module.c:127 (set (pc)
        (label_ref 241)) 242 {*arm_jump} (nil))
;; End of basic block 37 -> ( 33)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]


;; Succ edge  33 [100.0%] 

(barrier 308 307 187)

;; Start of basic block ( 13) -> 28
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 5 [r5] 9 [r9] 12 [ip] 13 [sp]
;; lr  def 	 4 [r4] 5 [r5] 10 [sl]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 4 [r4] 5 [r5] 10 [sl]
;; live  kill	

;; Pred edge  13 [29.0%] 
(code_label 187 308 188 28 41 "" [1 uses])

(note 188 187 190 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(insn 190 188 192 28 arch/arm/kernel/module.c:131 (set (reg:SI 10 sl [orig:217 <variable>.st_value ] [217])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 9 r9 [orig:146 sym ] [146])
                (const_int 4 [0x4])) [0 <variable>.st_value+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 192 190 191 28 arch/arm/kernel/module.c:131 (set (reg:SI 4 r4 [219])
        (mem:SI (plus:SI (reg:SI 12 ip [orig:160 D.18568 ] [160])
                (reg:SI 0 r0 [orig:189 <variable>.sh_addr ] [189])) [0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem:SI (plus:SI (reg:SI 12 ip [orig:160 D.18568 ] [160])
                (reg:SI 0 r0 [orig:189 <variable>.sh_addr ] [189])) [0 S4 A32])
        (nil)))

(insn 191 192 193 28 arch/arm/kernel/module.c:131 (set (reg:SI 5 r5 [216])
        (minus:SI (reg:SI 10 sl [orig:217 <variable>.st_value ] [217])
            (reg/v:SI 5 r5 [orig:147 loc ] [147]))) 28 {*arm_subsi3_insn} (nil))

(insn 193 191 194 28 arch/arm/kernel/module.c:131 (set (reg:SI 5 r5 [218])
        (plus:SI (reg:SI 5 r5 [216])
            (reg:SI 4 r4 [219]))) 4 {*arm_addsi3} (nil))

(insn 194 193 195 28 arch/arm/kernel/module.c:131 (set (reg:SI 5 r5 [220])
        (and:SI (reg:SI 5 r5 [218])
            (const_int 2147483647 [0x7fffffff]))) 67 {*arm_andsi3_insn} (expr_list:REG_EQUIV (mem:SI (plus:SI (reg:SI 12 ip [orig:160 D.18568 ] [160])
                (reg:SI 0 r0 [orig:189 <variable>.sh_addr ] [189])) [0 S4 A32])
        (nil)))

(insn 195 194 309 28 arch/arm/kernel/module.c:131 (set (mem:SI (plus:SI (reg:SI 12 ip [orig:160 D.18568 ] [160])
                (reg:SI 0 r0 [orig:189 <variable>.sh_addr ] [189])) [0 S4 A32])
        (reg:SI 5 r5 [220])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 12 ip [orig:160 D.18568 ] [160])
        (expr_list:REG_DEAD (reg:SI 0 r0 [orig:189 <variable>.sh_addr ] [189])
            (nil))))

(jump_insn 309 195 310 28 arch/arm/kernel/module.c:132 (set (pc)
        (label_ref 241)) 242 {*arm_jump} (nil))
;; End of basic block 28 -> ( 33)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]


;; Succ edge  33 [100.0%] 

(barrier 310 309 298)

;; Start of basic block ( 19) -> 29
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 24 [cc]
;; lr  use 	 0 [r0] 9 [r9] 12 [ip] 13 [sp] 24 [cc]
;; lr  def 	 4 [r4] 5 [r5] 9 [r9] 10 [sl]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 24 [cc]
;; live  gen 	 4 [r4] 5 [r5] 9 [r9] 10 [sl]
;; live  kill	

;; Pred edge  19 [100.0%] 
(code_label 298 310 199 29 51 "" [1 uses])

(note 199 298 204 29 [bb 29] NOTE_INSN_BASIC_BLOCK)

(note 204 199 201 29 NOTE_INSN_DELETED)

(insn 201 204 210 29 arch/arm/kernel/module.c:136 (set (reg:SI 5 r5 [orig:134 temp.430 ] [134])
        (mem:SI (plus:SI (reg:SI 12 ip [orig:160 D.18568 ] [160])
                (reg:SI 0 r0 [orig:189 <variable>.sh_addr ] [189])) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 210 201 203 29 arch/arm/kernel/module.c:140 (set (reg:SI 4 r4 [orig:225 <variable>.st_value ] [225])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 9 r9 [orig:146 sym ] [146])
                (const_int 4 [0x4])) [0 <variable>.st_value+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 9 r9 [orig:146 sym ] [146])
        (nil)))

(insn 203 210 205 29 arch/arm/kernel/module.c:137 (set (reg:SI 9 r9 [221])
        (and:SI (reg:SI 5 r5 [orig:134 temp.430 ] [134])
            (const_int 983040 [0xf0000]))) 67 {*arm_andsi3_insn} (nil))

(insn 205 203 206 29 arch/arm/kernel/module.c:137 (set (reg:SI 10 sl [222])
        (ashift:SI (reg:SI 5 r5 [orig:134 temp.430 ] [134])
            (const_int 20 [0x14]))) 117 {*arm_shiftsi3} (nil))

(insn 206 205 207 29 arch/arm/kernel/module.c:137 (set (reg:SI 10 sl [orig:154 D.18604 ] [154])
        (lshiftrt:SI (reg:SI 10 sl [222])
            (const_int 20 [0x14]))) 117 {*arm_shiftsi3} (expr_list:REG_EQUAL (and:SI (reg:SI 5 r5 [orig:134 temp.430 ] [134])
            (const_int 4095 [0xfff]))
        (nil)))

(insn 207 206 208 29 arch/arm/kernel/module.c:138 (set (reg:SI 9 r9 [223])
        (ior:SI (lshiftrt:SI (reg:SI 9 r9 [221])
                (const_int 4 [0x4]))
            (reg:SI 10 sl [orig:154 D.18604 ] [154]))) 270 {*arith_shiftsi} (expr_list:REG_DEAD (reg:SI 10 sl [orig:154 D.18604 ] [154])
        (nil)))

(insn 208 207 209 29 arch/arm/kernel/module.c:138 (set (reg:SI 9 r9 [orig:153 D.18605 ] [153])
        (xor:SI (reg:SI 9 r9 [223])
            (const_int 32768 [0x8000]))) 96 {*arm_xorsi3} (nil))

(insn 209 208 211 29 arch/arm/kernel/module.c:140 (set (reg:SI 9 r9 [224])
        (plus:SI (reg:SI 9 r9 [orig:153 D.18605 ] [153])
            (const_int -32768 [0xffffffffffff8000]))) 4 {*arm_addsi3} (nil))

(insn 211 209 214 29 arch/arm/kernel/module.c:140 (set (reg/v:SI 9 r9 [orig:142 offset.415 ] [142])
        (plus:SI (reg:SI 9 r9 [224])
            (reg:SI 4 r4 [orig:225 <variable>.st_value ] [225]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 4 r4 [orig:225 <variable>.st_value ] [225])
        (nil)))

(jump_insn 214 211 215 29 arch/arm/kernel/module.c:141 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 217)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 29 -> ( 30 31)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  30 [28.0%]  (fallthru)
;; Succ edge  31 [72.0%] 

;; Start of basic block ( 29) -> 30
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 9 [r9] 13 [sp]
;; lr  def 	 9 [r9]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 9 [r9]
;; live  kill	

;; Pred edge  29 [28.0%]  (fallthru)
(note 215 214 216 30 [bb 30] NOTE_INSN_BASIC_BLOCK)

(insn 216 215 217 30 arch/arm/kernel/module.c:142 (set (reg/v:SI 9 r9 [orig:142 offset.415 ] [142])
        (ashiftrt:SI (reg/v:SI 9 r9 [orig:142 offset.415 ] [142])
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (nil))
;; End of basic block 30 -> ( 31)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  31 [100.0%]  (fallthru)

;; Start of basic block ( 29 30) -> 31
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 5 [r5] 9 [r9] 13 [sp]
;; lr  def 	 4 [r4] 9 [r9] 10 [sl]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 4 [r4] 9 [r9] 10 [sl]
;; live  kill	

;; Pred edge  29 [72.0%] 
;; Pred edge  30 [100.0%]  (fallthru)
(code_label 217 216 218 31 48 "" [1 uses])

(note 218 217 220 31 [bb 31] NOTE_INSN_BASIC_BLOCK)

(note 220 218 221 31 NOTE_INSN_DELETED)

(insn 221 220 219 31 arch/arm/kernel/module.c:145 (set (reg:SI 10 sl [229])
        (ashift:SI (reg/v:SI 9 r9 [orig:142 offset.415 ] [142])
            (const_int 20 [0x14]))) 117 {*arm_shiftsi3} (nil))

(insn 219 221 315 31 arch/arm/kernel/module.c:145 (set (reg:SI 9 r9 [226])
        (and:SI (reg/v:SI 9 r9 [orig:142 offset.415 ] [142])
            (const_int 61440 [0xf000]))) 67 {*arm_andsi3_insn} (nil))

(insn 315 219 222 31 arch/arm/kernel/module.c:145 (set (reg:SI 4 r4 [231])
        (const_int -987136 [0xfffffffffff0f000])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int -987136 [0xfffffffffff0f000])
        (nil)))

(insn 222 315 223 31 arch/arm/kernel/module.c:145 (set (reg:SI 10 sl [228])
        (lshiftrt:SI (reg:SI 10 sl [229])
            (const_int 20 [0x14]))) 117 {*arm_shiftsi3} (expr_list:REG_EQUAL (and:SI (reg/v:SI 9 r9 [orig:142 offset.415 ] [142])
            (const_int 4095 [0xfff]))
        (nil)))

(insn 223 222 316 31 arch/arm/kernel/module.c:145 (set (reg:SI 10 sl [230])
        (ior:SI (ashift:SI (reg:SI 9 r9 [226])
                (const_int 4 [0x4]))
            (reg:SI 10 sl [228]))) 270 {*arith_shiftsi} (nil))

(insn 316 223 226 31 arch/arm/kernel/module.c:145 (set (reg:SI 4 r4 [231])
        (and:SI (reg:SI 5 r5 [orig:134 temp.430 ] [134])
            (reg:SI 4 r4 [231]))) 67 {*arm_andsi3_insn} (nil))

(insn 226 316 377 31 arch/arm/kernel/module.c:145 (set (reg:SI 10 sl [233])
        (ior:SI (reg:SI 10 sl [230])
            (reg:SI 4 r4 [231]))) 89 {*arm_iorsi3} (expr_list:REG_EQUIV (mem:SI (plus:SI (reg:SI 12 ip [orig:160 D.18568 ] [160])
                (reg:SI 0 r0 [orig:189 <variable>.sh_addr ] [189])) [0 S4 A32])
        (nil)))
;; End of basic block 31 -> ( 39)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  39 [100.0%]  (fallthru)

;; Start of basic block ( 31 26) -> 39
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 10 [sl] 12 [ip] 13 [sp]
;; lr  def 	
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  31 [100.0%]  (fallthru)
;; Pred edge  26 [100.0%] 
(code_label 377 226 375 39 53 "" [1 uses])

(note 375 377 227 39 [bb 39] NOTE_INSN_BASIC_BLOCK)

(insn 227 375 311 39 arch/arm/kernel/module.c:145 (set (mem:SI (plus:SI (reg:SI 12 ip [orig:160 D.18568 ] [160])
                (reg:SI 0 r0 [orig:189 <variable>.sh_addr ] [189])) [0 S4 A32])
        (reg:SI 10 sl [233])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 12 ip [orig:160 D.18568 ] [160])
        (expr_list:REG_DEAD (reg:SI 0 r0 [orig:189 <variable>.sh_addr ] [189])
            (nil))))

(jump_insn 311 227 312 39 arch/arm/kernel/module.c:147 (set (pc)
        (label_ref 241)) 242 {*arm_jump} (nil))
;; End of basic block 39 -> ( 33)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]


;; Succ edge  33 [100.0%] 

(barrier 312 311 230)

;; Start of basic block ( 18 11 16) -> 32
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 1 [r1] 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	 14 [lr]

;; Pred edge  18 [50.0%]  (loop_exit)
;; Pred edge  11 [71.0%]  (loop_exit)
;; Pred edge  16 [71.0%]  (loop_exit)
(code_label 230 312 231 32 36 "" [3 uses])

(note 231 230 233 32 [bb 32] NOTE_INSN_BASIC_BLOCK)

(note 233 231 235 32 NOTE_INSN_DELETED)

(insn 235 233 236 32 arch/arm/kernel/module.c:243 (set (reg:SI 1 r1)
        (plus:SI (reg/v/f:SI 1 r1 [orig:170 module ] [170])
            (const_int 12 [0xc]))) 4 {*arm_addsi3} (nil))

(insn 236 235 234 32 arch/arm/kernel/module.c:243 (set (reg:SI 2 r2)
        (reg:SI 4 r4 [orig:158 D.18574 ] [158])) 167 {*arm_movsi_insn} (nil))

(insn 234 236 237 32 arch/arm/kernel/module.c:243 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC14") [flags 0x82] <string_cst 0x111b02c0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC14") [flags 0x82] <string_cst 0x111b02c0>)
        (nil)))

(call_insn 237 234 386 32 arch/arm/kernel/module.c:243 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(jump_insn 386 237 387 32 (set (pc)
        (label_ref 382)) -1 (nil))
;; End of basic block 32 -> ( 41)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  41 [100.0%] 

(barrier 387 386 241)

;; Start of basic block ( 28 10 39 37) -> 33
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 6 [r6] 13 [sp]
;; lr  def 	 3 [r3] 6 [r6]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 6 [r6]
;; live  kill	

;; Pred edge  28 [100.0%] 
;; Pred edge  10 [50.0%] 
;; Pred edge  39 [100.0%] 
;; Pred edge  37 [100.0%] 
(code_label 241 387 242 33 37 "" [4 uses])

(note 242 241 243 33 [bb 33] NOTE_INSN_BASIC_BLOCK)

(insn 243 242 244 33 arch/arm/kernel/module.c:58 (set (reg/v:SI 3 r3 [orig:148 i ] [148])
        (plus:SI (reg/v:SI 3 r3 [orig:148 i ] [148])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 244 243 245 33 arch/arm/kernel/module.c:58 (set (reg:SI 6 r6 [orig:143 ivtmp.410 ] [143])
        (plus:SI (reg:SI 6 r6 [orig:143 ivtmp.410 ] [143])
            (const_int 8 [0x8]))) 4 {*arm_addsi3} (nil))
;; End of basic block 33 -> ( 34)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]


;; Succ edge  34 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 33 2) -> 34
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 0 [r0] 12 [ip] 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 12 [ip] 24 [cc]
;; live  kill	

;; Pred edge  33 [100.0%]  (fallthru,dfs_back)
;; Pred edge  2 [100.0%] 
(code_label 245 244 246 34 31 "" [1 uses])

(note 246 245 249 34 [bb 34] NOTE_INSN_BASIC_BLOCK)

(note 249 246 361 34 NOTE_INSN_DELETED)

(insn 361 249 248 34 arch/arm/kernel/module.c:58 (set (reg:SI 12 ip)
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 20 [0x14])) [0 %sfp+-36 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 248 361 250 34 arch/arm/kernel/module.c:58 (set (reg:SI 0 r0 [orig:237 <variable>.sh_size ] [237])
        (mem/s/j:SI (plus:SI (reg:SI 12 ip)
                (const_int 20 [0x14])) [0 <variable>.sh_size+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 12 ip)
        (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                            (const_int 20 [0x14])) [0 %sfp+-36 S4 A32])
                    (const_int 20 [0x14])) [0 <variable>.sh_size+0 S4 A32])
            (nil))))

(insn 250 248 251 34 arch/arm/kernel/module.c:58 (set (reg:CC_SWP 24 cc)
        (compare:CC_SWP (lshiftrt:SI (reg:SI 0 r0 [orig:237 <variable>.sh_size ] [237])
                (const_int 3 [0x3]))
            (reg/v:SI 3 r3 [orig:148 i ] [148]))) 221 {*arm_cmpsi_shiftsi_swp} (expr_list:REG_DEAD (reg:SI 0 r0 [orig:237 <variable>.sh_size ] [237])
        (nil)))

(jump_insn 251 250 252 34 arch/arm/kernel/module.c:58 (set (pc)
        (if_then_else (gtu (reg:CC_SWP 24 cc)
                (const_int 0 [0x0]))
            (label_ref 247)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_SWP 24 cc)
        (expr_list:REG_BR_PROB (const_int 9800 [0x2648])
            (nil))))
;; End of basic block 34 -> ( 3 35)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]


;; Succ edge  3 [98.0%] 
;; Succ edge  35 [2.0%]  (fallthru,loop_exit)

;; Start of basic block ( 34) -> 35
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  34 [2.0%]  (fallthru,loop_exit)
(note 252 251 253 35 [bb 35] NOTE_INSN_BASIC_BLOCK)

(insn 253 252 254 35 arch/arm/kernel/module.c:248 (set (reg:SI 0 r0 [orig:161 D.18562 ] [161])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))
;; End of basic block 35 -> ( 36)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]


;; Succ edge  36 [100.0%]  (fallthru)

;; Start of basic block ( 35 41) -> 36
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  35 [100.0%]  (fallthru)
;; Pred edge  41 [100.0%] 
(code_label 254 253 255 36 34 "" [1 uses])

(note 255 254 266 36 [bb 36] NOTE_INSN_BASIC_BLOCK)

(insn 266 255 367 36 arch/arm/kernel/module.c:249 (use (reg/i:SI 0 r0)) -1 (nil))

(note 367 266 368 36 NOTE_INSN_EPILOGUE_BEG)

(jump_insn 368 367 369 36 arch/arm/kernel/module.c:249 (unspec_volatile [
            (return)
        ] 1) -1 (nil))
;; End of basic block 36 -> ( 1)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%] 

(barrier 369 368 321)

(note 321 369 343 NOTE_INSN_DELETED)

(note 343 321 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function module_alloc (module_alloc)[0:990]



try_optimize_cfg iteration 1



module_alloc

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 12[ip] 13[sp] 14[lr]
;;  ref usage 	r0={2d,4u} r1={3d,2u} r2={3d,2u} r3={3d,2u} r4={1d,2u} r12={3d,2u} r13={2d,8u,1d} r14={4d,5u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 160{132d,27u,1e} in 15{14 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 44 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn/f 44 4 45 2 arch/arm/kernel/module.c:41 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 0 r0)
                    ] 2))
            (use (reg:SI 1 r1))
            (use (reg:SI 2 r2))
            (use (reg:SI 3 r3))
            (use (reg:SI 4 r4))
            (use (reg:SI 14 lr))
        ]) -1 (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                            (set/f (reg/f:SI 13 sp)
                                (plus:SI (reg/f:SI 13 sp)
                                    (const_int -24 [0xffffffffffffffe8])))
                            (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                                (reg:SI 0 r0))
                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                        (const_int 4 [0x4])) [0 S4 A32])
                                (reg:SI 1 r1))
                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                        (const_int 8 [0x8])) [0 S4 A32])
                                (reg:SI 2 r2))
                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                        (const_int 12 [0xc])) [0 S4 A32])
                                (reg:SI 3 r3))
                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                        (const_int 16 [0x10])) [0 S4 A32])
                                (reg:SI 4 r4))
                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                        (const_int 20 [0x14])) [0 S4 A32])
                                (reg:SI 14 lr))
                        ])
                    (nil))))))

(note 45 44 36 2 NOTE_INSN_PROLOGUE_END)

(note 36 45 3 2 NOTE_INSN_DELETED)

(note 3 36 9 2 NOTE_INSN_FUNCTION_BEG)

(note 9 3 17 2 NOTE_INSN_DELETED)

(insn 17 9 18 2 arch/arm/kernel/module.c:42 (set (reg:SI 1 r1)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 18 17 19 2 arch/arm/kernel/module.c:42 (set (reg:SI 2 r2)
        (const_int -1090519040 [0xffffffffbf000000])) 167 {*arm_movsi_insn} (nil))

(insn 19 18 15 2 arch/arm/kernel/module.c:42 (set (reg:SI 3 r3)
        (const_int -1075838976 [0xffffffffbfe00000])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int -1075838976 [0xffffffffbfe00000])
        (nil)))

(insn 15 19 41 2 arch/arm/kernel/module.c:42 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg:SI 14 lr)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 14 lr)
        (nil)))

(insn 41 15 7 2 arch/arm/kernel/module.c:42 (set (reg/f:SI 12 ip [138])
        (symbol_ref:SI ("pgprot_kernel") [flags 0xc0] <var_decl 0x10e750c0 pgprot_kernel>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("pgprot_kernel") [flags 0xc0] <var_decl 0x10e750c0 pgprot_kernel>)
        (nil)))

(insn 7 41 40 2 arch/arm/kernel/module.c:42 (set (reg:SI 12 ip [orig:134 pgprot_kernel.262 ] [134])
        (mem/c/i:SI (reg/f:SI 12 ip [138]) [0 pgprot_kernel+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (nil)))

(insn 40 7 11 2 arch/arm/kernel/module.c:42 (set (reg:SI 14 lr [141])
        (const_int 208 [0xd0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 208 [0xd0])
        (nil)))

(insn 11 40 39 2 arch/arm/kernel/module.c:42 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg:SI 14 lr [141])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 14 lr [141])
        (expr_list:REG_EQUAL (const_int 208 [0xd0])
            (nil))))

(insn 39 11 14 2 arch/arm/kernel/module.c:42 (set (reg:SI 14 lr [142])
        (const_int -1 [0xffffffffffffffff])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int -1 [0xffffffffffffffff])
        (nil)))

(insn 14 39 12 2 arch/arm/kernel/module.c:42 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg:SI 14 lr [142])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 14 lr [142])
        (expr_list:REG_EQUAL (const_int -1 [0xffffffffffffffff])
            (nil))))

(insn 12 14 20 2 arch/arm/kernel/module.c:42 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 12 ip [orig:134 pgprot_kernel.262 ] [134])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 12 ip [orig:134 pgprot_kernel.262 ] [134])
        (nil)))

(call_insn 20 12 32 2 arch/arm/kernel/module.c:42 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__vmalloc_node_range") [flags 0x41] <function_decl 0x10fb8e80 __vmalloc_node_range>) [0 S4 A32])
                    (const_int 16 [0x10])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 32 20 46 2 arch/arm/kernel/module.c:45 (use (reg/i:SI 0 r0)) -1 (nil))

(note 46 32 47 2 NOTE_INSN_EPILOGUE_BEG)

(jump_insn 47 46 48 2 arch/arm/kernel/module.c:45 (unspec_volatile [
            (return)
        ] 1) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%] 

(barrier 48 47 38)

(note 38 48 42 NOTE_INSN_DELETED)

(note 42 38 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns
