
;; Function armpmu_get_pmu_id (armpmu_get_pmu_id)[0:1305]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 10 (  1.7)
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 10 (  1.7)
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 10 (  1.7)


armpmu_get_pmu_id

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 24[cc]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r3={1d} r11={1d,5u} r12={1d} r13={1d,5u} r14={1d,1u} r24={1d,1u} r25={1d,5u} r26={1d,4u} r133={2d,1u} r134={1d,2u} r136={1d,1u} 
;;    total ref usage 43{16d,27u,0e} in 9{9 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 6, 8, 9
0[0,2] 1[2,1] 2[3,1] 3[4,1] 11[5,1] 12[6,1] 13[7,1] 14[8,1] 24[9,1] 25[10,1] 26[11,1] 133[12,2] 134[14,1] 136[15,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d1(0){ }d2(1){ }d3(2){ }d4(3){ }d5(11){ }d6(12){ }d7(13){ }d8(14){ }d10(25){ }d11(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
1, 2, 3, 4, 5, 6, 7, 8, 10, 11
;; rd  kill	(11)
0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
1, 2, 3, 4, 5, 6, 7, 8, 10, 11

( 0 )->[2]->( 4 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d5(bb 0 insn -1) }u1(13){ d7(bb 0 insn -1) }u2(25){ d10(bb 0 insn -1) }u3(26){ d11(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 134 136
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 134 136
;; live  kill	
;; rd  in  	(10)
1, 2, 3, 4, 5, 6, 7, 8, 10, 11
;; rd  gen 	(3)
9, 14, 15
;; rd  kill	(3)
9, 14, 15
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; rd  out 	(13)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15
;;  UD chains for artificial uses
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 25 { d10(bb 0 insn -1) }
;;   reg 26 { d11(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 6
;;      reg 136 { d15(bb 2 insn 5) }
;;   UD chains for insn luid 2 uid 7
;;      reg 134 { d14(bb 2 insn 6) }
;;   UD chains for insn luid 3 uid 8
;;      reg 24 { d9(bb 2 insn 7) }

( 2 )->[3]->( 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u7(11){ d5(bb 0 insn -1) }u8(13){ d7(bb 0 insn -1) }u9(25){ d10(bb 0 insn -1) }u10(26){ d11(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(13)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15
;; rd  gen 	(1)
13
;; rd  kill	(2)
12, 13
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(14)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15
;;  UD chains for artificial uses
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 25 { d10(bb 0 insn -1) }
;;   reg 26 { d11(bb 0 insn -1) }

( 2 )->[4]->( 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u11(11){ d5(bb 0 insn -1) }u12(13){ d7(bb 0 insn -1) }u13(25){ d10(bb 0 insn -1) }u14(26){ d11(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	 133
;; live  kill	
;; rd  in  	(13)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15
;; rd  gen 	(1)
12
;; rd  kill	(2)
12, 13
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(14)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15
;;  UD chains for artificial uses
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 25 { d10(bb 0 insn -1) }
;;   reg 26 { d11(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 15
;;      reg 134 { d14(bb 2 insn 6) }

( 4 3 )->[5]->( 1 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u16(11){ d5(bb 0 insn -1) }u17(13){ d7(bb 0 insn -1) }u18(25){ d10(bb 0 insn -1) }u19(26){ d11(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(15)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15
;; rd  gen 	(1)
0
;; rd  kill	(2)
0, 1
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(15)
0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15
;;  UD chains for artificial uses
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 25 { d10(bb 0 insn -1) }
;;   reg 26 { d11(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 22
;;      reg 133 { d13(bb 3 insn 10) d12(bb 4 insn 15) }
;;   UD chains for insn luid 1 uid 28
;;      reg 0 { d0(bb 5 insn 22) }

( 5 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u22(0){ d0(bb 5 insn 22) }u23(11){ d5(bb 0 insn -1) }u24(13){ d7(bb 0 insn -1) }u25(14){ d8(bb 0 insn -1) }u26(25){ d10(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(15)
0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(15)
0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15
;;  UD chains for artificial uses
;;   reg 0 { d0(bb 5 insn 22) }
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 14 { d8(bb 0 insn -1) }
;;   reg 25 { d10(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 8 to worklist
  Adding insn 50 to worklist
  Adding insn 28 to worklist
Finished finding needed instructions:
  Adding insn 22 to worklist
Processing use of (reg 133 [ id ]) in insn 22:
  Adding insn 10 to worklist
  Adding insn 15 to worklist
Processing use of (reg 134 [ armpmu.312 ]) in insn 15:
  Adding insn 6 to worklist
Processing use of (reg 136) in insn 6:
  Adding insn 5 to worklist
Processing use of (reg 0 r0) in insn 28:
Processing use of (reg 24 cc) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 134 [ armpmu.312 ]) in insn 7:


armpmu_get_pmu_id

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 24[cc]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r3={1d} r11={1d,5u} r12={1d} r13={1d,5u} r14={1d,1u} r24={1d,1u} r25={1d,5u} r26={1d,4u} r133={2d,1u} r134={1d,2u} r136={1d,1u} 
;;    total ref usage 43{16d,27u,0e} in 9{9 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 6, 8, 9
0[0,2] 1[2,1] 2[3,1] 3[4,1] 11[5,1] 12[6,1] 13[7,1] 14[8,1] 24[9,1] 25[10,1] 26[11,1] 133[12,2] 134[14,1] 136[15,1] 
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 134 136
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 134 136
;; live  kill	
;; rd  in  	(10)
1, 2, 3, 4, 5, 6, 7, 8, 10, 11
;; rd  gen 	(3)
9, 14, 15
;; rd  kill	(3)
9, 14, 15

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)

(insn 5 2 6 2 arch/arm/kernel/perf_event.c:100 (set (reg/f:SI 136)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 6 5 7 2 arch/arm/kernel/perf_event.c:100 (set (reg/f:SI 134 [ armpmu.312 ])
        (mem/f/c/i:SI (reg/f:SI 136) [0 armpmu+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 136)
        (expr_list:REG_EQUAL (mem/f/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 armpmu+0 S4 A32])
            (nil))))

(insn 7 6 8 2 arch/arm/kernel/perf_event.c:100 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 134 [ armpmu.312 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 8 7 9 2 arch/arm/kernel/perf_event.c:100 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 13)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 8986 [0x231a])
            (nil))))
;; End of basic block 2 -> ( 4 3)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; rd  out 	(13)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15


;; Succ edge  4 [89.9%] 
;; Succ edge  3 [10.1%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u7(11){ }u8(13){ }u9(25){ }u10(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(13)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15
;; rd  gen 	(1)
13
;; rd  kill	(2)
12, 13

;; Pred edge  2 [10.1%]  (fallthru)
(note 9 8 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 10 9 50 3 arch/arm/kernel/perf_event.c:98 (set (reg/v:SI 133 [ id ])
        (const_int -19 [0xffffffffffffffed])) 167 {*arm_movsi_insn} (nil))

(jump_insn 50 10 51 3 (set (pc)
        (label_ref 16)) -1 (nil))
;; End of basic block 3 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(14)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15


;; Succ edge  5 [100.0%] 

(barrier 51 50 13)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u11(11){ }u12(13){ }u13(25){ }u14(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	 133
;; live  kill	
;; rd  in  	(13)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15
;; rd  gen 	(1)
12
;; rd  kill	(2)
12, 13

;; Pred edge  2 [89.9%] 
(code_label 13 51 14 4 2 "" [1 uses])

(note 14 13 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 15 14 16 4 arch/arm/kernel/perf_event.c:101 (set (reg/v:SI 133 [ id ])
        (mem/s/j:SI (reg/f:SI 134 [ armpmu.312 ]) [0 <variable>.id+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 134 [ armpmu.312 ])
        (nil)))
;; End of basic block 4 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(14)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u16(11){ }u17(13){ }u18(25){ }u19(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(15)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15
;; rd  gen 	(1)
0
;; rd  kill	(2)
0, 1

;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%] 
(code_label 16 15 17 5 3 "" [1 uses])

(note 17 16 22 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 22 17 28 5 arch/arm/kernel/perf_event.c:104 (set (reg/i:SI 0 r0)
        (reg/v:SI 133 [ id ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 133 [ id ])
        (nil)))

(insn 28 22 0 5 arch/arm/kernel/perf_event.c:104 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 5 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(15)
0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function armpmu_get_max_events (armpmu_get_max_events)[0:1306]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 10 (  1.7)
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 10 (  1.7)
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 10 (  1.7)


armpmu_get_max_events

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 24[cc]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r3={1d} r11={1d,5u} r12={1d} r13={1d,5u} r14={1d,1u} r24={1d,1u} r25={1d,5u} r26={1d,4u} r133={2d,1u} r134={1d,3u} r136={1d,1u} 
;;    total ref usage 44{16d,28u,0e} in 9{9 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 6, 8, 9
0[0,2] 1[2,1] 2[3,1] 3[4,1] 11[5,1] 12[6,1] 13[7,1] 14[8,1] 24[9,1] 25[10,1] 26[11,1] 133[12,2] 134[14,1] 136[15,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d1(0){ }d2(1){ }d3(2){ }d4(3){ }d5(11){ }d6(12){ }d7(13){ }d8(14){ }d10(25){ }d11(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
1, 2, 3, 4, 5, 6, 7, 8, 10, 11
;; rd  kill	(11)
0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
1, 2, 3, 4, 5, 6, 7, 8, 10, 11

( 0 )->[2]->( 4 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d5(bb 0 insn -1) }u1(13){ d7(bb 0 insn -1) }u2(25){ d10(bb 0 insn -1) }u3(26){ d11(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 134 136
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 134 136
;; live  kill	
;; rd  in  	(10)
1, 2, 3, 4, 5, 6, 7, 8, 10, 11
;; rd  gen 	(3)
9, 14, 15
;; rd  kill	(3)
9, 14, 15
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; rd  out 	(13)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15
;;  UD chains for artificial uses
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 25 { d10(bb 0 insn -1) }
;;   reg 26 { d11(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 6
;;      reg 136 { d15(bb 2 insn 5) }
;;   UD chains for insn luid 2 uid 7
;;      reg 134 { d14(bb 2 insn 6) }
;;   UD chains for insn luid 3 uid 8
;;      reg 24 { d9(bb 2 insn 7) }

( 2 )->[3]->( 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u7(11){ d5(bb 0 insn -1) }u8(13){ d7(bb 0 insn -1) }u9(25){ d10(bb 0 insn -1) }u10(26){ d11(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	 133
;; live  kill	
;; rd  in  	(13)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15
;; rd  gen 	(1)
12
;; rd  kill	(2)
12, 13
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(14)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15
;;  UD chains for artificial uses
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 25 { d10(bb 0 insn -1) }
;;   reg 26 { d11(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 10
;;      reg 134 { d14(bb 2 insn 6) }

( 2 )->[4]->( 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u12(11){ d5(bb 0 insn -1) }u13(13){ d7(bb 0 insn -1) }u14(25){ d10(bb 0 insn -1) }u15(26){ d11(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	 133
;; live  kill	
;; rd  in  	(13)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15
;; rd  gen 	(1)
13
;; rd  kill	(2)
12, 13
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(14)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15
;;  UD chains for artificial uses
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 25 { d10(bb 0 insn -1) }
;;   reg 26 { d11(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 15
;;      reg 134 { d14(bb 2 insn 6) }

( 4 3 )->[5]->( 1 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u17(11){ d5(bb 0 insn -1) }u18(13){ d7(bb 0 insn -1) }u19(25){ d10(bb 0 insn -1) }u20(26){ d11(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(15)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15
;; rd  gen 	(1)
0
;; rd  kill	(2)
0, 1
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(15)
0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15
;;  UD chains for artificial uses
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 25 { d10(bb 0 insn -1) }
;;   reg 26 { d11(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 22
;;      reg 133 { d13(bb 4 insn 15) d12(bb 3 insn 10) }
;;   UD chains for insn luid 1 uid 28
;;      reg 0 { d0(bb 5 insn 22) }

( 5 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u23(0){ d0(bb 5 insn 22) }u24(11){ d5(bb 0 insn -1) }u25(13){ d7(bb 0 insn -1) }u26(14){ d8(bb 0 insn -1) }u27(25){ d10(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(15)
0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(15)
0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15
;;  UD chains for artificial uses
;;   reg 0 { d0(bb 5 insn 22) }
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 14 { d8(bb 0 insn -1) }
;;   reg 25 { d10(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 8 to worklist
  Adding insn 32 to worklist
  Adding insn 28 to worklist
Finished finding needed instructions:
  Adding insn 22 to worklist
Processing use of (reg 133 [ max_events ]) in insn 22:
  Adding insn 15 to worklist
  Adding insn 10 to worklist
Processing use of (reg 134 [ armpmu.313 ]) in insn 10:
  Adding insn 6 to worklist
Processing use of (reg 136) in insn 6:
  Adding insn 5 to worklist
Processing use of (reg 134 [ armpmu.313 ]) in insn 15:
Processing use of (reg 0 r0) in insn 28:
Processing use of (reg 24 cc) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 134 [ armpmu.313 ]) in insn 7:


armpmu_get_max_events

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 24[cc]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r3={1d} r11={1d,5u} r12={1d} r13={1d,5u} r14={1d,1u} r24={1d,1u} r25={1d,5u} r26={1d,4u} r133={2d,1u} r134={1d,3u} r136={1d,1u} 
;;    total ref usage 44{16d,28u,0e} in 9{9 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 6, 8, 9
0[0,2] 1[2,1] 2[3,1] 3[4,1] 11[5,1] 12[6,1] 13[7,1] 14[8,1] 24[9,1] 25[10,1] 26[11,1] 133[12,2] 134[14,1] 136[15,1] 
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 134 136
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 134 136
;; live  kill	
;; rd  in  	(10)
1, 2, 3, 4, 5, 6, 7, 8, 10, 11
;; rd  gen 	(3)
9, 14, 15
;; rd  kill	(3)
9, 14, 15

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)

(insn 5 2 6 2 arch/arm/kernel/perf_event.c:112 (set (reg/f:SI 136)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 6 5 7 2 arch/arm/kernel/perf_event.c:112 (set (reg/f:SI 134 [ armpmu.313 ])
        (mem/f/c/i:SI (reg/f:SI 136) [0 armpmu+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 136)
        (expr_list:REG_EQUAL (mem/f/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 armpmu+0 S4 A32])
            (nil))))

(insn 7 6 8 2 arch/arm/kernel/perf_event.c:112 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 134 [ armpmu.313 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 8 7 9 2 arch/arm/kernel/perf_event.c:112 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 13)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 8986 [0x231a])
            (nil))))
;; End of basic block 2 -> ( 4 3)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; rd  out 	(13)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15


;; Succ edge  4 [89.9%] 
;; Succ edge  3 [10.1%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u7(11){ }u8(13){ }u9(25){ }u10(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	 133
;; live  kill	
;; rd  in  	(13)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15
;; rd  gen 	(1)
12
;; rd  kill	(2)
12, 13

;; Pred edge  2 [10.1%]  (fallthru)
(note 9 8 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 10 9 32 3 arch/arm/kernel/perf_event.c:110 (set (reg/v:SI 133 [ max_events ])
        (reg/f:SI 134 [ armpmu.313 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 134 [ armpmu.313 ])
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(jump_insn 32 10 33 3 (set (pc)
        (label_ref 16)) -1 (nil))
;; End of basic block 3 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(14)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15


;; Succ edge  5 [100.0%] 

(barrier 33 32 13)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u12(11){ }u13(13){ }u14(25){ }u15(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	 133
;; live  kill	
;; rd  in  	(13)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15
;; rd  gen 	(1)
13
;; rd  kill	(2)
12, 13

;; Pred edge  2 [89.9%] 
(code_label 13 33 14 4 8 "" [1 uses])

(note 14 13 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 15 14 16 4 arch/arm/kernel/perf_event.c:113 (set (reg/v:SI 133 [ max_events ])
        (mem/s/j:SI (plus:SI (reg/f:SI 134 [ armpmu.313 ])
                (const_int 56 [0x38])) [0 <variable>.num_events+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 134 [ armpmu.313 ])
        (nil)))
;; End of basic block 4 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(14)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u17(11){ }u18(13){ }u19(25){ }u20(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(15)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15
;; rd  gen 	(1)
0
;; rd  kill	(2)
0, 1

;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%] 
(code_label 16 15 17 5 9 "" [1 uses])

(note 17 16 22 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 22 17 28 5 arch/arm/kernel/perf_event.c:116 (set (reg/i:SI 0 r0)
        (reg/v:SI 133 [ max_events ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 133 [ max_events ])
        (nil)))

(insn 28 22 0 5 arch/arm/kernel/perf_event.c:116 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 5 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(15)
0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function perf_num_counters (perf_num_counters)[0:1307]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 10 (  1.7)
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 10 (  1.7)
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 10 (  1.7)


perf_num_counters

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 24[cc]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r3={1d} r11={1d,5u} r12={1d} r13={1d,5u} r14={1d,1u} r24={1d,1u} r25={1d,5u} r26={1d,4u} r133={1d,3u} r134={2d,1u} r136={1d,1u} 
;;    total ref usage 44{16d,28u,0e} in 9{9 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 6, 8, 9
0[0,2] 1[2,1] 2[3,1] 3[4,1] 11[5,1] 12[6,1] 13[7,1] 14[8,1] 24[9,1] 25[10,1] 26[11,1] 133[12,1] 134[13,2] 136[15,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d1(0){ }d2(1){ }d3(2){ }d4(3){ }d5(11){ }d6(12){ }d7(13){ }d8(14){ }d10(25){ }d11(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
1, 2, 3, 4, 5, 6, 7, 8, 10, 11
;; rd  kill	(11)
0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
1, 2, 3, 4, 5, 6, 7, 8, 10, 11

( 0 )->[2]->( 4 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d5(bb 0 insn -1) }u1(13){ d7(bb 0 insn -1) }u2(25){ d10(bb 0 insn -1) }u3(26){ d11(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 133 136
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 133 136
;; live  kill	
;; rd  in  	(10)
1, 2, 3, 4, 5, 6, 7, 8, 10, 11
;; rd  gen 	(3)
9, 12, 15
;; rd  kill	(3)
9, 12, 15
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15
;;  UD chains for artificial uses
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 25 { d10(bb 0 insn -1) }
;;   reg 26 { d11(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 6
;;      reg 136 { d15(bb 2 insn 5) }
;;   UD chains for insn luid 2 uid 7
;;      reg 133 { d12(bb 2 insn 6) }
;;   UD chains for insn luid 3 uid 8
;;      reg 24 { d9(bb 2 insn 7) }

( 2 )->[3]->( 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u7(11){ d5(bb 0 insn -1) }u8(13){ d7(bb 0 insn -1) }u9(25){ d10(bb 0 insn -1) }u10(26){ d11(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 134
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  gen 	 134
;; live  kill	
;; rd  in  	(13)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15
;; rd  gen 	(1)
13
;; rd  kill	(2)
13, 14
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; rd  out 	(14)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15
;;  UD chains for artificial uses
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 25 { d10(bb 0 insn -1) }
;;   reg 26 { d11(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 10
;;      reg 133 { d12(bb 2 insn 6) }

( 2 )->[4]->( 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u12(11){ d5(bb 0 insn -1) }u13(13){ d7(bb 0 insn -1) }u14(25){ d10(bb 0 insn -1) }u15(26){ d11(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 134
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  gen 	 134
;; live  kill	
;; rd  in  	(13)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15
;; rd  gen 	(1)
14
;; rd  kill	(2)
13, 14
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; rd  out 	(14)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15
;;  UD chains for artificial uses
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 25 { d10(bb 0 insn -1) }
;;   reg 26 { d11(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 15
;;      reg 133 { d12(bb 2 insn 6) }

( 4 3 )->[5]->( 1 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u17(11){ d5(bb 0 insn -1) }u18(13){ d7(bb 0 insn -1) }u19(25){ d10(bb 0 insn -1) }u20(26){ d11(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(15)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15
;; rd  gen 	(1)
0
;; rd  kill	(2)
0, 1
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(15)
0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15
;;  UD chains for artificial uses
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 25 { d10(bb 0 insn -1) }
;;   reg 26 { d11(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 22
;;      reg 134 { d14(bb 4 insn 15) d13(bb 3 insn 10) }
;;   UD chains for insn luid 1 uid 28
;;      reg 0 { d0(bb 5 insn 22) }

( 5 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u23(0){ d0(bb 5 insn 22) }u24(11){ d5(bb 0 insn -1) }u25(13){ d7(bb 0 insn -1) }u26(14){ d8(bb 0 insn -1) }u27(25){ d10(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(15)
0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(15)
0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15
;;  UD chains for artificial uses
;;   reg 0 { d0(bb 5 insn 22) }
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 14 { d8(bb 0 insn -1) }
;;   reg 25 { d10(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 8 to worklist
  Adding insn 32 to worklist
  Adding insn 28 to worklist
Finished finding needed instructions:
  Adding insn 22 to worklist
Processing use of (reg 134 [ max_events ]) in insn 22:
  Adding insn 15 to worklist
  Adding insn 10 to worklist
Processing use of (reg 133 [ armpmu.313 ]) in insn 10:
  Adding insn 6 to worklist
Processing use of (reg 136) in insn 6:
  Adding insn 5 to worklist
Processing use of (reg 133 [ armpmu.313 ]) in insn 15:
Processing use of (reg 0 r0) in insn 28:
Processing use of (reg 24 cc) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 133 [ armpmu.313 ]) in insn 7:


perf_num_counters

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 24[cc]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r3={1d} r11={1d,5u} r12={1d} r13={1d,5u} r14={1d,1u} r24={1d,1u} r25={1d,5u} r26={1d,4u} r133={1d,3u} r134={2d,1u} r136={1d,1u} 
;;    total ref usage 44{16d,28u,0e} in 9{9 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 6, 8, 9
0[0,2] 1[2,1] 2[3,1] 3[4,1] 11[5,1] 12[6,1] 13[7,1] 14[8,1] 24[9,1] 25[10,1] 26[11,1] 133[12,1] 134[13,2] 136[15,1] 
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 133 136
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 133 136
;; live  kill	
;; rd  in  	(10)
1, 2, 3, 4, 5, 6, 7, 8, 10, 11
;; rd  gen 	(3)
9, 12, 15
;; rd  kill	(3)
9, 12, 15

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)

(insn 5 2 6 2 arch/arm/kernel/perf_event.c:112 (set (reg/f:SI 136)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 6 5 7 2 arch/arm/kernel/perf_event.c:112 (set (reg/f:SI 133 [ armpmu.313 ])
        (mem/f/c/i:SI (reg/f:SI 136) [0 armpmu+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 136)
        (expr_list:REG_EQUAL (mem/f/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 armpmu+0 S4 A32])
            (nil))))

(insn 7 6 8 2 arch/arm/kernel/perf_event.c:112 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 133 [ armpmu.313 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 8 7 9 2 arch/arm/kernel/perf_event.c:112 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 13)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 8986 [0x231a])
            (nil))))
;; End of basic block 2 -> ( 4 3)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15


;; Succ edge  4 [89.9%] 
;; Succ edge  3 [10.1%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u7(11){ }u8(13){ }u9(25){ }u10(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 134
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  gen 	 134
;; live  kill	
;; rd  in  	(13)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15
;; rd  gen 	(1)
13
;; rd  kill	(2)
13, 14

;; Pred edge  2 [10.1%]  (fallthru)
(note 9 8 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 10 9 32 3 arch/arm/kernel/perf_event.c:110 (set (reg/v:SI 134 [ max_events ])
        (reg/f:SI 133 [ armpmu.313 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 133 [ armpmu.313 ])
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(jump_insn 32 10 33 3 (set (pc)
        (label_ref 16)) -1 (nil))
;; End of basic block 3 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; rd  out 	(14)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15


;; Succ edge  5 [100.0%] 

(barrier 33 32 13)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u12(11){ }u13(13){ }u14(25){ }u15(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 134
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  gen 	 134
;; live  kill	
;; rd  in  	(13)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15
;; rd  gen 	(1)
14
;; rd  kill	(2)
13, 14

;; Pred edge  2 [89.9%] 
(code_label 13 33 14 4 14 "" [1 uses])

(note 14 13 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 15 14 16 4 arch/arm/kernel/perf_event.c:113 (set (reg/v:SI 134 [ max_events ])
        (mem/s/j:SI (plus:SI (reg/f:SI 133 [ armpmu.313 ])
                (const_int 56 [0x38])) [0 <variable>.num_events+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 133 [ armpmu.313 ])
        (nil)))
;; End of basic block 4 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; rd  out 	(14)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u17(11){ }u18(13){ }u19(25){ }u20(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(15)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15
;; rd  gen 	(1)
0
;; rd  kill	(2)
0, 1

;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%] 
(code_label 16 15 17 5 15 "" [1 uses])

(note 17 16 22 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 22 17 28 5 arch/arm/kernel/perf_event.c:122 (set (reg/i:SI 0 r0)
        (reg/v:SI 134 [ max_events ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 134 [ max_events ])
        (nil)))

(insn 28 22 0 5 arch/arm/kernel/perf_event.c:122 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 5 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(15)
0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function armpmu_event_update (armpmu_event_update)[0:1312]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 11 n_edges 14 count 19 (  1.7)
df_worklist_dataflow_doublequeue:n_basic_blocks 11 n_edges 14 count 20 (  1.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 11 n_edges 14 count 21 (  1.9)


armpmu_event_update

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={4d,5u} r1={3d,3u} r2={2d,1u} r3={2d,1u} r11={1d,10u} r12={2d} r13={1d,11u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={12d,4u} r25={1d,10u} r26={1d,9u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,3u} r134={1d,4u} r135={1d,1u} r136={1d} r137={1d} r138={1d,1u} r139={1d} r140={1d} r141={1d,3u} r142={1d,1u} r144={1d,2u} r145={1d,2u} r146={2d,2u} r147={1d,3u,1d} r148={1d,1u} r149={1d,5u} r151={1d,3u} r152={1d,4u} r153={1d,1u} r154={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r167={1d,1u} 
;;    total ref usage 271{170d,100u,1e} in 42{41 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140
0[0,4] 1[4,3] 2[7,2] 3[9,2] 11[11,1] 12[12,2] 13[14,1] 14[15,2] 15[17,1] 16[18,1] 17[19,1] 18[20,1] 19[21,1] 20[22,1] 21[23,1] 22[24,1] 23[25,1] 24[26,12] 25[38,1] 26[39,1] 27[40,1] 28[41,1] 29[42,1] 30[43,1] 31[44,1] 32[45,1] 33[46,1] 34[47,1] 35[48,1] 36[49,1] 37[50,1] 38[51,1] 39[52,1] 40[53,1] 41[54,1] 42[55,1] 43[56,1] 44[57,1] 45[58,1] 46[59,1] 47[60,1] 48[61,1] 49[62,1] 50[63,1] 51[64,1] 52[65,1] 53[66,1] 54[67,1] 55[68,1] 56[69,1] 57[70,1] 58[71,1] 59[72,1] 60[73,1] 61[74,1] 62[75,1] 63[76,1] 64[77,1] 65[78,1] 66[79,1] 67[80,1] 68[81,1] 69[82,1] 70[83,1] 71[84,1] 72[85,1] 73[86,1] 74[87,1] 75[88,1] 76[89,1] 77[90,1] 78[91,1] 79[92,1] 80[93,1] 81[94,1] 82[95,1] 83[96,1] 84[97,1] 85[98,1] 86[99,1] 87[100,1] 88[101,1] 89[102,1] 90[103,1] 91[104,1] 92[105,1] 93[106,1] 94[107,1] 95[108,1] 96[109,1] 97[110,1] 98[111,1] 99[112,1] 100[113,1] 101[114,1] 102[115,1] 103[116,1] 104[117,1] 105[118,1] 106[119,1] 107[120,1] 108[121,1] 109[122,1] 110[123,1] 111[124,1] 112[125,1] 113[126,1] 114[127,1] 115[128,1] 116[129,1] 117[130,1] 118[131,1] 119[132,1] 120[133,1] 121[134,1] 122[135,1] 123[136,1] 124[137,1] 125[138,1] 126[139,1] 127[140,1] 133[141,1] 134[142,1] 135[143,1] 136[144,1] 137[145,1] 138[146,1] 139[147,1] 140[148,1] 141[149,1] 142[150,1] 144[151,1] 145[152,1] 146[153,2] 147[155,1] 148[156,1] 149[157,1] 151[158,1] 152[159,1] 153[160,1] 154[161,1] 156[162,1] 157[163,1] 158[164,1] 159[165,1] 160[166,1] 161[167,1] 162[168,1] 167[169,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d3(0){ }d6(1){ }d8(2){ }d10(3){ }d11(11){ }d13(12){ }d14(13){ }d16(14){ }d38(25){ }d39(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
3, 6, 8, 10, 11, 13, 14, 16, 38, 39
;; rd  kill	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 38, 39
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(10)
3, 6, 8, 10, 11, 13, 14, 16, 38, 39

( 0 )->[2]->( 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d11(bb 0 insn -1) }u1(13){ d14(bb 0 insn -1) }u2(25){ d38(bb 0 insn -1) }u3(26){ d39(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 149 151 152 153 154 167
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 149 151 152 153 154 167
;; live  kill	
;; rd  in  	(10)
3, 6, 8, 10, 11, 13, 14, 16, 38, 39
;; rd  gen 	(6)
157, 158, 159, 160, 161, 169
;; rd  kill	(6)
157, 158, 159, 160, 161, 169
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 151 152 153 154 167
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 151 152 153 154 167
;; rd  out 	(16)
3, 6, 8, 10, 11, 13, 14, 16, 38, 39, 157, 158, 159, 160, 161, 169
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d38(bb 0 insn -1) }
;;   reg 26 { d39(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d3(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 3
;;      reg 1 { d6(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 4
;;      reg 2 { d8(bb 0 insn -1) }
;;   UD chains for insn luid 3 uid 5
;;      reg 3 { d10(bb 0 insn -1) }
;;   UD chains for insn luid 4 uid 10
;;      reg 152 { d159(bb 2 insn 3) }

( 6 2 5 )->[3]->( 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u13(11){ d11(bb 0 insn -1) }u14(13){ d14(bb 0 insn -1) }u15(25){ d38(bb 0 insn -1) }u16(26){ d39(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 151 152 153 154 167
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 153 167
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 144 148 156 157
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 151 152 153 154 167
;; live  gen 	 0 [r0] 133 144 148 156 157
;; live  kill	 14 [lr]
;; rd  in  	(26)
1, 3, 6, 8, 10, 11, 13, 14, 16, 34, 35, 38, 39, 141, 149, 150, 151, 156, 157, 158, 159, 160, 161, 162, 163, 169
;; rd  gen 	(6)
1, 141, 151, 156, 162, 163
;; rd  kill	(11)
0, 1, 2, 3, 15, 16, 141, 151, 156, 162, 163
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 144 149 151 152 153 154 167
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 144 149 151 152 153 154 167
;; rd  out 	(24)
1, 6, 8, 10, 11, 13, 14, 34, 35, 38, 39, 141, 149, 150, 151, 156, 157, 158, 159, 160, 161, 162, 163, 169
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d38(bb 0 insn -1) }
;;   reg 26 { d39(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 13
;;      reg 149 { d157(bb 2 insn 10) }
;;      reg 149 { d157(bb 2 insn 10) }
;;   UD chains for insn luid 1 uid 15
;;      reg 167 { d169(bb 2 insn 14) }
;;   UD chains for insn luid 2 uid 16
;;      reg 156 { d162(bb 3 insn 15) }
;;   UD chains for insn luid 3 uid 17
;;      reg 153 { d160(bb 2 insn 4) }
;;   UD chains for insn luid 4 uid 18
;;      reg 13 { d14(bb 0 insn -1) }
;;      reg 0 { d2(bb 3 insn 17) }
;;      reg 157 { d163(bb 3 insn 16) }
;;   UD chains for insn luid 5 uid 19
;;      reg 0 { d1(bb 3 insn 18) }
;;   UD chains for insn luid 6 uid 20
;;      reg 148 { d156(bb 3 insn 19) }

( 3 4 )->[4]->( 4 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u27(11){ d11(bb 0 insn -1) }u28(13){ d14(bb 0 insn -1) }u29(25){ d38(bb 0 insn -1) }u30(26){ d39(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 144 149 151 152 153 154 167
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 144 149
;; lr  def 	 24 [cc] 141 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 144 149 151 152 153 154 167
;; live  gen 	 24 [cc] 141 142
;; live  kill	 24 [cc]
;; rd  in  	(25)
1, 6, 8, 10, 11, 13, 14, 34, 35, 36, 38, 39, 141, 149, 150, 151, 156, 157, 158, 159, 160, 161, 162, 163, 169
;; rd  gen 	(3)
36, 149, 150
;; rd  kill	(14)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 149, 150
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 141 144 149 151 152 153 154 167
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 144 149 151 152 153 154 167
;; rd  out 	(23)
1, 6, 8, 10, 11, 13, 14, 36, 38, 39, 141, 149, 150, 151, 156, 157, 158, 159, 160, 161, 162, 163, 169
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d38(bb 0 insn -1) }
;;   reg 26 { d39(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 23
;;      reg 133 { d141(bb 3 insn 13) }
;;      reg 144 { d151(bb 3 insn 20) }
;;      reg 149 { d157(bb 2 insn 10) }
;;      reg 149 { d157(bb 2 insn 10) }
;;      reg 149 { d157(bb 2 insn 10) }
;;   UD chains for insn luid 1 uid 25
;;      reg 142 { d150(bb 4 insn 23) }
;;   UD chains for insn luid 2 uid 26
;;      reg 24 { d36(bb 4 insn 25) }

( 4 )->[5]->( 3 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u38(11){ d11(bb 0 insn -1) }u39(13){ d14(bb 0 insn -1) }u40(25){ d38(bb 0 insn -1) }u41(26){ d39(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 141 144 149 151 152 153 154 167
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 144 149 151 152 153 154 167
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(23)
1, 6, 8, 10, 11, 13, 14, 36, 38, 39, 141, 149, 150, 151, 156, 157, 158, 159, 160, 161, 162, 163, 169
;; rd  gen 	(1)
35
;; rd  kill	(12)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 141 144 149 151 152 153 154 167
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 144 149 151 152 153 154 167
;; rd  out 	(23)
1, 6, 8, 10, 11, 13, 14, 35, 38, 39, 141, 149, 150, 151, 156, 157, 158, 159, 160, 161, 162, 163, 169
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d38(bb 0 insn -1) }
;;   reg 26 { d39(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 30
;;      reg 133 { d141(bb 3 insn 13) }
;;      reg 141 { d149(bb 4 insn 23) }
;;   UD chains for insn luid 2 uid 31
;;      reg 24 { d35(bb 5 insn 30) }

( 5 )->[6]->( 3 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u45(11){ d11(bb 0 insn -1) }u46(13){ d14(bb 0 insn -1) }u47(25){ d38(bb 0 insn -1) }u48(26){ d39(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 141 144 149 151 152 153 154 167
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 144 149 151 152 153 154 167
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(23)
1, 6, 8, 10, 11, 13, 14, 35, 38, 39, 141, 149, 150, 151, 156, 157, 158, 159, 160, 161, 162, 163, 169
;; rd  gen 	(1)
34
;; rd  kill	(12)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 144 149 151 152 153 154 167
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144 149 151 152 153 154 167
;; rd  out 	(23)
1, 6, 8, 10, 11, 13, 14, 34, 38, 39, 141, 149, 150, 151, 156, 157, 158, 159, 160, 161, 162, 163, 169
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d38(bb 0 insn -1) }
;;   reg 26 { d39(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 32
;;      reg 133 { d141(bb 3 insn 13) }
;;      reg 141 { d149(bb 4 insn 23) }
;;   UD chains for insn luid 1 uid 33
;;      reg 24 { d34(bb 6 insn 32) }

( 6 )->[7]->( 8 9 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u52(11){ d11(bb 0 insn -1) }u53(13){ d14(bb 0 insn -1) }u54(25){ d38(bb 0 insn -1) }u55(26){ d39(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 144 151 152 154
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144 154
;; lr  def 	 24 [cc] 134 145 147 158 159
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144 151 152 154
;; live  gen 	 24 [cc] 134 145 147 158 159
;; live  kill	
;; rd  in  	(23)
1, 6, 8, 10, 11, 13, 14, 34, 38, 39, 141, 149, 150, 151, 156, 157, 158, 159, 160, 161, 162, 163, 169
;; rd  gen 	(6)
33, 142, 152, 155, 164, 165
;; rd  kill	(17)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 142, 152, 155, 164, 165
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 145 147 151 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 145 147 151 152
;; rd  out 	(28)
1, 6, 8, 10, 11, 13, 14, 33, 38, 39, 141, 142, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 169
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d38(bb 0 insn -1) }
;;   reg 26 { d39(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 36
;;      reg 158 { d164(bb 7 insn 35) }
;;   UD chains for insn luid 2 uid 37
;;      reg 159 { d165(bb 7 insn 36) }
;;   UD chains for insn luid 3 uid 38
;;      reg 144 { d151(bb 3 insn 20) }
;;      reg 147 { d155(bb 7 insn 37) }
;;   UD chains for insn luid 4 uid 39
;;      reg 141 { d149(bb 4 insn 23) }
;;      reg 147 { d155(bb 7 insn 37) }
;;   UD chains for insn luid 5 uid 40
;;      reg 154 { d161(bb 2 insn 5) }
;;   UD chains for insn luid 6 uid 41
;;      reg 24 { d33(bb 7 insn 40) }

( 7 )->[8]->( 10 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u64(11){ d11(bb 0 insn -1) }u65(13){ d14(bb 0 insn -1) }u66(25){ d38(bb 0 insn -1) }u67(26){ d39(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 145 147 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 145 147
;; lr  def 	 24 [cc] 146 160 161 162
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 145 147 151 152
;; live  gen 	 146 160 161 162
;; live  kill	 24 [cc]
;; rd  in  	(28)
1, 6, 8, 10, 11, 13, 14, 33, 38, 39, 141, 142, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 169
;; rd  gen 	(4)
154, 166, 167, 168
;; rd  kill	(17)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 153, 154, 166, 167, 168
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 146 151 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 146 151 152
;; rd  out 	(31)
1, 6, 8, 10, 11, 13, 14, 38, 39, 141, 142, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d38(bb 0 insn -1) }
;;   reg 26 { d39(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 44
;;      reg 147 { d155(bb 7 insn 37) }
;;      reg 161 { d167(bb 8 insn 43) }
;;   eq_note reg 147 { }
;;   UD chains for insn luid 2 uid 45
;;      reg 134 { d142(bb 7 insn 38) }
;;      reg 160 { d166(bb 8 insn 44) }
;;   UD chains for insn luid 3 uid 46
;;      reg 145 { d152(bb 7 insn 39) }
;;      reg 162 { d168(bb 8 insn 45) }

( 7 )->[9]->( 10 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u75(11){ d11(bb 0 insn -1) }u76(13){ d14(bb 0 insn -1) }u77(25){ d38(bb 0 insn -1) }u78(26){ d39(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 145 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 145
;; lr  def 	 24 [cc] 146
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 145 151 152
;; live  gen 	 146
;; live  kill	 24 [cc]
;; rd  in  	(28)
1, 6, 8, 10, 11, 13, 14, 33, 38, 39, 141, 142, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 169
;; rd  gen 	(1)
153
;; rd  kill	(14)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 153, 154
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 146 151 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 146 151 152
;; rd  out 	(28)
1, 6, 8, 10, 11, 13, 14, 38, 39, 141, 142, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 169
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d38(bb 0 insn -1) }
;;   reg 26 { d39(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 51
;;      reg 134 { d142(bb 7 insn 38) }
;;      reg 145 { d152(bb 7 insn 39) }

( 9 8 )->[10]->( 1 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u81(11){ d11(bb 0 insn -1) }u82(13){ d14(bb 0 insn -1) }u83(25){ d38(bb 0 insn -1) }u84(26){ d39(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 146 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 146 151 152
;; lr  def 	 0 [r0] 1 [r1] 24 [cc] 135 136 137 138 139 140
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 146 151 152
;; live  gen 	 0 [r0] 1 [r1] 135 136 137 138 139 140
;; live  kill	 24 [cc]
;; rd  in  	(32)
1, 6, 8, 10, 11, 13, 14, 38, 39, 141, 142, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169
;; rd  gen 	(8)
0, 4, 143, 144, 145, 146, 147, 148
;; rd  kill	(25)
0, 1, 2, 3, 4, 5, 6, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 143, 144, 145, 146, 147, 148
;; lr  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(38)
0, 4, 8, 10, 11, 13, 14, 38, 39, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d38(bb 0 insn -1) }
;;   reg 26 { d39(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 54
;;      reg 151 { d158(bb 2 insn 2) }
;;   UD chains for insn luid 1 uid 55
;;      reg 138 { d146(bb 10 insn 54) }
;;      reg 146 { d154(bb 8 insn 46) d153(bb 9 insn 51) }
;;      reg 151 { d158(bb 2 insn 2) }
;;      reg 151 { d158(bb 2 insn 2) }
;;   UD chains for insn luid 2 uid 56
;;      reg 152 { d159(bb 2 insn 3) }
;;   UD chains for insn luid 3 uid 57
;;      reg 135 { d143(bb 10 insn 56) }
;;      reg 146 { d154(bb 8 insn 46) d153(bb 9 insn 51) }
;;      reg 152 { d159(bb 2 insn 3) }
;;      reg 152 { d159(bb 2 insn 3) }
;;   UD chains for insn luid 4 uid 76
;;      reg 134 { d142(bb 7 insn 38) }
;;   UD chains for insn luid 5 uid 77
;;      reg 134 { d142(bb 7 insn 38) }
;;   UD chains for insn luid 6 uid 68
;;      reg 0 { d0(bb 10 insn 76) }
;;      reg 1 { d4(bb 10 insn 77) }

( 10 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u99(0){ d0(bb 10 insn 76) }u100(1){ d4(bb 10 insn 77) }u101(11){ d11(bb 0 insn -1) }u102(13){ d14(bb 0 insn -1) }u103(14){ }u104(25){ d38(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(38)
0, 4, 8, 10, 11, 13, 14, 38, 39, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(38)
0, 4, 8, 10, 11, 13, 14, 38, 39, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169
;;  UD chains for artificial uses
;;   reg 0 { d0(bb 10 insn 76) }
;;   reg 1 { d4(bb 10 insn 77) }
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 14 { }
;;   reg 25 { d38(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 21 to worklist
  Adding insn 18 to worklist
  Adding insn 13 to worklist
  Adding insn 26 to worklist
  Adding insn 23 to worklist
  Adding insn 31 to worklist
  Adding insn 28 to worklist
  Adding insn 33 to worklist
  Adding insn 41 to worklist
  Adding insn 88 to worklist
  Adding insn 68 to worklist
  Adding insn 57 to worklist
  Adding insn 55 to worklist
Finished finding needed instructions:
  Adding insn 76 to worklist
  Adding insn 77 to worklist
Processing use of (subreg (reg 134 [ new_raw_count.500 ]) 4) in insn 77:
  Adding insn 38 to worklist
Processing use of (reg 144 [ new_raw_count ]) in insn 38:
  Adding insn 20 to worklist
Processing use of (reg 147 [ D.25235 ]) in insn 38:
  Adding insn 37 to worklist
Processing use of (reg 159 [ armpmu ]) in insn 37:
  Adding insn 36 to worklist
Processing use of (reg 158) in insn 36:
  Adding insn 35 to worklist
Processing use of (reg 148 [ D.25232 ]) in insn 20:
  Adding insn 19 to worklist
Processing use of (reg 0 r0) in insn 19:
Processing use of (subreg (reg 134 [ new_raw_count.500 ]) 0) in insn 76:
Processing use of (reg 138 [ D.26333 ]) in insn 55:
  Adding insn 54 to worklist
Processing use of (reg 146 [ delta ]) in insn 55:
  Adding insn 46 to worklist
  Adding insn 51 to worklist
Processing use of (reg 151 [ event ]) in insn 55:
  Adding insn 2 to worklist
Processing use of (reg 151 [ event ]) in insn 55:
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 134 [ new_raw_count.500 ]) in insn 51:
Processing use of (reg 145 [ prev_raw_count ]) in insn 51:
  Adding insn 39 to worklist
Processing use of (reg 141 [ oldval ]) in insn 39:
Processing use of (reg 147 [ D.25235 ]) in insn 39:
Processing use of (reg 145 [ prev_raw_count ]) in insn 46:
Processing use of (reg 162) in insn 46:
  Adding insn 45 to worklist
Processing use of (reg 134 [ new_raw_count.500 ]) in insn 45:
Processing use of (reg 160) in insn 45:
  Adding insn 44 to worklist
Processing use of (reg 147 [ D.25235 ]) in insn 44:
Processing use of (reg 161) in insn 44:
  Adding insn 43 to worklist
Processing use of (reg 151 [ event ]) in insn 54:
Processing use of (reg 135 [ D.26338 ]) in insn 57:
  Adding insn 56 to worklist
Processing use of (reg 146 [ delta ]) in insn 57:
Processing use of (reg 152 [ hwc ]) in insn 57:
  Adding insn 3 to worklist
Processing use of (reg 152 [ hwc ]) in insn 57:
Processing use of (reg 1 r1) in insn 3:
Processing use of (reg 152 [ hwc ]) in insn 56:
Processing use of (reg 0 r0) in insn 68:
Processing use of (reg 1 r1) in insn 68:
Processing use of (reg 24 cc) in insn 41:
  Adding insn 40 to worklist
Processing use of (reg 154 [ overflow ]) in insn 40:
  Adding insn 5 to worklist
Processing use of (reg 3 r3) in insn 5:
Processing use of (reg 24 cc) in insn 33:
  Adding insn 32 to worklist
Processing use of (subreg (reg 133 [ prev_raw_count.501 ]) 4) in insn 32:
Processing use of (subreg (reg 141 [ oldval ]) 4) in insn 32:
Processing use of (reg 24 cc) in insn 31:
  Adding insn 30 to worklist
Processing use of (subreg (reg 133 [ prev_raw_count.501 ]) 0) in insn 30:
Processing use of (subreg (reg 141 [ oldval ]) 0) in insn 30:
Processing use of (reg 133 [ prev_raw_count.501 ]) in insn 23:
Processing use of (reg 144 [ new_raw_count ]) in insn 23:
Processing use of (reg 149 [ D.25228 ]) in insn 23:
  Adding insn 10 to worklist
Processing use of (reg 149 [ D.25228 ]) in insn 23:
Processing use of (reg 149 [ D.25228 ]) in insn 23:
Processing use of (reg 152 [ hwc ]) in insn 10:
Processing use of (reg 24 cc) in insn 26:
  Adding insn 25 to worklist
Processing use of (reg 142 [ res ]) in insn 25:
Processing use of (reg 149 [ D.25228 ]) in insn 13:
Processing use of (reg 149 [ D.25228 ]) in insn 13:
Processing use of (reg 13 sp) in insn 18:
Processing use of (reg 0 r0) in insn 18:
  Adding insn 17 to worklist
Processing use of (reg 157 [ <variable>.read_counter ]) in insn 18:
  Adding insn 16 to worklist
Processing use of (reg 156 [ armpmu ]) in insn 16:
  Adding insn 15 to worklist
Processing use of (reg 167) in insn 15:
  Adding insn 14 to worklist
Processing use of (reg 153 [ idx ]) in insn 17:
  Adding insn 4 to worklist
Processing use of (reg 2 r2) in insn 4:


armpmu_event_update

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={4d,5u} r1={3d,3u} r2={2d,1u} r3={2d,1u} r11={1d,10u} r12={2d} r13={1d,11u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={12d,4u} r25={1d,10u} r26={1d,9u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,3u} r134={1d,4u} r135={1d,1u} r136={1d} r137={1d} r138={1d,1u} r139={1d} r140={1d} r141={1d,3u} r142={1d,1u} r144={1d,2u} r145={1d,2u} r146={2d,2u} r147={1d,3u,1d} r148={1d,1u} r149={1d,5u} r151={1d,3u} r152={1d,4u} r153={1d,1u} r154={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r167={1d,1u} 
;;    total ref usage 271{170d,100u,1e} in 42{41 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140
0[0,4] 1[4,3] 2[7,2] 3[9,2] 11[11,1] 12[12,2] 13[14,1] 14[15,2] 15[17,1] 16[18,1] 17[19,1] 18[20,1] 19[21,1] 20[22,1] 21[23,1] 22[24,1] 23[25,1] 24[26,12] 25[38,1] 26[39,1] 27[40,1] 28[41,1] 29[42,1] 30[43,1] 31[44,1] 32[45,1] 33[46,1] 34[47,1] 35[48,1] 36[49,1] 37[50,1] 38[51,1] 39[52,1] 40[53,1] 41[54,1] 42[55,1] 43[56,1] 44[57,1] 45[58,1] 46[59,1] 47[60,1] 48[61,1] 49[62,1] 50[63,1] 51[64,1] 52[65,1] 53[66,1] 54[67,1] 55[68,1] 56[69,1] 57[70,1] 58[71,1] 59[72,1] 60[73,1] 61[74,1] 62[75,1] 63[76,1] 64[77,1] 65[78,1] 66[79,1] 67[80,1] 68[81,1] 69[82,1] 70[83,1] 71[84,1] 72[85,1] 73[86,1] 74[87,1] 75[88,1] 76[89,1] 77[90,1] 78[91,1] 79[92,1] 80[93,1] 81[94,1] 82[95,1] 83[96,1] 84[97,1] 85[98,1] 86[99,1] 87[100,1] 88[101,1] 89[102,1] 90[103,1] 91[104,1] 92[105,1] 93[106,1] 94[107,1] 95[108,1] 96[109,1] 97[110,1] 98[111,1] 99[112,1] 100[113,1] 101[114,1] 102[115,1] 103[116,1] 104[117,1] 105[118,1] 106[119,1] 107[120,1] 108[121,1] 109[122,1] 110[123,1] 111[124,1] 112[125,1] 113[126,1] 114[127,1] 115[128,1] 116[129,1] 117[130,1] 118[131,1] 119[132,1] 120[133,1] 121[134,1] 122[135,1] 123[136,1] 124[137,1] 125[138,1] 126[139,1] 127[140,1] 133[141,1] 134[142,1] 135[143,1] 136[144,1] 137[145,1] 138[146,1] 139[147,1] 140[148,1] 141[149,1] 142[150,1] 144[151,1] 145[152,1] 146[153,2] 147[155,1] 148[156,1] 149[157,1] 151[158,1] 152[159,1] 153[160,1] 154[161,1] 156[162,1] 157[163,1] 158[164,1] 159[165,1] 160[166,1] 161[167,1] 162[168,1] 167[169,1] 
(note 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 149 151 152 153 154 167
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 149 151 152 153 154 167
;; live  kill	
;; rd  in  	(10)
3, 6, 8, 10, 11, 13, 14, 16, 38, 39
;; rd  gen 	(6)
157, 158, 159, 160, 161, 169
;; rd  kill	(6)
157, 158, 159, 160, 161, 169

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 7 3 2 arch/arm/kernel/perf_event.c:209 (set (reg/v/f:SI 151 [ event ])
        (reg:SI 0 r0 [ event ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ event ])
        (nil)))

(insn 3 2 4 2 arch/arm/kernel/perf_event.c:209 (set (reg/v/f:SI 152 [ hwc ])
        (reg:SI 1 r1 [ hwc ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ hwc ])
        (nil)))

(insn 4 3 5 2 arch/arm/kernel/perf_event.c:209 (set (reg/v:SI 153 [ idx ])
        (reg:SI 2 r2 [ idx ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ idx ])
        (nil)))

(insn 5 4 6 2 arch/arm/kernel/perf_event.c:209 (set (reg/v:SI 154 [ overflow ])
        (reg:SI 3 r3 [ overflow ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [ overflow ])
        (nil)))

(note 6 5 8 2 NOTE_INSN_FUNCTION_BEG)

(note 8 6 10 2 ("again") NOTE_INSN_DELETED_LABEL 20)

(insn 10 8 14 2 arch/arm/kernel/perf_event.c:213 (set (reg/f:SI 149 [ D.25228 ])
        (plus:SI (reg/v/f:SI 152 [ hwc ])
            (const_int 80 [0x50]))) 4 {*arm_addsi3} (nil))

(insn 14 10 87 2 arch/arm/kernel/perf_event.c:214 (set (reg/f:SI 167)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 2 -> ( 3)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 151 152 153 154 167
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 151 152 153 154 167
;; rd  out 	(16)
3, 6, 8, 10, 11, 13, 14, 16, 38, 39, 157, 158, 159, 160, 161, 169


;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 6 2 5) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u13(11){ }u14(13){ }u15(25){ }u16(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 151 152 153 154 167
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 153 167
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 144 148 156 157
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 151 152 153 154 167
;; live  gen 	 0 [r0] 133 144 148 156 157
;; live  kill	 14 [lr]
;; rd  in  	(26)
1, 3, 6, 8, 10, 11, 13, 14, 16, 34, 35, 38, 39, 141, 149, 150, 151, 156, 157, 158, 159, 160, 161, 162, 163, 169
;; rd  gen 	(6)
1, 141, 151, 156, 162, 163
;; rd  kill	(11)
0, 1, 2, 3, 15, 16, 141, 151, 156, 162, 163

;; Pred edge  6 [71.0%]  (dfs_back)
;; Pred edge  2 [100.0%]  (fallthru)
;; Pred edge  5 [71.0%]  (dfs_back)
(code_label 87 14 86 3 29 "" [2 uses])

(note 86 87 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 13 86 15 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/atomic.h:248 (set (reg/v:DI 133 [ prev_raw_count.501 ])
        (asm_operands/v:DI ("@ atomic64_read
	ldrexd	%0, %H0, [%1]") ("=&r") 0 [
                (reg/f:SI 149 [ D.25228 ])
                (mem/s/j:DI (reg/f:SI 149 [ D.25228 ]) [0 <variable>.counter+0 S8 A64])
            ]
             [
                (asm_input:SI ("r") 0)
                (asm_input:DI ("Qo") 0)
            ] 2628081)) -1 (nil))

(insn 15 13 16 3 arch/arm/kernel/perf_event.c:214 (set (reg/f:SI 156 [ armpmu ])
        (mem/f/c/i:SI (reg/f:SI 167) [0 armpmu+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 armpmu+0 S4 A32])
        (nil)))

(insn 16 15 17 3 arch/arm/kernel/perf_event.c:214 (set (reg/f:SI 157 [ <variable>.read_counter ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 156 [ armpmu ])
                (const_int 24 [0x18])) [0 <variable>.read_counter+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 156 [ armpmu ])
        (nil)))

(insn 17 16 18 3 arch/arm/kernel/perf_event.c:214 (set (reg:SI 0 r0)
        (reg/v:SI 153 [ idx ])) 167 {*arm_movsi_insn} (nil))

(call_insn 18 17 19 3 arch/arm/kernel/perf_event.c:214 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (reg/f:SI 157 [ <variable>.read_counter ]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 249 {*call_value_reg_armv5} (expr_list:REG_DEAD (reg/f:SI 157 [ <variable>.read_counter ])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 19 18 20 3 arch/arm/kernel/perf_event.c:214 (set (reg:SI 148 [ D.25232 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 20 19 21 3 arch/arm/kernel/perf_event.c:214 (set (reg/v:DI 144 [ new_raw_count ])
        (zero_extend:DI (reg:SI 148 [ D.25232 ]))) 138 {*arm_zero_extendsidi2} (expr_list:REG_DEAD (reg:SI 148 [ D.25232 ])
        (nil)))

(insn 21 20 24 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/atomic.h:356 (parallel [
            (asm_operands/v ("dmb") ("") 0 []
                 [] 2641905)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 144 149 151 152 153 154 167
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 144 149 151 152 153 154 167
;; rd  out 	(24)
1, 6, 8, 10, 11, 13, 14, 34, 35, 38, 39, 141, 149, 150, 151, 156, 157, 158, 159, 160, 161, 162, 163, 169


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 3 4) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u27(11){ }u28(13){ }u29(25){ }u30(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 144 149 151 152 153 154 167
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 144 149
;; lr  def 	 24 [cc] 141 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 144 149 151 152 153 154 167
;; live  gen 	 24 [cc] 141 142
;; live  kill	 24 [cc]
;; rd  in  	(25)
1, 6, 8, 10, 11, 13, 14, 34, 35, 36, 38, 39, 141, 149, 150, 151, 156, 157, 158, 159, 160, 161, 162, 163, 169
;; rd  gen 	(3)
36, 149, 150
;; rd  kill	(14)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 149, 150

;; Pred edge  3 [100.0%]  (fallthru)
;; Pred edge  4 [86.0%]  (dfs_back)
(code_label 24 21 22 4 21 "" [1 uses])

(note 22 24 23 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 23 22 25 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/atomic.h:359 (parallel [
            (set (reg/v:SI 142 [ res ])
                (asm_operands/v:SI ("@ atomic64_cmpxchg
ldrexd		%1, %H1, [%3]
mov		%0, #0
teq		%1, %4
teqeq		%H1, %H4
strexdeq	%0, %5, %H5, [%3]") ("=&r") 0 [
                        (reg/f:SI 149 [ D.25228 ])
                        (reg/v:DI 133 [ prev_raw_count.501 ])
                        (reg/v:DI 144 [ new_raw_count ])
                        (mem:DI (reg/f:SI 149 [ D.25228 ]) [0 S8 A64])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:DI ("r") 0)
                        (asm_input:DI ("r") 0)
                        (asm_input:DI ("Qo") 0)
                    ] 2642290))
            (set (reg/v:DI 141 [ oldval ])
                (asm_operands/v:DI ("@ atomic64_cmpxchg
ldrexd		%1, %H1, [%3]
mov		%0, #0
teq		%1, %4
teqeq		%H1, %H4
strexdeq	%0, %5, %H5, [%3]") ("=&r") 1 [
                        (reg/f:SI 149 [ D.25228 ])
                        (reg/v:DI 133 [ prev_raw_count.501 ])
                        (reg/v:DI 144 [ new_raw_count ])
                        (mem:DI (reg/f:SI 149 [ D.25228 ]) [0 S8 A64])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:DI ("r") 0)
                        (asm_input:DI ("r") 0)
                        (asm_input:DI ("Qo") 0)
                    ] 2642290))
            (set (mem:DI (reg/f:SI 149 [ D.25228 ]) [0 S8 A64])
                (asm_operands/v:DI ("@ atomic64_cmpxchg
ldrexd		%1, %H1, [%3]
mov		%0, #0
teq		%1, %4
teqeq		%H1, %H4
strexdeq	%0, %5, %H5, [%3]") ("=Qo") 2 [
                        (reg/f:SI 149 [ D.25228 ])
                        (reg/v:DI 133 [ prev_raw_count.501 ])
                        (reg/v:DI 144 [ new_raw_count ])
                        (mem:DI (reg/f:SI 149 [ D.25228 ]) [0 S8 A64])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:DI ("r") 0)
                        (asm_input:DI ("r") 0)
                        (asm_input:DI ("Qo") 0)
                    ] 2642290))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(insn 25 23 26 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/atomic.h:368 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 142 [ res ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 142 [ res ])
        (nil)))

(jump_insn 26 25 27 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/atomic.h:368 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 24)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 8600 [0x2198])
            (nil))))
;; End of basic block 4 -> ( 4 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 141 144 149 151 152 153 154 167
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 144 149 151 152 153 154 167
;; rd  out 	(23)
1, 6, 8, 10, 11, 13, 14, 36, 38, 39, 141, 149, 150, 151, 156, 157, 158, 159, 160, 161, 162, 163, 169


;; Succ edge  4 [86.0%]  (dfs_back)
;; Succ edge  5 [14.0%]  (fallthru,loop_exit)

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u38(11){ }u39(13){ }u40(25){ }u41(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 141 144 149 151 152 153 154 167
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 144 149 151 152 153 154 167
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(23)
1, 6, 8, 10, 11, 13, 14, 36, 38, 39, 141, 149, 150, 151, 156, 157, 158, 159, 160, 161, 162, 163, 169
;; rd  gen 	(1)
35
;; rd  kill	(12)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37

;; Pred edge  4 [14.0%]  (fallthru,loop_exit)
(note 27 26 28 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 28 27 30 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/atomic.h:370 (parallel [
            (asm_operands/v ("dmb") ("") 0 []
                 [] 2643697)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 30 28 31 5 arch/arm/kernel/perf_event.c:216 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (subreg:SI (reg/v:DI 141 [ oldval ]) 0)
            (subreg:SI (reg/v:DI 133 [ prev_raw_count.501 ]) 0))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 31 30 70 5 arch/arm/kernel/perf_event.c:216 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 87)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 5 -> ( 3 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 141 144 149 151 152 153 154 167
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 144 149 151 152 153 154 167
;; rd  out 	(23)
1, 6, 8, 10, 11, 13, 14, 35, 38, 39, 141, 149, 150, 151, 156, 157, 158, 159, 160, 161, 162, 163, 169


;; Succ edge  3 [71.0%]  (dfs_back)
;; Succ edge  6 [29.0%]  (fallthru)

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u45(11){ }u46(13){ }u47(25){ }u48(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 141 144 149 151 152 153 154 167
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 144 149 151 152 153 154 167
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(23)
1, 6, 8, 10, 11, 13, 14, 35, 38, 39, 141, 149, 150, 151, 156, 157, 158, 159, 160, 161, 162, 163, 169
;; rd  gen 	(1)
34
;; rd  kill	(12)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37

;; Pred edge  5 [29.0%]  (fallthru)
(note 70 31 32 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 32 70 33 6 arch/arm/kernel/perf_event.c:216 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (subreg:SI (reg/v:DI 141 [ oldval ]) 4)
            (subreg:SI (reg/v:DI 133 [ prev_raw_count.501 ]) 4))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:DI 133 [ prev_raw_count.501 ])
        (nil)))

(jump_insn 33 32 34 6 arch/arm/kernel/perf_event.c:216 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 87)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 6 -> ( 3 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 144 149 151 152 153 154 167
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144 149 151 152 153 154 167
;; rd  out 	(23)
1, 6, 8, 10, 11, 13, 14, 34, 38, 39, 141, 149, 150, 151, 156, 157, 158, 159, 160, 161, 162, 163, 169


;; Succ edge  3 [71.0%]  (dfs_back)
;; Succ edge  7 [29.0%]  (fallthru,loop_exit)

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u52(11){ }u53(13){ }u54(25){ }u55(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 144 151 152 154
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144 154
;; lr  def 	 24 [cc] 134 145 147 158 159
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144 151 152 154
;; live  gen 	 24 [cc] 134 145 147 158 159
;; live  kill	
;; rd  in  	(23)
1, 6, 8, 10, 11, 13, 14, 34, 38, 39, 141, 149, 150, 151, 156, 157, 158, 159, 160, 161, 162, 163, 169
;; rd  gen 	(6)
33, 142, 152, 155, 164, 165
;; rd  kill	(17)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 142, 152, 155, 164, 165

;; Pred edge  6 [29.0%]  (fallthru,loop_exit)
(note 34 33 35 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 35 34 36 7 arch/arm/kernel/perf_event.c:220 (set (reg/f:SI 158)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 36 35 37 7 arch/arm/kernel/perf_event.c:220 (set (reg/f:SI 159 [ armpmu ])
        (mem/f/c/i:SI (reg/f:SI 158) [0 armpmu+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 158)
        (expr_list:REG_EQUAL (mem/f/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 armpmu+0 S4 A32])
            (nil))))

(insn 37 36 38 7 arch/arm/kernel/perf_event.c:220 (set (reg:DI 147 [ D.25235 ])
        (mem/s/j:DI (plus:SI (reg/f:SI 159 [ armpmu ])
                (const_int 64 [0x40])) [0 <variable>.max_period+0 S8 A64])) 163 {*arm_movdi} (expr_list:REG_DEAD (reg/f:SI 159 [ armpmu ])
        (nil)))

(insn 38 37 39 7 arch/arm/kernel/perf_event.c:220 (set (reg/v:DI 134 [ new_raw_count.500 ])
        (and:DI (reg/v:DI 144 [ new_raw_count ])
            (reg:DI 147 [ D.25235 ]))) 64 {anddi3} (expr_list:REG_DEAD (reg/v:DI 144 [ new_raw_count ])
        (nil)))

(insn 39 38 40 7 arch/arm/kernel/perf_event.c:221 (set (reg/v:DI 145 [ prev_raw_count ])
        (and:DI (reg/v:DI 141 [ oldval ])
            (reg:DI 147 [ D.25235 ]))) 64 {anddi3} (expr_list:REG_DEAD (reg/v:DI 141 [ oldval ])
        (nil)))

(insn 40 39 41 7 arch/arm/kernel/perf_event.c:223 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 154 [ overflow ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 154 [ overflow ])
        (nil)))

(jump_insn 41 40 42 7 arch/arm/kernel/perf_event.c:223 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 49)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
            (nil))))
;; End of basic block 7 -> ( 8 9)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 145 147 151 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 145 147 151 152
;; rd  out 	(28)
1, 6, 8, 10, 11, 13, 14, 33, 38, 39, 141, 142, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 169


;; Succ edge  8 [39.0%]  (fallthru)
;; Succ edge  9 [61.0%] 

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u64(11){ }u65(13){ }u66(25){ }u67(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 145 147 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 145 147
;; lr  def 	 24 [cc] 146 160 161 162
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 145 147 151 152
;; live  gen 	 146 160 161 162
;; live  kill	 24 [cc]
;; rd  in  	(28)
1, 6, 8, 10, 11, 13, 14, 33, 38, 39, 141, 142, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 169
;; rd  gen 	(4)
154, 166, 167, 168
;; rd  kill	(17)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 153, 154, 166, 167, 168

;; Pred edge  7 [39.0%]  (fallthru)
(note 42 41 43 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 43 42 44 8 arch/arm/kernel/perf_event.c:224 (set (reg:DI 161)
        (const_int 1 [0x1])) 163 {*arm_movdi} (nil))

(insn 44 43 45 8 arch/arm/kernel/perf_event.c:224 (parallel [
            (set (reg:DI 160)
                (plus:DI (reg:DI 147 [ D.25235 ])
                    (reg:DI 161)))
            (clobber (reg:CC 24 cc))
        ]) 1 {*arm_adddi3} (expr_list:REG_DEAD (reg:DI 161)
        (expr_list:REG_DEAD (reg:DI 147 [ D.25235 ])
            (expr_list:REG_UNUSED (reg:CC 24 cc)
                (expr_list:REG_EQUAL (plus:DI (reg:DI 147 [ D.25235 ])
                        (const_int 1 [0x1]))
                    (nil))))))

(insn 45 44 46 8 arch/arm/kernel/perf_event.c:224 (parallel [
            (set (reg:DI 162)
                (plus:DI (reg:DI 160)
                    (reg/v:DI 134 [ new_raw_count.500 ])))
            (clobber (reg:CC 24 cc))
        ]) 1 {*arm_adddi3} (expr_list:REG_DEAD (reg:DI 160)
        (expr_list:REG_UNUSED (reg:CC 24 cc)
            (nil))))

(insn 46 45 88 8 arch/arm/kernel/perf_event.c:224 (parallel [
            (set (reg/v:DI 146 [ delta ])
                (minus:DI (reg:DI 162)
                    (reg/v:DI 145 [ prev_raw_count ])))
            (clobber (reg:CC 24 cc))
        ]) 20 {*arm_subdi3} (expr_list:REG_DEAD (reg:DI 162)
        (expr_list:REG_DEAD (reg/v:DI 145 [ prev_raw_count ])
            (expr_list:REG_UNUSED (reg:CC 24 cc)
                (nil)))))

(jump_insn 88 46 89 8 (set (pc)
        (label_ref 52)) -1 (nil))
;; End of basic block 8 -> ( 10)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 146 151 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 146 151 152
;; rd  out 	(31)
1, 6, 8, 10, 11, 13, 14, 38, 39, 141, 142, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169


;; Succ edge  10 [100.0%] 

(barrier 89 88 49)

;; Start of basic block ( 7) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u75(11){ }u76(13){ }u77(25){ }u78(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 145 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 145
;; lr  def 	 24 [cc] 146
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 145 151 152
;; live  gen 	 146
;; live  kill	 24 [cc]
;; rd  in  	(28)
1, 6, 8, 10, 11, 13, 14, 33, 38, 39, 141, 142, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 169
;; rd  gen 	(1)
153
;; rd  kill	(14)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 153, 154

;; Pred edge  7 [61.0%] 
(code_label 49 89 50 9 23 "" [1 uses])

(note 50 49 51 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 51 50 52 9 arch/arm/kernel/perf_event.c:226 (parallel [
            (set (reg/v:DI 146 [ delta ])
                (minus:DI (reg/v:DI 134 [ new_raw_count.500 ])
                    (reg/v:DI 145 [ prev_raw_count ])))
            (clobber (reg:CC 24 cc))
        ]) 20 {*arm_subdi3} (expr_list:REG_DEAD (reg/v:DI 145 [ prev_raw_count ])
        (expr_list:REG_UNUSED (reg:CC 24 cc)
            (nil))))
;; End of basic block 9 -> ( 10)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 146 151 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 146 151 152
;; rd  out 	(28)
1, 6, 8, 10, 11, 13, 14, 38, 39, 141, 142, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 169


;; Succ edge  10 [100.0%]  (fallthru)

;; Start of basic block ( 9 8) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u81(11){ }u82(13){ }u83(25){ }u84(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 146 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 146 151 152
;; lr  def 	 0 [r0] 1 [r1] 24 [cc] 135 136 137 138 139 140
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 146 151 152
;; live  gen 	 0 [r0] 1 [r1] 135 136 137 138 139 140
;; live  kill	 24 [cc]
;; rd  in  	(32)
1, 6, 8, 10, 11, 13, 14, 38, 39, 141, 142, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169
;; rd  gen 	(8)
0, 4, 143, 144, 145, 146, 147, 148
;; rd  kill	(25)
0, 1, 2, 3, 4, 5, 6, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 143, 144, 145, 146, 147, 148

;; Pred edge  9 [100.0%]  (fallthru)
;; Pred edge  8 [100.0%] 
(code_label 52 51 53 10 24 "" [1 uses])

(note 53 52 54 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 54 53 55 10 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/atomic.h:284 (set (reg/f:SI 138 [ D.26333 ])
        (plus:SI (reg/v/f:SI 151 [ event ])
            (const_int 56 [0x38]))) 4 {*arm_addsi3} (nil))

(insn 55 54 56 10 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/atomic.h:276 (parallel [
            (set (reg/v:DI 139 [ result ])
                (asm_operands/v:DI ("@ atomic64_add
1:	ldrexd	%0, %H0, [%3]
	adds	%0, %0, %4
	adc	%H0, %H0, %H4
	strexd	%1, %0, %H0, [%3]
	teq	%1, #0
	bne	1b") ("=&r") 0 [
                        (reg/f:SI 138 [ D.26333 ])
                        (reg/v:DI 146 [ delta ])
                        (mem:DI (plus:SI (reg/v/f:SI 151 [ event ])
                                (const_int 56 [0x38])) [0 S8 A64])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:DI ("r") 0)
                        (asm_input:DI ("Qo") 0)
                    ] 2631665))
            (set (reg/v:SI 140 [ tmp ])
                (asm_operands/v:SI ("@ atomic64_add
1:	ldrexd	%0, %H0, [%3]
	adds	%0, %0, %4
	adc	%H0, %H0, %H4
	strexd	%1, %0, %H0, [%3]
	teq	%1, #0
	bne	1b") ("=&r") 1 [
                        (reg/f:SI 138 [ D.26333 ])
                        (reg/v:DI 146 [ delta ])
                        (mem:DI (plus:SI (reg/v/f:SI 151 [ event ])
                                (const_int 56 [0x38])) [0 S8 A64])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:DI ("r") 0)
                        (asm_input:DI ("Qo") 0)
                    ] 2631665))
            (set (mem:DI (plus:SI (reg/v/f:SI 151 [ event ])
                        (const_int 56 [0x38])) [0 S8 A64])
                (asm_operands/v:DI ("@ atomic64_add
1:	ldrexd	%0, %H0, [%3]
	adds	%0, %0, %4
	adc	%H0, %H0, %H4
	strexd	%1, %0, %H0, [%3]
	teq	%1, #0
	bne	1b") ("=Qo") 2 [
                        (reg/f:SI 138 [ D.26333 ])
                        (reg/v:DI 146 [ delta ])
                        (mem:DI (plus:SI (reg/v/f:SI 151 [ event ])
                                (const_int 56 [0x38])) [0 S8 A64])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:DI ("r") 0)
                        (asm_input:DI ("Qo") 0)
                    ] 2631665))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/v/f:SI 151 [ event ])
        (expr_list:REG_DEAD (reg/f:SI 138 [ D.26333 ])
            (expr_list:REG_UNUSED (reg/v:SI 140 [ tmp ])
                (expr_list:REG_UNUSED (reg/v:DI 139 [ result ])
                    (expr_list:REG_UNUSED (reg:QI 24 cc)
                        (nil)))))))

(insn 56 55 57 10 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/atomic.h:324 (set (reg/f:SI 135 [ D.26338 ])
        (plus:SI (reg/v/f:SI 152 [ hwc ])
            (const_int 104 [0x68]))) 4 {*arm_addsi3} (nil))

(insn 57 56 76 10 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/atomic.h:316 (parallel [
            (set (reg/v:DI 136 [ result ])
                (asm_operands/v:DI ("@ atomic64_sub
1:	ldrexd	%0, %H0, [%3]
	subs	%0, %0, %4
	sbc	%H0, %H0, %H4
	strexd	%1, %0, %H0, [%3]
	teq	%1, #0
	bne	1b") ("=&r") 0 [
                        (reg/f:SI 135 [ D.26338 ])
                        (reg/v:DI 146 [ delta ])
                        (mem:DI (plus:SI (reg/v/f:SI 152 [ hwc ])
                                (const_int 104 [0x68])) [0 S8 A64])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:DI ("r") 0)
                        (asm_input:DI ("Qo") 0)
                    ] 2636785))
            (set (reg/v:SI 137 [ tmp ])
                (asm_operands/v:SI ("@ atomic64_sub
1:	ldrexd	%0, %H0, [%3]
	subs	%0, %0, %4
	sbc	%H0, %H0, %H4
	strexd	%1, %0, %H0, [%3]
	teq	%1, #0
	bne	1b") ("=&r") 1 [
                        (reg/f:SI 135 [ D.26338 ])
                        (reg/v:DI 146 [ delta ])
                        (mem:DI (plus:SI (reg/v/f:SI 152 [ hwc ])
                                (const_int 104 [0x68])) [0 S8 A64])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:DI ("r") 0)
                        (asm_input:DI ("Qo") 0)
                    ] 2636785))
            (set (mem:DI (plus:SI (reg/v/f:SI 152 [ hwc ])
                        (const_int 104 [0x68])) [0 S8 A64])
                (asm_operands/v:DI ("@ atomic64_sub
1:	ldrexd	%0, %H0, [%3]
	subs	%0, %0, %4
	sbc	%H0, %H0, %H4
	strexd	%1, %0, %H0, [%3]
	teq	%1, #0
	bne	1b") ("=Qo") 2 [
                        (reg/f:SI 135 [ D.26338 ])
                        (reg/v:DI 146 [ delta ])
                        (mem:DI (plus:SI (reg/v/f:SI 152 [ hwc ])
                                (const_int 104 [0x68])) [0 S8 A64])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:DI ("r") 0)
                        (asm_input:DI ("Qo") 0)
                    ] 2636785))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/v/f:SI 152 [ hwc ])
        (expr_list:REG_DEAD (reg/v:DI 146 [ delta ])
            (expr_list:REG_DEAD (reg/f:SI 135 [ D.26338 ])
                (expr_list:REG_UNUSED (reg/v:SI 137 [ tmp ])
                    (expr_list:REG_UNUSED (reg/v:DI 136 [ result ])
                        (expr_list:REG_UNUSED (reg:QI 24 cc)
                            (nil))))))))

(insn 76 57 77 10 arch/arm/kernel/perf_event.c:232 (set (reg:SI 0 r0)
        (subreg:SI (reg/v:DI 134 [ new_raw_count.500 ]) 0)) 167 {*arm_movsi_insn} (nil))

(insn 77 76 68 10 arch/arm/kernel/perf_event.c:232 (set (reg:SI 1 r1 [+4 ])
        (subreg:SI (reg/v:DI 134 [ new_raw_count.500 ]) 4)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:DI 134 [ new_raw_count.500 ])
        (nil)))

(insn 68 77 0 10 arch/arm/kernel/perf_event.c:232 (use (reg/i:DI 0 r0)) -1 (nil))
;; End of basic block 10 -> ( 1)
;; lr  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(38)
0, 4, 8, 10, 11, 13, 14, 38, 39, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function armpmu_read (armpmu_read)[0:1313]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 8 (  1.6)


armpmu_read

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 24[cc]
;;  ref usage 	r0={2d,2u} r1={3d,1u} r2={3d,1u} r3={3d,1u} r11={1d,4u} r12={2d} r13={1d,5u} r14={1d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={2d,1u} r25={1d,4u} r26={1d,3u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,2u} r134={1d,2u} r135={1d,1u} 
;;    total ref usage 161{133d,28u,0e} in 9{8 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129
0[0,2] 1[2,3] 2[5,3] 3[8,3] 11[11,1] 12[12,2] 13[14,1] 14[15,1] 15[16,1] 16[17,1] 17[18,1] 18[19,1] 19[20,1] 20[21,1] 21[22,1] 22[23,1] 23[24,1] 24[25,2] 25[27,1] 26[28,1] 27[29,1] 28[30,1] 29[31,1] 30[32,1] 31[33,1] 32[34,1] 33[35,1] 34[36,1] 35[37,1] 36[38,1] 37[39,1] 38[40,1] 39[41,1] 40[42,1] 41[43,1] 42[44,1] 43[45,1] 44[46,1] 45[47,1] 46[48,1] 47[49,1] 48[50,1] 49[51,1] 50[52,1] 51[53,1] 52[54,1] 53[55,1] 54[56,1] 55[57,1] 56[58,1] 57[59,1] 58[60,1] 59[61,1] 60[62,1] 61[63,1] 62[64,1] 63[65,1] 64[66,1] 65[67,1] 66[68,1] 67[69,1] 68[70,1] 69[71,1] 70[72,1] 71[73,1] 72[74,1] 73[75,1] 74[76,1] 75[77,1] 76[78,1] 77[79,1] 78[80,1] 79[81,1] 80[82,1] 81[83,1] 82[84,1] 83[85,1] 84[86,1] 85[87,1] 86[88,1] 87[89,1] 88[90,1] 89[91,1] 90[92,1] 91[93,1] 92[94,1] 93[95,1] 94[96,1] 95[97,1] 96[98,1] 97[99,1] 98[100,1] 99[101,1] 100[102,1] 101[103,1] 102[104,1] 103[105,1] 104[106,1] 105[107,1] 106[108,1] 107[109,1] 108[110,1] 109[111,1] 110[112,1] 111[113,1] 112[114,1] 113[115,1] 114[116,1] 115[117,1] 116[118,1] 117[119,1] 118[120,1] 119[121,1] 120[122,1] 121[123,1] 122[124,1] 123[125,1] 124[126,1] 125[127,1] 126[128,1] 127[129,1] 133[130,1] 134[131,1] 135[132,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d1(0){ }d4(1){ }d7(2){ }d10(3){ }d11(11){ }d13(12){ }d14(13){ }d15(14){ }d27(25){ }d28(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
1, 4, 7, 10, 11, 13, 14, 15, 27, 28
;; rd  kill	(18)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 27, 28
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
1, 4, 7, 10, 11, 13, 14, 15, 27, 28

( 0 )->[2]->( 4 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d11(bb 0 insn -1) }u1(13){ d14(bb 0 insn -1) }u2(25){ d27(bb 0 insn -1) }u3(26){ d28(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 133 134
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 133 134
;; live  kill	
;; rd  in  	(10)
1, 4, 7, 10, 11, 13, 14, 15, 27, 28
;; rd  gen 	(3)
26, 130, 131
;; rd  kill	(4)
25, 26, 130, 131
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; rd  out 	(13)
1, 4, 7, 10, 11, 13, 14, 15, 26, 27, 28, 130, 131
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d1(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 6
;;      reg 134 { d131(bb 2 insn 2) }
;;   UD chains for insn luid 2 uid 7
;;      reg 133 { d130(bb 2 insn 6) }
;;   UD chains for insn luid 3 uid 8
;;      reg 24 { d26(bb 2 insn 7) }

( 2 )->[3]->( 1 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(11){ d11(bb 0 insn -1) }u9(13){ d14(bb 0 insn -1) }u10(25){ d27(bb 0 insn -1) }u11(26){ d28(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 135
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 135
;; live  kill	
;; rd  in  	(13)
1, 4, 7, 10, 11, 13, 14, 15, 26, 27, 28, 130, 131
;; rd  gen 	(3)
0, 2, 132
;; rd  kill	(6)
0, 1, 2, 3, 4, 132
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(14)
0, 2, 7, 10, 11, 13, 14, 15, 26, 27, 28, 130, 131, 132
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 10
;;      reg 134 { d131(bb 2 insn 2) }
;;   UD chains for insn luid 1 uid 12
;;      reg 135 { d132(bb 3 insn 10) }
;;   UD chains for insn luid 2 uid 13
;;      reg 133 { d130(bb 2 insn 6) }
;;   UD chains for insn luid 4 uid 15
;;      reg 13 { d14(bb 0 insn -1) }
;;      reg 0 { d1(bb 0 insn -1) }
;;      reg 1 { d3(bb 3 insn 12) }
;;      reg 2 { d6(bb 3 insn 13) }
;;      reg 3 { d9(bb 3 insn 14) }

( 2 )->[4]->( 1 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u20(11){ d11(bb 0 insn -1) }u21(13){ d14(bb 0 insn -1) }u22(25){ d27(bb 0 insn -1) }u23(26){ d28(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
1, 4, 7, 10, 11, 13, 14, 15, 26, 27, 28, 130, 131
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
1, 4, 7, 10, 11, 13, 14, 15, 26, 27, 28, 130, 131
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }

( 3 4 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u24(11){ d11(bb 0 insn -1) }u25(13){ d14(bb 0 insn -1) }u26(14){ d15(bb 0 insn -1) }u27(25){ d27(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(16)
0, 1, 2, 4, 7, 10, 11, 13, 14, 15, 26, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(16)
0, 1, 2, 4, 7, 10, 11, 13, 14, 15, 26, 27, 28, 130, 131, 132
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 14 { d15(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 8 to worklist
  Adding insn 15 to worklist
Finished finding needed instructions:
Processing use of (reg 13 sp) in insn 15:
Processing use of (reg 0 r0) in insn 15:
Processing use of (reg 1 r1) in insn 15:
  Adding insn 12 to worklist
Processing use of (reg 2 r2) in insn 15:
  Adding insn 13 to worklist
Processing use of (reg 3 r3) in insn 15:
  Adding insn 14 to worklist
Processing use of (reg 133 [ D.25248 ]) in insn 13:
  Adding insn 6 to worklist
Processing use of (reg 134 [ event ]) in insn 6:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 135) in insn 12:
  Adding insn 10 to worklist
Processing use of (reg 134 [ event ]) in insn 10:
Processing use of (reg 24 cc) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 133 [ D.25248 ]) in insn 7:


armpmu_read

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 24[cc]
;;  ref usage 	r0={2d,2u} r1={3d,1u} r2={3d,1u} r3={3d,1u} r11={1d,4u} r12={2d} r13={1d,5u} r14={1d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={2d,1u} r25={1d,4u} r26={1d,3u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,2u} r134={1d,2u} r135={1d,1u} 
;;    total ref usage 161{133d,28u,0e} in 9{8 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129
0[0,2] 1[2,3] 2[5,3] 3[8,3] 11[11,1] 12[12,2] 13[14,1] 14[15,1] 15[16,1] 16[17,1] 17[18,1] 18[19,1] 19[20,1] 20[21,1] 21[22,1] 22[23,1] 23[24,1] 24[25,2] 25[27,1] 26[28,1] 27[29,1] 28[30,1] 29[31,1] 30[32,1] 31[33,1] 32[34,1] 33[35,1] 34[36,1] 35[37,1] 36[38,1] 37[39,1] 38[40,1] 39[41,1] 40[42,1] 41[43,1] 42[44,1] 43[45,1] 44[46,1] 45[47,1] 46[48,1] 47[49,1] 48[50,1] 49[51,1] 50[52,1] 51[53,1] 52[54,1] 53[55,1] 54[56,1] 55[57,1] 56[58,1] 57[59,1] 58[60,1] 59[61,1] 60[62,1] 61[63,1] 62[64,1] 63[65,1] 64[66,1] 65[67,1] 66[68,1] 67[69,1] 68[70,1] 69[71,1] 70[72,1] 71[73,1] 72[74,1] 73[75,1] 74[76,1] 75[77,1] 76[78,1] 77[79,1] 78[80,1] 79[81,1] 80[82,1] 81[83,1] 82[84,1] 83[85,1] 84[86,1] 85[87,1] 86[88,1] 87[89,1] 88[90,1] 89[91,1] 90[92,1] 91[93,1] 92[94,1] 93[95,1] 94[96,1] 95[97,1] 96[98,1] 97[99,1] 98[100,1] 99[101,1] 100[102,1] 101[103,1] 102[104,1] 103[105,1] 104[106,1] 105[107,1] 106[108,1] 107[109,1] 108[110,1] 109[111,1] 110[112,1] 111[113,1] 112[114,1] 113[115,1] 114[116,1] 115[117,1] 116[118,1] 117[119,1] 118[120,1] 119[121,1] 120[122,1] 121[123,1] 122[124,1] 123[125,1] 124[126,1] 125[127,1] 126[128,1] 127[129,1] 133[130,1] 134[131,1] 135[132,1] 
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 133 134
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 133 134
;; live  kill	
;; rd  in  	(10)
1, 4, 7, 10, 11, 13, 14, 15, 27, 28
;; rd  gen 	(3)
26, 130, 131
;; rd  kill	(4)
25, 26, 130, 131

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 arch/arm/kernel/perf_event.c:236 (set (reg/v/f:SI 134 [ event ])
        (reg:SI 0 r0 [ event ])) 167 {*arm_movsi_insn} (nil))

(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 3 7 2 arch/arm/kernel/perf_event.c:240 (set (reg:SI 133 [ D.25248 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 134 [ event ])
                (const_int 224 [0xe0])) [0 <variable>.hw.D.23168.D.23159.idx+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 7 6 8 2 arch/arm/kernel/perf_event.c:240 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 133 [ D.25248 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 8 7 9 2 arch/arm/kernel/perf_event.c:240 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 22)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3667 [0xe53])
            (nil))))
;; End of basic block 2 -> ( 4 3)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; rd  out 	(13)
1, 4, 7, 10, 11, 13, 14, 15, 26, 27, 28, 130, 131


;; Succ edge  4 [36.7%] 
;; Succ edge  3 [63.3%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(11){ }u9(13){ }u10(25){ }u11(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 135
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 135
;; live  kill	
;; rd  in  	(13)
1, 4, 7, 10, 11, 13, 14, 15, 26, 27, 28, 130, 131
;; rd  gen 	(3)
0, 2, 132
;; rd  kill	(6)
0, 1, 2, 3, 4, 132

;; Pred edge  2 [63.3%]  (fallthru)
(note 9 8 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 10 9 12 3 arch/arm/kernel/perf_event.c:243 (set (reg/f:SI 135)
        (plus:SI (reg/v/f:SI 134 [ event ])
            (const_int 200 [0xc8]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/v/f:SI 134 [ event ])
        (nil)))

(insn 12 10 13 3 arch/arm/kernel/perf_event.c:243 (set (reg:SI 1 r1)
        (reg/f:SI 135)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 135)
        (nil)))

(insn 13 12 14 3 arch/arm/kernel/perf_event.c:243 (set (reg:SI 2 r2)
        (reg:SI 133 [ D.25248 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 133 [ D.25248 ])
        (nil)))

(insn 14 13 15 3 arch/arm/kernel/perf_event.c:243 (set (reg:SI 3 r3)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(call_insn/j 15 14 16 3 arch/arm/kernel/perf_event.c:243 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("armpmu_event_update") [flags 0x3] <function_decl 0x114a1680 armpmu_event_update>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_UNUSED (reg:DI 0 r0)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 3 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(14)
0, 2, 7, 10, 11, 13, 14, 15, 26, 27, 28, 130, 131, 132


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 16 15 22)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u20(11){ }u21(13){ }u22(25){ }u23(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
1, 4, 7, 10, 11, 13, 14, 15, 26, 27, 28, 130, 131
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  2 [36.7%] 
(code_label 22 16 25 4 36 "" [1 uses])

(note 25 22 0 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 4 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
1, 4, 7, 10, 11, 13, 14, 15, 26, 27, 28, 130, 131


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function armpmu_stop (armpmu_stop)[0:1314]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 7 count 10 (  1.7)


armpmu_stop

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={5d,3u} r1={5d,2u} r2={4d,1u} r3={4d,1u} r11={1d,5u} r12={3d} r13={1d,7u} r14={3d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={4d,2u} r25={1d,5u} r26={1d,4u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r133={1d,2u} r134={1d,2u} r135={1d,7u} r137={1d,1u} r138={1d,2u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} 
;;    total ref usage 310{261d,49u,0e} in 23{21 regular + 2 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251
0[0,5] 1[5,5] 2[10,4] 3[14,4] 11[18,1] 12[19,3] 13[22,1] 14[23,3] 15[26,2] 16[28,2] 17[30,2] 18[32,2] 19[34,2] 20[36,2] 21[38,2] 22[40,2] 23[42,2] 24[44,4] 25[48,1] 26[49,1] 27[50,2] 28[52,2] 29[54,2] 30[56,2] 31[58,2] 32[60,2] 33[62,2] 34[64,2] 35[66,2] 36[68,2] 37[70,2] 38[72,2] 39[74,2] 40[76,2] 41[78,2] 42[80,2] 43[82,2] 44[84,2] 45[86,2] 46[88,2] 47[90,2] 48[92,2] 49[94,2] 50[96,2] 51[98,2] 52[100,2] 53[102,2] 54[104,2] 55[106,2] 56[108,2] 57[110,2] 58[112,2] 59[114,2] 60[116,2] 61[118,2] 62[120,2] 63[122,2] 64[124,2] 65[126,2] 66[128,2] 67[130,2] 68[132,2] 69[134,2] 70[136,2] 71[138,2] 72[140,2] 73[142,2] 74[144,2] 75[146,2] 76[148,2] 77[150,2] 78[152,2] 79[154,2] 80[156,2] 81[158,2] 82[160,2] 83[162,2] 84[164,2] 85[166,2] 86[168,2] 87[170,2] 88[172,2] 89[174,2] 90[176,2] 91[178,2] 92[180,2] 93[182,2] 94[184,2] 95[186,2] 96[188,2] 97[190,2] 98[192,2] 99[194,2] 100[196,2] 101[198,2] 102[200,2] 103[202,2] 104[204,2] 105[206,2] 106[208,2] 107[210,2] 108[212,2] 109[214,2] 110[216,2] 111[218,2] 112[220,2] 113[222,2] 114[224,2] 115[226,2] 116[228,2] 117[230,2] 118[232,2] 119[234,2] 120[236,2] 121[238,2] 122[240,2] 123[242,2] 124[244,2] 125[246,2] 126[248,2] 127[250,2] 133[252,1] 134[253,1] 135[254,1] 137[255,1] 138[256,1] 139[257,1] 140[258,1] 141[259,1] 142[260,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d4(0){ }d9(1){ }d13(2){ }d17(3){ }d18(11){ }d21(12){ }d22(13){ }d25(14){ }d48(25){ }d49(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
4, 9, 13, 17, 18, 21, 22, 25, 48, 49
;; rd  kill	(28)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 48, 49
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
4, 9, 13, 17, 18, 21, 22, 25, 48, 49

( 0 )->[2]->( 5 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d18(bb 0 insn -1) }u1(13){ d22(bb 0 insn -1) }u2(25){ d48(bb 0 insn -1) }u3(26){ d49(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 134 135 137
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 134 135 137
;; live  kill	
;; rd  in  	(10)
4, 9, 13, 17, 18, 21, 22, 25, 48, 49
;; rd  gen 	(4)
47, 253, 254, 255
;; rd  kill	(7)
44, 45, 46, 47, 253, 254, 255
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135
;; rd  out 	(14)
4, 9, 13, 17, 18, 21, 22, 25, 47, 48, 49, 253, 254, 255
;;  UD chains for artificial uses
;;   reg 11 { d18(bb 0 insn -1) }
;;   reg 13 { d22(bb 0 insn -1) }
;;   reg 25 { d48(bb 0 insn -1) }
;;   reg 26 { d49(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d4(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 8
;;      reg 137 { d255(bb 2 insn 7) }
;;   UD chains for insn luid 3 uid 9
;;      reg 134 { d253(bb 2 insn 8) }
;;   UD chains for insn luid 4 uid 10
;;      reg 24 { d47(bb 2 insn 9) }

( 2 )->[3]->( 4 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(11){ d18(bb 0 insn -1) }u9(13){ d22(bb 0 insn -1) }u10(25){ d48(bb 0 insn -1) }u11(26){ d49(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc] 138 139
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135
;; live  gen 	 24 [cc] 138 139
;; live  kill	
;; rd  in  	(14)
4, 9, 13, 17, 18, 21, 22, 25, 47, 48, 49, 253, 254, 255
;; rd  gen 	(3)
46, 256, 257
;; rd  kill	(6)
44, 45, 46, 47, 256, 257
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135 138
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135 138
;; rd  out 	(16)
4, 9, 13, 17, 18, 21, 22, 25, 46, 48, 49, 253, 254, 255, 256, 257
;;  UD chains for artificial uses
;;   reg 11 { d18(bb 0 insn -1) }
;;   reg 13 { d22(bb 0 insn -1) }
;;   reg 25 { d48(bb 0 insn -1) }
;;   reg 26 { d49(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 12
;;      reg 135 { d254(bb 2 insn 2) }
;;   UD chains for insn luid 1 uid 13
;;      reg 139 { d257(bb 3 insn 12) }
;;   UD chains for insn luid 2 uid 14
;;      reg 138 { d256(bb 3 insn 13) }
;;   UD chains for insn luid 3 uid 15
;;      reg 24 { d46(bb 3 insn 14) }

( 3 )->[4]->( 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u16(11){ d18(bb 0 insn -1) }u17(13){ d22(bb 0 insn -1) }u18(25){ d48(bb 0 insn -1) }u19(26){ d49(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 138
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 140 141 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 138
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 133 140 141 142
;; live  kill	 14 [lr]
;; rd  in  	(16)
4, 9, 13, 17, 18, 21, 22, 25, 46, 48, 49, 253, 254, 255, 256, 257
;; rd  gen 	(6)
0, 5, 252, 258, 259, 260
;; rd  kill	(17)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 23, 24, 25, 252, 258, 259, 260
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(19)
0, 5, 13, 17, 18, 21, 22, 46, 48, 49, 252, 253, 254, 255, 256, 257, 258, 259, 260
;;  UD chains for artificial uses
;;   reg 11 { d18(bb 0 insn -1) }
;;   reg 13 { d22(bb 0 insn -1) }
;;   reg 25 { d48(bb 0 insn -1) }
;;   reg 26 { d49(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 17
;;      reg 135 { d254(bb 2 insn 2) }
;;   UD chains for insn luid 1 uid 18
;;      reg 134 { d253(bb 2 insn 8) }
;;   UD chains for insn luid 2 uid 19
;;      reg 133 { d252(bb 4 insn 17) }
;;   UD chains for insn luid 3 uid 20
;;      reg 135 { d254(bb 2 insn 2) }
;;   UD chains for insn luid 4 uid 21
;;      reg 13 { d22(bb 0 insn -1) }
;;      reg 0 { d3(bb 4 insn 19) }
;;      reg 1 { d8(bb 4 insn 20) }
;;      reg 140 { d258(bb 4 insn 18) }
;;   UD chains for insn luid 6 uid 23
;;      reg 135 { d254(bb 2 insn 2) }
;;   UD chains for insn luid 7 uid 24
;;      reg 133 { d252(bb 4 insn 17) }
;;   UD chains for insn luid 8 uid 25
;;      reg 135 { d254(bb 2 insn 2) }
;;   UD chains for insn luid 9 uid 26
;;      reg 138 { d256(bb 3 insn 13) }
;;   UD chains for insn luid 10 uid 27
;;      reg 13 { d22(bb 0 insn -1) }
;;      reg 0 { d1(bb 4 insn 23) }
;;      reg 1 { d6(bb 4 insn 24) }
;;      reg 2 { d11(bb 4 insn 25) }
;;      reg 3 { d14(bb 4 insn 26) }
;;   UD chains for insn luid 11 uid 28
;;      reg 135 { d254(bb 2 insn 2) }
;;   UD chains for insn luid 12 uid 29
;;      reg 141 { d259(bb 4 insn 28) }
;;   UD chains for insn luid 13 uid 30
;;      reg 135 { d254(bb 2 insn 2) }
;;      reg 142 { d260(bb 4 insn 29) }

( 4 2 3 )->[5]->( 1 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u41(11){ d18(bb 0 insn -1) }u42(13){ d22(bb 0 insn -1) }u43(25){ d48(bb 0 insn -1) }u44(26){ d49(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(23)
0, 4, 5, 9, 13, 17, 18, 21, 22, 25, 46, 47, 48, 49, 252, 253, 254, 255, 256, 257, 258, 259, 260
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(23)
0, 4, 5, 9, 13, 17, 18, 21, 22, 25, 46, 47, 48, 49, 252, 253, 254, 255, 256, 257, 258, 259, 260
;;  UD chains for artificial uses
;;   reg 11 { d18(bb 0 insn -1) }
;;   reg 13 { d22(bb 0 insn -1) }
;;   reg 25 { d48(bb 0 insn -1) }
;;   reg 26 { d49(bb 0 insn -1) }

( 5 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u45(11){ d18(bb 0 insn -1) }u46(13){ d22(bb 0 insn -1) }u47(14){ d25(bb 0 insn -1) }u48(25){ d48(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(23)
0, 4, 5, 9, 13, 17, 18, 21, 22, 25, 46, 47, 48, 49, 252, 253, 254, 255, 256, 257, 258, 259, 260
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(23)
0, 4, 5, 9, 13, 17, 18, 21, 22, 25, 46, 47, 48, 49, 252, 253, 254, 255, 256, 257, 258, 259, 260
;;  UD chains for artificial uses
;;   reg 11 { d18(bb 0 insn -1) }
;;   reg 13 { d22(bb 0 insn -1) }
;;   reg 14 { d25(bb 0 insn -1) }
;;   reg 25 { d48(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 10 to worklist
  Adding insn 15 to worklist
  Adding insn 30 to worklist
  Adding insn 27 to worklist
  Adding insn 22 to worklist
  Adding insn 21 to worklist
Finished finding needed instructions:
Processing use of (reg 13 sp) in insn 21:
Processing use of (reg 0 r0) in insn 21:
  Adding insn 19 to worklist
Processing use of (reg 1 r1) in insn 21:
  Adding insn 20 to worklist
Processing use of (reg 140 [ <variable>.disable ]) in insn 21:
  Adding insn 18 to worklist
Processing use of (reg 134 [ armpmu.327 ]) in insn 18:
  Adding insn 8 to worklist
Processing use of (reg 137) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 135 [ event ]) in insn 20:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 133 [ hwc ]) in insn 19:
  Adding insn 17 to worklist
Processing use of (reg 135 [ event ]) in insn 17:
Processing use of (reg 13 sp) in insn 27:
Processing use of (reg 0 r0) in insn 27:
  Adding insn 23 to worklist
Processing use of (reg 1 r1) in insn 27:
  Adding insn 24 to worklist
Processing use of (reg 2 r2) in insn 27:
  Adding insn 25 to worklist
Processing use of (reg 3 r3) in insn 27:
  Adding insn 26 to worklist
Processing use of (reg 138) in insn 26:
  Adding insn 13 to worklist
Processing use of (reg 139 [ <variable>.hw.state ]) in insn 13:
  Adding insn 12 to worklist
Processing use of (reg 135 [ event ]) in insn 12:
Processing use of (reg 135 [ event ]) in insn 25:
Processing use of (reg 133 [ hwc ]) in insn 24:
Processing use of (reg 135 [ event ]) in insn 23:
Processing use of (reg 135 [ event ]) in insn 30:
Processing use of (reg 142) in insn 30:
  Adding insn 29 to worklist
Processing use of (reg 141 [ <variable>.hw.state ]) in insn 29:
  Adding insn 28 to worklist
Processing use of (reg 135 [ event ]) in insn 28:
Processing use of (reg 24 cc) in insn 15:
  Adding insn 14 to worklist
Processing use of (reg 138) in insn 14:
Processing use of (reg 24 cc) in insn 10:
  Adding insn 9 to worklist
Processing use of (reg 134 [ armpmu.327 ]) in insn 9:


armpmu_stop

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={5d,3u} r1={5d,2u} r2={4d,1u} r3={4d,1u} r11={1d,5u} r12={3d} r13={1d,7u} r14={3d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={4d,2u} r25={1d,5u} r26={1d,4u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r133={1d,2u} r134={1d,2u} r135={1d,7u} r137={1d,1u} r138={1d,2u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} 
;;    total ref usage 310{261d,49u,0e} in 23{21 regular + 2 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251
0[0,5] 1[5,5] 2[10,4] 3[14,4] 11[18,1] 12[19,3] 13[22,1] 14[23,3] 15[26,2] 16[28,2] 17[30,2] 18[32,2] 19[34,2] 20[36,2] 21[38,2] 22[40,2] 23[42,2] 24[44,4] 25[48,1] 26[49,1] 27[50,2] 28[52,2] 29[54,2] 30[56,2] 31[58,2] 32[60,2] 33[62,2] 34[64,2] 35[66,2] 36[68,2] 37[70,2] 38[72,2] 39[74,2] 40[76,2] 41[78,2] 42[80,2] 43[82,2] 44[84,2] 45[86,2] 46[88,2] 47[90,2] 48[92,2] 49[94,2] 50[96,2] 51[98,2] 52[100,2] 53[102,2] 54[104,2] 55[106,2] 56[108,2] 57[110,2] 58[112,2] 59[114,2] 60[116,2] 61[118,2] 62[120,2] 63[122,2] 64[124,2] 65[126,2] 66[128,2] 67[130,2] 68[132,2] 69[134,2] 70[136,2] 71[138,2] 72[140,2] 73[142,2] 74[144,2] 75[146,2] 76[148,2] 77[150,2] 78[152,2] 79[154,2] 80[156,2] 81[158,2] 82[160,2] 83[162,2] 84[164,2] 85[166,2] 86[168,2] 87[170,2] 88[172,2] 89[174,2] 90[176,2] 91[178,2] 92[180,2] 93[182,2] 94[184,2] 95[186,2] 96[188,2] 97[190,2] 98[192,2] 99[194,2] 100[196,2] 101[198,2] 102[200,2] 103[202,2] 104[204,2] 105[206,2] 106[208,2] 107[210,2] 108[212,2] 109[214,2] 110[216,2] 111[218,2] 112[220,2] 113[222,2] 114[224,2] 115[226,2] 116[228,2] 117[230,2] 118[232,2] 119[234,2] 120[236,2] 121[238,2] 122[240,2] 123[242,2] 124[244,2] 125[246,2] 126[248,2] 127[250,2] 133[252,1] 134[253,1] 135[254,1] 137[255,1] 138[256,1] 139[257,1] 140[258,1] 141[259,1] 142[260,1] 
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 134 135 137
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 134 135 137
;; live  kill	
;; rd  in  	(10)
4, 9, 13, 17, 18, 21, 22, 25, 48, 49
;; rd  gen 	(4)
47, 253, 254, 255
;; rd  kill	(7)
44, 45, 46, 47, 253, 254, 255

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 5 4 2 arch/arm/kernel/perf_event.c:248 (set (reg/v/f:SI 135 [ event ])
        (reg:SI 0 r0 [ event ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ event ])
        (nil)))

(note 4 2 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 8 2 arch/arm/kernel/perf_event.c:251 (set (reg/f:SI 137)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 8 7 9 2 arch/arm/kernel/perf_event.c:251 (set (reg/f:SI 134 [ armpmu.327 ])
        (mem/f/c/i:SI (reg/f:SI 137) [0 armpmu+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 137)
        (expr_list:REG_EQUAL (mem/f/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 armpmu+0 S4 A32])
            (nil))))

(insn 9 8 10 2 arch/arm/kernel/perf_event.c:251 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 134 [ armpmu.327 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 10 9 11 2 arch/arm/kernel/perf_event.c:251 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 36)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 1014 [0x3f6])
            (nil))))
;; End of basic block 2 -> ( 5 3)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135
;; rd  out 	(14)
4, 9, 13, 17, 18, 21, 22, 25, 47, 48, 49, 253, 254, 255


;; Succ edge  5 [10.1%] 
;; Succ edge  3 [89.9%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(11){ }u9(13){ }u10(25){ }u11(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc] 138 139
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135
;; live  gen 	 24 [cc] 138 139
;; live  kill	
;; rd  in  	(14)
4, 9, 13, 17, 18, 21, 22, 25, 47, 48, 49, 253, 254, 255
;; rd  gen 	(3)
46, 256, 257
;; rd  kill	(6)
44, 45, 46, 47, 256, 257

;; Pred edge  2 [89.9%]  (fallthru)
(note 11 10 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 12 11 13 3 arch/arm/kernel/perf_event.c:249 (set (reg:SI 139 [ <variable>.hw.state ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 135 [ event ])
                (const_int 272 [0x110])) [0 <variable>.hw.state+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 13 12 14 3 arch/arm/kernel/perf_event.c:249 (set (reg:SI 138)
        (and:SI (reg:SI 139 [ <variable>.hw.state ])
            (const_int 1 [0x1]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 139 [ <variable>.hw.state ])
        (nil)))

(insn 14 13 15 3 arch/arm/kernel/perf_event.c:249 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 138)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 15 14 16 3 arch/arm/kernel/perf_event.c:249 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 36)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6102 [0x17d6])
            (nil))))
;; End of basic block 3 -> ( 4 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135 138
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135 138
;; rd  out 	(16)
4, 9, 13, 17, 18, 21, 22, 25, 46, 48, 49, 253, 254, 255, 256, 257


;; Succ edge  4 [39.0%]  (fallthru)
;; Succ edge  5 [61.0%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u16(11){ }u17(13){ }u18(25){ }u19(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 138
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 140 141 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 138
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 133 140 141 142
;; live  kill	 14 [lr]
;; rd  in  	(16)
4, 9, 13, 17, 18, 21, 22, 25, 46, 48, 49, 253, 254, 255, 256, 257
;; rd  gen 	(6)
0, 5, 252, 258, 259, 260
;; rd  kill	(17)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 23, 24, 25, 252, 258, 259, 260

;; Pred edge  3 [39.0%]  (fallthru)
(note 16 15 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 17 16 18 4 arch/arm/kernel/perf_event.c:249 (set (reg/v/f:SI 133 [ hwc ])
        (plus:SI (reg/v/f:SI 135 [ event ])
            (const_int 200 [0xc8]))) 4 {*arm_addsi3} (nil))

(insn 18 17 19 4 arch/arm/kernel/perf_event.c:259 (set (reg/f:SI 140 [ <variable>.disable ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 134 [ armpmu.327 ])
                (const_int 16 [0x10])) [0 <variable>.disable+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 134 [ armpmu.327 ])
        (nil)))

(insn 19 18 20 4 arch/arm/kernel/perf_event.c:259 (set (reg:SI 0 r0)
        (reg/v/f:SI 133 [ hwc ])) 167 {*arm_movsi_insn} (nil))

(insn 20 19 21 4 arch/arm/kernel/perf_event.c:259 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 135 [ event ])
                (const_int 224 [0xe0])) [0 <variable>.hw.D.23168.D.23159.idx+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(call_insn 21 20 22 4 arch/arm/kernel/perf_event.c:259 (parallel [
            (call (mem:SI (reg/f:SI 140 [ <variable>.disable ]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 244 {*call_reg_armv5} (expr_list:REG_DEAD (reg/f:SI 140 [ <variable>.disable ])
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_DEAD (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 22 21 23 4 arch/arm/kernel/perf_event.c:260 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 8564613)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 23 22 24 4 arch/arm/kernel/perf_event.c:261 (set (reg:SI 0 r0)
        (reg/v/f:SI 135 [ event ])) 167 {*arm_movsi_insn} (nil))

(insn 24 23 25 4 arch/arm/kernel/perf_event.c:261 (set (reg:SI 1 r1)
        (reg/v/f:SI 133 [ hwc ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 133 [ hwc ])
        (nil)))

(insn 25 24 26 4 arch/arm/kernel/perf_event.c:261 (set (reg:SI 2 r2)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 135 [ event ])
                (const_int 224 [0xe0])) [0 <variable>.hw.D.23168.D.23159.idx+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 26 25 27 4 arch/arm/kernel/perf_event.c:261 (set (reg:SI 3 r3)
        (reg:SI 138)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 138)
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(call_insn 27 26 28 4 arch/arm/kernel/perf_event.c:261 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("armpmu_event_update") [flags 0x3] <function_decl 0x114a1680 armpmu_event_update>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_UNUSED (reg:DI 0 r0)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 28 27 29 4 arch/arm/kernel/perf_event.c:262 (set (reg:SI 141 [ <variable>.hw.state ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 135 [ event ])
                (const_int 272 [0x110])) [0 <variable>.hw.state+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 29 28 30 4 arch/arm/kernel/perf_event.c:262 (set (reg:SI 142)
        (ior:SI (reg:SI 141 [ <variable>.hw.state ])
            (const_int 3 [0x3]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 141 [ <variable>.hw.state ])
        (nil)))

(insn 30 29 36 4 arch/arm/kernel/perf_event.c:262 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 135 [ event ])
                (const_int 272 [0x110])) [0 <variable>.hw.state+0 S4 A64])
        (reg:SI 142)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 142)
        (expr_list:REG_DEAD (reg/v/f:SI 135 [ event ])
            (nil))))
;; End of basic block 4 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(19)
0, 5, 13, 17, 18, 21, 22, 46, 48, 49, 252, 253, 254, 255, 256, 257, 258, 259, 260


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 2 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u41(11){ }u42(13){ }u43(25){ }u44(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(23)
0, 4, 5, 9, 13, 17, 18, 21, 22, 25, 46, 47, 48, 49, 252, 253, 254, 255, 256, 257, 258, 259, 260
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  2 [10.1%] 
;; Pred edge  3 [61.0%] 
(code_label 36 30 39 5 39 "" [2 uses])

(note 39 36 0 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 5 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(23)
0, 4, 5, 9, 13, 17, 18, 21, 22, 25, 46, 47, 48, 49, 252, 253, 254, 255, 256, 257, 258, 259, 260


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function validate_event (validate_event)[0:1318]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 11 (  1.6)
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 12 (  1.7)
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 12 (  1.7)


validate_event

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={6d,6u} r1={5d,3u} r2={4d,1u} r3={3d} r11={1d,6u} r12={3d} r13={1d,8u} r14={3d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={4d,2u} r25={1d,7u,2d} r26={1d,5u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r133={1d,1u} r134={2d,1u} r136={1d,1u} r137={1d,3u} r138={1d,2u} r139={1d,1u} r142={1d,1u} r143={1d,1u,1d} r144={1d,1u} r145={1d,1u} r146={1d,1u} r148={1d,1u} r149={1d,1u} 
;;    total ref usage 324{266d,55u,3e} in 28{26 regular + 2 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251
0[0,6] 1[6,5] 2[11,4] 3[15,3] 11[18,1] 12[19,3] 13[22,1] 14[23,3] 15[26,2] 16[28,2] 17[30,2] 18[32,2] 19[34,2] 20[36,2] 21[38,2] 22[40,2] 23[42,2] 24[44,4] 25[48,1] 26[49,1] 27[50,2] 28[52,2] 29[54,2] 30[56,2] 31[58,2] 32[60,2] 33[62,2] 34[64,2] 35[66,2] 36[68,2] 37[70,2] 38[72,2] 39[74,2] 40[76,2] 41[78,2] 42[80,2] 43[82,2] 44[84,2] 45[86,2] 46[88,2] 47[90,2] 48[92,2] 49[94,2] 50[96,2] 51[98,2] 52[100,2] 53[102,2] 54[104,2] 55[106,2] 56[108,2] 57[110,2] 58[112,2] 59[114,2] 60[116,2] 61[118,2] 62[120,2] 63[122,2] 64[124,2] 65[126,2] 66[128,2] 67[130,2] 68[132,2] 69[134,2] 70[136,2] 71[138,2] 72[140,2] 73[142,2] 74[144,2] 75[146,2] 76[148,2] 77[150,2] 78[152,2] 79[154,2] 80[156,2] 81[158,2] 82[160,2] 83[162,2] 84[164,2] 85[166,2] 86[168,2] 87[170,2] 88[172,2] 89[174,2] 90[176,2] 91[178,2] 92[180,2] 93[182,2] 94[184,2] 95[186,2] 96[188,2] 97[190,2] 98[192,2] 99[194,2] 100[196,2] 101[198,2] 102[200,2] 103[202,2] 104[204,2] 105[206,2] 106[208,2] 107[210,2] 108[212,2] 109[214,2] 110[216,2] 111[218,2] 112[220,2] 113[222,2] 114[224,2] 115[226,2] 116[228,2] 117[230,2] 118[232,2] 119[234,2] 120[236,2] 121[238,2] 122[240,2] 123[242,2] 124[244,2] 125[246,2] 126[248,2] 127[250,2] 133[252,1] 134[253,2] 136[255,1] 137[256,1] 138[257,1] 139[258,1] 142[259,1] 143[260,1] 144[261,1] 145[262,1] 146[263,1] 148[264,1] 149[265,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d5(0){ }d10(1){ }d14(2){ }d17(3){ }d18(11){ }d21(12){ }d22(13){ }d25(14){ }d48(25){ }d49(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
5, 10, 14, 17, 18, 21, 22, 25, 48, 49
;; rd  kill	(28)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 48, 49
;; lr  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(10)
5, 10, 14, 17, 18, 21, 22, 25, 48, 49

( 0 )->[2]->( 5 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d18(bb 0 insn -1) }u1(13){ d22(bb 0 insn -1) }u2(25){ d48(bb 0 insn -1) }u3(26){ d49(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 136 137 138 139 142 143
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 136 137 138 139 142 143
;; live  kill	 14 [lr]
;; rd  in  	(10)
5, 10, 14, 17, 18, 21, 22, 25, 48, 49
;; rd  gen 	(8)
3, 46, 255, 256, 257, 258, 259, 260
;; rd  kill	(19)
0, 1, 2, 3, 4, 5, 23, 24, 25, 44, 45, 46, 47, 255, 256, 257, 258, 259, 260
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137 138
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 138
;; rd  out 	(16)
3, 10, 14, 17, 18, 21, 22, 46, 48, 49, 255, 256, 257, 258, 259, 260
;;  UD chains for artificial uses
;;   reg 11 { d18(bb 0 insn -1) }
;;   reg 13 { d22(bb 0 insn -1) }
;;   reg 25 { d48(bb 0 insn -1) }
;;   reg 26 { d49(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d5(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 3
;;      reg 1 { d10(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 7
;;      reg 25 { d48(bb 0 insn -1) }
;;   UD chains for insn luid 3 uid 8
;;      reg 137 { d256(bb 2 insn 3) }
;;   UD chains for insn luid 4 uid 10
;;      reg 138 { d257(bb 2 insn 7) }
;;   eq_note reg 25 { }
;;   UD chains for insn luid 5 uid 11
;;      reg 139 { d258(bb 2 insn 8) }
;;   UD chains for insn luid 7 uid 13
;;      reg 13 { d22(bb 0 insn -1) }
;;      reg 0 { d4(bb 2 insn 10) }
;;      reg 1 { d9(bb 2 insn 11) }
;;      reg 2 { d11(bb 2 insn 12) }
;;   UD chains for insn luid 9 uid 16
;;      reg 137 { d256(bb 2 insn 3) }
;;   UD chains for insn luid 10 uid 17
;;      reg 142 { d259(bb 2 insn 15) }
;;      reg 143 { d260(bb 2 insn 16) }
;;   eq_note reg 143 { }
;;   UD chains for insn luid 11 uid 18
;;      reg 24 { d46(bb 2 insn 17) }

( 2 )->[3]->( 5 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u20(11){ d18(bb 0 insn -1) }u21(13){ d22(bb 0 insn -1) }u22(25){ d48(bb 0 insn -1) }u23(26){ d49(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc] 144
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 138
;; live  gen 	 24 [cc] 144
;; live  kill	
;; rd  in  	(16)
3, 10, 14, 17, 18, 21, 22, 46, 48, 49, 255, 256, 257, 258, 259, 260
;; rd  gen 	(2)
45, 261
;; rd  kill	(5)
44, 45, 46, 47, 261
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 138
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138
;; rd  out 	(17)
3, 10, 14, 17, 18, 21, 22, 45, 48, 49, 255, 256, 257, 258, 259, 260, 261
;;  UD chains for artificial uses
;;   reg 11 { d18(bb 0 insn -1) }
;;   reg 13 { d22(bb 0 insn -1) }
;;   reg 25 { d48(bb 0 insn -1) }
;;   reg 26 { d49(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 20
;;      reg 137 { d256(bb 2 insn 3) }
;;   UD chains for insn luid 1 uid 21
;;      reg 144 { d261(bb 3 insn 20) }
;;   UD chains for insn luid 2 uid 22
;;      reg 24 { d45(bb 3 insn 21) }

( 3 )->[4]->( 6 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u27(11){ d18(bb 0 insn -1) }u28(13){ d22(bb 0 insn -1) }u29(25){ d48(bb 0 insn -1) }u30(26){ d49(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134 145 146 148 149
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138
;; live  gen 	 0 [r0] 1 [r1] 133 134 145 146 148 149
;; live  kill	 14 [lr]
;; rd  in  	(17)
3, 10, 14, 17, 18, 21, 22, 45, 48, 49, 255, 256, 257, 258, 259, 260, 261
;; rd  gen 	(7)
1, 252, 254, 262, 263, 264, 265
;; rd  kill	(16)
0, 1, 2, 3, 4, 5, 23, 24, 25, 252, 253, 254, 262, 263, 264, 265
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; rd  out 	(23)
1, 10, 14, 17, 18, 21, 22, 45, 48, 49, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265
;;  UD chains for artificial uses
;;   reg 11 { d18(bb 0 insn -1) }
;;   reg 13 { d22(bb 0 insn -1) }
;;   reg 25 { d48(bb 0 insn -1) }
;;   reg 26 { d49(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 25
;;      reg 145 { d262(bb 4 insn 24) }
;;   UD chains for insn luid 2 uid 27
;;      reg 146 { d263(bb 4 insn 25) }
;;   UD chains for insn luid 3 uid 28
;;      reg 136 { d255(bb 2 insn 2) }
;;   UD chains for insn luid 4 uid 29
;;      reg 138 { d257(bb 2 insn 7) }
;;   eq_note reg 25 { }
;;   UD chains for insn luid 5 uid 30
;;      reg 13 { d22(bb 0 insn -1) }
;;      reg 0 { d2(bb 4 insn 28) }
;;      reg 1 { d6(bb 4 insn 29) }
;;      reg 148 { d264(bb 4 insn 27) }
;;   UD chains for insn luid 6 uid 31
;;      reg 0 { d1(bb 4 insn 30) }
;;   UD chains for insn luid 7 uid 32
;;      reg 133 { d252(bb 4 insn 31) }
;;   UD chains for insn luid 8 uid 33
;;      reg 149 { d265(bb 4 insn 32) }

( 3 2 )->[5]->( 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u43(11){ d18(bb 0 insn -1) }u44(13){ d22(bb 0 insn -1) }u45(25){ d48(bb 0 insn -1) }u46(26){ d49(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 134
;; live  kill	
;; rd  in  	(18)
3, 10, 14, 17, 18, 21, 22, 45, 46, 48, 49, 255, 256, 257, 258, 259, 260, 261
;; rd  gen 	(1)
253
;; rd  kill	(2)
253, 254
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; rd  out 	(19)
3, 10, 14, 17, 18, 21, 22, 45, 46, 48, 49, 253, 255, 256, 257, 258, 259, 260, 261
;;  UD chains for artificial uses
;;   reg 11 { d18(bb 0 insn -1) }
;;   reg 13 { d22(bb 0 insn -1) }
;;   reg 25 { d48(bb 0 insn -1) }
;;   reg 26 { d49(bb 0 insn -1) }

( 5 4 )->[6]->( 1 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u47(11){ d18(bb 0 insn -1) }u48(13){ d22(bb 0 insn -1) }u49(25){ d48(bb 0 insn -1) }u50(26){ d49(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(26)
1, 3, 10, 14, 17, 18, 21, 22, 45, 46, 48, 49, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265
;; rd  gen 	(1)
0
;; rd  kill	(6)
0, 1, 2, 3, 4, 5
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(25)
0, 10, 14, 17, 18, 21, 22, 45, 46, 48, 49, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265
;;  UD chains for artificial uses
;;   reg 11 { d18(bb 0 insn -1) }
;;   reg 13 { d22(bb 0 insn -1) }
;;   reg 25 { d48(bb 0 insn -1) }
;;   reg 26 { d49(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 45
;;      reg 134 { d254(bb 4 insn 33) d253(bb 5 insn 38) }
;;   UD chains for insn luid 1 uid 51
;;      reg 0 { d0(bb 6 insn 45) }

( 6 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u53(0){ d0(bb 6 insn 45) }u54(11){ d18(bb 0 insn -1) }u55(13){ d22(bb 0 insn -1) }u56(14){ }u57(25){ d48(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(25)
0, 10, 14, 17, 18, 21, 22, 45, 46, 48, 49, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(25)
0, 10, 14, 17, 18, 21, 22, 45, 46, 48, 49, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265
;;  UD chains for artificial uses
;;   reg 0 { d0(bb 6 insn 45) }
;;   reg 11 { d18(bb 0 insn -1) }
;;   reg 13 { d22(bb 0 insn -1) }
;;   reg 14 { }
;;   reg 25 { d48(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 18 to worklist
  Adding insn 13 to worklist
  Adding insn 22 to worklist
  Adding insn 55 to worklist
  Adding insn 30 to worklist
  Adding insn 51 to worklist
Finished finding needed instructions:
  Adding insn 45 to worklist
Processing use of (reg 134 [ D.25367 ]) in insn 45:
  Adding insn 33 to worklist
  Adding insn 38 to worklist
Processing use of (reg 149) in insn 33:
  Adding insn 32 to worklist
Processing use of (reg 133 [ D.25370 ]) in insn 32:
  Adding insn 31 to worklist
Processing use of (reg 0 r0) in insn 31:
Processing use of (reg 0 r0) in insn 51:
Processing use of (reg 13 sp) in insn 30:
Processing use of (reg 0 r0) in insn 30:
  Adding insn 28 to worklist
Processing use of (reg 1 r1) in insn 30:
  Adding insn 29 to worklist
Processing use of (reg 148 [ <variable>.get_event_idx ]) in insn 30:
  Adding insn 27 to worklist
Processing use of (reg 146 [ armpmu ]) in insn 27:
  Adding insn 25 to worklist
Processing use of (reg 145) in insn 25:
  Adding insn 24 to worklist
Processing use of (reg 138) in insn 29:
  Adding insn 7 to worklist
Processing use of (reg 25 sfp) in insn 7:
Processing use of (reg 136 [ cpuc ]) in insn 28:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 24 cc) in insn 22:
  Adding insn 21 to worklist
Processing use of (reg 144 [ <variable>.state ]) in insn 21:
  Adding insn 20 to worklist
Processing use of (reg 137 [ event ]) in insn 20:
  Adding insn 3 to worklist
Processing use of (reg 1 r1) in insn 3:
Processing use of (reg 13 sp) in insn 13:
Processing use of (reg 0 r0) in insn 13:
  Adding insn 10 to worklist
Processing use of (reg 1 r1) in insn 13:
  Adding insn 11 to worklist
Processing use of (reg 2 r2) in insn 13:
  Adding insn 12 to worklist
Processing use of (reg 139) in insn 11:
  Adding insn 8 to worklist
Processing use of (reg 137 [ event ]) in insn 8:
Processing use of (reg 138) in insn 10:
Processing use of (reg 24 cc) in insn 18:
  Adding insn 17 to worklist
Processing use of (reg 142) in insn 17:
  Adding insn 15 to worklist
Processing use of (reg 143 [ <variable>.pmu ]) in insn 17:
  Adding insn 16 to worklist
Processing use of (reg 137 [ event ]) in insn 16:


validate_event

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={6d,6u} r1={5d,3u} r2={4d,1u} r3={3d} r11={1d,6u} r12={3d} r13={1d,8u} r14={3d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={4d,2u} r25={1d,7u,2d} r26={1d,5u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r133={1d,1u} r134={2d,1u} r136={1d,1u} r137={1d,3u} r138={1d,2u} r139={1d,1u} r142={1d,1u} r143={1d,1u,1d} r144={1d,1u} r145={1d,1u} r146={1d,1u} r148={1d,1u} r149={1d,1u} 
;;    total ref usage 324{266d,55u,3e} in 28{26 regular + 2 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251
0[0,6] 1[6,5] 2[11,4] 3[15,3] 11[18,1] 12[19,3] 13[22,1] 14[23,3] 15[26,2] 16[28,2] 17[30,2] 18[32,2] 19[34,2] 20[36,2] 21[38,2] 22[40,2] 23[42,2] 24[44,4] 25[48,1] 26[49,1] 27[50,2] 28[52,2] 29[54,2] 30[56,2] 31[58,2] 32[60,2] 33[62,2] 34[64,2] 35[66,2] 36[68,2] 37[70,2] 38[72,2] 39[74,2] 40[76,2] 41[78,2] 42[80,2] 43[82,2] 44[84,2] 45[86,2] 46[88,2] 47[90,2] 48[92,2] 49[94,2] 50[96,2] 51[98,2] 52[100,2] 53[102,2] 54[104,2] 55[106,2] 56[108,2] 57[110,2] 58[112,2] 59[114,2] 60[116,2] 61[118,2] 62[120,2] 63[122,2] 64[124,2] 65[126,2] 66[128,2] 67[130,2] 68[132,2] 69[134,2] 70[136,2] 71[138,2] 72[140,2] 73[142,2] 74[144,2] 75[146,2] 76[148,2] 77[150,2] 78[152,2] 79[154,2] 80[156,2] 81[158,2] 82[160,2] 83[162,2] 84[164,2] 85[166,2] 86[168,2] 87[170,2] 88[172,2] 89[174,2] 90[176,2] 91[178,2] 92[180,2] 93[182,2] 94[184,2] 95[186,2] 96[188,2] 97[190,2] 98[192,2] 99[194,2] 100[196,2] 101[198,2] 102[200,2] 103[202,2] 104[204,2] 105[206,2] 106[208,2] 107[210,2] 108[212,2] 109[214,2] 110[216,2] 111[218,2] 112[220,2] 113[222,2] 114[224,2] 115[226,2] 116[228,2] 117[230,2] 118[232,2] 119[234,2] 120[236,2] 121[238,2] 122[240,2] 123[242,2] 124[244,2] 125[246,2] 126[248,2] 127[250,2] 133[252,1] 134[253,2] 136[255,1] 137[256,1] 138[257,1] 139[258,1] 142[259,1] 143[260,1] 144[261,1] 145[262,1] 146[263,1] 148[264,1] 149[265,1] 
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 136 137 138 139 142 143
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 136 137 138 139 142 143
;; live  kill	 14 [lr]
;; rd  in  	(10)
5, 10, 14, 17, 18, 21, 22, 25, 48, 49
;; rd  gen 	(8)
3, 46, 255, 256, 257, 258, 259, 260
;; rd  kill	(19)
0, 1, 2, 3, 4, 5, 23, 24, 25, 44, 45, 46, 47, 255, 256, 257, 258, 259, 260

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 5 3 2 arch/arm/kernel/perf_event.c:353 (set (reg/v/f:SI 136 [ cpuc ])
        (reg:SI 0 r0 [ cpuc ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ cpuc ])
        (nil)))

(insn 3 2 4 2 arch/arm/kernel/perf_event.c:353 (set (reg/v/f:SI 137 [ event ])
        (reg:SI 1 r1 [ event ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ event ])
        (nil)))

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 8 2 arch/arm/kernel/perf_event.c:354 (set (reg/f:SI 138)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -136 [0xffffffffffffff78]))) 4 {*arm_addsi3} (nil))

(insn 8 7 10 2 arch/arm/kernel/perf_event.c:354 (set (reg/f:SI 139)
        (plus:SI (reg/v/f:SI 137 [ event ])
            (const_int 200 [0xc8]))) 4 {*arm_addsi3} (nil))

(insn 10 8 11 2 arch/arm/kernel/perf_event.c:354 (set (reg:SI 0 r0)
        (reg/f:SI 138)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -136 [0xffffffffffffff78]))
        (nil)))

(insn 11 10 12 2 arch/arm/kernel/perf_event.c:354 (set (reg:SI 1 r1)
        (reg/f:SI 139)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 139)
        (nil)))

(insn 12 11 13 2 arch/arm/kernel/perf_event.c:354 (set (reg:SI 2 r2)
        (const_int 136 [0x88])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 136 [0x88])
        (nil)))

(call_insn 13 12 15 2 arch/arm/kernel/perf_event.c:354 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41] <function_decl 0x11574200 memcpy>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 15 13 16 2 arch/arm/kernel/perf_event.c:356 (set (reg/f:SI 142)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 16 15 17 2 arch/arm/kernel/perf_event.c:356 (set (reg/f:SI 143 [ <variable>.pmu ])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 137 [ event ])
                (const_int 44 [0x2c])) [0 <variable>.pmu+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 17 16 18 2 arch/arm/kernel/perf_event.c:356 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 143 [ <variable>.pmu ])
            (reg/f:SI 142))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/f:SI 143 [ <variable>.pmu ])
        (expr_list:REG_DEAD (reg/f:SI 142)
            (expr_list:REG_EQUAL (compare:CC (reg/f:SI 143 [ <variable>.pmu ])
                    (symbol_ref:SI ("*.LANCHOR1") [flags 0x182]))
                (nil)))))

(jump_insn 18 17 19 2 arch/arm/kernel/perf_event.c:356 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 36)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7837 [0x1e9d])
            (nil))))
;; End of basic block 2 -> ( 5 3)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137 138
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 138
;; rd  out 	(16)
3, 10, 14, 17, 18, 21, 22, 46, 48, 49, 255, 256, 257, 258, 259, 260


;; Succ edge  5 [78.4%] 
;; Succ edge  3 [21.6%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u20(11){ }u21(13){ }u22(25){ }u23(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc] 144
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 138
;; live  gen 	 24 [cc] 144
;; live  kill	
;; rd  in  	(16)
3, 10, 14, 17, 18, 21, 22, 46, 48, 49, 255, 256, 257, 258, 259, 260
;; rd  gen 	(2)
45, 261
;; rd  kill	(5)
44, 45, 46, 47, 261

;; Pred edge  2 [21.6%]  (fallthru)
(note 19 18 20 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 20 19 21 3 arch/arm/kernel/perf_event.c:356 (set (reg:SI 144 [ <variable>.state ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 137 [ event ])
                (const_int 48 [0x30])) [0 <variable>.state+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 137 [ event ])
        (nil)))

(insn 21 20 22 3 arch/arm/kernel/perf_event.c:356 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 144 [ <variable>.state ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 144 [ <variable>.state ])
        (nil)))

(jump_insn 22 21 23 3 arch/arm/kernel/perf_event.c:356 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 36)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3667 [0xe53])
            (nil))))
;; End of basic block 3 -> ( 5 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 138
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138
;; rd  out 	(17)
3, 10, 14, 17, 18, 21, 22, 45, 48, 49, 255, 256, 257, 258, 259, 260, 261


;; Succ edge  5 [36.7%] 
;; Succ edge  4 [63.3%]  (fallthru)

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u27(11){ }u28(13){ }u29(25){ }u30(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134 145 146 148 149
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138
;; live  gen 	 0 [r0] 1 [r1] 133 134 145 146 148 149
;; live  kill	 14 [lr]
;; rd  in  	(17)
3, 10, 14, 17, 18, 21, 22, 45, 48, 49, 255, 256, 257, 258, 259, 260, 261
;; rd  gen 	(7)
1, 252, 254, 262, 263, 264, 265
;; rd  kill	(16)
0, 1, 2, 3, 4, 5, 23, 24, 25, 252, 253, 254, 262, 263, 264, 265

;; Pred edge  3 [63.3%]  (fallthru)
(note 23 22 24 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 24 23 25 4 arch/arm/kernel/perf_event.c:359 (set (reg/f:SI 145)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 25 24 27 4 arch/arm/kernel/perf_event.c:359 (set (reg/f:SI 146 [ armpmu ])
        (mem/f/c/i:SI (reg/f:SI 145) [0 armpmu+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 145)
        (expr_list:REG_EQUAL (mem/f/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 armpmu+0 S4 A32])
            (nil))))

(insn 27 25 28 4 arch/arm/kernel/perf_event.c:359 (set (reg/f:SI 148 [ <variable>.get_event_idx ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 146 [ armpmu ])
                (const_int 20 [0x14])) [0 <variable>.get_event_idx+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 146 [ armpmu ])
        (nil)))

(insn 28 27 29 4 arch/arm/kernel/perf_event.c:359 (set (reg:SI 0 r0)
        (reg/v/f:SI 136 [ cpuc ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 136 [ cpuc ])
        (nil)))

(insn 29 28 30 4 arch/arm/kernel/perf_event.c:359 (set (reg:SI 1 r1)
        (reg/f:SI 138)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 138)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -136 [0xffffffffffffff78]))
            (nil))))

(call_insn 30 29 31 4 arch/arm/kernel/perf_event.c:359 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (reg/f:SI 148 [ <variable>.get_event_idx ]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 249 {*call_value_reg_armv5} (expr_list:REG_DEAD (reg/f:SI 148 [ <variable>.get_event_idx ])
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 31 30 32 4 arch/arm/kernel/perf_event.c:359 (set (reg:SI 133 [ D.25370 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 32 31 33 4 arch/arm/kernel/perf_event.c:359 (set (reg:SI 149)
        (not:SI (reg:SI 133 [ D.25370 ]))) 134 {*arm_one_cmplsi2} (expr_list:REG_DEAD (reg:SI 133 [ D.25370 ])
        (nil)))

(insn 33 32 55 4 arch/arm/kernel/perf_event.c:359 (set (reg:SI 134 [ D.25367 ])
        (lshiftrt:SI (reg:SI 149)
            (const_int 31 [0x1f]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 149)
        (nil)))

(jump_insn 55 33 56 4 arch/arm/kernel/perf_event.c:359 (set (pc)
        (label_ref 39)) -1 (nil))
;; End of basic block 4 -> ( 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; rd  out 	(23)
1, 10, 14, 17, 18, 21, 22, 45, 48, 49, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265


;; Succ edge  6 [100.0%] 

(barrier 56 55 36)

;; Start of basic block ( 3 2) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u43(11){ }u44(13){ }u45(25){ }u46(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 134
;; live  kill	
;; rd  in  	(18)
3, 10, 14, 17, 18, 21, 22, 45, 46, 48, 49, 255, 256, 257, 258, 259, 260, 261
;; rd  gen 	(1)
253
;; rd  kill	(2)
253, 254

;; Pred edge  3 [36.7%] 
;; Pred edge  2 [78.4%] 
(code_label 36 56 37 5 43 "" [2 uses])

(note 37 36 38 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 38 37 39 5 arch/arm/kernel/perf_event.c:357 (set (reg:SI 134 [ D.25367 ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 5 -> ( 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; rd  out 	(19)
3, 10, 14, 17, 18, 21, 22, 45, 46, 48, 49, 253, 255, 256, 257, 258, 259, 260, 261


;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 5 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u47(11){ }u48(13){ }u49(25){ }u50(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(26)
1, 3, 10, 14, 17, 18, 21, 22, 45, 46, 48, 49, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265
;; rd  gen 	(1)
0
;; rd  kill	(6)
0, 1, 2, 3, 4, 5

;; Pred edge  5 [100.0%]  (fallthru)
;; Pred edge  4 [100.0%] 
(code_label 39 38 40 6 44 "" [1 uses])

(note 40 39 45 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 45 40 51 6 arch/arm/kernel/perf_event.c:360 (set (reg/i:SI 0 r0)
        (reg:SI 134 [ D.25367 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 134 [ D.25367 ])
        (nil)))

(insn 51 45 0 6 arch/arm/kernel/perf_event.c:360 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 6 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(25)
0, 10, 14, 17, 18, 21, 22, 45, 46, 48, 49, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function armpmu_platform_irq (armpmu_platform_irq)[0:1320]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


armpmu_platform_irq

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr]
;;  ref usage 	r0={2d,3u} r1={2d,1u} r2={3d,1u} r3={2d} r11={1d,2u} r12={2d} r13={1d,3u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,2u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r137={1d,2u} r138={1d,1u} r139={1d,1u} r141={1d,1u} r142={1d,1u} 
;;    total ref usage 153{133d,20u,0e} in 8{7 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127
0[0,2] 1[2,2] 2[4,3] 3[7,2] 11[9,1] 12[10,2] 13[12,1] 14[13,2] 15[15,1] 16[16,1] 17[17,1] 18[18,1] 19[19,1] 20[20,1] 21[21,1] 22[22,1] 23[23,1] 24[24,1] 25[25,1] 26[26,1] 27[27,1] 28[28,1] 29[29,1] 30[30,1] 31[31,1] 32[32,1] 33[33,1] 34[34,1] 35[35,1] 36[36,1] 37[37,1] 38[38,1] 39[39,1] 40[40,1] 41[41,1] 42[42,1] 43[43,1] 44[44,1] 45[45,1] 46[46,1] 47[47,1] 48[48,1] 49[49,1] 50[50,1] 51[51,1] 52[52,1] 53[53,1] 54[54,1] 55[55,1] 56[56,1] 57[57,1] 58[58,1] 59[59,1] 60[60,1] 61[61,1] 62[62,1] 63[63,1] 64[64,1] 65[65,1] 66[66,1] 67[67,1] 68[68,1] 69[69,1] 70[70,1] 71[71,1] 72[72,1] 73[73,1] 74[74,1] 75[75,1] 76[76,1] 77[77,1] 78[78,1] 79[79,1] 80[80,1] 81[81,1] 82[82,1] 83[83,1] 84[84,1] 85[85,1] 86[86,1] 87[87,1] 88[88,1] 89[89,1] 90[90,1] 91[91,1] 92[92,1] 93[93,1] 94[94,1] 95[95,1] 96[96,1] 97[97,1] 98[98,1] 99[99,1] 100[100,1] 101[101,1] 102[102,1] 103[103,1] 104[104,1] 105[105,1] 106[106,1] 107[107,1] 108[108,1] 109[109,1] 110[110,1] 111[111,1] 112[112,1] 113[113,1] 114[114,1] 115[115,1] 116[116,1] 117[117,1] 118[118,1] 119[119,1] 120[120,1] 121[121,1] 122[122,1] 123[123,1] 124[124,1] 125[125,1] 126[126,1] 127[127,1] 137[128,1] 138[129,1] 139[130,1] 141[131,1] 142[132,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d1(0){ }d3(1){ }d6(2){ }d8(3){ }d9(11){ }d11(12){ }d12(13){ }d14(14){ }d25(25){ }d26(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
1, 3, 6, 8, 9, 11, 12, 14, 25, 26
;; rd  kill	(17)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 25, 26
;; lr  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(10)
1, 3, 6, 8, 9, 11, 12, 14, 25, 26

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d9(bb 0 insn -1) }u1(13){ d12(bb 0 insn -1) }u2(25){ d25(bb 0 insn -1) }u3(26){ d26(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 137 138 139 141 142
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 2 [r2] 137 138 139 141 142
;; live  kill	 14 [lr]
;; rd  in  	(10)
1, 3, 6, 8, 9, 11, 12, 14, 25, 26
;; rd  gen 	(6)
0, 128, 129, 130, 131, 132
;; rd  kill	(9)
0, 1, 13, 14, 128, 129, 130, 131, 132
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(14)
0, 3, 6, 8, 9, 11, 12, 25, 26, 128, 129, 130, 131, 132
;;  UD chains for artificial uses
;;   reg 11 { d9(bb 0 insn -1) }
;;   reg 13 { d12(bb 0 insn -1) }
;;   reg 25 { d25(bb 0 insn -1) }
;;   reg 26 { d26(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 8
;;      reg 137 { d128(bb 2 insn 7) }
;;   UD chains for insn luid 2 uid 9
;;      reg 138 { d129(bb 2 insn 8) }
;;   UD chains for insn luid 3 uid 11
;;      reg 137 { d128(bb 2 insn 7) }
;;   UD chains for insn luid 4 uid 12
;;      reg 139 { d130(bb 2 insn 9) }
;;   UD chains for insn luid 5 uid 15
;;      reg 141 { d131(bb 2 insn 11) }
;;   UD chains for insn luid 6 uid 16
;;      reg 13 { d12(bb 0 insn -1) }
;;      reg 0 { d1(bb 0 insn -1) }
;;      reg 1 { d3(bb 0 insn -1) }
;;      reg 2 { d5(bb 2 insn 15) }
;;      reg 142 { d132(bb 2 insn 12) }
;;   UD chains for insn luid 7 uid 28
;;      reg 0 { d0(bb 2 insn 16) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u15(0){ d0(bb 2 insn 16) }u16(11){ d9(bb 0 insn -1) }u17(13){ d12(bb 0 insn -1) }u18(14){ }u19(25){ d25(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(14)
0, 3, 6, 8, 9, 11, 12, 25, 26, 128, 129, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(14)
0, 3, 6, 8, 9, 11, 12, 25, 26, 128, 129, 130, 131, 132
;;  UD chains for artificial uses
;;   reg 0 { d0(bb 2 insn 16) }
;;   reg 11 { d9(bb 0 insn -1) }
;;   reg 13 { d12(bb 0 insn -1) }
;;   reg 14 { }
;;   reg 25 { d25(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 28 to worklist
  Adding insn 16 to worklist
Finished finding needed instructions:
Processing use of (reg 13 sp) in insn 16:
Processing use of (reg 0 r0) in insn 16:
Processing use of (reg 1 r1) in insn 16:
Processing use of (reg 2 r2) in insn 16:
  Adding insn 15 to worklist
Processing use of (reg 142 [ <variable>.handle_irq ]) in insn 16:
  Adding insn 12 to worklist
Processing use of (reg 139 [ <variable>.dev.platform_data ]) in insn 12:
  Adding insn 9 to worklist
Processing use of (reg 138 [ pmu_device ]) in insn 9:
  Adding insn 8 to worklist
Processing use of (reg 137) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 141 [ armpmu ]) in insn 15:
  Adding insn 11 to worklist
Processing use of (reg 137) in insn 11:
Processing use of (reg 0 r0) in insn 28:


armpmu_platform_irq

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr]
;;  ref usage 	r0={2d,3u} r1={2d,1u} r2={3d,1u} r3={2d} r11={1d,2u} r12={2d} r13={1d,3u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,2u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r137={1d,2u} r138={1d,1u} r139={1d,1u} r141={1d,1u} r142={1d,1u} 
;;    total ref usage 153{133d,20u,0e} in 8{7 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127
0[0,2] 1[2,2] 2[4,3] 3[7,2] 11[9,1] 12[10,2] 13[12,1] 14[13,2] 15[15,1] 16[16,1] 17[17,1] 18[18,1] 19[19,1] 20[20,1] 21[21,1] 22[22,1] 23[23,1] 24[24,1] 25[25,1] 26[26,1] 27[27,1] 28[28,1] 29[29,1] 30[30,1] 31[31,1] 32[32,1] 33[33,1] 34[34,1] 35[35,1] 36[36,1] 37[37,1] 38[38,1] 39[39,1] 40[40,1] 41[41,1] 42[42,1] 43[43,1] 44[44,1] 45[45,1] 46[46,1] 47[47,1] 48[48,1] 49[49,1] 50[50,1] 51[51,1] 52[52,1] 53[53,1] 54[54,1] 55[55,1] 56[56,1] 57[57,1] 58[58,1] 59[59,1] 60[60,1] 61[61,1] 62[62,1] 63[63,1] 64[64,1] 65[65,1] 66[66,1] 67[67,1] 68[68,1] 69[69,1] 70[70,1] 71[71,1] 72[72,1] 73[73,1] 74[74,1] 75[75,1] 76[76,1] 77[77,1] 78[78,1] 79[79,1] 80[80,1] 81[81,1] 82[82,1] 83[83,1] 84[84,1] 85[85,1] 86[86,1] 87[87,1] 88[88,1] 89[89,1] 90[90,1] 91[91,1] 92[92,1] 93[93,1] 94[94,1] 95[95,1] 96[96,1] 97[97,1] 98[98,1] 99[99,1] 100[100,1] 101[101,1] 102[102,1] 103[103,1] 104[104,1] 105[105,1] 106[106,1] 107[107,1] 108[108,1] 109[109,1] 110[110,1] 111[111,1] 112[112,1] 113[113,1] 114[114,1] 115[115,1] 116[116,1] 117[117,1] 118[118,1] 119[119,1] 120[120,1] 121[121,1] 122[122,1] 123[123,1] 124[124,1] 125[125,1] 126[126,1] 127[127,1] 137[128,1] 138[129,1] 139[130,1] 141[131,1] 142[132,1] 
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 137 138 139 141 142
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 2 [r2] 137 138 139 141 142
;; live  kill	 14 [lr]
;; rd  in  	(10)
1, 3, 6, 8, 9, 11, 12, 14, 25, 26
;; rd  gen 	(6)
0, 128, 129, 130, 131, 132
;; rd  kill	(9)
0, 1, 13, 14, 128, 129, 130, 131, 132

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 4 5 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 8 2 arch/arm/kernel/perf_event.c:388 (set (reg/f:SI 137)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 8 7 9 2 arch/arm/kernel/perf_event.c:388 (set (reg/f:SI 138 [ pmu_device ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 137)
                (const_int 4 [0x4])) [0 pmu_device+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 9 8 11 2 arch/arm/kernel/perf_event.c:388 (set (reg/f:SI 139 [ <variable>.dev.platform_data ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 138 [ pmu_device ])
                (const_int 92 [0x5c])) [0 <variable>.dev.platform_data+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 138 [ pmu_device ])
        (nil)))

(insn 11 9 12 2 arch/arm/kernel/perf_event.c:388 (set (reg/f:SI 141 [ armpmu ])
        (mem/f/c/i:SI (reg/f:SI 137) [0 armpmu+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 137)
        (nil)))

(insn 12 11 15 2 arch/arm/kernel/perf_event.c:388 (set (reg/f:SI 142 [ <variable>.handle_irq ])
        (mem/s/f/j:SI (reg/f:SI 139 [ <variable>.dev.platform_data ]) [0 <variable>.handle_irq+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 139 [ <variable>.dev.platform_data ])
        (nil)))

(insn 15 12 16 2 arch/arm/kernel/perf_event.c:388 (set (reg:SI 2 r2)
        (mem/s/f/j:SI (plus:SI (reg/f:SI 141 [ armpmu ])
                (const_int 8 [0x8])) [0 <variable>.handle_irq+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 141 [ armpmu ])
        (nil)))

(call_insn 16 15 28 2 arch/arm/kernel/perf_event.c:388 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (reg/f:SI 142 [ <variable>.handle_irq ]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 249 {*call_value_reg_armv5} (expr_list:REG_DEAD (reg/f:SI 142 [ <variable>.handle_irq ])
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 28 16 0 2 arch/arm/kernel/perf_event.c:389 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(14)
0, 3, 6, 8, 9, 11, 12, 25, 26, 128, 129, 130, 131, 132


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function armpmu_enable (armpmu_enable)[0:1326]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 11 n_edges 14 count 23 (  2.1)
df_worklist_dataflow_doublequeue:n_basic_blocks 11 n_edges 14 count 23 (  2.1)
df_worklist_dataflow_doublequeue:n_basic_blocks 11 n_edges 14 count 23 (  2.1)


armpmu_enable

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={4d,1u} r1={4d,1u} r2={3d} r3={3d} r11={1d,10u} r12={3d} r13={1d,13u,1d} r14={3d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={6d,4u} r25={1d,10u} r26={1d,9u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r162={1d,3u} r164={1d,2u} r165={1d,1u} r166={1d,1u} r167={2d,2u} r168={2d,4u} r170={1d,1u} r171={1d,1u} r172={1d,1u} r173={1d,1u} r174={1d,1u,1d} r175={1d,1u} r176={1d,2u} r177={1d,1u} r179={1d,1u} r180={1d,1u} r182={1d,1u} r183={1d,1u} r184={1d,1u} 
;;    total ref usage 349{271d,76u,2e} in 34{32 regular + 2 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249
0[0,4] 1[4,4] 2[8,3] 3[11,3] 11[14,1] 12[15,3] 13[18,1] 14[19,3] 15[22,2] 16[24,2] 17[26,2] 18[28,2] 19[30,2] 20[32,2] 21[34,2] 22[36,2] 23[38,2] 24[40,6] 25[46,1] 26[47,1] 27[48,2] 28[50,2] 29[52,2] 30[54,2] 31[56,2] 32[58,2] 33[60,2] 34[62,2] 35[64,2] 36[66,2] 37[68,2] 38[70,2] 39[72,2] 40[74,2] 41[76,2] 42[78,2] 43[80,2] 44[82,2] 45[84,2] 46[86,2] 47[88,2] 48[90,2] 49[92,2] 50[94,2] 51[96,2] 52[98,2] 53[100,2] 54[102,2] 55[104,2] 56[106,2] 57[108,2] 58[110,2] 59[112,2] 60[114,2] 61[116,2] 62[118,2] 63[120,2] 64[122,2] 65[124,2] 66[126,2] 67[128,2] 68[130,2] 69[132,2] 70[134,2] 71[136,2] 72[138,2] 73[140,2] 74[142,2] 75[144,2] 76[146,2] 77[148,2] 78[150,2] 79[152,2] 80[154,2] 81[156,2] 82[158,2] 83[160,2] 84[162,2] 85[164,2] 86[166,2] 87[168,2] 88[170,2] 89[172,2] 90[174,2] 91[176,2] 92[178,2] 93[180,2] 94[182,2] 95[184,2] 96[186,2] 97[188,2] 98[190,2] 99[192,2] 100[194,2] 101[196,2] 102[198,2] 103[200,2] 104[202,2] 105[204,2] 106[206,2] 107[208,2] 108[210,2] 109[212,2] 110[214,2] 111[216,2] 112[218,2] 113[220,2] 114[222,2] 115[224,2] 116[226,2] 117[228,2] 118[230,2] 119[232,2] 120[234,2] 121[236,2] 122[238,2] 123[240,2] 124[242,2] 125[244,2] 126[246,2] 127[248,2] 162[250,1] 164[251,1] 165[252,1] 166[253,1] 167[254,2] 168[256,2] 170[258,1] 171[259,1] 172[260,1] 173[261,1] 174[262,1] 175[263,1] 176[264,1] 177[265,1] 179[266,1] 180[267,1] 182[268,1] 183[269,1] 184[270,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d3(0){ }d7(1){ }d10(2){ }d13(3){ }d14(11){ }d17(12){ }d18(13){ }d21(14){ }d46(25){ }d47(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
3, 7, 10, 13, 14, 17, 18, 21, 46, 47
;; rd  kill	(24)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 46, 47
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
3, 7, 10, 13, 14, 17, 18, 21, 46, 47

( 0 )->[2]->( 10 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d14(bb 0 insn -1) }u1(13){ d18(bb 0 insn -1) }u2(25){ d46(bb 0 insn -1) }u3(26){ d47(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 165 166 170 171 172 173 174 175 176 177
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 165 166 170 171 172 173 174 175 176 177
;; live  kill	
;; rd  in  	(10)
3, 7, 10, 13, 14, 17, 18, 21, 46, 47
;; rd  gen 	(11)
45, 252, 253, 258, 259, 260, 261, 262, 263, 264, 265
;; rd  kill	(16)
40, 41, 42, 43, 44, 45, 252, 253, 258, 259, 260, 261, 262, 263, 264, 265
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 166 176
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 166 176
;; rd  out 	(21)
3, 7, 10, 13, 14, 17, 18, 21, 45, 46, 47, 252, 253, 258, 259, 260, 261, 262, 263, 264, 265
;;  UD chains for artificial uses
;;   reg 11 { d14(bb 0 insn -1) }
;;   reg 13 { d18(bb 0 insn -1) }
;;   reg 25 { d46(bb 0 insn -1) }
;;   reg 26 { d47(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 36
;;      reg 170 { d258(bb 2 insn 35) }
;;   UD chains for insn luid 3 uid 39
;;      reg 13 { d18(bb 0 insn -1) }
;;   UD chains for insn luid 4 uid 40
;;      reg 173 { d261(bb 2 insn 39) }
;;   eq_note reg 13 { }
;;   UD chains for insn luid 5 uid 41
;;      reg 172 { d260(bb 2 insn 40) }
;;   UD chains for insn luid 6 uid 42
;;      reg 171 { d259(bb 2 insn 38) }
;;      reg 174 { d262(bb 2 insn 41) }
;;   eq_note reg 174 { }
;;   UD chains for insn luid 7 uid 43
;;      reg 165 { d252(bb 2 insn 36) }
;;      reg 175 { d263(bb 2 insn 42) }
;;   UD chains for insn luid 9 uid 45
;;      reg 176 { d264(bb 2 insn 44) }
;;   UD chains for insn luid 10 uid 46
;;      reg 177 { d265(bb 2 insn 45) }
;;   UD chains for insn luid 11 uid 47
;;      reg 24 { d45(bb 2 insn 46) }

( 2 )->[3]->( 7 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u17(11){ d14(bb 0 insn -1) }u18(13){ d18(bb 0 insn -1) }u19(25){ d46(bb 0 insn -1) }u20(26){ d47(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 166 176
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 176
;; lr  def 	 167 168 184
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 166 176
;; live  gen 	 167 168 184
;; live  kill	
;; rd  in  	(21)
3, 7, 10, 13, 14, 17, 18, 21, 45, 46, 47, 252, 253, 258, 259, 260, 261, 262, 263, 264, 265
;; rd  gen 	(3)
255, 256, 270
;; rd  kill	(5)
254, 255, 256, 257, 270
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 166 167 168 184
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 166 167 168 184
;; rd  out 	(24)
3, 7, 10, 13, 14, 17, 18, 21, 45, 46, 47, 252, 253, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 270
;;  UD chains for artificial uses
;;   reg 11 { d14(bb 0 insn -1) }
;;   reg 13 { d18(bb 0 insn -1) }
;;   reg 25 { d46(bb 0 insn -1) }
;;   reg 26 { d47(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 50
;;      reg 167 { d255(bb 3 insn 49) }
;;   UD chains for insn luid 2 uid 70
;;      reg 176 { d264(bb 2 insn 44) }

( 7 )->[4]->( 6 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u23(11){ d14(bb 0 insn -1) }u24(13){ d18(bb 0 insn -1) }u25(25){ d46(bb 0 insn -1) }u26(26){ d47(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162 166 167 168 184
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166 168
;; lr  def 	 24 [cc] 164
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162 166 167 168 184
;; live  gen 	 24 [cc] 164
;; live  kill	
;; rd  in  	(31)
3, 7, 10, 13, 14, 17, 18, 21, 42, 46, 47, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270
;; rd  gen 	(2)
44, 251
;; rd  kill	(7)
40, 41, 42, 43, 44, 45, 251
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162 164 166 167 168 184
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162 164 166 167 168 184
;; rd  out 	(31)
3, 7, 10, 13, 14, 17, 18, 21, 44, 46, 47, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270
;;  UD chains for artificial uses
;;   reg 11 { d14(bb 0 insn -1) }
;;   reg 13 { d18(bb 0 insn -1) }
;;   reg 25 { d46(bb 0 insn -1) }
;;   reg 26 { d47(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 55
;;      reg 166 { d253(bb 2 insn 43) }
;;      reg 168 { d257(bb 6 insn 67) d256(bb 3 insn 50) }
;;   UD chains for insn luid 1 uid 56
;;      reg 164 { d251(bb 4 insn 55) }
;;   UD chains for insn luid 2 uid 57
;;      reg 24 { d44(bb 4 insn 56) }

( 4 )->[5]->( 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u32(11){ d14(bb 0 insn -1) }u33(13){ d18(bb 0 insn -1) }u34(25){ d46(bb 0 insn -1) }u35(26){ d47(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 162 164 166 168 184
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 162 164 168
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 167 179 180
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 162 164 166 168 184
;; live  gen 	 0 [r0] 1 [r1] 167 179 180
;; live  kill	 14 [lr]
;; rd  in  	(31)
3, 7, 10, 13, 14, 17, 18, 21, 44, 46, 47, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270
;; rd  gen 	(3)
254, 266, 267
;; rd  kill	(7)
19, 20, 21, 254, 255, 266, 267
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 166 167 168 184
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166 167 168 184
;; rd  out 	(29)
3, 7, 10, 13, 14, 17, 18, 44, 46, 47, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270
;;  UD chains for artificial uses
;;   reg 11 { d14(bb 0 insn -1) }
;;   reg 13 { d18(bb 0 insn -1) }
;;   reg 25 { d46(bb 0 insn -1) }
;;   reg 26 { d47(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 59
;;      reg 164 { d251(bb 4 insn 55) }
;;   UD chains for insn luid 1 uid 60
;;      reg 162 { d250(bb 7 insn 71) }
;;   UD chains for insn luid 2 uid 61
;;      reg 179 { d266(bb 5 insn 59) }
;;   UD chains for insn luid 3 uid 62
;;      reg 168 { d257(bb 6 insn 67) d256(bb 3 insn 50) }
;;   UD chains for insn luid 4 uid 63
;;      reg 13 { d18(bb 0 insn -1) }
;;      reg 0 { d2(bb 5 insn 61) }
;;      reg 1 { d6(bb 5 insn 62) }
;;      reg 180 { d267(bb 5 insn 60) }

( 4 5 )->[6]->( 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u44(11){ d14(bb 0 insn -1) }u45(13){ d18(bb 0 insn -1) }u46(25){ d46(bb 0 insn -1) }u47(26){ d47(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 166 167 168 184
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 168
;; lr  def 	 168
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 166 167 168 184
;; live  gen 	 168
;; live  kill	
;; rd  in  	(31)
3, 7, 10, 13, 14, 17, 18, 21, 44, 46, 47, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270
;; rd  gen 	(1)
257
;; rd  kill	(2)
256, 257
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 166 167 168 184
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 166 167 168 184
;; rd  out 	(30)
3, 7, 10, 13, 14, 17, 18, 21, 44, 46, 47, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270
;;  UD chains for artificial uses
;;   reg 11 { d14(bb 0 insn -1) }
;;   reg 13 { d18(bb 0 insn -1) }
;;   reg 25 { d46(bb 0 insn -1) }
;;   reg 26 { d47(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 67
;;      reg 168 { d257(bb 6 insn 67) d256(bb 3 insn 50) }

( 6 3 )->[7]->( 4 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u49(11){ d14(bb 0 insn -1) }u50(13){ d18(bb 0 insn -1) }u51(25){ d46(bb 0 insn -1) }u52(26){ d47(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 166 167 168 184
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 168 184
;; lr  def 	 24 [cc] 162 182
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 166 167 168 184
;; live  gen 	 24 [cc] 162 182
;; live  kill	
;; rd  in  	(32)
3, 7, 10, 13, 14, 17, 18, 21, 44, 45, 46, 47, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270
;; rd  gen 	(3)
42, 250, 268
;; rd  kill	(8)
40, 41, 42, 43, 44, 45, 250, 268
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162 166 167 168 184
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162 166 167 168 184
;; rd  out 	(31)
3, 7, 10, 13, 14, 17, 18, 21, 42, 46, 47, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270
;;  UD chains for artificial uses
;;   reg 11 { d14(bb 0 insn -1) }
;;   reg 13 { d18(bb 0 insn -1) }
;;   reg 25 { d46(bb 0 insn -1) }
;;   reg 26 { d47(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 71
;;      reg 184 { d270(bb 3 insn 70) }
;;   UD chains for insn luid 1 uid 73
;;      reg 162 { d250(bb 7 insn 71) }
;;   UD chains for insn luid 2 uid 74
;;      reg 168 { d257(bb 6 insn 67) d256(bb 3 insn 50) }
;;      reg 182 { d268(bb 7 insn 73) }
;;   UD chains for insn luid 3 uid 75
;;      reg 24 { d42(bb 7 insn 74) }

( 7 )->[8]->( 9 10 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u58(11){ d14(bb 0 insn -1) }u59(13){ d18(bb 0 insn -1) }u60(25){ d46(bb 0 insn -1) }u61(26){ d47(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162 167
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162 167
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(31)
3, 7, 10, 13, 14, 17, 18, 21, 42, 46, 47, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270
;; rd  gen 	(1)
41
;; rd  kill	(6)
40, 41, 42, 43, 44, 45
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162
;; rd  out 	(31)
3, 7, 10, 13, 14, 17, 18, 21, 41, 46, 47, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270
;;  UD chains for artificial uses
;;   reg 11 { d14(bb 0 insn -1) }
;;   reg 13 { d18(bb 0 insn -1) }
;;   reg 25 { d46(bb 0 insn -1) }
;;   reg 26 { d47(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 77
;;      reg 167 { d255(bb 3 insn 49) d254(bb 5 insn 92) }
;;   UD chains for insn luid 1 uid 78
;;      reg 24 { d41(bb 8 insn 77) }

( 8 )->[9]->( 10 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u64(11){ d14(bb 0 insn -1) }u65(13){ d18(bb 0 insn -1) }u66(25){ d46(bb 0 insn -1) }u67(26){ d47(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 162
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 162
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 183
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 162
;; live  gen 	 183
;; live  kill	 14 [lr]
;; rd  in  	(31)
3, 7, 10, 13, 14, 17, 18, 21, 41, 46, 47, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270
;; rd  gen 	(1)
269
;; rd  kill	(4)
19, 20, 21, 269
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(31)
3, 7, 10, 13, 14, 17, 18, 41, 46, 47, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270
;;  UD chains for artificial uses
;;   reg 11 { d14(bb 0 insn -1) }
;;   reg 13 { d18(bb 0 insn -1) }
;;   reg 25 { d46(bb 0 insn -1) }
;;   reg 26 { d47(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 80
;;      reg 162 { d250(bb 7 insn 71) }
;;   UD chains for insn luid 1 uid 81
;;      reg 13 { d18(bb 0 insn -1) }
;;      reg 183 { d269(bb 9 insn 80) }

( 9 2 8 )->[10]->( 1 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u71(11){ d14(bb 0 insn -1) }u72(13){ d18(bb 0 insn -1) }u73(25){ d46(bb 0 insn -1) }u74(26){ d47(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(33)
3, 7, 10, 13, 14, 17, 18, 21, 41, 45, 46, 47, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(33)
3, 7, 10, 13, 14, 17, 18, 21, 41, 45, 46, 47, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270
;;  UD chains for artificial uses
;;   reg 11 { d14(bb 0 insn -1) }
;;   reg 13 { d18(bb 0 insn -1) }
;;   reg 25 { d46(bb 0 insn -1) }
;;   reg 26 { d47(bb 0 insn -1) }

( 10 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u75(11){ d14(bb 0 insn -1) }u76(13){ d18(bb 0 insn -1) }u77(14){ d21(bb 0 insn -1) }u78(25){ d46(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(33)
3, 7, 10, 13, 14, 17, 18, 21, 41, 45, 46, 47, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(33)
3, 7, 10, 13, 14, 17, 18, 21, 41, 45, 46, 47, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270
;;  UD chains for artificial uses
;;   reg 11 { d14(bb 0 insn -1) }
;;   reg 13 { d18(bb 0 insn -1) }
;;   reg 14 { d21(bb 0 insn -1) }
;;   reg 25 { d46(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 47 to worklist
  Adding insn 93 to worklist
  Adding insn 57 to worklist
  Adding insn 63 to worklist
  Adding insn 75 to worklist
  Adding insn 78 to worklist
  Adding insn 81 to worklist
Finished finding needed instructions:
Processing use of (reg 13 sp) in insn 81:
Processing use of (reg 183 [ <variable>.start ]) in insn 81:
  Adding insn 80 to worklist
Processing use of (reg 162 [ armpmu.626 ]) in insn 80:
  Adding insn 71 to worklist
Processing use of (reg 184) in insn 71:
  Adding insn 70 to worklist
Processing use of (reg 176) in insn 70:
  Adding insn 44 to worklist
Processing use of (reg 24 cc) in insn 78:
  Adding insn 77 to worklist
Processing use of (reg 167 [ enabled ]) in insn 77:
  Adding insn 49 to worklist
  Adding insn 92 to worklist
Processing use of (reg 24 cc) in insn 75:
  Adding insn 74 to worklist
Processing use of (reg 168 [ idx ]) in insn 74:
  Adding insn 67 to worklist
  Adding insn 50 to worklist
Processing use of (reg 182 [ <variable>.num_events ]) in insn 74:
  Adding insn 73 to worklist
Processing use of (reg 162 [ armpmu.626 ]) in insn 73:
Processing use of (reg 167 [ enabled ]) in insn 50:
Processing use of (reg 168 [ idx ]) in insn 67:
Processing use of (reg 13 sp) in insn 63:
Processing use of (reg 0 r0) in insn 63:
  Adding insn 61 to worklist
Processing use of (reg 1 r1) in insn 63:
  Adding insn 62 to worklist
Processing use of (reg 180 [ <variable>.enable ]) in insn 63:
  Adding insn 60 to worklist
Processing use of (reg 162 [ armpmu.626 ]) in insn 60:
Processing use of (reg 168 [ idx ]) in insn 62:
Processing use of (reg 179) in insn 61:
  Adding insn 59 to worklist
Processing use of (reg 164 [ event ]) in insn 59:
  Adding insn 55 to worklist
Processing use of (reg 166 [ cpuc ]) in insn 55:
  Adding insn 43 to worklist
Processing use of (reg 168 [ idx ]) in insn 55:
Processing use of (reg 165 [ __ptr ]) in insn 43:
  Adding insn 36 to worklist
Processing use of (reg 175) in insn 43:
  Adding insn 42 to worklist
Processing use of (reg 171) in insn 42:
  Adding insn 38 to worklist
Processing use of (reg 174 [ <variable>.cpu ]) in insn 42:
  Adding insn 41 to worklist
Processing use of (reg 172) in insn 41:
  Adding insn 40 to worklist
Processing use of (reg 173) in insn 40:
  Adding insn 39 to worklist
Processing use of (reg 13 sp) in insn 39:
Processing use of (reg 170) in insn 36:
  Adding insn 35 to worklist
Processing use of (reg 24 cc) in insn 57:
  Adding insn 56 to worklist
Processing use of (reg 164 [ event ]) in insn 56:
Processing use of (reg 24 cc) in insn 47:
  Adding insn 46 to worklist
Processing use of (reg 177 [ armpmu ]) in insn 46:
  Adding insn 45 to worklist
Processing use of (reg 176) in insn 45:


armpmu_enable

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={4d,1u} r1={4d,1u} r2={3d} r3={3d} r11={1d,10u} r12={3d} r13={1d,13u,1d} r14={3d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={6d,4u} r25={1d,10u} r26={1d,9u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r162={1d,3u} r164={1d,2u} r165={1d,1u} r166={1d,1u} r167={2d,2u} r168={2d,4u} r170={1d,1u} r171={1d,1u} r172={1d,1u} r173={1d,1u} r174={1d,1u,1d} r175={1d,1u} r176={1d,2u} r177={1d,1u} r179={1d,1u} r180={1d,1u} r182={1d,1u} r183={1d,1u} r184={1d,1u} 
;;    total ref usage 349{271d,76u,2e} in 34{32 regular + 2 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249
0[0,4] 1[4,4] 2[8,3] 3[11,3] 11[14,1] 12[15,3] 13[18,1] 14[19,3] 15[22,2] 16[24,2] 17[26,2] 18[28,2] 19[30,2] 20[32,2] 21[34,2] 22[36,2] 23[38,2] 24[40,6] 25[46,1] 26[47,1] 27[48,2] 28[50,2] 29[52,2] 30[54,2] 31[56,2] 32[58,2] 33[60,2] 34[62,2] 35[64,2] 36[66,2] 37[68,2] 38[70,2] 39[72,2] 40[74,2] 41[76,2] 42[78,2] 43[80,2] 44[82,2] 45[84,2] 46[86,2] 47[88,2] 48[90,2] 49[92,2] 50[94,2] 51[96,2] 52[98,2] 53[100,2] 54[102,2] 55[104,2] 56[106,2] 57[108,2] 58[110,2] 59[112,2] 60[114,2] 61[116,2] 62[118,2] 63[120,2] 64[122,2] 65[124,2] 66[126,2] 67[128,2] 68[130,2] 69[132,2] 70[134,2] 71[136,2] 72[138,2] 73[140,2] 74[142,2] 75[144,2] 76[146,2] 77[148,2] 78[150,2] 79[152,2] 80[154,2] 81[156,2] 82[158,2] 83[160,2] 84[162,2] 85[164,2] 86[166,2] 87[168,2] 88[170,2] 89[172,2] 90[174,2] 91[176,2] 92[178,2] 93[180,2] 94[182,2] 95[184,2] 96[186,2] 97[188,2] 98[190,2] 99[192,2] 100[194,2] 101[196,2] 102[198,2] 103[200,2] 104[202,2] 105[204,2] 106[206,2] 107[208,2] 108[210,2] 109[212,2] 110[214,2] 111[216,2] 112[218,2] 113[220,2] 114[222,2] 115[224,2] 116[226,2] 117[228,2] 118[230,2] 119[232,2] 120[234,2] 121[236,2] 122[238,2] 123[240,2] 124[242,2] 125[244,2] 126[246,2] 127[248,2] 162[250,1] 164[251,1] 165[252,1] 166[253,1] 167[254,2] 168[256,2] 170[258,1] 171[259,1] 172[260,1] 173[261,1] 174[262,1] 175[263,1] 176[264,1] 177[265,1] 179[266,1] 180[267,1] 182[268,1] 183[269,1] 184[270,1] 
(note 30 0 33 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 165 166 170 171 172 173 174 175 176 177
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 165 166 170 171 172 173 174 175 176 177
;; live  kill	
;; rd  in  	(10)
3, 7, 10, 13, 14, 17, 18, 21, 46, 47
;; rd  gen 	(11)
45, 252, 253, 258, 259, 260, 261, 262, 263, 264, 265
;; rd  kill	(16)
40, 41, 42, 43, 44, 45, 252, 253, 258, 259, 260, 261, 262, 263, 264, 265

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 33 30 32 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 32 33 35 2 NOTE_INSN_FUNCTION_BEG)

(insn 35 32 36 2 arch/arm/kernel/perf_event.c:587 (set (reg/f:SI 170)
        (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 36 35 38 2 arch/arm/kernel/perf_event.c:587 (set (reg/v:SI 165 [ __ptr ])
        (asm_operands:SI ("") ("=r") 0 [
                (reg/f:SI 170)
            ]
             [
                (asm_input:SI ("0") 0)
            ] 8606498)) -1 (expr_list:REG_DEAD (reg/f:SI 170)
        (nil)))

(insn 38 36 39 2 arch/arm/kernel/perf_event.c:587 (set (reg/f:SI 171)
        (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10b1cf60 __per_cpu_offset>)) 167 {*arm_movsi_insn} (nil))

(insn 39 38 40 2 arch/arm/kernel/perf_event.c:587 (set (reg:SI 173)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 40 39 41 2 arch/arm/kernel/perf_event.c:587 (set (reg:SI 172)
        (and:SI (reg:SI 173)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 173)
        (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
                (const_int -8192 [0xffffffffffffe000]))
            (nil))))

(insn 41 40 42 2 arch/arm/kernel/perf_event.c:587 (set (reg:SI 174 [ <variable>.cpu ])
        (mem/s/j:SI (plus:SI (reg:SI 172)
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 172)
        (nil)))

(insn 42 41 43 2 arch/arm/kernel/perf_event.c:587 (set (reg:SI 175)
        (mem/s/j:SI (plus:SI (mult:SI (reg:SI 174 [ <variable>.cpu ])
                    (const_int 4 [0x4]))
                (reg/f:SI 171)) [0 __per_cpu_offset S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 174 [ <variable>.cpu ])
        (expr_list:REG_DEAD (reg/f:SI 171)
            (expr_list:REG_EQUAL (mem/s/j:SI (plus:SI (mult:SI (reg:SI 174 [ <variable>.cpu ])
                            (const_int 4 [0x4]))
                        (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10b1cf60 __per_cpu_offset>)) [0 __per_cpu_offset S4 A32])
                (nil)))))

(insn 43 42 44 2 arch/arm/kernel/perf_event.c:587 (set (reg/v/f:SI 166 [ cpuc ])
        (plus:SI (reg/v:SI 165 [ __ptr ])
            (reg:SI 175))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 175)
        (expr_list:REG_DEAD (reg/v:SI 165 [ __ptr ])
            (nil))))

(insn 44 43 45 2 arch/arm/kernel/perf_event.c:589 (set (reg/f:SI 176)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 45 44 46 2 arch/arm/kernel/perf_event.c:589 (set (reg/f:SI 177 [ armpmu ])
        (mem/f/c/i:SI (reg/f:SI 176) [0 armpmu+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 armpmu+0 S4 A32])
        (nil)))

(insn 46 45 47 2 arch/arm/kernel/perf_event.c:589 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 177 [ armpmu ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/f:SI 177 [ armpmu ])
        (nil)))

(jump_insn 47 46 48 2 arch/arm/kernel/perf_event.c:589 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 87)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 1014 [0x3f6])
            (nil))))
;; End of basic block 2 -> ( 10 3)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 166 176
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 166 176
;; rd  out 	(21)
3, 7, 10, 13, 14, 17, 18, 21, 45, 46, 47, 252, 253, 258, 259, 260, 261, 262, 263, 264, 265


;; Succ edge  10 [10.1%] 
;; Succ edge  3 [89.9%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u17(11){ }u18(13){ }u19(25){ }u20(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 166 176
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 176
;; lr  def 	 167 168 184
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 166 176
;; live  gen 	 167 168 184
;; live  kill	
;; rd  in  	(21)
3, 7, 10, 13, 14, 17, 18, 21, 45, 46, 47, 252, 253, 258, 259, 260, 261, 262, 263, 264, 265
;; rd  gen 	(3)
255, 256, 270
;; rd  kill	(5)
254, 255, 256, 257, 270

;; Pred edge  2 [89.9%]  (fallthru)
(note 48 47 49 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 49 48 50 3 arch/arm/kernel/perf_event.c:589 (set (reg/v:SI 167 [ enabled ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 50 49 70 3 arch/arm/kernel/perf_event.c:589 (set (reg/v:SI 168 [ idx ])
        (reg/v:SI 167 [ enabled ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 70 50 93 3 arch/arm/kernel/perf_event.c:592 discrim 1 (set (reg/f:SI 184)
        (reg/f:SI 176)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 176)
        (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
            (nil))))

(jump_insn 93 70 94 3 (set (pc)
        (label_ref 68)) -1 (nil))
;; End of basic block 3 -> ( 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 166 167 168 184
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 166 167 168 184
;; rd  out 	(24)
3, 7, 10, 13, 14, 17, 18, 21, 45, 46, 47, 252, 253, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 270


;; Succ edge  7 [100.0%] 

(barrier 94 93 72)

;; Start of basic block ( 7) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u23(11){ }u24(13){ }u25(25){ }u26(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162 166 167 168 184
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166 168
;; lr  def 	 24 [cc] 164
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162 166 167 168 184
;; live  gen 	 24 [cc] 164
;; live  kill	
;; rd  in  	(31)
3, 7, 10, 13, 14, 17, 18, 21, 42, 46, 47, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270
;; rd  gen 	(2)
44, 251
;; rd  kill	(7)
40, 41, 42, 43, 44, 45, 251

;; Pred edge  7 [97.1%] 
(code_label 72 94 53 4 56 "" [1 uses])

(note 53 72 55 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 55 53 56 4 arch/arm/kernel/perf_event.c:593 (set (reg/v/f:SI 164 [ event ])
        (mem/s/f/j:SI (plus:SI (mult:SI (reg/v:SI 168 [ idx ])
                    (const_int 4 [0x4]))
                (reg/v/f:SI 166 [ cpuc ])) [0 <variable>.events S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 56 55 57 4 arch/arm/kernel/perf_event.c:595 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 164 [ event ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 57 56 58 4 arch/arm/kernel/perf_event.c:595 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 65)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3017 [0xbc9])
            (nil))))
;; End of basic block 4 -> ( 6 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162 164 166 167 168 184
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162 164 166 167 168 184
;; rd  out 	(31)
3, 7, 10, 13, 14, 17, 18, 21, 44, 46, 47, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270


;; Succ edge  6 [30.2%] 
;; Succ edge  5 [69.8%]  (fallthru)

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u32(11){ }u33(13){ }u34(25){ }u35(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 162 164 166 168 184
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 162 164 168
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 167 179 180
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 162 164 166 168 184
;; live  gen 	 0 [r0] 1 [r1] 167 179 180
;; live  kill	 14 [lr]
;; rd  in  	(31)
3, 7, 10, 13, 14, 17, 18, 21, 44, 46, 47, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270
;; rd  gen 	(3)
254, 266, 267
;; rd  kill	(7)
19, 20, 21, 254, 255, 266, 267

;; Pred edge  4 [69.8%]  (fallthru)
(note 58 57 59 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 59 58 60 5 arch/arm/kernel/perf_event.c:598 (set (reg/f:SI 179)
        (plus:SI (reg/v/f:SI 164 [ event ])
            (const_int 200 [0xc8]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/v/f:SI 164 [ event ])
        (nil)))

(insn 60 59 61 5 arch/arm/kernel/perf_event.c:598 (set (reg/f:SI 180 [ <variable>.enable ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 162 [ armpmu.626 ])
                (const_int 12 [0xc])) [0 <variable>.enable+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 162 [ armpmu.626 ])
        (nil)))

(insn 61 60 62 5 arch/arm/kernel/perf_event.c:598 (set (reg:SI 0 r0)
        (reg/f:SI 179)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 179)
        (nil)))

(insn 62 61 63 5 arch/arm/kernel/perf_event.c:598 (set (reg:SI 1 r1)
        (reg/v:SI 168 [ idx ])) 167 {*arm_movsi_insn} (nil))

(call_insn 63 62 92 5 arch/arm/kernel/perf_event.c:598 (parallel [
            (call (mem:SI (reg/f:SI 180 [ <variable>.enable ]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 244 {*call_reg_armv5} (expr_list:REG_DEAD (reg/f:SI 180 [ <variable>.enable ])
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_DEAD (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 92 63 65 5 arch/arm/kernel/perf_event.c:599 (set (reg/v:SI 167 [ enabled ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 5 -> ( 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 166 167 168 184
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166 167 168 184
;; rd  out 	(29)
3, 7, 10, 13, 14, 17, 18, 44, 46, 47, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270


;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 4 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u44(11){ }u45(13){ }u46(25){ }u47(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 166 167 168 184
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 168
;; lr  def 	 168
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 166 167 168 184
;; live  gen 	 168
;; live  kill	
;; rd  in  	(31)
3, 7, 10, 13, 14, 17, 18, 21, 44, 46, 47, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270
;; rd  gen 	(1)
257
;; rd  kill	(2)
256, 257

;; Pred edge  4 [30.2%] 
;; Pred edge  5 [100.0%]  (fallthru)
(code_label 65 92 66 6 55 "" [1 uses])

(note 66 65 67 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 67 66 68 6 arch/arm/kernel/perf_event.c:592 (set (reg/v:SI 168 [ idx ])
        (plus:SI (reg/v:SI 168 [ idx ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))
;; End of basic block 6 -> ( 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 166 167 168 184
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 166 167 168 184
;; rd  out 	(30)
3, 7, 10, 13, 14, 17, 18, 21, 44, 46, 47, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270


;; Succ edge  7 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 6 3) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u49(11){ }u50(13){ }u51(25){ }u52(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 166 167 168 184
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 168 184
;; lr  def 	 24 [cc] 162 182
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 166 167 168 184
;; live  gen 	 24 [cc] 162 182
;; live  kill	
;; rd  in  	(32)
3, 7, 10, 13, 14, 17, 18, 21, 44, 45, 46, 47, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270
;; rd  gen 	(3)
42, 250, 268
;; rd  kill	(8)
40, 41, 42, 43, 44, 45, 250, 268

;; Pred edge  6 [100.0%]  (fallthru,dfs_back)
;; Pred edge  3 [100.0%] 
(code_label 68 67 69 7 54 "" [1 uses])

(note 69 68 71 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 71 69 73 7 arch/arm/kernel/perf_event.c:592 discrim 1 (set (reg/f:SI 162 [ armpmu.626 ])
        (mem/f/c/i:SI (reg/f:SI 184) [0 armpmu+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 armpmu+0 S4 A32])
        (nil)))

(insn 73 71 74 7 arch/arm/kernel/perf_event.c:592 (set (reg:SI 182 [ <variable>.num_events ])
        (mem/s/j:SI (plus:SI (reg/f:SI 162 [ armpmu.626 ])
                (const_int 56 [0x38])) [0 <variable>.num_events+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 74 73 75 7 arch/arm/kernel/perf_event.c:592 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 168 [ idx ])
            (reg:SI 182 [ <variable>.num_events ]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 182 [ <variable>.num_events ])
        (nil)))

(jump_insn 75 74 76 7 arch/arm/kernel/perf_event.c:592 (set (pc)
        (if_then_else (le (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 72)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9706 [0x25ea])
            (nil))))
;; End of basic block 7 -> ( 4 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162 166 167 168 184
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162 166 167 168 184
;; rd  out 	(31)
3, 7, 10, 13, 14, 17, 18, 21, 42, 46, 47, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270


;; Succ edge  4 [97.1%] 
;; Succ edge  8 [2.9%]  (fallthru,loop_exit)

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u58(11){ }u59(13){ }u60(25){ }u61(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162 167
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162 167
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(31)
3, 7, 10, 13, 14, 17, 18, 21, 42, 46, 47, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270
;; rd  gen 	(1)
41
;; rd  kill	(6)
40, 41, 42, 43, 44, 45

;; Pred edge  7 [2.9%]  (fallthru,loop_exit)
(note 76 75 77 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 77 76 78 8 arch/arm/kernel/perf_event.c:602 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 167 [ enabled ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 167 [ enabled ])
        (nil)))

(jump_insn 78 77 79 8 arch/arm/kernel/perf_event.c:602 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 87)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6102 [0x17d6])
            (nil))))
;; End of basic block 8 -> ( 9 10)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162
;; rd  out 	(31)
3, 7, 10, 13, 14, 17, 18, 21, 41, 46, 47, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270


;; Succ edge  9 [39.0%]  (fallthru)
;; Succ edge  10 [61.0%] 

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u64(11){ }u65(13){ }u66(25){ }u67(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 162
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 162
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 183
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 162
;; live  gen 	 183
;; live  kill	 14 [lr]
;; rd  in  	(31)
3, 7, 10, 13, 14, 17, 18, 21, 41, 46, 47, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270
;; rd  gen 	(1)
269
;; rd  kill	(4)
19, 20, 21, 269

;; Pred edge  8 [39.0%]  (fallthru)
(note 79 78 80 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 80 79 81 9 arch/arm/kernel/perf_event.c:603 (set (reg/f:SI 183 [ <variable>.start ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 162 [ armpmu.626 ])
                (const_int 32 [0x20])) [0 <variable>.start+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 162 [ armpmu.626 ])
        (nil)))

(call_insn 81 80 87 9 arch/arm/kernel/perf_event.c:603 (parallel [
            (call (mem:SI (reg/f:SI 183 [ <variable>.start ]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 244 {*call_reg_armv5} (expr_list:REG_DEAD (reg/f:SI 183 [ <variable>.start ])
        (nil))
    (nil))
;; End of basic block 9 -> ( 10)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(31)
3, 7, 10, 13, 14, 17, 18, 41, 46, 47, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270


;; Succ edge  10 [100.0%]  (fallthru)

;; Start of basic block ( 9 2 8) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u71(11){ }u72(13){ }u73(25){ }u74(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(33)
3, 7, 10, 13, 14, 17, 18, 21, 41, 45, 46, 47, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  9 [100.0%]  (fallthru)
;; Pred edge  2 [10.1%] 
;; Pred edge  8 [61.0%] 
(code_label 87 81 90 10 57 "" [2 uses])

(note 90 87 0 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 10 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(33)
3, 7, 10, 13, 14, 17, 18, 21, 41, 45, 46, 47, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function armpmu_disable (armpmu_disable)[0:1327]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 8 (  1.6)


armpmu_disable

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r3={2d} r11={1d,4u} r12={2d} r13={1d,5u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={2d,1u} r25={1d,4u} r26={1d,3u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,2u} r135={1d,1u} r136={1d,1u} 
;;    total ref usage 153{131d,22u,0e} in 6{5 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127
0[0,2] 1[2,2] 2[4,2] 3[6,2] 11[8,1] 12[9,2] 13[11,1] 14[12,2] 15[14,1] 16[15,1] 17[16,1] 18[17,1] 19[18,1] 20[19,1] 21[20,1] 22[21,1] 23[22,1] 24[23,2] 25[25,1] 26[26,1] 27[27,1] 28[28,1] 29[29,1] 30[30,1] 31[31,1] 32[32,1] 33[33,1] 34[34,1] 35[35,1] 36[36,1] 37[37,1] 38[38,1] 39[39,1] 40[40,1] 41[41,1] 42[42,1] 43[43,1] 44[44,1] 45[45,1] 46[46,1] 47[47,1] 48[48,1] 49[49,1] 50[50,1] 51[51,1] 52[52,1] 53[53,1] 54[54,1] 55[55,1] 56[56,1] 57[57,1] 58[58,1] 59[59,1] 60[60,1] 61[61,1] 62[62,1] 63[63,1] 64[64,1] 65[65,1] 66[66,1] 67[67,1] 68[68,1] 69[69,1] 70[70,1] 71[71,1] 72[72,1] 73[73,1] 74[74,1] 75[75,1] 76[76,1] 77[77,1] 78[78,1] 79[79,1] 80[80,1] 81[81,1] 82[82,1] 83[83,1] 84[84,1] 85[85,1] 86[86,1] 87[87,1] 88[88,1] 89[89,1] 90[90,1] 91[91,1] 92[92,1] 93[93,1] 94[94,1] 95[95,1] 96[96,1] 97[97,1] 98[98,1] 99[99,1] 100[100,1] 101[101,1] 102[102,1] 103[103,1] 104[104,1] 105[105,1] 106[106,1] 107[107,1] 108[108,1] 109[109,1] 110[110,1] 111[111,1] 112[112,1] 113[113,1] 114[114,1] 115[115,1] 116[116,1] 117[117,1] 118[118,1] 119[119,1] 120[120,1] 121[121,1] 122[122,1] 123[123,1] 124[124,1] 125[125,1] 126[126,1] 127[127,1] 133[128,1] 135[129,1] 136[130,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d1(0){ }d3(1){ }d5(2){ }d7(3){ }d8(11){ }d10(12){ }d11(13){ }d13(14){ }d25(25){ }d26(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
1, 3, 5, 7, 8, 10, 11, 13, 25, 26
;; rd  kill	(16)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 25, 26
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
1, 3, 5, 7, 8, 10, 11, 13, 25, 26

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d8(bb 0 insn -1) }u1(13){ d11(bb 0 insn -1) }u2(25){ d25(bb 0 insn -1) }u3(26){ d26(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 133 135
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 133 135
;; live  kill	
;; rd  in  	(10)
1, 3, 5, 7, 8, 10, 11, 13, 25, 26
;; rd  gen 	(3)
24, 128, 129
;; rd  kill	(4)
23, 24, 128, 129
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
1, 3, 5, 7, 8, 10, 11, 13, 24, 25, 26, 128, 129
;;  UD chains for artificial uses
;;   reg 11 { d8(bb 0 insn -1) }
;;   reg 13 { d11(bb 0 insn -1) }
;;   reg 25 { d25(bb 0 insn -1) }
;;   reg 26 { d26(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 7
;;      reg 135 { d129(bb 2 insn 6) }
;;   UD chains for insn luid 2 uid 8
;;      reg 133 { d128(bb 2 insn 7) }
;;   UD chains for insn luid 3 uid 9
;;      reg 24 { d24(bb 2 insn 8) }

( 2 )->[3]->( 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u7(11){ d8(bb 0 insn -1) }u8(13){ d11(bb 0 insn -1) }u9(25){ d25(bb 0 insn -1) }u10(26){ d26(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 136
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; live  gen 	 136
;; live  kill	 14 [lr]
;; rd  in  	(13)
1, 3, 5, 7, 8, 10, 11, 13, 24, 25, 26, 128, 129
;; rd  gen 	(1)
130
;; rd  kill	(3)
12, 13, 130
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(13)
1, 3, 5, 7, 8, 10, 11, 24, 25, 26, 128, 129, 130
;;  UD chains for artificial uses
;;   reg 11 { d8(bb 0 insn -1) }
;;   reg 13 { d11(bb 0 insn -1) }
;;   reg 25 { d25(bb 0 insn -1) }
;;   reg 26 { d26(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 11
;;      reg 133 { d128(bb 2 insn 7) }
;;   UD chains for insn luid 1 uid 12
;;      reg 13 { d11(bb 0 insn -1) }
;;      reg 136 { d130(bb 3 insn 11) }

( 3 2 )->[4]->( 1 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u14(11){ d8(bb 0 insn -1) }u15(13){ d11(bb 0 insn -1) }u16(25){ d25(bb 0 insn -1) }u17(26){ d26(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(14)
1, 3, 5, 7, 8, 10, 11, 13, 24, 25, 26, 128, 129, 130
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(14)
1, 3, 5, 7, 8, 10, 11, 13, 24, 25, 26, 128, 129, 130
;;  UD chains for artificial uses
;;   reg 11 { d8(bb 0 insn -1) }
;;   reg 13 { d11(bb 0 insn -1) }
;;   reg 25 { d25(bb 0 insn -1) }
;;   reg 26 { d26(bb 0 insn -1) }

( 4 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u18(11){ d8(bb 0 insn -1) }u19(13){ d11(bb 0 insn -1) }u20(14){ d13(bb 0 insn -1) }u21(25){ d25(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(14)
1, 3, 5, 7, 8, 10, 11, 13, 24, 25, 26, 128, 129, 130
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(14)
1, 3, 5, 7, 8, 10, 11, 13, 24, 25, 26, 128, 129, 130
;;  UD chains for artificial uses
;;   reg 11 { d8(bb 0 insn -1) }
;;   reg 13 { d11(bb 0 insn -1) }
;;   reg 14 { d13(bb 0 insn -1) }
;;   reg 25 { d25(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 9 to worklist
  Adding insn 12 to worklist
Finished finding needed instructions:
Processing use of (reg 13 sp) in insn 12:
Processing use of (reg 136 [ <variable>.stop ]) in insn 12:
  Adding insn 11 to worklist
Processing use of (reg 133 [ armpmu.367 ]) in insn 11:
  Adding insn 7 to worklist
Processing use of (reg 135) in insn 7:
  Adding insn 6 to worklist
Processing use of (reg 24 cc) in insn 9:
  Adding insn 8 to worklist
Processing use of (reg 133 [ armpmu.367 ]) in insn 8:


armpmu_disable

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r3={2d} r11={1d,4u} r12={2d} r13={1d,5u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={2d,1u} r25={1d,4u} r26={1d,3u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,2u} r135={1d,1u} r136={1d,1u} 
;;    total ref usage 153{131d,22u,0e} in 6{5 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127
0[0,2] 1[2,2] 2[4,2] 3[6,2] 11[8,1] 12[9,2] 13[11,1] 14[12,2] 15[14,1] 16[15,1] 17[16,1] 18[17,1] 19[18,1] 20[19,1] 21[20,1] 22[21,1] 23[22,1] 24[23,2] 25[25,1] 26[26,1] 27[27,1] 28[28,1] 29[29,1] 30[30,1] 31[31,1] 32[32,1] 33[33,1] 34[34,1] 35[35,1] 36[36,1] 37[37,1] 38[38,1] 39[39,1] 40[40,1] 41[41,1] 42[42,1] 43[43,1] 44[44,1] 45[45,1] 46[46,1] 47[47,1] 48[48,1] 49[49,1] 50[50,1] 51[51,1] 52[52,1] 53[53,1] 54[54,1] 55[55,1] 56[56,1] 57[57,1] 58[58,1] 59[59,1] 60[60,1] 61[61,1] 62[62,1] 63[63,1] 64[64,1] 65[65,1] 66[66,1] 67[67,1] 68[68,1] 69[69,1] 70[70,1] 71[71,1] 72[72,1] 73[73,1] 74[74,1] 75[75,1] 76[76,1] 77[77,1] 78[78,1] 79[79,1] 80[80,1] 81[81,1] 82[82,1] 83[83,1] 84[84,1] 85[85,1] 86[86,1] 87[87,1] 88[88,1] 89[89,1] 90[90,1] 91[91,1] 92[92,1] 93[93,1] 94[94,1] 95[95,1] 96[96,1] 97[97,1] 98[98,1] 99[99,1] 100[100,1] 101[101,1] 102[102,1] 103[103,1] 104[104,1] 105[105,1] 106[106,1] 107[107,1] 108[108,1] 109[109,1] 110[110,1] 111[111,1] 112[112,1] 113[113,1] 114[114,1] 115[115,1] 116[116,1] 117[117,1] 118[118,1] 119[119,1] 120[120,1] 121[121,1] 122[122,1] 123[123,1] 124[124,1] 125[125,1] 126[126,1] 127[127,1] 133[128,1] 135[129,1] 136[130,1] 
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 133 135
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 133 135
;; live  kill	
;; rd  in  	(10)
1, 3, 5, 7, 8, 10, 11, 13, 25, 26
;; rd  gen 	(3)
24, 128, 129
;; rd  kill	(4)
23, 24, 128, 129

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 3 7 2 arch/arm/kernel/perf_event.c:608 (set (reg/f:SI 135)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 7 6 8 2 arch/arm/kernel/perf_event.c:608 (set (reg/f:SI 133 [ armpmu.367 ])
        (mem/f/c/i:SI (reg/f:SI 135) [0 armpmu+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 135)
        (expr_list:REG_EQUAL (mem/f/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 armpmu+0 S4 A32])
            (nil))))

(insn 8 7 9 2 arch/arm/kernel/perf_event.c:608 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 133 [ armpmu.367 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 9 8 10 2 arch/arm/kernel/perf_event.c:608 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 18)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2165 [0x875])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
1, 3, 5, 7, 8, 10, 11, 13, 24, 25, 26, 128, 129


;; Succ edge  3 [78.3%]  (fallthru)
;; Succ edge  4 [21.6%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u7(11){ }u8(13){ }u9(25){ }u10(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 136
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; live  gen 	 136
;; live  kill	 14 [lr]
;; rd  in  	(13)
1, 3, 5, 7, 8, 10, 11, 13, 24, 25, 26, 128, 129
;; rd  gen 	(1)
130
;; rd  kill	(3)
12, 13, 130

;; Pred edge  2 [78.3%]  (fallthru)
(note 10 9 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 11 10 12 3 arch/arm/kernel/perf_event.c:609 (set (reg/f:SI 136 [ <variable>.stop ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 133 [ armpmu.367 ])
                (const_int 36 [0x24])) [0 <variable>.stop+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 133 [ armpmu.367 ])
        (nil)))

(call_insn 12 11 18 3 arch/arm/kernel/perf_event.c:609 (parallel [
            (call (mem:SI (reg/f:SI 136 [ <variable>.stop ]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 244 {*call_reg_armv5} (expr_list:REG_DEAD (reg/f:SI 136 [ <variable>.stop ])
        (nil))
    (nil))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(13)
1, 3, 5, 7, 8, 10, 11, 24, 25, 26, 128, 129, 130


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 3 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u14(11){ }u15(13){ }u16(25){ }u17(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(14)
1, 3, 5, 7, 8, 10, 11, 13, 24, 25, 26, 128, 129, 130
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  3 [100.0%]  (fallthru)
;; Pred edge  2 [21.6%] 
(code_label 18 12 21 4 62 "" [1 uses])

(note 21 18 0 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 4 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(14)
1, 3, 5, 7, 8, 10, 11, 13, 24, 25, 26, 128, 129, 130


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function callchain_trace (callchain_trace)[0:1361]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 7 count 10 (  1.7)


callchain_trace

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 24[cc]
;;  ref usage 	r0={2d,3u} r1={1d,1u} r2={1d} r3={1d} r11={1d,5u} r12={1d} r13={1d,5u} r14={1d,1u} r24={3d,2u} r25={1d,5u} r26={1d,4u} r133={1d,5u,1d} r135={1d,1u} r137={1d,1u} r138={1d,4u} r139={1d,2u} r140={1d,1u} r141={1d,1u} r143={1d,1u} r144={1d,1u} 
;;    total ref usage 67{23d,43u,1e} in 18{18 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 6, 8, 9, 10, 11
0[0,2] 1[2,1] 2[3,1] 3[4,1] 11[5,1] 12[6,1] 13[7,1] 14[8,1] 24[9,3] 25[12,1] 26[13,1] 133[14,1] 135[15,1] 137[16,1] 138[17,1] 139[18,1] 140[19,1] 141[20,1] 143[21,1] 144[22,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d1(0){ }d2(1){ }d3(2){ }d4(3){ }d5(11){ }d6(12){ }d7(13){ }d8(14){ }d12(25){ }d13(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
1, 2, 3, 4, 5, 6, 7, 8, 12, 13
;; rd  kill	(11)
0, 1, 2, 3, 4, 5, 6, 7, 8, 12, 13
;; lr  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
1, 2, 3, 4, 5, 6, 7, 8, 12, 13

( 0 )->[2]->( 5 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d5(bb 0 insn -1) }u1(13){ d7(bb 0 insn -1) }u2(25){ d12(bb 0 insn -1) }u3(26){ d13(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 133 135 137 138
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 133 135 137 138
;; live  kill	
;; rd  in  	(10)
1, 2, 3, 4, 5, 6, 7, 8, 12, 13
;; rd  gen 	(5)
11, 14, 15, 16, 17
;; rd  kill	(7)
9, 10, 11, 14, 15, 16, 17
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 135 138
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 135 138
;; rd  out 	(15)
1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17
;;  UD chains for artificial uses
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 25 { d12(bb 0 insn -1) }
;;   reg 26 { d13(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d1(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 3
;;      reg 1 { d2(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 8
;;      reg 137 { d16(bb 2 insn 2) }
;;   UD chains for insn luid 3 uid 9
;;      reg 138 { d17(bb 2 insn 3) }
;;   UD chains for insn luid 4 uid 10
;;      reg 133 { d14(bb 2 insn 9) }
;;   UD chains for insn luid 5 uid 11
;;      reg 24 { d11(bb 2 insn 10) }

( 2 )->[3]->( 5 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u10(11){ d5(bb 0 insn -1) }u11(13){ d7(bb 0 insn -1) }u12(25){ d12(bb 0 insn -1) }u13(26){ d13(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 135 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 135 138
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(15)
1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17
;; rd  gen 	(1)
10
;; rd  kill	(3)
9, 10, 11
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 135 138
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 135 138
;; rd  out 	(15)
1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17
;;  UD chains for artificial uses
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 25 { d12(bb 0 insn -1) }
;;   reg 26 { d13(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 14
;;      reg 133 { d14(bb 2 insn 9) }
;;   UD chains for insn luid 1 uid 15
;;      reg 24 { d10(bb 3 insn 14) }

( 3 )->[4]->( 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u16(11){ d5(bb 0 insn -1) }u17(13){ d7(bb 0 insn -1) }u18(25){ d12(bb 0 insn -1) }u19(26){ d13(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 135 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 138
;; lr  def 	 24 [cc] 139 140 141 143 144
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 135 138
;; live  gen 	 139 140 141 143 144
;; live  kill	 24 [cc]
;; rd  in  	(15)
1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17
;; rd  gen 	(5)
18, 19, 20, 21, 22
;; rd  kill	(8)
9, 10, 11, 18, 19, 20, 21, 22
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(19)
1, 2, 3, 4, 5, 6, 7, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22
;;  UD chains for artificial uses
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 25 { d12(bb 0 insn -1) }
;;   reg 26 { d13(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 22
;;      reg 133 { d14(bb 2 insn 9) }
;;   UD chains for insn luid 1 uid 23
;;      reg 139 { d18(bb 4 insn 22) }
;;   UD chains for insn luid 2 uid 24
;;      reg 138 { d17(bb 2 insn 3) }
;;      reg 140 { d19(bb 4 insn 23) }
;;   UD chains for insn luid 3 uid 54
;;      reg 135 { d15(bb 2 insn 8) }
;;      reg 138 { d17(bb 2 insn 3) }
;;      reg 139 { d18(bb 4 insn 22) }
;;   UD chains for insn luid 4 uid 55
;;      reg 133 { d14(bb 2 insn 9) }
;;      reg 141 { d20(bb 4 insn 24) }
;;   UD chains for insn luid 6 uid 28
;;      reg 133 { d14(bb 2 insn 9) }
;;      reg 143 { d21(bb 4 insn 27) }
;;   eq_note reg 133 { }
;;   UD chains for insn luid 7 uid 29
;;      reg 138 { d17(bb 2 insn 3) }
;;      reg 144 { d22(bb 4 insn 28) }

( 4 2 3 )->[5]->( 1 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u34(11){ d5(bb 0 insn -1) }u35(13){ d7(bb 0 insn -1) }u36(25){ d12(bb 0 insn -1) }u37(26){ d13(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(21)
1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22
;; rd  gen 	(1)
0
;; rd  kill	(2)
0, 1
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(21)
0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22
;;  UD chains for artificial uses
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 25 { d12(bb 0 insn -1) }
;;   reg 26 { d13(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 42
;;      reg 0 { d0(bb 5 insn 36) }

( 5 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u39(0){ d0(bb 5 insn 36) }u40(11){ d5(bb 0 insn -1) }u41(13){ d7(bb 0 insn -1) }u42(14){ d8(bb 0 insn -1) }u43(25){ d12(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(21)
0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(21)
0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22
;;  UD chains for artificial uses
;;   reg 0 { d0(bb 5 insn 36) }
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 14 { d8(bb 0 insn -1) }
;;   reg 25 { d12(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 11 to worklist
  Adding insn 15 to worklist
  Adding insn 29 to worklist
  Adding insn 55 to worklist
  Adding insn 54 to worklist
  Adding insn 42 to worklist
Finished finding needed instructions:
  Adding insn 36 to worklist
Processing use of (reg 0 r0) in insn 42:
Processing use of (reg 135 [ D.26217 ]) in insn 54:
  Adding insn 8 to worklist
Processing use of (reg 138 [ data ]) in insn 54:
  Adding insn 3 to worklist
Processing use of (reg 139) in insn 54:
  Adding insn 22 to worklist
Processing use of (subreg (reg 133 [ D.26372 ]) 0) in insn 22:
  Adding insn 9 to worklist
Processing use of (reg 138 [ data ]) in insn 9:
Processing use of (reg 1 r1) in insn 3:
Processing use of (reg 137 [ fr ]) in insn 8:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (subreg (reg 133 [ D.26372 ]) 4) in insn 55:
Processing use of (reg 141) in insn 55:
  Adding insn 24 to worklist
Processing use of (reg 138 [ data ]) in insn 24:
Processing use of (reg 140) in insn 24:
  Adding insn 23 to worklist
Processing use of (reg 139) in insn 23:
Processing use of (reg 138 [ data ]) in insn 29:
Processing use of (reg 144) in insn 29:
  Adding insn 28 to worklist
Processing use of (reg 133 [ D.26372 ]) in insn 28:
Processing use of (reg 143) in insn 28:
  Adding insn 27 to worklist
Processing use of (reg 24 cc) in insn 15:
  Adding insn 14 to worklist
Processing use of (subreg (reg 133 [ D.26372 ]) 0) in insn 14:
Processing use of (reg 24 cc) in insn 11:
  Adding insn 10 to worklist
Processing use of (subreg (reg 133 [ D.26372 ]) 4) in insn 10:


callchain_trace

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 24[cc]
;;  ref usage 	r0={2d,3u} r1={1d,1u} r2={1d} r3={1d} r11={1d,5u} r12={1d} r13={1d,5u} r14={1d,1u} r24={3d,2u} r25={1d,5u} r26={1d,4u} r133={1d,5u,1d} r135={1d,1u} r137={1d,1u} r138={1d,4u} r139={1d,2u} r140={1d,1u} r141={1d,1u} r143={1d,1u} r144={1d,1u} 
;;    total ref usage 67{23d,43u,1e} in 18{18 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 6, 8, 9, 10, 11
0[0,2] 1[2,1] 2[3,1] 3[4,1] 11[5,1] 12[6,1] 13[7,1] 14[8,1] 24[9,3] 25[12,1] 26[13,1] 133[14,1] 135[15,1] 137[16,1] 138[17,1] 139[18,1] 140[19,1] 141[20,1] 143[21,1] 144[22,1] 
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 133 135 137 138
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 133 135 137 138
;; live  kill	
;; rd  in  	(10)
1, 2, 3, 4, 5, 6, 7, 8, 12, 13
;; rd  gen 	(5)
11, 14, 15, 16, 17
;; rd  kill	(7)
9, 10, 11, 14, 15, 16, 17

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 5 3 2 arch/arm/kernel/perf_event.c:765 (set (reg/v/f:SI 137 [ fr ])
        (reg:SI 0 r0 [ fr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ fr ])
        (nil)))

(insn 3 2 4 2 arch/arm/kernel/perf_event.c:765 (set (reg/v/f:SI 138 [ data ])
        (reg:SI 1 r1 [ data ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ data ])
        (nil)))

(note 4 3 8 2 NOTE_INSN_FUNCTION_BEG)

(insn 8 4 9 2 arch/arm/kernel/perf_event.c:767 (set (reg:SI 135 [ D.26217 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 137 [ fr ])
                (const_int 12 [0xc])) [0 <variable>.pc+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 137 [ fr ])
        (nil)))

(insn 9 8 10 2 include/linux/perf_event.h:1096 (set (reg:DI 133 [ D.26372 ])
        (mem/s/j:DI (reg/v/f:SI 138 [ data ]) [0 <variable>.nr+0 S8 A64])) 163 {*arm_movdi} (nil))

(insn 10 9 11 2 include/linux/perf_event.h:1096 (set (reg:CC 24 cc)
        (compare:CC (subreg:SI (reg:DI 133 [ D.26372 ]) 4)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 11 10 45 2 include/linux/perf_event.h:1096 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 30)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 2 -> ( 5 3)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 135 138
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 135 138
;; rd  out 	(15)
1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17


;; Succ edge  5 [50.0%] 
;; Succ edge  3 [50.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u10(11){ }u11(13){ }u12(25){ }u13(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 135 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 135 138
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(15)
1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17
;; rd  gen 	(1)
10
;; rd  kill	(3)
9, 10, 11

;; Pred edge  2 [50.0%]  (fallthru)
(note 45 11 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 14 45 15 3 include/linux/perf_event.h:1096 (set (reg:CC 24 cc)
        (compare:CC (subreg:SI (reg:DI 133 [ D.26372 ]) 0)
            (const_int 254 [0xfe]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 15 14 46 3 include/linux/perf_event.h:1096 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 30)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 3 -> ( 5 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 135 138
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 135 138
;; rd  out 	(15)
1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17


;; Succ edge  5 [50.0%] 
;; Succ edge  4 [50.0%]  (fallthru)

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u16(11){ }u17(13){ }u18(25){ }u19(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 135 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 138
;; lr  def 	 24 [cc] 139 140 141 143 144
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 135 138
;; live  gen 	 139 140 141 143 144
;; live  kill	 24 [cc]
;; rd  in  	(15)
1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17
;; rd  gen 	(5)
18, 19, 20, 21, 22
;; rd  kill	(8)
9, 10, 11, 18, 19, 20, 21, 22

;; Pred edge  3 [50.0%]  (fallthru)
(note 46 15 22 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 22 46 23 4 include/linux/perf_event.h:1097 (set (reg:SI 139)
        (plus:SI (subreg:SI (reg:DI 133 [ D.26372 ]) 0)
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 23 22 24 4 include/linux/perf_event.h:1097 (set (reg:SI 140)
        (ashift:SI (reg:SI 139)
            (const_int 3 [0x3]))) 117 {*arm_shiftsi3} (nil))

(insn 24 23 54 4 include/linux/perf_event.h:1097 (set (reg/f:SI 141)
        (plus:SI (reg/v/f:SI 138 [ data ])
            (reg:SI 140))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 140)
        (nil)))

(insn 54 24 55 4 include/linux/perf_event.h:1097 (set (mem/s/j:SI (plus:SI (mult:SI (reg:SI 139)
                    (const_int 8 [0x8]))
                (reg/v/f:SI 138 [ data ])) [0 <variable>.ip S4 A64])
        (reg:SI 135 [ D.26217 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 139)
        (expr_list:REG_DEAD (reg:SI 135 [ D.26217 ])
            (nil))))

(insn 55 54 27 4 include/linux/perf_event.h:1097 (set (mem/s/j:SI (plus:SI (reg/f:SI 141)
                (const_int 4 [0x4])) [0 <variable>.ip S4 A32])
        (subreg:SI (reg:DI 133 [ D.26372 ]) 4)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 141)
        (nil)))

(insn 27 55 28 4 include/linux/perf_event.h:1097 (set (reg:DI 143)
        (const_int 1 [0x1])) 163 {*arm_movdi} (nil))

(insn 28 27 29 4 include/linux/perf_event.h:1097 (parallel [
            (set (reg:DI 144)
                (plus:DI (reg:DI 133 [ D.26372 ])
                    (reg:DI 143)))
            (clobber (reg:CC 24 cc))
        ]) 1 {*arm_adddi3} (expr_list:REG_DEAD (reg:DI 143)
        (expr_list:REG_DEAD (reg:DI 133 [ D.26372 ])
            (expr_list:REG_UNUSED (reg:CC 24 cc)
                (expr_list:REG_EQUAL (plus:DI (reg:DI 133 [ D.26372 ])
                        (const_int 1 [0x1]))
                    (nil))))))

(insn 29 28 30 4 include/linux/perf_event.h:1097 (set (mem/s/j:DI (reg/v/f:SI 138 [ data ]) [0 <variable>.nr+0 S8 A64])
        (reg:DI 144)) 163 {*arm_movdi} (expr_list:REG_DEAD (reg:DI 144)
        (expr_list:REG_DEAD (reg/v/f:SI 138 [ data ])
            (nil))))
;; End of basic block 4 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(19)
1, 2, 3, 4, 5, 6, 7, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 2 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u34(11){ }u35(13){ }u36(25){ }u37(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(21)
1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22
;; rd  gen 	(1)
0
;; rd  kill	(2)
0, 1

;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  2 [50.0%] 
;; Pred edge  3 [50.0%] 
(code_label 30 29 31 5 66 "" [2 uses])

(note 31 30 36 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 36 31 42 5 arch/arm/kernel/perf_event.c:769 (set (reg/i:SI 0 r0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 42 36 0 5 arch/arm/kernel/perf_event.c:769 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 5 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(21)
0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function armpmu_reset (armpmu_reset)[0:1357] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 7 count 10 (  1.7)


armpmu_reset

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 24[cc]
;;  ref usage 	r0={4d,3u} r1={3d,1u} r2={3d,1u} r3={2d} r11={1d,5u} r12={2d} r13={1d,6u} r14={1d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={3d,2u} r25={1d,5u} r26={1d,4u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r134={1d,2u} r135={1d,2u} r137={1d,1u} 
;;    total ref usage 168{135d,33u,0e} in 13{12 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131
0[0,4] 1[4,3] 2[7,3] 3[10,2] 11[12,1] 12[13,2] 13[15,1] 14[16,1] 15[17,1] 16[18,1] 17[19,1] 18[20,1] 19[21,1] 20[22,1] 21[23,1] 22[24,1] 23[25,1] 24[26,3] 25[29,1] 26[30,1] 27[31,1] 28[32,1] 29[33,1] 30[34,1] 31[35,1] 32[36,1] 33[37,1] 34[38,1] 35[39,1] 36[40,1] 37[41,1] 38[42,1] 39[43,1] 40[44,1] 41[45,1] 42[46,1] 43[47,1] 44[48,1] 45[49,1] 46[50,1] 47[51,1] 48[52,1] 49[53,1] 50[54,1] 51[55,1] 52[56,1] 53[57,1] 54[58,1] 55[59,1] 56[60,1] 57[61,1] 58[62,1] 59[63,1] 60[64,1] 61[65,1] 62[66,1] 63[67,1] 64[68,1] 65[69,1] 66[70,1] 67[71,1] 68[72,1] 69[73,1] 70[74,1] 71[75,1] 72[76,1] 73[77,1] 74[78,1] 75[79,1] 76[80,1] 77[81,1] 78[82,1] 79[83,1] 80[84,1] 81[85,1] 82[86,1] 83[87,1] 84[88,1] 85[89,1] 86[90,1] 87[91,1] 88[92,1] 89[93,1] 90[94,1] 91[95,1] 92[96,1] 93[97,1] 94[98,1] 95[99,1] 96[100,1] 97[101,1] 98[102,1] 99[103,1] 100[104,1] 101[105,1] 102[106,1] 103[107,1] 104[108,1] 105[109,1] 106[110,1] 107[111,1] 108[112,1] 109[113,1] 110[114,1] 111[115,1] 112[116,1] 113[117,1] 114[118,1] 115[119,1] 116[120,1] 117[121,1] 118[122,1] 119[123,1] 120[124,1] 121[125,1] 122[126,1] 123[127,1] 124[128,1] 125[129,1] 126[130,1] 127[131,1] 134[132,1] 135[133,1] 137[134,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d3(0){ }d6(1){ }d9(2){ }d11(3){ }d12(11){ }d14(12){ }d15(13){ }d16(14){ }d29(25){ }d30(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
3, 6, 9, 11, 12, 14, 15, 16, 29, 30
;; rd  kill	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 29, 30
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
3, 6, 9, 11, 12, 14, 15, 16, 29, 30

( 0 )->[2]->( 3 5 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d12(bb 0 insn -1) }u1(13){ d15(bb 0 insn -1) }u2(25){ d29(bb 0 insn -1) }u3(26){ d30(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 135 137
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 135 137
;; live  kill	
;; rd  in  	(10)
3, 6, 9, 11, 12, 14, 15, 16, 29, 30
;; rd  gen 	(3)
28, 133, 134
;; rd  kill	(5)
26, 27, 28, 133, 134
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; rd  out 	(13)
3, 6, 9, 11, 12, 14, 15, 16, 28, 29, 30, 133, 134
;;  UD chains for artificial uses
;;   reg 11 { d12(bb 0 insn -1) }
;;   reg 13 { d15(bb 0 insn -1) }
;;   reg 25 { d29(bb 0 insn -1) }
;;   reg 26 { d30(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 6
;;      reg 137 { d134(bb 2 insn 5) }
;;   UD chains for insn luid 2 uid 7
;;      reg 135 { d133(bb 2 insn 6) }
;;   UD chains for insn luid 3 uid 8
;;      reg 24 { d28(bb 2 insn 7) }

( 2 )->[3]->( 4 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u7(11){ d12(bb 0 insn -1) }u8(13){ d15(bb 0 insn -1) }u9(25){ d29(bb 0 insn -1) }u10(26){ d30(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc] 134
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  gen 	 24 [cc] 134
;; live  kill	
;; rd  in  	(13)
3, 6, 9, 11, 12, 14, 15, 16, 28, 29, 30, 133, 134
;; rd  gen 	(2)
27, 132
;; rd  kill	(4)
26, 27, 28, 132
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; rd  out 	(14)
3, 6, 9, 11, 12, 14, 15, 16, 27, 29, 30, 132, 133, 134
;;  UD chains for artificial uses
;;   reg 11 { d12(bb 0 insn -1) }
;;   reg 13 { d15(bb 0 insn -1) }
;;   reg 25 { d29(bb 0 insn -1) }
;;   reg 26 { d30(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 10
;;      reg 135 { d133(bb 2 insn 6) }
;;   UD chains for insn luid 1 uid 11
;;      reg 134 { d132(bb 3 insn 10) }
;;   UD chains for insn luid 2 uid 12
;;      reg 24 { d27(bb 3 insn 11) }

( 3 )->[4]->( 1 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u14(11){ d12(bb 0 insn -1) }u15(13){ d15(bb 0 insn -1) }u16(25){ d29(bb 0 insn -1) }u17(26){ d30(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	
;; rd  in  	(14)
3, 6, 9, 11, 12, 14, 15, 16, 27, 29, 30, 132, 133, 134
;; rd  gen 	(1)
1
;; rd  kill	(4)
0, 1, 2, 3
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(14)
1, 6, 9, 11, 12, 14, 15, 16, 27, 29, 30, 132, 133, 134
;;  UD chains for artificial uses
;;   reg 11 { d12(bb 0 insn -1) }
;;   reg 13 { d15(bb 0 insn -1) }
;;   reg 25 { d29(bb 0 insn -1) }
;;   reg 26 { d30(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 14
;;      reg 134 { d132(bb 3 insn 10) }
;;   UD chains for insn luid 3 uid 17
;;      reg 13 { d15(bb 0 insn -1) }
;;      reg 0 { d2(bb 4 insn 14) }
;;      reg 1 { d5(bb 4 insn 15) }
;;      reg 2 { d8(bb 4 insn 16) }

( 2 3 )->[5]->( 1 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u23(11){ d12(bb 0 insn -1) }u24(13){ d15(bb 0 insn -1) }u25(25){ d29(bb 0 insn -1) }u26(26){ d30(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(15)
3, 6, 9, 11, 12, 14, 15, 16, 27, 28, 29, 30, 132, 133, 134
;; rd  gen 	(1)
0
;; rd  kill	(4)
0, 1, 2, 3
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(15)
0, 6, 9, 11, 12, 14, 15, 16, 27, 28, 29, 30, 132, 133, 134
;;  UD chains for artificial uses
;;   reg 11 { d12(bb 0 insn -1) }
;;   reg 13 { d15(bb 0 insn -1) }
;;   reg 25 { d29(bb 0 insn -1) }
;;   reg 26 { d30(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 34
;;      reg 0 { d0(bb 5 insn 28) }

( 4 5 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u28(0){ d1(bb 4 insn 17) d0(bb 5 insn 28) }u29(11){ d12(bb 0 insn -1) }u30(13){ d15(bb 0 insn -1) }u31(14){ d16(bb 0 insn -1) }u32(25){ d29(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(16)
0, 1, 6, 9, 11, 12, 14, 15, 16, 27, 28, 29, 30, 132, 133, 134
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(16)
0, 1, 6, 9, 11, 12, 14, 15, 16, 27, 28, 29, 30, 132, 133, 134
;;  UD chains for artificial uses
;;   reg 0 { d1(bb 4 insn 17) d0(bb 5 insn 28) }
;;   reg 11 { d12(bb 0 insn -1) }
;;   reg 13 { d15(bb 0 insn -1) }
;;   reg 14 { d16(bb 0 insn -1) }
;;   reg 25 { d29(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 8 to worklist
  Adding insn 12 to worklist
  Adding insn 17 to worklist
  Adding insn 34 to worklist
Finished finding needed instructions:
  Adding insn 28 to worklist
Processing use of (reg 0 r0) in insn 34:
Processing use of (reg 13 sp) in insn 17:
Processing use of (reg 0 r0) in insn 17:
  Adding insn 14 to worklist
Processing use of (reg 1 r1) in insn 17:
  Adding insn 15 to worklist
Processing use of (reg 2 r2) in insn 17:
  Adding insn 16 to worklist
Processing use of (reg 134 [ D.26120 ]) in insn 14:
  Adding insn 10 to worklist
Processing use of (reg 135 [ armpmu.394 ]) in insn 10:
  Adding insn 6 to worklist
Processing use of (reg 137) in insn 6:
  Adding insn 5 to worklist
Processing use of (reg 24 cc) in insn 12:
  Adding insn 11 to worklist
Processing use of (reg 134 [ D.26120 ]) in insn 11:
Processing use of (reg 24 cc) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 135 [ armpmu.394 ]) in insn 7:


armpmu_reset

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 24[cc]
;;  ref usage 	r0={4d,3u} r1={3d,1u} r2={3d,1u} r3={2d} r11={1d,5u} r12={2d} r13={1d,6u} r14={1d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={3d,2u} r25={1d,5u} r26={1d,4u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r134={1d,2u} r135={1d,2u} r137={1d,1u} 
;;    total ref usage 168{135d,33u,0e} in 13{12 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131
0[0,4] 1[4,3] 2[7,3] 3[10,2] 11[12,1] 12[13,2] 13[15,1] 14[16,1] 15[17,1] 16[18,1] 17[19,1] 18[20,1] 19[21,1] 20[22,1] 21[23,1] 22[24,1] 23[25,1] 24[26,3] 25[29,1] 26[30,1] 27[31,1] 28[32,1] 29[33,1] 30[34,1] 31[35,1] 32[36,1] 33[37,1] 34[38,1] 35[39,1] 36[40,1] 37[41,1] 38[42,1] 39[43,1] 40[44,1] 41[45,1] 42[46,1] 43[47,1] 44[48,1] 45[49,1] 46[50,1] 47[51,1] 48[52,1] 49[53,1] 50[54,1] 51[55,1] 52[56,1] 53[57,1] 54[58,1] 55[59,1] 56[60,1] 57[61,1] 58[62,1] 59[63,1] 60[64,1] 61[65,1] 62[66,1] 63[67,1] 64[68,1] 65[69,1] 66[70,1] 67[71,1] 68[72,1] 69[73,1] 70[74,1] 71[75,1] 72[76,1] 73[77,1] 74[78,1] 75[79,1] 76[80,1] 77[81,1] 78[82,1] 79[83,1] 80[84,1] 81[85,1] 82[86,1] 83[87,1] 84[88,1] 85[89,1] 86[90,1] 87[91,1] 88[92,1] 89[93,1] 90[94,1] 91[95,1] 92[96,1] 93[97,1] 94[98,1] 95[99,1] 96[100,1] 97[101,1] 98[102,1] 99[103,1] 100[104,1] 101[105,1] 102[106,1] 103[107,1] 104[108,1] 105[109,1] 106[110,1] 107[111,1] 108[112,1] 109[113,1] 110[114,1] 111[115,1] 112[116,1] 113[117,1] 114[118,1] 115[119,1] 116[120,1] 117[121,1] 118[122,1] 119[123,1] 120[124,1] 121[125,1] 122[126,1] 123[127,1] 124[128,1] 125[129,1] 126[130,1] 127[131,1] 134[132,1] 135[133,1] 137[134,1] 
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 135 137
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 135 137
;; live  kill	
;; rd  in  	(10)
3, 6, 9, 11, 12, 14, 15, 16, 29, 30
;; rd  gen 	(3)
28, 133, 134
;; rd  kill	(5)
26, 27, 28, 133, 134

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)

(insn 5 2 6 2 arch/arm/kernel/perf_event.c:635 (set (reg/f:SI 137)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 6 5 7 2 arch/arm/kernel/perf_event.c:635 (set (reg/f:SI 135 [ armpmu.394 ])
        (mem/f/c/i:SI (reg/f:SI 137) [0 armpmu+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 137)
        (expr_list:REG_EQUAL (mem/f/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 armpmu+0 S4 A32])
            (nil))))

(insn 7 6 8 2 arch/arm/kernel/perf_event.c:635 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 135 [ armpmu.394 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 8 7 9 2 arch/arm/kernel/perf_event.c:635 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 20)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 1014 [0x3f6])
            (nil))))
;; End of basic block 2 -> ( 3 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; rd  out 	(13)
3, 6, 9, 11, 12, 14, 15, 16, 28, 29, 30, 133, 134


;; Succ edge  3 [89.9%]  (fallthru)
;; Succ edge  5 [10.1%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u7(11){ }u8(13){ }u9(25){ }u10(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc] 134
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  gen 	 24 [cc] 134
;; live  kill	
;; rd  in  	(13)
3, 6, 9, 11, 12, 14, 15, 16, 28, 29, 30, 133, 134
;; rd  gen 	(2)
27, 132
;; rd  kill	(4)
26, 27, 28, 132

;; Pred edge  2 [89.9%]  (fallthru)
(note 9 8 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 10 9 11 3 arch/arm/kernel/perf_event.c:635 discrim 1 (set (reg/f:SI 134 [ D.26120 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 135 [ armpmu.394 ])
                (const_int 40 [0x28])) [0 <variable>.reset+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 135 [ armpmu.394 ])
        (nil)))

(insn 11 10 12 3 arch/arm/kernel/perf_event.c:635 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 134 [ D.26120 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 12 11 13 3 arch/arm/kernel/perf_event.c:635 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 20)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2165 [0x875])
            (nil))))
;; End of basic block 3 -> ( 4 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; rd  out 	(14)
3, 6, 9, 11, 12, 14, 15, 16, 27, 29, 30, 132, 133, 134


;; Succ edge  4 [78.3%]  (fallthru)
;; Succ edge  5 [21.6%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u14(11){ }u15(13){ }u16(25){ }u17(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	
;; rd  in  	(14)
3, 6, 9, 11, 12, 14, 15, 16, 27, 29, 30, 132, 133, 134
;; rd  gen 	(1)
1
;; rd  kill	(4)
0, 1, 2, 3

;; Pred edge  3 [78.3%]  (fallthru)
(note 13 12 14 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 14 13 15 4 arch/arm/kernel/perf_event.c:636 (set (reg:SI 0 r0)
        (reg/f:SI 134 [ D.26120 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 134 [ D.26120 ])
        (nil)))

(insn 15 14 16 4 arch/arm/kernel/perf_event.c:636 (set (reg:SI 1 r1)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 16 15 17 4 arch/arm/kernel/perf_event.c:636 (set (reg:SI 2 r2)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(call_insn/j 17 16 18 4 arch/arm/kernel/perf_event.c:636 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("on_each_cpu") [flags 0x41] <function_decl 0x10b3a780 on_each_cpu>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))
;; End of basic block 4 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(14)
1, 6, 9, 11, 12, 14, 15, 16, 27, 29, 30, 132, 133, 134


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 18 17 20)

;; Start of basic block ( 2 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u23(11){ }u24(13){ }u25(25){ }u26(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(15)
3, 6, 9, 11, 12, 14, 15, 16, 27, 28, 29, 30, 132, 133, 134
;; rd  gen 	(1)
0
;; rd  kill	(4)
0, 1, 2, 3

;; Pred edge  2 [10.1%] 
;; Pred edge  3 [21.6%] 
(code_label 20 18 21 5 71 "" [2 uses])

(note 21 20 28 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 28 21 34 5 arch/arm/kernel/perf_event.c:638 (set (reg/i:SI 0 r0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 34 28 0 5 arch/arm/kernel/perf_event.c:638 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 5 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(15)
0, 6, 9, 11, 12, 14, 15, 16, 27, 28, 29, 30, 132, 133, 134


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function armv7pmu_write_counter (armv7pmu_write_counter)[0:1338]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 12 n_edges 16 count 20 (  1.7)
df_worklist_dataflow_doublequeue:n_basic_blocks 12 n_edges 16 count 22 (  1.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 12 n_edges 16 count 22 (  1.8)


armv7pmu_write_counter

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 24[cc]
;;  ref usage 	r0={5d,3u} r1={5d,3u} r2={5d,2u} r3={3d} r11={1d,11u} r12={3d} r13={1d,15u,2d} r14={1d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={6d,5u} r25={1d,11u} r26={1d,10u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r136={1d,2u} r137={1d,7u} r138={1d,2u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r148={1d,1u} r149={1d,1u} 
;;    total ref usage 347{264d,81u,2e} in 35{33 regular + 2 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251
0[0,5] 1[5,5] 2[10,5] 3[15,3] 11[18,1] 12[19,3] 13[22,1] 14[23,1] 15[24,2] 16[26,2] 17[28,2] 18[30,2] 19[32,2] 20[34,2] 21[36,2] 22[38,2] 23[40,2] 24[42,6] 25[48,1] 26[49,1] 27[50,2] 28[52,2] 29[54,2] 30[56,2] 31[58,2] 32[60,2] 33[62,2] 34[64,2] 35[66,2] 36[68,2] 37[70,2] 38[72,2] 39[74,2] 40[76,2] 41[78,2] 42[80,2] 43[82,2] 44[84,2] 45[86,2] 46[88,2] 47[90,2] 48[92,2] 49[94,2] 50[96,2] 51[98,2] 52[100,2] 53[102,2] 54[104,2] 55[106,2] 56[108,2] 57[110,2] 58[112,2] 59[114,2] 60[116,2] 61[118,2] 62[120,2] 63[122,2] 64[124,2] 65[126,2] 66[128,2] 67[130,2] 68[132,2] 69[134,2] 70[136,2] 71[138,2] 72[140,2] 73[142,2] 74[144,2] 75[146,2] 76[148,2] 77[150,2] 78[152,2] 79[154,2] 80[156,2] 81[158,2] 82[160,2] 83[162,2] 84[164,2] 85[166,2] 86[168,2] 87[170,2] 88[172,2] 89[174,2] 90[176,2] 91[178,2] 92[180,2] 93[182,2] 94[184,2] 95[186,2] 96[188,2] 97[190,2] 98[192,2] 99[194,2] 100[196,2] 101[198,2] 102[200,2] 103[202,2] 104[204,2] 105[206,2] 106[208,2] 107[210,2] 108[212,2] 109[214,2] 110[216,2] 111[218,2] 112[220,2] 113[222,2] 114[224,2] 115[226,2] 116[228,2] 117[230,2] 118[232,2] 119[234,2] 120[236,2] 121[238,2] 122[240,2] 123[242,2] 124[244,2] 125[246,2] 126[248,2] 127[250,2] 136[252,1] 137[253,1] 138[254,1] 139[255,1] 140[256,1] 141[257,1] 143[258,1] 144[259,1] 145[260,1] 146[261,1] 148[262,1] 149[263,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d4(0){ }d9(1){ }d14(2){ }d17(3){ }d18(11){ }d21(12){ }d22(13){ }d23(14){ }d48(25){ }d49(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
4, 9, 14, 17, 18, 21, 22, 23, 48, 49
;; rd  kill	(26)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 48, 49
;; lr  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
4, 9, 14, 17, 18, 21, 22, 23, 48, 49

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d18(bb 0 insn -1) }u1(13){ d22(bb 0 insn -1) }u2(25){ d48(bb 0 insn -1) }u3(26){ d49(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 137 138
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 137 138
;; live  kill	
;; rd  in  	(10)
4, 9, 14, 17, 18, 21, 22, 23, 48, 49
;; rd  gen 	(3)
47, 253, 254
;; rd  kill	(8)
42, 43, 44, 45, 46, 47, 253, 254
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 137 138
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 137 138
;; rd  out 	(13)
4, 9, 14, 17, 18, 21, 22, 23, 47, 48, 49, 253, 254
;;  UD chains for artificial uses
;;   reg 11 { d18(bb 0 insn -1) }
;;   reg 13 { d22(bb 0 insn -1) }
;;   reg 25 { d48(bb 0 insn -1) }
;;   reg 26 { d49(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d4(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 3
;;      reg 1 { d9(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 7
;;      reg 137 { d253(bb 2 insn 2) }
;;   UD chains for insn luid 3 uid 8
;;      reg 24 { d47(bb 2 insn 7) }

( 2 )->[3]->( 11 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(11){ d18(bb 0 insn -1) }u9(13){ d22(bb 0 insn -1) }u10(25){ d48(bb 0 insn -1) }u11(26){ d49(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
4, 9, 14, 17, 18, 21, 22, 23, 47, 48, 49, 253, 254
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
4, 9, 14, 17, 18, 21, 22, 23, 47, 48, 49, 253, 254
;;  UD chains for artificial uses
;;   reg 11 { d18(bb 0 insn -1) }
;;   reg 13 { d22(bb 0 insn -1) }
;;   reg 25 { d48(bb 0 insn -1) }
;;   reg 26 { d49(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 10
;;      reg 138 { d254(bb 2 insn 3) }

( 2 )->[4]->( 5 10 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u13(11){ d18(bb 0 insn -1) }u14(13){ d22(bb 0 insn -1) }u15(25){ d48(bb 0 insn -1) }u16(26){ d49(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 137 138
;; lr  use 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 137 138
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
4, 9, 14, 17, 18, 21, 22, 23, 47, 48, 49, 253, 254
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138
;; rd  out 	(13)
4, 9, 14, 17, 18, 21, 22, 23, 47, 48, 49, 253, 254
;;  UD chains for artificial uses
;;   reg 11 { d18(bb 0 insn -1) }
;;   reg 13 { d22(bb 0 insn -1) }
;;   reg 25 { d48(bb 0 insn -1) }
;;   reg 26 { d49(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 16
;;      reg 24 { d47(bb 2 insn 7) }

( 4 )->[5]->( 6 10 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u18(11){ d18(bb 0 insn -1) }u19(13){ d22(bb 0 insn -1) }u20(25){ d48(bb 0 insn -1) }u21(26){ d49(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc] 136 139 140 141
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138
;; live  gen 	 24 [cc] 136 139 140 141
;; live  kill	
;; rd  in  	(13)
4, 9, 14, 17, 18, 21, 22, 23, 47, 48, 49, 253, 254
;; rd  gen 	(5)
46, 252, 255, 256, 257
;; rd  kill	(10)
42, 43, 44, 45, 46, 47, 252, 255, 256, 257
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137 138
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137 138
;; rd  out 	(17)
4, 9, 14, 17, 18, 21, 22, 23, 46, 48, 49, 252, 253, 254, 255, 256, 257
;;  UD chains for artificial uses
;;   reg 11 { d18(bb 0 insn -1) }
;;   reg 13 { d22(bb 0 insn -1) }
;;   reg 25 { d48(bb 0 insn -1) }
;;   reg 26 { d49(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 19
;;      reg 139 { d255(bb 5 insn 18) }
;;   UD chains for insn luid 2 uid 20
;;      reg 140 { d256(bb 5 insn 19) }
;;   UD chains for insn luid 3 uid 21
;;      reg 141 { d257(bb 5 insn 20) }
;;   UD chains for insn luid 4 uid 22
;;      reg 136 { d252(bb 5 insn 21) }
;;      reg 137 { d253(bb 2 insn 2) }
;;   UD chains for insn luid 5 uid 23
;;      reg 24 { d46(bb 5 insn 22) }

( 5 )->[6]->( 8 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u28(11){ d18(bb 0 insn -1) }u29(13){ d22(bb 0 insn -1) }u30(25){ d48(bb 0 insn -1) }u31(26){ d49(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137 138
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(17)
4, 9, 14, 17, 18, 21, 22, 23, 46, 48, 49, 252, 253, 254, 255, 256, 257
;; rd  gen 	(1)
43
;; rd  kill	(6)
42, 43, 44, 45, 46, 47
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137 138
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137 138
;; rd  out 	(17)
4, 9, 14, 17, 18, 21, 22, 23, 43, 48, 49, 252, 253, 254, 255, 256, 257
;;  UD chains for artificial uses
;;   reg 11 { d18(bb 0 insn -1) }
;;   reg 13 { d22(bb 0 insn -1) }
;;   reg 25 { d48(bb 0 insn -1) }
;;   reg 26 { d49(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 26
;;      reg 137 { d253(bb 2 insn 2) }
;;   UD chains for insn luid 1 uid 27
;;      reg 24 { d43(bb 6 insn 26) }

( 6 )->[7]->( 8 9 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u34(11){ d18(bb 0 insn -1) }u35(13){ d22(bb 0 insn -1) }u36(25){ d48(bb 0 insn -1) }u37(26){ d49(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137 138
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(17)
4, 9, 14, 17, 18, 21, 22, 23, 43, 48, 49, 252, 253, 254, 255, 256, 257
;; rd  gen 	(1)
42
;; rd  kill	(6)
42, 43, 44, 45, 46, 47
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138
;; rd  out 	(17)
4, 9, 14, 17, 18, 21, 22, 23, 42, 48, 49, 252, 253, 254, 255, 256, 257
;;  UD chains for artificial uses
;;   reg 11 { d18(bb 0 insn -1) }
;;   reg 13 { d22(bb 0 insn -1) }
;;   reg 25 { d48(bb 0 insn -1) }
;;   reg 26 { d49(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 29
;;      reg 136 { d252(bb 5 insn 21) }
;;      reg 137 { d253(bb 2 insn 2) }
;;   UD chains for insn luid 1 uid 30
;;      reg 24 { d42(bb 7 insn 29) }

( 6 7 )->[8]->( 1 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u41(11){ d18(bb 0 insn -1) }u42(13){ d22(bb 0 insn -1) }u43(25){ d48(bb 0 insn -1) }u44(26){ d49(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 143 144
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 143 144
;; live  kill	
;; rd  in  	(18)
4, 9, 14, 17, 18, 21, 22, 23, 42, 43, 48, 49, 252, 253, 254, 255, 256, 257
;; rd  gen 	(3)
3, 258, 259
;; rd  kill	(7)
0, 1, 2, 3, 4, 258, 259
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(20)
3, 9, 14, 17, 18, 21, 22, 23, 42, 43, 48, 49, 252, 253, 254, 255, 256, 257, 258, 259
;;  UD chains for artificial uses
;;   reg 11 { d18(bb 0 insn -1) }
;;   reg 13 { d22(bb 0 insn -1) }
;;   reg 25 { d48(bb 0 insn -1) }
;;   reg 26 { d49(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 35
;;      reg 13 { d22(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 36
;;      reg 144 { d259(bb 8 insn 35) }
;;   eq_note reg 13 { }
;;   UD chains for insn luid 3 uid 38
;;      reg 143 { d258(bb 8 insn 36) }
;;   UD chains for insn luid 4 uid 39
;;      reg 137 { d253(bb 2 insn 2) }
;;   UD chains for insn luid 5 uid 40
;;      reg 13 { d22(bb 0 insn -1) }
;;      reg 0 { d1(bb 8 insn 37) }
;;      reg 1 { d8(bb 8 insn 38) }
;;      reg 2 { d13(bb 8 insn 39) }

( 7 )->[9]->( 11 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u54(11){ d18(bb 0 insn -1) }u55(13){ d22(bb 0 insn -1) }u56(25){ d48(bb 0 insn -1) }u57(26){ d49(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138
;; lr  def 	 145 146
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138
;; live  gen 	 145 146
;; live  kill	
;; rd  in  	(17)
4, 9, 14, 17, 18, 21, 22, 23, 42, 48, 49, 252, 253, 254, 255, 256, 257
;; rd  gen 	(2)
260, 261
;; rd  kill	(2)
260, 261
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(19)
4, 9, 14, 17, 18, 21, 22, 23, 42, 48, 49, 252, 253, 254, 255, 256, 257, 260, 261
;;  UD chains for artificial uses
;;   reg 11 { d18(bb 0 insn -1) }
;;   reg 13 { d22(bb 0 insn -1) }
;;   reg 25 { d48(bb 0 insn -1) }
;;   reg 26 { d49(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 44
;;      reg 137 { d253(bb 2 insn 2) }
;;   UD chains for insn luid 1 uid 45
;;      reg 145 { d260(bb 9 insn 44) }
;;   UD chains for insn luid 2 uid 46
;;      reg 146 { d261(bb 9 insn 45) }
;;   UD chains for insn luid 4 uid 48
;;      reg 138 { d254(bb 2 insn 3) }

( 5 4 )->[10]->( 1 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u62(11){ d18(bb 0 insn -1) }u63(13){ d22(bb 0 insn -1) }u64(25){ d48(bb 0 insn -1) }u65(26){ d49(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 148 149
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 148 149
;; live  kill	
;; rd  in  	(18)
4, 9, 14, 17, 18, 21, 22, 23, 46, 47, 48, 49, 252, 253, 254, 255, 256, 257
;; rd  gen 	(3)
2, 262, 263
;; rd  kill	(7)
0, 1, 2, 3, 4, 262, 263
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(20)
2, 9, 14, 17, 18, 21, 22, 23, 46, 47, 48, 49, 252, 253, 254, 255, 256, 257, 262, 263
;;  UD chains for artificial uses
;;   reg 11 { d18(bb 0 insn -1) }
;;   reg 13 { d22(bb 0 insn -1) }
;;   reg 25 { d48(bb 0 insn -1) }
;;   reg 26 { d49(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 55
;;      reg 13 { d22(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 56
;;      reg 149 { d263(bb 10 insn 55) }
;;   eq_note reg 13 { }
;;   UD chains for insn luid 3 uid 58
;;      reg 148 { d262(bb 10 insn 56) }
;;   UD chains for insn luid 4 uid 59
;;      reg 137 { d253(bb 2 insn 2) }
;;   UD chains for insn luid 5 uid 60
;;      reg 13 { d22(bb 0 insn -1) }
;;      reg 0 { d0(bb 10 insn 57) }
;;      reg 1 { d6(bb 10 insn 58) }
;;      reg 2 { d11(bb 10 insn 59) }

( 3 9 )->[11]->( 1 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u75(11){ d18(bb 0 insn -1) }u76(13){ d22(bb 0 insn -1) }u77(25){ d48(bb 0 insn -1) }u78(26){ d49(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(20)
4, 9, 14, 17, 18, 21, 22, 23, 42, 47, 48, 49, 252, 253, 254, 255, 256, 257, 260, 261
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(20)
4, 9, 14, 17, 18, 21, 22, 23, 42, 47, 48, 49, 252, 253, 254, 255, 256, 257, 260, 261
;;  UD chains for artificial uses
;;   reg 11 { d18(bb 0 insn -1) }
;;   reg 13 { d22(bb 0 insn -1) }
;;   reg 25 { d48(bb 0 insn -1) }
;;   reg 26 { d49(bb 0 insn -1) }

( 10 8 11 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u79(11){ d18(bb 0 insn -1) }u80(13){ d22(bb 0 insn -1) }u81(14){ d23(bb 0 insn -1) }u82(25){ d48(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(28)
2, 3, 4, 9, 14, 17, 18, 21, 22, 23, 42, 43, 46, 47, 48, 49, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(28)
2, 3, 4, 9, 14, 17, 18, 21, 22, 23, 42, 43, 46, 47, 48, 49, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263
;;  UD chains for artificial uses
;;   reg 11 { d18(bb 0 insn -1) }
;;   reg 13 { d22(bb 0 insn -1) }
;;   reg 14 { d23(bb 0 insn -1) }
;;   reg 25 { d48(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 8 to worklist
  Adding insn 71 to worklist
  Adding insn 10 to worklist
  Adding insn 16 to worklist
  Adding insn 23 to worklist
  Adding insn 27 to worklist
  Adding insn 30 to worklist
  Adding insn 40 to worklist
  Adding insn 73 to worklist
  Adding insn 48 to worklist
  Adding insn 47 to worklist
  Adding insn 46 to worklist
  Adding insn 60 to worklist
Finished finding needed instructions:
Processing use of (reg 13 sp) in insn 60:
Processing use of (reg 0 r0) in insn 60:
  Adding insn 57 to worklist
Processing use of (reg 1 r1) in insn 60:
  Adding insn 58 to worklist
Processing use of (reg 2 r2) in insn 60:
  Adding insn 59 to worklist
Processing use of (reg 137 [ idx ]) in insn 59:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 148) in insn 58:
  Adding insn 56 to worklist
Processing use of (reg 149) in insn 56:
  Adding insn 55 to worklist
Processing use of (reg 13 sp) in insn 55:
Processing use of (reg 146) in insn 46:
  Adding insn 45 to worklist
Processing use of (reg 145) in insn 45:
  Adding insn 44 to worklist
Processing use of (reg 137 [ idx ]) in insn 44:
Processing use of (reg 138 [ value ]) in insn 48:
  Adding insn 3 to worklist
Processing use of (reg 1 r1) in insn 3:
Processing use of (reg 13 sp) in insn 40:
Processing use of (reg 0 r0) in insn 40:
  Adding insn 37 to worklist
Processing use of (reg 1 r1) in insn 40:
  Adding insn 38 to worklist
Processing use of (reg 2 r2) in insn 40:
  Adding insn 39 to worklist
Processing use of (reg 137 [ idx ]) in insn 39:
Processing use of (reg 143) in insn 38:
  Adding insn 36 to worklist
Processing use of (reg 144) in insn 36:
  Adding insn 35 to worklist
Processing use of (reg 13 sp) in insn 35:
Processing use of (reg 24 cc) in insn 30:
  Adding insn 29 to worklist
Processing use of (reg 136 [ D.25836 ]) in insn 29:
  Adding insn 21 to worklist
Processing use of (reg 137 [ idx ]) in insn 29:
Processing use of (reg 141 [ <variable>.num_events ]) in insn 21:
  Adding insn 20 to worklist
Processing use of (reg 140 [ armpmu ]) in insn 20:
  Adding insn 19 to worklist
Processing use of (reg 139) in insn 19:
  Adding insn 18 to worklist
Processing use of (reg 24 cc) in insn 27:
  Adding insn 26 to worklist
Processing use of (reg 137 [ idx ]) in insn 26:
Processing use of (reg 24 cc) in insn 23:
  Adding insn 22 to worklist
Processing use of (reg 136 [ D.25836 ]) in insn 22:
Processing use of (reg 137 [ idx ]) in insn 22:
Processing use of (reg 24 cc) in insn 16:
  Adding insn 7 to worklist
Processing use of (reg 137 [ idx ]) in insn 7:
Processing use of (reg 138 [ value ]) in insn 10:
Processing use of (reg 24 cc) in insn 8:


armv7pmu_write_counter

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 24[cc]
;;  ref usage 	r0={5d,3u} r1={5d,3u} r2={5d,2u} r3={3d} r11={1d,11u} r12={3d} r13={1d,15u,2d} r14={1d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={6d,5u} r25={1d,11u} r26={1d,10u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r136={1d,2u} r137={1d,7u} r138={1d,2u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r148={1d,1u} r149={1d,1u} 
;;    total ref usage 347{264d,81u,2e} in 35{33 regular + 2 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251
0[0,5] 1[5,5] 2[10,5] 3[15,3] 11[18,1] 12[19,3] 13[22,1] 14[23,1] 15[24,2] 16[26,2] 17[28,2] 18[30,2] 19[32,2] 20[34,2] 21[36,2] 22[38,2] 23[40,2] 24[42,6] 25[48,1] 26[49,1] 27[50,2] 28[52,2] 29[54,2] 30[56,2] 31[58,2] 32[60,2] 33[62,2] 34[64,2] 35[66,2] 36[68,2] 37[70,2] 38[72,2] 39[74,2] 40[76,2] 41[78,2] 42[80,2] 43[82,2] 44[84,2] 45[86,2] 46[88,2] 47[90,2] 48[92,2] 49[94,2] 50[96,2] 51[98,2] 52[100,2] 53[102,2] 54[104,2] 55[106,2] 56[108,2] 57[110,2] 58[112,2] 59[114,2] 60[116,2] 61[118,2] 62[120,2] 63[122,2] 64[124,2] 65[126,2] 66[128,2] 67[130,2] 68[132,2] 69[134,2] 70[136,2] 71[138,2] 72[140,2] 73[142,2] 74[144,2] 75[146,2] 76[148,2] 77[150,2] 78[152,2] 79[154,2] 80[156,2] 81[158,2] 82[160,2] 83[162,2] 84[164,2] 85[166,2] 86[168,2] 87[170,2] 88[172,2] 89[174,2] 90[176,2] 91[178,2] 92[180,2] 93[182,2] 94[184,2] 95[186,2] 96[188,2] 97[190,2] 98[192,2] 99[194,2] 100[196,2] 101[198,2] 102[200,2] 103[202,2] 104[204,2] 105[206,2] 106[208,2] 107[210,2] 108[212,2] 109[214,2] 110[216,2] 111[218,2] 112[220,2] 113[222,2] 114[224,2] 115[226,2] 116[228,2] 117[230,2] 118[232,2] 119[234,2] 120[236,2] 121[238,2] 122[240,2] 123[242,2] 124[244,2] 125[246,2] 126[248,2] 127[250,2] 136[252,1] 137[253,1] 138[254,1] 139[255,1] 140[256,1] 141[257,1] 143[258,1] 144[259,1] 145[260,1] 146[261,1] 148[262,1] 149[263,1] 
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 137 138
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 137 138
;; live  kill	
;; rd  in  	(10)
4, 9, 14, 17, 18, 21, 22, 23, 48, 49
;; rd  gen 	(3)
47, 253, 254
;; rd  kill	(8)
42, 43, 44, 45, 46, 47, 253, 254

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 5 3 2 arch/arm/kernel/perf_event_v7.c:831 (set (reg/v:SI 137 [ idx ])
        (reg:SI 0 r0 [ idx ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ idx ])
        (nil)))

(insn 3 2 4 2 arch/arm/kernel/perf_event_v7.c:831 (set (reg/v:SI 138 [ value ])
        (reg:SI 1 r1 [ value ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ value ])
        (nil)))

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 8 2 arch/arm/kernel/perf_event_v7.c:832 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 137 [ idx ])
            (const_int 1 [0x1]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 8 7 9 2 arch/arm/kernel/perf_event_v7.c:832 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 13)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 8009 [0x1f49])
        (nil)))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 137 138
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 137 138
;; rd  out 	(13)
4, 9, 14, 17, 18, 21, 22, 23, 47, 48, 49, 253, 254


;; Succ edge  3 [19.9%]  (fallthru)
;; Succ edge  4 [80.1%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(11){ }u9(13){ }u10(25){ }u11(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
4, 9, 14, 17, 18, 21, 22, 23, 47, 48, 49, 253, 254
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  2 [19.9%]  (fallthru)
(note 9 8 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 10 9 71 3 arch/arm/kernel/perf_event_v7.c:833 (asm_operands/v ("mcr p15, 0, %0, c9, c13, 0") ("") 0 [
            (reg/v:SI 138 [ value ])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8912595) -1 (expr_list:REG_DEAD (reg/v:SI 138 [ value ])
        (nil)))

(jump_insn 71 10 72 3 (set (pc)
        (label_ref 67)) -1 (nil))
;; End of basic block 3 -> ( 11)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
4, 9, 14, 17, 18, 21, 22, 23, 47, 48, 49, 253, 254


;; Succ edge  11 [100.0%] 

(barrier 72 71 13)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u13(11){ }u14(13){ }u15(25){ }u16(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 137 138
;; lr  use 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 137 138
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
4, 9, 14, 17, 18, 21, 22, 23, 47, 48, 49, 253, 254
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  2 [80.1%] 
(code_label 13 72 14 4 76 "" [1 uses])

(note 14 13 16 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(jump_insn 16 14 17 4 arch/arm/kernel/perf_event_v7.c:834 (set (pc)
        (if_then_else (le (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 51)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 4 [0x4])
            (nil))))
;; End of basic block 4 -> ( 5 10)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138
;; rd  out 	(13)
4, 9, 14, 17, 18, 21, 22, 23, 47, 48, 49, 253, 254


;; Succ edge  5 [100.0%]  (fallthru)
;; Succ edge  10 [0.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u18(11){ }u19(13){ }u20(25){ }u21(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc] 136 139 140 141
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138
;; live  gen 	 24 [cc] 136 139 140 141
;; live  kill	
;; rd  in  	(13)
4, 9, 14, 17, 18, 21, 22, 23, 47, 48, 49, 253, 254
;; rd  gen 	(5)
46, 252, 255, 256, 257
;; rd  kill	(10)
42, 43, 44, 45, 46, 47, 252, 255, 256, 257

;; Pred edge  4 [100.0%]  (fallthru)
(note 17 16 18 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 18 17 19 5 arch/arm/kernel/perf_event_v7.c:834 discrim 1 (set (reg/f:SI 139)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 19 18 20 5 arch/arm/kernel/perf_event_v7.c:834 discrim 1 (set (reg/f:SI 140 [ armpmu ])
        (mem/f/c/i:SI (reg/f:SI 139) [0 armpmu+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 139)
        (expr_list:REG_EQUAL (mem/f/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 armpmu+0 S4 A32])
            (nil))))

(insn 20 19 21 5 arch/arm/kernel/perf_event_v7.c:834 discrim 1 (set (reg:SI 141 [ <variable>.num_events ])
        (mem/s/j:SI (plus:SI (reg/f:SI 140 [ armpmu ])
                (const_int 56 [0x38])) [0 <variable>.num_events+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 140 [ armpmu ])
        (nil)))

(insn 21 20 22 5 arch/arm/kernel/perf_event_v7.c:834 discrim 1 (set (reg:SI 136 [ D.25836 ])
        (plus:SI (reg:SI 141 [ <variable>.num_events ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 141 [ <variable>.num_events ])
        (nil)))

(insn 22 21 23 5 arch/arm/kernel/perf_event_v7.c:834 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 137 [ idx ])
            (reg:SI 136 [ D.25836 ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 23 22 24 5 arch/arm/kernel/perf_event_v7.c:834 discrim 1 (set (pc)
        (if_then_else (gt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 51)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 4 [0x4])
            (nil))))
;; End of basic block 5 -> ( 6 10)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137 138
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137 138
;; rd  out 	(17)
4, 9, 14, 17, 18, 21, 22, 23, 46, 48, 49, 252, 253, 254, 255, 256, 257


;; Succ edge  6 [100.0%]  (fallthru)
;; Succ edge  10 [0.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u28(11){ }u29(13){ }u30(25){ }u31(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137 138
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(17)
4, 9, 14, 17, 18, 21, 22, 23, 46, 48, 49, 252, 253, 254, 255, 256, 257
;; rd  gen 	(1)
43
;; rd  kill	(6)
42, 43, 44, 45, 46, 47

;; Pred edge  5 [100.0%]  (fallthru)
(note 24 23 26 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 26 24 27 6 arch/arm/kernel/perf_event_v7.c:800 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 137 [ idx ])
            (const_int 1 [0x1]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 27 26 28 6 arch/arm/kernel/perf_event_v7.c:800 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 31)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 4 [0x4])
            (nil))))
;; End of basic block 6 -> ( 8 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137 138
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137 138
;; rd  out 	(17)
4, 9, 14, 17, 18, 21, 22, 23, 43, 48, 49, 252, 253, 254, 255, 256, 257


;; Succ edge  8 [0.0%] 
;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u34(11){ }u35(13){ }u36(25){ }u37(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137 138
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(17)
4, 9, 14, 17, 18, 21, 22, 23, 43, 48, 49, 252, 253, 254, 255, 256, 257
;; rd  gen 	(1)
42
;; rd  kill	(6)
42, 43, 44, 45, 46, 47

;; Pred edge  6 [100.0%]  (fallthru)
(note 28 27 29 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 29 28 30 7 arch/arm/kernel/perf_event_v7.c:800 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 137 [ idx ])
            (reg:SI 136 [ D.25836 ]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 136 [ D.25836 ])
        (nil)))

(jump_insn 30 29 31 7 arch/arm/kernel/perf_event_v7.c:800 discrim 1 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 42)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 7 -> ( 8 9)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138
;; rd  out 	(17)
4, 9, 14, 17, 18, 21, 22, 23, 42, 48, 49, 252, 253, 254, 255, 256, 257


;; Succ edge  8 [0.0%]  (fallthru)
;; Succ edge  9 [100.0%] 

;; Start of basic block ( 6 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u41(11){ }u42(13){ }u43(25){ }u44(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 143 144
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 143 144
;; live  kill	
;; rd  in  	(18)
4, 9, 14, 17, 18, 21, 22, 23, 42, 43, 48, 49, 252, 253, 254, 255, 256, 257
;; rd  gen 	(3)
3, 258, 259
;; rd  kill	(7)
0, 1, 2, 3, 4, 258, 259

;; Pred edge  6 [0.0%] 
;; Pred edge  7 [0.0%]  (fallthru)
(code_label 31 30 32 8 79 "" [1 uses])

(note 32 31 35 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 35 32 36 8 arch/arm/kernel/perf_event_v7.c:801 (set (reg:SI 144)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 36 35 37 8 arch/arm/kernel/perf_event_v7.c:801 (set (reg:SI 143)
        (and:SI (reg:SI 144)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 144)
        (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
                (const_int -8192 [0xffffffffffffe000]))
            (nil))))

(insn 37 36 38 8 arch/arm/kernel/perf_event_v7.c:801 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x111c4900>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x111c4900>)
        (nil)))

(insn 38 37 39 8 arch/arm/kernel/perf_event_v7.c:801 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg:SI 143)
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 143)
        (nil)))

(insn 39 38 40 8 arch/arm/kernel/perf_event_v7.c:801 (set (reg:SI 2 r2)
        (reg/v:SI 137 [ idx ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 137 [ idx ])
        (nil)))

(call_insn/j 40 39 41 8 arch/arm/kernel/perf_event_v7.c:801 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))
;; End of basic block 8 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(20)
3, 9, 14, 17, 18, 21, 22, 23, 42, 43, 48, 49, 252, 253, 254, 255, 256, 257, 258, 259


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 41 40 42)

;; Start of basic block ( 7) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u54(11){ }u55(13){ }u56(25){ }u57(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138
;; lr  def 	 145 146
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138
;; live  gen 	 145 146
;; live  kill	
;; rd  in  	(17)
4, 9, 14, 17, 18, 21, 22, 23, 42, 48, 49, 252, 253, 254, 255, 256, 257
;; rd  gen 	(2)
260, 261
;; rd  kill	(2)
260, 261

;; Pred edge  7 [100.0%] 
(code_label 42 41 43 9 80 "" [1 uses])

(note 43 42 44 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 44 43 45 9 arch/arm/kernel/perf_event_v7.c:807 (set (reg:SI 145)
        (plus:SI (reg/v:SI 137 [ idx ])
            (const_int -2 [0xfffffffffffffffe]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/v:SI 137 [ idx ])
        (nil)))

(insn 45 44 46 9 arch/arm/kernel/perf_event_v7.c:807 (set (reg:SI 146)
        (and:SI (reg:SI 145)
            (const_int 31 [0x1f]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 145)
        (nil)))

(insn 46 45 47 9 arch/arm/kernel/perf_event_v7.c:807 (asm_operands/v ("mcr p15, 0, %0, c9, c12, 5") ("") 0 [
            (reg:SI 146)
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8909266) -1 (expr_list:REG_DEAD (reg:SI 146)
        (nil)))

(insn 47 46 48 9 arch/arm/kernel/perf_event_v7.c:808 (parallel [
            (asm_operands/v ("isb") ("") 0 []
                 [] 8909394)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 48 47 73 9 arch/arm/kernel/perf_event_v7.c:836 (asm_operands/v ("mcr p15, 0, %0, c9, c13, 2") ("") 0 [
            (reg/v:SI 138 [ value ])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8912980) -1 (expr_list:REG_DEAD (reg/v:SI 138 [ value ])
        (nil)))

(jump_insn 73 48 74 9 (set (pc)
        (label_ref 67)) -1 (nil))
;; End of basic block 9 -> ( 11)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(19)
4, 9, 14, 17, 18, 21, 22, 23, 42, 48, 49, 252, 253, 254, 255, 256, 257, 260, 261


;; Succ edge  11 [100.0%] 

(barrier 74 73 51)

;; Start of basic block ( 5 4) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u62(11){ }u63(13){ }u64(25){ }u65(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 148 149
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 148 149
;; live  kill	
;; rd  in  	(18)
4, 9, 14, 17, 18, 21, 22, 23, 46, 47, 48, 49, 252, 253, 254, 255, 256, 257
;; rd  gen 	(3)
2, 262, 263
;; rd  kill	(7)
0, 1, 2, 3, 4, 262, 263

;; Pred edge  5 [0.0%] 
;; Pred edge  4 [0.0%] 
(code_label 51 74 52 10 78 "" [2 uses])

(note 52 51 55 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 55 52 56 10 arch/arm/kernel/perf_event_v7.c:839 (set (reg:SI 149)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 56 55 57 10 arch/arm/kernel/perf_event_v7.c:839 (set (reg:SI 148)
        (and:SI (reg:SI 149)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 149)
        (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
                (const_int -8192 [0xffffffffffffe000]))
            (nil))))

(insn 57 56 58 10 arch/arm/kernel/perf_event_v7.c:839 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x115c5a00>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x115c5a00>)
        (nil)))

(insn 58 57 59 10 arch/arm/kernel/perf_event_v7.c:839 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg:SI 148)
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 148)
        (nil)))

(insn 59 58 60 10 arch/arm/kernel/perf_event_v7.c:839 (set (reg:SI 2 r2)
        (reg/v:SI 137 [ idx ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 137 [ idx ])
        (nil)))

(call_insn/j 60 59 61 10 arch/arm/kernel/perf_event_v7.c:839 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))
;; End of basic block 10 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(20)
2, 9, 14, 17, 18, 21, 22, 23, 46, 47, 48, 49, 252, 253, 254, 255, 256, 257, 262, 263


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 61 60 67)

;; Start of basic block ( 3 9) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u75(11){ }u76(13){ }u77(25){ }u78(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(20)
4, 9, 14, 17, 18, 21, 22, 23, 42, 47, 48, 49, 252, 253, 254, 255, 256, 257, 260, 261
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  3 [100.0%] 
;; Pred edge  9 [100.0%] 
(code_label 67 61 70 11 81 "" [2 uses])

(note 70 67 0 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 11 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(20)
4, 9, 14, 17, 18, 21, 22, 23, 42, 47, 48, 49, 252, 253, 254, 255, 256, 257, 260, 261


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function armv7pmu_read_counter (armv7pmu_read_counter)[0:1337]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 12 n_edges 16 count 22 (  1.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 12 n_edges 16 count 22 (  1.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 12 n_edges 16 count 22 (  1.8)


armv7pmu_read_counter

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={6d,5u} r1={5d,2u} r2={5d,2u} r3={3d} r11={1d,11u} r12={3d} r13={1d,15u,2d} r14={3d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={6d,5u} r25={1d,11u} r26={1d,10u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r135={4d,1u} r137={1d,2u} r139={1d,7u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r149={1d,1u} r150={1d,1u} 
;;    total ref usage 353{270d,81u,2e} in 39{37 regular + 2 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254
0[0,6] 1[6,5] 2[11,5] 3[16,3] 11[19,1] 12[20,3] 13[23,1] 14[24,3] 15[27,2] 16[29,2] 17[31,2] 18[33,2] 19[35,2] 20[37,2] 21[39,2] 22[41,2] 23[43,2] 24[45,6] 25[51,1] 26[52,1] 27[53,2] 28[55,2] 29[57,2] 30[59,2] 31[61,2] 32[63,2] 33[65,2] 34[67,2] 35[69,2] 36[71,2] 37[73,2] 38[75,2] 39[77,2] 40[79,2] 41[81,2] 42[83,2] 43[85,2] 44[87,2] 45[89,2] 46[91,2] 47[93,2] 48[95,2] 49[97,2] 50[99,2] 51[101,2] 52[103,2] 53[105,2] 54[107,2] 55[109,2] 56[111,2] 57[113,2] 58[115,2] 59[117,2] 60[119,2] 61[121,2] 62[123,2] 63[125,2] 64[127,2] 65[129,2] 66[131,2] 67[133,2] 68[135,2] 69[137,2] 70[139,2] 71[141,2] 72[143,2] 73[145,2] 74[147,2] 75[149,2] 76[151,2] 77[153,2] 78[155,2] 79[157,2] 80[159,2] 81[161,2] 82[163,2] 83[165,2] 84[167,2] 85[169,2] 86[171,2] 87[173,2] 88[175,2] 89[177,2] 90[179,2] 91[181,2] 92[183,2] 93[185,2] 94[187,2] 95[189,2] 96[191,2] 97[193,2] 98[195,2] 99[197,2] 100[199,2] 101[201,2] 102[203,2] 103[205,2] 104[207,2] 105[209,2] 106[211,2] 107[213,2] 108[215,2] 109[217,2] 110[219,2] 111[221,2] 112[223,2] 113[225,2] 114[227,2] 115[229,2] 116[231,2] 117[233,2] 118[235,2] 119[237,2] 120[239,2] 121[241,2] 122[243,2] 123[245,2] 124[247,2] 125[249,2] 126[251,2] 127[253,2] 135[255,4] 137[259,1] 139[260,1] 140[261,1] 141[262,1] 142[263,1] 144[264,1] 145[265,1] 146[266,1] 147[267,1] 149[268,1] 150[269,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d5(0){ }d10(1){ }d15(2){ }d18(3){ }d19(11){ }d22(12){ }d23(13){ }d26(14){ }d51(25){ }d52(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
5, 10, 15, 18, 19, 22, 23, 26, 51, 52
;; rd  kill	(29)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 51, 52
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
5, 10, 15, 18, 19, 22, 23, 26, 51, 52

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d19(bb 0 insn -1) }u1(13){ d23(bb 0 insn -1) }u2(25){ d51(bb 0 insn -1) }u3(26){ d52(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 139
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 139
;; live  kill	
;; rd  in  	(10)
5, 10, 15, 18, 19, 22, 23, 26, 51, 52
;; rd  gen 	(2)
50, 260
;; rd  kill	(7)
45, 46, 47, 48, 49, 50, 260
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 139
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 139
;; rd  out 	(12)
5, 10, 15, 18, 19, 22, 23, 26, 50, 51, 52, 260
;;  UD chains for artificial uses
;;   reg 11 { d19(bb 0 insn -1) }
;;   reg 13 { d23(bb 0 insn -1) }
;;   reg 25 { d51(bb 0 insn -1) }
;;   reg 26 { d52(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d5(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 6
;;      reg 139 { d260(bb 2 insn 2) }
;;   UD chains for insn luid 2 uid 7
;;      reg 24 { d50(bb 2 insn 6) }

( 2 )->[3]->( 11 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u7(11){ d19(bb 0 insn -1) }u8(13){ d23(bb 0 insn -1) }u9(25){ d51(bb 0 insn -1) }u10(26){ d52(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 135
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 135
;; live  kill	
;; rd  in  	(12)
5, 10, 15, 18, 19, 22, 23, 26, 50, 51, 52, 260
;; rd  gen 	(1)
258
;; rd  kill	(4)
255, 256, 257, 258
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; rd  out 	(13)
5, 10, 15, 18, 19, 22, 23, 26, 50, 51, 52, 258, 260
;;  UD chains for artificial uses
;;   reg 11 { d19(bb 0 insn -1) }
;;   reg 13 { d23(bb 0 insn -1) }
;;   reg 25 { d51(bb 0 insn -1) }
;;   reg 26 { d52(bb 0 insn -1) }

( 2 )->[4]->( 5 10 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u11(11){ d19(bb 0 insn -1) }u12(13){ d23(bb 0 insn -1) }u13(25){ d51(bb 0 insn -1) }u14(26){ d52(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 139
;; lr  use 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 139
;; live  gen 	
;; live  kill	
;; rd  in  	(12)
5, 10, 15, 18, 19, 22, 23, 26, 50, 51, 52, 260
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; rd  out 	(12)
5, 10, 15, 18, 19, 22, 23, 26, 50, 51, 52, 260
;;  UD chains for artificial uses
;;   reg 11 { d19(bb 0 insn -1) }
;;   reg 13 { d23(bb 0 insn -1) }
;;   reg 25 { d51(bb 0 insn -1) }
;;   reg 26 { d52(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 15
;;      reg 24 { d50(bb 2 insn 6) }

( 4 )->[5]->( 6 10 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u16(11){ d19(bb 0 insn -1) }u17(13){ d23(bb 0 insn -1) }u18(25){ d51(bb 0 insn -1) }u19(26){ d52(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 24 [cc] 137 140 141 142
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  gen 	 24 [cc] 137 140 141 142
;; live  kill	
;; rd  in  	(12)
5, 10, 15, 18, 19, 22, 23, 26, 50, 51, 52, 260
;; rd  gen 	(5)
49, 259, 261, 262, 263
;; rd  kill	(10)
45, 46, 47, 48, 49, 50, 259, 261, 262, 263
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 139
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 139
;; rd  out 	(16)
5, 10, 15, 18, 19, 22, 23, 26, 49, 51, 52, 259, 260, 261, 262, 263
;;  UD chains for artificial uses
;;   reg 11 { d19(bb 0 insn -1) }
;;   reg 13 { d23(bb 0 insn -1) }
;;   reg 25 { d51(bb 0 insn -1) }
;;   reg 26 { d52(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 18
;;      reg 140 { d261(bb 5 insn 17) }
;;   UD chains for insn luid 2 uid 19
;;      reg 141 { d262(bb 5 insn 18) }
;;   UD chains for insn luid 3 uid 20
;;      reg 142 { d263(bb 5 insn 19) }
;;   UD chains for insn luid 4 uid 21
;;      reg 137 { d259(bb 5 insn 20) }
;;      reg 139 { d260(bb 2 insn 2) }
;;   UD chains for insn luid 5 uid 22
;;      reg 24 { d49(bb 5 insn 21) }

( 5 )->[6]->( 8 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u26(11){ d19(bb 0 insn -1) }u27(13){ d23(bb 0 insn -1) }u28(25){ d51(bb 0 insn -1) }u29(26){ d52(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 139
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(16)
5, 10, 15, 18, 19, 22, 23, 26, 49, 51, 52, 259, 260, 261, 262, 263
;; rd  gen 	(1)
46
;; rd  kill	(6)
45, 46, 47, 48, 49, 50
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 139
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 139
;; rd  out 	(16)
5, 10, 15, 18, 19, 22, 23, 26, 46, 51, 52, 259, 260, 261, 262, 263
;;  UD chains for artificial uses
;;   reg 11 { d19(bb 0 insn -1) }
;;   reg 13 { d23(bb 0 insn -1) }
;;   reg 25 { d51(bb 0 insn -1) }
;;   reg 26 { d52(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 25
;;      reg 139 { d260(bb 2 insn 2) }
;;   UD chains for insn luid 1 uid 26
;;      reg 24 { d46(bb 6 insn 25) }

( 6 )->[7]->( 8 9 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u32(11){ d19(bb 0 insn -1) }u33(13){ d23(bb 0 insn -1) }u34(25){ d51(bb 0 insn -1) }u35(26){ d52(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 139
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(16)
5, 10, 15, 18, 19, 22, 23, 26, 46, 51, 52, 259, 260, 261, 262, 263
;; rd  gen 	(1)
45
;; rd  kill	(6)
45, 46, 47, 48, 49, 50
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; rd  out 	(16)
5, 10, 15, 18, 19, 22, 23, 26, 45, 51, 52, 259, 260, 261, 262, 263
;;  UD chains for artificial uses
;;   reg 11 { d19(bb 0 insn -1) }
;;   reg 13 { d23(bb 0 insn -1) }
;;   reg 25 { d51(bb 0 insn -1) }
;;   reg 26 { d52(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 28
;;      reg 137 { d259(bb 5 insn 20) }
;;      reg 139 { d260(bb 2 insn 2) }
;;   UD chains for insn luid 1 uid 29
;;      reg 24 { d45(bb 7 insn 28) }

( 6 7 )->[8]->( 11 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u39(11){ d19(bb 0 insn -1) }u40(13){ d23(bb 0 insn -1) }u41(25){ d51(bb 0 insn -1) }u42(26){ d52(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 135 144 145
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 135 144 145
;; live  kill	 14 [lr]
;; rd  in  	(17)
5, 10, 15, 18, 19, 22, 23, 26, 45, 46, 51, 52, 259, 260, 261, 262, 263
;; rd  gen 	(4)
4, 257, 264, 265
;; rd  kill	(15)
0, 1, 2, 3, 4, 5, 24, 25, 26, 255, 256, 257, 258, 264, 265
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; rd  out 	(19)
4, 10, 15, 18, 19, 22, 23, 45, 46, 51, 52, 257, 259, 260, 261, 262, 263, 264, 265
;;  UD chains for artificial uses
;;   reg 11 { d19(bb 0 insn -1) }
;;   reg 13 { d23(bb 0 insn -1) }
;;   reg 25 { d51(bb 0 insn -1) }
;;   reg 26 { d52(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 34
;;      reg 13 { d23(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 35
;;      reg 145 { d265(bb 8 insn 34) }
;;   eq_note reg 13 { }
;;   UD chains for insn luid 3 uid 37
;;      reg 144 { d264(bb 8 insn 35) }
;;   UD chains for insn luid 4 uid 38
;;      reg 139 { d260(bb 2 insn 2) }
;;   UD chains for insn luid 5 uid 39
;;      reg 13 { d23(bb 0 insn -1) }
;;      reg 0 { d1(bb 8 insn 36) }
;;      reg 1 { d9(bb 8 insn 37) }
;;      reg 2 { d14(bb 8 insn 38) }

( 7 )->[9]->( 11 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u52(11){ d19(bb 0 insn -1) }u53(13){ d23(bb 0 insn -1) }u54(25){ d51(bb 0 insn -1) }u55(26){ d52(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 135 146 147
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  gen 	 135 146 147
;; live  kill	
;; rd  in  	(16)
5, 10, 15, 18, 19, 22, 23, 26, 45, 51, 52, 259, 260, 261, 262, 263
;; rd  gen 	(3)
256, 266, 267
;; rd  kill	(6)
255, 256, 257, 258, 266, 267
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; rd  out 	(19)
5, 10, 15, 18, 19, 22, 23, 26, 45, 51, 52, 256, 259, 260, 261, 262, 263, 266, 267
;;  UD chains for artificial uses
;;   reg 11 { d19(bb 0 insn -1) }
;;   reg 13 { d23(bb 0 insn -1) }
;;   reg 25 { d51(bb 0 insn -1) }
;;   reg 26 { d52(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 45
;;      reg 139 { d260(bb 2 insn 2) }
;;   UD chains for insn luid 1 uid 46
;;      reg 146 { d266(bb 9 insn 45) }
;;   UD chains for insn luid 2 uid 47
;;      reg 147 { d267(bb 9 insn 46) }

( 5 4 )->[10]->( 11 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u59(11){ d19(bb 0 insn -1) }u60(13){ d23(bb 0 insn -1) }u61(25){ d51(bb 0 insn -1) }u62(26){ d52(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 135 149 150
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 135 149 150
;; live  kill	 14 [lr]
;; rd  in  	(17)
5, 10, 15, 18, 19, 22, 23, 26, 49, 50, 51, 52, 259, 260, 261, 262, 263
;; rd  gen 	(4)
3, 255, 268, 269
;; rd  kill	(15)
0, 1, 2, 3, 4, 5, 24, 25, 26, 255, 256, 257, 258, 268, 269
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; rd  out 	(19)
3, 10, 15, 18, 19, 22, 23, 49, 50, 51, 52, 255, 259, 260, 261, 262, 263, 268, 269
;;  UD chains for artificial uses
;;   reg 11 { d19(bb 0 insn -1) }
;;   reg 13 { d23(bb 0 insn -1) }
;;   reg 25 { d51(bb 0 insn -1) }
;;   reg 26 { d52(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 56
;;      reg 13 { d23(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 57
;;      reg 150 { d269(bb 10 insn 56) }
;;   eq_note reg 13 { }
;;   UD chains for insn luid 3 uid 59
;;      reg 149 { d268(bb 10 insn 57) }
;;   UD chains for insn luid 4 uid 60
;;      reg 139 { d260(bb 2 insn 2) }
;;   UD chains for insn luid 5 uid 61
;;      reg 13 { d23(bb 0 insn -1) }
;;      reg 0 { d0(bb 10 insn 58) }
;;      reg 1 { d7(bb 10 insn 59) }
;;      reg 2 { d12(bb 10 insn 60) }

( 3 8 10 9 )->[11]->( 1 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u72(11){ d19(bb 0 insn -1) }u73(13){ d23(bb 0 insn -1) }u74(25){ d51(bb 0 insn -1) }u75(26){ d52(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(31)
3, 4, 5, 10, 15, 18, 19, 22, 23, 26, 45, 46, 49, 50, 51, 52, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269
;; rd  gen 	(1)
2
;; rd  kill	(6)
0, 1, 2, 3, 4, 5
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(29)
2, 10, 15, 18, 19, 22, 23, 26, 45, 46, 49, 50, 51, 52, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269
;;  UD chains for artificial uses
;;   reg 11 { d19(bb 0 insn -1) }
;;   reg 13 { d23(bb 0 insn -1) }
;;   reg 25 { d51(bb 0 insn -1) }
;;   reg 26 { d52(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 69
;;      reg 135 { d258(bb 3 insn 9) d257(bb 8 insn 40) d256(bb 9 insn 49) d255(bb 10 insn 62) }
;;   UD chains for insn luid 1 uid 75
;;      reg 0 { d2(bb 11 insn 69) }

( 11 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u78(0){ d2(bb 11 insn 69) }u79(11){ d19(bb 0 insn -1) }u80(13){ d23(bb 0 insn -1) }u81(14){ d26(bb 0 insn -1) }u82(25){ d51(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(29)
2, 10, 15, 18, 19, 22, 23, 26, 45, 46, 49, 50, 51, 52, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(29)
2, 10, 15, 18, 19, 22, 23, 26, 45, 46, 49, 50, 51, 52, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269
;;  UD chains for artificial uses
;;   reg 0 { d2(bb 11 insn 69) }
;;   reg 11 { d19(bb 0 insn -1) }
;;   reg 13 { d23(bb 0 insn -1) }
;;   reg 14 { d26(bb 0 insn -1) }
;;   reg 25 { d51(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 7 to worklist
  Adding insn 79 to worklist
  Adding insn 9 to worklist
  Adding insn 15 to worklist
  Adding insn 22 to worklist
  Adding insn 26 to worklist
  Adding insn 29 to worklist
  Adding insn 81 to worklist
  Adding insn 39 to worklist
  Adding insn 83 to worklist
  Adding insn 49 to worklist
  Adding insn 48 to worklist
  Adding insn 47 to worklist
  Adding insn 61 to worklist
  Adding insn 75 to worklist
Finished finding needed instructions:
  Adding insn 69 to worklist
Processing use of (reg 135 [ value ]) in insn 69:
  Adding insn 40 to worklist
  Adding insn 62 to worklist
Processing use of (reg 0 r0) in insn 75:
Processing use of (reg 13 sp) in insn 61:
Processing use of (reg 0 r0) in insn 61:
  Adding insn 58 to worklist
Processing use of (reg 1 r1) in insn 61:
  Adding insn 59 to worklist
Processing use of (reg 2 r2) in insn 61:
  Adding insn 60 to worklist
Processing use of (reg 139 [ idx ]) in insn 60:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 149) in insn 59:
  Adding insn 57 to worklist
Processing use of (reg 150) in insn 57:
  Adding insn 56 to worklist
Processing use of (reg 13 sp) in insn 56:
Processing use of (reg 147) in insn 47:
  Adding insn 46 to worklist
Processing use of (reg 146) in insn 46:
  Adding insn 45 to worklist
Processing use of (reg 139 [ idx ]) in insn 45:
Processing use of (reg 13 sp) in insn 39:
Processing use of (reg 0 r0) in insn 39:
  Adding insn 36 to worklist
Processing use of (reg 1 r1) in insn 39:
  Adding insn 37 to worklist
Processing use of (reg 2 r2) in insn 39:
  Adding insn 38 to worklist
Processing use of (reg 139 [ idx ]) in insn 38:
Processing use of (reg 144) in insn 37:
  Adding insn 35 to worklist
Processing use of (reg 145) in insn 35:
  Adding insn 34 to worklist
Processing use of (reg 13 sp) in insn 34:
Processing use of (reg 24 cc) in insn 29:
  Adding insn 28 to worklist
Processing use of (reg 137 [ D.25815 ]) in insn 28:
  Adding insn 20 to worklist
Processing use of (reg 139 [ idx ]) in insn 28:
Processing use of (reg 142 [ <variable>.num_events ]) in insn 20:
  Adding insn 19 to worklist
Processing use of (reg 141 [ armpmu ]) in insn 19:
  Adding insn 18 to worklist
Processing use of (reg 140) in insn 18:
  Adding insn 17 to worklist
Processing use of (reg 24 cc) in insn 26:
  Adding insn 25 to worklist
Processing use of (reg 139 [ idx ]) in insn 25:
Processing use of (reg 24 cc) in insn 22:
  Adding insn 21 to worklist
Processing use of (reg 137 [ D.25815 ]) in insn 21:
Processing use of (reg 139 [ idx ]) in insn 21:
Processing use of (reg 24 cc) in insn 15:
  Adding insn 6 to worklist
Processing use of (reg 139 [ idx ]) in insn 6:
Processing use of (reg 24 cc) in insn 7:


armv7pmu_read_counter

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={6d,5u} r1={5d,2u} r2={5d,2u} r3={3d} r11={1d,11u} r12={3d} r13={1d,15u,2d} r14={3d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={6d,5u} r25={1d,11u} r26={1d,10u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r135={4d,1u} r137={1d,2u} r139={1d,7u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r149={1d,1u} r150={1d,1u} 
;;    total ref usage 353{270d,81u,2e} in 39{37 regular + 2 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254
0[0,6] 1[6,5] 2[11,5] 3[16,3] 11[19,1] 12[20,3] 13[23,1] 14[24,3] 15[27,2] 16[29,2] 17[31,2] 18[33,2] 19[35,2] 20[37,2] 21[39,2] 22[41,2] 23[43,2] 24[45,6] 25[51,1] 26[52,1] 27[53,2] 28[55,2] 29[57,2] 30[59,2] 31[61,2] 32[63,2] 33[65,2] 34[67,2] 35[69,2] 36[71,2] 37[73,2] 38[75,2] 39[77,2] 40[79,2] 41[81,2] 42[83,2] 43[85,2] 44[87,2] 45[89,2] 46[91,2] 47[93,2] 48[95,2] 49[97,2] 50[99,2] 51[101,2] 52[103,2] 53[105,2] 54[107,2] 55[109,2] 56[111,2] 57[113,2] 58[115,2] 59[117,2] 60[119,2] 61[121,2] 62[123,2] 63[125,2] 64[127,2] 65[129,2] 66[131,2] 67[133,2] 68[135,2] 69[137,2] 70[139,2] 71[141,2] 72[143,2] 73[145,2] 74[147,2] 75[149,2] 76[151,2] 77[153,2] 78[155,2] 79[157,2] 80[159,2] 81[161,2] 82[163,2] 83[165,2] 84[167,2] 85[169,2] 86[171,2] 87[173,2] 88[175,2] 89[177,2] 90[179,2] 91[181,2] 92[183,2] 93[185,2] 94[187,2] 95[189,2] 96[191,2] 97[193,2] 98[195,2] 99[197,2] 100[199,2] 101[201,2] 102[203,2] 103[205,2] 104[207,2] 105[209,2] 106[211,2] 107[213,2] 108[215,2] 109[217,2] 110[219,2] 111[221,2] 112[223,2] 113[225,2] 114[227,2] 115[229,2] 116[231,2] 117[233,2] 118[235,2] 119[237,2] 120[239,2] 121[241,2] 122[243,2] 123[245,2] 124[247,2] 125[249,2] 126[251,2] 127[253,2] 135[255,4] 137[259,1] 139[260,1] 140[261,1] 141[262,1] 142[263,1] 144[264,1] 145[265,1] 146[266,1] 147[267,1] 149[268,1] 150[269,1] 
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 139
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 139
;; live  kill	
;; rd  in  	(10)
5, 10, 15, 18, 19, 22, 23, 26, 51, 52
;; rd  gen 	(2)
50, 260
;; rd  kill	(7)
45, 46, 47, 48, 49, 50, 260

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 arch/arm/kernel/perf_event_v7.c:814 (set (reg/v:SI 139 [ idx ])
        (reg:SI 0 r0 [ idx ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ idx ])
        (nil)))

(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 3 7 2 arch/arm/kernel/perf_event_v7.c:817 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 139 [ idx ])
            (const_int 1 [0x1]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 7 6 8 2 arch/arm/kernel/perf_event_v7.c:817 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 12)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 8009 [0x1f49])
        (nil)))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 139
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 139
;; rd  out 	(12)
5, 10, 15, 18, 19, 22, 23, 26, 50, 51, 52, 260


;; Succ edge  3 [19.9%]  (fallthru)
;; Succ edge  4 [80.1%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u7(11){ }u8(13){ }u9(25){ }u10(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 135
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 135
;; live  kill	
;; rd  in  	(12)
5, 10, 15, 18, 19, 22, 23, 26, 50, 51, 52, 260
;; rd  gen 	(1)
258
;; rd  kill	(4)
255, 256, 257, 258

;; Pred edge  2 [19.9%]  (fallthru)
(note 8 7 9 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 9 8 79 3 arch/arm/kernel/perf_event_v7.c:818 (set (reg/v:SI 135 [ value ])
        (asm_operands/v:SI ("mrc p15, 0, %0, c9, c13, 0") ("=r") 0 []
             [] 8910675)) -1 (nil))

(jump_insn 79 9 80 3 (set (pc)
        (label_ref 63)) -1 (nil))
;; End of basic block 3 -> ( 11)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; rd  out 	(13)
5, 10, 15, 18, 19, 22, 23, 26, 50, 51, 52, 258, 260


;; Succ edge  11 [100.0%] 

(barrier 80 79 12)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u11(11){ }u12(13){ }u13(25){ }u14(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 139
;; lr  use 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 139
;; live  gen 	
;; live  kill	
;; rd  in  	(12)
5, 10, 15, 18, 19, 22, 23, 26, 50, 51, 52, 260
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  2 [80.1%] 
(code_label 12 80 13 4 86 "" [1 uses])

(note 13 12 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(jump_insn 15 13 16 4 arch/arm/kernel/perf_event_v7.c:819 (set (pc)
        (if_then_else (le (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 52)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 4 [0x4])
            (nil))))
;; End of basic block 4 -> ( 5 10)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; rd  out 	(12)
5, 10, 15, 18, 19, 22, 23, 26, 50, 51, 52, 260


;; Succ edge  5 [100.0%]  (fallthru)
;; Succ edge  10 [0.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u16(11){ }u17(13){ }u18(25){ }u19(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 24 [cc] 137 140 141 142
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  gen 	 24 [cc] 137 140 141 142
;; live  kill	
;; rd  in  	(12)
5, 10, 15, 18, 19, 22, 23, 26, 50, 51, 52, 260
;; rd  gen 	(5)
49, 259, 261, 262, 263
;; rd  kill	(10)
45, 46, 47, 48, 49, 50, 259, 261, 262, 263

;; Pred edge  4 [100.0%]  (fallthru)
(note 16 15 17 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 17 16 18 5 arch/arm/kernel/perf_event_v7.c:819 discrim 1 (set (reg/f:SI 140)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 18 17 19 5 arch/arm/kernel/perf_event_v7.c:819 discrim 1 (set (reg/f:SI 141 [ armpmu ])
        (mem/f/c/i:SI (reg/f:SI 140) [0 armpmu+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 140)
        (expr_list:REG_EQUAL (mem/f/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 armpmu+0 S4 A32])
            (nil))))

(insn 19 18 20 5 arch/arm/kernel/perf_event_v7.c:819 discrim 1 (set (reg:SI 142 [ <variable>.num_events ])
        (mem/s/j:SI (plus:SI (reg/f:SI 141 [ armpmu ])
                (const_int 56 [0x38])) [0 <variable>.num_events+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 141 [ armpmu ])
        (nil)))

(insn 20 19 21 5 arch/arm/kernel/perf_event_v7.c:819 discrim 1 (set (reg:SI 137 [ D.25815 ])
        (plus:SI (reg:SI 142 [ <variable>.num_events ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 142 [ <variable>.num_events ])
        (nil)))

(insn 21 20 22 5 arch/arm/kernel/perf_event_v7.c:819 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 139 [ idx ])
            (reg:SI 137 [ D.25815 ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 22 21 23 5 arch/arm/kernel/perf_event_v7.c:819 discrim 1 (set (pc)
        (if_then_else (gt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 52)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 4 [0x4])
            (nil))))
;; End of basic block 5 -> ( 6 10)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 139
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 139
;; rd  out 	(16)
5, 10, 15, 18, 19, 22, 23, 26, 49, 51, 52, 259, 260, 261, 262, 263


;; Succ edge  6 [100.0%]  (fallthru)
;; Succ edge  10 [0.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u26(11){ }u27(13){ }u28(25){ }u29(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 139
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(16)
5, 10, 15, 18, 19, 22, 23, 26, 49, 51, 52, 259, 260, 261, 262, 263
;; rd  gen 	(1)
46
;; rd  kill	(6)
45, 46, 47, 48, 49, 50

;; Pred edge  5 [100.0%]  (fallthru)
(note 23 22 25 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 25 23 26 6 arch/arm/kernel/perf_event_v7.c:800 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 139 [ idx ])
            (const_int 1 [0x1]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 26 25 27 6 arch/arm/kernel/perf_event_v7.c:800 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 30)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 4 [0x4])
            (nil))))
;; End of basic block 6 -> ( 8 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 139
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 139
;; rd  out 	(16)
5, 10, 15, 18, 19, 22, 23, 26, 46, 51, 52, 259, 260, 261, 262, 263


;; Succ edge  8 [0.0%] 
;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u32(11){ }u33(13){ }u34(25){ }u35(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 139
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(16)
5, 10, 15, 18, 19, 22, 23, 26, 46, 51, 52, 259, 260, 261, 262, 263
;; rd  gen 	(1)
45
;; rd  kill	(6)
45, 46, 47, 48, 49, 50

;; Pred edge  6 [100.0%]  (fallthru)
(note 27 26 28 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 28 27 29 7 arch/arm/kernel/perf_event_v7.c:800 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 139 [ idx ])
            (reg:SI 137 [ D.25815 ]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 137 [ D.25815 ])
        (nil)))

(jump_insn 29 28 30 7 arch/arm/kernel/perf_event_v7.c:800 discrim 1 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 43)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 7 -> ( 8 9)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; rd  out 	(16)
5, 10, 15, 18, 19, 22, 23, 26, 45, 51, 52, 259, 260, 261, 262, 263


;; Succ edge  8 [0.0%]  (fallthru)
;; Succ edge  9 [100.0%] 

;; Start of basic block ( 6 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u39(11){ }u40(13){ }u41(25){ }u42(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 135 144 145
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 135 144 145
;; live  kill	 14 [lr]
;; rd  in  	(17)
5, 10, 15, 18, 19, 22, 23, 26, 45, 46, 51, 52, 259, 260, 261, 262, 263
;; rd  gen 	(4)
4, 257, 264, 265
;; rd  kill	(15)
0, 1, 2, 3, 4, 5, 24, 25, 26, 255, 256, 257, 258, 264, 265

;; Pred edge  6 [0.0%] 
;; Pred edge  7 [0.0%]  (fallthru)
(code_label 30 29 31 8 89 "" [1 uses])

(note 31 30 34 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 34 31 35 8 arch/arm/kernel/perf_event_v7.c:801 (set (reg:SI 145)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 35 34 36 8 arch/arm/kernel/perf_event_v7.c:801 (set (reg:SI 144)
        (and:SI (reg:SI 145)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 145)
        (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
                (const_int -8192 [0xffffffffffffe000]))
            (nil))))

(insn 36 35 37 8 arch/arm/kernel/perf_event_v7.c:801 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x111c4900>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x111c4900>)
        (nil)))

(insn 37 36 38 8 arch/arm/kernel/perf_event_v7.c:801 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg:SI 144)
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 144)
        (nil)))

(insn 38 37 39 8 arch/arm/kernel/perf_event_v7.c:801 (set (reg:SI 2 r2)
        (reg/v:SI 139 [ idx ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 139 [ idx ])
        (nil)))

(call_insn 39 38 40 8 arch/arm/kernel/perf_event_v7.c:801 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 40 39 81 8 arch/arm/kernel/perf_event_v7.c:815 (set (reg/v:SI 135 [ value ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(jump_insn 81 40 82 8 (set (pc)
        (label_ref 63)) -1 (nil))
;; End of basic block 8 -> ( 11)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; rd  out 	(19)
4, 10, 15, 18, 19, 22, 23, 45, 46, 51, 52, 257, 259, 260, 261, 262, 263, 264, 265


;; Succ edge  11 [100.0%] 

(barrier 82 81 43)

;; Start of basic block ( 7) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u52(11){ }u53(13){ }u54(25){ }u55(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 135 146 147
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  gen 	 135 146 147
;; live  kill	
;; rd  in  	(16)
5, 10, 15, 18, 19, 22, 23, 26, 45, 51, 52, 259, 260, 261, 262, 263
;; rd  gen 	(3)
256, 266, 267
;; rd  kill	(6)
255, 256, 257, 258, 266, 267

;; Pred edge  7 [100.0%] 
(code_label 43 82 44 9 90 "" [1 uses])

(note 44 43 45 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 45 44 46 9 arch/arm/kernel/perf_event_v7.c:807 (set (reg:SI 146)
        (plus:SI (reg/v:SI 139 [ idx ])
            (const_int -2 [0xfffffffffffffffe]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/v:SI 139 [ idx ])
        (nil)))

(insn 46 45 47 9 arch/arm/kernel/perf_event_v7.c:807 (set (reg:SI 147)
        (and:SI (reg:SI 146)
            (const_int 31 [0x1f]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 146)
        (nil)))

(insn 47 46 48 9 arch/arm/kernel/perf_event_v7.c:807 (asm_operands/v ("mcr p15, 0, %0, c9, c12, 5") ("") 0 [
            (reg:SI 147)
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8909266) -1 (expr_list:REG_DEAD (reg:SI 147)
        (nil)))

(insn 48 47 49 9 arch/arm/kernel/perf_event_v7.c:808 (parallel [
            (asm_operands/v ("isb") ("") 0 []
                 [] 8909394)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 49 48 83 9 arch/arm/kernel/perf_event_v7.c:821 (set (reg/v:SI 135 [ value ])
        (asm_operands/v:SI ("mrc p15, 0, %0, c9, c13, 2") ("=r") 0 []
             [] 8911060)) -1 (nil))

(jump_insn 83 49 84 9 (set (pc)
        (label_ref 63)) -1 (nil))
;; End of basic block 9 -> ( 11)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; rd  out 	(19)
5, 10, 15, 18, 19, 22, 23, 26, 45, 51, 52, 256, 259, 260, 261, 262, 263, 266, 267


;; Succ edge  11 [100.0%] 

(barrier 84 83 52)

;; Start of basic block ( 5 4) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u59(11){ }u60(13){ }u61(25){ }u62(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 135 149 150
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 135 149 150
;; live  kill	 14 [lr]
;; rd  in  	(17)
5, 10, 15, 18, 19, 22, 23, 26, 49, 50, 51, 52, 259, 260, 261, 262, 263
;; rd  gen 	(4)
3, 255, 268, 269
;; rd  kill	(15)
0, 1, 2, 3, 4, 5, 24, 25, 26, 255, 256, 257, 258, 268, 269

;; Pred edge  5 [0.0%] 
;; Pred edge  4 [0.0%] 
(code_label 52 84 53 10 88 "" [2 uses])

(note 53 52 56 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 56 53 57 10 arch/arm/kernel/perf_event_v7.c:824 (set (reg:SI 150)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 57 56 58 10 arch/arm/kernel/perf_event_v7.c:824 (set (reg:SI 149)
        (and:SI (reg:SI 150)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 150)
        (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
                (const_int -8192 [0xffffffffffffe000]))
            (nil))))

(insn 58 57 59 10 arch/arm/kernel/perf_event_v7.c:824 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x115c5a50>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x115c5a50>)
        (nil)))

(insn 59 58 60 10 arch/arm/kernel/perf_event_v7.c:824 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg:SI 149)
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 149)
        (nil)))

(insn 60 59 61 10 arch/arm/kernel/perf_event_v7.c:824 (set (reg:SI 2 r2)
        (reg/v:SI 139 [ idx ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 139 [ idx ])
        (nil)))

(call_insn 61 60 62 10 arch/arm/kernel/perf_event_v7.c:824 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 62 61 63 10 arch/arm/kernel/perf_event_v7.c:815 (set (reg/v:SI 135 [ value ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 10 -> ( 11)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; rd  out 	(19)
3, 10, 15, 18, 19, 22, 23, 49, 50, 51, 52, 255, 259, 260, 261, 262, 263, 268, 269


;; Succ edge  11 [100.0%]  (fallthru)

;; Start of basic block ( 3 8 10 9) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u72(11){ }u73(13){ }u74(25){ }u75(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(31)
3, 4, 5, 10, 15, 18, 19, 22, 23, 26, 45, 46, 49, 50, 51, 52, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269
;; rd  gen 	(1)
2
;; rd  kill	(6)
0, 1, 2, 3, 4, 5

;; Pred edge  3 [100.0%] 
;; Pred edge  8 [100.0%] 
;; Pred edge  10 [100.0%]  (fallthru)
;; Pred edge  9 [100.0%] 
(code_label 63 62 64 11 87 "" [3 uses])

(note 64 63 69 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 69 64 75 11 arch/arm/kernel/perf_event_v7.c:828 (set (reg/i:SI 0 r0)
        (reg/v:SI 135 [ value ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 135 [ value ])
        (nil)))

(insn 75 69 0 11 arch/arm/kernel/perf_event_v7.c:828 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 11 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(29)
2, 10, 15, 18, 19, 22, 23, 26, 45, 46, 49, 50, 51, 52, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function init_hw_perf_events (init_hw_perf_events)[0:1358] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 32 n_edges 46 count 35 (  1.1)
df_worklist_dataflow_doublequeue:n_basic_blocks 32 n_edges 46 count 62 (  1.9)
df_worklist_dataflow_doublequeue:n_basic_blocks 32 n_edges 46 count 62 (  1.9)


init_hw_perf_events

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={8d,5u} r1={6d,2u} r2={6d,2u} r3={4d} r11={1d,31u} r12={4d} r13={1d,34u} r14={4d,1u} r15={3d} r16={3d} r17={3d} r18={3d} r19={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={17d,15u} r25={1d,31u} r26={1d,30u} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r81={3d} r82={3d} r83={3d} r84={3d} r85={3d} r86={3d} r87={3d} r88={3d} r89={3d} r90={3d} r91={3d} r92={3d} r93={3d} r94={3d} r95={3d} r96={3d} r97={3d} r98={3d} r99={3d} r100={3d} r101={3d} r102={3d} r103={3d} r104={3d} r105={3d} r106={3d} r107={3d} r108={3d} r109={3d} r110={3d} r111={3d} r112={3d} r113={3d} r114={3d} r115={3d} r116={3d} r117={3d} r118={3d} r119={3d} r120={3d} r121={3d} r122={3d} r123={3d} r124={3d} r125={3d} r126={3d} r127={3d} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,2u} r138={1d,3u,1d} r139={1d,3u} r141={1d,8u,8d} r143={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,6u} r158={1d,1u} r160={1d,1u} r162={1d,2u} r165={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r172={1d,1u} r173={1d,6u} r174={1d,1u} r176={1d,1u} r179={1d,2u} r182={1d,1u} r184={1d,1u} r185={1d,1u} r186={1d,1u} r187={1d,1u} r189={1d,1u} r190={1d,6u} r191={1d,1u} r193={1d,1u} r196={1d,2u} r199={1d,1u} r201={1d,1u} r202={1d,1u} r203={1d,1u} r204={1d,1u} r206={1d,1u} r207={1d,6u} r208={1d,1u} r210={1d,1u} r213={1d,2u} r216={1d,1u} r218={1d,1u} r219={1d,1u} r220={1d,1u} r221={1d,1u} r223={1d,1u} r224={1d,1u} r225={1d,2u} r226={1d,1u} r227={1d,1u} r228={1d,1u} r229={1d,1u} r230={1d,1u} 
;;    total ref usage 714{450d,255u,9e} in 147{144 regular + 3 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382
0[0,8] 1[8,6] 2[14,6] 3[20,4] 11[24,1] 12[25,4] 13[29,1] 14[30,4] 15[34,3] 16[37,3] 17[40,3] 18[43,3] 19[46,3] 20[49,3] 21[52,3] 22[55,3] 23[58,3] 24[61,17] 25[78,1] 26[79,1] 27[80,3] 28[83,3] 29[86,3] 30[89,3] 31[92,3] 32[95,3] 33[98,3] 34[101,3] 35[104,3] 36[107,3] 37[110,3] 38[113,3] 39[116,3] 40[119,3] 41[122,3] 42[125,3] 43[128,3] 44[131,3] 45[134,3] 46[137,3] 47[140,3] 48[143,3] 49[146,3] 50[149,3] 51[152,3] 52[155,3] 53[158,3] 54[161,3] 55[164,3] 56[167,3] 57[170,3] 58[173,3] 59[176,3] 60[179,3] 61[182,3] 62[185,3] 63[188,3] 64[191,3] 65[194,3] 66[197,3] 67[200,3] 68[203,3] 69[206,3] 70[209,3] 71[212,3] 72[215,3] 73[218,3] 74[221,3] 75[224,3] 76[227,3] 77[230,3] 78[233,3] 79[236,3] 80[239,3] 81[242,3] 82[245,3] 83[248,3] 84[251,3] 85[254,3] 86[257,3] 87[260,3] 88[263,3] 89[266,3] 90[269,3] 91[272,3] 92[275,3] 93[278,3] 94[281,3] 95[284,3] 96[287,3] 97[290,3] 98[293,3] 99[296,3] 100[299,3] 101[302,3] 102[305,3] 103[308,3] 104[311,3] 105[314,3] 106[317,3] 107[320,3] 108[323,3] 109[326,3] 110[329,3] 111[332,3] 112[335,3] 113[338,3] 114[341,3] 115[344,3] 116[347,3] 117[350,3] 118[353,3] 119[356,3] 120[359,3] 121[362,3] 122[365,3] 123[368,3] 124[371,3] 125[374,3] 126[377,3] 127[380,3] 133[383,1] 134[384,1] 135[385,1] 136[386,1] 137[387,1] 138[388,1] 139[389,1] 141[390,1] 143[391,1] 145[392,1] 146[393,1] 147[394,1] 148[395,1] 150[396,1] 151[397,1] 152[398,1] 153[399,1] 154[400,1] 155[401,1] 156[402,1] 157[403,1] 158[404,1] 160[405,1] 162[406,1] 165[407,1] 167[408,1] 168[409,1] 169[410,1] 170[411,1] 172[412,1] 173[413,1] 174[414,1] 176[415,1] 179[416,1] 182[417,1] 184[418,1] 185[419,1] 186[420,1] 187[421,1] 189[422,1] 190[423,1] 191[424,1] 193[425,1] 196[426,1] 199[427,1] 201[428,1] 202[429,1] 203[430,1] 204[431,1] 206[432,1] 207[433,1] 208[434,1] 210[435,1] 213[436,1] 216[437,1] 218[438,1] 219[439,1] 220[440,1] 221[441,1] 223[442,1] 224[443,1] 225[444,1] 226[445,1] 227[446,1] 228[447,1] 229[448,1] 230[449,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d7(0){ }d13(1){ }d19(2){ }d23(3){ }d24(11){ }d28(12){ }d29(13){ }d33(14){ }d78(25){ }d79(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
7, 13, 19, 23, 24, 28, 29, 33, 78, 79
;; rd  kill	(36)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 78, 79
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(10)
7, 13, 19, 23, 24, 28, 29, 33, 78, 79

( 0 )->[2]->( 3 22 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d24(bb 0 insn -1) }u1(13){ d29(bb 0 insn -1) }u2(25){ d78(bb 0 insn -1) }u3(26){ d79(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 137 138
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 137 138
;; live  kill	 24 [cc]
;; rd  in  	(10)
7, 13, 19, 23, 24, 28, 29, 33, 78, 79
;; rd  gen 	(3)
76, 387, 388
;; rd  kill	(19)
61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 387, 388
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138
;; rd  out 	(13)
7, 13, 19, 23, 24, 28, 29, 33, 76, 78, 79, 387, 388
;;  UD chains for artificial uses
;;   reg 11 { d24(bb 0 insn -1) }
;;   reg 13 { d29(bb 0 insn -1) }
;;   reg 25 { d78(bb 0 insn -1) }
;;   reg 26 { d79(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 6
;;      reg 138 { d388(bb 2 insn 5) }
;;   UD chains for insn luid 2 uid 7
;;      reg 137 { d387(bb 2 insn 6) }
;;   UD chains for insn luid 3 uid 8
;;      reg 24 { d76(bb 2 insn 7) }

( 2 )->[3]->( 16 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u7(11){ d24(bb 0 insn -1) }u8(13){ d29(bb 0 insn -1) }u9(25){ d78(bb 0 insn -1) }u10(26){ d79(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 24 [cc] 141 143
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; live  gen 	 24 [cc] 141 143
;; live  kill	
;; rd  in  	(13)
7, 13, 19, 23, 24, 28, 29, 33, 76, 78, 79, 387, 388
;; rd  gen 	(3)
75, 390, 391
;; rd  kill	(19)
61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 390, 391
;; lr  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 141
;; live  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 141
;; rd  out 	(15)
7, 13, 19, 23, 24, 28, 29, 33, 75, 78, 79, 387, 388, 390, 391
;;  UD chains for artificial uses
;;   reg 11 { d24(bb 0 insn -1) }
;;   reg 13 { d29(bb 0 insn -1) }
;;   reg 25 { d78(bb 0 insn -1) }
;;   reg 26 { d79(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 11
;;      reg 138 { d388(bb 2 insn 5) }
;;   eq_note reg 138 { }
;;   UD chains for insn luid 2 uid 13
;;      reg 141 { d390(bb 3 insn 11) }
;;      reg 143 { d391(bb 3 insn 12) }
;;   eq_note reg 141 { }
;;   UD chains for insn luid 3 uid 14
;;      reg 24 { d75(bb 3 insn 13) }

( 3 )->[4]->( 9 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u17(11){ d24(bb 0 insn -1) }u18(13){ d29(bb 0 insn -1) }u19(25){ d78(bb 0 insn -1) }u20(26){ d79(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 141
;; lr  use 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 141
;; live  gen 	
;; live  kill	
;; rd  in  	(15)
7, 13, 19, 23, 24, 28, 29, 33, 75, 78, 79, 387, 388, 390, 391
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; rd  out 	(15)
7, 13, 19, 23, 24, 28, 29, 33, 75, 78, 79, 387, 388, 390, 391
;;  UD chains for artificial uses
;;   reg 11 { d24(bb 0 insn -1) }
;;   reg 13 { d29(bb 0 insn -1) }
;;   reg 25 { d78(bb 0 insn -1) }
;;   reg 26 { d79(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 17
;;      reg 24 { d75(bb 3 insn 13) }

( 4 )->[5]->( 16 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u22(11){ d24(bb 0 insn -1) }u23(13){ d29(bb 0 insn -1) }u24(25){ d78(bb 0 insn -1) }u25(26){ d79(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 24 [cc] 145
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; live  gen 	 24 [cc] 145
;; live  kill	
;; rd  in  	(15)
7, 13, 19, 23, 24, 28, 29, 33, 75, 78, 79, 387, 388, 390, 391
;; rd  gen 	(2)
74, 392
;; rd  kill	(18)
61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 392
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; rd  out 	(16)
7, 13, 19, 23, 24, 28, 29, 33, 74, 78, 79, 387, 388, 390, 391, 392
;;  UD chains for artificial uses
;;   reg 11 { d24(bb 0 insn -1) }
;;   reg 13 { d29(bb 0 insn -1) }
;;   reg 25 { d78(bb 0 insn -1) }
;;   reg 26 { d79(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 19
;;      reg 141 { d390(bb 3 insn 11) }
;;      reg 145 { d392(bb 5 insn 18) }
;;   eq_note reg 141 { }
;;   UD chains for insn luid 2 uid 20
;;      reg 24 { d74(bb 5 insn 19) }

( 5 )->[6]->( 16 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u30(11){ d24(bb 0 insn -1) }u31(13){ d29(bb 0 insn -1) }u32(25){ d78(bb 0 insn -1) }u33(26){ d79(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 24 [cc] 146
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; live  gen 	 24 [cc] 146
;; live  kill	
;; rd  in  	(16)
7, 13, 19, 23, 24, 28, 29, 33, 74, 78, 79, 387, 388, 390, 391, 392
;; rd  gen 	(2)
73, 393
;; rd  kill	(18)
61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 393
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; rd  out 	(17)
7, 13, 19, 23, 24, 28, 29, 33, 73, 78, 79, 387, 388, 390, 391, 392, 393
;;  UD chains for artificial uses
;;   reg 11 { d24(bb 0 insn -1) }
;;   reg 13 { d29(bb 0 insn -1) }
;;   reg 25 { d78(bb 0 insn -1) }
;;   reg 26 { d79(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 22
;;      reg 141 { d390(bb 3 insn 11) }
;;      reg 146 { d393(bb 6 insn 21) }
;;   eq_note reg 141 { }
;;   UD chains for insn luid 2 uid 23
;;      reg 24 { d73(bb 6 insn 22) }

( 6 )->[7]->( 8 28 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u38(11){ d24(bb 0 insn -1) }u39(13){ d29(bb 0 insn -1) }u40(25){ d78(bb 0 insn -1) }u41(26){ d79(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 24 [cc] 147
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; live  gen 	 24 [cc] 147
;; live  kill	
;; rd  in  	(17)
7, 13, 19, 23, 24, 28, 29, 33, 73, 78, 79, 387, 388, 390, 391, 392, 393
;; rd  gen 	(2)
72, 394
;; rd  kill	(18)
61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 394
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(18)
7, 13, 19, 23, 24, 28, 29, 33, 72, 78, 79, 387, 388, 390, 391, 392, 393, 394
;;  UD chains for artificial uses
;;   reg 11 { d24(bb 0 insn -1) }
;;   reg 13 { d29(bb 0 insn -1) }
;;   reg 25 { d78(bb 0 insn -1) }
;;   reg 26 { d79(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 25
;;      reg 141 { d390(bb 3 insn 11) }
;;      reg 147 { d394(bb 7 insn 24) }
;;   eq_note reg 141 { }
;;   UD chains for insn luid 2 uid 26
;;      reg 24 { d72(bb 7 insn 25) }

( 7 )->[8]->( 17 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(11){ d24(bb 0 insn -1) }u-1(13){ d29(bb 0 insn -1) }u-1(25){ d78(bb 0 insn -1) }u-1(26){ d79(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(18)
7, 13, 19, 23, 24, 28, 29, 33, 72, 78, 79, 387, 388, 390, 391, 392, 393, 394
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(18)
7, 13, 19, 23, 24, 28, 29, 33, 72, 78, 79, 387, 388, 390, 391, 392, 393, 394
;;  UD chains for artificial uses
;;   reg 11 { d24(bb 0 insn -1) }
;;   reg 13 { d29(bb 0 insn -1) }
;;   reg 25 { d78(bb 0 insn -1) }
;;   reg 26 { d79(bb 0 insn -1) }

( 4 )->[9]->( 18 10 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u46(11){ d24(bb 0 insn -1) }u47(13){ d29(bb 0 insn -1) }u48(25){ d78(bb 0 insn -1) }u49(26){ d79(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 24 [cc] 148
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; live  gen 	 24 [cc] 148
;; live  kill	
;; rd  in  	(15)
7, 13, 19, 23, 24, 28, 29, 33, 75, 78, 79, 387, 388, 390, 391
;; rd  gen 	(2)
71, 395
;; rd  kill	(18)
61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 395
;; lr  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 141
;; live  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 141
;; rd  out 	(16)
7, 13, 19, 23, 24, 28, 29, 33, 71, 78, 79, 387, 388, 390, 391, 395
;;  UD chains for artificial uses
;;   reg 11 { d24(bb 0 insn -1) }
;;   reg 13 { d29(bb 0 insn -1) }
;;   reg 25 { d78(bb 0 insn -1) }
;;   reg 26 { d79(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 31
;;      reg 141 { d390(bb 3 insn 11) }
;;      reg 148 { d395(bb 9 insn 30) }
;;   eq_note reg 141 { }
;;   UD chains for insn luid 2 uid 32
;;      reg 24 { d71(bb 9 insn 31) }

( 9 )->[10]->( 13 11 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u54(11){ d24(bb 0 insn -1) }u55(13){ d29(bb 0 insn -1) }u56(25){ d78(bb 0 insn -1) }u57(26){ d79(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 141
;; lr  use 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 141
;; live  gen 	
;; live  kill	
;; rd  in  	(16)
7, 13, 19, 23, 24, 28, 29, 33, 71, 78, 79, 387, 388, 390, 391, 395
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; rd  out 	(16)
7, 13, 19, 23, 24, 28, 29, 33, 71, 78, 79, 387, 388, 390, 391, 395
;;  UD chains for artificial uses
;;   reg 11 { d24(bb 0 insn -1) }
;;   reg 13 { d29(bb 0 insn -1) }
;;   reg 25 { d78(bb 0 insn -1) }
;;   reg 26 { d79(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 35
;;      reg 24 { d71(bb 9 insn 31) }

( 10 )->[11]->( 12 28 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u59(11){ d24(bb 0 insn -1) }u60(13){ d29(bb 0 insn -1) }u61(25){ d78(bb 0 insn -1) }u62(26){ d79(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 24 [cc] 150
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; live  gen 	 24 [cc] 150
;; live  kill	
;; rd  in  	(16)
7, 13, 19, 23, 24, 28, 29, 33, 71, 78, 79, 387, 388, 390, 391, 395
;; rd  gen 	(2)
70, 396
;; rd  kill	(18)
61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 396
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(17)
7, 13, 19, 23, 24, 28, 29, 33, 70, 78, 79, 387, 388, 390, 391, 395, 396
;;  UD chains for artificial uses
;;   reg 11 { d24(bb 0 insn -1) }
;;   reg 13 { d29(bb 0 insn -1) }
;;   reg 25 { d78(bb 0 insn -1) }
;;   reg 26 { d79(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 37
;;      reg 141 { d390(bb 3 insn 11) }
;;      reg 150 { d396(bb 11 insn 36) }
;;   eq_note reg 141 { }
;;   UD chains for insn luid 2 uid 38
;;      reg 24 { d70(bb 11 insn 37) }

( 11 )->[12]->( 20 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(11){ d24(bb 0 insn -1) }u-1(13){ d29(bb 0 insn -1) }u-1(25){ d78(bb 0 insn -1) }u-1(26){ d79(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(17)
7, 13, 19, 23, 24, 28, 29, 33, 70, 78, 79, 387, 388, 390, 391, 395, 396
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(17)
7, 13, 19, 23, 24, 28, 29, 33, 70, 78, 79, 387, 388, 390, 391, 395, 396
;;  UD chains for artificial uses
;;   reg 11 { d24(bb 0 insn -1) }
;;   reg 13 { d29(bb 0 insn -1) }
;;   reg 25 { d78(bb 0 insn -1) }
;;   reg 26 { d79(bb 0 insn -1) }

( 10 )->[13]->( 19 14 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u67(11){ d24(bb 0 insn -1) }u68(13){ d29(bb 0 insn -1) }u69(25){ d78(bb 0 insn -1) }u70(26){ d79(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 24 [cc] 151
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; live  gen 	 24 [cc] 151
;; live  kill	
;; rd  in  	(16)
7, 13, 19, 23, 24, 28, 29, 33, 71, 78, 79, 387, 388, 390, 391, 395
;; rd  gen 	(2)
69, 397
;; rd  kill	(18)
61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 397
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; rd  out 	(17)
7, 13, 19, 23, 24, 28, 29, 33, 69, 78, 79, 387, 388, 390, 391, 395, 397
;;  UD chains for artificial uses
;;   reg 11 { d24(bb 0 insn -1) }
;;   reg 13 { d29(bb 0 insn -1) }
;;   reg 25 { d78(bb 0 insn -1) }
;;   reg 26 { d79(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 43
;;      reg 141 { d390(bb 3 insn 11) }
;;      reg 151 { d397(bb 13 insn 42) }
;;   eq_note reg 141 { }
;;   UD chains for insn luid 2 uid 44
;;      reg 24 { d69(bb 13 insn 43) }

( 13 )->[14]->( 15 28 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u75(11){ d24(bb 0 insn -1) }u76(13){ d29(bb 0 insn -1) }u77(25){ d78(bb 0 insn -1) }u78(26){ d79(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 24 [cc] 152
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; live  gen 	 24 [cc] 152
;; live  kill	
;; rd  in  	(17)
7, 13, 19, 23, 24, 28, 29, 33, 69, 78, 79, 387, 388, 390, 391, 395, 397
;; rd  gen 	(2)
68, 398
;; rd  kill	(18)
61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 398
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(18)
7, 13, 19, 23, 24, 28, 29, 33, 68, 78, 79, 387, 388, 390, 391, 395, 397, 398
;;  UD chains for artificial uses
;;   reg 11 { d24(bb 0 insn -1) }
;;   reg 13 { d29(bb 0 insn -1) }
;;   reg 25 { d78(bb 0 insn -1) }
;;   reg 26 { d79(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 46
;;      reg 141 { d390(bb 3 insn 11) }
;;      reg 152 { d398(bb 14 insn 45) }
;;   eq_note reg 141 { }
;;   UD chains for insn luid 2 uid 47
;;      reg 24 { d68(bb 14 insn 46) }

( 14 )->[15]->( 21 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(11){ d24(bb 0 insn -1) }u-1(13){ d29(bb 0 insn -1) }u-1(25){ d78(bb 0 insn -1) }u-1(26){ d79(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(18)
7, 13, 19, 23, 24, 28, 29, 33, 68, 78, 79, 387, 388, 390, 391, 395, 397, 398
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(18)
7, 13, 19, 23, 24, 28, 29, 33, 68, 78, 79, 387, 388, 390, 391, 395, 397, 398
;;  UD chains for artificial uses
;;   reg 11 { d24(bb 0 insn -1) }
;;   reg 13 { d29(bb 0 insn -1) }
;;   reg 25 { d78(bb 0 insn -1) }
;;   reg 26 { d79(bb 0 insn -1) }

( 3 5 6 )->[16]->( 28 )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u83(11){ d24(bb 0 insn -1) }u84(13){ d29(bb 0 insn -1) }u85(25){ d78(bb 0 insn -1) }u86(26){ d79(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 153 154
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 153 154
;; live  kill	
;; rd  in  	(19)
7, 13, 19, 23, 24, 28, 29, 33, 73, 74, 75, 78, 79, 387, 388, 390, 391, 392, 393
;; rd  gen 	(2)
399, 400
;; rd  kill	(2)
399, 400
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(21)
7, 13, 19, 23, 24, 28, 29, 33, 73, 74, 75, 78, 79, 387, 388, 390, 391, 392, 393, 399, 400
;;  UD chains for artificial uses
;;   reg 11 { d24(bb 0 insn -1) }
;;   reg 13 { d29(bb 0 insn -1) }
;;   reg 25 { d78(bb 0 insn -1) }
;;   reg 26 { d79(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 54
;;      reg 153 { d399(bb 16 insn 52) }
;;      reg 154 { d400(bb 16 insn 53) }

( 8 )->[17]->( 28 )
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u89(11){ d24(bb 0 insn -1) }u90(13){ d29(bb 0 insn -1) }u91(25){ d78(bb 0 insn -1) }u92(26){ d79(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 155 156
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 155 156
;; live  kill	
;; rd  in  	(18)
7, 13, 19, 23, 24, 28, 29, 33, 72, 78, 79, 387, 388, 390, 391, 392, 393, 394
;; rd  gen 	(2)
401, 402
;; rd  kill	(2)
401, 402
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(20)
7, 13, 19, 23, 24, 28, 29, 33, 72, 78, 79, 387, 388, 390, 391, 392, 393, 394, 401, 402
;;  UD chains for artificial uses
;;   reg 11 { d24(bb 0 insn -1) }
;;   reg 13 { d29(bb 0 insn -1) }
;;   reg 25 { d78(bb 0 insn -1) }
;;   reg 26 { d79(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 61
;;      reg 155 { d401(bb 17 insn 59) }
;;      reg 156 { d402(bb 17 insn 60) }

( 9 )->[18]->( 28 )
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u95(11){ d24(bb 0 insn -1) }u96(13){ d29(bb 0 insn -1) }u97(25){ d78(bb 0 insn -1) }u98(26){ d79(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 136 157 158 160 162 165 167 168 169 170 172
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 136 157 158 160 162 165 167 168 169 170 172
;; live  kill	
;; rd  in  	(16)
7, 13, 19, 23, 24, 28, 29, 33, 71, 78, 79, 387, 388, 390, 391, 395
;; rd  gen 	(11)
386, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412
;; rd  kill	(11)
386, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(27)
7, 13, 19, 23, 24, 28, 29, 33, 71, 78, 79, 386, 387, 388, 390, 391, 395, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412
;;  UD chains for artificial uses
;;   reg 11 { d24(bb 0 insn -1) }
;;   reg 13 { d29(bb 0 insn -1) }
;;   reg 25 { d78(bb 0 insn -1) }
;;   reg 26 { d79(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 68
;;      reg 157 { d403(bb 18 insn 66) }
;;      reg 158 { d404(bb 18 insn 67) }
;;   UD chains for insn luid 4 uid 71
;;      reg 157 { d403(bb 18 insn 66) }
;;      reg 160 { d405(bb 18 insn 70) }
;;   UD chains for insn luid 6 uid 74
;;      reg 157 { d403(bb 18 insn 66) }
;;      reg 162 { d406(bb 18 insn 73) }
;;   UD chains for insn luid 7 uid 77
;;      reg 162 { d406(bb 18 insn 73) }
;;   UD chains for insn luid 8 uid 78
;;      reg 157 { d403(bb 18 insn 66) }
;;      reg 165 { d407(bb 18 insn 77) }
;;   UD chains for insn luid 10 uid 81
;;      reg 136 { d386(bb 18 insn 79) }
;;   UD chains for insn luid 11 uid 82
;;      reg 167 { d408(bb 18 insn 81) }
;;   UD chains for insn luid 12 uid 83
;;      reg 168 { d409(bb 18 insn 82) }
;;   UD chains for insn luid 13 uid 84
;;      reg 157 { d403(bb 18 insn 66) }
;;      reg 169 { d410(bb 18 insn 83) }
;;   UD chains for insn luid 15 uid 87
;;      reg 157 { d403(bb 18 insn 66) }
;;   UD chains for insn luid 16 uid 88
;;      reg 170 { d411(bb 18 insn 85) }
;;      reg 172 { d412(bb 18 insn 87) }

( 13 )->[19]->( 28 )
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u116(11){ d24(bb 0 insn -1) }u117(13){ d29(bb 0 insn -1) }u118(25){ d78(bb 0 insn -1) }u119(26){ d79(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 135 173 174 176 179 182 184 185 186 187 189
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 135 173 174 176 179 182 184 185 186 187 189
;; live  kill	
;; rd  in  	(17)
7, 13, 19, 23, 24, 28, 29, 33, 69, 78, 79, 387, 388, 390, 391, 395, 397
;; rd  gen 	(11)
385, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422
;; rd  kill	(11)
385, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(28)
7, 13, 19, 23, 24, 28, 29, 33, 69, 78, 79, 385, 387, 388, 390, 391, 395, 397, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422
;;  UD chains for artificial uses
;;   reg 11 { d24(bb 0 insn -1) }
;;   reg 13 { d29(bb 0 insn -1) }
;;   reg 25 { d78(bb 0 insn -1) }
;;   reg 26 { d79(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 95
;;      reg 173 { d413(bb 19 insn 93) }
;;      reg 174 { d414(bb 19 insn 94) }
;;   UD chains for insn luid 4 uid 98
;;      reg 173 { d413(bb 19 insn 93) }
;;      reg 176 { d415(bb 19 insn 97) }
;;   UD chains for insn luid 6 uid 102
;;      reg 173 { d413(bb 19 insn 93) }
;;      reg 179 { d416(bb 19 insn 101) }
;;   UD chains for insn luid 7 uid 105
;;      reg 179 { d416(bb 19 insn 101) }
;;   UD chains for insn luid 8 uid 106
;;      reg 173 { d413(bb 19 insn 93) }
;;      reg 182 { d417(bb 19 insn 105) }
;;   UD chains for insn luid 10 uid 109
;;      reg 135 { d385(bb 19 insn 107) }
;;   UD chains for insn luid 11 uid 110
;;      reg 184 { d418(bb 19 insn 109) }
;;   UD chains for insn luid 12 uid 111
;;      reg 185 { d419(bb 19 insn 110) }
;;   UD chains for insn luid 13 uid 112
;;      reg 173 { d413(bb 19 insn 93) }
;;      reg 186 { d420(bb 19 insn 111) }
;;   UD chains for insn luid 15 uid 115
;;      reg 173 { d413(bb 19 insn 93) }
;;   UD chains for insn luid 16 uid 116
;;      reg 187 { d421(bb 19 insn 113) }
;;      reg 189 { d422(bb 19 insn 115) }

( 12 )->[20]->( 28 )
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u137(11){ d24(bb 0 insn -1) }u138(13){ d29(bb 0 insn -1) }u139(25){ d78(bb 0 insn -1) }u140(26){ d79(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134 190 191 193 196 199 201 202 203 204 206
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 134 190 191 193 196 199 201 202 203 204 206
;; live  kill	
;; rd  in  	(17)
7, 13, 19, 23, 24, 28, 29, 33, 70, 78, 79, 387, 388, 390, 391, 395, 396
;; rd  gen 	(11)
384, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432
;; rd  kill	(11)
384, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(28)
7, 13, 19, 23, 24, 28, 29, 33, 70, 78, 79, 384, 387, 388, 390, 391, 395, 396, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432
;;  UD chains for artificial uses
;;   reg 11 { d24(bb 0 insn -1) }
;;   reg 13 { d29(bb 0 insn -1) }
;;   reg 25 { d78(bb 0 insn -1) }
;;   reg 26 { d79(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 123
;;      reg 190 { d423(bb 20 insn 121) }
;;      reg 191 { d424(bb 20 insn 122) }
;;   UD chains for insn luid 4 uid 126
;;      reg 190 { d423(bb 20 insn 121) }
;;      reg 193 { d425(bb 20 insn 125) }
;;   UD chains for insn luid 6 uid 130
;;      reg 190 { d423(bb 20 insn 121) }
;;      reg 196 { d426(bb 20 insn 129) }
;;   UD chains for insn luid 7 uid 133
;;      reg 196 { d426(bb 20 insn 129) }
;;   UD chains for insn luid 8 uid 134
;;      reg 190 { d423(bb 20 insn 121) }
;;      reg 199 { d427(bb 20 insn 133) }
;;   UD chains for insn luid 10 uid 137
;;      reg 134 { d384(bb 20 insn 135) }
;;   UD chains for insn luid 11 uid 138
;;      reg 201 { d428(bb 20 insn 137) }
;;   UD chains for insn luid 12 uid 139
;;      reg 202 { d429(bb 20 insn 138) }
;;   UD chains for insn luid 13 uid 140
;;      reg 190 { d423(bb 20 insn 121) }
;;      reg 203 { d430(bb 20 insn 139) }
;;   UD chains for insn luid 15 uid 143
;;      reg 190 { d423(bb 20 insn 121) }
;;   UD chains for insn luid 16 uid 144
;;      reg 204 { d431(bb 20 insn 141) }
;;      reg 206 { d432(bb 20 insn 143) }

( 15 )->[21]->( 28 )
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u158(11){ d24(bb 0 insn -1) }u159(13){ d29(bb 0 insn -1) }u160(25){ d78(bb 0 insn -1) }u161(26){ d79(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133 207 208 210 213 216 218 219 220 221 223
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 133 207 208 210 213 216 218 219 220 221 223
;; live  kill	
;; rd  in  	(18)
7, 13, 19, 23, 24, 28, 29, 33, 68, 78, 79, 387, 388, 390, 391, 395, 397, 398
;; rd  gen 	(11)
383, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442
;; rd  kill	(11)
383, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(29)
7, 13, 19, 23, 24, 28, 29, 33, 68, 78, 79, 383, 387, 388, 390, 391, 395, 397, 398, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442
;;  UD chains for artificial uses
;;   reg 11 { d24(bb 0 insn -1) }
;;   reg 13 { d29(bb 0 insn -1) }
;;   reg 25 { d78(bb 0 insn -1) }
;;   reg 26 { d79(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 151
;;      reg 207 { d433(bb 21 insn 149) }
;;      reg 208 { d434(bb 21 insn 150) }
;;   UD chains for insn luid 4 uid 154
;;      reg 207 { d433(bb 21 insn 149) }
;;      reg 210 { d435(bb 21 insn 153) }
;;   UD chains for insn luid 6 uid 158
;;      reg 207 { d433(bb 21 insn 149) }
;;      reg 213 { d436(bb 21 insn 157) }
;;   UD chains for insn luid 7 uid 161
;;      reg 213 { d436(bb 21 insn 157) }
;;   UD chains for insn luid 8 uid 162
;;      reg 207 { d433(bb 21 insn 149) }
;;      reg 216 { d437(bb 21 insn 161) }
;;   UD chains for insn luid 10 uid 165
;;      reg 133 { d383(bb 21 insn 163) }
;;   UD chains for insn luid 11 uid 166
;;      reg 218 { d438(bb 21 insn 165) }
;;   UD chains for insn luid 12 uid 167
;;      reg 219 { d439(bb 21 insn 166) }
;;   UD chains for insn luid 13 uid 168
;;      reg 207 { d433(bb 21 insn 149) }
;;      reg 220 { d440(bb 21 insn 167) }
;;   UD chains for insn luid 15 uid 171
;;      reg 207 { d433(bb 21 insn 149) }
;;   UD chains for insn luid 16 uid 172
;;      reg 221 { d441(bb 21 insn 169) }
;;      reg 223 { d442(bb 21 insn 171) }

( 2 )->[22]->( 23 28 )
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u179(11){ d24(bb 0 insn -1) }u180(13){ d29(bb 0 insn -1) }u181(25){ d78(bb 0 insn -1) }u182(26){ d79(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(13)
7, 13, 19, 23, 24, 28, 29, 33, 76, 78, 79, 387, 388
;; rd  gen 	(1)
67
;; rd  kill	(17)
61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; rd  out 	(13)
7, 13, 19, 23, 24, 28, 29, 33, 67, 78, 79, 387, 388
;;  UD chains for artificial uses
;;   reg 11 { d24(bb 0 insn -1) }
;;   reg 13 { d29(bb 0 insn -1) }
;;   reg 25 { d78(bb 0 insn -1) }
;;   reg 26 { d79(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 177
;;      reg 137 { d387(bb 2 insn 6) }
;;   UD chains for insn luid 1 uid 178
;;      reg 24 { d67(bb 22 insn 177) }

( 22 )->[23]->( 26 24 )
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u185(11){ d24(bb 0 insn -1) }u186(13){ d29(bb 0 insn -1) }u187(25){ d78(bb 0 insn -1) }u188(26){ d79(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 24 [cc] 224 225
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; live  gen 	 24 [cc] 224 225
;; live  kill	
;; rd  in  	(13)
7, 13, 19, 23, 24, 28, 29, 33, 67, 78, 79, 387, 388
;; rd  gen 	(3)
66, 443, 444
;; rd  kill	(19)
61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 443, 444
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 225
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 225
;; rd  out 	(15)
7, 13, 19, 23, 24, 28, 29, 33, 66, 78, 79, 387, 388, 443, 444
;;  UD chains for artificial uses
;;   reg 11 { d24(bb 0 insn -1) }
;;   reg 13 { d29(bb 0 insn -1) }
;;   reg 25 { d78(bb 0 insn -1) }
;;   reg 26 { d79(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 180
;;      reg 138 { d388(bb 2 insn 5) }
;;   UD chains for insn luid 1 uid 181
;;      reg 224 { d443(bb 23 insn 180) }
;;   UD chains for insn luid 2 uid 182
;;      reg 225 { d444(bb 23 insn 181) }
;;   UD chains for insn luid 3 uid 183
;;      reg 24 { d66(bb 23 insn 182) }

( 23 )->[24]->( 25 28 )
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u193(11){ d24(bb 0 insn -1) }u194(13){ d29(bb 0 insn -1) }u195(25){ d78(bb 0 insn -1) }u196(26){ d79(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 225
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 225
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 225
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(15)
7, 13, 19, 23, 24, 28, 29, 33, 66, 78, 79, 387, 388, 443, 444
;; rd  gen 	(1)
65
;; rd  kill	(17)
61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(15)
7, 13, 19, 23, 24, 28, 29, 33, 65, 78, 79, 387, 388, 443, 444
;;  UD chains for artificial uses
;;   reg 11 { d24(bb 0 insn -1) }
;;   reg 13 { d29(bb 0 insn -1) }
;;   reg 25 { d78(bb 0 insn -1) }
;;   reg 26 { d79(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 184
;;      reg 225 { d444(bb 23 insn 181) }
;;   UD chains for insn luid 1 uid 185
;;      reg 24 { d65(bb 24 insn 184) }

( 24 )->[25]->( 27 )
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(11){ d24(bb 0 insn -1) }u-1(13){ d29(bb 0 insn -1) }u-1(25){ d78(bb 0 insn -1) }u-1(26){ d79(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(15)
7, 13, 19, 23, 24, 28, 29, 33, 65, 78, 79, 387, 388, 443, 444
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(15)
7, 13, 19, 23, 24, 28, 29, 33, 65, 78, 79, 387, 388, 443, 444
;;  UD chains for artificial uses
;;   reg 11 { d24(bb 0 insn -1) }
;;   reg 13 { d29(bb 0 insn -1) }
;;   reg 25 { d78(bb 0 insn -1) }
;;   reg 26 { d79(bb 0 insn -1) }

( 23 )->[26]->( 28 )
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u199(11){ d24(bb 0 insn -1) }u200(13){ d29(bb 0 insn -1) }u201(25){ d78(bb 0 insn -1) }u202(26){ d79(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 226 227
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 226 227
;; live  kill	
;; rd  in  	(15)
7, 13, 19, 23, 24, 28, 29, 33, 66, 78, 79, 387, 388, 443, 444
;; rd  gen 	(2)
445, 446
;; rd  kill	(2)
445, 446
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(17)
7, 13, 19, 23, 24, 28, 29, 33, 66, 78, 79, 387, 388, 443, 444, 445, 446
;;  UD chains for artificial uses
;;   reg 11 { d24(bb 0 insn -1) }
;;   reg 13 { d29(bb 0 insn -1) }
;;   reg 25 { d78(bb 0 insn -1) }
;;   reg 26 { d79(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 192
;;      reg 226 { d445(bb 26 insn 190) }
;;      reg 227 { d446(bb 26 insn 191) }

( 25 )->[27]->( 28 )
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u205(11){ d24(bb 0 insn -1) }u206(13){ d29(bb 0 insn -1) }u207(25){ d78(bb 0 insn -1) }u208(26){ d79(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 228 229
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 228 229
;; live  kill	
;; rd  in  	(15)
7, 13, 19, 23, 24, 28, 29, 33, 65, 78, 79, 387, 388, 443, 444
;; rd  gen 	(2)
447, 448
;; rd  kill	(2)
447, 448
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(17)
7, 13, 19, 23, 24, 28, 29, 33, 65, 78, 79, 387, 388, 443, 444, 447, 448
;;  UD chains for artificial uses
;;   reg 11 { d24(bb 0 insn -1) }
;;   reg 13 { d29(bb 0 insn -1) }
;;   reg 25 { d78(bb 0 insn -1) }
;;   reg 26 { d79(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 199
;;      reg 228 { d447(bb 27 insn 197) }
;;      reg 229 { d448(bb 27 insn 198) }

( 11 22 24 21 27 14 20 19 18 17 16 7 26 )->[28]->( 29 30 )
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u211(11){ d24(bb 0 insn -1) }u212(13){ d29(bb 0 insn -1) }u213(25){ d78(bb 0 insn -1) }u214(26){ d79(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 139 230
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 139 230
;; live  kill	
;; rd  in  	(86)
7, 13, 19, 23, 24, 28, 29, 33, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 383, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448
;; rd  gen 	(3)
64, 389, 449
;; rd  kill	(19)
61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 389, 449
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; rd  out 	(78)
7, 13, 19, 23, 24, 28, 29, 33, 64, 78, 79, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449
;;  UD chains for artificial uses
;;   reg 11 { d24(bb 0 insn -1) }
;;   reg 13 { d29(bb 0 insn -1) }
;;   reg 25 { d78(bb 0 insn -1) }
;;   reg 26 { d79(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 203
;;      reg 230 { d449(bb 28 insn 202) }
;;   UD chains for insn luid 2 uid 204
;;      reg 139 { d389(bb 28 insn 203) }
;;   UD chains for insn luid 3 uid 205
;;      reg 24 { d64(bb 28 insn 204) }

( 28 )->[29]->( 31 )
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u218(11){ d24(bb 0 insn -1) }u219(13){ d29(bb 0 insn -1) }u220(25){ d78(bb 0 insn -1) }u221(26){ d79(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	 14 [lr]
;; rd  in  	(78)
7, 13, 19, 23, 24, 28, 29, 33, 64, 78, 79, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449
;; rd  gen 	(1)
6
;; rd  kill	(12)
0, 1, 2, 3, 4, 5, 6, 7, 30, 31, 32, 33
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(77)
6, 13, 19, 23, 24, 28, 29, 64, 78, 79, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449
;;  UD chains for artificial uses
;;   reg 11 { d24(bb 0 insn -1) }
;;   reg 13 { d29(bb 0 insn -1) }
;;   reg 25 { d78(bb 0 insn -1) }
;;   reg 26 { d79(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 209
;;      reg 139 { d389(bb 28 insn 203) }
;;   UD chains for insn luid 2 uid 210
;;      reg 139 { d389(bb 28 insn 203) }
;;   UD chains for insn luid 3 uid 211
;;      reg 13 { d29(bb 0 insn -1) }
;;      reg 0 { d3(bb 29 insn 208) }
;;      reg 1 { d12(bb 29 insn 209) }
;;      reg 2 { d18(bb 29 insn 210) }

( 28 )->[30]->( 31 )
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u228(11){ d24(bb 0 insn -1) }u229(13){ d29(bb 0 insn -1) }u230(25){ d78(bb 0 insn -1) }u231(26){ d79(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]
;; rd  in  	(78)
7, 13, 19, 23, 24, 28, 29, 33, 64, 78, 79, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449
;; rd  gen 	(1)
5
;; rd  kill	(12)
0, 1, 2, 3, 4, 5, 6, 7, 30, 31, 32, 33
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(77)
5, 13, 19, 23, 24, 28, 29, 64, 78, 79, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449
;;  UD chains for artificial uses
;;   reg 11 { d24(bb 0 insn -1) }
;;   reg 13 { d29(bb 0 insn -1) }
;;   reg 25 { d78(bb 0 insn -1) }
;;   reg 26 { d79(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 218
;;      reg 13 { d29(bb 0 insn -1) }
;;      reg 0 { d2(bb 30 insn 217) }

( 30 29 )->[31]->( 1 )
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u234(11){ d24(bb 0 insn -1) }u235(13){ d29(bb 0 insn -1) }u236(25){ d78(bb 0 insn -1) }u237(26){ d79(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	 14 [lr]
;; rd  in  	(78)
5, 6, 13, 19, 23, 24, 28, 29, 64, 78, 79, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449
;; rd  gen 	(1)
0
;; rd  kill	(12)
0, 1, 2, 3, 4, 5, 6, 7, 30, 31, 32, 33
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(77)
0, 13, 19, 23, 24, 28, 29, 64, 78, 79, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449
;;  UD chains for artificial uses
;;   reg 11 { d24(bb 0 insn -1) }
;;   reg 13 { d29(bb 0 insn -1) }
;;   reg 25 { d78(bb 0 insn -1) }
;;   reg 26 { d79(bb 0 insn -1) }
;;   UD chains for insn luid 3 uid 226
;;      reg 13 { d29(bb 0 insn -1) }
;;      reg 0 { d1(bb 31 insn 223) }
;;      reg 1 { d8(bb 31 insn 224) }
;;      reg 2 { d15(bb 31 insn 225) }
;;   UD chains for insn luid 5 uid 237
;;      reg 0 { d0(bb 31 insn 231) }

( 31 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u243(0){ d0(bb 31 insn 231) }u244(11){ d24(bb 0 insn -1) }u245(13){ d29(bb 0 insn -1) }u246(14){ }u247(25){ d78(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(77)
0, 13, 19, 23, 24, 28, 29, 64, 78, 79, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(77)
0, 13, 19, 23, 24, 28, 29, 64, 78, 79, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449
;;  UD chains for artificial uses
;;   reg 0 { d0(bb 31 insn 231) }
;;   reg 11 { d24(bb 0 insn -1) }
;;   reg 13 { d29(bb 0 insn -1) }
;;   reg 14 { }
;;   reg 25 { d78(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 8 to worklist
  Adding insn 14 to worklist
  Adding insn 17 to worklist
  Adding insn 20 to worklist
  Adding insn 23 to worklist
  Adding insn 26 to worklist
  Adding insn 256 to worklist
  Adding insn 32 to worklist
  Adding insn 35 to worklist
  Adding insn 38 to worklist
  Adding insn 259 to worklist
  Adding insn 44 to worklist
  Adding insn 47 to worklist
  Adding insn 262 to worklist
  Adding insn 264 to worklist
  Adding insn 54 to worklist
  Adding insn 266 to worklist
  Adding insn 61 to worklist
  Adding insn 268 to worklist
  Adding insn 88 to worklist
  Adding insn 84 to worklist
  Adding insn 79 to worklist
  Adding insn 78 to worklist
  Adding insn 74 to worklist
  Adding insn 71 to worklist
  Adding insn 68 to worklist
  Adding insn 270 to worklist
  Adding insn 116 to worklist
  Adding insn 112 to worklist
  Adding insn 107 to worklist
  Adding insn 106 to worklist
  Adding insn 102 to worklist
  Adding insn 98 to worklist
  Adding insn 95 to worklist
  Adding insn 272 to worklist
  Adding insn 144 to worklist
  Adding insn 140 to worklist
  Adding insn 135 to worklist
  Adding insn 134 to worklist
  Adding insn 130 to worklist
  Adding insn 126 to worklist
  Adding insn 123 to worklist
  Adding insn 274 to worklist
  Adding insn 172 to worklist
  Adding insn 168 to worklist
  Adding insn 163 to worklist
  Adding insn 162 to worklist
  Adding insn 158 to worklist
  Adding insn 154 to worklist
  Adding insn 151 to worklist
  Adding insn 178 to worklist
  Adding insn 183 to worklist
  Adding insn 185 to worklist
  Adding insn 277 to worklist
  Adding insn 279 to worklist
  Adding insn 192 to worklist
  Adding insn 199 to worklist
  Adding insn 205 to worklist
  Adding insn 281 to worklist
  Adding insn 211 to worklist
  Adding insn 218 to worklist
  Adding insn 237 to worklist
  Adding insn 226 to worklist
Finished finding needed instructions:
  Adding insn 231 to worklist
Processing use of (reg 13 sp) in insn 226:
Processing use of (reg 0 r0) in insn 226:
  Adding insn 223 to worklist
Processing use of (reg 1 r1) in insn 226:
  Adding insn 224 to worklist
Processing use of (reg 2 r2) in insn 226:
  Adding insn 225 to worklist
Processing use of (reg 0 r0) in insn 237:
Processing use of (reg 13 sp) in insn 218:
Processing use of (reg 0 r0) in insn 218:
  Adding insn 217 to worklist
Processing use of (reg 13 sp) in insn 211:
Processing use of (reg 0 r0) in insn 211:
  Adding insn 208 to worklist
Processing use of (reg 1 r1) in insn 211:
  Adding insn 209 to worklist
Processing use of (reg 2 r2) in insn 211:
  Adding insn 210 to worklist
Processing use of (reg 139 [ armpmu.403 ]) in insn 210:
  Adding insn 203 to worklist
Processing use of (reg 230) in insn 203:
  Adding insn 202 to worklist
Processing use of (reg 139 [ armpmu.403 ]) in insn 209:
Processing use of (reg 24 cc) in insn 205:
  Adding insn 204 to worklist
Processing use of (reg 139 [ armpmu.403 ]) in insn 204:
Processing use of (reg 228) in insn 199:
  Adding insn 197 to worklist
Processing use of (reg 229) in insn 199:
  Adding insn 198 to worklist
Processing use of (reg 226) in insn 192:
  Adding insn 190 to worklist
Processing use of (reg 227) in insn 192:
  Adding insn 191 to worklist
Processing use of (reg 24 cc) in insn 185:
  Adding insn 184 to worklist
Processing use of (reg 225) in insn 184:
  Adding insn 181 to worklist
Processing use of (reg 224) in insn 181:
  Adding insn 180 to worklist
Processing use of (reg 138 [ cpuid ]) in insn 180:
  Adding insn 5 to worklist
Processing use of (reg 24 cc) in insn 183:
  Adding insn 182 to worklist
Processing use of (reg 225) in insn 182:
Processing use of (reg 24 cc) in insn 178:
  Adding insn 177 to worklist
Processing use of (reg 137 [ implementor ]) in insn 177:
  Adding insn 6 to worklist
Processing use of (reg 138 [ cpuid ]) in insn 6:
Processing use of (reg 207) in insn 151:
  Adding insn 149 to worklist
Processing use of (reg 208) in insn 151:
  Adding insn 150 to worklist
Processing use of (reg 207) in insn 154:
Processing use of (reg 210) in insn 154:
  Adding insn 153 to worklist
Processing use of (reg 207) in insn 158:
Processing use of (reg 213) in insn 158:
  Adding insn 157 to worklist
Processing use of (reg 207) in insn 162:
Processing use of (reg 216) in insn 162:
  Adding insn 161 to worklist
Processing use of (reg 213) in insn 161:
Processing use of (reg 207) in insn 168:
Processing use of (reg 220) in insn 168:
  Adding insn 167 to worklist
Processing use of (reg 219) in insn 167:
  Adding insn 166 to worklist
Processing use of (reg 218) in insn 166:
  Adding insn 165 to worklist
Processing use of (reg 133 [ val ]) in insn 165:
Processing use of (reg 221) in insn 172:
  Adding insn 169 to worklist
Processing use of (reg 223) in insn 172:
  Adding insn 171 to worklist
Processing use of (reg 207) in insn 171:
Processing use of (reg 190) in insn 123:
  Adding insn 121 to worklist
Processing use of (reg 191) in insn 123:
  Adding insn 122 to worklist
Processing use of (reg 190) in insn 126:
Processing use of (reg 193) in insn 126:
  Adding insn 125 to worklist
Processing use of (reg 190) in insn 130:
Processing use of (reg 196) in insn 130:
  Adding insn 129 to worklist
Processing use of (reg 190) in insn 134:
Processing use of (reg 199) in insn 134:
  Adding insn 133 to worklist
Processing use of (reg 196) in insn 133:
Processing use of (reg 190) in insn 140:
Processing use of (reg 203) in insn 140:
  Adding insn 139 to worklist
Processing use of (reg 202) in insn 139:
  Adding insn 138 to worklist
Processing use of (reg 201) in insn 138:
  Adding insn 137 to worklist
Processing use of (reg 134 [ val ]) in insn 137:
Processing use of (reg 204) in insn 144:
  Adding insn 141 to worklist
Processing use of (reg 206) in insn 144:
  Adding insn 143 to worklist
Processing use of (reg 190) in insn 143:
Processing use of (reg 173) in insn 95:
  Adding insn 93 to worklist
Processing use of (reg 174) in insn 95:
  Adding insn 94 to worklist
Processing use of (reg 173) in insn 98:
Processing use of (reg 176) in insn 98:
  Adding insn 97 to worklist
Processing use of (reg 173) in insn 102:
Processing use of (reg 179) in insn 102:
  Adding insn 101 to worklist
Processing use of (reg 173) in insn 106:
Processing use of (reg 182) in insn 106:
  Adding insn 105 to worklist
Processing use of (reg 179) in insn 105:
Processing use of (reg 173) in insn 112:
Processing use of (reg 186) in insn 112:
  Adding insn 111 to worklist
Processing use of (reg 185) in insn 111:
  Adding insn 110 to worklist
Processing use of (reg 184) in insn 110:
  Adding insn 109 to worklist
Processing use of (reg 135 [ val ]) in insn 109:
Processing use of (reg 187) in insn 116:
  Adding insn 113 to worklist
Processing use of (reg 189) in insn 116:
  Adding insn 115 to worklist
Processing use of (reg 173) in insn 115:
Processing use of (reg 157) in insn 68:
  Adding insn 66 to worklist
Processing use of (reg 158) in insn 68:
  Adding insn 67 to worklist
Processing use of (reg 157) in insn 71:
Processing use of (reg 160) in insn 71:
  Adding insn 70 to worklist
Processing use of (reg 157) in insn 74:
Processing use of (reg 162) in insn 74:
  Adding insn 73 to worklist
Processing use of (reg 157) in insn 78:
Processing use of (reg 165) in insn 78:
  Adding insn 77 to worklist
Processing use of (reg 162) in insn 77:
Processing use of (reg 157) in insn 84:
Processing use of (reg 169) in insn 84:
  Adding insn 83 to worklist
Processing use of (reg 168) in insn 83:
  Adding insn 82 to worklist
Processing use of (reg 167) in insn 82:
  Adding insn 81 to worklist
Processing use of (reg 136 [ val ]) in insn 81:
Processing use of (reg 170) in insn 88:
  Adding insn 85 to worklist
Processing use of (reg 172) in insn 88:
  Adding insn 87 to worklist
Processing use of (reg 157) in insn 87:
Processing use of (reg 155) in insn 61:
  Adding insn 59 to worklist
Processing use of (reg 156) in insn 61:
  Adding insn 60 to worklist
Processing use of (reg 153) in insn 54:
  Adding insn 52 to worklist
Processing use of (reg 154) in insn 54:
  Adding insn 53 to worklist
Processing use of (reg 24 cc) in insn 47:
  Adding insn 46 to worklist
Processing use of (reg 141) in insn 46:
  Adding insn 11 to worklist
Processing use of (reg 152) in insn 46:
  Adding insn 45 to worklist
Processing use of (reg 138 [ cpuid ]) in insn 11:
Processing use of (reg 24 cc) in insn 44:
  Adding insn 43 to worklist
Processing use of (reg 141) in insn 43:
Processing use of (reg 151) in insn 43:
  Adding insn 42 to worklist
Processing use of (reg 24 cc) in insn 38:
  Adding insn 37 to worklist
Processing use of (reg 141) in insn 37:
Processing use of (reg 150) in insn 37:
  Adding insn 36 to worklist
Processing use of (reg 24 cc) in insn 35:
  Adding insn 31 to worklist
Processing use of (reg 141) in insn 31:
Processing use of (reg 148) in insn 31:
  Adding insn 30 to worklist
Processing use of (reg 24 cc) in insn 32:
Processing use of (reg 24 cc) in insn 26:
  Adding insn 25 to worklist
Processing use of (reg 141) in insn 25:
Processing use of (reg 147) in insn 25:
  Adding insn 24 to worklist
Processing use of (reg 24 cc) in insn 23:
  Adding insn 22 to worklist
Processing use of (reg 141) in insn 22:
Processing use of (reg 146) in insn 22:
  Adding insn 21 to worklist
Processing use of (reg 24 cc) in insn 20:
  Adding insn 19 to worklist
Processing use of (reg 141) in insn 19:
Processing use of (reg 145) in insn 19:
  Adding insn 18 to worklist
Processing use of (reg 24 cc) in insn 17:
  Adding insn 13 to worklist
Processing use of (reg 141) in insn 13:
Processing use of (reg 143) in insn 13:
  Adding insn 12 to worklist
Processing use of (reg 24 cc) in insn 14:
Processing use of (reg 24 cc) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 137 [ implementor ]) in insn 7:


init_hw_perf_events

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={8d,5u} r1={6d,2u} r2={6d,2u} r3={4d} r11={1d,31u} r12={4d} r13={1d,34u} r14={4d,1u} r15={3d} r16={3d} r17={3d} r18={3d} r19={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={17d,15u} r25={1d,31u} r26={1d,30u} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r81={3d} r82={3d} r83={3d} r84={3d} r85={3d} r86={3d} r87={3d} r88={3d} r89={3d} r90={3d} r91={3d} r92={3d} r93={3d} r94={3d} r95={3d} r96={3d} r97={3d} r98={3d} r99={3d} r100={3d} r101={3d} r102={3d} r103={3d} r104={3d} r105={3d} r106={3d} r107={3d} r108={3d} r109={3d} r110={3d} r111={3d} r112={3d} r113={3d} r114={3d} r115={3d} r116={3d} r117={3d} r118={3d} r119={3d} r120={3d} r121={3d} r122={3d} r123={3d} r124={3d} r125={3d} r126={3d} r127={3d} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,2u} r138={1d,3u,1d} r139={1d,3u} r141={1d,8u,8d} r143={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,6u} r158={1d,1u} r160={1d,1u} r162={1d,2u} r165={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r172={1d,1u} r173={1d,6u} r174={1d,1u} r176={1d,1u} r179={1d,2u} r182={1d,1u} r184={1d,1u} r185={1d,1u} r186={1d,1u} r187={1d,1u} r189={1d,1u} r190={1d,6u} r191={1d,1u} r193={1d,1u} r196={1d,2u} r199={1d,1u} r201={1d,1u} r202={1d,1u} r203={1d,1u} r204={1d,1u} r206={1d,1u} r207={1d,6u} r208={1d,1u} r210={1d,1u} r213={1d,2u} r216={1d,1u} r218={1d,1u} r219={1d,1u} r220={1d,1u} r221={1d,1u} r223={1d,1u} r224={1d,1u} r225={1d,2u} r226={1d,1u} r227={1d,1u} r228={1d,1u} r229={1d,1u} r230={1d,1u} 
;;    total ref usage 714{450d,255u,9e} in 147{144 regular + 3 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382
0[0,8] 1[8,6] 2[14,6] 3[20,4] 11[24,1] 12[25,4] 13[29,1] 14[30,4] 15[34,3] 16[37,3] 17[40,3] 18[43,3] 19[46,3] 20[49,3] 21[52,3] 22[55,3] 23[58,3] 24[61,17] 25[78,1] 26[79,1] 27[80,3] 28[83,3] 29[86,3] 30[89,3] 31[92,3] 32[95,3] 33[98,3] 34[101,3] 35[104,3] 36[107,3] 37[110,3] 38[113,3] 39[116,3] 40[119,3] 41[122,3] 42[125,3] 43[128,3] 44[131,3] 45[134,3] 46[137,3] 47[140,3] 48[143,3] 49[146,3] 50[149,3] 51[152,3] 52[155,3] 53[158,3] 54[161,3] 55[164,3] 56[167,3] 57[170,3] 58[173,3] 59[176,3] 60[179,3] 61[182,3] 62[185,3] 63[188,3] 64[191,3] 65[194,3] 66[197,3] 67[200,3] 68[203,3] 69[206,3] 70[209,3] 71[212,3] 72[215,3] 73[218,3] 74[221,3] 75[224,3] 76[227,3] 77[230,3] 78[233,3] 79[236,3] 80[239,3] 81[242,3] 82[245,3] 83[248,3] 84[251,3] 85[254,3] 86[257,3] 87[260,3] 88[263,3] 89[266,3] 90[269,3] 91[272,3] 92[275,3] 93[278,3] 94[281,3] 95[284,3] 96[287,3] 97[290,3] 98[293,3] 99[296,3] 100[299,3] 101[302,3] 102[305,3] 103[308,3] 104[311,3] 105[314,3] 106[317,3] 107[320,3] 108[323,3] 109[326,3] 110[329,3] 111[332,3] 112[335,3] 113[338,3] 114[341,3] 115[344,3] 116[347,3] 117[350,3] 118[353,3] 119[356,3] 120[359,3] 121[362,3] 122[365,3] 123[368,3] 124[371,3] 125[374,3] 126[377,3] 127[380,3] 133[383,1] 134[384,1] 135[385,1] 136[386,1] 137[387,1] 138[388,1] 139[389,1] 141[390,1] 143[391,1] 145[392,1] 146[393,1] 147[394,1] 148[395,1] 150[396,1] 151[397,1] 152[398,1] 153[399,1] 154[400,1] 155[401,1] 156[402,1] 157[403,1] 158[404,1] 160[405,1] 162[406,1] 165[407,1] 167[408,1] 168[409,1] 169[410,1] 170[411,1] 172[412,1] 173[413,1] 174[414,1] 176[415,1] 179[416,1] 182[417,1] 184[418,1] 185[419,1] 186[420,1] 187[421,1] 189[422,1] 190[423,1] 191[424,1] 193[425,1] 196[426,1] 199[427,1] 201[428,1] 202[429,1] 203[430,1] 204[431,1] 206[432,1] 207[433,1] 208[434,1] 210[435,1] 213[436,1] 216[437,1] 218[438,1] 219[439,1] 220[440,1] 221[441,1] 223[442,1] 224[443,1] 225[444,1] 226[445,1] 227[446,1] 228[447,1] 229[448,1] 230[449,1] 
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 137 138
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 137 138
;; live  kill	 24 [cc]
;; rd  in  	(10)
7, 13, 19, 23, 24, 28, 29, 33, 78, 79
;; rd  gen 	(3)
76, 387, 388
;; rd  kill	(19)
61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 387, 388

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)

(insn 5 2 6 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/cputype.h:60 (parallel [
            (set (reg/v:SI 138 [ cpuid ])
                (asm_operands:SI ("mrc	p15, 0, %0, c0, c0, 0") ("=r") 0 []
                     [] 8511357))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(insn 6 5 7 2 arch/arm/kernel/perf_event.c:645 (set (reg/v:SI 137 [ implementor ])
        (lshiftrt:SI (reg/v:SI 138 [ cpuid ])
            (const_int 24 [0x18]))) 117 {*arm_shiftsi3} (nil))

(insn 7 6 8 2 arch/arm/kernel/perf_event.c:649 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 137 [ implementor ])
            (const_int 65 [0x41]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 8 7 9 2 arch/arm/kernel/perf_event.c:649 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 175)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 2 -> ( 3 22)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138
;; rd  out 	(13)
7, 13, 19, 23, 24, 28, 29, 33, 76, 78, 79, 387, 388


;; Succ edge  3 [28.0%]  (fallthru)
;; Succ edge  22 [72.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u7(11){ }u8(13){ }u9(25){ }u10(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 24 [cc] 141 143
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; live  gen 	 24 [cc] 141 143
;; live  kill	
;; rd  in  	(13)
7, 13, 19, 23, 24, 28, 29, 33, 76, 78, 79, 387, 388
;; rd  gen 	(3)
75, 390, 391
;; rd  kill	(19)
61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 390, 391

;; Pred edge  2 [28.0%]  (fallthru)
(note 9 8 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 11 9 12 3 arch/arm/kernel/perf_event.c:650 (set (reg:SI 141)
        (and:SI (reg/v:SI 138 [ cpuid ])
            (const_int 65520 [0xfff0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg/v:SI 138 [ cpuid ])
        (expr_list:REG_EQUAL (and:SI (reg/v:SI 138 [ cpuid ])
                (const_int 65520 [0xfff0]))
            (nil))))

(insn 12 11 13 3 arch/arm/kernel/perf_event.c:650 (set (reg:SI 143)
        (const_int 46944 [0xb760])) 167 {*arm_movsi_insn} (nil))

(insn 13 12 14 3 arch/arm/kernel/perf_event.c:650 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 141)
            (reg:SI 143))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 143)
        (expr_list:REG_EQUAL (compare:CC (reg:SI 141)
                (const_int 46944 [0xb760]))
            (nil))))

(jump_insn 14 13 239 3 arch/arm/kernel/perf_event.c:650 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 50)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
        (nil)))
;; End of basic block 3 -> ( 16 4)
;; lr  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 141
;; live  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 141
;; rd  out 	(15)
7, 13, 19, 23, 24, 28, 29, 33, 75, 78, 79, 387, 388, 390, 391


;; Succ edge  16 [29.0%] 
;; Succ edge  4 [71.0%]  (fallthru)

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u17(11){ }u18(13){ }u19(25){ }u20(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 141
;; lr  use 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 141
;; live  gen 	
;; live  kill	
;; rd  in  	(15)
7, 13, 19, 23, 24, 28, 29, 33, 75, 78, 79, 387, 388, 390, 391
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  3 [71.0%]  (fallthru)
(note 239 14 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(jump_insn 17 239 240 4 arch/arm/kernel/perf_event.c:650 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 29)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 4 -> ( 9 5)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; rd  out 	(15)
7, 13, 19, 23, 24, 28, 29, 33, 75, 78, 79, 387, 388, 390, 391


;; Succ edge  9 [50.0%] 
;; Succ edge  5 [50.0%]  (fallthru)

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u22(11){ }u23(13){ }u24(25){ }u25(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 24 [cc] 145
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; live  gen 	 24 [cc] 145
;; live  kill	
;; rd  in  	(15)
7, 13, 19, 23, 24, 28, 29, 33, 75, 78, 79, 387, 388, 390, 391
;; rd  gen 	(2)
74, 392
;; rd  kill	(18)
61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 392

;; Pred edge  4 [50.0%]  (fallthru)
(note 240 17 18 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 18 240 19 5 arch/arm/kernel/perf_event.c:650 (set (reg:SI 145)
        (const_int 45920 [0xb360])) 167 {*arm_movsi_insn} (nil))

(insn 19 18 20 5 arch/arm/kernel/perf_event.c:650 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 141)
            (reg:SI 145))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 145)
        (expr_list:REG_EQUAL (compare:CC (reg:SI 141)
                (const_int 45920 [0xb360]))
            (nil))))

(jump_insn 20 19 241 5 arch/arm/kernel/perf_event.c:650 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 50)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
            (nil))))
;; End of basic block 5 -> ( 16 6)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; rd  out 	(16)
7, 13, 19, 23, 24, 28, 29, 33, 74, 78, 79, 387, 388, 390, 391, 392


;; Succ edge  16 [29.0%] 
;; Succ edge  6 [71.0%]  (fallthru)

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u30(11){ }u31(13){ }u32(25){ }u33(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 24 [cc] 146
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; live  gen 	 24 [cc] 146
;; live  kill	
;; rd  in  	(16)
7, 13, 19, 23, 24, 28, 29, 33, 74, 78, 79, 387, 388, 390, 391, 392
;; rd  gen 	(2)
73, 393
;; rd  kill	(18)
61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 393

;; Pred edge  5 [71.0%]  (fallthru)
(note 241 20 21 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 21 241 22 6 arch/arm/kernel/perf_event.c:650 (set (reg:SI 146)
        (const_int 46432 [0xb560])) 167 {*arm_movsi_insn} (nil))

(insn 22 21 23 6 arch/arm/kernel/perf_event.c:650 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 141)
            (reg:SI 146))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 146)
        (expr_list:REG_EQUAL (compare:CC (reg:SI 141)
                (const_int 46432 [0xb560]))
            (nil))))

(jump_insn 23 22 242 6 arch/arm/kernel/perf_event.c:650 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 50)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
            (nil))))
;; End of basic block 6 -> ( 16 7)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; rd  out 	(17)
7, 13, 19, 23, 24, 28, 29, 33, 73, 78, 79, 387, 388, 390, 391, 392, 393


;; Succ edge  16 [29.0%] 
;; Succ edge  7 [71.0%]  (fallthru)

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u38(11){ }u39(13){ }u40(25){ }u41(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 24 [cc] 147
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; live  gen 	 24 [cc] 147
;; live  kill	
;; rd  in  	(17)
7, 13, 19, 23, 24, 28, 29, 33, 73, 78, 79, 387, 388, 390, 391, 392, 393
;; rd  gen 	(2)
72, 394
;; rd  kill	(18)
61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 394

;; Pred edge  6 [71.0%]  (fallthru)
(note 242 23 24 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 24 242 25 7 arch/arm/kernel/perf_event.c:650 (set (reg:SI 147)
        (const_int 45088 [0xb020])) 167 {*arm_movsi_insn} (nil))

(insn 25 24 26 7 arch/arm/kernel/perf_event.c:650 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 141)
            (reg:SI 147))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 147)
        (expr_list:REG_DEAD (reg:SI 141)
            (expr_list:REG_EQUAL (compare:CC (reg:SI 141)
                    (const_int 45088 [0xb020]))
                (nil)))))

(jump_insn 26 25 255 7 arch/arm/kernel/perf_event.c:650 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 200)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 7 -> ( 8 28)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(18)
7, 13, 19, 23, 24, 28, 29, 33, 72, 78, 79, 387, 388, 390, 391, 392, 393, 394


;; Succ edge  8 [29.0%]  (fallthru)
;; Succ edge  28 [71.0%] 

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(18)
7, 13, 19, 23, 24, 28, 29, 33, 72, 78, 79, 387, 388, 390, 391, 392, 393, 394
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  7 [29.0%]  (fallthru)
(note 255 26 256 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(jump_insn 256 255 257 8 (set (pc)
        (label_ref 57)) -1 (nil))
;; End of basic block 8 -> ( 17)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(18)
7, 13, 19, 23, 24, 28, 29, 33, 72, 78, 79, 387, 388, 390, 391, 392, 393, 394


;; Succ edge  17 [100.0%] 

(barrier 257 256 29)

;; Start of basic block ( 4) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u46(11){ }u47(13){ }u48(25){ }u49(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 24 [cc] 148
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; live  gen 	 24 [cc] 148
;; live  kill	
;; rd  in  	(15)
7, 13, 19, 23, 24, 28, 29, 33, 75, 78, 79, 387, 388, 390, 391
;; rd  gen 	(2)
71, 395
;; rd  kill	(18)
61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 395

;; Pred edge  4 [50.0%] 
(code_label 29 257 244 9 103 "" [1 uses])

(note 244 29 30 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 30 244 31 9 arch/arm/kernel/perf_event.c:650 (set (reg:SI 148)
        (const_int 49280 [0xc080])) 167 {*arm_movsi_insn} (nil))

(insn 31 30 32 9 arch/arm/kernel/perf_event.c:650 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 141)
            (reg:SI 148))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 148)
        (expr_list:REG_EQUAL (compare:CC (reg:SI 141)
                (const_int 49280 [0xc080]))
            (nil))))

(jump_insn 32 31 245 9 arch/arm/kernel/perf_event.c:650 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 64)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
        (nil)))
;; End of basic block 9 -> ( 18 10)
;; lr  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 141
;; live  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 141
;; rd  out 	(16)
7, 13, 19, 23, 24, 28, 29, 33, 71, 78, 79, 387, 388, 390, 391, 395


;; Succ edge  18 [29.0%] 
;; Succ edge  10 [71.0%]  (fallthru)

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u54(11){ }u55(13){ }u56(25){ }u57(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 141
;; lr  use 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 141
;; live  gen 	
;; live  kill	
;; rd  in  	(16)
7, 13, 19, 23, 24, 28, 29, 33, 71, 78, 79, 387, 388, 390, 391, 395
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  9 [71.0%]  (fallthru)
(note 245 32 35 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(jump_insn 35 245 246 10 arch/arm/kernel/perf_event.c:650 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 41)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 10 -> ( 13 11)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; rd  out 	(16)
7, 13, 19, 23, 24, 28, 29, 33, 71, 78, 79, 387, 388, 390, 391, 395


;; Succ edge  13 [50.0%] 
;; Succ edge  11 [50.0%]  (fallthru)

;; Start of basic block ( 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u59(11){ }u60(13){ }u61(25){ }u62(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 24 [cc] 150
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; live  gen 	 24 [cc] 150
;; live  kill	
;; rd  in  	(16)
7, 13, 19, 23, 24, 28, 29, 33, 71, 78, 79, 387, 388, 390, 391, 395
;; rd  gen 	(2)
70, 396
;; rd  kill	(18)
61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 396

;; Pred edge  10 [50.0%]  (fallthru)
(note 246 35 36 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 36 246 37 11 arch/arm/kernel/perf_event.c:650 (set (reg:SI 150)
        (const_int 49232 [0xc050])) 167 {*arm_movsi_insn} (nil))

(insn 37 36 38 11 arch/arm/kernel/perf_event.c:650 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 141)
            (reg:SI 150))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 150)
        (expr_list:REG_DEAD (reg:SI 141)
            (expr_list:REG_EQUAL (compare:CC (reg:SI 141)
                    (const_int 49232 [0xc050]))
                (nil)))))

(jump_insn 38 37 258 11 arch/arm/kernel/perf_event.c:650 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 200)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 11 -> ( 12 28)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(17)
7, 13, 19, 23, 24, 28, 29, 33, 70, 78, 79, 387, 388, 390, 391, 395, 396


;; Succ edge  12 [29.0%]  (fallthru)
;; Succ edge  28 [71.0%] 

;; Start of basic block ( 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(17)
7, 13, 19, 23, 24, 28, 29, 33, 70, 78, 79, 387, 388, 390, 391, 395, 396
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  11 [29.0%]  (fallthru)
(note 258 38 259 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(jump_insn 259 258 260 12 (set (pc)
        (label_ref 119)) -1 (nil))
;; End of basic block 12 -> ( 20)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(17)
7, 13, 19, 23, 24, 28, 29, 33, 70, 78, 79, 387, 388, 390, 391, 395, 396


;; Succ edge  20 [100.0%] 

(barrier 260 259 41)

;; Start of basic block ( 10) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u67(11){ }u68(13){ }u69(25){ }u70(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 24 [cc] 151
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; live  gen 	 24 [cc] 151
;; live  kill	
;; rd  in  	(16)
7, 13, 19, 23, 24, 28, 29, 33, 71, 78, 79, 387, 388, 390, 391, 395
;; rd  gen 	(2)
69, 397
;; rd  kill	(18)
61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 397

;; Pred edge  10 [50.0%] 
(code_label 41 260 248 13 104 "" [1 uses])

(note 248 41 42 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 42 248 43 13 arch/arm/kernel/perf_event.c:650 (set (reg:SI 151)
        (const_int 49296 [0xc090])) 167 {*arm_movsi_insn} (nil))

(insn 43 42 44 13 arch/arm/kernel/perf_event.c:650 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 141)
            (reg:SI 151))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 151)
        (expr_list:REG_EQUAL (compare:CC (reg:SI 141)
                (const_int 49296 [0xc090]))
            (nil))))

(jump_insn 44 43 249 13 arch/arm/kernel/perf_event.c:650 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 91)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
            (nil))))
;; End of basic block 13 -> ( 19 14)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; rd  out 	(17)
7, 13, 19, 23, 24, 28, 29, 33, 69, 78, 79, 387, 388, 390, 391, 395, 397


;; Succ edge  19 [29.0%] 
;; Succ edge  14 [71.0%]  (fallthru)

;; Start of basic block ( 13) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u75(11){ }u76(13){ }u77(25){ }u78(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 24 [cc] 152
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; live  gen 	 24 [cc] 152
;; live  kill	
;; rd  in  	(17)
7, 13, 19, 23, 24, 28, 29, 33, 69, 78, 79, 387, 388, 390, 391, 395, 397
;; rd  gen 	(2)
68, 398
;; rd  kill	(18)
61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 398

;; Pred edge  13 [71.0%]  (fallthru)
(note 249 44 45 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 45 249 46 14 arch/arm/kernel/perf_event.c:650 (set (reg:SI 152)
        (const_int 49392 [0xc0f0])) 167 {*arm_movsi_insn} (nil))

(insn 46 45 47 14 arch/arm/kernel/perf_event.c:650 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 141)
            (reg:SI 152))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 152)
        (expr_list:REG_DEAD (reg:SI 141)
            (expr_list:REG_EQUAL (compare:CC (reg:SI 141)
                    (const_int 49392 [0xc0f0]))
                (nil)))))

(jump_insn 47 46 261 14 arch/arm/kernel/perf_event.c:650 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 200)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 14 -> ( 15 28)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(18)
7, 13, 19, 23, 24, 28, 29, 33, 68, 78, 79, 387, 388, 390, 391, 395, 397, 398


;; Succ edge  15 [29.0%]  (fallthru)
;; Succ edge  28 [71.0%] 

;; Start of basic block ( 14) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(18)
7, 13, 19, 23, 24, 28, 29, 33, 68, 78, 79, 387, 388, 390, 391, 395, 397, 398
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  14 [29.0%]  (fallthru)
(note 261 47 262 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(jump_insn 262 261 263 15 (set (pc)
        (label_ref 147)) -1 (nil))
;; End of basic block 15 -> ( 21)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(18)
7, 13, 19, 23, 24, 28, 29, 33, 68, 78, 79, 387, 388, 390, 391, 395, 397, 398


;; Succ edge  21 [100.0%] 

(barrier 263 262 50)

;; Start of basic block ( 3 5 6) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u83(11){ }u84(13){ }u85(25){ }u86(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 153 154
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 153 154
;; live  kill	
;; rd  in  	(19)
7, 13, 19, 23, 24, 28, 29, 33, 73, 74, 75, 78, 79, 387, 388, 390, 391, 392, 393
;; rd  gen 	(2)
399, 400
;; rd  kill	(2)
399, 400

;; Pred edge  3 [29.0%] 
;; Pred edge  5 [29.0%] 
;; Pred edge  6 [29.0%] 
(code_label 50 263 51 16 98 "" [3 uses])

(note 51 50 52 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 52 51 53 16 arch/arm/kernel/perf_event.c:654 (set (reg/f:SI 153)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 53 52 54 16 arch/arm/kernel/perf_event.c:654 (set (reg:SI 154)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 54 53 264 16 arch/arm/kernel/perf_event.c:654 (set (mem/f/c/i:SI (reg/f:SI 153) [0 armpmu+0 S4 A32])
        (reg:SI 154)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 154)
        (expr_list:REG_DEAD (reg/f:SI 153)
            (expr_list:REG_EQUAL (const_int 0 [0x0])
                (nil)))))

(jump_insn 264 54 265 16 arch/arm/kernel/perf_event.c:655 (set (pc)
        (label_ref 200)) -1 (nil))
;; End of basic block 16 -> ( 28)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(21)
7, 13, 19, 23, 24, 28, 29, 33, 73, 74, 75, 78, 79, 387, 388, 390, 391, 392, 393, 399, 400


;; Succ edge  28 [100.0%] 

(barrier 265 264 57)

;; Start of basic block ( 8) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u89(11){ }u90(13){ }u91(25){ }u92(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 155 156
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 155 156
;; live  kill	
;; rd  in  	(18)
7, 13, 19, 23, 24, 28, 29, 33, 72, 78, 79, 387, 388, 390, 391, 392, 393, 394
;; rd  gen 	(2)
401, 402
;; rd  kill	(2)
401, 402

;; Pred edge  8 [100.0%] 
(code_label 57 265 58 17 97 "" [1 uses])

(note 58 57 59 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 59 58 60 17 arch/arm/kernel/perf_event.c:657 (set (reg/f:SI 155)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 60 59 61 17 arch/arm/kernel/perf_event.c:657 (set (reg:SI 156)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 61 60 266 17 arch/arm/kernel/perf_event.c:657 (set (mem/f/c/i:SI (reg/f:SI 155) [0 armpmu+0 S4 A32])
        (reg:SI 156)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 156)
        (expr_list:REG_DEAD (reg/f:SI 155)
            (expr_list:REG_EQUAL (const_int 0 [0x0])
                (nil)))))

(jump_insn 266 61 267 17 arch/arm/kernel/perf_event.c:658 (set (pc)
        (label_ref 200)) -1 (nil))
;; End of basic block 17 -> ( 28)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(20)
7, 13, 19, 23, 24, 28, 29, 33, 72, 78, 79, 387, 388, 390, 391, 392, 393, 394, 401, 402


;; Succ edge  28 [100.0%] 

(barrier 267 266 64)

;; Start of basic block ( 9) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u95(11){ }u96(13){ }u97(25){ }u98(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 136 157 158 160 162 165 167 168 169 170 172
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 136 157 158 160 162 165 167 168 169 170 172
;; live  kill	
;; rd  in  	(16)
7, 13, 19, 23, 24, 28, 29, 33, 71, 78, 79, 387, 388, 390, 391, 395
;; rd  gen 	(11)
386, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412
;; rd  kill	(11)
386, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412

;; Pred edge  9 [29.0%] 
(code_label 64 267 65 18 100 "" [1 uses])

(note 65 64 66 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 66 65 67 18 arch/arm/kernel/perf_event_v7.c:1193 (set (reg/f:SI 157)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 67 66 68 18 arch/arm/kernel/perf_event_v7.c:1193 (set (reg:SI 158)
        (const_int 4 [0x4])) 167 {*arm_movsi_insn} (nil))

(insn 68 67 70 18 arch/arm/kernel/perf_event_v7.c:1193 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 157)
                (const_int 80 [0x50])) [0 armv7pmu.id+0 S4 A64])
        (reg:SI 158)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 158)
        (expr_list:REG_EQUAL (const_int 4 [0x4])
            (nil))))

(insn 70 68 71 18 arch/arm/kernel/perf_event_v7.c:1194 (set (reg/f:SI 160)
        (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x1163c4b0>)) 167 {*arm_movsi_insn} (nil))

(insn 71 70 73 18 arch/arm/kernel/perf_event_v7.c:1194 (set (mem/s/f/j/c:SI (plus:SI (reg/f:SI 157)
                (const_int 84 [0x54])) [0 armv7pmu.name+0 S4 A32])
        (reg/f:SI 160)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 160)
        (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x1163c4b0>)
            (nil))))

(insn 73 71 74 18 arch/arm/kernel/perf_event_v7.c:1195 (set (reg/f:SI 162)
        (symbol_ref:SI ("*.LANCHOR3") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 74 73 77 18 arch/arm/kernel/perf_event_v7.c:1195 (set (mem/s/f/j/c:SI (plus:SI (reg/f:SI 157)
                (const_int 124 [0x7c])) [0 armv7pmu.cache_map+0 S4 A32])
        (reg/f:SI 162)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR3") [flags 0x182])
        (nil)))

(insn 77 74 78 18 arch/arm/kernel/perf_event_v7.c:1196 (set (reg/f:SI 165)
        (plus:SI (reg/f:SI 162)
            (const_int 168 [0xa8]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 162)
        (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR3") [flags 0x182])
                    (const_int 168 [0xa8])))
            (nil))))

(insn 78 77 79 18 arch/arm/kernel/perf_event_v7.c:1196 (set (mem/s/f/j/c:SI (plus:SI (reg/f:SI 157)
                (const_int 128 [0x80])) [0 armv7pmu.event_map+0 S4 A64])
        (reg/f:SI 165)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 165)
        (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR3") [flags 0x182])
                    (const_int 168 [0xa8])))
            (nil))))

(insn 79 78 81 18 arch/arm/kernel/perf_event_v7.c:764 (set (reg/v:SI 136 [ val ])
        (asm_operands/v:SI ("mrc p15, 0, %0, c9, c12, 0") ("=r") 0 []
             [] 8903762)) -1 (nil))

(insn 81 79 82 18 arch/arm/kernel/perf_event_v7.c:1197 (set (reg:SI 167)
        (lshiftrt:SI (reg/v:SI 136 [ val ])
            (const_int 11 [0xb]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg/v:SI 136 [ val ])
        (nil)))

(insn 82 81 83 18 arch/arm/kernel/perf_event_v7.c:1197 (set (reg:SI 168)
        (and:SI (reg:SI 167)
            (const_int 31 [0x1f]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 167)
        (nil)))

(insn 83 82 84 18 arch/arm/kernel/perf_event_v7.c:1197 (set (reg:SI 169)
        (plus:SI (reg:SI 168)
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 168)
        (nil)))

(insn 84 83 85 18 arch/arm/kernel/perf_event_v7.c:1197 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 157)
                (const_int 136 [0x88])) [0 armv7pmu.num_events+0 S4 A64])
        (reg:SI 169)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 169)
        (nil)))

(insn 85 84 87 18 arch/arm/kernel/perf_event.c:660 (set (reg/f:SI 170)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 87 85 88 18 arch/arm/kernel/perf_event.c:660 (set (reg/f:SI 172)
        (plus:SI (reg/f:SI 157)
            (const_int 80 [0x50]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 157)
        (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                    (const_int 80 [0x50])))
            (nil))))

(insn 88 87 268 18 arch/arm/kernel/perf_event.c:660 (set (mem/f/c/i:SI (reg/f:SI 170) [0 armpmu+0 S4 A32])
        (reg/f:SI 172)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 172)
        (expr_list:REG_DEAD (reg/f:SI 170)
            (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                        (const_int 80 [0x50])))
                (nil)))))

(jump_insn 268 88 269 18 arch/arm/kernel/perf_event.c:661 (set (pc)
        (label_ref 200)) -1 (nil))
;; End of basic block 18 -> ( 28)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(27)
7, 13, 19, 23, 24, 28, 29, 33, 71, 78, 79, 386, 387, 388, 390, 391, 395, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412


;; Succ edge  28 [100.0%] 

(barrier 269 268 91)

;; Start of basic block ( 13) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u116(11){ }u117(13){ }u118(25){ }u119(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 135 173 174 176 179 182 184 185 186 187 189
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 135 173 174 176 179 182 184 185 186 187 189
;; live  kill	
;; rd  in  	(17)
7, 13, 19, 23, 24, 28, 29, 33, 69, 78, 79, 387, 388, 390, 391, 395, 397
;; rd  gen 	(11)
385, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422
;; rd  kill	(11)
385, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422

;; Pred edge  13 [29.0%] 
(code_label 91 269 92 19 101 "" [1 uses])

(note 92 91 93 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 93 92 94 19 arch/arm/kernel/perf_event_v7.c:1203 (set (reg/f:SI 173)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 94 93 95 19 arch/arm/kernel/perf_event_v7.c:1203 (set (reg:SI 174)
        (const_int 5 [0x5])) 167 {*arm_movsi_insn} (nil))

(insn 95 94 97 19 arch/arm/kernel/perf_event_v7.c:1203 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 173)
                (const_int 80 [0x50])) [0 armv7pmu.id+0 S4 A64])
        (reg:SI 174)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 174)
        (expr_list:REG_EQUAL (const_int 5 [0x5])
            (nil))))

(insn 97 95 98 19 arch/arm/kernel/perf_event_v7.c:1204 (set (reg/f:SI 176)
        (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x1163cae0>)) 167 {*arm_movsi_insn} (nil))

(insn 98 97 101 19 arch/arm/kernel/perf_event_v7.c:1204 (set (mem/s/f/j/c:SI (plus:SI (reg/f:SI 173)
                (const_int 84 [0x54])) [0 armv7pmu.name+0 S4 A32])
        (reg/f:SI 176)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 176)
        (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x1163cae0>)
            (nil))))

(insn 101 98 102 19 arch/arm/kernel/perf_event_v7.c:1205 (set (reg/f:SI 179)
        (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR3") [flags 0x182])
                (const_int 204 [0xcc])))) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR3") [flags 0x182])
                (const_int 204 [0xcc])))
        (nil)))

(insn 102 101 105 19 arch/arm/kernel/perf_event_v7.c:1205 (set (mem/s/f/j/c:SI (plus:SI (reg/f:SI 173)
                (const_int 124 [0x7c])) [0 armv7pmu.cache_map+0 S4 A32])
        (reg/f:SI 179)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR3") [flags 0x182])
                (const_int 204 [0xcc])))
        (nil)))

(insn 105 102 106 19 arch/arm/kernel/perf_event_v7.c:1206 (set (reg/f:SI 182)
        (plus:SI (reg/f:SI 179)
            (const_int 168 [0xa8]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 179)
        (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR3") [flags 0x182])
                    (const_int 372 [0x174])))
            (nil))))

(insn 106 105 107 19 arch/arm/kernel/perf_event_v7.c:1206 (set (mem/s/f/j/c:SI (plus:SI (reg/f:SI 173)
                (const_int 128 [0x80])) [0 armv7pmu.event_map+0 S4 A64])
        (reg/f:SI 182)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 182)
        (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR3") [flags 0x182])
                    (const_int 372 [0x174])))
            (nil))))

(insn 107 106 109 19 arch/arm/kernel/perf_event_v7.c:764 (set (reg/v:SI 135 [ val ])
        (asm_operands/v:SI ("mrc p15, 0, %0, c9, c12, 0") ("=r") 0 []
             [] 8903762)) -1 (nil))

(insn 109 107 110 19 arch/arm/kernel/perf_event_v7.c:1207 (set (reg:SI 184)
        (lshiftrt:SI (reg/v:SI 135 [ val ])
            (const_int 11 [0xb]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg/v:SI 135 [ val ])
        (nil)))

(insn 110 109 111 19 arch/arm/kernel/perf_event_v7.c:1207 (set (reg:SI 185)
        (and:SI (reg:SI 184)
            (const_int 31 [0x1f]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 184)
        (nil)))

(insn 111 110 112 19 arch/arm/kernel/perf_event_v7.c:1207 (set (reg:SI 186)
        (plus:SI (reg:SI 185)
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 185)
        (nil)))

(insn 112 111 113 19 arch/arm/kernel/perf_event_v7.c:1207 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 173)
                (const_int 136 [0x88])) [0 armv7pmu.num_events+0 S4 A64])
        (reg:SI 186)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 186)
        (nil)))

(insn 113 112 115 19 arch/arm/kernel/perf_event.c:663 (set (reg/f:SI 187)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 115 113 116 19 arch/arm/kernel/perf_event.c:663 (set (reg/f:SI 189)
        (plus:SI (reg/f:SI 173)
            (const_int 80 [0x50]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 173)
        (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                    (const_int 80 [0x50])))
            (nil))))

(insn 116 115 270 19 arch/arm/kernel/perf_event.c:663 (set (mem/f/c/i:SI (reg/f:SI 187) [0 armpmu+0 S4 A32])
        (reg/f:SI 189)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 189)
        (expr_list:REG_DEAD (reg/f:SI 187)
            (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                        (const_int 80 [0x50])))
                (nil)))))

(jump_insn 270 116 271 19 arch/arm/kernel/perf_event.c:664 (set (pc)
        (label_ref 200)) -1 (nil))
;; End of basic block 19 -> ( 28)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(28)
7, 13, 19, 23, 24, 28, 29, 33, 69, 78, 79, 385, 387, 388, 390, 391, 395, 397, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422


;; Succ edge  28 [100.0%] 

(barrier 271 270 119)

;; Start of basic block ( 12) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u137(11){ }u138(13){ }u139(25){ }u140(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134 190 191 193 196 199 201 202 203 204 206
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 134 190 191 193 196 199 201 202 203 204 206
;; live  kill	
;; rd  in  	(17)
7, 13, 19, 23, 24, 28, 29, 33, 70, 78, 79, 387, 388, 390, 391, 395, 396
;; rd  gen 	(11)
384, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432
;; rd  kill	(11)
384, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432

;; Pred edge  12 [100.0%] 
(code_label 119 271 120 20 99 "" [1 uses])

(note 120 119 121 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn 121 120 122 20 arch/arm/kernel/perf_event_v7.c:1213 (set (reg/f:SI 190)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 122 121 123 20 arch/arm/kernel/perf_event_v7.c:1213 (set (reg:SI 191)
        (const_int 6 [0x6])) 167 {*arm_movsi_insn} (nil))

(insn 123 122 125 20 arch/arm/kernel/perf_event_v7.c:1213 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 190)
                (const_int 80 [0x50])) [0 armv7pmu.id+0 S4 A64])
        (reg:SI 191)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 191)
        (expr_list:REG_EQUAL (const_int 6 [0x6])
            (nil))))

(insn 125 123 126 20 arch/arm/kernel/perf_event_v7.c:1214 (set (reg/f:SI 193)
        (symbol_ref/v/f:SI ("*.LC5") [flags 0x82] <string_cst 0x1163c870>)) 167 {*arm_movsi_insn} (nil))

(insn 126 125 129 20 arch/arm/kernel/perf_event_v7.c:1214 (set (mem/s/f/j/c:SI (plus:SI (reg/f:SI 190)
                (const_int 84 [0x54])) [0 armv7pmu.name+0 S4 A32])
        (reg/f:SI 193)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 193)
        (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC5") [flags 0x82] <string_cst 0x1163c870>)
            (nil))))

(insn 129 126 130 20 arch/arm/kernel/perf_event_v7.c:1215 (set (reg/f:SI 196)
        (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR3") [flags 0x182])
                (const_int 408 [0x198])))) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR3") [flags 0x182])
                (const_int 408 [0x198])))
        (nil)))

(insn 130 129 133 20 arch/arm/kernel/perf_event_v7.c:1215 (set (mem/s/f/j/c:SI (plus:SI (reg/f:SI 190)
                (const_int 124 [0x7c])) [0 armv7pmu.cache_map+0 S4 A32])
        (reg/f:SI 196)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR3") [flags 0x182])
                (const_int 408 [0x198])))
        (nil)))

(insn 133 130 134 20 arch/arm/kernel/perf_event_v7.c:1216 (set (reg/f:SI 199)
        (plus:SI (reg/f:SI 196)
            (const_int 168 [0xa8]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 196)
        (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR3") [flags 0x182])
                    (const_int 576 [0x240])))
            (nil))))

(insn 134 133 135 20 arch/arm/kernel/perf_event_v7.c:1216 (set (mem/s/f/j/c:SI (plus:SI (reg/f:SI 190)
                (const_int 128 [0x80])) [0 armv7pmu.event_map+0 S4 A64])
        (reg/f:SI 199)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 199)
        (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR3") [flags 0x182])
                    (const_int 576 [0x240])))
            (nil))))

(insn 135 134 137 20 arch/arm/kernel/perf_event_v7.c:764 (set (reg/v:SI 134 [ val ])
        (asm_operands/v:SI ("mrc p15, 0, %0, c9, c12, 0") ("=r") 0 []
             [] 8903762)) -1 (nil))

(insn 137 135 138 20 arch/arm/kernel/perf_event_v7.c:1217 (set (reg:SI 201)
        (lshiftrt:SI (reg/v:SI 134 [ val ])
            (const_int 11 [0xb]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg/v:SI 134 [ val ])
        (nil)))

(insn 138 137 139 20 arch/arm/kernel/perf_event_v7.c:1217 (set (reg:SI 202)
        (and:SI (reg:SI 201)
            (const_int 31 [0x1f]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 201)
        (nil)))

(insn 139 138 140 20 arch/arm/kernel/perf_event_v7.c:1217 (set (reg:SI 203)
        (plus:SI (reg:SI 202)
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 202)
        (nil)))

(insn 140 139 141 20 arch/arm/kernel/perf_event_v7.c:1217 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 190)
                (const_int 136 [0x88])) [0 armv7pmu.num_events+0 S4 A64])
        (reg:SI 203)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 203)
        (nil)))

(insn 141 140 143 20 arch/arm/kernel/perf_event.c:666 (set (reg/f:SI 204)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 143 141 144 20 arch/arm/kernel/perf_event.c:666 (set (reg/f:SI 206)
        (plus:SI (reg/f:SI 190)
            (const_int 80 [0x50]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 190)
        (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                    (const_int 80 [0x50])))
            (nil))))

(insn 144 143 272 20 arch/arm/kernel/perf_event.c:666 (set (mem/f/c/i:SI (reg/f:SI 204) [0 armpmu+0 S4 A32])
        (reg/f:SI 206)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 206)
        (expr_list:REG_DEAD (reg/f:SI 204)
            (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                        (const_int 80 [0x50])))
                (nil)))))

(jump_insn 272 144 273 20 arch/arm/kernel/perf_event.c:667 (set (pc)
        (label_ref 200)) -1 (nil))
;; End of basic block 20 -> ( 28)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(28)
7, 13, 19, 23, 24, 28, 29, 33, 70, 78, 79, 384, 387, 388, 390, 391, 395, 396, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432


;; Succ edge  28 [100.0%] 

(barrier 273 272 147)

;; Start of basic block ( 15) -> 21
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u158(11){ }u159(13){ }u160(25){ }u161(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133 207 208 210 213 216 218 219 220 221 223
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 133 207 208 210 213 216 218 219 220 221 223
;; live  kill	
;; rd  in  	(18)
7, 13, 19, 23, 24, 28, 29, 33, 68, 78, 79, 387, 388, 390, 391, 395, 397, 398
;; rd  gen 	(11)
383, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442
;; rd  kill	(11)
383, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442

;; Pred edge  15 [100.0%] 
(code_label 147 273 148 21 102 "" [1 uses])

(note 148 147 149 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn 149 148 150 21 arch/arm/kernel/perf_event_v7.c:1223 (set (reg/f:SI 207)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 150 149 151 21 arch/arm/kernel/perf_event_v7.c:1223 (set (reg:SI 208)
        (const_int 7 [0x7])) 167 {*arm_movsi_insn} (nil))

(insn 151 150 153 21 arch/arm/kernel/perf_event_v7.c:1223 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 207)
                (const_int 80 [0x50])) [0 armv7pmu.id+0 S4 A64])
        (reg:SI 208)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 208)
        (expr_list:REG_EQUAL (const_int 7 [0x7])
            (nil))))

(insn 153 151 154 21 arch/arm/kernel/perf_event_v7.c:1224 (set (reg/f:SI 210)
        (symbol_ref/v/f:SI ("*.LC6") [flags 0x82] <string_cst 0x1163e4b0>)) 167 {*arm_movsi_insn} (nil))

(insn 154 153 157 21 arch/arm/kernel/perf_event_v7.c:1224 (set (mem/s/f/j/c:SI (plus:SI (reg/f:SI 207)
                (const_int 84 [0x54])) [0 armv7pmu.name+0 S4 A32])
        (reg/f:SI 210)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 210)
        (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC6") [flags 0x82] <string_cst 0x1163e4b0>)
            (nil))))

(insn 157 154 158 21 arch/arm/kernel/perf_event_v7.c:1225 (set (reg/f:SI 213)
        (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR3") [flags 0x182])
                (const_int 612 [0x264])))) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR3") [flags 0x182])
                (const_int 612 [0x264])))
        (nil)))

(insn 158 157 161 21 arch/arm/kernel/perf_event_v7.c:1225 (set (mem/s/f/j/c:SI (plus:SI (reg/f:SI 207)
                (const_int 124 [0x7c])) [0 armv7pmu.cache_map+0 S4 A32])
        (reg/f:SI 213)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR3") [flags 0x182])
                (const_int 612 [0x264])))
        (nil)))

(insn 161 158 162 21 arch/arm/kernel/perf_event_v7.c:1226 (set (reg/f:SI 216)
        (plus:SI (reg/f:SI 213)
            (const_int 168 [0xa8]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 213)
        (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR3") [flags 0x182])
                    (const_int 780 [0x30c])))
            (nil))))

(insn 162 161 163 21 arch/arm/kernel/perf_event_v7.c:1226 (set (mem/s/f/j/c:SI (plus:SI (reg/f:SI 207)
                (const_int 128 [0x80])) [0 armv7pmu.event_map+0 S4 A64])
        (reg/f:SI 216)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 216)
        (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR3") [flags 0x182])
                    (const_int 780 [0x30c])))
            (nil))))

(insn 163 162 165 21 arch/arm/kernel/perf_event_v7.c:764 (set (reg/v:SI 133 [ val ])
        (asm_operands/v:SI ("mrc p15, 0, %0, c9, c12, 0") ("=r") 0 []
             [] 8903762)) -1 (nil))

(insn 165 163 166 21 arch/arm/kernel/perf_event_v7.c:1227 (set (reg:SI 218)
        (lshiftrt:SI (reg/v:SI 133 [ val ])
            (const_int 11 [0xb]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg/v:SI 133 [ val ])
        (nil)))

(insn 166 165 167 21 arch/arm/kernel/perf_event_v7.c:1227 (set (reg:SI 219)
        (and:SI (reg:SI 218)
            (const_int 31 [0x1f]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 218)
        (nil)))

(insn 167 166 168 21 arch/arm/kernel/perf_event_v7.c:1227 (set (reg:SI 220)
        (plus:SI (reg:SI 219)
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 219)
        (nil)))

(insn 168 167 169 21 arch/arm/kernel/perf_event_v7.c:1227 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 207)
                (const_int 136 [0x88])) [0 armv7pmu.num_events+0 S4 A64])
        (reg:SI 220)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 220)
        (nil)))

(insn 169 168 171 21 arch/arm/kernel/perf_event.c:669 (set (reg/f:SI 221)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 171 169 172 21 arch/arm/kernel/perf_event.c:669 (set (reg/f:SI 223)
        (plus:SI (reg/f:SI 207)
            (const_int 80 [0x50]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 207)
        (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                    (const_int 80 [0x50])))
            (nil))))

(insn 172 171 274 21 arch/arm/kernel/perf_event.c:669 (set (mem/f/c/i:SI (reg/f:SI 221) [0 armpmu+0 S4 A32])
        (reg/f:SI 223)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 223)
        (expr_list:REG_DEAD (reg/f:SI 221)
            (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                        (const_int 80 [0x50])))
                (nil)))))

(jump_insn 274 172 275 21 (set (pc)
        (label_ref 200)) -1 (nil))
;; End of basic block 21 -> ( 28)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(29)
7, 13, 19, 23, 24, 28, 29, 33, 68, 78, 79, 383, 387, 388, 390, 391, 395, 397, 398, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442


;; Succ edge  28 [100.0%] 

(barrier 275 274 175)

;; Start of basic block ( 2) -> 22
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u179(11){ }u180(13){ }u181(25){ }u182(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(13)
7, 13, 19, 23, 24, 28, 29, 33, 76, 78, 79, 387, 388
;; rd  gen 	(1)
67
;; rd  kill	(17)
61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77

;; Pred edge  2 [72.0%] 
(code_label 175 275 176 22 95 "" [1 uses])

(note 176 175 177 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(insn 177 176 178 22 arch/arm/kernel/perf_event.c:673 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 137 [ implementor ])
            (const_int 105 [0x69]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 137 [ implementor ])
        (nil)))

(jump_insn 178 177 179 22 arch/arm/kernel/perf_event.c:673 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 200)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 22 -> ( 23 28)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; rd  out 	(13)
7, 13, 19, 23, 24, 28, 29, 33, 67, 78, 79, 387, 388


;; Succ edge  23 [28.0%]  (fallthru)
;; Succ edge  28 [72.0%] 

;; Start of basic block ( 22) -> 23
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u185(11){ }u186(13){ }u187(25){ }u188(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 24 [cc] 224 225
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; live  gen 	 24 [cc] 224 225
;; live  kill	
;; rd  in  	(13)
7, 13, 19, 23, 24, 28, 29, 33, 67, 78, 79, 387, 388
;; rd  gen 	(3)
66, 443, 444
;; rd  kill	(19)
61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 443, 444

;; Pred edge  22 [28.0%]  (fallthru)
(note 179 178 180 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(insn 180 179 181 23 arch/arm/kernel/perf_event.c:675 (set (reg:SI 224)
        (lshiftrt:SI (reg/v:SI 138 [ cpuid ])
            (const_int 13 [0xd]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg/v:SI 138 [ cpuid ])
        (nil)))

(insn 181 180 182 23 arch/arm/kernel/perf_event.c:675 (set (reg:SI 225)
        (and:SI (reg:SI 224)
            (const_int 7 [0x7]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 224)
        (nil)))

(insn 182 181 183 23 arch/arm/kernel/perf_event.c:675 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 225)
            (const_int 1 [0x1]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 183 182 251 23 arch/arm/kernel/perf_event.c:675 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 188)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
            (nil))))
;; End of basic block 23 -> ( 26 24)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 225
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 225
;; rd  out 	(15)
7, 13, 19, 23, 24, 28, 29, 33, 66, 78, 79, 387, 388, 443, 444


;; Succ edge  26 [29.0%] 
;; Succ edge  24 [71.0%]  (fallthru)

;; Start of basic block ( 23) -> 24
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u193(11){ }u194(13){ }u195(25){ }u196(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 225
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 225
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 225
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(15)
7, 13, 19, 23, 24, 28, 29, 33, 66, 78, 79, 387, 388, 443, 444
;; rd  gen 	(1)
65
;; rd  kill	(17)
61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77

;; Pred edge  23 [71.0%]  (fallthru)
(note 251 183 184 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(insn 184 251 185 24 arch/arm/kernel/perf_event.c:675 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 225)
            (const_int 2 [0x2]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 225)
        (nil)))

(jump_insn 185 184 276 24 arch/arm/kernel/perf_event.c:675 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 200)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 24 -> ( 25 28)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(15)
7, 13, 19, 23, 24, 28, 29, 33, 65, 78, 79, 387, 388, 443, 444


;; Succ edge  25 [29.0%]  (fallthru)
;; Succ edge  28 [71.0%] 

;; Start of basic block ( 24) -> 25
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(15)
7, 13, 19, 23, 24, 28, 29, 33, 65, 78, 79, 387, 388, 443, 444
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  24 [29.0%]  (fallthru)
(note 276 185 277 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(jump_insn 277 276 278 25 (set (pc)
        (label_ref 195)) -1 (nil))
;; End of basic block 25 -> ( 27)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(15)
7, 13, 19, 23, 24, 28, 29, 33, 65, 78, 79, 387, 388, 443, 444


;; Succ edge  27 [100.0%] 

(barrier 278 277 188)

;; Start of basic block ( 23) -> 26
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u199(11){ }u200(13){ }u201(25){ }u202(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 226 227
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 226 227
;; live  kill	
;; rd  in  	(15)
7, 13, 19, 23, 24, 28, 29, 33, 66, 78, 79, 387, 388, 443, 444
;; rd  gen 	(2)
445, 446
;; rd  kill	(2)
445, 446

;; Pred edge  23 [29.0%] 
(code_label 188 278 189 26 105 "" [1 uses])

(note 189 188 190 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(insn 190 189 191 26 arch/arm/kernel/perf_event.c:677 (set (reg/f:SI 226)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 191 190 192 26 arch/arm/kernel/perf_event.c:677 (set (reg:SI 227)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 192 191 279 26 arch/arm/kernel/perf_event.c:677 (set (mem/f/c/i:SI (reg/f:SI 226) [0 armpmu+0 S4 A32])
        (reg:SI 227)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 227)
        (expr_list:REG_DEAD (reg/f:SI 226)
            (expr_list:REG_EQUAL (const_int 0 [0x0])
                (nil)))))

(jump_insn 279 192 280 26 arch/arm/kernel/perf_event.c:678 (set (pc)
        (label_ref 200)) -1 (nil))
;; End of basic block 26 -> ( 28)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(17)
7, 13, 19, 23, 24, 28, 29, 33, 66, 78, 79, 387, 388, 443, 444, 445, 446


;; Succ edge  28 [100.0%] 

(barrier 280 279 195)

;; Start of basic block ( 25) -> 27
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u205(11){ }u206(13){ }u207(25){ }u208(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 228 229
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 228 229
;; live  kill	
;; rd  in  	(15)
7, 13, 19, 23, 24, 28, 29, 33, 65, 78, 79, 387, 388, 443, 444
;; rd  gen 	(2)
447, 448
;; rd  kill	(2)
447, 448

;; Pred edge  25 [100.0%] 
(code_label 195 280 196 27 106 "" [1 uses])

(note 196 195 197 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(insn 197 196 198 27 arch/arm/kernel/perf_event.c:680 (set (reg/f:SI 228)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 198 197 199 27 arch/arm/kernel/perf_event.c:680 (set (reg:SI 229)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 199 198 200 27 arch/arm/kernel/perf_event.c:680 (set (mem/f/c/i:SI (reg/f:SI 228) [0 armpmu+0 S4 A32])
        (reg:SI 229)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 229)
        (expr_list:REG_DEAD (reg/f:SI 228)
            (expr_list:REG_EQUAL (const_int 0 [0x0])
                (nil)))))
;; End of basic block 27 -> ( 28)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(17)
7, 13, 19, 23, 24, 28, 29, 33, 65, 78, 79, 387, 388, 443, 444, 447, 448


;; Succ edge  28 [100.0%]  (fallthru)

;; Start of basic block ( 11 22 24 21 27 14 20 19 18 17 16 7 26) -> 28
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u211(11){ }u212(13){ }u213(25){ }u214(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 139 230
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 139 230
;; live  kill	
;; rd  in  	(86)
7, 13, 19, 23, 24, 28, 29, 33, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 383, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448
;; rd  gen 	(3)
64, 389, 449
;; rd  kill	(19)
61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 389, 449

;; Pred edge  11 [71.0%] 
;; Pred edge  22 [72.0%] 
;; Pred edge  24 [71.0%] 
;; Pred edge  21 [100.0%] 
;; Pred edge  27 [100.0%]  (fallthru)
;; Pred edge  14 [71.0%] 
;; Pred edge  20 [100.0%] 
;; Pred edge  19 [100.0%] 
;; Pred edge  18 [100.0%] 
;; Pred edge  17 [100.0%] 
;; Pred edge  16 [100.0%] 
;; Pred edge  7 [71.0%] 
;; Pred edge  26 [100.0%] 
(code_label 200 199 201 28 96 "" [12 uses])

(note 201 200 202 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(insn 202 201 203 28 arch/arm/kernel/perf_event.c:685 (set (reg/f:SI 230)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 203 202 204 28 arch/arm/kernel/perf_event.c:685 (set (reg/f:SI 139 [ armpmu.403 ])
        (mem/f/c/i:SI (reg/f:SI 230) [0 armpmu+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 230)
        (expr_list:REG_EQUAL (mem/f/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 armpmu+0 S4 A32])
            (nil))))

(insn 204 203 205 28 arch/arm/kernel/perf_event.c:685 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 139 [ armpmu.403 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 205 204 206 28 arch/arm/kernel/perf_event.c:685 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 214)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2000 [0x7d0])
            (nil))))
;; End of basic block 28 -> ( 29 30)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; rd  out 	(78)
7, 13, 19, 23, 24, 28, 29, 33, 64, 78, 79, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449


;; Succ edge  29 [80.0%]  (fallthru)
;; Succ edge  30 [20.0%] 

;; Start of basic block ( 28) -> 29
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u218(11){ }u219(13){ }u220(25){ }u221(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	 14 [lr]
;; rd  in  	(78)
7, 13, 19, 23, 24, 28, 29, 33, 64, 78, 79, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449
;; rd  gen 	(1)
6
;; rd  kill	(12)
0, 1, 2, 3, 4, 5, 6, 7, 30, 31, 32, 33

;; Pred edge  28 [80.0%]  (fallthru)
(note 206 205 208 29 [bb 29] NOTE_INSN_BASIC_BLOCK)

(insn 208 206 209 29 arch/arm/kernel/perf_event.c:686 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC7") [flags 0x82] <string_cst 0x11223cc0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC7") [flags 0x82] <string_cst 0x11223cc0>)
        (nil)))

(insn 209 208 210 29 arch/arm/kernel/perf_event.c:686 (set (reg:SI 1 r1)
        (mem/s/f/j:SI (plus:SI (reg/f:SI 139 [ armpmu.403 ])
                (const_int 4 [0x4])) [0 <variable>.name+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 210 209 211 29 arch/arm/kernel/perf_event.c:686 (set (reg:SI 2 r2)
        (mem/s/j:SI (plus:SI (reg/f:SI 139 [ armpmu.403 ])
                (const_int 56 [0x38])) [0 <variable>.num_events+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 139 [ armpmu.403 ])
        (nil)))

(call_insn 211 210 281 29 arch/arm/kernel/perf_event.c:686 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(jump_insn 281 211 282 29 (set (pc)
        (label_ref 219)) -1 (nil))
;; End of basic block 29 -> ( 31)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(77)
6, 13, 19, 23, 24, 28, 29, 64, 78, 79, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449


;; Succ edge  31 [100.0%] 

(barrier 282 281 214)

;; Start of basic block ( 28) -> 30
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u228(11){ }u229(13){ }u230(25){ }u231(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]
;; rd  in  	(78)
7, 13, 19, 23, 24, 28, 29, 33, 64, 78, 79, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449
;; rd  gen 	(1)
5
;; rd  kill	(12)
0, 1, 2, 3, 4, 5, 6, 7, 30, 31, 32, 33

;; Pred edge  28 [20.0%] 
(code_label 214 282 215 30 107 "" [1 uses])

(note 215 214 217 30 [bb 30] NOTE_INSN_BASIC_BLOCK)

(insn 217 215 218 30 arch/arm/kernel/perf_event.c:689 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC8") [flags 0x82] <string_cst 0x115c5be0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC8") [flags 0x82] <string_cst 0x115c5be0>)
        (nil)))

(call_insn 218 217 219 30 arch/arm/kernel/perf_event.c:689 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_UNUSED (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 30 -> ( 31)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(77)
5, 13, 19, 23, 24, 28, 29, 64, 78, 79, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449


;; Succ edge  31 [100.0%]  (fallthru)

;; Start of basic block ( 30 29) -> 31
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u234(11){ }u235(13){ }u236(25){ }u237(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	 14 [lr]
;; rd  in  	(78)
5, 6, 13, 19, 23, 24, 28, 29, 64, 78, 79, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449
;; rd  gen 	(1)
0
;; rd  kill	(12)
0, 1, 2, 3, 4, 5, 6, 7, 30, 31, 32, 33

;; Pred edge  30 [100.0%]  (fallthru)
;; Pred edge  29 [100.0%] 
(code_label 219 218 220 31 108 "" [1 uses])

(note 220 219 223 31 [bb 31] NOTE_INSN_BASIC_BLOCK)

(insn 223 220 224 31 arch/arm/kernel/perf_event.c:692 (set (reg:SI 0 r0)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn 224 223 225 31 arch/arm/kernel/perf_event.c:692 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC9") [flags 0x82] <string_cst 0x116407a0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC9") [flags 0x82] <string_cst 0x116407a0>)
        (nil)))

(insn 225 224 226 31 arch/arm/kernel/perf_event.c:692 (set (reg:SI 2 r2)
        (const_int 4 [0x4])) 167 {*arm_movsi_insn} (nil))

(call_insn 226 225 231 31 arch/arm/kernel/perf_event.c:692 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("perf_pmu_register") [flags 0x41] <function_decl 0x113ba880 perf_pmu_register>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 231 226 237 31 arch/arm/kernel/perf_event.c:695 (set (reg/i:SI 0 r0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 237 231 0 31 arch/arm/kernel/perf_event.c:695 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 31 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(77)
0, 13, 19, 23, 24, 28, 29, 64, 78, 79, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function armpmu_event_set_period (armpmu_event_set_period)[0:1311]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 16 n_edges 24 count 28 (  1.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 16 n_edges 24 count 30 (  1.9)
df_worklist_dataflow_doublequeue:n_basic_blocks 16 n_edges 24 count 30 (  1.9)


armpmu_event_set_period

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={6d,5u} r1={4d,2u} r2={3d,1u} r3={3d} r11={1d,15u} r12={3d} r13={1d,17u} r14={3d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={14d,9u} r25={1d,15u} r26={1d,14u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r133={2d,4u} r134={1d} r135={1d} r136={1d} r139={3d,1u} r141={3d,7u} r142={1d,3u} r143={1d,6u} r144={1d,3u} r146={1d,1u} r147={1d,9u} r148={1d,1u} r149={1d,2u} r150={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r157={1d,2u} r158={1d,2u} r159={3d,3u} 
;;    total ref usage 416{288d,128u,0e} in 53{51 regular + 2 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259
0[0,6] 1[6,4] 2[10,3] 3[13,3] 11[16,1] 12[17,3] 13[20,1] 14[21,3] 15[24,2] 16[26,2] 17[28,2] 18[30,2] 19[32,2] 20[34,2] 21[36,2] 22[38,2] 23[40,2] 24[42,14] 25[56,1] 26[57,1] 27[58,2] 28[60,2] 29[62,2] 30[64,2] 31[66,2] 32[68,2] 33[70,2] 34[72,2] 35[74,2] 36[76,2] 37[78,2] 38[80,2] 39[82,2] 40[84,2] 41[86,2] 42[88,2] 43[90,2] 44[92,2] 45[94,2] 46[96,2] 47[98,2] 48[100,2] 49[102,2] 50[104,2] 51[106,2] 52[108,2] 53[110,2] 54[112,2] 55[114,2] 56[116,2] 57[118,2] 58[120,2] 59[122,2] 60[124,2] 61[126,2] 62[128,2] 63[130,2] 64[132,2] 65[134,2] 66[136,2] 67[138,2] 68[140,2] 69[142,2] 70[144,2] 71[146,2] 72[148,2] 73[150,2] 74[152,2] 75[154,2] 76[156,2] 77[158,2] 78[160,2] 79[162,2] 80[164,2] 81[166,2] 82[168,2] 83[170,2] 84[172,2] 85[174,2] 86[176,2] 87[178,2] 88[180,2] 89[182,2] 90[184,2] 91[186,2] 92[188,2] 93[190,2] 94[192,2] 95[194,2] 96[196,2] 97[198,2] 98[200,2] 99[202,2] 100[204,2] 101[206,2] 102[208,2] 103[210,2] 104[212,2] 105[214,2] 106[216,2] 107[218,2] 108[220,2] 109[222,2] 110[224,2] 111[226,2] 112[228,2] 113[230,2] 114[232,2] 115[234,2] 116[236,2] 117[238,2] 118[240,2] 119[242,2] 120[244,2] 121[246,2] 122[248,2] 123[250,2] 124[252,2] 125[254,2] 126[256,2] 127[258,2] 133[260,2] 134[262,1] 135[263,1] 136[264,1] 139[265,3] 141[268,3] 142[271,1] 143[272,1] 144[273,1] 146[274,1] 147[275,1] 148[276,1] 149[277,1] 150[278,1] 152[279,1] 153[280,1] 154[281,1] 155[282,1] 157[283,1] 158[284,1] 159[285,3] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d5(0){ }d9(1){ }d12(2){ }d15(3){ }d16(11){ }d19(12){ }d20(13){ }d23(14){ }d56(25){ }d57(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
5, 9, 12, 15, 16, 19, 20, 23, 56, 57
;; rd  kill	(26)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 56, 57
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(10)
5, 9, 12, 15, 16, 19, 20, 23, 56, 57

( 0 )->[2]->( 5 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d16(bb 0 insn -1) }u1(13){ d20(bb 0 insn -1) }u2(25){ d56(bb 0 insn -1) }u3(26){ d57(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 141 143 144 146 147 148 149
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 141 143 144 146 147 148 149
;; live  kill	 24 [cc]
;; rd  in  	(10)
5, 9, 12, 15, 16, 19, 20, 23, 56, 57
;; rd  gen 	(8)
45, 268, 272, 273, 274, 275, 276, 277
;; rd  kill	(23)
42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 268, 269, 270, 272, 273, 274, 275, 276, 277
;; lr  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 141 143 144 146 147 148 149
;; live  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 141 143 144 146 147 148 149
;; rd  out 	(18)
5, 9, 12, 15, 16, 19, 20, 23, 45, 56, 57, 268, 272, 273, 274, 275, 276, 277
;;  UD chains for artificial uses
;;   reg 11 { d16(bb 0 insn -1) }
;;   reg 13 { d20(bb 0 insn -1) }
;;   reg 25 { d56(bb 0 insn -1) }
;;   reg 26 { d57(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d5(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 3
;;      reg 1 { d9(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 4
;;      reg 2 { d12(bb 0 insn -1) }
;;   UD chains for insn luid 3 uid 8
;;      reg 147 { d275(bb 2 insn 3) }
;;   UD chains for insn luid 4 uid 10
;;      reg 144 { d273(bb 2 insn 8) }
;;      reg 147 { d275(bb 2 insn 3) }
;;   UD chains for insn luid 5 uid 12
;;      reg 147 { d275(bb 2 insn 3) }
;;   UD chains for insn luid 6 uid 14
;;      reg 143 { d272(bb 2 insn 12) }
;;   UD chains for insn luid 7 uid 15
;;      reg 141 { d268(bb 2 insn 10) }
;;      reg 149 { d277(bb 2 insn 14) }
;;   UD chains for insn luid 8 uid 16
;;      reg 24 { d45(bb 2 insn 15) }

( 2 )->[3]->( 6 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u15(11){ d16(bb 0 insn -1) }u16(13){ d20(bb 0 insn -1) }u17(25){ d56(bb 0 insn -1) }u18(26){ d57(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 141 143 144 146 147 148 149
;; lr  use 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 141 143 144 146 147 148 149
;; live  gen 	
;; live  kill	
;; rd  in  	(18)
5, 9, 12, 15, 16, 19, 20, 23, 45, 56, 57, 268, 272, 273, 274, 275, 276, 277
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 143 144 146 147 148 149
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 143 144 146 147 148 149
;; rd  out 	(18)
5, 9, 12, 15, 16, 19, 20, 23, 45, 56, 57, 268, 272, 273, 274, 275, 276, 277
;;  UD chains for artificial uses
;;   reg 11 { d16(bb 0 insn -1) }
;;   reg 13 { d20(bb 0 insn -1) }
;;   reg 25 { d56(bb 0 insn -1) }
;;   reg 26 { d57(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 18
;;      reg 24 { d45(bb 2 insn 15) }

( 3 )->[4]->( 5 6 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u20(11){ d16(bb 0 insn -1) }u21(13){ d20(bb 0 insn -1) }u22(25){ d56(bb 0 insn -1) }u23(26){ d57(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 143 144 146 147 148 149
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 149
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 143 144 146 147 148 149
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(18)
5, 9, 12, 15, 16, 19, 20, 23, 45, 56, 57, 268, 272, 273, 274, 275, 276, 277
;; rd  gen 	(1)
44
;; rd  kill	(14)
42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 143 144 146 147 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 143 144 146 147 148
;; rd  out 	(18)
5, 9, 12, 15, 16, 19, 20, 23, 44, 56, 57, 268, 272, 273, 274, 275, 276, 277
;;  UD chains for artificial uses
;;   reg 11 { d16(bb 0 insn -1) }
;;   reg 13 { d20(bb 0 insn -1) }
;;   reg 25 { d56(bb 0 insn -1) }
;;   reg 26 { d57(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 19
;;      reg 141 { d268(bb 2 insn 10) }
;;      reg 149 { d277(bb 2 insn 14) }
;;   UD chains for insn luid 1 uid 20
;;      reg 24 { d44(bb 4 insn 19) }

( 4 2 )->[5]->( 7 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u27(11){ d16(bb 0 insn -1) }u28(13){ d20(bb 0 insn -1) }u29(25){ d56(bb 0 insn -1) }u30(26){ d57(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 143 144 146 147 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 139
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 143 144 146 147 148
;; live  gen 	 139
;; live  kill	
;; rd  in  	(19)
5, 9, 12, 15, 16, 19, 20, 23, 44, 45, 56, 57, 268, 272, 273, 274, 275, 276, 277
;; rd  gen 	(1)
267
;; rd  kill	(3)
265, 266, 267
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 143 144 146 147 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 143 144 146 147 148
;; rd  out 	(20)
5, 9, 12, 15, 16, 19, 20, 23, 44, 45, 56, 57, 267, 268, 272, 273, 274, 275, 276, 277
;;  UD chains for artificial uses
;;   reg 11 { d16(bb 0 insn -1) }
;;   reg 13 { d20(bb 0 insn -1) }
;;   reg 25 { d56(bb 0 insn -1) }
;;   reg 26 { d57(bb 0 insn -1) }

( 3 4 )->[6]->( 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u31(11){ d16(bb 0 insn -1) }u32(13){ d20(bb 0 insn -1) }u33(25){ d56(bb 0 insn -1) }u34(26){ d57(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 146 147 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 147
;; lr  def 	 24 [cc] 136 139 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 146 147 148
;; live  gen 	 136 139 141
;; live  kill	 24 [cc]
;; rd  in  	(19)
5, 9, 12, 15, 16, 19, 20, 23, 44, 45, 56, 57, 268, 272, 273, 274, 275, 276, 277
;; rd  gen 	(3)
264, 266, 270
;; rd  kill	(21)
42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 264, 265, 266, 267, 268, 269, 270
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 143 144 146 147 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 143 144 146 147 148
;; rd  out 	(19)
5, 9, 12, 15, 16, 19, 20, 23, 56, 57, 264, 266, 270, 272, 273, 274, 275, 276, 277
;;  UD chains for artificial uses
;;   reg 11 { d16(bb 0 insn -1) }
;;   reg 13 { d20(bb 0 insn -1) }
;;   reg 25 { d56(bb 0 insn -1) }
;;   reg 26 { d57(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 32
;;      reg 143 { d272(bb 2 insn 12) }
;;      reg 144 { d273(bb 2 insn 8) }
;;      reg 147 { d275(bb 2 insn 3) }
;;   UD chains for insn luid 1 uid 33
;;      reg 143 { d272(bb 2 insn 12) }
;;      reg 147 { d275(bb 2 insn 3) }
;;   UD chains for insn luid 2 uid 34
;;      reg 143 { d272(bb 2 insn 12) }

( 6 5 )->[7]->( 11 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u41(11){ d16(bb 0 insn -1) }u42(13){ d20(bb 0 insn -1) }u43(25){ d56(bb 0 insn -1) }u44(26){ d57(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 143 144 146 147 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 143 144 146 147 148
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(23)
5, 9, 12, 15, 16, 19, 20, 23, 44, 45, 56, 57, 264, 266, 267, 268, 270, 272, 273, 274, 275, 276, 277
;; rd  gen 	(1)
55
;; rd  kill	(14)
42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55
;; lr  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 139 141 143 144 146 147 148
;; live  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 139 141 143 144 146 147 148
;; rd  out 	(22)
5, 9, 12, 15, 16, 19, 20, 23, 55, 56, 57, 264, 266, 267, 268, 270, 272, 273, 274, 275, 276, 277
;;  UD chains for artificial uses
;;   reg 11 { d16(bb 0 insn -1) }
;;   reg 13 { d20(bb 0 insn -1) }
;;   reg 25 { d56(bb 0 insn -1) }
;;   reg 26 { d57(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 38
;;      reg 141 { d270(bb 6 insn 34) d268(bb 2 insn 10) }
;;   UD chains for insn luid 1 uid 39
;;      reg 24 { d55(bb 7 insn 38) }

( 7 )->[8]->( 10 9 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u47(11){ d16(bb 0 insn -1) }u48(13){ d20(bb 0 insn -1) }u49(25){ d56(bb 0 insn -1) }u50(26){ d57(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 139 141 143 144 146 147 148
;; lr  use 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 139 141 143 144 146 147 148
;; live  gen 	
;; live  kill	
;; rd  in  	(22)
5, 9, 12, 15, 16, 19, 20, 23, 55, 56, 57, 264, 266, 267, 268, 270, 272, 273, 274, 275, 276, 277
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 143 144 146 147 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 143 144 146 147 148
;; rd  out 	(22)
5, 9, 12, 15, 16, 19, 20, 23, 55, 56, 57, 264, 266, 267, 268, 270, 272, 273, 274, 275, 276, 277
;;  UD chains for artificial uses
;;   reg 11 { d16(bb 0 insn -1) }
;;   reg 13 { d20(bb 0 insn -1) }
;;   reg 25 { d56(bb 0 insn -1) }
;;   reg 26 { d57(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 41
;;      reg 24 { d55(bb 7 insn 38) }

( 8 )->[9]->( 11 10 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u52(11){ d16(bb 0 insn -1) }u53(13){ d20(bb 0 insn -1) }u54(25){ d56(bb 0 insn -1) }u55(26){ d57(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 143 144 146 147 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 143 144 146 147 148
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(22)
5, 9, 12, 15, 16, 19, 20, 23, 55, 56, 57, 264, 266, 267, 268, 270, 272, 273, 274, 275, 276, 277
;; rd  gen 	(1)
54
;; rd  kill	(14)
42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 143 144 146 147 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 143 144 146 147 148
;; rd  out 	(22)
5, 9, 12, 15, 16, 19, 20, 23, 54, 56, 57, 264, 266, 267, 268, 270, 272, 273, 274, 275, 276, 277
;;  UD chains for artificial uses
;;   reg 11 { d16(bb 0 insn -1) }
;;   reg 13 { d20(bb 0 insn -1) }
;;   reg 25 { d56(bb 0 insn -1) }
;;   reg 26 { d57(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 42
;;      reg 141 { d270(bb 6 insn 34) d268(bb 2 insn 10) }
;;   UD chains for insn luid 1 uid 43
;;      reg 24 { d54(bb 9 insn 42) }

( 9 8 )->[10]->( 11 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u58(11){ d16(bb 0 insn -1) }u59(13){ d20(bb 0 insn -1) }u60(25){ d56(bb 0 insn -1) }u61(26){ d57(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 143 144 146 147 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 143 144 147
;; lr  def 	 24 [cc] 135 139 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 143 144 146 147 148
;; live  gen 	 135 139 141
;; live  kill	 24 [cc]
;; rd  in  	(23)
5, 9, 12, 15, 16, 19, 20, 23, 54, 55, 56, 57, 264, 266, 267, 268, 270, 272, 273, 274, 275, 276, 277
;; rd  gen 	(3)
263, 265, 269
;; rd  kill	(21)
42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 263, 265, 266, 267, 268, 269, 270
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 146 147 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 146 147 148
;; rd  out 	(20)
5, 9, 12, 15, 16, 19, 20, 23, 56, 57, 263, 264, 265, 269, 272, 273, 274, 275, 276, 277
;;  UD chains for artificial uses
;;   reg 11 { d16(bb 0 insn -1) }
;;   reg 13 { d20(bb 0 insn -1) }
;;   reg 25 { d56(bb 0 insn -1) }
;;   reg 26 { d57(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 50
;;      reg 141 { d270(bb 6 insn 34) d268(bb 2 insn 10) }
;;      reg 143 { d272(bb 2 insn 12) }
;;   UD chains for insn luid 1 uid 51
;;      reg 141 { d269(bb 10 insn 50) }
;;      reg 144 { d273(bb 2 insn 8) }
;;      reg 147 { d275(bb 2 insn 3) }
;;   UD chains for insn luid 2 uid 52
;;      reg 143 { d272(bb 2 insn 12) }
;;      reg 147 { d275(bb 2 insn 3) }

( 10 7 9 )->[11]->( 14 12 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u69(11){ d16(bb 0 insn -1) }u70(13){ d20(bb 0 insn -1) }u71(25){ d56(bb 0 insn -1) }u72(26){ d57(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 146 147 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 24 [cc] 133 142 150 157 158
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 146 147 148
;; live  gen 	 24 [cc] 133 142 150 157 158
;; live  kill	
;; rd  in  	(26)
5, 9, 12, 15, 16, 19, 20, 23, 54, 55, 56, 57, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277
;; rd  gen 	(6)
43, 261, 271, 278, 283, 284
;; rd  kill	(20)
42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 260, 261, 271, 278, 283, 284
;; lr  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 133 139 142 146 147 148 157 158
;; live  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 133 139 142 146 147 148 157 158
;; rd  out 	(30)
5, 9, 12, 15, 16, 19, 20, 23, 43, 56, 57, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 283, 284
;;  UD chains for artificial uses
;;   reg 11 { d16(bb 0 insn -1) }
;;   reg 13 { d20(bb 0 insn -1) }
;;   reg 25 { d56(bb 0 insn -1) }
;;   reg 26 { d57(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 57
;;      reg 150 { d278(bb 11 insn 56) }
;;   UD chains for insn luid 2 uid 115
;;      reg 142 { d271(bb 11 insn 57) }
;;   UD chains for insn luid 3 uid 116
;;      reg 142 { d271(bb 11 insn 57) }
;;   UD chains for insn luid 4 uid 59
;;      reg 141 { d270(bb 6 insn 34) d269(bb 10 insn 50) d268(bb 2 insn 10) }
;;   UD chains for insn luid 5 uid 60
;;      reg 133 { d261(bb 11 insn 59) }
;;      reg 158 { d284(bb 11 insn 116) }
;;   UD chains for insn luid 6 uid 61
;;      reg 24 { d43(bb 11 insn 60) }

( 11 )->[12]->( 15 13 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u80(11){ d16(bb 0 insn -1) }u81(13){ d20(bb 0 insn -1) }u82(25){ d56(bb 0 insn -1) }u83(26){ d57(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 133 139 142 146 147 148 157 158
;; lr  use 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 133 139 142 146 147 148 157 158
;; live  gen 	
;; live  kill	
;; rd  in  	(30)
5, 9, 12, 15, 16, 19, 20, 23, 43, 56, 57, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 283, 284
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 142 146 147 148 157 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 142 146 147 148 157 158
;; rd  out 	(30)
5, 9, 12, 15, 16, 19, 20, 23, 43, 56, 57, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 283, 284
;;  UD chains for artificial uses
;;   reg 11 { d16(bb 0 insn -1) }
;;   reg 13 { d20(bb 0 insn -1) }
;;   reg 25 { d56(bb 0 insn -1) }
;;   reg 26 { d57(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 63
;;      reg 24 { d43(bb 11 insn 60) }

( 12 )->[13]->( 14 15 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u85(11){ d16(bb 0 insn -1) }u86(13){ d20(bb 0 insn -1) }u87(25){ d56(bb 0 insn -1) }u88(26){ d57(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 142 146 147 148 157 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 157
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 142 146 147 148 157 158
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(30)
5, 9, 12, 15, 16, 19, 20, 23, 43, 56, 57, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 283, 284
;; rd  gen 	(1)
42
;; rd  kill	(14)
42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 142 146 147 148 157 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 142 146 147 148 157 158
;; rd  out 	(30)
5, 9, 12, 15, 16, 19, 20, 23, 42, 56, 57, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 283, 284
;;  UD chains for artificial uses
;;   reg 11 { d16(bb 0 insn -1) }
;;   reg 13 { d20(bb 0 insn -1) }
;;   reg 25 { d56(bb 0 insn -1) }
;;   reg 26 { d57(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 64
;;      reg 133 { d261(bb 11 insn 59) }
;;      reg 157 { d283(bb 11 insn 115) }
;;   UD chains for insn luid 1 uid 65
;;      reg 24 { d42(bb 13 insn 64) }

( 11 13 )->[14]->( 15 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u92(11){ d16(bb 0 insn -1) }u93(13){ d20(bb 0 insn -1) }u94(25){ d56(bb 0 insn -1) }u95(26){ d57(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 142 146 147 148 157 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157 158
;; lr  def 	 133 159
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 142 146 147 148 157 158
;; live  gen 	 133 159
;; live  kill	 159
;; rd  in  	(31)
5, 9, 12, 15, 16, 19, 20, 23, 42, 43, 56, 57, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 283, 284
;; rd  gen 	(2)
260, 285
;; rd  kill	(2)
260, 261
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 142 146 147 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 142 146 147 148
;; rd  out 	(32)
5, 9, 12, 15, 16, 19, 20, 23, 42, 43, 56, 57, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 283, 284, 285
;;  UD chains for artificial uses
;;   reg 11 { d16(bb 0 insn -1) }
;;   reg 13 { d20(bb 0 insn -1) }
;;   reg 25 { d56(bb 0 insn -1) }
;;   reg 26 { d57(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 118
;;      reg 157 { d283(bb 11 insn 115) }
;;      reg 159 read/write { }
;;   UD chains for insn luid 2 uid 119
;;      reg 158 { d284(bb 11 insn 116) }
;;      reg 159 read/write { d286(bb 14 insn 118) }
;;   UD chains for insn luid 3 uid 120
;;      reg 159 { d286(bb 14 insn 118) d285(bb 14 insn 119) }

( 12 13 14 )->[15]->( 1 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u101(11){ d16(bb 0 insn -1) }u102(13){ d20(bb 0 insn -1) }u103(25){ d56(bb 0 insn -1) }u104(26){ d57(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 142 146 147 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 142 146 147 148
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 152 153 154 155
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 142 146 147 148
;; live  gen 	 0 [r0] 1 [r1] 134 152 153 154 155
;; live  kill	 14 [lr] 24 [cc]
;; rd  in  	(33)
5, 9, 12, 15, 16, 19, 20, 23, 42, 43, 56, 57, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 283, 284, 285
;; rd  gen 	(6)
0, 262, 279, 280, 281, 282
;; rd  kill	(14)
0, 1, 2, 3, 4, 5, 21, 22, 23, 262, 279, 280, 281, 282
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(37)
0, 9, 12, 15, 16, 19, 20, 42, 43, 56, 57, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285
;;  UD chains for artificial uses
;;   reg 11 { d16(bb 0 insn -1) }
;;   reg 13 { d20(bb 0 insn -1) }
;;   reg 25 { d56(bb 0 insn -1) }
;;   reg 26 { d57(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 73
;;      reg 147 { d275(bb 2 insn 3) }
;;   UD chains for insn luid 1 uid 74
;;      reg 133 { d261(bb 11 insn 59) d260(bb 14 insn 120) }
;;   UD chains for insn luid 2 uid 75
;;      reg 147 { d275(bb 2 insn 3) }
;;      reg 152 { d279(bb 15 insn 73) }
;;      reg 153 { d280(bb 15 insn 74) }
;;   UD chains for insn luid 3 uid 76
;;      reg 133 { d261(bb 11 insn 59) d260(bb 14 insn 120) }
;;   UD chains for insn luid 4 uid 77
;;      reg 142 { d271(bb 11 insn 57) }
;;   UD chains for insn luid 5 uid 78
;;      reg 148 { d276(bb 2 insn 4) }
;;   UD chains for insn luid 6 uid 79
;;      reg 154 { d281(bb 15 insn 76) }
;;   UD chains for insn luid 7 uid 80
;;      reg 13 { d20(bb 0 insn -1) }
;;      reg 0 { d4(bb 15 insn 78) }
;;      reg 1 { d8(bb 15 insn 79) }
;;      reg 155 { d282(bb 15 insn 77) }
;;   UD chains for insn luid 8 uid 81
;;      reg 146 { d274(bb 2 insn 2) }
;;   UD chains for insn luid 9 uid 82
;;      reg 13 { d20(bb 0 insn -1) }
;;      reg 0 { d2(bb 15 insn 81) }
;;   UD chains for insn luid 10 uid 87
;;      reg 139 { d267(bb 5 insn 27) d266(bb 6 insn 35) d265(bb 10 insn 53) }
;;   UD chains for insn luid 11 uid 93
;;      reg 0 { d0(bb 15 insn 87) }

( 15 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u123(0){ d0(bb 15 insn 87) }u124(11){ d16(bb 0 insn -1) }u125(13){ d20(bb 0 insn -1) }u126(14){ }u127(25){ d56(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(37)
0, 9, 12, 15, 16, 19, 20, 42, 43, 56, 57, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(37)
0, 9, 12, 15, 16, 19, 20, 42, 43, 56, 57, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285
;;  UD chains for artificial uses
;;   reg 0 { d0(bb 15 insn 87) }
;;   reg 11 { d16(bb 0 insn -1) }
;;   reg 13 { d20(bb 0 insn -1) }
;;   reg 14 { }
;;   reg 25 { d56(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 16 to worklist
  Adding insn 10 to worklist
  Adding insn 18 to worklist
  Adding insn 20 to worklist
  Adding insn 121 to worklist
  Adding insn 33 to worklist
  Adding insn 32 to worklist
  Adding insn 39 to worklist
  Adding insn 41 to worklist
  Adding insn 43 to worklist
  Adding insn 52 to worklist
  Adding insn 51 to worklist
  Adding insn 61 to worklist
  Adding insn 63 to worklist
  Adding insn 65 to worklist
  Adding insn 117 to worklist
  Adding insn 93 to worklist
  Adding insn 82 to worklist
  Adding insn 80 to worklist
  Adding insn 75 to worklist
Finished finding needed instructions:
  Adding insn 87 to worklist
Processing use of (reg 139 [ ret ]) in insn 87:
  Adding insn 27 to worklist
  Adding insn 35 to worklist
  Adding insn 53 to worklist
Processing use of (reg 147 [ hwc ]) in insn 75:
  Adding insn 3 to worklist
Processing use of (reg 152) in insn 75:
  Adding insn 73 to worklist
Processing use of (reg 153) in insn 75:
  Adding insn 74 to worklist
Processing use of (reg 133 [ left.797 ]) in insn 74:
  Adding insn 59 to worklist
  Adding insn 120 to worklist
Processing use of (reg 159 [ left.797 ]) in insn 120:
  Adding insn 118 to worklist
  Adding insn 119 to worklist
Processing use of (reg 158 [+4 ]) in insn 119:
  Adding insn 116 to worklist
Processing use of (reg 159 [ left.797 ]) in insn 119:
Processing use of (reg 142 [ armpmu.324 ]) in insn 116:
  Adding insn 57 to worklist
Processing use of (reg 150) in insn 57:
  Adding insn 56 to worklist
Processing use of (reg 157 [ <variable>.max_period ]) in insn 118:
  Adding insn 115 to worklist
Processing use of (reg 159 [ left.797 ]) in insn 118:
Processing use of (reg 142 [ armpmu.324 ]) in insn 115:
Processing use of (reg 141 [ left ]) in insn 59:
  Adding insn 34 to worklist
  Adding insn 50 to worklist
Processing use of (reg 141 [ left ]) in insn 50:
Processing use of (reg 143 [ D.25193 ]) in insn 50:
  Adding insn 12 to worklist
Processing use of (reg 147 [ hwc ]) in insn 12:
Processing use of (reg 143 [ D.25193 ]) in insn 34:
Processing use of (reg 147 [ hwc ]) in insn 73:
Processing use of (reg 1 r1) in insn 3:
Processing use of (reg 13 sp) in insn 80:
Processing use of (reg 0 r0) in insn 80:
  Adding insn 78 to worklist
Processing use of (reg 1 r1) in insn 80:
  Adding insn 79 to worklist
Processing use of (reg 155 [ <variable>.write_counter ]) in insn 80:
  Adding insn 77 to worklist
Processing use of (reg 142 [ armpmu.324 ]) in insn 77:
Processing use of (reg 154) in insn 79:
  Adding insn 76 to worklist
Processing use of (subreg (reg 133 [ left.797 ]) 0) in insn 76:
Processing use of (reg 148 [ idx ]) in insn 78:
  Adding insn 4 to worklist
Processing use of (reg 2 r2) in insn 4:
Processing use of (reg 13 sp) in insn 82:
Processing use of (reg 0 r0) in insn 82:
  Adding insn 81 to worklist
Processing use of (reg 146 [ event ]) in insn 81:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 0 r0) in insn 93:
Processing use of (reg 24 cc) in insn 65:
  Adding insn 64 to worklist
Processing use of (subreg (reg 133 [ left.797 ]) 0) in insn 64:
Processing use of (reg 157 [ <variable>.max_period ]) in insn 64:
Processing use of (reg 24 cc) in insn 63:
  Adding insn 60 to worklist
Processing use of (subreg (reg 133 [ left.797 ]) 4) in insn 60:
Processing use of (reg 158 [+4 ]) in insn 60:
Processing use of (reg 24 cc) in insn 61:
Processing use of (reg 141 [ left ]) in insn 51:
Processing use of (reg 144 [ D.25191 ]) in insn 51:
  Adding insn 8 to worklist
Processing use of (reg 147 [ hwc ]) in insn 51:
Processing use of (reg 147 [ hwc ]) in insn 8:
Processing use of (reg 143 [ D.25193 ]) in insn 52:
Processing use of (reg 147 [ hwc ]) in insn 52:
Processing use of (reg 24 cc) in insn 43:
  Adding insn 42 to worklist
Processing use of (subreg (reg 141 [ left ]) 0) in insn 42:
Processing use of (reg 24 cc) in insn 41:
  Adding insn 38 to worklist
Processing use of (subreg (reg 141 [ left ]) 4) in insn 38:
Processing use of (reg 24 cc) in insn 39:
Processing use of (reg 143 [ D.25193 ]) in insn 32:
Processing use of (reg 144 [ D.25191 ]) in insn 32:
Processing use of (reg 147 [ hwc ]) in insn 32:
Processing use of (reg 143 [ D.25193 ]) in insn 33:
Processing use of (reg 147 [ hwc ]) in insn 33:
Processing use of (reg 24 cc) in insn 20:
  Adding insn 19 to worklist
Processing use of (subreg (reg 141 [ left ]) 0) in insn 19:
Processing use of (subreg (reg 149) 0) in insn 19:
  Adding insn 14 to worklist
Processing use of (reg 143 [ D.25193 ]) in insn 14:
Processing use of (reg 24 cc) in insn 18:
  Adding insn 15 to worklist
Processing use of (subreg (reg 141 [ left ]) 4) in insn 15:
Processing use of (subreg (reg 149) 4) in insn 15:
Processing use of (reg 144 [ D.25191 ]) in insn 10:
Processing use of (reg 147 [ hwc ]) in insn 10:
Processing use of (reg 24 cc) in insn 16:


armpmu_event_set_period

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={6d,5u} r1={4d,2u} r2={3d,1u} r3={3d} r11={1d,15u} r12={3d} r13={1d,17u} r14={3d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={14d,9u} r25={1d,15u} r26={1d,14u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r133={2d,4u} r134={1d} r135={1d} r136={1d} r139={3d,1u} r141={3d,7u} r142={1d,3u} r143={1d,6u} r144={1d,3u} r146={1d,1u} r147={1d,9u} r148={1d,1u} r149={1d,2u} r150={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r157={1d,2u} r158={1d,2u} r159={3d,3u} 
;;    total ref usage 416{288d,128u,0e} in 53{51 regular + 2 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259
0[0,6] 1[6,4] 2[10,3] 3[13,3] 11[16,1] 12[17,3] 13[20,1] 14[21,3] 15[24,2] 16[26,2] 17[28,2] 18[30,2] 19[32,2] 20[34,2] 21[36,2] 22[38,2] 23[40,2] 24[42,14] 25[56,1] 26[57,1] 27[58,2] 28[60,2] 29[62,2] 30[64,2] 31[66,2] 32[68,2] 33[70,2] 34[72,2] 35[74,2] 36[76,2] 37[78,2] 38[80,2] 39[82,2] 40[84,2] 41[86,2] 42[88,2] 43[90,2] 44[92,2] 45[94,2] 46[96,2] 47[98,2] 48[100,2] 49[102,2] 50[104,2] 51[106,2] 52[108,2] 53[110,2] 54[112,2] 55[114,2] 56[116,2] 57[118,2] 58[120,2] 59[122,2] 60[124,2] 61[126,2] 62[128,2] 63[130,2] 64[132,2] 65[134,2] 66[136,2] 67[138,2] 68[140,2] 69[142,2] 70[144,2] 71[146,2] 72[148,2] 73[150,2] 74[152,2] 75[154,2] 76[156,2] 77[158,2] 78[160,2] 79[162,2] 80[164,2] 81[166,2] 82[168,2] 83[170,2] 84[172,2] 85[174,2] 86[176,2] 87[178,2] 88[180,2] 89[182,2] 90[184,2] 91[186,2] 92[188,2] 93[190,2] 94[192,2] 95[194,2] 96[196,2] 97[198,2] 98[200,2] 99[202,2] 100[204,2] 101[206,2] 102[208,2] 103[210,2] 104[212,2] 105[214,2] 106[216,2] 107[218,2] 108[220,2] 109[222,2] 110[224,2] 111[226,2] 112[228,2] 113[230,2] 114[232,2] 115[234,2] 116[236,2] 117[238,2] 118[240,2] 119[242,2] 120[244,2] 121[246,2] 122[248,2] 123[250,2] 124[252,2] 125[254,2] 126[256,2] 127[258,2] 133[260,2] 134[262,1] 135[263,1] 136[264,1] 139[265,3] 141[268,3] 142[271,1] 143[272,1] 144[273,1] 146[274,1] 147[275,1] 148[276,1] 149[277,1] 150[278,1] 152[279,1] 153[280,1] 154[281,1] 155[282,1] 157[283,1] 158[284,1] 159[285,3] 
(note 1 0 6 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 141 143 144 146 147 148 149
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 141 143 144 146 147 148 149
;; live  kill	 24 [cc]
;; rd  in  	(10)
5, 9, 12, 15, 16, 19, 20, 23, 56, 57
;; rd  gen 	(8)
45, 268, 272, 273, 274, 275, 276, 277
;; rd  kill	(23)
42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 268, 269, 270, 272, 273, 274, 275, 276, 277

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 6 3 2 arch/arm/kernel/perf_event.c:174 (set (reg/v/f:SI 146 [ event ])
        (reg:SI 0 r0 [ event ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ event ])
        (nil)))

(insn 3 2 4 2 arch/arm/kernel/perf_event.c:174 (set (reg/v/f:SI 147 [ hwc ])
        (reg:SI 1 r1 [ hwc ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ hwc ])
        (nil)))

(insn 4 3 5 2 arch/arm/kernel/perf_event.c:174 (set (reg/v:SI 148 [ idx ])
        (reg:SI 2 r2 [ idx ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ idx ])
        (nil)))

(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)

(insn 8 5 10 2 arch/arm/kernel/perf_event.c:175 (set (reg/f:SI 144 [ D.25191 ])
        (plus:SI (reg/v/f:SI 147 [ hwc ])
            (const_int 104 [0x68]))) 4 {*arm_addsi3} (nil))

(insn 10 8 12 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/atomic.h:248 (set (reg/v:DI 141 [ left ])
        (asm_operands/v:DI ("@ atomic64_read
	ldrexd	%0, %H0, [%1]") ("=&r") 0 [
                (reg/f:SI 144 [ D.25191 ])
                (mem/s/j:DI (plus:SI (reg/v/f:SI 147 [ hwc ])
                        (const_int 104 [0x68])) [0 <variable>.counter+0 S8 A64])
            ]
             [
                (asm_input:SI ("r") 0)
                (asm_input:DI ("Qo") 0)
            ] 2628081)) -1 (nil))

(insn 12 10 14 2 arch/arm/kernel/perf_event.c:176 (set (reg:DI 143 [ D.25193 ])
        (mem/s/j:DI (plus:SI (reg/v/f:SI 147 [ hwc ])
                (const_int 88 [0x58])) [0 <variable>.sample_period+0 S8 A64])) 163 {*arm_movdi} (nil))

(insn 14 12 15 2 arch/arm/kernel/perf_event.c:179 (parallel [
            (set (reg:DI 149)
                (neg:DI (reg:DI 143 [ D.25193 ])))
            (clobber (reg:CC 24 cc))
        ]) 125 {*arm_negdi2} (expr_list:REG_UNUSED (reg:CC 24 cc)
        (nil)))

(insn 15 14 16 2 arch/arm/kernel/perf_event.c:179 (set (reg:CC 24 cc)
        (compare:CC (subreg:SI (reg/v:DI 141 [ left ]) 4)
            (subreg:SI (reg:DI 149) 4))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 16 15 95 2 arch/arm/kernel/perf_event.c:179 (set (pc)
        (if_then_else (gt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 113)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 2 -> ( 5 3)
;; lr  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 141 143 144 146 147 148 149
;; live  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 141 143 144 146 147 148 149
;; rd  out 	(18)
5, 9, 12, 15, 16, 19, 20, 23, 45, 56, 57, 268, 272, 273, 274, 275, 276, 277


;; Succ edge  5 [50.0%] 
;; Succ edge  3 [50.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u15(11){ }u16(13){ }u17(25){ }u18(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 141 143 144 146 147 148 149
;; lr  use 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 141 143 144 146 147 148 149
;; live  gen 	
;; live  kill	
;; rd  in  	(18)
5, 9, 12, 15, 16, 19, 20, 23, 45, 56, 57, 268, 272, 273, 274, 275, 276, 277
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  2 [50.0%]  (fallthru)
(note 95 16 18 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(jump_insn 18 95 96 3 arch/arm/kernel/perf_event.c:179 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 30)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 3 -> ( 6 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 143 144 146 147 148 149
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 143 144 146 147 148 149
;; rd  out 	(18)
5, 9, 12, 15, 16, 19, 20, 23, 45, 56, 57, 268, 272, 273, 274, 275, 276, 277


;; Succ edge  6 [71.0%] 
;; Succ edge  4 [29.0%]  (fallthru)

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u20(11){ }u21(13){ }u22(25){ }u23(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 143 144 146 147 148 149
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 149
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 143 144 146 147 148 149
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(18)
5, 9, 12, 15, 16, 19, 20, 23, 45, 56, 57, 268, 272, 273, 274, 275, 276, 277
;; rd  gen 	(1)
44
;; rd  kill	(14)
42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55

;; Pred edge  3 [29.0%]  (fallthru)
(note 96 18 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 19 96 20 4 arch/arm/kernel/perf_event.c:179 (set (reg:CC 24 cc)
        (compare:CC (subreg:SI (reg/v:DI 141 [ left ]) 0)
            (subreg:SI (reg:DI 149) 0))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:DI 149)
        (nil)))

(jump_insn 20 19 113 4 arch/arm/kernel/perf_event.c:179 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 30)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 143 144 146 147 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 143 144 146 147 148
;; rd  out 	(18)
5, 9, 12, 15, 16, 19, 20, 23, 44, 56, 57, 268, 272, 273, 274, 275, 276, 277


;; Succ edge  5 [50.0%]  (fallthru)
;; Succ edge  6 [50.0%] 

;; Start of basic block ( 4 2) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u27(11){ }u28(13){ }u29(25){ }u30(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 143 144 146 147 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 139
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 143 144 146 147 148
;; live  gen 	 139
;; live  kill	
;; rd  in  	(19)
5, 9, 12, 15, 16, 19, 20, 23, 44, 45, 56, 57, 268, 272, 273, 274, 275, 276, 277
;; rd  gen 	(1)
267
;; rd  kill	(3)
265, 266, 267

;; Pred edge  4 [50.0%]  (fallthru)
;; Pred edge  2 [50.0%] 
(code_label 113 20 26 5 128 "" [1 uses])

(note 26 113 27 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 27 26 121 5 arch/arm/kernel/perf_event.c:177 (set (reg/v:SI 139 [ ret ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(jump_insn 121 27 122 5 (set (pc)
        (label_ref 36)) -1 (nil))
;; End of basic block 5 -> ( 7)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 143 144 146 147 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 143 144 146 147 148
;; rd  out 	(20)
5, 9, 12, 15, 16, 19, 20, 23, 44, 45, 56, 57, 267, 268, 272, 273, 274, 275, 276, 277


;; Succ edge  7 [100.0%] 

(barrier 122 121 30)

;; Start of basic block ( 3 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u31(11){ }u32(13){ }u33(25){ }u34(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 146 147 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 147
;; lr  def 	 24 [cc] 136 139 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 146 147 148
;; live  gen 	 136 139 141
;; live  kill	 24 [cc]
;; rd  in  	(19)
5, 9, 12, 15, 16, 19, 20, 23, 44, 45, 56, 57, 268, 272, 273, 274, 275, 276, 277
;; rd  gen 	(3)
264, 266, 270
;; rd  kill	(21)
42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 264, 265, 266, 267, 268, 269, 270

;; Pred edge  3 [71.0%] 
;; Pred edge  4 [50.0%] 
(code_label 30 122 31 6 120 "" [2 uses])

(note 31 30 32 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 32 31 33 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/atomic.h:261 (parallel [
            (set (reg/v:DI 136 [ tmp ])
                (asm_operands/v:DI ("@ atomic64_set
1:	ldrexd	%0, %H0, [%2]
	strexd	%0, %3, %H3, [%2]
	teq	%0, #0
	bne	1b") ("=&r") 0 [
                        (reg/f:SI 144 [ D.25191 ])
                        (reg:DI 143 [ D.25193 ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:DI ("r") 0)
                    ] 2629745))
            (set (mem/s/j:DI (plus:SI (reg/v/f:SI 147 [ hwc ])
                        (const_int 104 [0x68])) [0 <variable>.counter+0 S8 A64])
                (asm_operands/v:DI ("@ atomic64_set
1:	ldrexd	%0, %H0, [%2]
	strexd	%0, %3, %H3, [%2]
	teq	%0, #0
	bne	1b") ("=Qo") 1 [
                        (reg/f:SI 144 [ D.25191 ])
                        (reg:DI 143 [ D.25193 ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:DI ("r") 0)
                    ] 2629745))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg/v:DI 136 [ tmp ])
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))

(insn 33 32 34 6 arch/arm/kernel/perf_event.c:182 (set (mem/s/j:DI (plus:SI (reg/v/f:SI 147 [ hwc ])
                (const_int 96 [0x60])) [0 <variable>.last_period+0 S8 A64])
        (reg:DI 143 [ D.25193 ])) 163 {*arm_movdi} (nil))

(insn 34 33 35 6 arch/arm/kernel/perf_event.c:180 (set (reg/v:DI 141 [ left ])
        (reg:DI 143 [ D.25193 ])) 163 {*arm_movdi} (nil))

(insn 35 34 36 6 arch/arm/kernel/perf_event.c:183 (set (reg/v:SI 139 [ ret ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 6 -> ( 7)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 143 144 146 147 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 143 144 146 147 148
;; rd  out 	(19)
5, 9, 12, 15, 16, 19, 20, 23, 56, 57, 264, 266, 270, 272, 273, 274, 275, 276, 277


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 6 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u41(11){ }u42(13){ }u43(25){ }u44(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 143 144 146 147 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 143 144 146 147 148
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(23)
5, 9, 12, 15, 16, 19, 20, 23, 44, 45, 56, 57, 264, 266, 267, 268, 270, 272, 273, 274, 275, 276, 277
;; rd  gen 	(1)
55
;; rd  kill	(14)
42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55

;; Pred edge  6 [100.0%]  (fallthru)
;; Pred edge  5 [100.0%] 
(code_label 36 35 37 7 122 "" [1 uses])

(note 37 36 38 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 38 37 39 7 arch/arm/kernel/perf_event.c:186 (set (reg:CC 24 cc)
        (compare:CC (subreg:SI (reg/v:DI 141 [ left ]) 4)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 39 38 100 7 arch/arm/kernel/perf_event.c:186 (set (pc)
        (if_then_else (gt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 54)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7900 [0x1edc])
        (nil)))
;; End of basic block 7 -> ( 11 8)
;; lr  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 139 141 143 144 146 147 148
;; live  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 139 141 143 144 146 147 148
;; rd  out 	(22)
5, 9, 12, 15, 16, 19, 20, 23, 55, 56, 57, 264, 266, 267, 268, 270, 272, 273, 274, 275, 276, 277


;; Succ edge  11 [79.0%] 
;; Succ edge  8 [21.0%]  (fallthru)

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u47(11){ }u48(13){ }u49(25){ }u50(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 139 141 143 144 146 147 148
;; lr  use 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 139 141 143 144 146 147 148
;; live  gen 	
;; live  kill	
;; rd  in  	(22)
5, 9, 12, 15, 16, 19, 20, 23, 55, 56, 57, 264, 266, 267, 268, 270, 272, 273, 274, 275, 276, 277
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  7 [21.0%]  (fallthru)
(note 100 39 41 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(jump_insn 41 100 101 8 arch/arm/kernel/perf_event.c:186 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 114)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 8 -> ( 10 9)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 143 144 146 147 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 143 144 146 147 148
;; rd  out 	(22)
5, 9, 12, 15, 16, 19, 20, 23, 55, 56, 57, 264, 266, 267, 268, 270, 272, 273, 274, 275, 276, 277


;; Succ edge  10 [50.0%] 
;; Succ edge  9 [50.0%]  (fallthru)

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u52(11){ }u53(13){ }u54(25){ }u55(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 143 144 146 147 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 143 144 146 147 148
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(22)
5, 9, 12, 15, 16, 19, 20, 23, 55, 56, 57, 264, 266, 267, 268, 270, 272, 273, 274, 275, 276, 277
;; rd  gen 	(1)
54
;; rd  kill	(14)
42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55

;; Pred edge  8 [50.0%]  (fallthru)
(note 101 41 42 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 42 101 43 9 arch/arm/kernel/perf_event.c:186 (set (reg:CC 24 cc)
        (compare:CC (subreg:SI (reg/v:DI 141 [ left ]) 0)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 43 42 114 9 arch/arm/kernel/perf_event.c:186 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 54)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 9 -> ( 11 10)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 143 144 146 147 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 143 144 146 147 148
;; rd  out 	(22)
5, 9, 12, 15, 16, 19, 20, 23, 54, 56, 57, 264, 266, 267, 268, 270, 272, 273, 274, 275, 276, 277


;; Succ edge  11 [50.0%] 
;; Succ edge  10 [50.0%]  (fallthru)

;; Start of basic block ( 9 8) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u58(11){ }u59(13){ }u60(25){ }u61(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 143 144 146 147 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 143 144 147
;; lr  def 	 24 [cc] 135 139 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 143 144 146 147 148
;; live  gen 	 135 139 141
;; live  kill	 24 [cc]
;; rd  in  	(23)
5, 9, 12, 15, 16, 19, 20, 23, 54, 55, 56, 57, 264, 266, 267, 268, 270, 272, 273, 274, 275, 276, 277
;; rd  gen 	(3)
263, 265, 269
;; rd  kill	(21)
42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 263, 265, 266, 267, 268, 269, 270

;; Pred edge  9 [50.0%]  (fallthru)
;; Pred edge  8 [50.0%] 
(code_label 114 43 49 10 129 "" [1 uses])

(note 49 114 50 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 50 49 51 10 arch/arm/kernel/perf_event.c:187 (parallel [
            (set (reg/v:DI 141 [ left ])
                (plus:DI (reg/v:DI 141 [ left ])
                    (reg:DI 143 [ D.25193 ])))
            (clobber (reg:CC 24 cc))
        ]) 1 {*arm_adddi3} (expr_list:REG_UNUSED (reg:CC 24 cc)
        (nil)))

(insn 51 50 52 10 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/atomic.h:261 (parallel [
            (set (reg/v:DI 135 [ tmp ])
                (asm_operands/v:DI ("@ atomic64_set
1:	ldrexd	%0, %H0, [%2]
	strexd	%0, %3, %H3, [%2]
	teq	%0, #0
	bne	1b") ("=&r") 0 [
                        (reg/f:SI 144 [ D.25191 ])
                        (reg/v:DI 141 [ left ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:DI ("r") 0)
                    ] 2629745))
            (set (mem/s/j:DI (plus:SI (reg/v/f:SI 147 [ hwc ])
                        (const_int 104 [0x68])) [0 <variable>.counter+0 S8 A64])
                (asm_operands/v:DI ("@ atomic64_set
1:	ldrexd	%0, %H0, [%2]
	strexd	%0, %3, %H3, [%2]
	teq	%0, #0
	bne	1b") ("=Qo") 1 [
                        (reg/f:SI 144 [ D.25191 ])
                        (reg/v:DI 141 [ left ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:DI ("r") 0)
                    ] 2629745))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/f:SI 144 [ D.25191 ])
        (expr_list:REG_UNUSED (reg/v:DI 135 [ tmp ])
            (expr_list:REG_UNUSED (reg:QI 24 cc)
                (nil)))))

(insn 52 51 53 10 arch/arm/kernel/perf_event.c:189 (set (mem/s/j:DI (plus:SI (reg/v/f:SI 147 [ hwc ])
                (const_int 96 [0x60])) [0 <variable>.last_period+0 S8 A64])
        (reg:DI 143 [ D.25193 ])) 163 {*arm_movdi} (expr_list:REG_DEAD (reg:DI 143 [ D.25193 ])
        (nil)))

(insn 53 52 54 10 arch/arm/kernel/perf_event.c:190 (set (reg/v:SI 139 [ ret ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 10 -> ( 11)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 146 147 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 146 147 148
;; rd  out 	(20)
5, 9, 12, 15, 16, 19, 20, 23, 56, 57, 263, 264, 265, 269, 272, 273, 274, 275, 276, 277


;; Succ edge  11 [100.0%]  (fallthru)

;; Start of basic block ( 10 7 9) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u69(11){ }u70(13){ }u71(25){ }u72(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 146 147 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 24 [cc] 133 142 150 157 158
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 146 147 148
;; live  gen 	 24 [cc] 133 142 150 157 158
;; live  kill	
;; rd  in  	(26)
5, 9, 12, 15, 16, 19, 20, 23, 54, 55, 56, 57, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277
;; rd  gen 	(6)
43, 261, 271, 278, 283, 284
;; rd  kill	(20)
42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 260, 261, 271, 278, 283, 284

;; Pred edge  10 [100.0%]  (fallthru)
;; Pred edge  7 [79.0%] 
;; Pred edge  9 [50.0%] 
(code_label 54 53 55 11 123 "" [2 uses])

(note 55 54 56 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 56 55 57 11 arch/arm/kernel/perf_event.c:193 (set (reg/f:SI 150)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 57 56 115 11 arch/arm/kernel/perf_event.c:193 (set (reg/f:SI 142 [ armpmu.324 ])
        (mem/f/c/i:SI (reg/f:SI 150) [0 armpmu+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 150)
        (expr_list:REG_EQUAL (mem/f/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 armpmu+0 S4 A32])
            (nil))))

(insn 115 57 116 11 arch/arm/kernel/perf_event.c:193 (set (reg:SI 157 [ <variable>.max_period ])
        (mem/s/j:SI (plus:SI (reg/f:SI 142 [ armpmu.324 ])
                (const_int 64 [0x40])) [0 <variable>.max_period+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 116 115 59 11 arch/arm/kernel/perf_event.c:193 (set (reg:SI 158 [+4 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 142 [ armpmu.324 ])
                (const_int 68 [0x44])) [0 <variable>.max_period+4 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 59 116 60 11 arch/arm/kernel/perf_event.c:193 (set (reg/v:DI 133 [ left.797 ])
        (reg/v:DI 141 [ left ])) 163 {*arm_movdi} (expr_list:REG_DEAD (reg/v:DI 141 [ left ])
        (nil)))

(insn 60 59 61 11 arch/arm/kernel/perf_event.c:193 (set (reg:CC 24 cc)
        (compare:CC (subreg:SI (reg/v:DI 133 [ left.797 ]) 4)
            (reg:SI 158 [+4 ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 61 60 105 11 arch/arm/kernel/perf_event.c:193 (set (pc)
        (if_then_else (gt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 70)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 11 -> ( 14 12)
;; lr  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 133 139 142 146 147 148 157 158
;; live  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 133 139 142 146 147 148 157 158
;; rd  out 	(30)
5, 9, 12, 15, 16, 19, 20, 23, 43, 56, 57, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 283, 284


;; Succ edge  14 [50.0%] 
;; Succ edge  12 [50.0%]  (fallthru)

;; Start of basic block ( 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u80(11){ }u81(13){ }u82(25){ }u83(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 133 139 142 146 147 148 157 158
;; lr  use 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 133 139 142 146 147 148 157 158
;; live  gen 	
;; live  kill	
;; rd  in  	(30)
5, 9, 12, 15, 16, 19, 20, 23, 43, 56, 57, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 283, 284
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  11 [50.0%]  (fallthru)
(note 105 61 63 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(jump_insn 63 105 106 12 arch/arm/kernel/perf_event.c:193 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 72)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 12 -> ( 15 13)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 142 146 147 148 157 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 142 146 147 148 157 158
;; rd  out 	(30)
5, 9, 12, 15, 16, 19, 20, 23, 43, 56, 57, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 283, 284


;; Succ edge  15 [71.0%] 
;; Succ edge  13 [29.0%]  (fallthru)

;; Start of basic block ( 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u85(11){ }u86(13){ }u87(25){ }u88(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 142 146 147 148 157 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 157
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 142 146 147 148 157 158
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(30)
5, 9, 12, 15, 16, 19, 20, 23, 43, 56, 57, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 283, 284
;; rd  gen 	(1)
42
;; rd  kill	(14)
42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55

;; Pred edge  12 [29.0%]  (fallthru)
(note 106 63 64 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 64 106 65 13 arch/arm/kernel/perf_event.c:193 (set (reg:CC 24 cc)
        (compare:CC (subreg:SI (reg/v:DI 133 [ left.797 ]) 0)
            (reg:SI 157 [ <variable>.max_period ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 65 64 70 13 arch/arm/kernel/perf_event.c:193 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 72)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 13 -> ( 14 15)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 142 146 147 148 157 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 142 146 147 148 157 158
;; rd  out 	(30)
5, 9, 12, 15, 16, 19, 20, 23, 42, 56, 57, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 283, 284


;; Succ edge  14 [50.0%]  (fallthru)
;; Succ edge  15 [50.0%] 

;; Start of basic block ( 11 13) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u92(11){ }u93(13){ }u94(25){ }u95(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 142 146 147 148 157 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157 158
;; lr  def 	 133 159
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 142 146 147 148 157 158
;; live  gen 	 133 159
;; live  kill	 159
;; rd  in  	(31)
5, 9, 12, 15, 16, 19, 20, 23, 42, 43, 56, 57, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 283, 284
;; rd  gen 	(2)
260, 285
;; rd  kill	(2)
260, 261

;; Pred edge  11 [50.0%] 
;; Pred edge  13 [50.0%]  (fallthru)
(code_label 70 65 109 14 126 "" [1 uses])

(note 109 70 117 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 117 109 118 14 arch/arm/kernel/perf_event.c:193 (clobber (reg:DI 159 [ left.797 ])) -1 (nil))

(insn 118 117 119 14 arch/arm/kernel/perf_event.c:193 (set (subreg:SI (reg:DI 159 [ left.797 ]) 0)
        (reg:SI 157 [ <variable>.max_period ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 157 [ <variable>.max_period ])
        (nil)))

(insn 119 118 120 14 arch/arm/kernel/perf_event.c:193 (set (subreg:SI (reg:DI 159 [ left.797 ]) 4)
        (reg:SI 158 [+4 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 158 [+4 ])
        (nil)))

(insn 120 119 72 14 arch/arm/kernel/perf_event.c:193 (set (reg/v:DI 133 [ left.797 ])
        (reg:DI 159 [ left.797 ])) 163 {*arm_movdi} (expr_list:REG_DEAD (reg:DI 159 [ left.797 ])
        (nil)))
;; End of basic block 14 -> ( 15)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 142 146 147 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 142 146 147 148
;; rd  out 	(32)
5, 9, 12, 15, 16, 19, 20, 23, 42, 43, 56, 57, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 283, 284, 285


;; Succ edge  15 [100.0%]  (fallthru)

;; Start of basic block ( 12 13 14) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u101(11){ }u102(13){ }u103(25){ }u104(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 142 146 147 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 142 146 147 148
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 152 153 154 155
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 142 146 147 148
;; live  gen 	 0 [r0] 1 [r1] 134 152 153 154 155
;; live  kill	 14 [lr] 24 [cc]
;; rd  in  	(33)
5, 9, 12, 15, 16, 19, 20, 23, 42, 43, 56, 57, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 283, 284, 285
;; rd  gen 	(6)
0, 262, 279, 280, 281, 282
;; rd  kill	(14)
0, 1, 2, 3, 4, 5, 21, 22, 23, 262, 279, 280, 281, 282

;; Pred edge  12 [71.0%] 
;; Pred edge  13 [50.0%] 
;; Pred edge  14 [100.0%]  (fallthru)
(code_label 72 120 110 15 125 "" [2 uses])

(note 110 72 73 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 73 110 74 15 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/atomic.h:261 (set (reg/f:SI 152)
        (plus:SI (reg/v/f:SI 147 [ hwc ])
            (const_int 80 [0x50]))) 4 {*arm_addsi3} (nil))

(insn 74 73 75 15 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/atomic.h:261 (parallel [
            (set (reg:DI 153)
                (neg:DI (reg/v:DI 133 [ left.797 ])))
            (clobber (reg:CC 24 cc))
        ]) 125 {*arm_negdi2} (expr_list:REG_UNUSED (reg:CC 24 cc)
        (nil)))

(insn 75 74 76 15 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/atomic.h:261 (parallel [
            (set (reg/v:DI 134 [ tmp ])
                (asm_operands/v:DI ("@ atomic64_set
1:	ldrexd	%0, %H0, [%2]
	strexd	%0, %3, %H3, [%2]
	teq	%0, #0
	bne	1b") ("=&r") 0 [
                        (reg/f:SI 152)
                        (reg:DI 153)
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:DI ("r") 0)
                    ] 2629745))
            (set (mem/s/j:DI (plus:SI (reg/v/f:SI 147 [ hwc ])
                        (const_int 80 [0x50])) [0 <variable>.counter+0 S8 A64])
                (asm_operands/v:DI ("@ atomic64_set
1:	ldrexd	%0, %H0, [%2]
	strexd	%0, %3, %H3, [%2]
	teq	%0, #0
	bne	1b") ("=Qo") 1 [
                        (reg/f:SI 152)
                        (reg:DI 153)
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:DI ("r") 0)
                    ] 2629745))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg:DI 153)
        (expr_list:REG_DEAD (reg/f:SI 152)
            (expr_list:REG_DEAD (reg/v/f:SI 147 [ hwc ])
                (expr_list:REG_UNUSED (reg/v:DI 134 [ tmp ])
                    (expr_list:REG_UNUSED (reg:QI 24 cc)
                        (nil)))))))

(insn 76 75 77 15 arch/arm/kernel/perf_event.c:198 (set (reg:SI 154)
        (neg:SI (subreg:SI (reg/v:DI 133 [ left.797 ]) 0))) 127 {*arm_negsi2} (expr_list:REG_DEAD (reg/v:DI 133 [ left.797 ])
        (nil)))

(insn 77 76 78 15 arch/arm/kernel/perf_event.c:198 (set (reg/f:SI 155 [ <variable>.write_counter ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 142 [ armpmu.324 ])
                (const_int 28 [0x1c])) [0 <variable>.write_counter+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 142 [ armpmu.324 ])
        (nil)))

(insn 78 77 79 15 arch/arm/kernel/perf_event.c:198 (set (reg:SI 0 r0)
        (reg/v:SI 148 [ idx ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 148 [ idx ])
        (nil)))

(insn 79 78 80 15 arch/arm/kernel/perf_event.c:198 (set (reg:SI 1 r1)
        (reg:SI 154)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 154)
        (nil)))

(call_insn 80 79 81 15 arch/arm/kernel/perf_event.c:198 (parallel [
            (call (mem:SI (reg/f:SI 155 [ <variable>.write_counter ]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 244 {*call_reg_armv5} (expr_list:REG_DEAD (reg/f:SI 155 [ <variable>.write_counter ])
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_DEAD (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 81 80 82 15 arch/arm/kernel/perf_event.c:200 (set (reg:SI 0 r0)
        (reg/v/f:SI 146 [ event ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 146 [ event ])
        (nil)))

(call_insn 82 81 87 15 arch/arm/kernel/perf_event.c:200 (parallel [
            (call (mem:SI (symbol_ref:SI ("perf_event_update_userpage") [flags 0x41] <function_decl 0x113da080 perf_event_update_userpage>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 87 82 93 15 arch/arm/kernel/perf_event.c:203 (set (reg/i:SI 0 r0)
        (reg/v:SI 139 [ ret ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 139 [ ret ])
        (nil)))

(insn 93 87 0 15 arch/arm/kernel/perf_event.c:203 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 15 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(37)
0, 9, 12, 15, 16, 19, 20, 42, 43, 56, 57, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function armpmu_start (armpmu_start)[0:1315]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 9 n_edges 12 count 16 (  1.8)


armpmu_start

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={7d,4u} r1={7d,4u} r2={5d,1u} r3={4d} r11={1d,8u} r12={4d} r13={1d,11u} r14={4d,1u} r15={3d} r16={3d} r17={3d} r18={3d} r19={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={7d,4u} r25={1d,8u} r26={1d,7u} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r81={3d} r82={3d} r83={3d} r84={3d} r85={3d} r86={3d} r87={3d} r88={3d} r89={3d} r90={3d} r91={3d} r92={3d} r93={3d} r94={3d} r95={3d} r96={3d} r97={3d} r98={3d} r99={3d} r100={3d} r101={3d} r102={3d} r103={3d} r104={3d} r105={3d} r106={3d} r107={3d} r108={3d} r109={3d} r110={3d} r111={3d} r112={3d} r113={3d} r114={3d} r115={3d} r116={3d} r117={3d} r118={3d} r119={3d} r120={3d} r121={3d} r122={3d} r123={3d} r124={3d} r125={3d} r126={3d} r127={3d} r133={1d,2u} r134={1d,6u} r135={1d,1u} r136={1d,3u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r150={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} 
;;    total ref usage 462{389d,73u,0e} in 37{34 regular + 3 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371
0[0,7] 1[7,7] 2[14,5] 3[19,4] 11[23,1] 12[24,4] 13[28,1] 14[29,4] 15[33,3] 16[36,3] 17[39,3] 18[42,3] 19[45,3] 20[48,3] 21[51,3] 22[54,3] 23[57,3] 24[60,7] 25[67,1] 26[68,1] 27[69,3] 28[72,3] 29[75,3] 30[78,3] 31[81,3] 32[84,3] 33[87,3] 34[90,3] 35[93,3] 36[96,3] 37[99,3] 38[102,3] 39[105,3] 40[108,3] 41[111,3] 42[114,3] 43[117,3] 44[120,3] 45[123,3] 46[126,3] 47[129,3] 48[132,3] 49[135,3] 50[138,3] 51[141,3] 52[144,3] 53[147,3] 54[150,3] 55[153,3] 56[156,3] 57[159,3] 58[162,3] 59[165,3] 60[168,3] 61[171,3] 62[174,3] 63[177,3] 64[180,3] 65[183,3] 66[186,3] 67[189,3] 68[192,3] 69[195,3] 70[198,3] 71[201,3] 72[204,3] 73[207,3] 74[210,3] 75[213,3] 76[216,3] 77[219,3] 78[222,3] 79[225,3] 80[228,3] 81[231,3] 82[234,3] 83[237,3] 84[240,3] 85[243,3] 86[246,3] 87[249,3] 88[252,3] 89[255,3] 90[258,3] 91[261,3] 92[264,3] 93[267,3] 94[270,3] 95[273,3] 96[276,3] 97[279,3] 98[282,3] 99[285,3] 100[288,3] 101[291,3] 102[294,3] 103[297,3] 104[300,3] 105[303,3] 106[306,3] 107[309,3] 108[312,3] 109[315,3] 110[318,3] 111[321,3] 112[324,3] 113[327,3] 114[330,3] 115[333,3] 116[336,3] 117[339,3] 118[342,3] 119[345,3] 120[348,3] 121[351,3] 122[354,3] 123[357,3] 124[360,3] 125[363,3] 126[366,3] 127[369,3] 133[372,1] 134[373,1] 135[374,1] 136[375,1] 137[376,1] 138[377,1] 139[378,1] 140[379,1] 143[380,1] 144[381,1] 145[382,1] 146[383,1] 150[384,1] 152[385,1] 153[386,1] 154[387,1] 155[388,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d6(0){ }d13(1){ }d18(2){ }d22(3){ }d23(11){ }d27(12){ }d28(13){ }d32(14){ }d67(25){ }d68(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
6, 13, 18, 22, 23, 27, 28, 32, 67, 68
;; rd  kill	(35)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 67, 68
;; lr  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
6, 13, 18, 22, 23, 27, 28, 32, 67, 68

( 0 )->[2]->( 8 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d23(bb 0 insn -1) }u1(13){ d28(bb 0 insn -1) }u2(25){ d67(bb 0 insn -1) }u3(26){ d68(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 134 135 136 137
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 134 135 136 137
;; live  kill	
;; rd  in  	(10)
6, 13, 18, 22, 23, 27, 28, 32, 67, 68
;; rd  gen 	(5)
66, 373, 374, 375, 376
;; rd  kill	(11)
60, 61, 62, 63, 64, 65, 66, 373, 374, 375, 376
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135 136
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135 136
;; rd  out 	(15)
6, 13, 18, 22, 23, 27, 28, 32, 66, 67, 68, 373, 374, 375, 376
;;  UD chains for artificial uses
;;   reg 11 { d23(bb 0 insn -1) }
;;   reg 13 { d28(bb 0 insn -1) }
;;   reg 25 { d67(bb 0 insn -1) }
;;   reg 26 { d68(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d6(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 3
;;      reg 1 { d13(bb 0 insn -1) }
;;   UD chains for insn luid 3 uid 8
;;      reg 136 { d375(bb 2 insn 7) }
;;   UD chains for insn luid 4 uid 9
;;      reg 137 { d376(bb 2 insn 8) }
;;   UD chains for insn luid 5 uid 10
;;      reg 24 { d66(bb 2 insn 9) }

( 2 )->[3]->( 4 7 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u9(11){ d23(bb 0 insn -1) }u10(13){ d28(bb 0 insn -1) }u11(25){ d67(bb 0 insn -1) }u12(26){ d68(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 136
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc] 138
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 136
;; live  gen 	 24 [cc] 138
;; live  kill	
;; rd  in  	(15)
6, 13, 18, 22, 23, 27, 28, 32, 66, 67, 68, 373, 374, 375, 376
;; rd  gen 	(2)
65, 377
;; rd  kill	(8)
60, 61, 62, 63, 64, 65, 66, 377
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136
;; rd  out 	(16)
6, 13, 18, 22, 23, 27, 28, 32, 65, 67, 68, 373, 374, 375, 376, 377
;;  UD chains for artificial uses
;;   reg 11 { d23(bb 0 insn -1) }
;;   reg 13 { d28(bb 0 insn -1) }
;;   reg 25 { d67(bb 0 insn -1) }
;;   reg 26 { d68(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 12
;;      reg 135 { d374(bb 2 insn 3) }
;;   UD chains for insn luid 1 uid 13
;;      reg 138 { d377(bb 3 insn 12) }
;;   UD chains for insn luid 2 uid 14
;;      reg 24 { d65(bb 3 insn 13) }

( 3 )->[4]->( 5 7 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u16(11){ d23(bb 0 insn -1) }u17(13){ d28(bb 0 insn -1) }u18(25){ d67(bb 0 insn -1) }u19(26){ d68(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 24 [cc] 139 140
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136
;; live  gen 	 24 [cc] 139 140
;; live  kill	
;; rd  in  	(16)
6, 13, 18, 22, 23, 27, 28, 32, 65, 67, 68, 373, 374, 375, 376, 377
;; rd  gen 	(3)
64, 378, 379
;; rd  kill	(9)
60, 61, 62, 63, 64, 65, 66, 378, 379
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136
;; rd  out 	(18)
6, 13, 18, 22, 23, 27, 28, 32, 64, 67, 68, 373, 374, 375, 376, 377, 378, 379
;;  UD chains for artificial uses
;;   reg 11 { d23(bb 0 insn -1) }
;;   reg 13 { d28(bb 0 insn -1) }
;;   reg 25 { d67(bb 0 insn -1) }
;;   reg 26 { d68(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 16
;;      reg 134 { d373(bb 2 insn 2) }
;;   UD chains for insn luid 1 uid 17
;;      reg 140 { d379(bb 4 insn 16) }
;;   UD chains for insn luid 2 uid 18
;;      reg 139 { d378(bb 4 insn 17) }
;;   UD chains for insn luid 3 uid 19
;;      reg 24 { d64(bb 4 insn 18) }

( 4 )->[5]->( 6 7 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u24(11){ d23(bb 0 insn -1) }u25(13){ d28(bb 0 insn -1) }u26(25){ d67(bb 0 insn -1) }u27(26){ d68(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 24 [cc] 143 144 145 146
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136
;; live  gen 	 24 [cc] 143 144 145 146
;; live  kill	
;; rd  in  	(18)
6, 13, 18, 22, 23, 27, 28, 32, 64, 67, 68, 373, 374, 375, 376, 377, 378, 379
;; rd  gen 	(5)
63, 380, 381, 382, 383
;; rd  kill	(11)
60, 61, 62, 63, 64, 65, 66, 380, 381, 382, 383
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136
;; rd  out 	(22)
6, 13, 18, 22, 23, 27, 28, 32, 63, 67, 68, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383
;;  UD chains for artificial uses
;;   reg 11 { d23(bb 0 insn -1) }
;;   reg 13 { d28(bb 0 insn -1) }
;;   reg 25 { d67(bb 0 insn -1) }
;;   reg 26 { d68(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 22
;;      reg 136 { d375(bb 2 insn 7) }
;;   UD chains for insn luid 1 uid 24
;;      reg 143 { d380(bb 5 insn 22) }
;;   UD chains for insn luid 2 uid 25
;;      reg 144 { d381(bb 5 insn 24) }
;;   UD chains for insn luid 3 uid 26
;;      reg 145 { d382(bb 5 insn 25) }
;;   UD chains for insn luid 4 uid 27
;;      reg 146 { d383(bb 5 insn 26) }
;;   UD chains for insn luid 5 uid 28
;;      reg 24 { d63(bb 5 insn 27) }

( 5 )->[6]->( 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u34(11){ d23(bb 0 insn -1) }u35(13){ d28(bb 0 insn -1) }u36(25){ d67(bb 0 insn -1) }u37(26){ d68(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 150
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136
;; live  gen 	 0 [r0] 1 [r1] 150
;; live  kill	 14 [lr]
;; rd  in  	(22)
6, 13, 18, 22, 23, 27, 28, 32, 63, 67, 68, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383
;; rd  gen 	(1)
384
;; rd  kill	(5)
29, 30, 31, 32, 384
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; rd  out 	(22)
6, 13, 18, 22, 23, 27, 28, 63, 67, 68, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384
;;  UD chains for artificial uses
;;   reg 11 { d23(bb 0 insn -1) }
;;   reg 13 { d28(bb 0 insn -1) }
;;   reg 25 { d67(bb 0 insn -1) }
;;   reg 26 { d68(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 34
;;      reg 13 { d28(bb 0 insn -1) }
;;      reg 0 { d0(bb 6 insn 32) }
;;      reg 1 { d7(bb 6 insn 33) }
;;   UD chains for insn luid 4 uid 38
;;      reg 136 { d375(bb 2 insn 7) }
;;      reg 150 { d384(bb 6 insn 36) }

( 3 5 4 6 )->[7]->( 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u43(11){ d23(bb 0 insn -1) }u44(13){ d28(bb 0 insn -1) }u45(25){ d67(bb 0 insn -1) }u46(26){ d68(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 152 153 154 155
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 133 152 153 154 155
;; live  kill	 14 [lr]
;; rd  in  	(25)
6, 13, 18, 22, 23, 27, 28, 32, 63, 64, 65, 67, 68, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384
;; rd  gen 	(5)
372, 385, 386, 387, 388
;; rd  kill	(9)
29, 30, 31, 32, 372, 385, 386, 387, 388
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(29)
6, 13, 18, 22, 23, 27, 28, 63, 64, 65, 67, 68, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388
;;  UD chains for artificial uses
;;   reg 11 { d23(bb 0 insn -1) }
;;   reg 13 { d28(bb 0 insn -1) }
;;   reg 25 { d67(bb 0 insn -1) }
;;   reg 26 { d68(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 41
;;      reg 134 { d373(bb 2 insn 2) }
;;   UD chains for insn luid 2 uid 43
;;      reg 134 { d373(bb 2 insn 2) }
;;      reg 152 { d385(bb 7 insn 42) }
;;   UD chains for insn luid 3 uid 44
;;      reg 134 { d373(bb 2 insn 2) }
;;   UD chains for insn luid 4 uid 45
;;      reg 133 { d372(bb 7 insn 41) }
;;   UD chains for insn luid 5 uid 46
;;      reg 134 { d373(bb 2 insn 2) }
;;   UD chains for insn luid 6 uid 47
;;      reg 13 { d28(bb 0 insn -1) }
;;      reg 0 { d4(bb 7 insn 44) }
;;      reg 1 { d11(bb 7 insn 45) }
;;      reg 2 { d16(bb 7 insn 46) }
;;   UD chains for insn luid 8 uid 49
;;      reg 153 { d386(bb 7 insn 48) }
;;   UD chains for insn luid 9 uid 50
;;      reg 154 { d387(bb 7 insn 49) }
;;   UD chains for insn luid 10 uid 51
;;      reg 133 { d372(bb 7 insn 41) }
;;   UD chains for insn luid 11 uid 52
;;      reg 134 { d373(bb 2 insn 2) }
;;   UD chains for insn luid 12 uid 53
;;      reg 13 { d28(bb 0 insn -1) }
;;      reg 0 { d2(bb 7 insn 51) }
;;      reg 1 { d9(bb 7 insn 52) }
;;      reg 155 { d388(bb 7 insn 50) }

( 7 2 )->[8]->( 1 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u65(11){ d23(bb 0 insn -1) }u66(13){ d28(bb 0 insn -1) }u67(25){ d67(bb 0 insn -1) }u68(26){ d68(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(31)
6, 13, 18, 22, 23, 27, 28, 32, 63, 64, 65, 66, 67, 68, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(31)
6, 13, 18, 22, 23, 27, 28, 32, 63, 64, 65, 66, 67, 68, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388
;;  UD chains for artificial uses
;;   reg 11 { d23(bb 0 insn -1) }
;;   reg 13 { d28(bb 0 insn -1) }
;;   reg 25 { d67(bb 0 insn -1) }
;;   reg 26 { d68(bb 0 insn -1) }

( 8 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u69(11){ d23(bb 0 insn -1) }u70(13){ d28(bb 0 insn -1) }u71(14){ d32(bb 0 insn -1) }u72(25){ d67(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(31)
6, 13, 18, 22, 23, 27, 28, 32, 63, 64, 65, 66, 67, 68, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(31)
6, 13, 18, 22, 23, 27, 28, 32, 63, 64, 65, 66, 67, 68, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388
;;  UD chains for artificial uses
;;   reg 11 { d23(bb 0 insn -1) }
;;   reg 13 { d28(bb 0 insn -1) }
;;   reg 14 { d32(bb 0 insn -1) }
;;   reg 25 { d67(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 10 to worklist
  Adding insn 14 to worklist
  Adding insn 19 to worklist
  Adding insn 28 to worklist
  Adding insn 38 to worklist
  Adding insn 34 to worklist
  Adding insn 53 to worklist
  Adding insn 47 to worklist
  Adding insn 43 to worklist
Finished finding needed instructions:
Processing use of (reg 134 [ event ]) in insn 43:
  Adding insn 2 to worklist
Processing use of (reg 152) in insn 43:
  Adding insn 42 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 13 sp) in insn 47:
Processing use of (reg 0 r0) in insn 47:
  Adding insn 44 to worklist
Processing use of (reg 1 r1) in insn 47:
  Adding insn 45 to worklist
Processing use of (reg 2 r2) in insn 47:
  Adding insn 46 to worklist
Processing use of (reg 134 [ event ]) in insn 46:
Processing use of (reg 133 [ hwc ]) in insn 45:
  Adding insn 41 to worklist
Processing use of (reg 134 [ event ]) in insn 41:
Processing use of (reg 134 [ event ]) in insn 44:
Processing use of (reg 13 sp) in insn 53:
Processing use of (reg 0 r0) in insn 53:
  Adding insn 51 to worklist
Processing use of (reg 1 r1) in insn 53:
  Adding insn 52 to worklist
Processing use of (reg 155 [ <variable>.enable ]) in insn 53:
  Adding insn 50 to worklist
Processing use of (reg 154 [ armpmu ]) in insn 50:
  Adding insn 49 to worklist
Processing use of (reg 153) in insn 49:
  Adding insn 48 to worklist
Processing use of (reg 134 [ event ]) in insn 52:
Processing use of (reg 133 [ hwc ]) in insn 51:
Processing use of (reg 13 sp) in insn 34:
Processing use of (reg 0 r0) in insn 34:
  Adding insn 32 to worklist
Processing use of (reg 1 r1) in insn 34:
  Adding insn 33 to worklist
Processing use of (reg 136) in insn 38:
  Adding insn 7 to worklist
Processing use of (subreg (reg 150) 0) in insn 38:
  Adding insn 36 to worklist
Processing use of (reg 24 cc) in insn 28:
  Adding insn 27 to worklist
Processing use of (reg 146) in insn 27:
  Adding insn 26 to worklist
Processing use of (reg 145) in insn 26:
  Adding insn 25 to worklist
Processing use of (subreg (reg 144) 0) in insn 25:
  Adding insn 24 to worklist
Processing use of (reg 143 [ __warned ]) in insn 24:
  Adding insn 22 to worklist
Processing use of (reg 136) in insn 22:
Processing use of (reg 24 cc) in insn 19:
  Adding insn 18 to worklist
Processing use of (reg 139) in insn 18:
  Adding insn 17 to worklist
Processing use of (reg 140 [ <variable>.hw.state ]) in insn 17:
  Adding insn 16 to worklist
Processing use of (reg 134 [ event ]) in insn 16:
Processing use of (reg 24 cc) in insn 14:
  Adding insn 13 to worklist
Processing use of (reg 138) in insn 13:
  Adding insn 12 to worklist
Processing use of (reg 135 [ flags ]) in insn 12:
  Adding insn 3 to worklist
Processing use of (reg 1 r1) in insn 3:
Processing use of (reg 24 cc) in insn 10:
  Adding insn 9 to worklist
Processing use of (reg 137 [ armpmu ]) in insn 9:
  Adding insn 8 to worklist
Processing use of (reg 136) in insn 8:


armpmu_start

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={7d,4u} r1={7d,4u} r2={5d,1u} r3={4d} r11={1d,8u} r12={4d} r13={1d,11u} r14={4d,1u} r15={3d} r16={3d} r17={3d} r18={3d} r19={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={7d,4u} r25={1d,8u} r26={1d,7u} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r81={3d} r82={3d} r83={3d} r84={3d} r85={3d} r86={3d} r87={3d} r88={3d} r89={3d} r90={3d} r91={3d} r92={3d} r93={3d} r94={3d} r95={3d} r96={3d} r97={3d} r98={3d} r99={3d} r100={3d} r101={3d} r102={3d} r103={3d} r104={3d} r105={3d} r106={3d} r107={3d} r108={3d} r109={3d} r110={3d} r111={3d} r112={3d} r113={3d} r114={3d} r115={3d} r116={3d} r117={3d} r118={3d} r119={3d} r120={3d} r121={3d} r122={3d} r123={3d} r124={3d} r125={3d} r126={3d} r127={3d} r133={1d,2u} r134={1d,6u} r135={1d,1u} r136={1d,3u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r150={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} 
;;    total ref usage 462{389d,73u,0e} in 37{34 regular + 3 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371
0[0,7] 1[7,7] 2[14,5] 3[19,4] 11[23,1] 12[24,4] 13[28,1] 14[29,4] 15[33,3] 16[36,3] 17[39,3] 18[42,3] 19[45,3] 20[48,3] 21[51,3] 22[54,3] 23[57,3] 24[60,7] 25[67,1] 26[68,1] 27[69,3] 28[72,3] 29[75,3] 30[78,3] 31[81,3] 32[84,3] 33[87,3] 34[90,3] 35[93,3] 36[96,3] 37[99,3] 38[102,3] 39[105,3] 40[108,3] 41[111,3] 42[114,3] 43[117,3] 44[120,3] 45[123,3] 46[126,3] 47[129,3] 48[132,3] 49[135,3] 50[138,3] 51[141,3] 52[144,3] 53[147,3] 54[150,3] 55[153,3] 56[156,3] 57[159,3] 58[162,3] 59[165,3] 60[168,3] 61[171,3] 62[174,3] 63[177,3] 64[180,3] 65[183,3] 66[186,3] 67[189,3] 68[192,3] 69[195,3] 70[198,3] 71[201,3] 72[204,3] 73[207,3] 74[210,3] 75[213,3] 76[216,3] 77[219,3] 78[222,3] 79[225,3] 80[228,3] 81[231,3] 82[234,3] 83[237,3] 84[240,3] 85[243,3] 86[246,3] 87[249,3] 88[252,3] 89[255,3] 90[258,3] 91[261,3] 92[264,3] 93[267,3] 94[270,3] 95[273,3] 96[276,3] 97[279,3] 98[282,3] 99[285,3] 100[288,3] 101[291,3] 102[294,3] 103[297,3] 104[300,3] 105[303,3] 106[306,3] 107[309,3] 108[312,3] 109[315,3] 110[318,3] 111[321,3] 112[324,3] 113[327,3] 114[330,3] 115[333,3] 116[336,3] 117[339,3] 118[342,3] 119[345,3] 120[348,3] 121[351,3] 122[354,3] 123[357,3] 124[360,3] 125[363,3] 126[366,3] 127[369,3] 133[372,1] 134[373,1] 135[374,1] 136[375,1] 137[376,1] 138[377,1] 139[378,1] 140[379,1] 143[380,1] 144[381,1] 145[382,1] 146[383,1] 150[384,1] 152[385,1] 153[386,1] 154[387,1] 155[388,1] 
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 134 135 136 137
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 134 135 136 137
;; live  kill	
;; rd  in  	(10)
6, 13, 18, 22, 23, 27, 28, 32, 67, 68
;; rd  gen 	(5)
66, 373, 374, 375, 376
;; rd  kill	(11)
60, 61, 62, 63, 64, 65, 66, 373, 374, 375, 376

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 5 3 2 arch/arm/kernel/perf_event.c:268 (set (reg/v/f:SI 134 [ event ])
        (reg:SI 0 r0 [ event ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ event ])
        (nil)))

(insn 3 2 4 2 arch/arm/kernel/perf_event.c:268 (set (reg/v:SI 135 [ flags ])
        (reg:SI 1 r1 [ flags ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ flags ])
        (nil)))

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 8 2 arch/arm/kernel/perf_event.c:271 (set (reg/f:SI 136)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 8 7 9 2 arch/arm/kernel/perf_event.c:271 (set (reg/f:SI 137 [ armpmu ])
        (mem/f/c/i:SI (reg/f:SI 136) [0 armpmu+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 armpmu+0 S4 A32])
        (nil)))

(insn 9 8 10 2 arch/arm/kernel/perf_event.c:271 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 137 [ armpmu ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/f:SI 137 [ armpmu ])
        (nil)))

(jump_insn 10 9 11 2 arch/arm/kernel/perf_event.c:271 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 59)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 1014 [0x3f6])
            (nil))))
;; End of basic block 2 -> ( 8 3)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135 136
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135 136
;; rd  out 	(15)
6, 13, 18, 22, 23, 27, 28, 32, 66, 67, 68, 373, 374, 375, 376


;; Succ edge  8 [10.1%] 
;; Succ edge  3 [89.9%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u9(11){ }u10(13){ }u11(25){ }u12(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 136
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc] 138
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 136
;; live  gen 	 24 [cc] 138
;; live  kill	
;; rd  in  	(15)
6, 13, 18, 22, 23, 27, 28, 32, 66, 67, 68, 373, 374, 375, 376
;; rd  gen 	(2)
65, 377
;; rd  kill	(8)
60, 61, 62, 63, 64, 65, 66, 377

;; Pred edge  2 [89.9%]  (fallthru)
(note 11 10 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 12 11 13 3 arch/arm/kernel/perf_event.c:278 (set (reg:SI 138)
        (and:SI (reg/v:SI 135 [ flags ])
            (const_int 2 [0x2]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg/v:SI 135 [ flags ])
        (nil)))

(insn 13 12 14 3 arch/arm/kernel/perf_event.c:278 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 138)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 138)
        (nil)))

(jump_insn 14 13 15 3 arch/arm/kernel/perf_event.c:278 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 39)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 3 -> ( 4 7)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136
;; rd  out 	(16)
6, 13, 18, 22, 23, 27, 28, 32, 65, 67, 68, 373, 374, 375, 376, 377


;; Succ edge  4 [50.0%]  (fallthru)
;; Succ edge  7 [50.0%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u16(11){ }u17(13){ }u18(25){ }u19(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 24 [cc] 139 140
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136
;; live  gen 	 24 [cc] 139 140
;; live  kill	
;; rd  in  	(16)
6, 13, 18, 22, 23, 27, 28, 32, 65, 67, 68, 373, 374, 375, 376, 377
;; rd  gen 	(3)
64, 378, 379
;; rd  kill	(9)
60, 61, 62, 63, 64, 65, 66, 378, 379

;; Pred edge  3 [50.0%]  (fallthru)
(note 15 14 16 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 16 15 17 4 arch/arm/kernel/perf_event.c:269 (set (reg:SI 140 [ <variable>.hw.state ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 134 [ event ])
                (const_int 272 [0x110])) [0 <variable>.hw.state+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 17 16 18 4 arch/arm/kernel/perf_event.c:269 (set (reg:SI 139)
        (and:SI (reg:SI 140 [ <variable>.hw.state ])
            (const_int 2 [0x2]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 140 [ <variable>.hw.state ])
        (nil)))

(insn 18 17 19 4 arch/arm/kernel/perf_event.c:269 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 139)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 139)
        (nil)))

(jump_insn 19 18 20 4 arch/arm/kernel/perf_event.c:269 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 39)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 4 -> ( 5 7)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136
;; rd  out 	(18)
6, 13, 18, 22, 23, 27, 28, 32, 64, 67, 68, 373, 374, 375, 376, 377, 378, 379


;; Succ edge  5 [0.0%]  (fallthru)
;; Succ edge  7 [100.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u24(11){ }u25(13){ }u26(25){ }u27(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 24 [cc] 143 144 145 146
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136
;; live  gen 	 24 [cc] 143 144 145 146
;; live  kill	
;; rd  in  	(18)
6, 13, 18, 22, 23, 27, 28, 32, 64, 67, 68, 373, 374, 375, 376, 377, 378, 379
;; rd  gen 	(5)
63, 380, 381, 382, 383
;; rd  kill	(11)
60, 61, 62, 63, 64, 65, 66, 380, 381, 382, 383

;; Pred edge  4 [0.0%]  (fallthru)
(note 20 19 22 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 22 20 24 5 arch/arm/kernel/perf_event.c:279 discrim 1 (set (reg:SI 143 [ __warned ])
        (zero_extend:SI (mem/c/i:QI (plus:SI (reg/f:SI 136)
                    (const_int 8 [0x8])) [0 __warned+0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_EQUAL (zero_extend:SI (mem/c/i:QI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                        (const_int 8 [0x8]))) [0 __warned+0 S1 A8]))
        (nil)))

(insn 24 22 25 5 arch/arm/kernel/perf_event.c:279 discrim 1 (set (reg:SI 144)
        (xor:SI (reg:SI 143 [ __warned ])
            (const_int 1 [0x1]))) 96 {*arm_xorsi3} (expr_list:REG_DEAD (reg:SI 143 [ __warned ])
        (nil)))

(insn 25 24 26 5 arch/arm/kernel/perf_event.c:279 discrim 1 (set (reg:QI 145)
        (subreg:QI (reg:SI 144) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 144)
        (nil)))

(insn 26 25 27 5 arch/arm/kernel/perf_event.c:279 discrim 1 (set (reg:SI 146)
        (zero_extend:SI (reg:QI 145))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 145)
        (nil)))

(insn 27 26 28 5 arch/arm/kernel/perf_event.c:279 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 146)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 146)
        (nil)))

(jump_insn 28 27 29 5 arch/arm/kernel/perf_event.c:279 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 39)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 5 -> ( 6 7)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136
;; rd  out 	(22)
6, 13, 18, 22, 23, 27, 28, 32, 63, 67, 68, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383


;; Succ edge  6 [0.0%]  (fallthru)
;; Succ edge  7 [100.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u34(11){ }u35(13){ }u36(25){ }u37(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 150
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136
;; live  gen 	 0 [r0] 1 [r1] 150
;; live  kill	 14 [lr]
;; rd  in  	(22)
6, 13, 18, 22, 23, 27, 28, 32, 63, 67, 68, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383
;; rd  gen 	(1)
384
;; rd  kill	(5)
29, 30, 31, 32, 384

;; Pred edge  5 [0.0%]  (fallthru)
(note 29 28 32 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 32 29 33 6 arch/arm/kernel/perf_event.c:279 discrim 3 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC10") [flags 0x82] <string_cst 0x11664e40>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC10") [flags 0x82] <string_cst 0x11664e40>)
        (nil)))

(insn 33 32 34 6 arch/arm/kernel/perf_event.c:279 discrim 3 (set (reg:SI 1 r1)
        (const_int 279 [0x117])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 279 [0x117])
        (nil)))

(call_insn 34 33 36 6 arch/arm/kernel/perf_event.c:279 discrim 3 (parallel [
            (call (mem:SI (symbol_ref:SI ("warn_slowpath_null") [flags 0x41] <function_decl 0x10a2ed80 warn_slowpath_null>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 36 34 38 6 arch/arm/kernel/perf_event.c:279 discrim 5 (set (reg:SI 150)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 38 36 39 6 arch/arm/kernel/perf_event.c:279 discrim 5 (set (mem/c/i:QI (plus:SI (reg/f:SI 136)
                (const_int 8 [0x8])) [0 __warned+0 S1 A8])
        (subreg:QI (reg:SI 150) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 150)
        (expr_list:REG_DEAD (reg/f:SI 136)
            (expr_list:REG_EQUAL (const_int 1 [0x1])
                (nil)))))
;; End of basic block 6 -> ( 7)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; rd  out 	(22)
6, 13, 18, 22, 23, 27, 28, 63, 67, 68, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 3 5 4 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u43(11){ }u44(13){ }u45(25){ }u46(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 152 153 154 155
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 133 152 153 154 155
;; live  kill	 14 [lr]
;; rd  in  	(25)
6, 13, 18, 22, 23, 27, 28, 32, 63, 64, 65, 67, 68, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384
;; rd  gen 	(5)
372, 385, 386, 387, 388
;; rd  kill	(9)
29, 30, 31, 32, 372, 385, 386, 387, 388

;; Pred edge  3 [50.0%] 
;; Pred edge  5 [100.0%] 
;; Pred edge  4 [100.0%] 
;; Pred edge  6 [100.0%]  (fallthru)
(code_label 39 38 40 7 134 "" [3 uses])

(note 40 39 41 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 41 40 42 7 arch/arm/kernel/perf_event.c:269 (set (reg/v/f:SI 133 [ hwc ])
        (plus:SI (reg/v/f:SI 134 [ event ])
            (const_int 200 [0xc8]))) 4 {*arm_addsi3} (nil))

(insn 42 41 43 7 arch/arm/kernel/perf_event.c:281 (set (reg:SI 152)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 43 42 44 7 arch/arm/kernel/perf_event.c:281 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 134 [ event ])
                (const_int 272 [0x110])) [0 <variable>.hw.state+0 S4 A64])
        (reg:SI 152)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 152)
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn 44 43 45 7 arch/arm/kernel/perf_event.c:289 (set (reg:SI 0 r0)
        (reg/v/f:SI 134 [ event ])) 167 {*arm_movsi_insn} (nil))

(insn 45 44 46 7 arch/arm/kernel/perf_event.c:289 (set (reg:SI 1 r1)
        (reg/v/f:SI 133 [ hwc ])) 167 {*arm_movsi_insn} (nil))

(insn 46 45 47 7 arch/arm/kernel/perf_event.c:289 (set (reg:SI 2 r2)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 134 [ event ])
                (const_int 224 [0xe0])) [0 <variable>.hw.D.23168.D.23159.idx+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(call_insn 47 46 48 7 arch/arm/kernel/perf_event.c:289 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("armpmu_event_set_period") [flags 0x3] <function_decl 0x114a1580 armpmu_event_set_period>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 48 47 49 7 arch/arm/kernel/perf_event.c:290 (set (reg/f:SI 153)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 49 48 50 7 arch/arm/kernel/perf_event.c:290 (set (reg/f:SI 154 [ armpmu ])
        (mem/f/c/i:SI (reg/f:SI 153) [0 armpmu+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 153)
        (expr_list:REG_EQUAL (mem/f/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 armpmu+0 S4 A32])
            (nil))))

(insn 50 49 51 7 arch/arm/kernel/perf_event.c:290 (set (reg/f:SI 155 [ <variable>.enable ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 154 [ armpmu ])
                (const_int 12 [0xc])) [0 <variable>.enable+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 154 [ armpmu ])
        (nil)))

(insn 51 50 52 7 arch/arm/kernel/perf_event.c:290 (set (reg:SI 0 r0)
        (reg/v/f:SI 133 [ hwc ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 133 [ hwc ])
        (nil)))

(insn 52 51 53 7 arch/arm/kernel/perf_event.c:290 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 134 [ event ])
                (const_int 224 [0xe0])) [0 <variable>.hw.D.23168.D.23159.idx+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 134 [ event ])
        (nil)))

(call_insn 53 52 59 7 arch/arm/kernel/perf_event.c:290 (parallel [
            (call (mem:SI (reg/f:SI 155 [ <variable>.enable ]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 244 {*call_reg_armv5} (expr_list:REG_DEAD (reg/f:SI 155 [ <variable>.enable ])
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_DEAD (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 7 -> ( 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(29)
6, 13, 18, 22, 23, 27, 28, 63, 64, 65, 67, 68, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388


;; Succ edge  8 [100.0%]  (fallthru)

;; Start of basic block ( 7 2) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u65(11){ }u66(13){ }u67(25){ }u68(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(31)
6, 13, 18, 22, 23, 27, 28, 32, 63, 64, 65, 66, 67, 68, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  7 [100.0%]  (fallthru)
;; Pred edge  2 [10.1%] 
(code_label 59 53 62 8 135 "" [1 uses])

(note 62 59 0 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 8 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(31)
6, 13, 18, 22, 23, 27, 28, 32, 63, 64, 65, 66, 67, 68, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function armpmu_del (armpmu_del)[0:1316]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 8 (  1.6)


armpmu_del

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={11d,6u} r1={10d,4u} r2={6d} r3={6d} r11={1d,4u} r12={6d} r13={1d,10u,1d} r14={5d,1u} r15={5d} r16={5d} r17={5d} r18={5d} r19={5d} r20={5d} r21={5d} r22={5d} r23={5d} r24={6d,1u} r25={1d,4u} r26={1d,3u} r27={5d} r28={5d} r29={5d} r30={5d} r31={5d} r32={5d} r33={5d} r34={5d} r35={5d} r36={5d} r37={5d} r38={5d} r39={5d} r40={5d} r41={5d} r42={5d} r43={5d} r44={5d} r45={5d} r46={5d} r47={5d} r48={5d} r49={5d} r50={5d} r51={5d} r52={5d} r53={5d} r54={5d} r55={5d} r56={5d} r57={5d} r58={5d} r59={5d} r60={5d} r61={5d} r62={5d} r63={5d} r64={5d} r65={5d} r66={5d} r67={5d} r68={5d} r69={5d} r70={5d} r71={5d} r72={5d} r73={5d} r74={5d} r75={5d} r76={5d} r77={5d} r78={5d} r79={5d} r80={5d} r81={5d} r82={5d} r83={5d} r84={5d} r85={5d} r86={5d} r87={5d} r88={5d} r89={5d} r90={5d} r91={5d} r92={5d} r93={5d} r94={5d} r95={5d} r96={5d} r97={5d} r98={5d} r99={5d} r100={5d} r101={5d} r102={5d} r103={5d} r104={5d} r105={5d} r106={5d} r107={5d} r108={5d} r109={5d} r110={5d} r111={5d} r112={5d} r113={5d} r114={5d} r115={5d} r116={5d} r117={5d} r118={5d} r119={5d} r120={5d} r121={5d} r122={5d} r123={5d} r124={5d} r125={5d} r126={5d} r127={5d} r134={1d,1u} r135={1d,4u} r136={1d,3u} r137={1d,3u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u,1d} r144={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} 
;;    total ref usage 672{617d,53u,2e} in 30{25 regular + 5 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603
0[0,11] 1[11,10] 2[21,6] 3[27,6] 11[33,1] 12[34,6] 13[40,1] 14[41,5] 15[46,5] 16[51,5] 17[56,5] 18[61,5] 19[66,5] 20[71,5] 21[76,5] 22[81,5] 23[86,5] 24[91,6] 25[97,1] 26[98,1] 27[99,5] 28[104,5] 29[109,5] 30[114,5] 31[119,5] 32[124,5] 33[129,5] 34[134,5] 35[139,5] 36[144,5] 37[149,5] 38[154,5] 39[159,5] 40[164,5] 41[169,5] 42[174,5] 43[179,5] 44[184,5] 45[189,5] 46[194,5] 47[199,5] 48[204,5] 49[209,5] 50[214,5] 51[219,5] 52[224,5] 53[229,5] 54[234,5] 55[239,5] 56[244,5] 57[249,5] 58[254,5] 59[259,5] 60[264,5] 61[269,5] 62[274,5] 63[279,5] 64[284,5] 65[289,5] 66[294,5] 67[299,5] 68[304,5] 69[309,5] 70[314,5] 71[319,5] 72[324,5] 73[329,5] 74[334,5] 75[339,5] 76[344,5] 77[349,5] 78[354,5] 79[359,5] 80[364,5] 81[369,5] 82[374,5] 83[379,5] 84[384,5] 85[389,5] 86[394,5] 87[399,5] 88[404,5] 89[409,5] 90[414,5] 91[419,5] 92[424,5] 93[429,5] 94[434,5] 95[439,5] 96[444,5] 97[449,5] 98[454,5] 99[459,5] 100[464,5] 101[469,5] 102[474,5] 103[479,5] 104[484,5] 105[489,5] 106[494,5] 107[499,5] 108[504,5] 109[509,5] 110[514,5] 111[519,5] 112[524,5] 113[529,5] 114[534,5] 115[539,5] 116[544,5] 117[549,5] 118[554,5] 119[559,5] 120[564,5] 121[569,5] 122[574,5] 123[579,5] 124[584,5] 125[589,5] 126[594,5] 127[599,5] 134[604,1] 135[605,1] 136[606,1] 137[607,1] 139[608,1] 140[609,1] 141[610,1] 142[611,1] 143[612,1] 144[613,1] 146[614,1] 147[615,1] 148[616,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d10(0){ }d20(1){ }d26(2){ }d32(3){ }d33(11){ }d39(12){ }d40(13){ }d45(14){ }d97(25){ }d98(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
10, 20, 26, 32, 33, 39, 40, 45, 97, 98
;; rd  kill	(48)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 97, 98
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(10)
10, 20, 26, 32, 33, 39, 40, 45, 97, 98

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d33(bb 0 insn -1) }u1(13){ d40(bb 0 insn -1) }u2(25){ d97(bb 0 insn -1) }u3(26){ d98(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 134 135 136 137 139 140 141 142 143 144
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 134 135 136 137 139 140 141 142 143 144
;; live  kill	
;; rd  in  	(10)
10, 20, 26, 32, 33, 39, 40, 45, 97, 98
;; rd  gen 	(11)
96, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613
;; rd  kill	(16)
91, 92, 93, 94, 95, 96, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137
;; rd  out 	(21)
10, 20, 26, 32, 33, 39, 40, 45, 96, 97, 98, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613
;;  UD chains for artificial uses
;;   reg 11 { d33(bb 0 insn -1) }
;;   reg 13 { d40(bb 0 insn -1) }
;;   reg 25 { d97(bb 0 insn -1) }
;;   reg 26 { d98(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d10(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 8
;;      reg 139 { d608(bb 2 insn 7) }
;;   UD chains for insn luid 4 uid 11
;;      reg 13 { d40(bb 0 insn -1) }
;;   UD chains for insn luid 5 uid 12
;;      reg 142 { d611(bb 2 insn 11) }
;;   eq_note reg 13 { }
;;   UD chains for insn luid 6 uid 13
;;      reg 141 { d610(bb 2 insn 12) }
;;   UD chains for insn luid 7 uid 14
;;      reg 140 { d609(bb 2 insn 10) }
;;      reg 143 { d612(bb 2 insn 13) }
;;   eq_note reg 143 { }
;;   UD chains for insn luid 8 uid 15
;;      reg 134 { d604(bb 2 insn 8) }
;;      reg 144 { d613(bb 2 insn 14) }
;;   UD chains for insn luid 9 uid 16
;;      reg 137 { d607(bb 2 insn 2) }
;;   UD chains for insn luid 10 uid 17
;;      reg 135 { d605(bb 2 insn 16) }
;;   UD chains for insn luid 11 uid 18
;;      reg 24 { d96(bb 2 insn 17) }

( 2 )->[3]->( 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u18(11){ d33(bb 0 insn -1) }u19(13){ d40(bb 0 insn -1) }u20(25){ d97(bb 0 insn -1) }u21(26){ d98(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]
;; rd  in  	(21)
10, 20, 26, 32, 33, 39, 40, 45, 96, 97, 98, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613
;; rd  gen 	(0)

;; rd  kill	(5)
41, 42, 43, 44, 45
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137
;; rd  out 	(20)
10, 20, 26, 32, 33, 39, 40, 96, 97, 98, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613
;;  UD chains for artificial uses
;;   reg 11 { d33(bb 0 insn -1) }
;;   reg 13 { d40(bb 0 insn -1) }
;;   reg 25 { d97(bb 0 insn -1) }
;;   reg 26 { d98(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 23
;;      reg 13 { d40(bb 0 insn -1) }
;;      reg 0 { d0(bb 3 insn 21) }
;;      reg 1 { d19(bb 3 insn 22) }

( 2 3 )->[4]->( 1 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u25(11){ d33(bb 0 insn -1) }u26(13){ d40(bb 0 insn -1) }u27(25){ d97(bb 0 insn -1) }u28(26){ d98(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 146 147 148
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137
;; live  gen 	 0 [r0] 1 [r1] 146 147 148
;; live  kill	 14 [lr]
;; rd  in  	(21)
10, 20, 26, 32, 33, 39, 40, 45, 96, 97, 98, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613
;; rd  gen 	(3)
614, 615, 616
;; rd  kill	(8)
41, 42, 43, 44, 45, 614, 615, 616
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(23)
10, 20, 26, 32, 33, 39, 40, 96, 97, 98, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616
;;  UD chains for artificial uses
;;   reg 11 { d33(bb 0 insn -1) }
;;   reg 13 { d40(bb 0 insn -1) }
;;   reg 25 { d97(bb 0 insn -1) }
;;   reg 26 { d98(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 26
;;      reg 136 { d606(bb 2 insn 15) }
;;   UD chains for insn luid 1 uid 27
;;      reg 135 { d605(bb 2 insn 16) }
;;   UD chains for insn luid 2 uid 28
;;      reg 146 { d614(bb 4 insn 26) }
;;   UD chains for insn luid 3 uid 29
;;      reg 13 { d40(bb 0 insn -1) }
;;      reg 0 { d8(bb 4 insn 27) }
;;      reg 1 { d17(bb 4 insn 28) }
;;   UD chains for insn luid 4 uid 30
;;      reg 137 { d607(bb 2 insn 2) }
;;   UD chains for insn luid 6 uid 32
;;      reg 13 { d40(bb 0 insn -1) }
;;      reg 0 { d6(bb 4 insn 30) }
;;      reg 1 { d15(bb 4 insn 31) }
;;   UD chains for insn luid 8 uid 34
;;      reg 135 { d605(bb 2 insn 16) }
;;      reg 136 { d606(bb 2 insn 15) }
;;      reg 147 { d615(bb 4 insn 33) }
;;   UD chains for insn luid 9 uid 35
;;      reg 136 { d606(bb 2 insn 15) }
;;   UD chains for insn luid 10 uid 36
;;      reg 135 { d605(bb 2 insn 16) }
;;   UD chains for insn luid 11 uid 37
;;      reg 148 { d616(bb 4 insn 35) }
;;   UD chains for insn luid 12 uid 38
;;      reg 13 { d40(bb 0 insn -1) }
;;      reg 0 { d4(bb 4 insn 36) }
;;      reg 1 { d13(bb 4 insn 37) }
;;   UD chains for insn luid 13 uid 39
;;      reg 137 { d607(bb 2 insn 2) }
;;   UD chains for insn luid 14 uid 40
;;      reg 13 { d40(bb 0 insn -1) }
;;      reg 0 { d2(bb 4 insn 39) }

( 4 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u51(11){ d33(bb 0 insn -1) }u52(13){ d40(bb 0 insn -1) }u53(14){ }u54(25){ d97(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(23)
10, 20, 26, 32, 33, 39, 40, 96, 97, 98, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(23)
10, 20, 26, 32, 33, 39, 40, 96, 97, 98, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616
;;  UD chains for artificial uses
;;   reg 11 { d33(bb 0 insn -1) }
;;   reg 13 { d40(bb 0 insn -1) }
;;   reg 14 { }
;;   reg 25 { d97(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 18 to worklist
  Adding insn 23 to worklist
  Adding insn 40 to worklist
  Adding insn 38 to worklist
  Adding insn 34 to worklist
  Adding insn 32 to worklist
  Adding insn 29 to worklist
Finished finding needed instructions:
Processing use of (reg 13 sp) in insn 29:
Processing use of (reg 0 r0) in insn 29:
  Adding insn 27 to worklist
Processing use of (reg 1 r1) in insn 29:
  Adding insn 28 to worklist
Processing use of (reg 146) in insn 28:
  Adding insn 26 to worklist
Processing use of (reg 136 [ cpuc ]) in insn 26:
  Adding insn 15 to worklist
Processing use of (reg 134 [ __ptr ]) in insn 15:
  Adding insn 8 to worklist
Processing use of (reg 144) in insn 15:
  Adding insn 14 to worklist
Processing use of (reg 140) in insn 14:
  Adding insn 10 to worklist
Processing use of (reg 143 [ <variable>.cpu ]) in insn 14:
  Adding insn 13 to worklist
Processing use of (reg 141) in insn 13:
  Adding insn 12 to worklist
Processing use of (reg 142) in insn 12:
  Adding insn 11 to worklist
Processing use of (reg 13 sp) in insn 11:
Processing use of (reg 139) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 135 [ idx ]) in insn 27:
  Adding insn 16 to worklist
Processing use of (reg 137 [ event ]) in insn 16:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 13 sp) in insn 32:
Processing use of (reg 0 r0) in insn 32:
  Adding insn 30 to worklist
Processing use of (reg 1 r1) in insn 32:
  Adding insn 31 to worklist
Processing use of (reg 137 [ event ]) in insn 30:
Processing use of (reg 135 [ idx ]) in insn 34:
Processing use of (reg 136 [ cpuc ]) in insn 34:
Processing use of (reg 147) in insn 34:
  Adding insn 33 to worklist
Processing use of (reg 13 sp) in insn 38:
Processing use of (reg 0 r0) in insn 38:
  Adding insn 36 to worklist
Processing use of (reg 1 r1) in insn 38:
  Adding insn 37 to worklist
Processing use of (reg 148) in insn 37:
  Adding insn 35 to worklist
Processing use of (reg 136 [ cpuc ]) in insn 35:
Processing use of (reg 135 [ idx ]) in insn 36:
Processing use of (reg 13 sp) in insn 40:
Processing use of (reg 0 r0) in insn 40:
  Adding insn 39 to worklist
Processing use of (reg 137 [ event ]) in insn 39:
Processing use of (reg 13 sp) in insn 23:
Processing use of (reg 0 r0) in insn 23:
  Adding insn 21 to worklist
Processing use of (reg 1 r1) in insn 23:
  Adding insn 22 to worklist
Processing use of (reg 24 cc) in insn 18:
  Adding insn 17 to worklist
Processing use of (reg 135 [ idx ]) in insn 17:


armpmu_del

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={11d,6u} r1={10d,4u} r2={6d} r3={6d} r11={1d,4u} r12={6d} r13={1d,10u,1d} r14={5d,1u} r15={5d} r16={5d} r17={5d} r18={5d} r19={5d} r20={5d} r21={5d} r22={5d} r23={5d} r24={6d,1u} r25={1d,4u} r26={1d,3u} r27={5d} r28={5d} r29={5d} r30={5d} r31={5d} r32={5d} r33={5d} r34={5d} r35={5d} r36={5d} r37={5d} r38={5d} r39={5d} r40={5d} r41={5d} r42={5d} r43={5d} r44={5d} r45={5d} r46={5d} r47={5d} r48={5d} r49={5d} r50={5d} r51={5d} r52={5d} r53={5d} r54={5d} r55={5d} r56={5d} r57={5d} r58={5d} r59={5d} r60={5d} r61={5d} r62={5d} r63={5d} r64={5d} r65={5d} r66={5d} r67={5d} r68={5d} r69={5d} r70={5d} r71={5d} r72={5d} r73={5d} r74={5d} r75={5d} r76={5d} r77={5d} r78={5d} r79={5d} r80={5d} r81={5d} r82={5d} r83={5d} r84={5d} r85={5d} r86={5d} r87={5d} r88={5d} r89={5d} r90={5d} r91={5d} r92={5d} r93={5d} r94={5d} r95={5d} r96={5d} r97={5d} r98={5d} r99={5d} r100={5d} r101={5d} r102={5d} r103={5d} r104={5d} r105={5d} r106={5d} r107={5d} r108={5d} r109={5d} r110={5d} r111={5d} r112={5d} r113={5d} r114={5d} r115={5d} r116={5d} r117={5d} r118={5d} r119={5d} r120={5d} r121={5d} r122={5d} r123={5d} r124={5d} r125={5d} r126={5d} r127={5d} r134={1d,1u} r135={1d,4u} r136={1d,3u} r137={1d,3u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u,1d} r144={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} 
;;    total ref usage 672{617d,53u,2e} in 30{25 regular + 5 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603
0[0,11] 1[11,10] 2[21,6] 3[27,6] 11[33,1] 12[34,6] 13[40,1] 14[41,5] 15[46,5] 16[51,5] 17[56,5] 18[61,5] 19[66,5] 20[71,5] 21[76,5] 22[81,5] 23[86,5] 24[91,6] 25[97,1] 26[98,1] 27[99,5] 28[104,5] 29[109,5] 30[114,5] 31[119,5] 32[124,5] 33[129,5] 34[134,5] 35[139,5] 36[144,5] 37[149,5] 38[154,5] 39[159,5] 40[164,5] 41[169,5] 42[174,5] 43[179,5] 44[184,5] 45[189,5] 46[194,5] 47[199,5] 48[204,5] 49[209,5] 50[214,5] 51[219,5] 52[224,5] 53[229,5] 54[234,5] 55[239,5] 56[244,5] 57[249,5] 58[254,5] 59[259,5] 60[264,5] 61[269,5] 62[274,5] 63[279,5] 64[284,5] 65[289,5] 66[294,5] 67[299,5] 68[304,5] 69[309,5] 70[314,5] 71[319,5] 72[324,5] 73[329,5] 74[334,5] 75[339,5] 76[344,5] 77[349,5] 78[354,5] 79[359,5] 80[364,5] 81[369,5] 82[374,5] 83[379,5] 84[384,5] 85[389,5] 86[394,5] 87[399,5] 88[404,5] 89[409,5] 90[414,5] 91[419,5] 92[424,5] 93[429,5] 94[434,5] 95[439,5] 96[444,5] 97[449,5] 98[454,5] 99[459,5] 100[464,5] 101[469,5] 102[474,5] 103[479,5] 104[484,5] 105[489,5] 106[494,5] 107[499,5] 108[504,5] 109[509,5] 110[514,5] 111[519,5] 112[524,5] 113[529,5] 114[534,5] 115[539,5] 116[544,5] 117[549,5] 118[554,5] 119[559,5] 120[564,5] 121[569,5] 122[574,5] 123[579,5] 124[584,5] 125[589,5] 126[594,5] 127[599,5] 134[604,1] 135[605,1] 136[606,1] 137[607,1] 139[608,1] 140[609,1] 141[610,1] 142[611,1] 143[612,1] 144[613,1] 146[614,1] 147[615,1] 148[616,1] 
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 134 135 136 137 139 140 141 142 143 144
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 134 135 136 137 139 140 141 142 143 144
;; live  kill	
;; rd  in  	(10)
10, 20, 26, 32, 33, 39, 40, 45, 97, 98
;; rd  gen 	(11)
96, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613
;; rd  kill	(16)
91, 92, 93, 94, 95, 96, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 5 4 2 arch/arm/kernel/perf_event.c:295 (set (reg/v/f:SI 137 [ event ])
        (reg:SI 0 r0 [ event ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ event ])
        (nil)))

(note 4 2 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 8 2 arch/arm/kernel/perf_event.c:296 (set (reg/f:SI 139)
        (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 8 7 10 2 arch/arm/kernel/perf_event.c:296 (set (reg/v:SI 134 [ __ptr ])
        (asm_operands:SI ("") ("=r") 0 [
                (reg/f:SI 139)
            ]
             [
                (asm_input:SI ("0") 0)
            ] 8569250)) -1 (expr_list:REG_DEAD (reg/f:SI 139)
        (nil)))

(insn 10 8 11 2 arch/arm/kernel/perf_event.c:296 (set (reg/f:SI 140)
        (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10b1cf60 __per_cpu_offset>)) 167 {*arm_movsi_insn} (nil))

(insn 11 10 12 2 arch/arm/kernel/perf_event.c:296 (set (reg:SI 142)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 12 11 13 2 arch/arm/kernel/perf_event.c:296 (set (reg:SI 141)
        (and:SI (reg:SI 142)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 142)
        (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
                (const_int -8192 [0xffffffffffffe000]))
            (nil))))

(insn 13 12 14 2 arch/arm/kernel/perf_event.c:296 (set (reg:SI 143 [ <variable>.cpu ])
        (mem/s/j:SI (plus:SI (reg:SI 141)
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 141)
        (nil)))

(insn 14 13 15 2 arch/arm/kernel/perf_event.c:296 (set (reg:SI 144)
        (mem/s/j:SI (plus:SI (mult:SI (reg:SI 143 [ <variable>.cpu ])
                    (const_int 4 [0x4]))
                (reg/f:SI 140)) [0 __per_cpu_offset S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 143 [ <variable>.cpu ])
        (expr_list:REG_DEAD (reg/f:SI 140)
            (expr_list:REG_EQUAL (mem/s/j:SI (plus:SI (mult:SI (reg:SI 143 [ <variable>.cpu ])
                            (const_int 4 [0x4]))
                        (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10b1cf60 __per_cpu_offset>)) [0 __per_cpu_offset S4 A32])
                (nil)))))

(insn 15 14 16 2 arch/arm/kernel/perf_event.c:296 (set (reg/v/f:SI 136 [ cpuc ])
        (plus:SI (reg/v:SI 134 [ __ptr ])
            (reg:SI 144))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 144)
        (expr_list:REG_DEAD (reg/v:SI 134 [ __ptr ])
            (nil))))

(insn 16 15 17 2 arch/arm/kernel/perf_event.c:298 (set (reg/v:SI 135 [ idx ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 137 [ event ])
                (const_int 224 [0xe0])) [0 <variable>.hw.D.23168.D.23159.idx+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 17 16 18 2 arch/arm/kernel/perf_event.c:300 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 135 [ idx ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 18 17 19 2 arch/arm/kernel/perf_event.c:300 (set (pc)
        (if_then_else (ge (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 24)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137
;; rd  out 	(21)
10, 20, 26, 32, 33, 39, 40, 45, 96, 97, 98, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613


;; Succ edge  3 [0.0%]  (fallthru)
;; Succ edge  4 [100.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u18(11){ }u19(13){ }u20(25){ }u21(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]
;; rd  in  	(21)
10, 20, 26, 32, 33, 39, 40, 45, 96, 97, 98, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613
;; rd  gen 	(0)

;; rd  kill	(5)
41, 42, 43, 44, 45

;; Pred edge  2 [0.0%]  (fallthru)
(note 19 18 21 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 21 19 22 3 arch/arm/kernel/perf_event.c:300 discrim 1 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC10") [flags 0x82] <string_cst 0x11664e40>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC10") [flags 0x82] <string_cst 0x11664e40>)
        (nil)))

(insn 22 21 23 3 arch/arm/kernel/perf_event.c:300 discrim 1 (set (reg:SI 1 r1)
        (const_int 300 [0x12c])) 167 {*arm_movsi_insn} (nil))

(call_insn 23 22 24 3 arch/arm/kernel/perf_event.c:300 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("warn_slowpath_null") [flags 0x41] <function_decl 0x10a2ed80 warn_slowpath_null>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137
;; rd  out 	(20)
10, 20, 26, 32, 33, 39, 40, 96, 97, 98, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u25(11){ }u26(13){ }u27(25){ }u28(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 146 147 148
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137
;; live  gen 	 0 [r0] 1 [r1] 146 147 148
;; live  kill	 14 [lr]
;; rd  in  	(21)
10, 20, 26, 32, 33, 39, 40, 45, 96, 97, 98, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613
;; rd  gen 	(3)
614, 615, 616
;; rd  kill	(8)
41, 42, 43, 44, 45, 614, 615, 616

;; Pred edge  2 [100.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 24 23 25 4 139 "" [1 uses])

(note 25 24 26 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 26 25 27 4 arch/arm/kernel/perf_event.c:302 (set (reg/f:SI 146)
        (plus:SI (reg/v/f:SI 136 [ cpuc ])
            (const_int 140 [0x8c]))) 4 {*arm_addsi3} (nil))

(insn 27 26 28 4 arch/arm/kernel/perf_event.c:302 (set (reg:SI 0 r0)
        (reg/v:SI 135 [ idx ])) 167 {*arm_movsi_insn} (nil))

(insn 28 27 29 4 arch/arm/kernel/perf_event.c:302 (set (reg:SI 1 r1)
        (reg/f:SI 146)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 146)
        (nil)))

(call_insn 29 28 30 4 arch/arm/kernel/perf_event.c:302 (parallel [
            (call (mem:SI (symbol_ref:SI ("_clear_bit") [flags 0x41] <function_decl 0x512e0080 _clear_bit>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 30 29 31 4 arch/arm/kernel/perf_event.c:303 (set (reg:SI 0 r0)
        (reg/v/f:SI 137 [ event ])) 167 {*arm_movsi_insn} (nil))

(insn 31 30 32 4 arch/arm/kernel/perf_event.c:303 (set (reg:SI 1 r1)
        (const_int 4 [0x4])) 167 {*arm_movsi_insn} (nil))

(call_insn 32 31 33 4 arch/arm/kernel/perf_event.c:303 (parallel [
            (call (mem:SI (symbol_ref:SI ("armpmu_stop") [flags 0x3] <function_decl 0x114a1880 armpmu_stop>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 33 32 34 4 arch/arm/kernel/perf_event.c:304 (set (reg:SI 147)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 34 33 35 4 arch/arm/kernel/perf_event.c:304 (set (mem/s/f/j:SI (plus:SI (mult:SI (reg/v:SI 135 [ idx ])
                    (const_int 4 [0x4]))
                (reg/v/f:SI 136 [ cpuc ])) [0 <variable>.events S4 A32])
        (reg:SI 147)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 147)
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn 35 34 36 4 arch/arm/kernel/perf_event.c:305 (set (reg/f:SI 148)
        (plus:SI (reg/v/f:SI 136 [ cpuc ])
            (const_int 132 [0x84]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/v/f:SI 136 [ cpuc ])
        (nil)))

(insn 36 35 37 4 arch/arm/kernel/perf_event.c:305 (set (reg:SI 0 r0)
        (reg/v:SI 135 [ idx ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 135 [ idx ])
        (nil)))

(insn 37 36 38 4 arch/arm/kernel/perf_event.c:305 (set (reg:SI 1 r1)
        (reg/f:SI 148)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 148)
        (nil)))

(call_insn 38 37 39 4 arch/arm/kernel/perf_event.c:305 (parallel [
            (call (mem:SI (symbol_ref:SI ("_clear_bit") [flags 0x41] <function_decl 0x512e0080 _clear_bit>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 39 38 40 4 arch/arm/kernel/perf_event.c:307 (set (reg:SI 0 r0)
        (reg/v/f:SI 137 [ event ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 137 [ event ])
        (nil)))

(call_insn/j 40 39 41 4 arch/arm/kernel/perf_event.c:307 (parallel [
            (call (mem:SI (symbol_ref:SI ("perf_event_update_userpage") [flags 0x41] <function_decl 0x113da080 perf_event_update_userpage>) [0 S4 A32])
                (const_int 0 [0x0]))
            (return)
            (use (const_int 0 [0x0]))
        ]) 258 {*sibcall_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 4 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(23)
10, 20, 26, 32, 33, 39, 40, 96, 97, 98, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 41 40 0)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function armpmu_add (armpmu_add)[0:1317]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 9 count 9 (  1.1)
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 9 count 14 (  1.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 9 count 14 (  1.8)


armpmu_add

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={16d,11u} r1={12d,5u} r2={8d} r3={8d} r11={1d,7u} r12={8d} r13={1d,15u,1d} r14={8d,1u} r15={7d} r16={7d} r17={7d} r18={7d} r19={7d} r20={7d} r21={7d} r22={7d} r23={7d} r24={9d,2u} r25={1d,7u} r26={1d,6u} r27={7d} r28={7d} r29={7d} r30={7d} r31={7d} r32={7d} r33={7d} r34={7d} r35={7d} r36={7d} r37={7d} r38={7d} r39={7d} r40={7d} r41={7d} r42={7d} r43={7d} r44={7d} r45={7d} r46={7d} r47={7d} r48={7d} r49={7d} r50={7d} r51={7d} r52={7d} r53={7d} r54={7d} r55={7d} r56={7d} r57={7d} r58={7d} r59={7d} r60={7d} r61={7d} r62={7d} r63={7d} r64={7d} r65={7d} r66={7d} r67={7d} r68={7d} r69={7d} r70={7d} r71={7d} r72={7d} r73={7d} r74={7d} r75={7d} r76={7d} r77={7d} r78={7d} r79={7d} r80={7d} r81={7d} r82={7d} r83={7d} r84={7d} r85={7d} r86={7d} r87={7d} r88={7d} r89={7d} r90={7d} r91={7d} r92={7d} r93={7d} r94={7d} r95={7d} r96={7d} r97={7d} r98={7d} r99={7d} r100={7d} r101={7d} r102={7d} r103={7d} r104={7d} r105={7d} r106={7d} r107={7d} r108={7d} r109={7d} r110={7d} r111={7d} r112={7d} r113={7d} r114={7d} r115={7d} r116={7d} r117={7d} r118={7d} r119={7d} r120={7d} r121={7d} r122={7d} r123={7d} r124={7d} r125={7d} r126={7d} r127={7d} r134={1d,1u} r135={2d,1u} r136={1d,6u} r137={1d,2u} r138={1d,3u} r140={1d,8u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u,1d} r147={1d,1u} r148={1d,2u} r149={1d,1u} r150={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} 
;;    total ref usage 958{865d,91u,2e} in 50{43 regular + 7 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842
0[0,16] 1[16,12] 2[28,8] 3[36,8] 11[44,1] 12[45,8] 13[53,1] 14[54,8] 15[62,7] 16[69,7] 17[76,7] 18[83,7] 19[90,7] 20[97,7] 21[104,7] 22[111,7] 23[118,7] 24[125,9] 25[134,1] 26[135,1] 27[136,7] 28[143,7] 29[150,7] 30[157,7] 31[164,7] 32[171,7] 33[178,7] 34[185,7] 35[192,7] 36[199,7] 37[206,7] 38[213,7] 39[220,7] 40[227,7] 41[234,7] 42[241,7] 43[248,7] 44[255,7] 45[262,7] 46[269,7] 47[276,7] 48[283,7] 49[290,7] 50[297,7] 51[304,7] 52[311,7] 53[318,7] 54[325,7] 55[332,7] 56[339,7] 57[346,7] 58[353,7] 59[360,7] 60[367,7] 61[374,7] 62[381,7] 63[388,7] 64[395,7] 65[402,7] 66[409,7] 67[416,7] 68[423,7] 69[430,7] 70[437,7] 71[444,7] 72[451,7] 73[458,7] 74[465,7] 75[472,7] 76[479,7] 77[486,7] 78[493,7] 79[500,7] 80[507,7] 81[514,7] 82[521,7] 83[528,7] 84[535,7] 85[542,7] 86[549,7] 87[556,7] 88[563,7] 89[570,7] 90[577,7] 91[584,7] 92[591,7] 93[598,7] 94[605,7] 95[612,7] 96[619,7] 97[626,7] 98[633,7] 99[640,7] 100[647,7] 101[654,7] 102[661,7] 103[668,7] 104[675,7] 105[682,7] 106[689,7] 107[696,7] 108[703,7] 109[710,7] 110[717,7] 111[724,7] 112[731,7] 113[738,7] 114[745,7] 115[752,7] 116[759,7] 117[766,7] 118[773,7] 119[780,7] 120[787,7] 121[794,7] 122[801,7] 123[808,7] 124[815,7] 125[822,7] 126[829,7] 127[836,7] 134[843,1] 135[844,2] 136[846,1] 137[847,1] 138[848,1] 140[849,1] 141[850,1] 142[851,1] 143[852,1] 144[853,1] 145[854,1] 146[855,1] 147[856,1] 148[857,1] 149[858,1] 150[859,1] 152[860,1] 153[861,1] 154[862,1] 155[863,1] 156[864,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d15(0){ }d27(1){ }d35(2){ }d43(3){ }d44(11){ }d52(12){ }d53(13){ }d61(14){ }d134(25){ }d135(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
15, 27, 35, 43, 44, 52, 53, 61, 134, 135
;; rd  kill	(64)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 134, 135
;; lr  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(10)
15, 27, 35, 43, 44, 52, 53, 61, 134, 135

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d44(bb 0 insn -1) }u1(13){ d53(bb 0 insn -1) }u2(25){ d134(bb 0 insn -1) }u3(26){ d135(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 136 137 138 140 141 142 143 144 145 146 147 148 149 150
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 134 136 137 138 140 141 142 143 144 145 146 147 148 149 150
;; live  kill	 14 [lr]
;; rd  in  	(10)
15, 27, 35, 43, 44, 52, 53, 61, 134, 135
;; rd  gen 	(17)
11, 131, 843, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859
;; rd  kill	(48)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 54, 55, 56, 57, 58, 59, 60, 61, 125, 126, 127, 128, 129, 130, 131, 132, 133, 843, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 138 140 141 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 138 140 141 148
;; rd  out 	(25)
11, 27, 35, 43, 44, 52, 53, 131, 134, 135, 843, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859
;;  UD chains for artificial uses
;;   reg 11 { d44(bb 0 insn -1) }
;;   reg 13 { d53(bb 0 insn -1) }
;;   reg 25 { d134(bb 0 insn -1) }
;;   reg 26 { d135(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d15(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 3
;;      reg 1 { d27(bb 0 insn -1) }
;;   UD chains for insn luid 3 uid 8
;;      reg 142 { d851(bb 2 insn 7) }
;;   UD chains for insn luid 5 uid 11
;;      reg 13 { d53(bb 0 insn -1) }
;;   UD chains for insn luid 6 uid 12
;;      reg 145 { d854(bb 2 insn 11) }
;;   eq_note reg 13 { }
;;   UD chains for insn luid 7 uid 13
;;      reg 144 { d853(bb 2 insn 12) }
;;   UD chains for insn luid 8 uid 14
;;      reg 143 { d852(bb 2 insn 10) }
;;      reg 146 { d855(bb 2 insn 13) }
;;   eq_note reg 146 { }
;;   UD chains for insn luid 9 uid 15
;;      reg 134 { d843(bb 2 insn 8) }
;;      reg 147 { d856(bb 2 insn 14) }
;;   UD chains for insn luid 10 uid 16
;;      reg 140 { d849(bb 2 insn 2) }
;;   UD chains for insn luid 11 uid 17
;;      reg 140 { d849(bb 2 insn 2) }
;;   UD chains for insn luid 12 uid 18
;;      reg 13 { d53(bb 0 insn -1) }
;;      reg 0 { d14(bb 2 insn 17) }
;;   UD chains for insn luid 14 uid 20
;;      reg 148 { d857(bb 2 insn 19) }
;;   UD chains for insn luid 15 uid 21
;;      reg 149 { d858(bb 2 insn 20) }
;;   UD chains for insn luid 16 uid 22
;;      reg 138 { d848(bb 2 insn 15) }
;;   UD chains for insn luid 17 uid 23
;;      reg 137 { d847(bb 2 insn 16) }
;;   UD chains for insn luid 18 uid 24
;;      reg 13 { d53(bb 0 insn -1) }
;;      reg 0 { d12(bb 2 insn 22) }
;;      reg 1 { d25(bb 2 insn 23) }
;;      reg 150 { d859(bb 2 insn 21) }
;;   UD chains for insn luid 19 uid 25
;;      reg 0 { d11(bb 2 insn 24) }
;;   UD chains for insn luid 20 uid 26
;;      reg 136 { d846(bb 2 insn 25) }
;;   UD chains for insn luid 21 uid 27
;;      reg 24 { d131(bb 2 insn 26) }

( 2 )->[3]->( 7 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u31(11){ d44(bb 0 insn -1) }u32(13){ d53(bb 0 insn -1) }u33(25){ d134(bb 0 insn -1) }u34(26){ d135(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 140
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 135
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 140
;; live  gen 	 135
;; live  kill	
;; rd  in  	(25)
11, 27, 35, 43, 44, 52, 53, 131, 134, 135, 843, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859
;; rd  gen 	(1)
845
;; rd  kill	(2)
844, 845
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140
;; rd  out 	(26)
11, 27, 35, 43, 44, 52, 53, 131, 134, 135, 843, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859
;;  UD chains for artificial uses
;;   reg 11 { d44(bb 0 insn -1) }
;;   reg 13 { d53(bb 0 insn -1) }
;;   reg 25 { d134(bb 0 insn -1) }
;;   reg 26 { d135(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 29
;;      reg 136 { d846(bb 2 insn 25) }

( 2 )->[4]->( 5 6 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u36(11){ d44(bb 0 insn -1) }u37(13){ d53(bb 0 insn -1) }u38(25){ d134(bb 0 insn -1) }u39(26){ d135(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 138 140 141 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 138 140 141 148
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 152 153 154 155 156
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 138 140 141 148
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 152 153 154 155 156
;; live  kill	 14 [lr]
;; rd  in  	(25)
11, 27, 35, 43, 44, 52, 53, 131, 134, 135, 843, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859
;; rd  gen 	(6)
128, 860, 861, 862, 863, 864
;; rd  kill	(22)
54, 55, 56, 57, 58, 59, 60, 61, 125, 126, 127, 128, 129, 130, 131, 132, 133, 860, 861, 862, 863, 864
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; rd  out 	(30)
11, 27, 35, 43, 44, 52, 53, 128, 134, 135, 843, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864
;;  UD chains for artificial uses
;;   reg 11 { d44(bb 0 insn -1) }
;;   reg 13 { d53(bb 0 insn -1) }
;;   reg 25 { d134(bb 0 insn -1) }
;;   reg 26 { d135(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 34
;;      reg 136 { d846(bb 2 insn 25) }
;;      reg 140 { d849(bb 2 insn 2) }
;;   UD chains for insn luid 1 uid 36
;;      reg 148 { d857(bb 2 insn 19) }
;;   UD chains for insn luid 2 uid 37
;;      reg 152 { d860(bb 4 insn 36) }
;;   UD chains for insn luid 3 uid 38
;;      reg 137 { d847(bb 2 insn 16) }
;;   UD chains for insn luid 4 uid 39
;;      reg 136 { d846(bb 2 insn 25) }
;;   UD chains for insn luid 5 uid 40
;;      reg 13 { d53(bb 0 insn -1) }
;;      reg 0 { d10(bb 4 insn 38) }
;;      reg 1 { d23(bb 4 insn 39) }
;;      reg 153 { d861(bb 4 insn 37) }
;;   UD chains for insn luid 6 uid 41
;;      reg 136 { d846(bb 2 insn 25) }
;;      reg 138 { d848(bb 2 insn 15) }
;;      reg 140 { d849(bb 2 insn 2) }
;;   UD chains for insn luid 7 uid 42
;;      reg 138 { d848(bb 2 insn 15) }
;;   UD chains for insn luid 8 uid 43
;;      reg 136 { d846(bb 2 insn 25) }
;;   UD chains for insn luid 9 uid 44
;;      reg 154 { d862(bb 4 insn 42) }
;;   UD chains for insn luid 10 uid 45
;;      reg 13 { d53(bb 0 insn -1) }
;;      reg 0 { d8(bb 4 insn 43) }
;;      reg 1 { d21(bb 4 insn 44) }
;;   UD chains for insn luid 12 uid 47
;;      reg 140 { d849(bb 2 insn 2) }
;;      reg 155 { d863(bb 4 insn 46) }
;;   UD chains for insn luid 13 uid 48
;;      reg 141 { d850(bb 2 insn 3) }
;;   UD chains for insn luid 14 uid 49
;;      reg 156 { d864(bb 4 insn 48) }
;;   UD chains for insn luid 15 uid 50
;;      reg 24 { d128(bb 4 insn 49) }

( 4 )->[5]->( 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u64(11){ d44(bb 0 insn -1) }u65(13){ d53(bb 0 insn -1) }u66(25){ d134(bb 0 insn -1) }u67(26){ d135(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]
;; rd  in  	(30)
11, 27, 35, 43, 44, 52, 53, 128, 134, 135, 843, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864
;; rd  gen 	(0)

;; rd  kill	(8)
54, 55, 56, 57, 58, 59, 60, 61
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; rd  out 	(30)
11, 27, 35, 43, 44, 52, 53, 128, 134, 135, 843, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864
;;  UD chains for artificial uses
;;   reg 11 { d44(bb 0 insn -1) }
;;   reg 13 { d53(bb 0 insn -1) }
;;   reg 25 { d134(bb 0 insn -1) }
;;   reg 26 { d135(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 52
;;      reg 140 { d849(bb 2 insn 2) }
;;   UD chains for insn luid 2 uid 54
;;      reg 13 { d53(bb 0 insn -1) }
;;      reg 0 { d6(bb 5 insn 52) }
;;      reg 1 { d19(bb 5 insn 53) }

( 4 5 )->[6]->( 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u72(11){ d44(bb 0 insn -1) }u73(13){ d53(bb 0 insn -1) }u74(25){ d134(bb 0 insn -1) }u75(26){ d135(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 135
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; live  gen 	 0 [r0] 135
;; live  kill	 14 [lr]
;; rd  in  	(30)
11, 27, 35, 43, 44, 52, 53, 128, 134, 135, 843, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864
;; rd  gen 	(1)
844
;; rd  kill	(10)
54, 55, 56, 57, 58, 59, 60, 61, 844, 845
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140
;; rd  out 	(31)
11, 27, 35, 43, 44, 52, 53, 128, 134, 135, 843, 844, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864
;;  UD chains for artificial uses
;;   reg 11 { d44(bb 0 insn -1) }
;;   reg 13 { d53(bb 0 insn -1) }
;;   reg 25 { d134(bb 0 insn -1) }
;;   reg 26 { d135(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 57
;;      reg 140 { d849(bb 2 insn 2) }
;;   UD chains for insn luid 1 uid 58
;;      reg 13 { d53(bb 0 insn -1) }
;;      reg 0 { d4(bb 6 insn 57) }

( 6 3 )->[7]->( 1 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u79(11){ d44(bb 0 insn -1) }u80(13){ d53(bb 0 insn -1) }u81(25){ d134(bb 0 insn -1) }u82(26){ d135(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]
;; rd  in  	(33)
11, 27, 35, 43, 44, 52, 53, 128, 131, 134, 135, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864
;; rd  gen 	(1)
0
;; rd  kill	(24)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 54, 55, 56, 57, 58, 59, 60, 61
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(33)
0, 27, 35, 43, 44, 52, 53, 128, 131, 134, 135, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864
;;  UD chains for artificial uses
;;   reg 11 { d44(bb 0 insn -1) }
;;   reg 13 { d53(bb 0 insn -1) }
;;   reg 25 { d134(bb 0 insn -1) }
;;   reg 26 { d135(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 62
;;      reg 140 { d849(bb 2 insn 2) }
;;   UD chains for insn luid 1 uid 63
;;      reg 13 { d53(bb 0 insn -1) }
;;      reg 0 { d2(bb 7 insn 62) }
;;   UD chains for insn luid 2 uid 68
;;      reg 135 { d845(bb 3 insn 29) d844(bb 6 insn 59) }
;;   UD chains for insn luid 3 uid 74
;;      reg 0 { d0(bb 7 insn 68) }

( 7 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u88(0){ d0(bb 7 insn 68) }u89(11){ d44(bb 0 insn -1) }u90(13){ d53(bb 0 insn -1) }u91(14){ }u92(25){ d134(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(33)
0, 27, 35, 43, 44, 52, 53, 128, 131, 134, 135, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(33)
0, 27, 35, 43, 44, 52, 53, 128, 131, 134, 135, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864
;;  UD chains for artificial uses
;;   reg 0 { d0(bb 7 insn 68) }
;;   reg 11 { d44(bb 0 insn -1) }
;;   reg 13 { d53(bb 0 insn -1) }
;;   reg 14 { }
;;   reg 25 { d134(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 27 to worklist
  Adding insn 24 to worklist
  Adding insn 18 to worklist
  Adding insn 78 to worklist
  Adding insn 50 to worklist
  Adding insn 47 to worklist
  Adding insn 45 to worklist
  Adding insn 41 to worklist
  Adding insn 40 to worklist
  Adding insn 34 to worklist
  Adding insn 54 to worklist
  Adding insn 58 to worklist
  Adding insn 74 to worklist
  Adding insn 63 to worklist
Finished finding needed instructions:
  Adding insn 68 to worklist
Processing use of (reg 135 [ err ]) in insn 68:
  Adding insn 29 to worklist
  Adding insn 59 to worklist
Processing use of (reg 136 [ idx ]) in insn 29:
  Adding insn 25 to worklist
Processing use of (reg 0 r0) in insn 25:
Processing use of (reg 13 sp) in insn 63:
Processing use of (reg 0 r0) in insn 63:
  Adding insn 62 to worklist
Processing use of (reg 140 [ event ]) in insn 62:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 0 r0) in insn 74:
Processing use of (reg 13 sp) in insn 58:
Processing use of (reg 0 r0) in insn 58:
  Adding insn 57 to worklist
Processing use of (reg 140 [ event ]) in insn 57:
Processing use of (reg 13 sp) in insn 54:
Processing use of (reg 0 r0) in insn 54:
  Adding insn 52 to worklist
Processing use of (reg 1 r1) in insn 54:
  Adding insn 53 to worklist
Processing use of (reg 140 [ event ]) in insn 52:
Processing use of (reg 136 [ idx ]) in insn 34:
Processing use of (reg 140 [ event ]) in insn 34:
Processing use of (reg 13 sp) in insn 40:
Processing use of (reg 0 r0) in insn 40:
  Adding insn 38 to worklist
Processing use of (reg 1 r1) in insn 40:
  Adding insn 39 to worklist
Processing use of (reg 153 [ <variable>.disable ]) in insn 40:
  Adding insn 37 to worklist
Processing use of (reg 152 [ armpmu ]) in insn 37:
  Adding insn 36 to worklist
Processing use of (reg 148) in insn 36:
  Adding insn 19 to worklist
Processing use of (reg 136 [ idx ]) in insn 39:
Processing use of (reg 137 [ hwc ]) in insn 38:
  Adding insn 16 to worklist
Processing use of (reg 140 [ event ]) in insn 16:
Processing use of (reg 136 [ idx ]) in insn 41:
Processing use of (reg 138 [ cpuc ]) in insn 41:
  Adding insn 15 to worklist
Processing use of (reg 140 [ event ]) in insn 41:
Processing use of (reg 134 [ __ptr ]) in insn 15:
  Adding insn 8 to worklist
Processing use of (reg 147) in insn 15:
  Adding insn 14 to worklist
Processing use of (reg 143) in insn 14:
  Adding insn 10 to worklist
Processing use of (reg 146 [ <variable>.cpu ]) in insn 14:
  Adding insn 13 to worklist
Processing use of (reg 144) in insn 13:
  Adding insn 12 to worklist
Processing use of (reg 145) in insn 12:
  Adding insn 11 to worklist
Processing use of (reg 13 sp) in insn 11:
Processing use of (reg 142) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 13 sp) in insn 45:
Processing use of (reg 0 r0) in insn 45:
  Adding insn 43 to worklist
Processing use of (reg 1 r1) in insn 45:
  Adding insn 44 to worklist
Processing use of (reg 154) in insn 44:
  Adding insn 42 to worklist
Processing use of (reg 138 [ cpuc ]) in insn 42:
Processing use of (reg 136 [ idx ]) in insn 43:
Processing use of (reg 140 [ event ]) in insn 47:
Processing use of (reg 155) in insn 47:
  Adding insn 46 to worklist
Processing use of (reg 24 cc) in insn 50:
  Adding insn 49 to worklist
Processing use of (reg 156) in insn 49:
  Adding insn 48 to worklist
Processing use of (reg 141 [ flags ]) in insn 48:
  Adding insn 3 to worklist
Processing use of (reg 1 r1) in insn 3:
Processing use of (reg 13 sp) in insn 18:
Processing use of (reg 0 r0) in insn 18:
  Adding insn 17 to worklist
Processing use of (reg 140 [ event ]) in insn 17:
Processing use of (reg 13 sp) in insn 24:
Processing use of (reg 0 r0) in insn 24:
  Adding insn 22 to worklist
Processing use of (reg 1 r1) in insn 24:
  Adding insn 23 to worklist
Processing use of (reg 150 [ <variable>.get_event_idx ]) in insn 24:
  Adding insn 21 to worklist
Processing use of (reg 149 [ armpmu ]) in insn 21:
  Adding insn 20 to worklist
Processing use of (reg 148) in insn 20:
Processing use of (reg 137 [ hwc ]) in insn 23:
Processing use of (reg 138 [ cpuc ]) in insn 22:
Processing use of (reg 24 cc) in insn 27:
  Adding insn 26 to worklist
Processing use of (reg 136 [ idx ]) in insn 26:


armpmu_add

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={16d,11u} r1={12d,5u} r2={8d} r3={8d} r11={1d,7u} r12={8d} r13={1d,15u,1d} r14={8d,1u} r15={7d} r16={7d} r17={7d} r18={7d} r19={7d} r20={7d} r21={7d} r22={7d} r23={7d} r24={9d,2u} r25={1d,7u} r26={1d,6u} r27={7d} r28={7d} r29={7d} r30={7d} r31={7d} r32={7d} r33={7d} r34={7d} r35={7d} r36={7d} r37={7d} r38={7d} r39={7d} r40={7d} r41={7d} r42={7d} r43={7d} r44={7d} r45={7d} r46={7d} r47={7d} r48={7d} r49={7d} r50={7d} r51={7d} r52={7d} r53={7d} r54={7d} r55={7d} r56={7d} r57={7d} r58={7d} r59={7d} r60={7d} r61={7d} r62={7d} r63={7d} r64={7d} r65={7d} r66={7d} r67={7d} r68={7d} r69={7d} r70={7d} r71={7d} r72={7d} r73={7d} r74={7d} r75={7d} r76={7d} r77={7d} r78={7d} r79={7d} r80={7d} r81={7d} r82={7d} r83={7d} r84={7d} r85={7d} r86={7d} r87={7d} r88={7d} r89={7d} r90={7d} r91={7d} r92={7d} r93={7d} r94={7d} r95={7d} r96={7d} r97={7d} r98={7d} r99={7d} r100={7d} r101={7d} r102={7d} r103={7d} r104={7d} r105={7d} r106={7d} r107={7d} r108={7d} r109={7d} r110={7d} r111={7d} r112={7d} r113={7d} r114={7d} r115={7d} r116={7d} r117={7d} r118={7d} r119={7d} r120={7d} r121={7d} r122={7d} r123={7d} r124={7d} r125={7d} r126={7d} r127={7d} r134={1d,1u} r135={2d,1u} r136={1d,6u} r137={1d,2u} r138={1d,3u} r140={1d,8u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u,1d} r147={1d,1u} r148={1d,2u} r149={1d,1u} r150={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} 
;;    total ref usage 958{865d,91u,2e} in 50{43 regular + 7 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842
0[0,16] 1[16,12] 2[28,8] 3[36,8] 11[44,1] 12[45,8] 13[53,1] 14[54,8] 15[62,7] 16[69,7] 17[76,7] 18[83,7] 19[90,7] 20[97,7] 21[104,7] 22[111,7] 23[118,7] 24[125,9] 25[134,1] 26[135,1] 27[136,7] 28[143,7] 29[150,7] 30[157,7] 31[164,7] 32[171,7] 33[178,7] 34[185,7] 35[192,7] 36[199,7] 37[206,7] 38[213,7] 39[220,7] 40[227,7] 41[234,7] 42[241,7] 43[248,7] 44[255,7] 45[262,7] 46[269,7] 47[276,7] 48[283,7] 49[290,7] 50[297,7] 51[304,7] 52[311,7] 53[318,7] 54[325,7] 55[332,7] 56[339,7] 57[346,7] 58[353,7] 59[360,7] 60[367,7] 61[374,7] 62[381,7] 63[388,7] 64[395,7] 65[402,7] 66[409,7] 67[416,7] 68[423,7] 69[430,7] 70[437,7] 71[444,7] 72[451,7] 73[458,7] 74[465,7] 75[472,7] 76[479,7] 77[486,7] 78[493,7] 79[500,7] 80[507,7] 81[514,7] 82[521,7] 83[528,7] 84[535,7] 85[542,7] 86[549,7] 87[556,7] 88[563,7] 89[570,7] 90[577,7] 91[584,7] 92[591,7] 93[598,7] 94[605,7] 95[612,7] 96[619,7] 97[626,7] 98[633,7] 99[640,7] 100[647,7] 101[654,7] 102[661,7] 103[668,7] 104[675,7] 105[682,7] 106[689,7] 107[696,7] 108[703,7] 109[710,7] 110[717,7] 111[724,7] 112[731,7] 113[738,7] 114[745,7] 115[752,7] 116[759,7] 117[766,7] 118[773,7] 119[780,7] 120[787,7] 121[794,7] 122[801,7] 123[808,7] 124[815,7] 125[822,7] 126[829,7] 127[836,7] 134[843,1] 135[844,2] 136[846,1] 137[847,1] 138[848,1] 140[849,1] 141[850,1] 142[851,1] 143[852,1] 144[853,1] 145[854,1] 146[855,1] 147[856,1] 148[857,1] 149[858,1] 150[859,1] 152[860,1] 153[861,1] 154[862,1] 155[863,1] 156[864,1] 
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 136 137 138 140 141 142 143 144 145 146 147 148 149 150
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 134 136 137 138 140 141 142 143 144 145 146 147 148 149 150
;; live  kill	 14 [lr]
;; rd  in  	(10)
15, 27, 35, 43, 44, 52, 53, 61, 134, 135
;; rd  gen 	(17)
11, 131, 843, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859
;; rd  kill	(48)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 54, 55, 56, 57, 58, 59, 60, 61, 125, 126, 127, 128, 129, 130, 131, 132, 133, 843, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 5 3 2 arch/arm/kernel/perf_event.c:312 (set (reg/v/f:SI 140 [ event ])
        (reg:SI 0 r0 [ event ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ event ])
        (nil)))

(insn 3 2 4 2 arch/arm/kernel/perf_event.c:312 (set (reg/v:SI 141 [ flags ])
        (reg:SI 1 r1 [ flags ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ flags ])
        (nil)))

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 8 2 arch/arm/kernel/perf_event.c:313 (set (reg/f:SI 142)
        (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 8 7 10 2 arch/arm/kernel/perf_event.c:313 (set (reg/v:SI 134 [ __ptr ])
        (asm_operands:SI ("") ("=r") 0 [
                (reg/f:SI 142)
            ]
             [
                (asm_input:SI ("0") 0)
            ] 8571426)) -1 (expr_list:REG_DEAD (reg/f:SI 142)
        (nil)))

(insn 10 8 11 2 arch/arm/kernel/perf_event.c:313 (set (reg/f:SI 143)
        (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10b1cf60 __per_cpu_offset>)) 167 {*arm_movsi_insn} (nil))

(insn 11 10 12 2 arch/arm/kernel/perf_event.c:313 (set (reg:SI 145)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 12 11 13 2 arch/arm/kernel/perf_event.c:313 (set (reg:SI 144)
        (and:SI (reg:SI 145)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 145)
        (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
                (const_int -8192 [0xffffffffffffe000]))
            (nil))))

(insn 13 12 14 2 arch/arm/kernel/perf_event.c:313 (set (reg:SI 146 [ <variable>.cpu ])
        (mem/s/j:SI (plus:SI (reg:SI 144)
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 144)
        (nil)))

(insn 14 13 15 2 arch/arm/kernel/perf_event.c:313 (set (reg:SI 147)
        (mem/s/j:SI (plus:SI (mult:SI (reg:SI 146 [ <variable>.cpu ])
                    (const_int 4 [0x4]))
                (reg/f:SI 143)) [0 __per_cpu_offset S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 146 [ <variable>.cpu ])
        (expr_list:REG_DEAD (reg/f:SI 143)
            (expr_list:REG_EQUAL (mem/s/j:SI (plus:SI (mult:SI (reg:SI 146 [ <variable>.cpu ])
                            (const_int 4 [0x4]))
                        (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10b1cf60 __per_cpu_offset>)) [0 __per_cpu_offset S4 A32])
                (nil)))))

(insn 15 14 16 2 arch/arm/kernel/perf_event.c:313 (set (reg/v/f:SI 138 [ cpuc ])
        (plus:SI (reg/v:SI 134 [ __ptr ])
            (reg:SI 147))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 147)
        (expr_list:REG_DEAD (reg/v:SI 134 [ __ptr ])
            (nil))))

(insn 16 15 17 2 arch/arm/kernel/perf_event.c:314 (set (reg/v/f:SI 137 [ hwc ])
        (plus:SI (reg/v/f:SI 140 [ event ])
            (const_int 200 [0xc8]))) 4 {*arm_addsi3} (nil))

(insn 17 16 18 2 arch/arm/kernel/perf_event.c:318 (set (reg:SI 0 r0)
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 140 [ event ])
                (const_int 44 [0x2c])) [0 <variable>.pmu+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn 18 17 19 2 arch/arm/kernel/perf_event.c:318 (parallel [
            (call (mem:SI (symbol_ref:SI ("perf_pmu_disable") [flags 0x41] <function_decl 0x113bae00 perf_pmu_disable>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 19 18 20 2 arch/arm/kernel/perf_event.c:321 (set (reg/f:SI 148)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 20 19 21 2 arch/arm/kernel/perf_event.c:321 (set (reg/f:SI 149 [ armpmu ])
        (mem/f/c/i:SI (reg/f:SI 148) [0 armpmu+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 armpmu+0 S4 A32])
        (nil)))

(insn 21 20 22 2 arch/arm/kernel/perf_event.c:321 (set (reg/f:SI 150 [ <variable>.get_event_idx ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 149 [ armpmu ])
                (const_int 20 [0x14])) [0 <variable>.get_event_idx+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 149 [ armpmu ])
        (nil)))

(insn 22 21 23 2 arch/arm/kernel/perf_event.c:321 (set (reg:SI 0 r0)
        (reg/v/f:SI 138 [ cpuc ])) 167 {*arm_movsi_insn} (nil))

(insn 23 22 24 2 arch/arm/kernel/perf_event.c:321 (set (reg:SI 1 r1)
        (reg/v/f:SI 137 [ hwc ])) 167 {*arm_movsi_insn} (nil))

(call_insn 24 23 25 2 arch/arm/kernel/perf_event.c:321 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (reg/f:SI 150 [ <variable>.get_event_idx ]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 249 {*call_value_reg_armv5} (expr_list:REG_DEAD (reg/f:SI 150 [ <variable>.get_event_idx ])
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 25 24 26 2 arch/arm/kernel/perf_event.c:321 (set (reg/v:SI 136 [ idx ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 26 25 27 2 arch/arm/kernel/perf_event.c:322 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 136 [ idx ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 27 26 28 2 arch/arm/kernel/perf_event.c:322 (set (pc)
        (if_then_else (ge (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 32)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6333 [0x18bd])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 138 140 141 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 138 140 141 148
;; rd  out 	(25)
11, 27, 35, 43, 44, 52, 53, 131, 134, 135, 843, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859


;; Succ edge  3 [36.7%]  (fallthru)
;; Succ edge  4 [63.3%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u31(11){ }u32(13){ }u33(25){ }u34(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 140
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 135
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 140
;; live  gen 	 135
;; live  kill	
;; rd  in  	(25)
11, 27, 35, 43, 44, 52, 53, 131, 134, 135, 843, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859
;; rd  gen 	(1)
845
;; rd  kill	(2)
844, 845

;; Pred edge  2 [36.7%]  (fallthru)
(note 28 27 29 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 29 28 78 3 arch/arm/kernel/perf_event.c:322 (set (reg/v:SI 135 [ err ])
        (reg/v:SI 136 [ idx ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 136 [ idx ])
        (nil)))

(jump_insn 78 29 79 3 (set (pc)
        (label_ref 60)) -1 (nil))
;; End of basic block 3 -> ( 7)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140
;; rd  out 	(26)
11, 27, 35, 43, 44, 52, 53, 131, 134, 135, 843, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859


;; Succ edge  7 [100.0%] 

(barrier 79 78 32)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u36(11){ }u37(13){ }u38(25){ }u39(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 138 140 141 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 138 140 141 148
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 152 153 154 155 156
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 138 140 141 148
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 152 153 154 155 156
;; live  kill	 14 [lr]
;; rd  in  	(25)
11, 27, 35, 43, 44, 52, 53, 131, 134, 135, 843, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859
;; rd  gen 	(6)
128, 860, 861, 862, 863, 864
;; rd  kill	(22)
54, 55, 56, 57, 58, 59, 60, 61, 125, 126, 127, 128, 129, 130, 131, 132, 133, 860, 861, 862, 863, 864

;; Pred edge  2 [63.3%] 
(code_label 32 79 33 4 144 "" [1 uses])

(note 33 32 34 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 34 33 36 4 arch/arm/kernel/perf_event.c:331 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 140 [ event ])
                (const_int 224 [0xe0])) [0 <variable>.hw.D.23168.D.23159.idx+0 S4 A64])
        (reg/v:SI 136 [ idx ])) 167 {*arm_movsi_insn} (nil))

(insn 36 34 37 4 arch/arm/kernel/perf_event.c:332 (set (reg/f:SI 152 [ armpmu ])
        (mem/f/c/i:SI (reg/f:SI 148) [0 armpmu+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 148)
        (expr_list:REG_EQUAL (mem/f/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 armpmu+0 S4 A32])
            (nil))))

(insn 37 36 38 4 arch/arm/kernel/perf_event.c:332 (set (reg/f:SI 153 [ <variable>.disable ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 152 [ armpmu ])
                (const_int 16 [0x10])) [0 <variable>.disable+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 152 [ armpmu ])
        (nil)))

(insn 38 37 39 4 arch/arm/kernel/perf_event.c:332 (set (reg:SI 0 r0)
        (reg/v/f:SI 137 [ hwc ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 137 [ hwc ])
        (nil)))

(insn 39 38 40 4 arch/arm/kernel/perf_event.c:332 (set (reg:SI 1 r1)
        (reg/v:SI 136 [ idx ])) 167 {*arm_movsi_insn} (nil))

(call_insn 40 39 41 4 arch/arm/kernel/perf_event.c:332 (parallel [
            (call (mem:SI (reg/f:SI 153 [ <variable>.disable ]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 244 {*call_reg_armv5} (expr_list:REG_DEAD (reg/f:SI 153 [ <variable>.disable ])
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_DEAD (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 41 40 42 4 arch/arm/kernel/perf_event.c:333 (set (mem/s/f/j:SI (plus:SI (mult:SI (reg/v:SI 136 [ idx ])
                    (const_int 4 [0x4]))
                (reg/v/f:SI 138 [ cpuc ])) [0 <variable>.events S4 A32])
        (reg/v/f:SI 140 [ event ])) 167 {*arm_movsi_insn} (nil))

(insn 42 41 43 4 arch/arm/kernel/perf_event.c:334 (set (reg/f:SI 154)
        (plus:SI (reg/v/f:SI 138 [ cpuc ])
            (const_int 140 [0x8c]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/v/f:SI 138 [ cpuc ])
        (nil)))

(insn 43 42 44 4 arch/arm/kernel/perf_event.c:334 (set (reg:SI 0 r0)
        (reg/v:SI 136 [ idx ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 136 [ idx ])
        (nil)))

(insn 44 43 45 4 arch/arm/kernel/perf_event.c:334 (set (reg:SI 1 r1)
        (reg/f:SI 154)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 154)
        (nil)))

(call_insn 45 44 46 4 arch/arm/kernel/perf_event.c:334 (parallel [
            (call (mem:SI (symbol_ref:SI ("_set_bit") [flags 0x41] <function_decl 0x512e0000 _set_bit>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 46 45 47 4 arch/arm/kernel/perf_event.c:336 (set (reg:SI 155)
        (const_int 3 [0x3])) 167 {*arm_movsi_insn} (nil))

(insn 47 46 48 4 arch/arm/kernel/perf_event.c:336 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 140 [ event ])
                (const_int 272 [0x110])) [0 <variable>.hw.state+0 S4 A64])
        (reg:SI 155)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 155)
        (expr_list:REG_EQUAL (const_int 3 [0x3])
            (nil))))

(insn 48 47 49 4 arch/arm/kernel/perf_event.c:337 (set (reg:SI 156)
        (and:SI (reg/v:SI 141 [ flags ])
            (const_int 1 [0x1]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg/v:SI 141 [ flags ])
        (nil)))

(insn 49 48 50 4 arch/arm/kernel/perf_event.c:337 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 156)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 156)
        (nil)))

(jump_insn 50 49 51 4 arch/arm/kernel/perf_event.c:337 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 55)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; rd  out 	(30)
11, 27, 35, 43, 44, 52, 53, 128, 134, 135, 843, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864


;; Succ edge  5 [29.0%]  (fallthru)
;; Succ edge  6 [71.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u64(11){ }u65(13){ }u66(25){ }u67(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]
;; rd  in  	(30)
11, 27, 35, 43, 44, 52, 53, 128, 134, 135, 843, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864
;; rd  gen 	(0)

;; rd  kill	(8)
54, 55, 56, 57, 58, 59, 60, 61

;; Pred edge  4 [29.0%]  (fallthru)
(note 51 50 52 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 52 51 53 5 arch/arm/kernel/perf_event.c:338 (set (reg:SI 0 r0)
        (reg/v/f:SI 140 [ event ])) 167 {*arm_movsi_insn} (nil))

(insn 53 52 54 5 arch/arm/kernel/perf_event.c:338 (set (reg:SI 1 r1)
        (const_int 2 [0x2])) 167 {*arm_movsi_insn} (nil))

(call_insn 54 53 55 5 arch/arm/kernel/perf_event.c:338 (parallel [
            (call (mem:SI (symbol_ref:SI ("armpmu_start") [flags 0x3] <function_decl 0x114a1980 armpmu_start>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 5 -> ( 6)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; rd  out 	(30)
11, 27, 35, 43, 44, 52, 53, 128, 134, 135, 843, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864


;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 4 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u72(11){ }u73(13){ }u74(25){ }u75(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 135
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; live  gen 	 0 [r0] 135
;; live  kill	 14 [lr]
;; rd  in  	(30)
11, 27, 35, 43, 44, 52, 53, 128, 134, 135, 843, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864
;; rd  gen 	(1)
844
;; rd  kill	(10)
54, 55, 56, 57, 58, 59, 60, 61, 844, 845

;; Pred edge  4 [71.0%] 
;; Pred edge  5 [100.0%]  (fallthru)
(code_label 55 54 56 6 146 "" [1 uses])

(note 56 55 57 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 57 56 58 6 arch/arm/kernel/perf_event.c:341 (set (reg:SI 0 r0)
        (reg/v/f:SI 140 [ event ])) 167 {*arm_movsi_insn} (nil))

(call_insn 58 57 59 6 arch/arm/kernel/perf_event.c:341 (parallel [
            (call (mem:SI (symbol_ref:SI ("perf_event_update_userpage") [flags 0x41] <function_decl 0x113da080 perf_event_update_userpage>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 59 58 60 6 arch/arm/kernel/perf_event.c:316 (set (reg/v:SI 135 [ err ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 6 -> ( 7)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140
;; rd  out 	(31)
11, 27, 35, 43, 44, 52, 53, 128, 134, 135, 843, 844, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 6 3) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u79(11){ }u80(13){ }u81(25){ }u82(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]
;; rd  in  	(33)
11, 27, 35, 43, 44, 52, 53, 128, 131, 134, 135, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864
;; rd  gen 	(1)
0
;; rd  kill	(24)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 54, 55, 56, 57, 58, 59, 60, 61

;; Pred edge  6 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%] 
(code_label 60 59 61 7 145 ("out") [1 uses])

(note 61 60 62 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 62 61 63 7 arch/arm/kernel/perf_event.c:344 (set (reg:SI 0 r0)
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 140 [ event ])
                (const_int 44 [0x2c])) [0 <variable>.pmu+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 140 [ event ])
        (nil)))

(call_insn 63 62 68 7 arch/arm/kernel/perf_event.c:344 (parallel [
            (call (mem:SI (symbol_ref:SI ("perf_pmu_enable") [flags 0x41] <function_decl 0x113bae80 perf_pmu_enable>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 68 63 74 7 arch/arm/kernel/perf_event.c:346 (set (reg/i:SI 0 r0)
        (reg/v:SI 135 [ err ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 135 [ err ])
        (nil)))

(insn 74 68 0 7 arch/arm/kernel/perf_event.c:346 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 7 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(33)
0, 27, 35, 43, 44, 52, 53, 128, 131, 134, 135, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function validate_group (validate_group)[0:1319]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 11 n_edges 14 count 21 (  1.9)
df_worklist_dataflow_doublequeue:n_basic_blocks 11 n_edges 14 count 21 (  1.9)
df_worklist_dataflow_doublequeue:n_basic_blocks 11 n_edges 14 count 21 (  1.9)


validate_group

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={10d,10u} r1={9d,4u} r2={5d} r3={5d} r11={1d,10u} r12={5d} r13={1d,14u} r14={5d,1u} r15={4d} r16={4d} r17={4d} r18={4d} r19={4d} r20={4d} r21={4d} r22={4d} r23={4d} r24={8d,4u} r25={1d,11u,5d} r26={1d,9u} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r81={4d} r82={4d} r83={4d} r84={4d} r85={4d} r86={4d} r87={4d} r88={4d} r89={4d} r90={4d} r91={4d} r92={4d} r93={4d} r94={4d} r95={4d} r96={4d} r97={4d} r98={4d} r99={4d} r100={4d} r101={4d} r102={4d} r103={4d} r104={4d} r105={4d} r106={4d} r107={4d} r108={4d} r109={4d} r110={4d} r111={4d} r112={4d} r113={4d} r114={4d} r115={4d} r116={4d} r117={4d} r118={4d} r119={4d} r120={4d} r121={4d} r122={4d} r123={4d} r124={4d} r125={4d} r126={4d} r127={4d} r134={1d,2u} r135={2d,3u} r136={1d,1u} r137={2d,3u} r138={1d,1u} r139={2d,1u} r140={1d,1u} r142={1d,2u} r143={1d,3u} r149={1d,2u} 
;;    total ref usage 591{504d,82u,5e} in 36{32 regular + 4 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490
0[0,10] 1[10,9] 2[19,5] 3[24,5] 11[29,1] 12[30,5] 13[35,1] 14[36,5] 15[41,4] 16[45,4] 17[49,4] 18[53,4] 19[57,4] 20[61,4] 21[65,4] 22[69,4] 23[73,4] 24[77,8] 25[85,1] 26[86,1] 27[87,4] 28[91,4] 29[95,4] 30[99,4] 31[103,4] 32[107,4] 33[111,4] 34[115,4] 35[119,4] 36[123,4] 37[127,4] 38[131,4] 39[135,4] 40[139,4] 41[143,4] 42[147,4] 43[151,4] 44[155,4] 45[159,4] 46[163,4] 47[167,4] 48[171,4] 49[175,4] 50[179,4] 51[183,4] 52[187,4] 53[191,4] 54[195,4] 55[199,4] 56[203,4] 57[207,4] 58[211,4] 59[215,4] 60[219,4] 61[223,4] 62[227,4] 63[231,4] 64[235,4] 65[239,4] 66[243,4] 67[247,4] 68[251,4] 69[255,4] 70[259,4] 71[263,4] 72[267,4] 73[271,4] 74[275,4] 75[279,4] 76[283,4] 77[287,4] 78[291,4] 79[295,4] 80[299,4] 81[303,4] 82[307,4] 83[311,4] 84[315,4] 85[319,4] 86[323,4] 87[327,4] 88[331,4] 89[335,4] 90[339,4] 91[343,4] 92[347,4] 93[351,4] 94[355,4] 95[359,4] 96[363,4] 97[367,4] 98[371,4] 99[375,4] 100[379,4] 101[383,4] 102[387,4] 103[391,4] 104[395,4] 105[399,4] 106[403,4] 107[407,4] 108[411,4] 109[415,4] 110[419,4] 111[423,4] 112[427,4] 113[431,4] 114[435,4] 115[439,4] 116[443,4] 117[447,4] 118[451,4] 119[455,4] 120[459,4] 121[463,4] 122[467,4] 123[471,4] 124[475,4] 125[479,4] 126[483,4] 127[487,4] 134[491,1] 135[492,2] 136[494,1] 137[495,2] 138[497,1] 139[498,2] 140[500,1] 142[501,1] 143[502,1] 149[503,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d9(0){ }d18(1){ }d23(2){ }d28(3){ }d29(11){ }d34(12){ }d35(13){ }d40(14){ }d85(25){ }d86(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
9, 18, 23, 28, 29, 34, 35, 40, 85, 86
;; rd  kill	(43)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 85, 86
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(10)
9, 18, 23, 28, 29, 34, 35, 40, 85, 86

( 0 )->[2]->( 9 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d29(bb 0 insn -1) }u1(13){ d35(bb 0 insn -1) }u2(25){ d85(bb 0 insn -1) }u3(26){ d86(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 140 142 143
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 134 140 142 143
;; live  kill	 14 [lr]
;; rd  in  	(10)
9, 18, 23, 28, 29, 34, 35, 40, 85, 86
;; rd  gen 	(6)
6, 82, 491, 500, 501, 502
;; rd  kill	(27)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 36, 37, 38, 39, 40, 77, 78, 79, 80, 81, 82, 83, 84, 491, 500, 501, 502
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 142 143
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 142 143
;; rd  out 	(14)
6, 18, 23, 28, 29, 34, 35, 82, 85, 86, 491, 500, 501, 502
;;  UD chains for artificial uses
;;   reg 11 { d29(bb 0 insn -1) }
;;   reg 13 { d35(bb 0 insn -1) }
;;   reg 25 { d85(bb 0 insn -1) }
;;   reg 26 { d86(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d9(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 6
;;      reg 142 { d501(bb 2 insn 2) }
;;   UD chains for insn luid 2 uid 7
;;      reg 25 { d85(bb 0 insn -1) }
;;   UD chains for insn luid 3 uid 8
;;      reg 143 { d502(bb 2 insn 7) }
;;   eq_note reg 25 { }
;;   UD chains for insn luid 5 uid 10
;;      reg 13 { d35(bb 0 insn -1) }
;;      reg 0 { d8(bb 2 insn 8) }
;;      reg 1 { d17(bb 2 insn 9) }
;;   UD chains for insn luid 6 uid 12
;;      reg 143 { d502(bb 2 insn 7) }
;;   eq_note reg 25 { }
;;   UD chains for insn luid 7 uid 13
;;      reg 134 { d491(bb 2 insn 6) }
;;   UD chains for insn luid 8 uid 14
;;      reg 13 { d35(bb 0 insn -1) }
;;      reg 0 { d3(bb 2 insn 12) }
;;      reg 1 { d15(bb 2 insn 13) }
;;   UD chains for insn luid 9 uid 15
;;      reg 0 { d6(bb 2 insn 14) }
;;   UD chains for insn luid 10 uid 16
;;      reg 140 { d500(bb 2 insn 15) }
;;   UD chains for insn luid 11 uid 17
;;      reg 24 { d82(bb 2 insn 16) }

( 2 )->[3]->( 6 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u21(11){ d29(bb 0 insn -1) }u22(13){ d35(bb 0 insn -1) }u23(25){ d85(bb 0 insn -1) }u24(26){ d86(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 142 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 143
;; lr  def 	 135 137 149
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 142 143
;; live  gen 	 135 137 149
;; live  kill	
;; rd  in  	(14)
6, 18, 23, 28, 29, 34, 35, 82, 85, 86, 491, 500, 501, 502
;; rd  gen 	(3)
492, 496, 503
;; rd  kill	(5)
492, 493, 495, 496, 503
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 142 149
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 142 149
;; rd  out 	(17)
6, 18, 23, 28, 29, 34, 35, 82, 85, 86, 491, 492, 496, 500, 501, 502, 503
;;  UD chains for artificial uses
;;   reg 11 { d29(bb 0 insn -1) }
;;   reg 13 { d35(bb 0 insn -1) }
;;   reg 25 { d85(bb 0 insn -1) }
;;   reg 26 { d86(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 74
;;      reg 134 { d491(bb 2 insn 6) }
;;   UD chains for insn luid 1 uid 19
;;      reg 137 { d495(bb 3 insn 74) }
;;      reg 137 { d495(bb 3 insn 74) }
;;   UD chains for insn luid 2 uid 71
;;      reg 143 { d502(bb 2 insn 7) }
;;   eq_note reg 25 { }

( 6 )->[4]->( 9 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u29(11){ d29(bb 0 insn -1) }u30(13){ d35(bb 0 insn -1) }u31(25){ d85(bb 0 insn -1) }u32(26){ d86(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 142 149
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 149
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 138
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 142 149
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 138
;; live  kill	 14 [lr]
;; rd  in  	(20)
5, 6, 18, 23, 28, 29, 34, 35, 79, 85, 86, 491, 492, 493, 496, 497, 500, 501, 502, 503
;; rd  gen 	(3)
5, 80, 497
;; rd  kill	(24)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 36, 37, 38, 39, 40, 77, 78, 79, 80, 81, 82, 83, 84, 497
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 137 142 149
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 142 149
;; rd  out 	(19)
5, 18, 23, 28, 29, 34, 35, 80, 85, 86, 491, 492, 493, 496, 497, 500, 501, 502, 503
;;  UD chains for artificial uses
;;   reg 11 { d29(bb 0 insn -1) }
;;   reg 13 { d35(bb 0 insn -1) }
;;   reg 25 { d85(bb 0 insn -1) }
;;   reg 26 { d86(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 25
;;      reg 149 { d503(bb 3 insn 71) }
;;   eq_note reg 25 { }
;;   UD chains for insn luid 1 uid 26
;;      reg 135 { d493(bb 5 insn 32) d492(bb 3 insn 19) }
;;   UD chains for insn luid 2 uid 27
;;      reg 13 { d35(bb 0 insn -1) }
;;      reg 0 { d1(bb 4 insn 25) }
;;      reg 1 { d13(bb 4 insn 26) }
;;   UD chains for insn luid 3 uid 28
;;      reg 0 { d5(bb 4 insn 27) }
;;   UD chains for insn luid 4 uid 29
;;      reg 138 { d497(bb 4 insn 28) }
;;   UD chains for insn luid 5 uid 30
;;      reg 24 { d80(bb 4 insn 29) }

( 4 )->[5]->( 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u42(11){ d29(bb 0 insn -1) }u43(13){ d35(bb 0 insn -1) }u44(25){ d85(bb 0 insn -1) }u45(26){ d86(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 142 149
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 135
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 142 149
;; live  gen 	 135
;; live  kill	
;; rd  in  	(19)
5, 18, 23, 28, 29, 34, 35, 80, 85, 86, 491, 492, 493, 496, 497, 500, 501, 502, 503
;; rd  gen 	(1)
493
;; rd  kill	(2)
492, 493
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 142 149
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 142 149
;; rd  out 	(18)
5, 18, 23, 28, 29, 34, 35, 80, 85, 86, 491, 493, 496, 497, 500, 501, 502, 503
;;  UD chains for artificial uses
;;   reg 11 { d29(bb 0 insn -1) }
;;   reg 13 { d35(bb 0 insn -1) }
;;   reg 25 { d85(bb 0 insn -1) }
;;   reg 26 { d86(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 32
;;      reg 135 { d493(bb 5 insn 32) d492(bb 3 insn 19) }

( 5 3 )->[6]->( 4 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u47(11){ d29(bb 0 insn -1) }u48(13){ d35(bb 0 insn -1) }u49(25){ d85(bb 0 insn -1) }u50(26){ d86(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 142 149
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 142 149
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(21)
5, 6, 18, 23, 28, 29, 34, 35, 80, 82, 85, 86, 491, 492, 493, 496, 497, 500, 501, 502, 503
;; rd  gen 	(1)
79
;; rd  kill	(8)
77, 78, 79, 80, 81, 82, 83, 84
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 142 149
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 142 149
;; rd  out 	(20)
5, 6, 18, 23, 28, 29, 34, 35, 79, 85, 86, 491, 492, 493, 496, 497, 500, 501, 502, 503
;;  UD chains for artificial uses
;;   reg 11 { d29(bb 0 insn -1) }
;;   reg 13 { d35(bb 0 insn -1) }
;;   reg 25 { d85(bb 0 insn -1) }
;;   reg 26 { d86(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 37
;;      reg 135 { d493(bb 5 insn 32) d492(bb 3 insn 19) }
;;      reg 137 { d496(bb 3 insn 19) }
;;   UD chains for insn luid 1 uid 38
;;      reg 24 { d79(bb 6 insn 37) }

( 6 )->[7]->( 9 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u54(11){ d29(bb 0 insn -1) }u55(13){ d35(bb 0 insn -1) }u56(25){ d85(bb 0 insn -1) }u57(26){ d86(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 149
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 149
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 136
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 149
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 136
;; live  kill	 14 [lr]
;; rd  in  	(20)
5, 6, 18, 23, 28, 29, 34, 35, 79, 85, 86, 491, 492, 493, 496, 497, 500, 501, 502, 503
;; rd  gen 	(3)
4, 77, 494
;; rd  kill	(24)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 36, 37, 38, 39, 40, 77, 78, 79, 80, 81, 82, 83, 84, 494
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(20)
4, 18, 23, 28, 29, 34, 35, 77, 85, 86, 491, 492, 493, 494, 496, 497, 500, 501, 502, 503
;;  UD chains for artificial uses
;;   reg 11 { d29(bb 0 insn -1) }
;;   reg 13 { d35(bb 0 insn -1) }
;;   reg 25 { d85(bb 0 insn -1) }
;;   reg 26 { d86(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 41
;;      reg 149 { d503(bb 3 insn 71) }
;;   eq_note reg 25 { }
;;   UD chains for insn luid 1 uid 42
;;      reg 142 { d501(bb 2 insn 2) }
;;   UD chains for insn luid 2 uid 43
;;      reg 13 { d35(bb 0 insn -1) }
;;      reg 0 { d0(bb 7 insn 41) }
;;      reg 1 { d11(bb 7 insn 42) }
;;   UD chains for insn luid 3 uid 44
;;      reg 0 { d4(bb 7 insn 43) }
;;   UD chains for insn luid 4 uid 45
;;      reg 136 { d494(bb 7 insn 44) }
;;   UD chains for insn luid 5 uid 46
;;      reg 24 { d77(bb 7 insn 45) }

( 7 )->[8]->( 10 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u67(11){ d29(bb 0 insn -1) }u68(13){ d35(bb 0 insn -1) }u69(25){ d85(bb 0 insn -1) }u70(26){ d86(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 139
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 139
;; live  kill	
;; rd  in  	(20)
4, 18, 23, 28, 29, 34, 35, 77, 85, 86, 491, 492, 493, 494, 496, 497, 500, 501, 502, 503
;; rd  gen 	(1)
499
;; rd  kill	(2)
498, 499
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; rd  out 	(21)
4, 18, 23, 28, 29, 34, 35, 77, 85, 86, 491, 492, 493, 494, 496, 497, 499, 500, 501, 502, 503
;;  UD chains for artificial uses
;;   reg 11 { d29(bb 0 insn -1) }
;;   reg 13 { d35(bb 0 insn -1) }
;;   reg 25 { d85(bb 0 insn -1) }
;;   reg 26 { d86(bb 0 insn -1) }

( 2 4 7 )->[9]->( 10 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u71(11){ d29(bb 0 insn -1) }u72(13){ d35(bb 0 insn -1) }u73(25){ d85(bb 0 insn -1) }u74(26){ d86(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 139
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 139
;; live  kill	
;; rd  in  	(24)
4, 5, 6, 18, 23, 28, 29, 34, 35, 77, 80, 82, 85, 86, 491, 492, 493, 494, 496, 497, 500, 501, 502, 503
;; rd  gen 	(1)
498
;; rd  kill	(2)
498, 499
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; rd  out 	(25)
4, 5, 6, 18, 23, 28, 29, 34, 35, 77, 80, 82, 85, 86, 491, 492, 493, 494, 496, 497, 498, 500, 501, 502, 503
;;  UD chains for artificial uses
;;   reg 11 { d29(bb 0 insn -1) }
;;   reg 13 { d35(bb 0 insn -1) }
;;   reg 25 { d85(bb 0 insn -1) }
;;   reg 26 { d86(bb 0 insn -1) }

( 9 8 )->[10]->( 1 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u75(11){ d29(bb 0 insn -1) }u76(13){ d35(bb 0 insn -1) }u77(25){ d85(bb 0 insn -1) }u78(26){ d86(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(26)
4, 5, 6, 18, 23, 28, 29, 34, 35, 77, 80, 82, 85, 86, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 503
;; rd  gen 	(1)
2
;; rd  kill	(10)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(24)
2, 18, 23, 28, 29, 34, 35, 77, 80, 82, 85, 86, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 503
;;  UD chains for artificial uses
;;   reg 11 { d29(bb 0 insn -1) }
;;   reg 13 { d35(bb 0 insn -1) }
;;   reg 25 { d85(bb 0 insn -1) }
;;   reg 26 { d86(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 60
;;      reg 139 { d499(bb 8 insn 48) d498(bb 9 insn 53) }
;;   UD chains for insn luid 1 uid 66
;;      reg 0 { d2(bb 10 insn 60) }

( 10 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u81(0){ d2(bb 10 insn 60) }u82(11){ d29(bb 0 insn -1) }u83(13){ d35(bb 0 insn -1) }u84(14){ }u85(25){ d85(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(24)
2, 18, 23, 28, 29, 34, 35, 77, 80, 82, 85, 86, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 503
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(24)
2, 18, 23, 28, 29, 34, 35, 77, 80, 82, 85, 86, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 503
;;  UD chains for artificial uses
;;   reg 0 { d2(bb 10 insn 60) }
;;   reg 11 { d29(bb 0 insn -1) }
;;   reg 13 { d35(bb 0 insn -1) }
;;   reg 14 { }
;;   reg 25 { d85(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 17 to worklist
  Adding insn 14 to worklist
  Adding insn 10 to worklist
  Adding insn 75 to worklist
  Adding insn 30 to worklist
  Adding insn 27 to worklist
  Adding insn 38 to worklist
  Adding insn 46 to worklist
  Adding insn 43 to worklist
  Adding insn 77 to worklist
  Adding insn 66 to worklist
Finished finding needed instructions:
  Adding insn 60 to worklist
Processing use of (reg 139 [ D.25395 ]) in insn 60:
  Adding insn 48 to worklist
  Adding insn 53 to worklist
Processing use of (reg 0 r0) in insn 66:
Processing use of (reg 13 sp) in insn 43:
Processing use of (reg 0 r0) in insn 43:
  Adding insn 41 to worklist
Processing use of (reg 1 r1) in insn 43:
  Adding insn 42 to worklist
Processing use of (reg 142 [ event ]) in insn 42:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 149) in insn 41:
  Adding insn 71 to worklist
Processing use of (reg 143) in insn 71:
  Adding insn 7 to worklist
Processing use of (reg 25 sfp) in insn 7:
Processing use of (reg 24 cc) in insn 46:
  Adding insn 45 to worklist
Processing use of (reg 136 [ D.25401 ]) in insn 45:
  Adding insn 44 to worklist
Processing use of (reg 0 r0) in insn 44:
Processing use of (reg 24 cc) in insn 38:
  Adding insn 37 to worklist
Processing use of (reg 135 [ sibling ]) in insn 37:
  Adding insn 32 to worklist
  Adding insn 19 to worklist
Processing use of (reg 137 [ D.25400 ]) in insn 37:
Processing use of (reg 137 [ D.25400 ]) in insn 19:
  Adding insn 74 to worklist
Processing use of (reg 137 [ D.25400 ]) in insn 19:
Processing use of (reg 134 [ leader ]) in insn 74:
  Adding insn 6 to worklist
Processing use of (reg 142 [ event ]) in insn 6:
Processing use of (reg 135 [ sibling ]) in insn 32:
Processing use of (reg 13 sp) in insn 27:
Processing use of (reg 0 r0) in insn 27:
  Adding insn 25 to worklist
Processing use of (reg 1 r1) in insn 27:
  Adding insn 26 to worklist
Processing use of (reg 135 [ sibling ]) in insn 26:
Processing use of (reg 149) in insn 25:
Processing use of (reg 24 cc) in insn 30:
  Adding insn 29 to worklist
Processing use of (reg 138 [ D.25396 ]) in insn 29:
  Adding insn 28 to worklist
Processing use of (reg 0 r0) in insn 28:
Processing use of (reg 13 sp) in insn 10:
Processing use of (reg 0 r0) in insn 10:
  Adding insn 8 to worklist
Processing use of (reg 1 r1) in insn 10:
  Adding insn 9 to worklist
Processing use of (reg 143) in insn 8:
Processing use of (reg 13 sp) in insn 14:
Processing use of (reg 0 r0) in insn 14:
  Adding insn 12 to worklist
Processing use of (reg 1 r1) in insn 14:
  Adding insn 13 to worklist
Processing use of (reg 134 [ leader ]) in insn 13:
Processing use of (reg 143) in insn 12:
Processing use of (reg 24 cc) in insn 17:
  Adding insn 16 to worklist
Processing use of (reg 140 [ D.25392 ]) in insn 16:
  Adding insn 15 to worklist
Processing use of (reg 0 r0) in insn 15:


validate_group

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={10d,10u} r1={9d,4u} r2={5d} r3={5d} r11={1d,10u} r12={5d} r13={1d,14u} r14={5d,1u} r15={4d} r16={4d} r17={4d} r18={4d} r19={4d} r20={4d} r21={4d} r22={4d} r23={4d} r24={8d,4u} r25={1d,11u,5d} r26={1d,9u} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r81={4d} r82={4d} r83={4d} r84={4d} r85={4d} r86={4d} r87={4d} r88={4d} r89={4d} r90={4d} r91={4d} r92={4d} r93={4d} r94={4d} r95={4d} r96={4d} r97={4d} r98={4d} r99={4d} r100={4d} r101={4d} r102={4d} r103={4d} r104={4d} r105={4d} r106={4d} r107={4d} r108={4d} r109={4d} r110={4d} r111={4d} r112={4d} r113={4d} r114={4d} r115={4d} r116={4d} r117={4d} r118={4d} r119={4d} r120={4d} r121={4d} r122={4d} r123={4d} r124={4d} r125={4d} r126={4d} r127={4d} r134={1d,2u} r135={2d,3u} r136={1d,1u} r137={2d,3u} r138={1d,1u} r139={2d,1u} r140={1d,1u} r142={1d,2u} r143={1d,3u} r149={1d,2u} 
;;    total ref usage 591{504d,82u,5e} in 36{32 regular + 4 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490
0[0,10] 1[10,9] 2[19,5] 3[24,5] 11[29,1] 12[30,5] 13[35,1] 14[36,5] 15[41,4] 16[45,4] 17[49,4] 18[53,4] 19[57,4] 20[61,4] 21[65,4] 22[69,4] 23[73,4] 24[77,8] 25[85,1] 26[86,1] 27[87,4] 28[91,4] 29[95,4] 30[99,4] 31[103,4] 32[107,4] 33[111,4] 34[115,4] 35[119,4] 36[123,4] 37[127,4] 38[131,4] 39[135,4] 40[139,4] 41[143,4] 42[147,4] 43[151,4] 44[155,4] 45[159,4] 46[163,4] 47[167,4] 48[171,4] 49[175,4] 50[179,4] 51[183,4] 52[187,4] 53[191,4] 54[195,4] 55[199,4] 56[203,4] 57[207,4] 58[211,4] 59[215,4] 60[219,4] 61[223,4] 62[227,4] 63[231,4] 64[235,4] 65[239,4] 66[243,4] 67[247,4] 68[251,4] 69[255,4] 70[259,4] 71[263,4] 72[267,4] 73[271,4] 74[275,4] 75[279,4] 76[283,4] 77[287,4] 78[291,4] 79[295,4] 80[299,4] 81[303,4] 82[307,4] 83[311,4] 84[315,4] 85[319,4] 86[323,4] 87[327,4] 88[331,4] 89[335,4] 90[339,4] 91[343,4] 92[347,4] 93[351,4] 94[355,4] 95[359,4] 96[363,4] 97[367,4] 98[371,4] 99[375,4] 100[379,4] 101[383,4] 102[387,4] 103[391,4] 104[395,4] 105[399,4] 106[403,4] 107[407,4] 108[411,4] 109[415,4] 110[419,4] 111[423,4] 112[427,4] 113[431,4] 114[435,4] 115[439,4] 116[443,4] 117[447,4] 118[451,4] 119[455,4] 120[459,4] 121[463,4] 122[467,4] 123[471,4] 124[475,4] 125[479,4] 126[483,4] 127[487,4] 134[491,1] 135[492,2] 136[494,1] 137[495,2] 138[497,1] 139[498,2] 140[500,1] 142[501,1] 143[502,1] 149[503,1] 
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 140 142 143
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 134 140 142 143
;; live  kill	 14 [lr]
;; rd  in  	(10)
9, 18, 23, 28, 29, 34, 35, 40, 85, 86
;; rd  gen 	(6)
6, 82, 491, 500, 501, 502
;; rd  kill	(27)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 36, 37, 38, 39, 40, 77, 78, 79, 80, 81, 82, 83, 84, 491, 500, 501, 502

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 arch/arm/kernel/perf_event.c:364 (set (reg/v/f:SI 142 [ event ])
        (reg:SI 0 r0 [ event ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ event ])
        (nil)))

(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 3 7 2 arch/arm/kernel/perf_event.c:365 (set (reg/v/f:SI 134 [ leader ])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 142 [ event ])
                (const_int 40 [0x28])) [0 <variable>.group_leader+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 7 6 8 2 arch/arm/kernel/perf_event.c:368 discrim 1 (set (reg/f:SI 143)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -148 [0xffffffffffffff6c]))) 4 {*arm_addsi3} (nil))

(insn 8 7 9 2 arch/arm/kernel/perf_event.c:368 discrim 1 (set (reg:SI 0 r0)
        (reg/f:SI 143)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -148 [0xffffffffffffff6c]))
        (nil)))

(insn 9 8 10 2 arch/arm/kernel/perf_event.c:368 discrim 1 (set (reg:SI 1 r1)
        (const_int 148 [0x94])) 167 {*arm_movsi_insn} (nil))

(call_insn 10 9 12 2 arch/arm/kernel/perf_event.c:368 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("__memzero") [flags 0x41] <function_decl 0x10a9ce80 __memzero>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 12 10 13 2 arch/arm/kernel/perf_event.c:370 (set (reg:SI 0 r0)
        (reg/f:SI 143)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -148 [0xffffffffffffff6c]))
        (nil)))

(insn 13 12 14 2 arch/arm/kernel/perf_event.c:370 (set (reg:SI 1 r1)
        (reg/v/f:SI 134 [ leader ])) 167 {*arm_movsi_insn} (nil))

(call_insn 14 13 15 2 arch/arm/kernel/perf_event.c:370 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("validate_event") [flags 0x3] <function_decl 0x114a1c80 validate_event>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 15 14 16 2 arch/arm/kernel/perf_event.c:370 (set (reg:SI 140 [ D.25392 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 16 15 17 2 arch/arm/kernel/perf_event.c:370 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 140 [ D.25392 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 140 [ D.25392 ])
        (nil)))

(jump_insn 17 16 18 2 arch/arm/kernel/perf_event.c:370 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 51)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 2 -> ( 9 3)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 142 143
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 142 143
;; rd  out 	(14)
6, 18, 23, 28, 29, 34, 35, 82, 85, 86, 491, 500, 501, 502


;; Succ edge  9 [39.0%] 
;; Succ edge  3 [61.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u21(11){ }u22(13){ }u23(25){ }u24(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 142 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 143
;; lr  def 	 135 137 149
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 142 143
;; live  gen 	 135 137 149
;; live  kill	
;; rd  in  	(14)
6, 18, 23, 28, 29, 34, 35, 82, 85, 86, 491, 500, 501, 502
;; rd  gen 	(3)
492, 496, 503
;; rd  kill	(5)
492, 493, 495, 496, 503

;; Pred edge  2 [61.0%]  (fallthru)
(note 18 17 74 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 74 18 19 3 arch/arm/kernel/perf_event.c:373 (set (reg/f:SI 137 [ D.25400 ])
        (reg/v/f:SI 134 [ leader ])) -1 (expr_list:REG_DEAD (reg/v/f:SI 134 [ leader ])
        (nil)))

(insn 19 74 71 3 arch/arm/kernel/perf_event.c:373 (set (reg/v/f:SI 135 [ sibling ])
        (mem/s/f/j:SI (pre_modify:SI (reg/f:SI 137 [ D.25400 ])
                (plus:SI (reg/f:SI 137 [ D.25400 ])
                    (const_int 16 [0x10]))) [0 <variable>.sibling_list.next+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_INC (reg/f:SI 137 [ D.25400 ])
        (nil)))

(insn 71 19 75 3 (set (reg/f:SI 149)
        (reg/f:SI 143)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 143)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -148 [0xffffffffffffff6c]))
            (nil))))

(jump_insn 75 71 76 3 arch/arm/kernel/perf_event.c:373 (set (pc)
        (label_ref 34)) -1 (nil))
;; End of basic block 3 -> ( 6)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 142 149
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 142 149
;; rd  out 	(17)
6, 18, 23, 28, 29, 34, 35, 82, 85, 86, 491, 492, 496, 500, 501, 502, 503


;; Succ edge  6 [100.0%] 

(barrier 76 75 36)

;; Start of basic block ( 6) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u29(11){ }u30(13){ }u31(25){ }u32(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 142 149
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 149
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 138
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 142 149
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 138
;; live  kill	 14 [lr]
;; rd  in  	(20)
5, 6, 18, 23, 28, 29, 34, 35, 79, 85, 86, 491, 492, 493, 496, 497, 500, 501, 502, 503
;; rd  gen 	(3)
5, 80, 497
;; rd  kill	(24)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 36, 37, 38, 39, 40, 77, 78, 79, 80, 81, 82, 83, 84, 497

;; Pred edge  6 [95.5%] 
(code_label 36 76 23 4 153 "" [1 uses])

(note 23 36 25 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 25 23 26 4 arch/arm/kernel/perf_event.c:374 (set (reg:SI 0 r0)
        (reg/f:SI 149)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -148 [0xffffffffffffff6c]))
        (nil)))

(insn 26 25 27 4 arch/arm/kernel/perf_event.c:374 (set (reg:SI 1 r1)
        (reg/v/f:SI 135 [ sibling ])) 167 {*arm_movsi_insn} (nil))

(call_insn 27 26 28 4 arch/arm/kernel/perf_event.c:374 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("validate_event") [flags 0x3] <function_decl 0x114a1c80 validate_event>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 28 27 29 4 arch/arm/kernel/perf_event.c:374 (set (reg:SI 138 [ D.25396 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 29 28 30 4 arch/arm/kernel/perf_event.c:374 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 138 [ D.25396 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 138 [ D.25396 ])
        (nil)))

(jump_insn 30 29 31 4 arch/arm/kernel/perf_event.c:374 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 51)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 450 [0x1c2])
            (nil))))
;; End of basic block 4 -> ( 9 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 137 142 149
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 142 149
;; rd  out 	(19)
5, 18, 23, 28, 29, 34, 35, 80, 85, 86, 491, 492, 493, 496, 497, 500, 501, 502, 503


;; Succ edge  9 [4.5%]  (loop_exit)
;; Succ edge  5 [95.5%]  (fallthru)

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u42(11){ }u43(13){ }u44(25){ }u45(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 142 149
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 135
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 142 149
;; live  gen 	 135
;; live  kill	
;; rd  in  	(19)
5, 18, 23, 28, 29, 34, 35, 80, 85, 86, 491, 492, 493, 496, 497, 500, 501, 502, 503
;; rd  gen 	(1)
493
;; rd  kill	(2)
492, 493

;; Pred edge  4 [95.5%]  (fallthru)
(note 31 30 32 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 32 31 34 5 arch/arm/kernel/perf_event.c:373 (set (reg/v/f:SI 135 [ sibling ])
        (mem/s/f/j:SI (reg/v/f:SI 135 [ sibling ]) [0 <variable>.group_entry.next+0 S4 A64])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 5 -> ( 6)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 142 149
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 142 149
;; rd  out 	(18)
5, 18, 23, 28, 29, 34, 35, 80, 85, 86, 491, 493, 496, 497, 500, 501, 502, 503


;; Succ edge  6 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 5 3) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u47(11){ }u48(13){ }u49(25){ }u50(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 142 149
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 142 149
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(21)
5, 6, 18, 23, 28, 29, 34, 35, 80, 82, 85, 86, 491, 492, 493, 496, 497, 500, 501, 502, 503
;; rd  gen 	(1)
79
;; rd  kill	(8)
77, 78, 79, 80, 81, 82, 83, 84

;; Pred edge  5 [100.0%]  (fallthru,dfs_back)
;; Pred edge  3 [100.0%] 
(code_label 34 32 35 6 152 "" [1 uses])

(note 35 34 37 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 37 35 38 6 arch/arm/kernel/perf_event.c:373 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 135 [ sibling ])
            (reg/f:SI 137 [ D.25400 ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 38 37 39 6 arch/arm/kernel/perf_event.c:373 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 36)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9550 [0x254e])
            (nil))))
;; End of basic block 6 -> ( 4 7)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 142 149
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 142 149
;; rd  out 	(20)
5, 6, 18, 23, 28, 29, 34, 35, 79, 85, 86, 491, 492, 493, 496, 497, 500, 501, 502, 503


;; Succ edge  4 [95.5%] 
;; Succ edge  7 [4.5%]  (fallthru,loop_exit)

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u54(11){ }u55(13){ }u56(25){ }u57(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 149
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 149
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 136
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 149
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 136
;; live  kill	 14 [lr]
;; rd  in  	(20)
5, 6, 18, 23, 28, 29, 34, 35, 79, 85, 86, 491, 492, 493, 496, 497, 500, 501, 502, 503
;; rd  gen 	(3)
4, 77, 494
;; rd  kill	(24)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 36, 37, 38, 39, 40, 77, 78, 79, 80, 81, 82, 83, 84, 494

;; Pred edge  6 [4.5%]  (fallthru,loop_exit)
(note 39 38 41 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 41 39 42 7 arch/arm/kernel/perf_event.c:378 (set (reg:SI 0 r0)
        (reg/f:SI 149)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 149)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -148 [0xffffffffffffff6c]))
            (nil))))

(insn 42 41 43 7 arch/arm/kernel/perf_event.c:378 (set (reg:SI 1 r1)
        (reg/v/f:SI 142 [ event ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 142 [ event ])
        (nil)))

(call_insn 43 42 44 7 arch/arm/kernel/perf_event.c:378 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("validate_event") [flags 0x3] <function_decl 0x114a1c80 validate_event>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 44 43 45 7 arch/arm/kernel/perf_event.c:378 (set (reg:SI 136 [ D.25401 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 45 44 46 7 arch/arm/kernel/perf_event.c:378 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 136 [ D.25401 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 136 [ D.25401 ])
        (nil)))

(jump_insn 46 45 47 7 arch/arm/kernel/perf_event.c:378 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 51)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 7 -> ( 9 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(20)
4, 18, 23, 28, 29, 34, 35, 77, 85, 86, 491, 492, 493, 494, 496, 497, 500, 501, 502, 503


;; Succ edge  9 [39.0%] 
;; Succ edge  8 [61.0%]  (fallthru)

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u67(11){ }u68(13){ }u69(25){ }u70(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 139
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 139
;; live  kill	
;; rd  in  	(20)
4, 18, 23, 28, 29, 34, 35, 77, 85, 86, 491, 492, 493, 494, 496, 497, 500, 501, 502, 503
;; rd  gen 	(1)
499
;; rd  kill	(2)
498, 499

;; Pred edge  7 [61.0%]  (fallthru)
(note 47 46 48 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 48 47 77 8 arch/arm/kernel/perf_event.c:381 (set (reg:SI 139 [ D.25395 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(jump_insn 77 48 78 8 (set (pc)
        (label_ref 54)) -1 (nil))
;; End of basic block 8 -> ( 10)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; rd  out 	(21)
4, 18, 23, 28, 29, 34, 35, 77, 85, 86, 491, 492, 493, 494, 496, 497, 499, 500, 501, 502, 503


;; Succ edge  10 [100.0%] 

(barrier 78 77 51)

;; Start of basic block ( 2 4 7) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u71(11){ }u72(13){ }u73(25){ }u74(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 139
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 139
;; live  kill	
;; rd  in  	(24)
4, 5, 6, 18, 23, 28, 29, 34, 35, 77, 80, 82, 85, 86, 491, 492, 493, 494, 496, 497, 500, 501, 502, 503
;; rd  gen 	(1)
498
;; rd  kill	(2)
498, 499

;; Pred edge  2 [39.0%] 
;; Pred edge  4 [4.5%]  (loop_exit)
;; Pred edge  7 [39.0%] 
(code_label 51 78 52 9 151 "" [3 uses])

(note 52 51 53 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 53 52 54 9 arch/arm/kernel/perf_event.c:371 (set (reg:SI 139 [ D.25395 ])
        (const_int -28 [0xffffffffffffffe4])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 9 -> ( 10)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; rd  out 	(25)
4, 5, 6, 18, 23, 28, 29, 34, 35, 77, 80, 82, 85, 86, 491, 492, 493, 494, 496, 497, 498, 500, 501, 502, 503


;; Succ edge  10 [100.0%]  (fallthru)

;; Start of basic block ( 9 8) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u75(11){ }u76(13){ }u77(25){ }u78(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(26)
4, 5, 6, 18, 23, 28, 29, 34, 35, 77, 80, 82, 85, 86, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 503
;; rd  gen 	(1)
2
;; rd  kill	(10)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9

;; Pred edge  9 [100.0%]  (fallthru)
;; Pred edge  8 [100.0%] 
(code_label 54 53 55 10 154 "" [1 uses])

(note 55 54 60 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 60 55 66 10 arch/arm/kernel/perf_event.c:382 (set (reg/i:SI 0 r0)
        (reg:SI 139 [ D.25395 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 139 [ D.25395 ])
        (nil)))

(insn 66 60 0 10 arch/arm/kernel/perf_event.c:382 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 10 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(24)
2, 18, 23, 28, 29, 34, 35, 77, 80, 82, 85, 86, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 503


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function hw_perf_event_destroy (hw_perf_event_destroy)[0:1323]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 10 n_edges 12 count 17 (  1.7)
df_worklist_dataflow_doublequeue:n_basic_blocks 10 n_edges 12 count 21 (  2.1)
df_worklist_dataflow_doublequeue:n_basic_blocks 10 n_edges 12 count 21 (  2.1)


hw_perf_event_destroy

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={11d,7u} r1={10d,3u} r2={7d} r3={7d} r11={1d,9u} r12={7d} r13={1d,15u} r14={6d,1u} r15={6d} r16={6d} r17={6d} r18={6d} r19={6d} r20={6d} r21={6d} r22={6d} r23={6d} r24={9d,3u} r25={1d,9u} r26={1d,8u} r27={6d} r28={6d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={6d} r38={6d} r39={6d} r40={6d} r41={6d} r42={6d} r43={6d} r44={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r76={6d} r77={6d} r78={6d} r79={6d} r80={6d} r81={6d} r82={6d} r83={6d} r84={6d} r85={6d} r86={6d} r87={6d} r88={6d} r89={6d} r90={6d} r91={6d} r92={6d} r93={6d} r94={6d} r95={6d} r96={6d} r97={6d} r98={6d} r99={6d} r100={6d} r101={6d} r102={6d} r103={6d} r104={6d} r105={6d} r106={6d} r107={6d} r108={6d} r109={6d} r110={6d} r111={6d} r112={6d} r113={6d} r114={6d} r115={6d} r116={6d} r117={6d} r118={6d} r119={6d} r120={6d} r121={6d} r122={6d} r123={6d} r124={6d} r125={6d} r126={6d} r127={6d} r133={2d,3u} r134={1d,1u} r135={1d,1u} r137={1d,3u} r142={1d,1u} r143={1d,1u} r146={1d,1u} r147={1d,1u} r149={1d,1u} r152={1d,2u} r153={1d,1u} 
;;    total ref usage 804{733d,71u,0e} in 33{27 regular + 6 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720
0[0,11] 1[11,10] 2[21,7] 3[28,7] 11[35,1] 12[36,7] 13[43,1] 14[44,6] 15[50,6] 16[56,6] 17[62,6] 18[68,6] 19[74,6] 20[80,6] 21[86,6] 22[92,6] 23[98,6] 24[104,9] 25[113,1] 26[114,1] 27[115,6] 28[121,6] 29[127,6] 30[133,6] 31[139,6] 32[145,6] 33[151,6] 34[157,6] 35[163,6] 36[169,6] 37[175,6] 38[181,6] 39[187,6] 40[193,6] 41[199,6] 42[205,6] 43[211,6] 44[217,6] 45[223,6] 46[229,6] 47[235,6] 48[241,6] 49[247,6] 50[253,6] 51[259,6] 52[265,6] 53[271,6] 54[277,6] 55[283,6] 56[289,6] 57[295,6] 58[301,6] 59[307,6] 60[313,6] 61[319,6] 62[325,6] 63[331,6] 64[337,6] 65[343,6] 66[349,6] 67[355,6] 68[361,6] 69[367,6] 70[373,6] 71[379,6] 72[385,6] 73[391,6] 74[397,6] 75[403,6] 76[409,6] 77[415,6] 78[421,6] 79[427,6] 80[433,6] 81[439,6] 82[445,6] 83[451,6] 84[457,6] 85[463,6] 86[469,6] 87[475,6] 88[481,6] 89[487,6] 90[493,6] 91[499,6] 92[505,6] 93[511,6] 94[517,6] 95[523,6] 96[529,6] 97[535,6] 98[541,6] 99[547,6] 100[553,6] 101[559,6] 102[565,6] 103[571,6] 104[577,6] 105[583,6] 106[589,6] 107[595,6] 108[601,6] 109[607,6] 110[613,6] 111[619,6] 112[625,6] 113[631,6] 114[637,6] 115[643,6] 116[649,6] 117[655,6] 118[661,6] 119[667,6] 120[673,6] 121[679,6] 122[685,6] 123[691,6] 124[697,6] 125[703,6] 126[709,6] 127[715,6] 133[721,2] 134[723,1] 135[724,1] 137[725,1] 142[726,1] 143[727,1] 146[728,1] 147[729,1] 149[730,1] 152[731,1] 153[732,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d10(0){ }d20(1){ }d27(2){ }d34(3){ }d35(11){ }d42(12){ }d43(13){ }d49(14){ }d113(25){ }d114(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
10, 20, 27, 34, 35, 42, 43, 49, 113, 114
;; rd  kill	(52)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 113, 114
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(10)
10, 20, 27, 34, 35, 42, 43, 49, 113, 114

( 0 )->[2]->( 3 9 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d35(bb 0 insn -1) }u1(13){ d43(bb 0 insn -1) }u2(25){ d113(bb 0 insn -1) }u3(26){ d114(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 135 137
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 135 137
;; live  kill	 14 [lr]
;; rd  in  	(10)
10, 20, 27, 34, 35, 42, 43, 49, 113, 114
;; rd  gen 	(4)
9, 111, 724, 725
;; rd  kill	(28)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 44, 45, 46, 47, 48, 49, 104, 105, 106, 107, 108, 109, 110, 111, 112, 724, 725
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; rd  out 	(12)
9, 20, 27, 34, 35, 42, 43, 111, 113, 114, 724, 725
;;  UD chains for artificial uses
;;   reg 11 { d35(bb 0 insn -1) }
;;   reg 13 { d43(bb 0 insn -1) }
;;   reg 25 { d113(bb 0 insn -1) }
;;   reg 26 { d114(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 10
;;      reg 137 { d725(bb 2 insn 6) }
;;   UD chains for insn luid 3 uid 12
;;      reg 13 { d43(bb 0 insn -1) }
;;      reg 0 { d0(bb 2 insn 10) }
;;      reg 1 { d12(bb 2 insn 11) }
;;   UD chains for insn luid 4 uid 13
;;      reg 0 { d9(bb 2 insn 12) }
;;   UD chains for insn luid 5 uid 14
;;      reg 135 { d724(bb 2 insn 13) }
;;   UD chains for insn luid 6 uid 15
;;      reg 24 { d111(bb 2 insn 14) }

( 2 )->[3]->( 7 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u11(11){ d35(bb 0 insn -1) }u12(13){ d43(bb 0 insn -1) }u13(25){ d113(bb 0 insn -1) }u14(26){ d114(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 133 142 143 153
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; live  gen 	 133 142 143 153
;; live  kill	
;; rd  in  	(12)
9, 20, 27, 34, 35, 42, 43, 111, 113, 114, 724, 725
;; rd  gen 	(4)
722, 726, 727, 732
;; rd  kill	(5)
721, 722, 726, 727, 732
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 153
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 153
;; rd  out 	(16)
9, 20, 27, 34, 35, 42, 43, 111, 113, 114, 722, 724, 725, 726, 727, 732
;;  UD chains for artificial uses
;;   reg 11 { d35(bb 0 insn -1) }
;;   reg 13 { d43(bb 0 insn -1) }
;;   reg 25 { d113(bb 0 insn -1) }
;;   reg 26 { d114(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 18
;;      reg 137 { d725(bb 2 insn 6) }
;;   UD chains for insn luid 1 uid 19
;;      reg 142 { d726(bb 3 insn 18) }
;;   UD chains for insn luid 2 uid 20
;;      reg 143 { d727(bb 3 insn 19) }
;;   UD chains for insn luid 3 uid 68
;;      reg 137 { d725(bb 2 insn 6) }

( 7 )->[4]->( 5 6 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u19(11){ d35(bb 0 insn -1) }u20(13){ d43(bb 0 insn -1) }u21(25){ d113(bb 0 insn -1) }u22(26){ d114(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 153
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 153
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 153
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 134
;; live  kill	 14 [lr]
;; rd  in  	(20)
8, 9, 20, 27, 34, 35, 42, 43, 107, 113, 114, 721, 722, 723, 724, 725, 726, 727, 731, 732
;; rd  gen 	(3)
8, 109, 723
;; rd  kill	(27)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 44, 45, 46, 47, 48, 49, 104, 105, 106, 107, 108, 109, 110, 111, 112, 723
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 153
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 153
;; rd  out 	(19)
8, 20, 27, 34, 35, 42, 43, 109, 113, 114, 721, 722, 723, 724, 725, 726, 727, 731, 732
;;  UD chains for artificial uses
;;   reg 11 { d35(bb 0 insn -1) }
;;   reg 13 { d43(bb 0 insn -1) }
;;   reg 25 { d113(bb 0 insn -1) }
;;   reg 26 { d114(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 25
;;      reg 153 { d732(bb 3 insn 68) }
;;   UD chains for insn luid 1 uid 26
;;      reg 133 { d722(bb 3 insn 20) d721(bb 6 insn 37) }
;;   UD chains for insn luid 2 uid 27
;;      reg 13 { d43(bb 0 insn -1) }
;;      reg 0 { d1(bb 4 insn 25) }
;;      reg 1 { d18(bb 4 insn 26) }
;;   UD chains for insn luid 3 uid 28
;;      reg 0 { d8(bb 4 insn 27) }
;;   UD chains for insn luid 4 uid 29
;;      reg 134 { d723(bb 4 insn 28) }
;;   UD chains for insn luid 5 uid 30
;;      reg 24 { d109(bb 4 insn 29) }

( 4 )->[5]->( 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u31(11){ d35(bb 0 insn -1) }u32(13){ d43(bb 0 insn -1) }u33(25){ d113(bb 0 insn -1) }u34(26){ d114(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 153
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 153
;; live  gen 	 1 [r1]
;; live  kill	 14 [lr]
;; rd  in  	(19)
8, 20, 27, 34, 35, 42, 43, 109, 113, 114, 721, 722, 723, 724, 725, 726, 727, 731, 732
;; rd  gen 	(0)

;; rd  kill	(6)
44, 45, 46, 47, 48, 49
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 153
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 153
;; rd  out 	(19)
8, 20, 27, 34, 35, 42, 43, 109, 113, 114, 721, 722, 723, 724, 725, 726, 727, 731, 732
;;  UD chains for artificial uses
;;   reg 11 { d35(bb 0 insn -1) }
;;   reg 13 { d43(bb 0 insn -1) }
;;   reg 25 { d113(bb 0 insn -1) }
;;   reg 26 { d114(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 34
;;      reg 13 { d43(bb 0 insn -1) }
;;      reg 0 { d8(bb 4 insn 27) }
;;      reg 1 { d11(bb 5 insn 71) }

( 4 5 )->[6]->( 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u38(11){ d35(bb 0 insn -1) }u39(13){ d43(bb 0 insn -1) }u40(25){ d113(bb 0 insn -1) }u41(26){ d114(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 153
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 153
;; live  gen 	 133
;; live  kill	
;; rd  in  	(19)
8, 20, 27, 34, 35, 42, 43, 109, 113, 114, 721, 722, 723, 724, 725, 726, 727, 731, 732
;; rd  gen 	(1)
721
;; rd  kill	(2)
721, 722
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 153
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 153
;; rd  out 	(18)
8, 20, 27, 34, 35, 42, 43, 109, 113, 114, 721, 723, 724, 725, 726, 727, 731, 732
;;  UD chains for artificial uses
;;   reg 11 { d35(bb 0 insn -1) }
;;   reg 13 { d43(bb 0 insn -1) }
;;   reg 25 { d113(bb 0 insn -1) }
;;   reg 26 { d114(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 37
;;      reg 133 { d722(bb 3 insn 20) d721(bb 6 insn 37) }

( 6 3 )->[7]->( 4 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u43(11){ d35(bb 0 insn -1) }u44(13){ d43(bb 0 insn -1) }u45(25){ d113(bb 0 insn -1) }u46(26){ d114(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 153
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc] 152
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 153
;; live  gen 	 24 [cc] 152
;; live  kill	
;; rd  in  	(21)
8, 9, 20, 27, 34, 35, 42, 43, 109, 111, 113, 114, 721, 722, 723, 724, 725, 726, 727, 731, 732
;; rd  gen 	(2)
107, 731
;; rd  kill	(10)
104, 105, 106, 107, 108, 109, 110, 111, 112, 731
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 152 153
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 152 153
;; rd  out 	(20)
8, 9, 20, 27, 34, 35, 42, 43, 107, 113, 114, 721, 722, 723, 724, 725, 726, 727, 731, 732
;;  UD chains for artificial uses
;;   reg 11 { d35(bb 0 insn -1) }
;;   reg 13 { d43(bb 0 insn -1) }
;;   reg 25 { d113(bb 0 insn -1) }
;;   reg 26 { d114(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 41
;;      reg 133 { d722(bb 3 insn 20) d721(bb 6 insn 37) }
;;   UD chains for insn luid 2 uid 42
;;      reg 24 { d107(bb 7 insn 41) }

( 7 )->[8]->( 1 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u49(11){ d35(bb 0 insn -1) }u50(13){ d43(bb 0 insn -1) }u51(25){ d113(bb 0 insn -1) }u52(26){ d114(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 146 147 149
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152
;; live  gen 	 0 [r0] 146 147 149
;; live  kill	 14 [lr]
;; rd  in  	(20)
8, 9, 20, 27, 34, 35, 42, 43, 107, 113, 114, 721, 722, 723, 724, 725, 726, 727, 731, 732
;; rd  gen 	(3)
728, 729, 730
;; rd  kill	(9)
44, 45, 46, 47, 48, 49, 728, 729, 730
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(23)
8, 9, 20, 27, 34, 35, 42, 43, 107, 113, 114, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732
;;  UD chains for artificial uses
;;   reg 11 { d35(bb 0 insn -1) }
;;   reg 13 { d43(bb 0 insn -1) }
;;   reg 25 { d113(bb 0 insn -1) }
;;   reg 26 { d114(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 45
;;      reg 152 { d731(bb 7 insn 70) }
;;   UD chains for insn luid 1 uid 46
;;      reg 146 { d728(bb 8 insn 45) }
;;   UD chains for insn luid 2 uid 47
;;      reg 13 { d43(bb 0 insn -1) }
;;      reg 147 { d729(bb 8 insn 46) }
;;   UD chains for insn luid 4 uid 49
;;      reg 13 { d43(bb 0 insn -1) }
;;      reg 0 { d5(bb 8 insn 48) }
;;   UD chains for insn luid 6 uid 52
;;      reg 149 { d730(bb 8 insn 51) }
;;      reg 152 { d731(bb 7 insn 70) }
;;   UD chains for insn luid 8 uid 56
;;      reg 13 { d43(bb 0 insn -1) }
;;      reg 0 { d2(bb 8 insn 55) }

( 2 )->[9]->( 1 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u63(11){ d35(bb 0 insn -1) }u64(13){ d43(bb 0 insn -1) }u65(25){ d113(bb 0 insn -1) }u66(26){ d114(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(12)
9, 20, 27, 34, 35, 42, 43, 111, 113, 114, 724, 725
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(12)
9, 20, 27, 34, 35, 42, 43, 111, 113, 114, 724, 725
;;  UD chains for artificial uses
;;   reg 11 { d35(bb 0 insn -1) }
;;   reg 13 { d43(bb 0 insn -1) }
;;   reg 25 { d113(bb 0 insn -1) }
;;   reg 26 { d114(bb 0 insn -1) }

( 8 9 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u67(11){ d35(bb 0 insn -1) }u68(13){ d43(bb 0 insn -1) }u69(14){ }u70(25){ d113(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(24)
8, 9, 20, 27, 34, 35, 42, 43, 107, 111, 113, 114, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(24)
8, 9, 20, 27, 34, 35, 42, 43, 107, 111, 113, 114, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732
;;  UD chains for artificial uses
;;   reg 11 { d35(bb 0 insn -1) }
;;   reg 13 { d43(bb 0 insn -1) }
;;   reg 14 { }
;;   reg 25 { d113(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 15 to worklist
  Adding insn 12 to worklist
  Adding insn 72 to worklist
  Adding insn 30 to worklist
  Adding insn 27 to worklist
  Adding insn 34 to worklist
  Adding insn 42 to worklist
  Adding insn 56 to worklist
  Adding insn 52 to worklist
  Adding insn 49 to worklist
  Adding insn 47 to worklist
Finished finding needed instructions:
Processing use of (reg 13 sp) in insn 47:
Processing use of (reg 147 [ <variable>.stop ]) in insn 47:
  Adding insn 46 to worklist
Processing use of (reg 146 [ armpmu ]) in insn 46:
  Adding insn 45 to worklist
Processing use of (reg 152) in insn 45:
  Adding insn 70 to worklist
Processing use of (reg 13 sp) in insn 49:
Processing use of (reg 0 r0) in insn 49:
  Adding insn 48 to worklist
Processing use of (reg 149) in insn 52:
  Adding insn 51 to worklist
Processing use of (reg 152) in insn 52:
Processing use of (reg 13 sp) in insn 56:
Processing use of (reg 0 r0) in insn 56:
  Adding insn 55 to worklist
Processing use of (reg 24 cc) in insn 42:
  Adding insn 41 to worklist
Processing use of (reg 133 [ i ]) in insn 41:
  Adding insn 20 to worklist
  Adding insn 37 to worklist
Processing use of (reg 133 [ i ]) in insn 37:
Processing use of (reg 143 [ <variable>.num_resources ]) in insn 20:
  Adding insn 19 to worklist
Processing use of (reg 142 [ pmu_device ]) in insn 19:
  Adding insn 18 to worklist
Processing use of (reg 137) in insn 18:
  Adding insn 6 to worklist
Processing use of (reg 13 sp) in insn 34:
Processing use of (reg 0 r0) in insn 34:
Processing use of (reg 1 r1) in insn 34:
  Adding insn 71 to worklist
Processing use of (reg 13 sp) in insn 27:
Processing use of (reg 0 r0) in insn 27:
  Adding insn 25 to worklist
Processing use of (reg 1 r1) in insn 27:
  Adding insn 26 to worklist
Processing use of (reg 133 [ i ]) in insn 26:
Processing use of (reg 153) in insn 25:
  Adding insn 68 to worklist
Processing use of (reg 137) in insn 68:
Processing use of (reg 24 cc) in insn 30:
  Adding insn 29 to worklist
Processing use of (reg 134 [ irq ]) in insn 29:
  Adding insn 28 to worklist
Processing use of (reg 0 r0) in insn 28:
Processing use of (reg 13 sp) in insn 12:
Processing use of (reg 0 r0) in insn 12:
  Adding insn 10 to worklist
Processing use of (reg 1 r1) in insn 12:
  Adding insn 11 to worklist
Processing use of (reg 137) in insn 10:
Processing use of (reg 24 cc) in insn 15:
  Adding insn 14 to worklist
Processing use of (reg 135 [ D.25488 ]) in insn 14:
  Adding insn 13 to worklist
Processing use of (reg 0 r0) in insn 13:


hw_perf_event_destroy

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={11d,7u} r1={10d,3u} r2={7d} r3={7d} r11={1d,9u} r12={7d} r13={1d,15u} r14={6d,1u} r15={6d} r16={6d} r17={6d} r18={6d} r19={6d} r20={6d} r21={6d} r22={6d} r23={6d} r24={9d,3u} r25={1d,9u} r26={1d,8u} r27={6d} r28={6d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={6d} r38={6d} r39={6d} r40={6d} r41={6d} r42={6d} r43={6d} r44={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r76={6d} r77={6d} r78={6d} r79={6d} r80={6d} r81={6d} r82={6d} r83={6d} r84={6d} r85={6d} r86={6d} r87={6d} r88={6d} r89={6d} r90={6d} r91={6d} r92={6d} r93={6d} r94={6d} r95={6d} r96={6d} r97={6d} r98={6d} r99={6d} r100={6d} r101={6d} r102={6d} r103={6d} r104={6d} r105={6d} r106={6d} r107={6d} r108={6d} r109={6d} r110={6d} r111={6d} r112={6d} r113={6d} r114={6d} r115={6d} r116={6d} r117={6d} r118={6d} r119={6d} r120={6d} r121={6d} r122={6d} r123={6d} r124={6d} r125={6d} r126={6d} r127={6d} r133={2d,3u} r134={1d,1u} r135={1d,1u} r137={1d,3u} r142={1d,1u} r143={1d,1u} r146={1d,1u} r147={1d,1u} r149={1d,1u} r152={1d,2u} r153={1d,1u} 
;;    total ref usage 804{733d,71u,0e} in 33{27 regular + 6 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720
0[0,11] 1[11,10] 2[21,7] 3[28,7] 11[35,1] 12[36,7] 13[43,1] 14[44,6] 15[50,6] 16[56,6] 17[62,6] 18[68,6] 19[74,6] 20[80,6] 21[86,6] 22[92,6] 23[98,6] 24[104,9] 25[113,1] 26[114,1] 27[115,6] 28[121,6] 29[127,6] 30[133,6] 31[139,6] 32[145,6] 33[151,6] 34[157,6] 35[163,6] 36[169,6] 37[175,6] 38[181,6] 39[187,6] 40[193,6] 41[199,6] 42[205,6] 43[211,6] 44[217,6] 45[223,6] 46[229,6] 47[235,6] 48[241,6] 49[247,6] 50[253,6] 51[259,6] 52[265,6] 53[271,6] 54[277,6] 55[283,6] 56[289,6] 57[295,6] 58[301,6] 59[307,6] 60[313,6] 61[319,6] 62[325,6] 63[331,6] 64[337,6] 65[343,6] 66[349,6] 67[355,6] 68[361,6] 69[367,6] 70[373,6] 71[379,6] 72[385,6] 73[391,6] 74[397,6] 75[403,6] 76[409,6] 77[415,6] 78[421,6] 79[427,6] 80[433,6] 81[439,6] 82[445,6] 83[451,6] 84[457,6] 85[463,6] 86[469,6] 87[475,6] 88[481,6] 89[487,6] 90[493,6] 91[499,6] 92[505,6] 93[511,6] 94[517,6] 95[523,6] 96[529,6] 97[535,6] 98[541,6] 99[547,6] 100[553,6] 101[559,6] 102[565,6] 103[571,6] 104[577,6] 105[583,6] 106[589,6] 107[595,6] 108[601,6] 109[607,6] 110[613,6] 111[619,6] 112[625,6] 113[631,6] 114[637,6] 115[643,6] 116[649,6] 117[655,6] 118[661,6] 119[667,6] 120[673,6] 121[679,6] 122[685,6] 123[691,6] 124[697,6] 125[703,6] 126[709,6] 127[715,6] 133[721,2] 134[723,1] 135[724,1] 137[725,1] 142[726,1] 143[727,1] 146[728,1] 147[729,1] 149[730,1] 152[731,1] 153[732,1] 
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 135 137
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 135 137
;; live  kill	 14 [lr]
;; rd  in  	(10)
10, 20, 27, 34, 35, 42, 43, 49, 113, 114
;; rd  gen 	(4)
9, 111, 724, 725
;; rd  kill	(28)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 44, 45, 46, 47, 48, 49, 104, 105, 106, 107, 108, 109, 110, 111, 112, 724, 725

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 3 10 2 arch/arm/kernel/perf_event.c:467 (set (reg/f:SI 137)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 10 6 11 2 arch/arm/kernel/perf_event.c:467 (set (reg:SI 0 r0)
        (plus:SI (reg/f:SI 137)
            (const_int 12 [0xc]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 12 [0xc])))
        (nil)))

(insn 11 10 12 2 arch/arm/kernel/perf_event.c:467 (set (reg:SI 1 r1)
        (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                (const_int 152 [0x98])))) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                (const_int 152 [0x98])))
        (nil)))

(call_insn 12 11 13 2 arch/arm/kernel/perf_event.c:467 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("atomic_dec_and_mutex_lock") [flags 0x41] <function_decl 0x10d7c480 atomic_dec_and_mutex_lock>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 13 12 14 2 arch/arm/kernel/perf_event.c:467 (set (reg:SI 135 [ D.25488 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 14 13 15 2 arch/arm/kernel/perf_event.c:467 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 135 [ D.25488 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 135 [ D.25488 ])
        (nil)))

(jump_insn 15 14 16 2 arch/arm/kernel/perf_event.c:467 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 63)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 2 -> ( 3 9)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; rd  out 	(12)
9, 20, 27, 34, 35, 42, 43, 111, 113, 114, 724, 725


;; Succ edge  3 [61.0%]  (fallthru)
;; Succ edge  9 [39.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u11(11){ }u12(13){ }u13(25){ }u14(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 133 142 143 153
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; live  gen 	 133 142 143 153
;; live  kill	
;; rd  in  	(12)
9, 20, 27, 34, 35, 42, 43, 111, 113, 114, 724, 725
;; rd  gen 	(4)
722, 726, 727, 732
;; rd  kill	(5)
721, 722, 726, 727, 732

;; Pred edge  2 [61.0%]  (fallthru)
(note 16 15 18 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 18 16 19 3 arch/arm/kernel/perf_event.c:450 (set (reg/f:SI 142 [ pmu_device ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 137)
                (const_int 4 [0x4])) [0 pmu_device+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 4 [0x4]))) [0 pmu_device+0 S4 A32])
        (nil)))

(insn 19 18 20 3 arch/arm/kernel/perf_event.c:450 (set (reg:SI 143 [ <variable>.num_resources ])
        (mem/s/j:SI (plus:SI (reg/f:SI 142 [ pmu_device ])
                (const_int 368 [0x170])) [0 <variable>.num_resources+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 142 [ pmu_device ])
        (nil)))

(insn 20 19 68 3 arch/arm/kernel/perf_event.c:450 (set (reg/v:SI 133 [ i ])
        (plus:SI (reg:SI 143 [ <variable>.num_resources ])
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 143 [ <variable>.num_resources ])
        (nil)))

(insn 68 20 72 3 (set (reg/f:SI 153)
        (reg/f:SI 137)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 137)
        (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
            (nil))))

(jump_insn 72 68 73 3 (set (pc)
        (label_ref 38)) -1 (nil))
;; End of basic block 3 -> ( 7)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 153
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 153
;; rd  out 	(16)
9, 20, 27, 34, 35, 42, 43, 111, 113, 114, 722, 724, 725, 726, 727, 732


;; Succ edge  7 [100.0%] 

(barrier 73 72 40)

;; Start of basic block ( 7) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u19(11){ }u20(13){ }u21(25){ }u22(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 153
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 153
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 153
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 134
;; live  kill	 14 [lr]
;; rd  in  	(20)
8, 9, 20, 27, 34, 35, 42, 43, 107, 113, 114, 721, 722, 723, 724, 725, 726, 727, 731, 732
;; rd  gen 	(3)
8, 109, 723
;; rd  kill	(27)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 44, 45, 46, 47, 48, 49, 104, 105, 106, 107, 108, 109, 110, 111, 112, 723

;; Pred edge  7 [91.0%] 
(code_label 40 73 23 4 160 "" [1 uses])

(note 23 40 25 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 25 23 26 4 arch/arm/kernel/perf_event.c:451 (set (reg:SI 0 r0)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 153)
                (const_int 4 [0x4])) [0 pmu_device+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 4 [0x4]))) [0 pmu_device+0 S4 A32])
        (nil)))

(insn 26 25 27 4 arch/arm/kernel/perf_event.c:451 (set (reg:SI 1 r1)
        (reg/v:SI 133 [ i ])) 167 {*arm_movsi_insn} (nil))

(call_insn 27 26 28 4 arch/arm/kernel/perf_event.c:451 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("platform_get_irq") [flags 0x41] <function_decl 0x11436f00 platform_get_irq>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 28 27 29 4 arch/arm/kernel/perf_event.c:451 (set (reg/v:SI 134 [ irq ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 29 28 30 4 arch/arm/kernel/perf_event.c:452 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 134 [ irq ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 134 [ irq ])
        (nil)))

(jump_insn 30 29 31 4 arch/arm/kernel/perf_event.c:452 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 35)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 4752 [0x1290])
            (nil))))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 153
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 153
;; rd  out 	(19)
8, 20, 27, 34, 35, 42, 43, 109, 113, 114, 721, 722, 723, 724, 725, 726, 727, 731, 732


;; Succ edge  5 [52.5%]  (fallthru)
;; Succ edge  6 [47.5%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u31(11){ }u32(13){ }u33(25){ }u34(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 153
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 153
;; live  gen 	 1 [r1]
;; live  kill	 14 [lr]
;; rd  in  	(19)
8, 20, 27, 34, 35, 42, 43, 109, 113, 114, 721, 722, 723, 724, 725, 726, 727, 731, 732
;; rd  gen 	(0)

;; rd  kill	(6)
44, 45, 46, 47, 48, 49

;; Pred edge  4 [52.5%]  (fallthru)
(note 31 30 71 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 71 31 34 5 arch/arm/kernel/perf_event.c:453 (set (reg:SI 1 r1)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(call_insn 34 71 35 5 arch/arm/kernel/perf_event.c:453 (parallel [
            (call (mem:SI (symbol_ref:SI ("free_irq") [flags 0x41] <function_decl 0x10cec900 free_irq>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 5 -> ( 6)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 153
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 153
;; rd  out 	(19)
8, 20, 27, 34, 35, 42, 43, 109, 113, 114, 721, 722, 723, 724, 725, 726, 727, 731, 732


;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 4 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u38(11){ }u39(13){ }u40(25){ }u41(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 153
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 153
;; live  gen 	 133
;; live  kill	
;; rd  in  	(19)
8, 20, 27, 34, 35, 42, 43, 109, 113, 114, 721, 722, 723, 724, 725, 726, 727, 731, 732
;; rd  gen 	(1)
721
;; rd  kill	(2)
721, 722

;; Pred edge  4 [47.5%] 
;; Pred edge  5 [100.0%]  (fallthru)
(code_label 35 34 36 6 159 "" [1 uses])

(note 36 35 37 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 37 36 38 6 arch/arm/kernel/perf_event.c:450 (set (reg/v:SI 133 [ i ])
        (plus:SI (reg/v:SI 133 [ i ])
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (nil))
;; End of basic block 6 -> ( 7)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 153
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 153
;; rd  out 	(18)
8, 20, 27, 34, 35, 42, 43, 109, 113, 114, 721, 723, 724, 725, 726, 727, 731, 732


;; Succ edge  7 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 6 3) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u43(11){ }u44(13){ }u45(25){ }u46(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 153
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc] 152
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 153
;; live  gen 	 24 [cc] 152
;; live  kill	
;; rd  in  	(21)
8, 9, 20, 27, 34, 35, 42, 43, 109, 111, 113, 114, 721, 722, 723, 724, 725, 726, 727, 731, 732
;; rd  gen 	(2)
107, 731
;; rd  kill	(10)
104, 105, 106, 107, 108, 109, 110, 111, 112, 731

;; Pred edge  6 [100.0%]  (fallthru,dfs_back)
;; Pred edge  3 [100.0%] 
(code_label 38 37 39 7 158 "" [1 uses])

(note 39 38 41 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 41 39 70 7 arch/arm/kernel/perf_event.c:450 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 133 [ i ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn 70 41 42 7 (set (reg/f:SI 152)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(jump_insn 42 70 43 7 arch/arm/kernel/perf_event.c:450 discrim 1 (set (pc)
        (if_then_else (ge (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 40)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil))))
;; End of basic block 7 -> ( 4 8)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 152 153
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 152 153
;; rd  out 	(20)
8, 9, 20, 27, 34, 35, 42, 43, 107, 113, 114, 721, 722, 723, 724, 725, 726, 727, 731, 732


;; Succ edge  4 [91.0%] 
;; Succ edge  8 [9.0%]  (fallthru,loop_exit)

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u49(11){ }u50(13){ }u51(25){ }u52(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 146 147 149
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152
;; live  gen 	 0 [r0] 146 147 149
;; live  kill	 14 [lr]
;; rd  in  	(20)
8, 9, 20, 27, 34, 35, 42, 43, 107, 113, 114, 721, 722, 723, 724, 725, 726, 727, 731, 732
;; rd  gen 	(3)
728, 729, 730
;; rd  kill	(9)
44, 45, 46, 47, 48, 49, 728, 729, 730

;; Pred edge  7 [9.0%]  (fallthru,loop_exit)
(note 43 42 45 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 45 43 46 8 arch/arm/kernel/perf_event.c:455 (set (reg/f:SI 146 [ armpmu ])
        (mem/f/c/i:SI (reg/f:SI 152) [0 armpmu+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 armpmu+0 S4 A32])
        (nil)))

(insn 46 45 47 8 arch/arm/kernel/perf_event.c:455 (set (reg/f:SI 147 [ <variable>.stop ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 146 [ armpmu ])
                (const_int 36 [0x24])) [0 <variable>.stop+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 146 [ armpmu ])
        (nil)))

(call_insn 47 46 48 8 arch/arm/kernel/perf_event.c:455 (parallel [
            (call (mem:SI (reg/f:SI 147 [ <variable>.stop ]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 244 {*call_reg_armv5} (expr_list:REG_DEAD (reg/f:SI 147 [ <variable>.stop ])
        (nil))
    (nil))

(insn 48 47 49 8 arch/arm/kernel/perf_event.c:457 (set (reg:SI 0 r0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(call_insn 49 48 51 8 arch/arm/kernel/perf_event.c:457 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("release_pmu") [flags 0x41] <function_decl 0x1147bb80 release_pmu>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_UNUSED (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 51 49 52 8 arch/arm/kernel/perf_event.c:458 (set (reg:SI 149)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 52 51 55 8 arch/arm/kernel/perf_event.c:458 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 152)
                (const_int 4 [0x4])) [0 pmu_device+0 S4 A32])
        (reg:SI 149)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 152)
        (expr_list:REG_DEAD (reg:SI 149)
            (expr_list:REG_EQUAL (const_int 0 [0x0])
                (nil)))))

(insn 55 52 56 8 arch/arm/kernel/perf_event.c:469 (set (reg:SI 0 r0)
        (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                (const_int 152 [0x98])))) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                (const_int 152 [0x98])))
        (nil)))

(call_insn/j 56 55 57 8 arch/arm/kernel/perf_event.c:469 (parallel [
            (call (mem:SI (symbol_ref:SI ("mutex_unlock") [flags 0x41] <function_decl 0x10d7c400 mutex_unlock>) [0 S4 A32])
                (const_int 0 [0x0]))
            (return)
            (use (const_int 0 [0x0]))
        ]) 258 {*sibcall_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 8 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(23)
8, 9, 20, 27, 34, 35, 42, 43, 107, 113, 114, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 57 56 63)

;; Start of basic block ( 2) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u63(11){ }u64(13){ }u65(25){ }u66(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(12)
9, 20, 27, 34, 35, 42, 43, 111, 113, 114, 724, 725
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  2 [39.0%] 
(code_label 63 57 66 9 161 "" [1 uses])

(note 66 63 0 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 9 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(12)
9, 20, 27, 34, 35, 42, 43, 111, 113, 114, 724, 725


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function armpmu_event_init (armpmu_event_init)[0:1325]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 64 n_edges 95 count 136 (  2.1)
df_worklist_dataflow_doublequeue:n_basic_blocks 64 n_edges 95 count 162 (  2.5)
df_worklist_dataflow_doublequeue:n_basic_blocks 64 n_edges 95 count 163 (  2.5)


armpmu_event_init

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={28d,22u} r1={20d,5u} r2={16d,1u} r3={16d,1u} r11={1d,63u} r12={15d} r13={1d,79u} r14={15d,1u} r15={14d} r16={14d} r17={14d} r18={14d} r19={14d} r20={14d} r21={14d} r22={14d} r23={14d} r24={49d,32u} r25={1d,63u} r26={1d,62u} r27={14d} r28={14d} r29={14d} r30={14d} r31={14d} r32={14d} r33={14d} r34={14d} r35={14d} r36={14d} r37={14d} r38={14d} r39={14d} r40={14d} r41={14d} r42={14d} r43={14d} r44={14d} r45={14d} r46={14d} r47={14d} r48={14d} r49={14d} r50={14d} r51={14d} r52={14d} r53={14d} r54={14d} r55={14d} r56={14d} r57={14d} r58={14d} r59={14d} r60={14d} r61={14d} r62={14d} r63={14d} r64={14d} r65={14d} r66={14d} r67={14d} r68={14d} r69={14d} r70={14d} r71={14d} r72={14d} r73={14d} r74={14d} r75={14d} r76={14d} r77={14d} r78={14d} r79={14d} r80={14d} r81={14d} r82={14d} r83={14d} r84={14d} r85={14d} r86={14d} r87={14d} r88={14d} r89={14d} r90={14d} r91={14d} r92={14d} r93={14d} r94={14d} r95={14d} r96={14d} r97={14d} r98={14d} r99={14d} r100={14d} r101={14d} r102={14d} r103={14d} r104={14d} r105={14d} r106={14d} r107={14d} r108={14d} r109={14d} r110={14d} r111={14d} r112={14d} r113={14d} r114={14d} r115={14d} r116={14d} r117={14d} r118={14d} r119={14d} r120={14d} r121={14d} r122={14d} r123={14d} r124={14d} r125={14d} r126={14d} r127={14d} r134={1d,1u} r135={2d,3u} r137={1d,2u} r138={1d,2u} r140={1d,4u} r141={1d,3u} r142={1d,2u,1d} r143={1d,2u} r144={1d,2u} r145={1d,2u,1d} r146={1d} r147={1d} r148={1d} r149={1d,2u} r151={1d,2u} r152={2d,1u} r153={2d,5u} r154={1d,2u} r155={1d,2u} r156={1d,1u} r157={2d,6u} r158={1d,1u} r160={18d,9u,1d} r161={1d,1u} r163={1d,22u} r164={1d,2u,1d} r165={1d,1u} r166={1d,1u} r168={1d,1u} r169={1d,5u} r170={1d,1u} r171={1d,1u} r179={1d,3u} r183={1d,1u} r184={1d,1u} r185={1d,1u} r186={1d,1u} r192={1d,1u} r195={1d,1u} r196={1d,3u} r198={1d,1u} r202={1d,1u} r203={1d,1u} r204={1d,1u} r205={1d,1u} r206={1d,1u} r209={1d,1u} r212={1d,1u} r213={1d,1u} r214={1d,1u} r215={1d,1u} r216={1d,1u} r218={1d,1u} r219={1d,1u} r220={1d,1u} r221={1d,1u} r222={1d,1u} r223={1d,1u} r224={1d,1u} r225={1d,1u} r227={1d,1u} r228={1d,1u} r229={1d,1u} r230={1d,2u} r231={1d,1u} r232={1d,1u} r234={1d,1u} r235={2d,2u} r239={1d,1u} r240={1d,1u} r241={1d,1u} r243={1d,1u} r245={1d,1u} r246={1d,1u} r248={1d,3u} r249={1d,2u} r250={2d,2u} r252={2d,2u} r254={1d,1u} r255={1d,1u} r257={1d,1u} r258={1d,1u} r259={1d,2u} r263={1d,2u} r264={1d,1u} 
;;    total ref usage 2300{1812d,484u,4e} in 237{223 regular + 14 call} insns.
;; Reaching defs:

  sparse invalidated 	24
  dense invalidated 	
0[0,28] 1[28,20] 2[48,16] 3[64,16] 11[80,1] 12[81,15] 13[96,1] 14[97,15] 15[112,14] 16[126,14] 17[140,14] 18[154,14] 19[168,14] 20[182,14] 21[196,14] 22[210,14] 23[224,14] 24[238,49] 25[287,1] 26[288,1] 27[289,14] 28[303,14] 29[317,14] 30[331,14] 31[345,14] 32[359,14] 33[373,14] 34[387,14] 35[401,14] 36[415,14] 37[429,14] 38[443,14] 39[457,14] 40[471,14] 41[485,14] 42[499,14] 43[513,14] 44[527,14] 45[541,14] 46[555,14] 47[569,14] 48[583,14] 49[597,14] 50[611,14] 51[625,14] 52[639,14] 53[653,14] 54[667,14] 55[681,14] 56[695,14] 57[709,14] 58[723,14] 59[737,14] 60[751,14] 61[765,14] 62[779,14] 63[793,14] 64[807,14] 65[821,14] 66[835,14] 67[849,14] 68[863,14] 69[877,14] 70[891,14] 71[905,14] 72[919,14] 73[933,14] 74[947,14] 75[961,14] 76[975,14] 77[989,14] 78[1003,14] 79[1017,14] 80[1031,14] 81[1045,14] 82[1059,14] 83[1073,14] 84[1087,14] 85[1101,14] 86[1115,14] 87[1129,14] 88[1143,14] 89[1157,14] 90[1171,14] 91[1185,14] 92[1199,14] 93[1213,14] 94[1227,14] 95[1241,14] 96[1255,14] 97[1269,14] 98[1283,14] 99[1297,14] 100[1311,14] 101[1325,14] 102[1339,14] 103[1353,14] 104[1367,14] 105[1381,14] 106[1395,14] 107[1409,14] 108[1423,14] 109[1437,14] 110[1451,14] 111[1465,14] 112[1479,14] 113[1493,14] 114[1507,14] 115[1521,14] 116[1535,14] 117[1549,14] 118[1563,14] 119[1577,14] 120[1591,14] 121[1605,14] 122[1619,14] 123[1633,14] 124[1647,14] 125[1661,14] 126[1675,14] 127[1689,14] 134[1703,1] 135[1704,2] 137[1706,1] 138[1707,1] 140[1708,1] 141[1709,1] 142[1710,1] 143[1711,1] 144[1712,1] 145[1713,1] 146[1714,1] 147[1715,1] 148[1716,1] 149[1717,1] 151[1718,1] 152[1719,2] 153[1721,2] 154[1723,1] 155[1724,1] 156[1725,1] 157[1726,2] 158[1728,1] 160[1729,18] 161[1747,1] 163[1748,1] 164[1749,1] 165[1750,1] 166[1751,1] 168[1752,1] 169[1753,1] 170[1754,1] 171[1755,1] 179[1756,1] 183[1757,1] 184[1758,1] 185[1759,1] 186[1760,1] 192[1761,1] 195[1762,1] 196[1763,1] 198[1764,1] 202[1765,1] 203[1766,1] 204[1767,1] 205[1768,1] 206[1769,1] 209[1770,1] 212[1771,1] 213[1772,1] 214[1773,1] 215[1774,1] 216[1775,1] 218[1776,1] 219[1777,1] 220[1778,1] 221[1779,1] 222[1780,1] 223[1781,1] 224[1782,1] 225[1783,1] 227[1784,1] 228[1785,1] 229[1786,1] 230[1787,1] 231[1788,1] 232[1789,1] 234[1790,1] 235[1791,2] 239[1793,1] 240[1794,1] 241[1795,1] 243[1796,1] 245[1797,1] 246[1798,1] 248[1799,1] 249[1800,1] 250[1801,2] 252[1803,2] 254[1805,1] 255[1806,1] 257[1807,1] 258[1808,1] 259[1809,1] 263[1810,1] 264[1811,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d27(0){ }d47(1){ }d63(2){ }d79(3){ }d80(11){ }d95(12){ }d96(13){ }d111(14){ }d287(25){ }d288(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
27, 47, 63, 79, 80, 95, 96, 111, 287, 288
;; rd  kill	(114)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 287, 288
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
27, 47, 63, 79, 80, 95, 96, 111, 287, 288

( 0 )->[2]->( 4 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d80(bb 0 insn -1) }u1(13){ d96(bb 0 insn -1) }u2(25){ d287(bb 0 insn -1) }u3(26){ d288(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 163 164
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 163 164
;; live  kill	
;; rd  in  	(10)
27, 47, 63, 79, 80, 95, 96, 111, 287, 288
;; rd  gen 	(3)
286, 1748, 1749
;; rd  kill	(2)
1748, 1749
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 163 164
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 163 164
;; rd  out 	(13)
27, 47, 63, 79, 80, 95, 96, 111, 286, 287, 288, 1748, 1749
;;  UD chains for artificial uses
;;   reg 11 { d80(bb 0 insn -1) }
;;   reg 13 { d96(bb 0 insn -1) }
;;   reg 25 { d287(bb 0 insn -1) }
;;   reg 26 { d288(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d27(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 6
;;      reg 163 { d1748(bb 2 insn 2) }
;;   UD chains for insn luid 2 uid 7
;;      reg 164 { d1749(bb 2 insn 6) }
;;   UD chains for insn luid 3 uid 8
;;      reg 24 { d286(bb 2 insn 7) }

( 2 )->[3]->( 5 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(11){ d80(bb 0 insn -1) }u9(13){ d96(bb 0 insn -1) }u10(25){ d287(bb 0 insn -1) }u11(26){ d288(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 163 164
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164
;; lr  def 	 24 [cc] 165 166 168
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 163 164
;; live  gen 	 24 [cc] 165 166 168
;; live  kill	
;; rd  in  	(13)
27, 47, 63, 79, 80, 95, 96, 111, 286, 287, 288, 1748, 1749
;; rd  gen 	(4)
285, 1750, 1751, 1752
;; rd  kill	(3)
1750, 1751, 1752
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 163
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 163
;; rd  out 	(16)
27, 47, 63, 79, 80, 95, 96, 111, 285, 287, 288, 1748, 1749, 1750, 1751, 1752
;;  UD chains for artificial uses
;;   reg 11 { d80(bb 0 insn -1) }
;;   reg 13 { d96(bb 0 insn -1) }
;;   reg 25 { d287(bb 0 insn -1) }
;;   reg 26 { d288(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 11
;;      reg 164 { d1749(bb 2 insn 6) }
;;      reg 166 { d1751(bb 3 insn 9) }
;;   eq_note reg 164 { }
;;   UD chains for insn luid 2 uid 12
;;      reg 165 { d1750(bb 3 insn 11) }
;;   UD chains for insn luid 3 uid 13
;;      reg 168 { d1752(bb 3 insn 12) }
;;   UD chains for insn luid 4 uid 14
;;      reg 24 { d285(bb 3 insn 13) }

( 3 2 )->[4]->( 61 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u18(11){ d80(bb 0 insn -1) }u19(13){ d96(bb 0 insn -1) }u20(25){ d287(bb 0 insn -1) }u21(26){ d288(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 160
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 160
;; live  kill	
;; rd  in  	(17)
27, 47, 63, 79, 80, 95, 96, 111, 285, 286, 287, 288, 1748, 1749, 1750, 1751, 1752
;; rd  gen 	(1)
1746
;; rd  kill	(18)
1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 160
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 160
;; rd  out 	(18)
27, 47, 63, 79, 80, 95, 96, 111, 285, 286, 287, 288, 1746, 1748, 1749, 1750, 1751, 1752
;;  UD chains for artificial uses
;;   reg 11 { d80(bb 0 insn -1) }
;;   reg 13 { d96(bb 0 insn -1) }
;;   reg 25 { d287(bb 0 insn -1) }
;;   reg 26 { d288(bb 0 insn -1) }

( 3 )->[5]->( 6 7 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u22(11){ d80(bb 0 insn -1) }u23(13){ d96(bb 0 insn -1) }u24(25){ d287(bb 0 insn -1) }u25(26){ d288(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 163
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 169 170
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 163
;; live  gen 	 24 [cc] 169 170
;; live  kill	
;; rd  in  	(16)
27, 47, 63, 79, 80, 95, 96, 111, 285, 287, 288, 1748, 1749, 1750, 1751, 1752
;; rd  gen 	(3)
284, 1753, 1754
;; rd  kill	(2)
1753, 1754
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 163 169
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 163 169
;; rd  out 	(18)
27, 47, 63, 79, 80, 95, 96, 111, 284, 287, 288, 1748, 1749, 1750, 1751, 1752, 1753, 1754
;;  UD chains for artificial uses
;;   reg 11 { d80(bb 0 insn -1) }
;;   reg 13 { d96(bb 0 insn -1) }
;;   reg 25 { d287(bb 0 insn -1) }
;;   reg 26 { d288(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 25
;;      reg 169 { d1753(bb 5 insn 24) }
;;   UD chains for insn luid 2 uid 26
;;      reg 170 { d1754(bb 5 insn 25) }
;;   UD chains for insn luid 3 uid 27
;;      reg 24 { d284(bb 5 insn 26) }

( 5 )->[6]->( 61 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u29(11){ d80(bb 0 insn -1) }u30(13){ d96(bb 0 insn -1) }u31(25){ d287(bb 0 insn -1) }u32(26){ d288(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 160
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 160
;; live  kill	
;; rd  in  	(18)
27, 47, 63, 79, 80, 95, 96, 111, 284, 287, 288, 1748, 1749, 1750, 1751, 1752, 1753, 1754
;; rd  gen 	(1)
1745
;; rd  kill	(18)
1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 160
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 160
;; rd  out 	(19)
27, 47, 63, 79, 80, 95, 96, 111, 284, 287, 288, 1745, 1748, 1749, 1750, 1751, 1752, 1753, 1754
;;  UD chains for artificial uses
;;   reg 11 { d80(bb 0 insn -1) }
;;   reg 13 { d96(bb 0 insn -1) }
;;   reg 25 { d287(bb 0 insn -1) }
;;   reg 26 { d288(bb 0 insn -1) }

( 5 )->[7]->( 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u33(11){ d80(bb 0 insn -1) }u34(13){ d96(bb 0 insn -1) }u35(25){ d287(bb 0 insn -1) }u36(26){ d288(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 163 169
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163 169
;; lr  def 	 157 171 263 264
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 163 169
;; live  gen 	 157 171 263 264
;; live  kill	
;; rd  in  	(18)
27, 47, 63, 79, 80, 95, 96, 111, 284, 287, 288, 1748, 1749, 1750, 1751, 1752, 1753, 1754
;; rd  gen 	(4)
1727, 1755, 1810, 1811
;; rd  kill	(5)
1726, 1727, 1755, 1810, 1811
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 157 163 169 263 264
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 157 163 169 263 264
;; rd  out 	(22)
27, 47, 63, 79, 80, 95, 96, 111, 284, 287, 288, 1727, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1810, 1811
;;  UD chains for artificial uses
;;   reg 11 { d80(bb 0 insn -1) }
;;   reg 13 { d96(bb 0 insn -1) }
;;   reg 25 { d287(bb 0 insn -1) }
;;   reg 26 { d288(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 35
;;      reg 163 { d1748(bb 2 insn 2) }
;;      reg 171 { d1755(bb 7 insn 34) }
;;   UD chains for insn luid 2 uid 38
;;      reg 169 { d1753(bb 5 insn 24) }
;;   UD chains for insn luid 3 uid 46
;;      reg 169 { d1753(bb 5 insn 24) }
;;   UD chains for insn luid 4 uid 48
;;      reg 169 { d1753(bb 5 insn 24) }

( 7 12 )->[8]->( 9 13 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u42(11){ d80(bb 0 insn -1) }u43(13){ d96(bb 0 insn -1) }u44(25){ d287(bb 0 insn -1) }u45(26){ d288(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 157 163 169 263 264
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 157 163 169 263 264
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(27)
27, 47, 63, 79, 80, 95, 96, 111, 243, 284, 287, 288, 1724, 1725, 1726, 1727, 1728, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1810, 1811
;; rd  gen 	(1)
283
;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 157 163 169 263 264
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 157 163 169 263 264
;; rd  out 	(26)
27, 47, 63, 79, 80, 95, 96, 111, 283, 287, 288, 1724, 1725, 1726, 1727, 1728, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1810, 1811
;;  UD chains for artificial uses
;;   reg 11 { d80(bb 0 insn -1) }
;;   reg 13 { d96(bb 0 insn -1) }
;;   reg 25 { d287(bb 0 insn -1) }
;;   reg 26 { d288(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 40
;;      reg 157 { d1727(bb 7 insn 38) d1726(bb 12 insn 60) }
;;   UD chains for insn luid 1 uid 41
;;      reg 24 { d283(bb 8 insn 40) }

( 8 )->[9]->( 10 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u48(11){ d80(bb 0 insn -1) }u49(13){ d96(bb 0 insn -1) }u50(25){ d287(bb 0 insn -1) }u51(26){ d288(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 157 163 169 263 264
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157
;; lr  def 	 158
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 157 163 169 263 264
;; live  gen 	 158
;; live  kill	
;; rd  in  	(26)
27, 47, 63, 79, 80, 95, 96, 111, 283, 287, 288, 1724, 1725, 1726, 1727, 1728, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1810, 1811
;; rd  gen 	(1)
1728
;; rd  kill	(1)
1728
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 157 158 163 169 263 264
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 157 158 163 169 263 264
;; rd  out 	(26)
27, 47, 63, 79, 80, 95, 96, 111, 283, 287, 288, 1724, 1725, 1726, 1727, 1728, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1810, 1811
;;  UD chains for artificial uses
;;   reg 11 { d80(bb 0 insn -1) }
;;   reg 13 { d96(bb 0 insn -1) }
;;   reg 25 { d287(bb 0 insn -1) }
;;   reg 26 { d288(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 43
;;      reg 157 { d1727(bb 7 insn 38) d1726(bb 12 insn 60) }

( 9 10 )->[10]->( 10 11 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u53(11){ d80(bb 0 insn -1) }u54(13){ d96(bb 0 insn -1) }u55(25){ d287(bb 0 insn -1) }u56(26){ d288(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 157 158 163 169 263 264
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157 158 263 264
;; lr  def 	 24 [cc] 155 156
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 157 158 163 169 263 264
;; live  gen 	 24 [cc] 155 156
;; live  kill	 24 [cc]
;; rd  in  	(27)
27, 47, 63, 79, 80, 95, 96, 111, 282, 283, 287, 288, 1724, 1725, 1726, 1727, 1728, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1810, 1811
;; rd  gen 	(3)
282, 1724, 1725
;; rd  kill	(2)
1724, 1725
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 157 158 163 169 263 264
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 157 158 163 169 263 264
;; rd  out 	(26)
27, 47, 63, 79, 80, 95, 96, 111, 282, 287, 288, 1724, 1725, 1726, 1727, 1728, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1810, 1811
;;  UD chains for artificial uses
;;   reg 11 { d80(bb 0 insn -1) }
;;   reg 13 { d96(bb 0 insn -1) }
;;   reg 25 { d287(bb 0 insn -1) }
;;   reg 26 { d288(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 50
;;      reg 157 { d1727(bb 7 insn 38) d1726(bb 12 insn 60) }
;;      reg 158 { d1728(bb 9 insn 43) }
;;      reg 263 { d1810(bb 7 insn 46) }
;;      reg 263 { d1810(bb 7 insn 46) }
;;      reg 264 { d1811(bb 7 insn 48) }
;;   UD chains for insn luid 1 uid 52
;;      reg 156 { d1725(bb 10 insn 50) }
;;   UD chains for insn luid 2 uid 53
;;      reg 24 { d282(bb 10 insn 52) }

( 10 )->[11]->( 12 38 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u64(11){ d80(bb 0 insn -1) }u65(13){ d96(bb 0 insn -1) }u66(25){ d287(bb 0 insn -1) }u67(26){ d288(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 157 163 169 263 264
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 155 157
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 157 163 169 263 264
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(26)
27, 47, 63, 79, 80, 95, 96, 111, 282, 287, 288, 1724, 1725, 1726, 1727, 1728, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1810, 1811
;; rd  gen 	(1)
243
;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 163 169 263 264
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 163 169 263 264
;; rd  out 	(26)
27, 47, 63, 79, 80, 95, 96, 111, 243, 287, 288, 1724, 1725, 1726, 1727, 1728, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1810, 1811
;;  UD chains for artificial uses
;;   reg 11 { d80(bb 0 insn -1) }
;;   reg 13 { d96(bb 0 insn -1) }
;;   reg 25 { d287(bb 0 insn -1) }
;;   reg 26 { d288(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 57
;;      reg 155 { d1724(bb 10 insn 50) }
;;      reg 157 { d1727(bb 7 insn 38) d1726(bb 12 insn 60) }
;;   UD chains for insn luid 2 uid 58
;;      reg 24 { d243(bb 11 insn 57) }

( 11 )->[12]->( 8 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u71(11){ d80(bb 0 insn -1) }u72(13){ d96(bb 0 insn -1) }u73(25){ d287(bb 0 insn -1) }u74(26){ d288(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 163 169 263 264
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 155
;; lr  def 	 157
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 163 169 263 264
;; live  gen 	 157
;; live  kill	
;; rd  in  	(26)
27, 47, 63, 79, 80, 95, 96, 111, 243, 287, 288, 1724, 1725, 1726, 1727, 1728, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1810, 1811
;; rd  gen 	(1)
1726
;; rd  kill	(2)
1726, 1727
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 157 163 169 263 264
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 157 163 169 263 264
;; rd  out 	(25)
27, 47, 63, 79, 80, 95, 96, 111, 243, 287, 288, 1724, 1725, 1726, 1728, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1810, 1811
;;  UD chains for artificial uses
;;   reg 11 { d80(bb 0 insn -1) }
;;   reg 13 { d96(bb 0 insn -1) }
;;   reg 25 { d287(bb 0 insn -1) }
;;   reg 26 { d288(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 60
;;      reg 155 { d1724(bb 10 insn 50) }

( 8 )->[13]->( 14 36 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u76(11){ d80(bb 0 insn -1) }u77(13){ d96(bb 0 insn -1) }u78(25){ d287(bb 0 insn -1) }u79(26){ d288(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157 163 169
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 169
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 161
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157 163 169
;; live  gen 	 0 [r0] 24 [cc] 161
;; live  kill	 14 [lr]
;; rd  in  	(26)
27, 47, 63, 79, 80, 95, 96, 111, 283, 287, 288, 1724, 1725, 1726, 1727, 1728, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1810, 1811
;; rd  gen 	(2)
280, 1747
;; rd  kill	(16)
97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 1747
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157 163
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157 163
;; rd  out 	(26)
27, 47, 63, 79, 80, 95, 96, 280, 287, 288, 1724, 1725, 1726, 1727, 1728, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1810, 1811
;;  UD chains for artificial uses
;;   reg 11 { d80(bb 0 insn -1) }
;;   reg 13 { d96(bb 0 insn -1) }
;;   reg 25 { d287(bb 0 insn -1) }
;;   reg 26 { d288(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 69
;;      reg 13 { d96(bb 0 insn -1) }
;;      reg 0 { d7(bb 13 insn 68) }
;;   UD chains for insn luid 2 uid 70
;;      reg 169 { d1753(bb 5 insn 24) }
;;   UD chains for insn luid 3 uid 71
;;      reg 161 { d1747(bb 13 insn 70) }
;;   UD chains for insn luid 4 uid 72
;;      reg 24 { d280(bb 13 insn 71) }

( 13 )->[14]->( 15 17 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u85(11){ d80(bb 0 insn -1) }u86(13){ d96(bb 0 insn -1) }u87(25){ d287(bb 0 insn -1) }u88(26){ d288(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157 163
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 149 179
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157 163
;; live  gen 	 0 [r0] 24 [cc] 149 179
;; live  kill	 14 [lr]
;; rd  in  	(26)
27, 47, 63, 79, 80, 95, 96, 280, 287, 288, 1724, 1725, 1726, 1727, 1728, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1810, 1811
;; rd  gen 	(4)
25, 278, 1717, 1756
;; rd  kill	(45)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 1717, 1756
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157 163 179
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157 163 179
;; rd  out 	(28)
25, 47, 63, 79, 80, 95, 96, 278, 287, 288, 1717, 1724, 1725, 1726, 1727, 1728, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1810, 1811
;;  UD chains for artificial uses
;;   reg 11 { d80(bb 0 insn -1) }
;;   reg 13 { d96(bb 0 insn -1) }
;;   reg 25 { d287(bb 0 insn -1) }
;;   reg 26 { d288(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 74
;;      reg 157 { d1727(bb 7 insn 38) d1726(bb 12 insn 60) }
;;   UD chains for insn luid 1 uid 75
;;      reg 13 { d96(bb 0 insn -1) }
;;      reg 0 { d1(bb 14 insn 74) }
;;   UD chains for insn luid 2 uid 76
;;      reg 0 { d25(bb 14 insn 75) }
;;   UD chains for insn luid 4 uid 78
;;      reg 149 { d1717(bb 14 insn 76) }
;;      reg 179 { d1756(bb 14 insn 77) }
;;   UD chains for insn luid 5 uid 79
;;      reg 149 { d1717(bb 14 insn 76) }
;;   UD chains for insn luid 6 uid 80
;;      reg 24 { d278(bb 14 insn 79) }

( 14 )->[15]->( 16 37 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u97(11){ d80(bb 0 insn -1) }u98(13){ d96(bb 0 insn -1) }u99(25){ d287(bb 0 insn -1) }u100(26){ d288(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163 179
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 179
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 160
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163 179
;; live  gen 	 0 [r0] 24 [cc] 160
;; live  kill	 14 [lr]
;; rd  in  	(28)
25, 47, 63, 79, 80, 95, 96, 278, 287, 288, 1717, 1724, 1725, 1726, 1727, 1728, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1810, 1811
;; rd  gen 	(3)
24, 276, 1729
;; rd  kill	(61)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 163
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 163
;; rd  out 	(29)
24, 47, 63, 79, 80, 95, 96, 276, 287, 288, 1717, 1724, 1725, 1726, 1727, 1728, 1729, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1810, 1811
;;  UD chains for artificial uses
;;   reg 11 { d80(bb 0 insn -1) }
;;   reg 13 { d96(bb 0 insn -1) }
;;   reg 25 { d287(bb 0 insn -1) }
;;   reg 26 { d288(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 84
;;      reg 13 { d96(bb 0 insn -1) }
;;      reg 0 { d6(bb 15 insn 83) }
;;   UD chains for insn luid 2 uid 86
;;      reg 179 { d1756(bb 14 insn 77) }
;;   UD chains for insn luid 3 uid 87
;;      reg 160 { d1729(bb 15 insn 86) }
;;   UD chains for insn luid 4 uid 88
;;      reg 24 { d276(bb 15 insn 87) }

( 15 )->[16]->( 36 )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(11){ d80(bb 0 insn -1) }u-1(13){ d96(bb 0 insn -1) }u-1(25){ d287(bb 0 insn -1) }u-1(26){ d288(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163
;; live  gen 	
;; live  kill	
;; rd  in  	(29)
24, 47, 63, 79, 80, 95, 96, 276, 287, 288, 1717, 1724, 1725, 1726, 1727, 1728, 1729, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1810, 1811
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163
;; rd  out 	(29)
24, 47, 63, 79, 80, 95, 96, 276, 287, 288, 1717, 1724, 1725, 1726, 1727, 1728, 1729, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1810, 1811
;;  UD chains for artificial uses
;;   reg 11 { d80(bb 0 insn -1) }
;;   reg 13 { d96(bb 0 insn -1) }
;;   reg 25 { d287(bb 0 insn -1) }
;;   reg 26 { d288(bb 0 insn -1) }

( 14 )->[17]->( 18 20 )
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u106(11){ d80(bb 0 insn -1) }u107(13){ d96(bb 0 insn -1) }u108(25){ d287(bb 0 insn -1) }u109(26){ d288(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157 163 179
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157 179
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 138 151
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157 163 179
;; live  gen 	 0 [r0] 24 [cc] 138 151
;; live  kill	 14 [lr]
;; rd  in  	(28)
25, 47, 63, 79, 80, 95, 96, 278, 287, 288, 1717, 1724, 1725, 1726, 1727, 1728, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1810, 1811
;; rd  gen 	(4)
23, 274, 1707, 1718
;; rd  kill	(45)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 1707, 1718
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 151 163
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 151 163
;; rd  out 	(30)
23, 47, 63, 79, 80, 95, 96, 274, 287, 288, 1707, 1717, 1718, 1724, 1725, 1726, 1727, 1728, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1810, 1811
;;  UD chains for artificial uses
;;   reg 11 { d80(bb 0 insn -1) }
;;   reg 13 { d96(bb 0 insn -1) }
;;   reg 25 { d287(bb 0 insn -1) }
;;   reg 26 { d288(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 94
;;      reg 157 { d1727(bb 7 insn 38) d1726(bb 12 insn 60) }
;;   UD chains for insn luid 1 uid 95
;;      reg 13 { d96(bb 0 insn -1) }
;;      reg 0 { d0(bb 17 insn 94) }
;;   UD chains for insn luid 2 uid 97
;;      reg 179 { d1756(bb 14 insn 77) }
;;   UD chains for insn luid 3 uid 98
;;      reg 138 { d1707(bb 17 insn 97) }
;;   UD chains for insn luid 4 uid 99
;;      reg 151 { d1718(bb 17 insn 98) }
;;   UD chains for insn luid 5 uid 100
;;      reg 24 { d274(bb 17 insn 99) }

( 17 )->[18]->( 19 20 )
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u117(11){ d80(bb 0 insn -1) }u118(13){ d96(bb 0 insn -1) }u119(25){ d287(bb 0 insn -1) }u120(26){ d288(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 151 163
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151
;; lr  def 	 24 [cc] 183
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 151 163
;; live  gen 	 24 [cc] 183
;; live  kill	
;; rd  in  	(30)
23, 47, 63, 79, 80, 95, 96, 274, 287, 288, 1707, 1717, 1718, 1724, 1725, 1726, 1727, 1728, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1810, 1811
;; rd  gen 	(2)
273, 1757
;; rd  kill	(1)
1757
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 163
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 163
;; rd  out 	(31)
23, 47, 63, 79, 80, 95, 96, 273, 287, 288, 1707, 1717, 1718, 1724, 1725, 1726, 1727, 1728, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1810, 1811
;;  UD chains for artificial uses
;;   reg 11 { d80(bb 0 insn -1) }
;;   reg 13 { d96(bb 0 insn -1) }
;;   reg 25 { d287(bb 0 insn -1) }
;;   reg 26 { d288(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 102
;;      reg 151 { d1718(bb 17 insn 98) }
;;   UD chains for insn luid 1 uid 103
;;      reg 183 { d1757(bb 18 insn 102) }
;;   UD chains for insn luid 2 uid 104
;;      reg 24 { d273(bb 18 insn 103) }

( 18 )->[19]->( 21 )
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u124(11){ d80(bb 0 insn -1) }u125(13){ d96(bb 0 insn -1) }u126(25){ d287(bb 0 insn -1) }u127(26){ d288(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 163
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 152
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 163
;; live  gen 	 152
;; live  kill	
;; rd  in  	(31)
23, 47, 63, 79, 80, 95, 96, 273, 287, 288, 1707, 1717, 1718, 1724, 1725, 1726, 1727, 1728, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1810, 1811
;; rd  gen 	(1)
1720
;; rd  kill	(2)
1719, 1720
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 152 163
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 152 163
;; rd  out 	(32)
23, 47, 63, 79, 80, 95, 96, 273, 287, 288, 1707, 1717, 1718, 1720, 1724, 1725, 1726, 1727, 1728, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1810, 1811
;;  UD chains for artificial uses
;;   reg 11 { d80(bb 0 insn -1) }
;;   reg 13 { d96(bb 0 insn -1) }
;;   reg 25 { d287(bb 0 insn -1) }
;;   reg 26 { d288(bb 0 insn -1) }

( 17 18 )->[20]->( 21 )
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u128(11){ d80(bb 0 insn -1) }u129(13){ d96(bb 0 insn -1) }u130(25){ d287(bb 0 insn -1) }u131(26){ d288(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 163
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 152 184 185
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 163
;; live  gen 	 152 184 185
;; live  kill	
;; rd  in  	(32)
23, 47, 63, 79, 80, 95, 96, 273, 274, 287, 288, 1707, 1717, 1718, 1724, 1725, 1726, 1727, 1728, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1810, 1811
;; rd  gen 	(3)
1719, 1758, 1759
;; rd  kill	(4)
1719, 1720, 1758, 1759
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 152 163
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 152 163
;; rd  out 	(35)
23, 47, 63, 79, 80, 95, 96, 273, 274, 287, 288, 1707, 1717, 1718, 1719, 1724, 1725, 1726, 1727, 1728, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1810, 1811
;;  UD chains for artificial uses
;;   reg 11 { d80(bb 0 insn -1) }
;;   reg 13 { d96(bb 0 insn -1) }
;;   reg 25 { d287(bb 0 insn -1) }
;;   reg 26 { d288(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 112
;;      reg 184 { d1758(bb 20 insn 111) }
;;   UD chains for insn luid 2 uid 113
;;      reg 185 { d1759(bb 20 insn 112) }

( 20 19 )->[21]->( 23 22 )
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u134(11){ d80(bb 0 insn -1) }u135(13){ d96(bb 0 insn -1) }u136(25){ d287(bb 0 insn -1) }u137(26){ d288(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 152 163
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 24 [cc] 186
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 152 163
;; live  gen 	 24 [cc] 186
;; live  kill	
;; rd  in  	(36)
23, 47, 63, 79, 80, 95, 96, 273, 274, 287, 288, 1707, 1717, 1718, 1719, 1720, 1724, 1725, 1726, 1727, 1728, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1810, 1811
;; rd  gen 	(2)
272, 1760
;; rd  kill	(1)
1760
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 163
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 163
;; rd  out 	(36)
23, 47, 63, 79, 80, 95, 96, 272, 287, 288, 1707, 1717, 1718, 1719, 1720, 1724, 1725, 1726, 1727, 1728, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1810, 1811
;;  UD chains for artificial uses
;;   reg 11 { d80(bb 0 insn -1) }
;;   reg 13 { d96(bb 0 insn -1) }
;;   reg 25 { d287(bb 0 insn -1) }
;;   reg 26 { d288(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 116
;;      reg 138 { d1707(bb 17 insn 97) }
;;   UD chains for insn luid 1 uid 117
;;      reg 186 { d1760(bb 21 insn 116) }
;;   UD chains for insn luid 2 uid 118
;;      reg 24 { d272(bb 21 insn 117) }

( 21 )->[22]->( 28 )
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u141(11){ d80(bb 0 insn -1) }u142(13){ d96(bb 0 insn -1) }u143(25){ d287(bb 0 insn -1) }u144(26){ d288(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 163
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 153 160 257 258 259
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 163
;; live  gen 	 153 160 257 258 259
;; live  kill	
;; rd  in  	(36)
23, 47, 63, 79, 80, 95, 96, 272, 287, 288, 1707, 1717, 1718, 1719, 1720, 1724, 1725, 1726, 1727, 1728, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1810, 1811
;; rd  gen 	(5)
1722, 1744, 1807, 1808, 1809
;; rd  kill	(23)
1721, 1722, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1807, 1808, 1809
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 153 160 163 257 258 259
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 153 160 163 257 258 259
;; rd  out 	(41)
23, 47, 63, 79, 80, 95, 96, 272, 287, 288, 1707, 1717, 1718, 1719, 1720, 1722, 1724, 1725, 1726, 1727, 1728, 1744, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1807, 1808, 1809, 1810, 1811
;;  UD chains for artificial uses
;;   reg 11 { d80(bb 0 insn -1) }
;;   reg 13 { d96(bb 0 insn -1) }
;;   reg 25 { d287(bb 0 insn -1) }
;;   reg 26 { d288(bb 0 insn -1) }
;;   UD chains for insn luid 4 uid 142
;;      reg 153 { d1722(bb 22 insn 121) }

( 21 )->[23]->( 37 )
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u146(11){ d80(bb 0 insn -1) }u147(13){ d96(bb 0 insn -1) }u148(25){ d287(bb 0 insn -1) }u149(26){ d288(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 160
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163
;; live  gen 	 0 [r0] 160
;; live  kill	 14 [lr]
;; rd  in  	(36)
23, 47, 63, 79, 80, 95, 96, 272, 287, 288, 1707, 1717, 1718, 1719, 1720, 1724, 1725, 1726, 1727, 1728, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1810, 1811
;; rd  gen 	(2)
22, 1743
;; rd  kill	(61)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 163
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 163
;; rd  out 	(37)
22, 47, 63, 79, 80, 95, 96, 272, 287, 288, 1707, 1717, 1718, 1719, 1720, 1724, 1725, 1726, 1727, 1728, 1743, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1810, 1811
;;  UD chains for artificial uses
;;   reg 11 { d80(bb 0 insn -1) }
;;   reg 13 { d96(bb 0 insn -1) }
;;   reg 25 { d287(bb 0 insn -1) }
;;   reg 26 { d288(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 128
;;      reg 13 { d96(bb 0 insn -1) }
;;      reg 0 { d5(bb 23 insn 127) }

( 28 )->[24]->( 27 25 )
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u152(11){ d80(bb 0 insn -1) }u153(13){ d96(bb 0 insn -1) }u154(25){ d287(bb 0 insn -1) }u155(26){ d288(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 152 153 160 163 257 258 259
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 153
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 154
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 152 153 160 163 257 258 259
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 154
;; live  kill	 14 [lr]
;; rd  in  	(48)
19, 20, 23, 47, 63, 79, 80, 95, 96, 242, 287, 288, 1706, 1707, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1742, 1744, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1807, 1808, 1809, 1810, 1811
;; rd  gen 	(3)
20, 269, 1723
;; rd  kill	(44)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 1723
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 153 154 160 163 257 258 259
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 153 154 160 163 257 258 259
;; rd  out 	(46)
20, 47, 63, 79, 80, 95, 96, 269, 287, 288, 1706, 1707, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1742, 1744, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1807, 1808, 1809, 1810, 1811
;;  UD chains for artificial uses
;;   reg 11 { d80(bb 0 insn -1) }
;;   reg 13 { d96(bb 0 insn -1) }
;;   reg 25 { d287(bb 0 insn -1) }
;;   reg 26 { d288(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 133
;;      reg 137 { d1706(bb 28 insn 166) }
;;   UD chains for insn luid 1 uid 134
;;      reg 153 { d1722(bb 22 insn 121) d1721(bb 27 insn 161) }
;;   UD chains for insn luid 2 uid 135
;;      reg 13 { d96(bb 0 insn -1) }
;;      reg 0 { d21(bb 24 insn 133) }
;;      reg 1 { d29(bb 24 insn 134) }
;;   UD chains for insn luid 3 uid 136
;;      reg 0 { d20(bb 24 insn 135) }
;;   UD chains for insn luid 4 uid 137
;;      reg 154 { d1723(bb 24 insn 136) }
;;   UD chains for insn luid 5 uid 138
;;      reg 24 { d269(bb 24 insn 137) }

( 24 )->[25]->( 26 27 )
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u164(11){ d80(bb 0 insn -1) }u165(13){ d96(bb 0 insn -1) }u166(25){ d287(bb 0 insn -1) }u167(26){ d288(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 153 154 163 257 258 259
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 258 259
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 160
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 153 154 163 257 258 259
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc] 160
;; live  kill	 14 [lr]
;; rd  in  	(46)
20, 47, 63, 79, 80, 95, 96, 269, 287, 288, 1706, 1707, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1742, 1744, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1807, 1808, 1809, 1810, 1811
;; rd  gen 	(3)
19, 267, 1742
;; rd  kill	(61)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 153 154 160 163 257 258 259
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 153 154 160 163 257 258 259
;; rd  out 	(45)
19, 47, 63, 79, 80, 95, 96, 267, 287, 288, 1706, 1707, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1742, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1807, 1808, 1809, 1810, 1811
;;  UD chains for artificial uses
;;   reg 11 { d80(bb 0 insn -1) }
;;   reg 13 { d96(bb 0 insn -1) }
;;   reg 25 { d287(bb 0 insn -1) }
;;   reg 26 { d288(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 141
;;      reg 13 { d96(bb 0 insn -1) }
;;      reg 258 { d1808(bb 22 insn 140) }
;;   UD chains for insn luid 1 uid 143
;;      reg 13 { d96(bb 0 insn -1) }
;;      reg 259 { d1809(bb 22 insn 142) }
;;   UD chains for insn luid 2 uid 145
;;      reg 152 { d1720(bb 19 insn 106) d1719(bb 20 insn 113) }
;;   UD chains for insn luid 3 uid 146
;;      reg 259 { d1809(bb 22 insn 142) }
;;   UD chains for insn luid 5 uid 148
;;      reg 13 { d96(bb 0 insn -1) }
;;      reg 0 { d20(bb 24 insn 135) }
;;      reg 1 { d40(bb 25 insn 145) }
;;      reg 2 { d48(bb 25 insn 146) }
;;      reg 3 { d64(bb 25 insn 410) }
;;   UD chains for insn luid 6 uid 149
;;      reg 0 { d19(bb 25 insn 148) }
;;   UD chains for insn luid 7 uid 150
;;      reg 160 { d1742(bb 25 insn 149) }
;;   UD chains for insn luid 8 uid 151
;;      reg 24 { d267(bb 25 insn 150) }

( 25 )->[26]->( 30 )
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u182(11){ d80(bb 0 insn -1) }u183(13){ d96(bb 0 insn -1) }u184(25){ d287(bb 0 insn -1) }u185(26){ d288(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153 154 160 163
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153 154 160 163
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]
;; rd  in  	(45)
19, 47, 63, 79, 80, 95, 96, 267, 287, 288, 1706, 1707, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1742, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1807, 1808, 1809, 1810, 1811
;; rd  gen 	(1)
18
;; rd  kill	(43)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153 160 163
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153 160 163
;; rd  out 	(45)
18, 47, 63, 79, 80, 95, 96, 267, 287, 288, 1706, 1707, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1742, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1807, 1808, 1809, 1810, 1811
;;  UD chains for artificial uses
;;   reg 11 { d80(bb 0 insn -1) }
;;   reg 13 { d96(bb 0 insn -1) }
;;   reg 25 { d287(bb 0 insn -1) }
;;   reg 26 { d288(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 155
;;      reg 154 { d1723(bb 24 insn 136) }
;;   UD chains for insn luid 2 uid 156
;;      reg 13 { d96(bb 0 insn -1) }
;;      reg 0 { d4(bb 26 insn 154) }
;;      reg 1 { d38(bb 26 insn 155) }

( 24 25 )->[27]->( 28 )
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u190(11){ d80(bb 0 insn -1) }u191(13){ d96(bb 0 insn -1) }u192(25){ d287(bb 0 insn -1) }u193(26){ d288(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 153 160 163 257 258 259
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153
;; lr  def 	 153
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 153 160 163 257 258 259
;; live  gen 	 153
;; live  kill	
;; rd  in  	(48)
19, 20, 47, 63, 79, 80, 95, 96, 267, 269, 287, 288, 1706, 1707, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1742, 1744, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1807, 1808, 1809, 1810, 1811
;; rd  gen 	(1)
1721
;; rd  kill	(2)
1721, 1722
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 153 160 163 257 258 259
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 153 160 163 257 258 259
;; rd  out 	(47)
19, 20, 47, 63, 79, 80, 95, 96, 267, 269, 287, 288, 1706, 1707, 1717, 1718, 1719, 1720, 1721, 1723, 1724, 1725, 1726, 1727, 1728, 1742, 1744, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1807, 1808, 1809, 1810, 1811
;;  UD chains for artificial uses
;;   reg 11 { d80(bb 0 insn -1) }
;;   reg 13 { d96(bb 0 insn -1) }
;;   reg 25 { d287(bb 0 insn -1) }
;;   reg 26 { d288(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 161
;;      reg 153 { d1722(bb 22 insn 121) d1721(bb 27 insn 161) }

( 27 22 )->[28]->( 24 29 )
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u195(11){ d80(bb 0 insn -1) }u196(13){ d96(bb 0 insn -1) }u197(25){ d287(bb 0 insn -1) }u198(26){ d288(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 153 160 163 257 258 259
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153 257
;; lr  def 	 24 [cc] 137 192
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 153 160 163 257 258 259
;; live  gen 	 24 [cc] 137 192
;; live  kill	
;; rd  in  	(50)
19, 20, 23, 47, 63, 79, 80, 95, 96, 267, 269, 272, 287, 288, 1706, 1707, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1742, 1744, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1807, 1808, 1809, 1810, 1811
;; rd  gen 	(3)
242, 1706, 1761
;; rd  kill	(2)
1706, 1761
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 152 153 160 163 257 258 259
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 152 153 160 163 257 258 259
;; rd  out 	(48)
19, 20, 23, 47, 63, 79, 80, 95, 96, 242, 287, 288, 1706, 1707, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1742, 1744, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1807, 1808, 1809, 1810, 1811
;;  UD chains for artificial uses
;;   reg 11 { d80(bb 0 insn -1) }
;;   reg 13 { d96(bb 0 insn -1) }
;;   reg 25 { d287(bb 0 insn -1) }
;;   reg 26 { d288(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 166
;;      reg 257 { d1807(bb 22 insn 165) }
;;   UD chains for insn luid 1 uid 168
;;      reg 137 { d1706(bb 28 insn 166) }
;;   UD chains for insn luid 2 uid 169
;;      reg 153 { d1722(bb 22 insn 121) d1721(bb 27 insn 161) }
;;      reg 192 { d1761(bb 28 insn 168) }
;;   UD chains for insn luid 3 uid 170
;;      reg 24 { d242(bb 28 insn 169) }

( 28 )->[29]->( 30 36 )
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u204(11){ d80(bb 0 insn -1) }u205(13){ d96(bb 0 insn -1) }u206(25){ d287(bb 0 insn -1) }u207(26){ d288(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153 160 163
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153 160 163
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(48)
19, 20, 23, 47, 63, 79, 80, 95, 96, 242, 287, 288, 1706, 1707, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1742, 1744, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1807, 1808, 1809, 1810, 1811
;; rd  gen 	(1)
241
;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153 160 163
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153 160 163
;; rd  out 	(48)
19, 20, 23, 47, 63, 79, 80, 95, 96, 241, 287, 288, 1706, 1707, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1742, 1744, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1807, 1808, 1809, 1810, 1811
;;  UD chains for artificial uses
;;   reg 11 { d80(bb 0 insn -1) }
;;   reg 13 { d96(bb 0 insn -1) }
;;   reg 25 { d287(bb 0 insn -1) }
;;   reg 26 { d288(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 173
;;      reg 160 { d1744(bb 22 insn 120) d1742(bb 25 insn 149) }
;;   UD chains for insn luid 1 uid 174
;;      reg 24 { d241(bb 29 insn 173) }

( 29 26 )->[30]->( 34 )
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u210(11){ d80(bb 0 insn -1) }u211(13){ d96(bb 0 insn -1) }u212(25){ d287(bb 0 insn -1) }u213(26){ d288(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153 160 163
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153
;; lr  def 	 135 255
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153 160 163
;; live  gen 	 135 255
;; live  kill	
;; rd  in  	(50)
18, 19, 20, 23, 47, 63, 79, 80, 95, 96, 241, 267, 287, 288, 1706, 1707, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1742, 1744, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1807, 1808, 1809, 1810, 1811
;; rd  gen 	(2)
1705, 1806
;; rd  kill	(3)
1704, 1705, 1806
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 160 163 255
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 160 163 255
;; rd  out 	(52)
18, 19, 20, 23, 47, 63, 79, 80, 95, 96, 241, 267, 287, 288, 1705, 1706, 1707, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1742, 1744, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1806, 1807, 1808, 1809, 1810, 1811
;;  UD chains for artificial uses
;;   reg 11 { d80(bb 0 insn -1) }
;;   reg 13 { d96(bb 0 insn -1) }
;;   reg 25 { d287(bb 0 insn -1) }
;;   reg 26 { d288(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 177
;;      reg 153 { d1722(bb 22 insn 121) d1721(bb 27 insn 161) }

( 34 )->[31]->( 32 33 )
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u215(11){ d80(bb 0 insn -1) }u216(13){ d96(bb 0 insn -1) }u217(25){ d287(bb 0 insn -1) }u218(26){ d288(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 160 163 255
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 255
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 160 163 255
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 134
;; live  kill	 14 [lr]
;; rd  in  	(55)
17, 18, 19, 20, 23, 47, 63, 79, 80, 95, 96, 262, 287, 288, 1703, 1704, 1705, 1706, 1707, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1742, 1744, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1805, 1806, 1807, 1808, 1809, 1810, 1811
;; rd  gen 	(3)
17, 264, 1703
;; rd  kill	(44)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 1703
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 160 163 255
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 160 163 255
;; rd  out 	(51)
17, 47, 63, 79, 80, 95, 96, 264, 287, 288, 1703, 1704, 1705, 1706, 1707, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1742, 1744, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1805, 1806, 1807, 1808, 1809, 1810, 1811
;;  UD chains for artificial uses
;;   reg 11 { d80(bb 0 insn -1) }
;;   reg 13 { d96(bb 0 insn -1) }
;;   reg 25 { d287(bb 0 insn -1) }
;;   reg 26 { d288(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 182
;;      reg 255 { d1806(bb 30 insn 401) }
;;   UD chains for insn luid 1 uid 183
;;      reg 135 { d1705(bb 30 insn 177) d1704(bb 33 insn 194) }
;;   UD chains for insn luid 2 uid 184
;;      reg 13 { d96(bb 0 insn -1) }
;;      reg 0 { d2(bb 31 insn 182) }
;;      reg 1 { d36(bb 31 insn 183) }
;;   UD chains for insn luid 3 uid 185
;;      reg 0 { d17(bb 31 insn 184) }
;;   UD chains for insn luid 4 uid 186
;;      reg 134 { d1703(bb 31 insn 185) }
;;   UD chains for insn luid 5 uid 187
;;      reg 24 { d264(bb 31 insn 186) }

( 31 )->[32]->( 33 )
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u227(11){ d80(bb 0 insn -1) }u228(13){ d96(bb 0 insn -1) }u229(25){ d287(bb 0 insn -1) }u230(26){ d288(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 160 163 255
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 160 163 255
;; live  gen 	 1 [r1]
;; live  kill	 14 [lr]
;; rd  in  	(51)
17, 47, 63, 79, 80, 95, 96, 264, 287, 288, 1703, 1704, 1705, 1706, 1707, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1742, 1744, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1805, 1806, 1807, 1808, 1809, 1810, 1811
;; rd  gen 	(0)

;; rd  kill	(15)
97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 160 163 255
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 160 163 255
;; rd  out 	(51)
17, 47, 63, 79, 80, 95, 96, 264, 287, 288, 1703, 1704, 1705, 1706, 1707, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1742, 1744, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1805, 1806, 1807, 1808, 1809, 1810, 1811
;;  UD chains for artificial uses
;;   reg 11 { d80(bb 0 insn -1) }
;;   reg 13 { d96(bb 0 insn -1) }
;;   reg 25 { d287(bb 0 insn -1) }
;;   reg 26 { d288(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 191
;;      reg 13 { d96(bb 0 insn -1) }
;;      reg 0 { d17(bb 31 insn 184) }
;;      reg 1 { d28(bb 32 insn 406) }

( 31 32 )->[33]->( 34 )
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u234(11){ d80(bb 0 insn -1) }u235(13){ d96(bb 0 insn -1) }u236(25){ d287(bb 0 insn -1) }u237(26){ d288(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 160 163 255
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 135
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 160 163 255
;; live  gen 	 135
;; live  kill	
;; rd  in  	(51)
17, 47, 63, 79, 80, 95, 96, 264, 287, 288, 1703, 1704, 1705, 1706, 1707, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1742, 1744, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1805, 1806, 1807, 1808, 1809, 1810, 1811
;; rd  gen 	(1)
1704
;; rd  kill	(2)
1704, 1705
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 160 163 255
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 160 163 255
;; rd  out 	(50)
17, 47, 63, 79, 80, 95, 96, 264, 287, 288, 1703, 1704, 1706, 1707, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1742, 1744, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1805, 1806, 1807, 1808, 1809, 1810, 1811
;;  UD chains for artificial uses
;;   reg 11 { d80(bb 0 insn -1) }
;;   reg 13 { d96(bb 0 insn -1) }
;;   reg 25 { d287(bb 0 insn -1) }
;;   reg 26 { d288(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 194
;;      reg 135 { d1705(bb 30 insn 177) d1704(bb 33 insn 194) }

( 33 30 )->[34]->( 31 35 )
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u239(11){ d80(bb 0 insn -1) }u240(13){ d96(bb 0 insn -1) }u241(25){ d287(bb 0 insn -1) }u242(26){ d288(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 160 163 255
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc] 254
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 160 163 255
;; live  gen 	 24 [cc] 254
;; live  kill	
;; rd  in  	(57)
17, 18, 19, 20, 23, 47, 63, 79, 80, 95, 96, 241, 264, 267, 287, 288, 1703, 1704, 1705, 1706, 1707, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1742, 1744, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1805, 1806, 1807, 1808, 1809, 1810, 1811
;; rd  gen 	(2)
262, 1805
;; rd  kill	(1)
1805
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 160 163 254 255
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 160 163 254 255
;; rd  out 	(55)
17, 18, 19, 20, 23, 47, 63, 79, 80, 95, 96, 262, 287, 288, 1703, 1704, 1705, 1706, 1707, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1742, 1744, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1805, 1806, 1807, 1808, 1809, 1810, 1811
;;  UD chains for artificial uses
;;   reg 11 { d80(bb 0 insn -1) }
;;   reg 13 { d96(bb 0 insn -1) }
;;   reg 25 { d287(bb 0 insn -1) }
;;   reg 26 { d288(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 198
;;      reg 135 { d1705(bb 30 insn 177) d1704(bb 33 insn 194) }
;;   UD chains for insn luid 2 uid 199
;;      reg 24 { d262(bb 34 insn 198) }

( 34 )->[35]->( 37 )
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u245(11){ d80(bb 0 insn -1) }u246(13){ d96(bb 0 insn -1) }u247(25){ d287(bb 0 insn -1) }u248(26){ d288(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 163 254
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 254
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 195
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 163 254
;; live  gen 	 0 [r0] 195
;; live  kill	 14 [lr]
;; rd  in  	(55)
17, 18, 19, 20, 23, 47, 63, 79, 80, 95, 96, 262, 287, 288, 1703, 1704, 1705, 1706, 1707, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1742, 1744, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1805, 1806, 1807, 1808, 1809, 1810, 1811
;; rd  gen 	(2)
14, 1762
;; rd  kill	(44)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 1762
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 163
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 163
;; rd  out 	(52)
14, 47, 63, 79, 80, 95, 96, 262, 287, 288, 1703, 1704, 1705, 1706, 1707, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1742, 1744, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1805, 1806, 1807, 1808, 1809, 1810, 1811
;;  UD chains for artificial uses
;;   reg 11 { d80(bb 0 insn -1) }
;;   reg 13 { d96(bb 0 insn -1) }
;;   reg 25 { d287(bb 0 insn -1) }
;;   reg 26 { d288(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 202
;;      reg 13 { d96(bb 0 insn -1) }
;;      reg 0 { d15(bb 35 insn 201) }
;;   UD chains for insn luid 3 uid 205
;;      reg 195 { d1762(bb 35 insn 204) }
;;      reg 254 { d1805(bb 34 insn 405) }

( 29 13 16 )->[36]->( 37 )
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u253(11){ d80(bb 0 insn -1) }u254(13){ d96(bb 0 insn -1) }u255(25){ d287(bb 0 insn -1) }u256(26){ d288(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 147 148 160 196 198
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163
;; live  gen 	 147 148 160 196 198
;; live  kill	 24 [cc]
;; rd  in  	(53)
19, 20, 23, 24, 27, 47, 63, 79, 80, 95, 96, 241, 276, 280, 287, 288, 1706, 1707, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1742, 1744, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1807, 1808, 1809, 1810, 1811
;; rd  gen 	(5)
1715, 1716, 1741, 1763, 1764
;; rd  kill	(22)
1715, 1716, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1763, 1764
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 163
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 163
;; rd  out 	(52)
19, 20, 23, 24, 27, 47, 63, 79, 80, 95, 96, 287, 288, 1706, 1707, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1741, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1763, 1764, 1807, 1808, 1809, 1810, 1811
;;  UD chains for artificial uses
;;   reg 11 { d80(bb 0 insn -1) }
;;   reg 13 { d96(bb 0 insn -1) }
;;   reg 25 { d287(bb 0 insn -1) }
;;   reg 26 { d288(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 212
;;      reg 196 { d1763(bb 36 insn 210) }
;;   UD chains for insn luid 2 uid 214
;;      reg 196 { d1763(bb 36 insn 210) }
;;      reg 196 { d1763(bb 36 insn 210) }
;;      reg 198 { d1764(bb 36 insn 212) }

( 15 36 23 35 )->[37]->( 61 38 )
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u261(11){ d80(bb 0 insn -1) }u262(13){ d96(bb 0 insn -1) }u263(25){ d287(bb 0 insn -1) }u264(26){ d288(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 163
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 163
;; live  gen 	 0 [r0] 24 [cc]
;; live  kill	 14 [lr]
;; rd  in  	(67)
14, 19, 20, 22, 23, 24, 27, 47, 63, 79, 80, 95, 96, 262, 272, 276, 287, 288, 1703, 1704, 1705, 1706, 1707, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1741, 1742, 1743, 1744, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1805, 1806, 1807, 1808, 1809, 1810, 1811
;; rd  gen 	(1)
259
;; rd  kill	(15)
97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 160 163
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 163
;; rd  out 	(65)
14, 19, 20, 22, 23, 24, 27, 47, 63, 79, 80, 95, 96, 259, 287, 288, 1703, 1704, 1705, 1706, 1707, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1741, 1742, 1743, 1744, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1805, 1806, 1807, 1808, 1809, 1810, 1811
;;  UD chains for artificial uses
;;   reg 11 { d80(bb 0 insn -1) }
;;   reg 13 { d96(bb 0 insn -1) }
;;   reg 25 { d287(bb 0 insn -1) }
;;   reg 26 { d288(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 221
;;      reg 13 { d96(bb 0 insn -1) }
;;      reg 0 { d3(bb 37 insn 220) }
;;   UD chains for insn luid 2 uid 222
;;      reg 160 { d1744(bb 22 insn 120) d1743(bb 23 insn 129) d1742(bb 25 insn 149) d1741(bb 36 insn 215) d1729(bb 15 insn 86) }
;;   UD chains for insn luid 3 uid 223
;;      reg 24 { d259(bb 37 insn 222) }

( 37 11 )->[38]->( 39 41 )
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u269(11){ d80(bb 0 insn -1) }u270(13){ d96(bb 0 insn -1) }u271(25){ d287(bb 0 insn -1) }u272(26){ d288(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 163
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163
;; lr  def 	 24 [cc] 140
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 163
;; live  gen 	 24 [cc] 140
;; live  kill	
;; rd  in  	(67)
14, 19, 20, 22, 23, 24, 27, 47, 63, 79, 80, 95, 96, 111, 243, 259, 287, 288, 1703, 1704, 1705, 1706, 1707, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1741, 1742, 1743, 1744, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1805, 1806, 1807, 1808, 1809, 1810, 1811
;; rd  gen 	(2)
258, 1708
;; rd  kill	(1)
1708
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 163
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 163
;; rd  out 	(67)
14, 19, 20, 22, 23, 24, 27, 47, 63, 79, 80, 95, 96, 111, 258, 287, 288, 1703, 1704, 1705, 1706, 1707, 1708, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1741, 1742, 1743, 1744, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1805, 1806, 1807, 1808, 1809, 1810, 1811
;;  UD chains for artificial uses
;;   reg 11 { d80(bb 0 insn -1) }
;;   reg 13 { d96(bb 0 insn -1) }
;;   reg 25 { d287(bb 0 insn -1) }
;;   reg 26 { d288(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 226
;;      reg 163 { d1748(bb 2 insn 2) }
;;   UD chains for insn luid 1 uid 227
;;      reg 140 { d1708(bb 38 insn 226) }
;;   UD chains for insn luid 2 uid 228
;;      reg 24 { d258(bb 38 insn 227) }

( 38 )->[39]->( 51 40 )
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u276(11){ d80(bb 0 insn -1) }u277(13){ d96(bb 0 insn -1) }u278(25){ d287(bb 0 insn -1) }u279(26){ d288(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 163
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163
;; lr  def 	 24 [cc] 160 202 203 204 205 206
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 163
;; live  gen 	 24 [cc] 160 202 203 204 205 206
;; live  kill	
;; rd  in  	(67)
14, 19, 20, 22, 23, 24, 27, 47, 63, 79, 80, 95, 96, 111, 258, 287, 288, 1703, 1704, 1705, 1706, 1707, 1708, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1741, 1742, 1743, 1744, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1805, 1806, 1807, 1808, 1809, 1810, 1811
;; rd  gen 	(7)
257, 1740, 1765, 1766, 1767, 1768, 1769
;; rd  kill	(23)
1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1765, 1766, 1767, 1768, 1769
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 160 163
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 160 163
;; rd  out 	(68)
14, 19, 20, 22, 23, 24, 27, 47, 63, 79, 80, 95, 96, 111, 257, 287, 288, 1703, 1704, 1705, 1706, 1707, 1708, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1740, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1805, 1806, 1807, 1808, 1809, 1810, 1811
;;  UD chains for artificial uses
;;   reg 11 { d80(bb 0 insn -1) }
;;   reg 13 { d96(bb 0 insn -1) }
;;   reg 25 { d287(bb 0 insn -1) }
;;   reg 26 { d288(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 231
;;      reg 202 { d1765(bb 39 insn 230) }
;;   UD chains for insn luid 2 uid 232
;;      reg 203 { d1766(bb 39 insn 231) }
;;   UD chains for insn luid 3 uid 233
;;      reg 163 { d1748(bb 2 insn 2) }
;;   UD chains for insn luid 4 uid 234
;;      reg 204 { d1767(bb 39 insn 232) }
;;      reg 205 { d1768(bb 39 insn 233) }
;;   UD chains for insn luid 6 uid 236
;;      reg 160 { d1740(bb 39 insn 234) }
;;      reg 206 { d1769(bb 39 insn 235) }
;;   eq_note reg 160 { }
;;   UD chains for insn luid 7 uid 237
;;      reg 24 { d257(bb 39 insn 236) }

( 39 )->[40]->( 62 )
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u-1(11){ d80(bb 0 insn -1) }u-1(13){ d96(bb 0 insn -1) }u-1(25){ d287(bb 0 insn -1) }u-1(26){ d288(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163
;; live  gen 	
;; live  kill	
;; rd  in  	(68)
14, 19, 20, 22, 23, 24, 27, 47, 63, 79, 80, 95, 96, 111, 257, 287, 288, 1703, 1704, 1705, 1706, 1707, 1708, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1740, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1805, 1806, 1807, 1808, 1809, 1810, 1811
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163
;; rd  out 	(68)
14, 19, 20, 22, 23, 24, 27, 47, 63, 79, 80, 95, 96, 111, 257, 287, 288, 1703, 1704, 1705, 1706, 1707, 1708, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1740, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1805, 1806, 1807, 1808, 1809, 1810, 1811
;;  UD chains for artificial uses
;;   reg 11 { d80(bb 0 insn -1) }
;;   reg 13 { d96(bb 0 insn -1) }
;;   reg 25 { d287(bb 0 insn -1) }
;;   reg 26 { d288(bb 0 insn -1) }

( 38 )->[41]->( 42 48 )
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u289(11){ d80(bb 0 insn -1) }u290(13){ d96(bb 0 insn -1) }u291(25){ d287(bb 0 insn -1) }u292(26){ d288(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 163
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 163
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(67)
14, 19, 20, 22, 23, 24, 27, 47, 63, 79, 80, 95, 96, 111, 258, 287, 288, 1703, 1704, 1705, 1706, 1707, 1708, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1741, 1742, 1743, 1744, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1805, 1806, 1807, 1808, 1809, 1810, 1811
;; rd  gen 	(1)
256
;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 163
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 163
;; rd  out 	(67)
14, 19, 20, 22, 23, 24, 27, 47, 63, 79, 80, 95, 96, 111, 256, 287, 288, 1703, 1704, 1705, 1706, 1707, 1708, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1741, 1742, 1743, 1744, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1805, 1806, 1807, 1808, 1809, 1810, 1811
;;  UD chains for artificial uses
;;   reg 11 { d80(bb 0 insn -1) }
;;   reg 13 { d96(bb 0 insn -1) }
;;   reg 25 { d287(bb 0 insn -1) }
;;   reg 26 { d288(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 243
;;      reg 140 { d1708(bb 38 insn 226) }
;;   UD chains for insn luid 1 uid 244
;;      reg 24 { d256(bb 41 insn 243) }

( 41 )->[42]->( 63 43 )
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u295(11){ d80(bb 0 insn -1) }u296(13){ d96(bb 0 insn -1) }u297(25){ d287(bb 0 insn -1) }u298(26){ d288(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 163
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163
;; lr  def 	 24 [cc] 145 248 249
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 163
;; live  gen 	 24 [cc] 145 248 249
;; live  kill	
;; rd  in  	(67)
14, 19, 20, 22, 23, 24, 27, 47, 63, 79, 80, 95, 96, 111, 256, 287, 288, 1703, 1704, 1705, 1706, 1707, 1708, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1741, 1742, 1743, 1744, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1805, 1806, 1807, 1808, 1809, 1810, 1811
;; rd  gen 	(4)
255, 1713, 1799, 1800
;; rd  kill	(3)
1713, 1799, 1800
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 145 163 248 249
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 145 163 248 249
;; rd  out 	(70)
14, 19, 20, 22, 23, 24, 27, 47, 63, 79, 80, 95, 96, 111, 255, 287, 288, 1703, 1704, 1705, 1706, 1707, 1708, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1741, 1742, 1743, 1744, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1799, 1800, 1805, 1806, 1807, 1808, 1809, 1810, 1811
;;  UD chains for artificial uses
;;   reg 11 { d80(bb 0 insn -1) }
;;   reg 13 { d96(bb 0 insn -1) }
;;   reg 25 { d287(bb 0 insn -1) }
;;   reg 26 { d288(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 398
;;      reg 163 { d1748(bb 2 insn 2) }
;;   UD chains for insn luid 1 uid 399
;;      reg 163 { d1748(bb 2 insn 2) }
;;   UD chains for insn luid 2 uid 247
;;      reg 248 { d1799(bb 42 insn 398) }
;;   UD chains for insn luid 3 uid 248
;;      reg 145 { d1713(bb 42 insn 247) }
;;   UD chains for insn luid 4 uid 249
;;      reg 24 { d255(bb 42 insn 248) }

( 42 )->[43]->( 63 44 )
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u304(11){ d80(bb 0 insn -1) }u305(13){ d96(bb 0 insn -1) }u306(25){ d287(bb 0 insn -1) }u307(26){ d288(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 145 163 248 249
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 248 249
;; lr  def 	 24 [cc] 144 209 250
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 145 163 248 249
;; live  gen 	 24 [cc] 144 209 250
;; live  kill	
;; rd  in  	(70)
14, 19, 20, 22, 23, 24, 27, 47, 63, 79, 80, 95, 96, 111, 255, 287, 288, 1703, 1704, 1705, 1706, 1707, 1708, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1741, 1742, 1743, 1744, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1799, 1800, 1805, 1806, 1807, 1808, 1809, 1810, 1811
;; rd  gen 	(4)
254, 1712, 1770, 1801
;; rd  kill	(4)
1712, 1770, 1801, 1802
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 144 145 163 248 249
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 144 145 163 248 249
;; rd  out 	(73)
14, 19, 20, 22, 23, 24, 27, 47, 63, 79, 80, 95, 96, 111, 254, 287, 288, 1703, 1704, 1705, 1706, 1707, 1708, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1741, 1742, 1743, 1744, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1770, 1799, 1800, 1801, 1805, 1806, 1807, 1808, 1809, 1810, 1811
;;  UD chains for artificial uses
;;   reg 11 { d80(bb 0 insn -1) }
;;   reg 13 { d96(bb 0 insn -1) }
;;   reg 25 { d287(bb 0 insn -1) }
;;   reg 26 { d288(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 251
;;      reg 249 { d1800(bb 42 insn 399) }
;;   UD chains for insn luid 1 uid 252
;;      reg 248 { d1799(bb 42 insn 398) }
;;   UD chains for insn luid 2 uid 253
;;      reg 209 { d1770(bb 43 insn 251) }
;;      reg 250 { d1802(bb 43 insn 252) }
;;   UD chains for insn luid 3 uid 255
;;      reg 250 { d1801(bb 43 insn 253) }
;;   UD chains for insn luid 4 uid 256
;;      reg 144 { d1712(bb 43 insn 255) }
;;   UD chains for insn luid 5 uid 257
;;      reg 24 { d254(bb 43 insn 256) }

( 43 )->[44]->( 63 45 )
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u315(11){ d80(bb 0 insn -1) }u316(13){ d96(bb 0 insn -1) }u317(25){ d287(bb 0 insn -1) }u318(26){ d288(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 144 145 163 248 249
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 248 249
;; lr  def 	 24 [cc] 143 212 252
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 144 145 163 248 249
;; live  gen 	 24 [cc] 143 212 252
;; live  kill	
;; rd  in  	(73)
14, 19, 20, 22, 23, 24, 27, 47, 63, 79, 80, 95, 96, 111, 254, 287, 288, 1703, 1704, 1705, 1706, 1707, 1708, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1741, 1742, 1743, 1744, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1770, 1799, 1800, 1801, 1805, 1806, 1807, 1808, 1809, 1810, 1811
;; rd  gen 	(4)
253, 1711, 1771, 1803
;; rd  kill	(4)
1711, 1771, 1803, 1804
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 143 144 145 163
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 143 144 145 163
;; rd  out 	(76)
14, 19, 20, 22, 23, 24, 27, 47, 63, 79, 80, 95, 96, 111, 253, 287, 288, 1703, 1704, 1705, 1706, 1707, 1708, 1711, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1741, 1742, 1743, 1744, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1770, 1771, 1799, 1800, 1801, 1803, 1805, 1806, 1807, 1808, 1809, 1810, 1811
;;  UD chains for artificial uses
;;   reg 11 { d80(bb 0 insn -1) }
;;   reg 13 { d96(bb 0 insn -1) }
;;   reg 25 { d287(bb 0 insn -1) }
;;   reg 26 { d288(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 259
;;      reg 249 { d1800(bb 42 insn 399) }
;;   UD chains for insn luid 1 uid 260
;;      reg 248 { d1799(bb 42 insn 398) }
;;   UD chains for insn luid 2 uid 261
;;      reg 212 { d1771(bb 44 insn 259) }
;;      reg 252 { d1804(bb 44 insn 260) }
;;   UD chains for insn luid 3 uid 263
;;      reg 252 { d1803(bb 44 insn 261) }
;;   UD chains for insn luid 4 uid 264
;;      reg 143 { d1711(bb 44 insn 263) }
;;   UD chains for insn luid 5 uid 265
;;      reg 24 { d253(bb 44 insn 264) }

( 44 )->[45]->( 46 47 )
;; bb 45 artificial_defs: { }
;; bb 45 artificial_uses: { u326(11){ d80(bb 0 insn -1) }u327(13){ d96(bb 0 insn -1) }u328(25){ d287(bb 0 insn -1) }u329(26){ d288(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 143 144 145 163
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 143 144 145
;; lr  def 	 24 [cc] 142 213 214 215 216 218 219 220 221
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 143 144 145 163
;; live  gen 	 24 [cc] 142 213 214 215 216 218 219 220 221
;; live  kill	
;; rd  in  	(76)
14, 19, 20, 22, 23, 24, 27, 47, 63, 79, 80, 95, 96, 111, 253, 287, 288, 1703, 1704, 1705, 1706, 1707, 1708, 1711, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1741, 1742, 1743, 1744, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1770, 1771, 1799, 1800, 1801, 1803, 1805, 1806, 1807, 1808, 1809, 1810, 1811
;; rd  gen 	(10)
252, 1710, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779
;; rd  kill	(9)
1710, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 163
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 163
;; rd  out 	(85)
14, 19, 20, 22, 23, 24, 27, 47, 63, 79, 80, 95, 96, 111, 252, 287, 288, 1703, 1704, 1705, 1706, 1707, 1708, 1710, 1711, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1741, 1742, 1743, 1744, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1799, 1800, 1801, 1803, 1805, 1806, 1807, 1808, 1809, 1810, 1811
;;  UD chains for artificial uses
;;   reg 11 { d80(bb 0 insn -1) }
;;   reg 13 { d96(bb 0 insn -1) }
;;   reg 25 { d287(bb 0 insn -1) }
;;   reg 26 { d288(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 268
;;      reg 213 { d1772(bb 45 insn 267) }
;;   UD chains for insn luid 2 uid 269
;;      reg 214 { d1773(bb 45 insn 268) }
;;   UD chains for insn luid 3 uid 271
;;      reg 140 { d1708(bb 38 insn 226) }
;;      reg 145 { d1713(bb 42 insn 247) }
;;   eq_note reg 145 { }
;;   UD chains for insn luid 4 uid 272
;;      reg 144 { d1712(bb 43 insn 255) }
;;      reg 216 { d1775(bb 45 insn 271) }
;;   UD chains for insn luid 5 uid 273
;;      reg 218 { d1776(bb 45 insn 272) }
;;   UD chains for insn luid 6 uid 274
;;      reg 143 { d1711(bb 44 insn 263) }
;;      reg 219 { d1777(bb 45 insn 273) }
;;   UD chains for insn luid 7 uid 275
;;      reg 215 { d1774(bb 45 insn 269) }
;;      reg 220 { d1778(bb 45 insn 274) }
;;   UD chains for insn luid 9 uid 277
;;      reg 142 { d1710(bb 45 insn 275) }
;;      reg 221 { d1779(bb 45 insn 276) }
;;   eq_note reg 142 { }
;;   UD chains for insn luid 10 uid 278
;;      reg 24 { d252(bb 45 insn 277) }

( 45 )->[46]->( 60 )
;; bb 46 artificial_defs: { }
;; bb 46 artificial_uses: { u346(11){ d80(bb 0 insn -1) }u347(13){ d96(bb 0 insn -1) }u348(25){ d287(bb 0 insn -1) }u349(26){ d288(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 160
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163
;; live  gen 	 160
;; live  kill	
;; rd  in  	(85)
14, 19, 20, 22, 23, 24, 27, 47, 63, 79, 80, 95, 96, 111, 252, 287, 288, 1703, 1704, 1705, 1706, 1707, 1708, 1710, 1711, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1741, 1742, 1743, 1744, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1799, 1800, 1801, 1803, 1805, 1806, 1807, 1808, 1809, 1810, 1811
;; rd  gen 	(1)
1739
;; rd  kill	(18)
1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 163
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 163
;; rd  out 	(81)
14, 19, 20, 22, 23, 24, 27, 47, 63, 79, 80, 95, 96, 111, 252, 287, 288, 1703, 1704, 1705, 1706, 1707, 1708, 1710, 1711, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1739, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1799, 1800, 1801, 1803, 1805, 1806, 1807, 1808, 1809, 1810, 1811
;;  UD chains for artificial uses
;;   reg 11 { d80(bb 0 insn -1) }
;;   reg 13 { d96(bb 0 insn -1) }
;;   reg 25 { d287(bb 0 insn -1) }
;;   reg 26 { d288(bb 0 insn -1) }

( 45 )->[47]->( 51 )
;; bb 47 artificial_defs: { }
;; bb 47 artificial_uses: { u350(11){ d80(bb 0 insn -1) }u351(13){ d96(bb 0 insn -1) }u352(25){ d287(bb 0 insn -1) }u353(26){ d288(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 163
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 160
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 163
;; live  gen 	 160
;; live  kill	
;; rd  in  	(85)
14, 19, 20, 22, 23, 24, 27, 47, 63, 79, 80, 95, 96, 111, 252, 287, 288, 1703, 1704, 1705, 1706, 1707, 1708, 1710, 1711, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1741, 1742, 1743, 1744, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1799, 1800, 1801, 1803, 1805, 1806, 1807, 1808, 1809, 1810, 1811
;; rd  gen 	(1)
1738
;; rd  kill	(18)
1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 160 163
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 160 163
;; rd  out 	(81)
14, 19, 20, 22, 23, 24, 27, 47, 63, 79, 80, 95, 96, 111, 252, 287, 288, 1703, 1704, 1705, 1706, 1707, 1708, 1710, 1711, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1738, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1799, 1800, 1801, 1803, 1805, 1806, 1807, 1808, 1809, 1810, 1811
;;  UD chains for artificial uses
;;   reg 11 { d80(bb 0 insn -1) }
;;   reg 13 { d96(bb 0 insn -1) }
;;   reg 25 { d287(bb 0 insn -1) }
;;   reg 26 { d288(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 285
;;      reg 142 { d1710(bb 45 insn 275) }

( 41 )->[48]->( 50 49 )
;; bb 48 artificial_defs: { }
;; bb 48 artificial_uses: { u355(11){ d80(bb 0 insn -1) }u356(13){ d96(bb 0 insn -1) }u357(25){ d287(bb 0 insn -1) }u358(26){ d288(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 163
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 163
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(67)
14, 19, 20, 22, 23, 24, 27, 47, 63, 79, 80, 95, 96, 111, 256, 287, 288, 1703, 1704, 1705, 1706, 1707, 1708, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1741, 1742, 1743, 1744, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1805, 1806, 1807, 1808, 1809, 1810, 1811
;; rd  gen 	(1)
251
;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 163
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 163
;; rd  out 	(67)
14, 19, 20, 22, 23, 24, 27, 47, 63, 79, 80, 95, 96, 111, 251, 287, 288, 1703, 1704, 1705, 1706, 1707, 1708, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1741, 1742, 1743, 1744, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1805, 1806, 1807, 1808, 1809, 1810, 1811
;;  UD chains for artificial uses
;;   reg 11 { d80(bb 0 insn -1) }
;;   reg 13 { d96(bb 0 insn -1) }
;;   reg 25 { d287(bb 0 insn -1) }
;;   reg 26 { d288(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 290
;;      reg 140 { d1708(bb 38 insn 226) }
;;   UD chains for insn luid 1 uid 291
;;      reg 24 { d251(bb 48 insn 290) }

( 48 )->[49]->( 60 )
;; bb 49 artificial_defs: { }
;; bb 49 artificial_uses: { u361(11){ d80(bb 0 insn -1) }u362(13){ d96(bb 0 insn -1) }u363(25){ d287(bb 0 insn -1) }u364(26){ d288(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 160
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163
;; live  gen 	 160
;; live  kill	
;; rd  in  	(67)
14, 19, 20, 22, 23, 24, 27, 47, 63, 79, 80, 95, 96, 111, 251, 287, 288, 1703, 1704, 1705, 1706, 1707, 1708, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1741, 1742, 1743, 1744, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1805, 1806, 1807, 1808, 1809, 1810, 1811
;; rd  gen 	(1)
1737
;; rd  kill	(18)
1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 163
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 163
;; rd  out 	(63)
14, 19, 20, 22, 23, 24, 27, 47, 63, 79, 80, 95, 96, 111, 251, 287, 288, 1703, 1704, 1705, 1706, 1707, 1708, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1737, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1805, 1806, 1807, 1808, 1809, 1810, 1811
;;  UD chains for artificial uses
;;   reg 11 { d80(bb 0 insn -1) }
;;   reg 13 { d96(bb 0 insn -1) }
;;   reg 25 { d287(bb 0 insn -1) }
;;   reg 26 { d288(bb 0 insn -1) }

( 48 )->[50]->( 51 )
;; bb 50 artificial_defs: { }
;; bb 50 artificial_uses: { u365(11){ d80(bb 0 insn -1) }u366(13){ d96(bb 0 insn -1) }u367(25){ d287(bb 0 insn -1) }u368(26){ d288(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 163
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163
;; lr  def 	 160 222 223 224 225
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 163
;; live  gen 	 160 222 223 224 225
;; live  kill	
;; rd  in  	(67)
14, 19, 20, 22, 23, 24, 27, 47, 63, 79, 80, 95, 96, 111, 251, 287, 288, 1703, 1704, 1705, 1706, 1707, 1708, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1741, 1742, 1743, 1744, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1805, 1806, 1807, 1808, 1809, 1810, 1811
;; rd  gen 	(5)
1736, 1780, 1781, 1782, 1783
;; rd  kill	(22)
1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1780, 1781, 1782, 1783
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 160 163
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 160 163
;; rd  out 	(67)
14, 19, 20, 22, 23, 24, 27, 47, 63, 79, 80, 95, 96, 111, 251, 287, 288, 1703, 1704, 1705, 1706, 1707, 1708, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1736, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1780, 1781, 1782, 1783, 1805, 1806, 1807, 1808, 1809, 1810, 1811
;;  UD chains for artificial uses
;;   reg 11 { d80(bb 0 insn -1) }
;;   reg 13 { d96(bb 0 insn -1) }
;;   reg 25 { d287(bb 0 insn -1) }
;;   reg 26 { d288(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 299
;;      reg 222 { d1780(bb 50 insn 298) }
;;   UD chains for insn luid 2 uid 300
;;      reg 163 { d1748(bb 2 insn 2) }
;;   UD chains for insn luid 3 uid 301
;;      reg 223 { d1781(bb 50 insn 299) }
;;   UD chains for insn luid 4 uid 302
;;      reg 224 { d1782(bb 50 insn 300) }
;;      reg 225 { d1783(bb 50 insn 301) }

( 39 50 47 )->[51]->( 60 52 )
;; bb 51 artificial_defs: { }
;; bb 51 artificial_uses: { u374(11){ d80(bb 0 insn -1) }u375(13){ d96(bb 0 insn -1) }u376(25){ d287(bb 0 insn -1) }u377(26){ d288(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 160 163
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 160 163
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(94)
14, 19, 20, 22, 23, 24, 27, 47, 63, 79, 80, 95, 96, 111, 251, 252, 257, 287, 288, 1703, 1704, 1705, 1706, 1707, 1708, 1710, 1711, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1736, 1738, 1740, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1799, 1800, 1801, 1803, 1805, 1806, 1807, 1808, 1809, 1810, 1811
;; rd  gen 	(1)
250
;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 160 163
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 160 163
;; rd  out 	(92)
14, 19, 20, 22, 23, 24, 27, 47, 63, 79, 80, 95, 96, 111, 250, 287, 288, 1703, 1704, 1705, 1706, 1707, 1708, 1710, 1711, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1736, 1738, 1740, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1799, 1800, 1801, 1803, 1805, 1806, 1807, 1808, 1809, 1810, 1811
;;  UD chains for artificial uses
;;   reg 11 { d80(bb 0 insn -1) }
;;   reg 13 { d96(bb 0 insn -1) }
;;   reg 25 { d287(bb 0 insn -1) }
;;   reg 26 { d288(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 305
;;      reg 160 { d1740(bb 39 insn 234) d1738(bb 47 insn 285) d1736(bb 50 insn 302) }
;;   UD chains for insn luid 1 uid 306
;;      reg 24 { d250(bb 51 insn 305) }

( 51 )->[52]->( 53 54 )
;; bb 52 artificial_defs: { }
;; bb 52 artificial_uses: { u380(11){ d80(bb 0 insn -1) }u381(13){ d96(bb 0 insn -1) }u382(25){ d287(bb 0 insn -1) }u383(26){ d288(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 160 163
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163
;; lr  def 	 24 [cc] 227 228 229 230
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 160 163
;; live  gen 	 24 [cc] 227 228 229 230
;; live  kill	
;; rd  in  	(92)
14, 19, 20, 22, 23, 24, 27, 47, 63, 79, 80, 95, 96, 111, 250, 287, 288, 1703, 1704, 1705, 1706, 1707, 1708, 1710, 1711, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1736, 1738, 1740, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1799, 1800, 1801, 1803, 1805, 1806, 1807, 1808, 1809, 1810, 1811
;; rd  gen 	(5)
249, 1784, 1785, 1786, 1787
;; rd  kill	(4)
1784, 1785, 1786, 1787
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 160 163 230
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 160 163 230
;; rd  out 	(96)
14, 19, 20, 22, 23, 24, 27, 47, 63, 79, 80, 95, 96, 111, 249, 287, 288, 1703, 1704, 1705, 1706, 1707, 1708, 1710, 1711, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1736, 1738, 1740, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1799, 1800, 1801, 1803, 1805, 1806, 1807, 1808, 1809, 1810, 1811
;;  UD chains for artificial uses
;;   reg 11 { d80(bb 0 insn -1) }
;;   reg 13 { d96(bb 0 insn -1) }
;;   reg 25 { d287(bb 0 insn -1) }
;;   reg 26 { d288(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 308
;;      reg 163 { d1748(bb 2 insn 2) }
;;   UD chains for insn luid 1 uid 310
;;      reg 227 { d1784(bb 52 insn 308) }
;;   UD chains for insn luid 2 uid 311
;;      reg 228 { d1785(bb 52 insn 310) }
;;   UD chains for insn luid 3 uid 312
;;      reg 229 { d1786(bb 52 insn 311) }
;;   UD chains for insn luid 4 uid 313
;;      reg 230 { d1787(bb 52 insn 312) }
;;   UD chains for insn luid 5 uid 314
;;      reg 24 { d249(bb 52 insn 313) }

( 52 )->[53]->( 60 )
;; bb 53 artificial_defs: { }
;; bb 53 artificial_uses: { u390(11){ d80(bb 0 insn -1) }u391(13){ d96(bb 0 insn -1) }u392(25){ d287(bb 0 insn -1) }u393(26){ d288(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 160
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163
;; live  gen 	 160
;; live  kill	
;; rd  in  	(96)
14, 19, 20, 22, 23, 24, 27, 47, 63, 79, 80, 95, 96, 111, 249, 287, 288, 1703, 1704, 1705, 1706, 1707, 1708, 1710, 1711, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1736, 1738, 1740, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1799, 1800, 1801, 1803, 1805, 1806, 1807, 1808, 1809, 1810, 1811
;; rd  gen 	(1)
1735
;; rd  kill	(18)
1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 163
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 163
;; rd  out 	(94)
14, 19, 20, 22, 23, 24, 27, 47, 63, 79, 80, 95, 96, 111, 249, 287, 288, 1703, 1704, 1705, 1706, 1707, 1708, 1710, 1711, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1735, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1799, 1800, 1801, 1803, 1805, 1806, 1807, 1808, 1809, 1810, 1811
;;  UD chains for artificial uses
;;   reg 11 { d80(bb 0 insn -1) }
;;   reg 13 { d96(bb 0 insn -1) }
;;   reg 25 { d287(bb 0 insn -1) }
;;   reg 26 { d288(bb 0 insn -1) }

( 52 )->[54]->( 55 56 )
;; bb 54 artificial_defs: { }
;; bb 54 artificial_uses: { u394(11){ d80(bb 0 insn -1) }u395(13){ d96(bb 0 insn -1) }u396(25){ d287(bb 0 insn -1) }u397(26){ d288(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 160 163 230
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 163 230
;; lr  def 	 24 [cc] 231 232 234 235 239
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 160 163 230
;; live  gen 	 24 [cc] 231 232 234 235 239
;; live  kill	
;; rd  in  	(96)
14, 19, 20, 22, 23, 24, 27, 47, 63, 79, 80, 95, 96, 111, 249, 287, 288, 1703, 1704, 1705, 1706, 1707, 1708, 1710, 1711, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1736, 1738, 1740, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1799, 1800, 1801, 1803, 1805, 1806, 1807, 1808, 1809, 1810, 1811
;; rd  gen 	(6)
248, 1788, 1789, 1790, 1792, 1793
;; rd  kill	(6)
1788, 1789, 1790, 1791, 1792, 1793
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 163 234
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 163 234
;; rd  out 	(101)
14, 19, 20, 22, 23, 24, 27, 47, 63, 79, 80, 95, 96, 111, 248, 287, 288, 1703, 1704, 1705, 1706, 1707, 1708, 1710, 1711, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1736, 1738, 1740, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1792, 1793, 1799, 1800, 1801, 1803, 1805, 1806, 1807, 1808, 1809, 1810, 1811
;;  UD chains for artificial uses
;;   reg 11 { d80(bb 0 insn -1) }
;;   reg 13 { d96(bb 0 insn -1) }
;;   reg 25 { d287(bb 0 insn -1) }
;;   reg 26 { d288(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 322
;;      reg 163 { d1748(bb 2 insn 2) }
;;      reg 231 { d1788(bb 54 insn 321) }
;;   UD chains for insn luid 2 uid 323
;;      reg 160 { d1740(bb 39 insn 234) d1738(bb 47 insn 285) d1736(bb 50 insn 302) }
;;      reg 163 { d1748(bb 2 insn 2) }
;;   UD chains for insn luid 4 uid 325
;;      reg 163 { d1748(bb 2 insn 2) }
;;      reg 232 { d1789(bb 54 insn 324) }
;;   UD chains for insn luid 5 uid 327
;;      reg 163 { d1748(bb 2 insn 2) }
;;      reg 230 { d1787(bb 52 insn 312) }
;;   UD chains for insn luid 7 uid 329
;;      reg 163 { d1748(bb 2 insn 2) }
;;   UD chains for insn luid 8 uid 333
;;      reg 163 { d1748(bb 2 insn 2) }
;;   UD chains for insn luid 9 uid 334
;;      reg 235 { d1791(bb 54 insn 329) }
;;      reg 239 { d1793(bb 54 insn 333) }
;;   UD chains for insn luid 10 uid 335
;;      reg 235 { d1792(bb 54 insn 334) }
;;   UD chains for insn luid 11 uid 336
;;      reg 24 { d248(bb 54 insn 335) }

( 54 )->[55]->( 56 )
;; bb 55 artificial_defs: { }
;; bb 55 artificial_uses: { u412(11){ d80(bb 0 insn -1) }u413(13){ d96(bb 0 insn -1) }u414(25){ d287(bb 0 insn -1) }u415(26){ d288(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 163 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163 234
;; lr  def 	 24 [cc] 141 146 240 241 243 245
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 163 234
;; live  gen 	 141 146 240 241 243 245
;; live  kill	 24 [cc]
;; rd  in  	(101)
14, 19, 20, 22, 23, 24, 27, 47, 63, 79, 80, 95, 96, 111, 248, 287, 288, 1703, 1704, 1705, 1706, 1707, 1708, 1710, 1711, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1736, 1738, 1740, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1792, 1793, 1799, 1800, 1801, 1803, 1805, 1806, 1807, 1808, 1809, 1810, 1811
;; rd  gen 	(6)
1709, 1714, 1794, 1795, 1796, 1797
;; rd  kill	(6)
1709, 1714, 1794, 1795, 1796, 1797
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 163
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 163
;; rd  out 	(106)
14, 19, 20, 22, 23, 24, 27, 47, 63, 79, 80, 95, 96, 111, 287, 288, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1736, 1738, 1740, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1792, 1793, 1794, 1795, 1796, 1797, 1799, 1800, 1801, 1803, 1805, 1806, 1807, 1808, 1809, 1810, 1811
;;  UD chains for artificial uses
;;   reg 11 { d80(bb 0 insn -1) }
;;   reg 13 { d96(bb 0 insn -1) }
;;   reg 25 { d287(bb 0 insn -1) }
;;   reg 26 { d288(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 339
;;      reg 240 { d1794(bb 55 insn 338) }
;;   UD chains for insn luid 2 uid 340
;;      reg 241 { d1795(bb 55 insn 339) }
;;   UD chains for insn luid 3 uid 342
;;      reg 141 { d1709(bb 55 insn 340) }
;;      reg 163 { d1748(bb 2 insn 2) }
;;      reg 234 { d1790(bb 54 insn 328) }
;;   UD chains for insn luid 5 uid 344
;;      reg 141 { d1709(bb 55 insn 340) }
;;      reg 163 { d1748(bb 2 insn 2) }
;;      reg 243 { d1796(bb 55 insn 343) }
;;   UD chains for insn luid 6 uid 346
;;      reg 163 { d1748(bb 2 insn 2) }
;;   UD chains for insn luid 7 uid 347
;;      reg 141 { d1709(bb 55 insn 340) }
;;      reg 163 { d1748(bb 2 insn 2) }
;;      reg 245 { d1797(bb 55 insn 346) }

( 54 55 )->[56]->( 58 57 )
;; bb 56 artificial_defs: { }
;; bb 56 artificial_uses: { u428(11){ d80(bb 0 insn -1) }u429(13){ d96(bb 0 insn -1) }u430(25){ d287(bb 0 insn -1) }u431(26){ d288(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 163
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163
;; lr  def 	 24 [cc] 246
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 163
;; live  gen 	 24 [cc] 246
;; live  kill	
;; rd  in  	(107)
14, 19, 20, 22, 23, 24, 27, 47, 63, 79, 80, 95, 96, 111, 248, 287, 288, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1736, 1738, 1740, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1792, 1793, 1794, 1795, 1796, 1797, 1799, 1800, 1801, 1803, 1805, 1806, 1807, 1808, 1809, 1810, 1811
;; rd  gen 	(2)
247, 1798
;; rd  kill	(1)
1798
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 163
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 163
;; rd  out 	(108)
14, 19, 20, 22, 23, 24, 27, 47, 63, 79, 80, 95, 96, 111, 247, 287, 288, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1736, 1738, 1740, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1803, 1805, 1806, 1807, 1808, 1809, 1810, 1811
;;  UD chains for artificial uses
;;   reg 11 { d80(bb 0 insn -1) }
;;   reg 13 { d96(bb 0 insn -1) }
;;   reg 25 { d287(bb 0 insn -1) }
;;   reg 26 { d288(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 350
;;      reg 163 { d1748(bb 2 insn 2) }
;;   UD chains for insn luid 1 uid 351
;;      reg 163 { d1748(bb 2 insn 2) }
;;      reg 246 { d1798(bb 56 insn 350) }
;;   UD chains for insn luid 2 uid 352
;;      reg 24 { d247(bb 56 insn 351) }

( 56 )->[57]->( 61 )
;; bb 57 artificial_defs: { }
;; bb 57 artificial_uses: { u436(11){ d80(bb 0 insn -1) }u437(13){ d96(bb 0 insn -1) }u438(25){ d287(bb 0 insn -1) }u439(26){ d288(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 160
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 160
;; live  kill	
;; rd  in  	(108)
14, 19, 20, 22, 23, 24, 27, 47, 63, 79, 80, 95, 96, 111, 247, 287, 288, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1736, 1738, 1740, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1803, 1805, 1806, 1807, 1808, 1809, 1810, 1811
;; rd  gen 	(1)
1734
;; rd  kill	(18)
1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 160
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 160
;; rd  out 	(106)
14, 19, 20, 22, 23, 24, 27, 47, 63, 79, 80, 95, 96, 111, 247, 287, 288, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1734, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1803, 1805, 1806, 1807, 1808, 1809, 1810, 1811
;;  UD chains for artificial uses
;;   reg 11 { d80(bb 0 insn -1) }
;;   reg 13 { d96(bb 0 insn -1) }
;;   reg 25 { d287(bb 0 insn -1) }
;;   reg 26 { d288(bb 0 insn -1) }

( 56 )->[58]->( 59 61 )
;; bb 58 artificial_defs: { }
;; bb 58 artificial_uses: { u440(11){ d80(bb 0 insn -1) }u441(13){ d96(bb 0 insn -1) }u442(25){ d287(bb 0 insn -1) }u443(26){ d288(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 160
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163
;; live  gen 	 0 [r0] 24 [cc] 160
;; live  kill	 14 [lr]
;; rd  in  	(108)
14, 19, 20, 22, 23, 24, 27, 47, 63, 79, 80, 95, 96, 111, 247, 287, 288, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1736, 1738, 1740, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1803, 1805, 1806, 1807, 1808, 1809, 1810, 1811
;; rd  gen 	(3)
11, 245, 1733
;; rd  kill	(61)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 160 163
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 163
;; rd  out 	(99)
11, 47, 63, 79, 80, 95, 96, 245, 287, 288, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1733, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1803, 1805, 1806, 1807, 1808, 1809, 1810, 1811
;;  UD chains for artificial uses
;;   reg 11 { d80(bb 0 insn -1) }
;;   reg 13 { d96(bb 0 insn -1) }
;;   reg 25 { d287(bb 0 insn -1) }
;;   reg 26 { d288(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 359
;;      reg 163 { d1748(bb 2 insn 2) }
;;   UD chains for insn luid 1 uid 360
;;      reg 13 { d96(bb 0 insn -1) }
;;      reg 0 { d12(bb 58 insn 359) }
;;   UD chains for insn luid 2 uid 361
;;      reg 0 { d11(bb 58 insn 360) }
;;   UD chains for insn luid 3 uid 362
;;      reg 160 { d1733(bb 58 insn 361) }
;;   UD chains for insn luid 4 uid 363
;;      reg 24 { d245(bb 58 insn 362) }

( 58 )->[59]->( 60 )
;; bb 59 artificial_defs: { }
;; bb 59 artificial_uses: { u450(11){ d80(bb 0 insn -1) }u451(13){ d96(bb 0 insn -1) }u452(25){ d287(bb 0 insn -1) }u453(26){ d288(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 160
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163
;; live  gen 	 160
;; live  kill	
;; rd  in  	(99)
11, 47, 63, 79, 80, 95, 96, 245, 287, 288, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1733, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1803, 1805, 1806, 1807, 1808, 1809, 1810, 1811
;; rd  gen 	(1)
1732
;; rd  kill	(18)
1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 163
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 163
;; rd  out 	(99)
11, 47, 63, 79, 80, 95, 96, 245, 287, 288, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1732, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1803, 1805, 1806, 1807, 1808, 1809, 1810, 1811
;;  UD chains for artificial uses
;;   reg 11 { d80(bb 0 insn -1) }
;;   reg 13 { d96(bb 0 insn -1) }
;;   reg 25 { d287(bb 0 insn -1) }
;;   reg 26 { d288(bb 0 insn -1) }

( 46 53 49 59 51 62 63 )->[60]->( 61 )
;; bb 60 artificial_defs: { }
;; bb 60 artificial_uses: { u454(11){ d80(bb 0 insn -1) }u455(13){ d96(bb 0 insn -1) }u456(25){ d287(bb 0 insn -1) }u457(26){ d288(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 163
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 163
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]
;; rd  in  	(123)
11, 14, 19, 20, 22, 23, 24, 27, 47, 63, 79, 80, 95, 96, 111, 245, 249, 250, 251, 252, 253, 254, 255, 257, 287, 288, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1730, 1731, 1732, 1735, 1736, 1737, 1738, 1739, 1740, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1803, 1805, 1806, 1807, 1808, 1809, 1810, 1811
;; rd  gen 	(0)

;; rd  kill	(15)
97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 160
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160
;; rd  out 	(122)
11, 14, 19, 20, 22, 23, 24, 27, 47, 63, 79, 80, 95, 96, 245, 249, 250, 251, 252, 253, 254, 255, 257, 287, 288, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1730, 1731, 1732, 1735, 1736, 1737, 1738, 1739, 1740, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1803, 1805, 1806, 1807, 1808, 1809, 1810, 1811
;;  UD chains for artificial uses
;;   reg 11 { d80(bb 0 insn -1) }
;;   reg 13 { d96(bb 0 insn -1) }
;;   reg 25 { d287(bb 0 insn -1) }
;;   reg 26 { d288(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 368
;;      reg 163 { d1748(bb 2 insn 2) }
;;   UD chains for insn luid 1 uid 369
;;      reg 13 { d96(bb 0 insn -1) }
;;      reg 0 { d10(bb 60 insn 368) }

( 6 4 37 60 58 57 )->[61]->( 1 )
;; bb 61 artificial_defs: { }
;; bb 61 artificial_uses: { u461(11){ d80(bb 0 insn -1) }u462(13){ d96(bb 0 insn -1) }u463(25){ d287(bb 0 insn -1) }u464(26){ d288(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 160
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 160
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(137)
11, 14, 19, 20, 22, 23, 24, 27, 47, 63, 79, 80, 95, 96, 111, 245, 247, 249, 250, 251, 252, 253, 254, 255, 257, 259, 284, 285, 286, 287, 288, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1803, 1805, 1806, 1807, 1808, 1809, 1810, 1811
;; rd  gen 	(1)
8
;; rd  kill	(28)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(130)
8, 47, 63, 79, 80, 95, 96, 111, 245, 247, 249, 250, 251, 252, 253, 254, 255, 257, 259, 284, 285, 286, 287, 288, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1803, 1805, 1806, 1807, 1808, 1809, 1810, 1811
;;  UD chains for artificial uses
;;   reg 11 { d80(bb 0 insn -1) }
;;   reg 13 { d96(bb 0 insn -1) }
;;   reg 25 { d287(bb 0 insn -1) }
;;   reg 26 { d288(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 386
;;      reg 160 { d1746(bb 4 insn 19) d1745(bb 6 insn 29) d1744(bb 22 insn 120) d1743(bb 23 insn 129) d1742(bb 25 insn 149) d1741(bb 36 insn 215) d1740(bb 39 insn 234) d1739(bb 46 insn 280) d1738(bb 47 insn 285) d1737(bb 49 insn 293) d1736(bb 50 insn 302) d1735(bb 53 insn 316) d1734(bb 57 insn 354) d1733(bb 58 insn 361) d1732(bb 59 insn 365) d1731(bb 62 insn 377) d1730(bb 63 insn 382) d1729(bb 15 insn 86) }
;;   UD chains for insn luid 1 uid 392
;;      reg 0 { d8(bb 61 insn 386) }

( 40 )->[62]->( 60 )
;; bb 62 artificial_defs: { }
;; bb 62 artificial_uses: { u467(11){ d80(bb 0 insn -1) }u468(13){ d96(bb 0 insn -1) }u469(25){ d287(bb 0 insn -1) }u470(26){ d288(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 160
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163
;; live  gen 	 160
;; live  kill	
;; rd  in  	(68)
14, 19, 20, 22, 23, 24, 27, 47, 63, 79, 80, 95, 96, 111, 257, 287, 288, 1703, 1704, 1705, 1706, 1707, 1708, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1740, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1805, 1806, 1807, 1808, 1809, 1810, 1811
;; rd  gen 	(1)
1731
;; rd  kill	(18)
1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 163
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 163
;; rd  out 	(68)
14, 19, 20, 22, 23, 24, 27, 47, 63, 79, 80, 95, 96, 111, 257, 287, 288, 1703, 1704, 1705, 1706, 1707, 1708, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1731, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1805, 1806, 1807, 1808, 1809, 1810, 1811
;;  UD chains for artificial uses
;;   reg 11 { d80(bb 0 insn -1) }
;;   reg 13 { d96(bb 0 insn -1) }
;;   reg 25 { d287(bb 0 insn -1) }
;;   reg 26 { d288(bb 0 insn -1) }

( 43 44 42 )->[63]->( 60 )
;; bb 63 artificial_defs: { }
;; bb 63 artificial_uses: { u471(11){ d80(bb 0 insn -1) }u472(13){ d96(bb 0 insn -1) }u473(25){ d287(bb 0 insn -1) }u474(26){ d288(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 160
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163
;; live  gen 	 160
;; live  kill	
;; rd  in  	(78)
14, 19, 20, 22, 23, 24, 27, 47, 63, 79, 80, 95, 96, 111, 253, 254, 255, 287, 288, 1703, 1704, 1705, 1706, 1707, 1708, 1711, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1741, 1742, 1743, 1744, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1770, 1771, 1799, 1800, 1801, 1803, 1805, 1806, 1807, 1808, 1809, 1810, 1811
;; rd  gen 	(1)
1730
;; rd  kill	(18)
1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 163
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 163
;; rd  out 	(74)
14, 19, 20, 22, 23, 24, 27, 47, 63, 79, 80, 95, 96, 111, 253, 254, 255, 287, 288, 1703, 1704, 1705, 1706, 1707, 1708, 1711, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1730, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1770, 1771, 1799, 1800, 1801, 1803, 1805, 1806, 1807, 1808, 1809, 1810, 1811
;;  UD chains for artificial uses
;;   reg 11 { d80(bb 0 insn -1) }
;;   reg 13 { d96(bb 0 insn -1) }
;;   reg 25 { d287(bb 0 insn -1) }
;;   reg 26 { d288(bb 0 insn -1) }

( 61 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u475(0){ d8(bb 61 insn 386) }u476(11){ d80(bb 0 insn -1) }u477(13){ d96(bb 0 insn -1) }u478(14){ d111(bb 0 insn -1) }u479(25){ d287(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(130)
8, 47, 63, 79, 80, 95, 96, 111, 245, 247, 249, 250, 251, 252, 253, 254, 255, 257, 259, 284, 285, 286, 287, 288, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1803, 1805, 1806, 1807, 1808, 1809, 1810, 1811
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(130)
8, 47, 63, 79, 80, 95, 96, 111, 245, 247, 249, 250, 251, 252, 253, 254, 255, 257, 259, 284, 285, 286, 287, 288, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1803, 1805, 1806, 1807, 1808, 1809, 1810, 1811
;;  UD chains for artificial uses
;;   reg 0 { d8(bb 61 insn 386) }
;;   reg 11 { d80(bb 0 insn -1) }
;;   reg 13 { d96(bb 0 insn -1) }
;;   reg 14 { d111(bb 0 insn -1) }
;;   reg 25 { d287(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 8 to worklist
  Adding insn 14 to worklist
  Adding insn 417 to worklist
  Adding insn 27 to worklist
  Adding insn 419 to worklist
  Adding insn 38 to worklist
  Adding insn 35 to worklist
  Adding insn 41 to worklist
  Adding insn 44 to worklist
  Adding insn 53 to worklist
  Adding insn 50 to worklist
  Adding insn 58 to worklist
  Adding insn 55 to worklist
  Adding insn 421 to worklist
  Adding insn 72 to worklist
  Adding insn 70 to worklist
  Adding insn 69 to worklist
  Adding insn 80 to worklist
  Adding insn 78 to worklist
  Adding insn 75 to worklist
  Adding insn 88 to worklist
  Adding insn 84 to worklist
  Adding insn 424 to worklist
  Adding insn 100 to worklist
  Adding insn 95 to worklist
  Adding insn 104 to worklist
  Adding insn 426 to worklist
  Adding insn 118 to worklist
  Adding insn 428 to worklist
  Adding insn 430 to worklist
  Adding insn 128 to worklist
  Adding insn 138 to worklist
  Adding insn 135 to worklist
  Adding insn 151 to worklist
  Adding insn 148 to worklist
  Adding insn 143 to worklist
  Adding insn 141 to worklist
  Adding insn 432 to worklist
  Adding insn 156 to worklist
  Adding insn 170 to worklist
  Adding insn 174 to worklist
  Adding insn 434 to worklist
  Adding insn 187 to worklist
  Adding insn 184 to worklist
  Adding insn 191 to worklist
  Adding insn 199 to worklist
  Adding insn 436 to worklist
  Adding insn 205 to worklist
  Adding insn 202 to worklist
  Adding insn 214 to worklist
  Adding insn 223 to worklist
  Adding insn 221 to worklist
  Adding insn 228 to worklist
  Adding insn 237 to worklist
  Adding insn 440 to worklist
  Adding insn 244 to worklist
  Adding insn 249 to worklist
  Adding insn 257 to worklist
  Adding insn 265 to worklist
  Adding insn 278 to worklist
  Adding insn 442 to worklist
  Adding insn 444 to worklist
  Adding insn 291 to worklist
  Adding insn 446 to worklist
  Adding insn 306 to worklist
  Adding insn 314 to worklist
  Adding insn 448 to worklist
  Adding insn 336 to worklist
  Adding insn 327 to worklist
  Adding insn 325 to worklist
  Adding insn 323 to worklist
  Adding insn 322 to worklist
  Adding insn 347 to worklist
  Adding insn 344 to worklist
  Adding insn 342 to worklist
  Adding insn 352 to worklist
  Adding insn 450 to worklist
  Adding insn 363 to worklist
  Adding insn 360 to worklist
  Adding insn 369 to worklist
  Adding insn 392 to worklist
  Adding insn 452 to worklist
  Adding insn 454 to worklist
Finished finding needed instructions:
  Adding insn 386 to worklist
Processing use of (reg 160 [ err ]) in insn 386:
  Adding insn 19 to worklist
  Adding insn 29 to worklist
  Adding insn 120 to worklist
  Adding insn 129 to worklist
  Adding insn 149 to worklist
  Adding insn 215 to worklist
  Adding insn 234 to worklist
  Adding insn 280 to worklist
  Adding insn 285 to worklist
  Adding insn 293 to worklist
  Adding insn 302 to worklist
  Adding insn 316 to worklist
  Adding insn 354 to worklist
  Adding insn 361 to worklist
  Adding insn 365 to worklist
  Adding insn 377 to worklist
  Adding insn 382 to worklist
  Adding insn 86 to worklist
Processing use of (reg 179) in insn 86:
  Adding insn 77 to worklist
Processing use of (reg 0 r0) in insn 361:
Processing use of (reg 224 [ <variable>.attr.config ]) in insn 302:
  Adding insn 300 to worklist
Processing use of (reg 225 [ <variable>.raw_event_mask ]) in insn 302:
  Adding insn 301 to worklist
Processing use of (reg 223 [ armpmu ]) in insn 301:
  Adding insn 299 to worklist
Processing use of (reg 222) in insn 299:
  Adding insn 298 to worklist
Processing use of (reg 163 [ event ]) in insn 300:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 142 [ ret ]) in insn 285:
  Adding insn 275 to worklist
Processing use of (reg 215 [ <variable>.cache_map ]) in insn 275:
  Adding insn 269 to worklist
Processing use of (reg 220) in insn 275:
  Adding insn 274 to worklist
Processing use of (reg 143 [ cache_result ]) in insn 274:
  Adding insn 263 to worklist
Processing use of (reg 219) in insn 274:
  Adding insn 273 to worklist
Processing use of (reg 218) in insn 273:
  Adding insn 272 to worklist
Processing use of (reg 144 [ cache_op ]) in insn 272:
  Adding insn 255 to worklist
Processing use of (reg 216) in insn 272:
  Adding insn 271 to worklist
Processing use of (reg 140 [ D.26654 ]) in insn 271:
  Adding insn 226 to worklist
Processing use of (reg 145 [ cache_type ]) in insn 271:
  Adding insn 247 to worklist
Processing use of (reg 248 [ temp.969 ]) in insn 247:
  Adding insn 398 to worklist
Processing use of (reg 163 [ event ]) in insn 398:
Processing use of (reg 163 [ event ]) in insn 226:
Processing use of (reg 250) in insn 255:
  Adding insn 253 to worklist
Processing use of (reg 209) in insn 253:
  Adding insn 251 to worklist
Processing use of (reg 250) in insn 253:
  Adding insn 252 to worklist
Processing use of (reg 248 [ temp.969 ]) in insn 252:
Processing use of (reg 249 [ temp.969+4 ]) in insn 251:
  Adding insn 399 to worklist
Processing use of (reg 163 [ event ]) in insn 399:
Processing use of (reg 252) in insn 263:
  Adding insn 261 to worklist
Processing use of (reg 212) in insn 261:
  Adding insn 259 to worklist
Processing use of (reg 252) in insn 261:
  Adding insn 260 to worklist
Processing use of (reg 248 [ temp.969 ]) in insn 260:
Processing use of (reg 249 [ temp.969+4 ]) in insn 259:
Processing use of (reg 214 [ armpmu ]) in insn 269:
  Adding insn 268 to worklist
Processing use of (reg 213) in insn 268:
  Adding insn 267 to worklist
Processing use of (reg 204 [ <variable>.event_map ]) in insn 234:
  Adding insn 232 to worklist
Processing use of (reg 205 [ <variable>.attr.config ]) in insn 234:
  Adding insn 233 to worklist
Processing use of (reg 163 [ event ]) in insn 233:
Processing use of (reg 203 [ armpmu ]) in insn 232:
  Adding insn 231 to worklist
Processing use of (reg 202) in insn 231:
  Adding insn 230 to worklist
Processing use of (reg 0 r0) in insn 149:
Processing use of (reg 0 r0) in insn 392:
Processing use of (reg 13 sp) in insn 369:
Processing use of (reg 0 r0) in insn 369:
  Adding insn 368 to worklist
Processing use of (reg 163 [ event ]) in insn 368:
Processing use of (reg 13 sp) in insn 360:
Processing use of (reg 0 r0) in insn 360:
  Adding insn 359 to worklist
Processing use of (reg 163 [ event ]) in insn 359:
Processing use of (reg 24 cc) in insn 363:
  Adding insn 362 to worklist
Processing use of (reg 160 [ err ]) in insn 362:
Processing use of (reg 24 cc) in insn 352:
  Adding insn 351 to worklist
Processing use of (reg 163 [ event ]) in insn 351:
Processing use of (reg 246 [ <variable>.group_leader ]) in insn 351:
  Adding insn 350 to worklist
Processing use of (reg 163 [ event ]) in insn 350:
Processing use of (reg 141 [ D.26647 ]) in insn 342:
  Adding insn 340 to worklist
Processing use of (reg 163 [ event ]) in insn 342:
Processing use of (reg 234) in insn 342:
  Adding insn 328 to worklist
Processing use of (reg 241 [ armpmu ]) in insn 340:
  Adding insn 339 to worklist
Processing use of (reg 240) in insn 339:
  Adding insn 338 to worklist
Processing use of (reg 141 [ D.26647 ]) in insn 344:
Processing use of (reg 163 [ event ]) in insn 344:
Processing use of (reg 243) in insn 344:
  Adding insn 343 to worklist
Processing use of (reg 141 [ D.26647 ]) in insn 347:
Processing use of (reg 163 [ event ]) in insn 347:
Processing use of (reg 245) in insn 347:
  Adding insn 346 to worklist
Processing use of (reg 163 [ event ]) in insn 346:
Processing use of (reg 163 [ event ]) in insn 322:
Processing use of (reg 231) in insn 322:
  Adding insn 321 to worklist
Processing use of (reg 160 [ err ]) in insn 323:
Processing use of (reg 163 [ event ]) in insn 323:
Processing use of (reg 163 [ event ]) in insn 325:
Processing use of (reg 232) in insn 325:
  Adding insn 324 to worklist
Processing use of (reg 163 [ event ]) in insn 327:
Processing use of (reg 230) in insn 327:
  Adding insn 312 to worklist
Processing use of (reg 229) in insn 312:
  Adding insn 311 to worklist
Processing use of (subreg (reg 228) 0) in insn 311:
  Adding insn 310 to worklist
Processing use of (reg 227) in insn 310:
  Adding insn 308 to worklist
Processing use of (reg 163 [ event ]) in insn 308:
Processing use of (reg 24 cc) in insn 336:
  Adding insn 335 to worklist
Processing use of (reg 235 [ <variable>.hw.sample_period ]) in insn 335:
  Adding insn 334 to worklist
Processing use of (reg 235 [ <variable>.hw.sample_period ]) in insn 334:
  Adding insn 329 to worklist
Processing use of (reg 239 [ <variable>.hw.sample_period+4 ]) in insn 334:
  Adding insn 333 to worklist
Processing use of (reg 163 [ event ]) in insn 333:
Processing use of (reg 163 [ event ]) in insn 329:
Processing use of (reg 24 cc) in insn 314:
  Adding insn 313 to worklist
Processing use of (reg 230) in insn 313:
Processing use of (reg 24 cc) in insn 306:
  Adding insn 305 to worklist
Processing use of (reg 160 [ err ]) in insn 305:
Processing use of (reg 24 cc) in insn 291:
  Adding insn 290 to worklist
Processing use of (reg 140 [ D.26654 ]) in insn 290:
Processing use of (reg 24 cc) in insn 278:
  Adding insn 277 to worklist
Processing use of (reg 142 [ ret ]) in insn 277:
Processing use of (reg 221) in insn 277:
  Adding insn 276 to worklist
Processing use of (reg 24 cc) in insn 265:
  Adding insn 264 to worklist
Processing use of (reg 143 [ cache_result ]) in insn 264:
Processing use of (reg 24 cc) in insn 257:
  Adding insn 256 to worklist
Processing use of (reg 144 [ cache_op ]) in insn 256:
Processing use of (reg 24 cc) in insn 249:
  Adding insn 248 to worklist
Processing use of (reg 145 [ cache_type ]) in insn 248:
Processing use of (reg 24 cc) in insn 244:
  Adding insn 243 to worklist
Processing use of (reg 140 [ D.26654 ]) in insn 243:
Processing use of (reg 24 cc) in insn 237:
  Adding insn 236 to worklist
Processing use of (reg 160 [ err ]) in insn 236:
Processing use of (reg 206) in insn 236:
  Adding insn 235 to worklist
Processing use of (reg 24 cc) in insn 228:
  Adding insn 227 to worklist
Processing use of (reg 140 [ D.26654 ]) in insn 227:
Processing use of (reg 13 sp) in insn 221:
Processing use of (reg 0 r0) in insn 221:
  Adding insn 220 to worklist
Processing use of (reg 24 cc) in insn 223:
  Adding insn 222 to worklist
Processing use of (reg 160 [ err ]) in insn 222:
Processing use of (reg 196) in insn 214:
  Adding insn 210 to worklist
Processing use of (reg 196) in insn 214:
Processing use of (reg 198) in insn 214:
  Adding insn 212 to worklist
Processing use of (reg 196) in insn 212:
Processing use of (reg 13 sp) in insn 202:
Processing use of (reg 0 r0) in insn 202:
  Adding insn 201 to worklist
Processing use of (reg 195) in insn 205:
  Adding insn 204 to worklist
Processing use of (reg 254) in insn 205:
  Adding insn 405 to worklist
Processing use of (reg 24 cc) in insn 199:
  Adding insn 198 to worklist
Processing use of (reg 135 [ i.966 ]) in insn 198:
  Adding insn 177 to worklist
  Adding insn 194 to worklist
Processing use of (reg 135 [ i.966 ]) in insn 194:
Processing use of (reg 153 [ i ]) in insn 177:
  Adding insn 121 to worklist
  Adding insn 161 to worklist
Processing use of (reg 153 [ i ]) in insn 161:
Processing use of (reg 13 sp) in insn 191:
Processing use of (reg 0 r0) in insn 191:
Processing use of (reg 1 r1) in insn 191:
  Adding insn 406 to worklist
Processing use of (reg 13 sp) in insn 184:
Processing use of (reg 0 r0) in insn 184:
  Adding insn 182 to worklist
Processing use of (reg 1 r1) in insn 184:
  Adding insn 183 to worklist
Processing use of (reg 135 [ i.966 ]) in insn 183:
Processing use of (reg 255) in insn 182:
  Adding insn 401 to worklist
Processing use of (reg 24 cc) in insn 187:
  Adding insn 186 to worklist
Processing use of (reg 134 [ irq.967 ]) in insn 186:
  Adding insn 185 to worklist
Processing use of (reg 0 r0) in insn 185:
Processing use of (reg 24 cc) in insn 174:
  Adding insn 173 to worklist
Processing use of (reg 160 [ err ]) in insn 173:
Processing use of (reg 24 cc) in insn 170:
  Adding insn 169 to worklist
Processing use of (reg 153 [ i ]) in insn 169:
Processing use of (reg 192 [ <variable>.num_resources ]) in insn 169:
  Adding insn 168 to worklist
Processing use of (reg 137 [ pmu_device.962 ]) in insn 168:
  Adding insn 166 to worklist
Processing use of (reg 257) in insn 166:
  Adding insn 165 to worklist
Processing use of (reg 13 sp) in insn 156:
Processing use of (reg 0 r0) in insn 156:
  Adding insn 154 to worklist
Processing use of (reg 1 r1) in insn 156:
  Adding insn 155 to worklist
Processing use of (reg 154 [ irq ]) in insn 155:
  Adding insn 136 to worklist
Processing use of (reg 0 r0) in insn 136:
Processing use of (reg 13 sp) in insn 141:
Processing use of (reg 258) in insn 141:
  Adding insn 140 to worklist
Processing use of (reg 13 sp) in insn 143:
Processing use of (reg 259) in insn 143:
  Adding insn 142 to worklist
Processing use of (reg 153 [ i ]) in insn 142:
Processing use of (reg 13 sp) in insn 148:
Processing use of (reg 0 r0) in insn 148:
Processing use of (reg 1 r1) in insn 148:
  Adding insn 145 to worklist
Processing use of (reg 2 r2) in insn 148:
  Adding insn 146 to worklist
Processing use of (reg 3 r3) in insn 148:
  Adding insn 410 to worklist
Processing use of (reg 259) in insn 146:
Processing use of (reg 152 [ handle_irq ]) in insn 145:
  Adding insn 106 to worklist
  Adding insn 113 to worklist
Processing use of (reg 185 [ armpmu ]) in insn 113:
  Adding insn 112 to worklist
Processing use of (reg 184) in insn 112:
  Adding insn 111 to worklist
Processing use of (reg 24 cc) in insn 151:
  Adding insn 150 to worklist
Processing use of (reg 160 [ err ]) in insn 150:
Processing use of (reg 13 sp) in insn 135:
Processing use of (reg 0 r0) in insn 135:
  Adding insn 133 to worklist
Processing use of (reg 1 r1) in insn 135:
  Adding insn 134 to worklist
Processing use of (reg 153 [ i ]) in insn 134:
Processing use of (reg 137 [ pmu_device.962 ]) in insn 133:
Processing use of (reg 24 cc) in insn 138:
  Adding insn 137 to worklist
Processing use of (reg 154 [ irq ]) in insn 137:
Processing use of (reg 13 sp) in insn 128:
Processing use of (reg 0 r0) in insn 128:
  Adding insn 127 to worklist
Processing use of (reg 24 cc) in insn 118:
  Adding insn 117 to worklist
Processing use of (reg 186 [ <variable>.num_resources ]) in insn 117:
  Adding insn 116 to worklist
Processing use of (reg 138 [ pmu_device.961 ]) in insn 116:
  Adding insn 97 to worklist
Processing use of (reg 179) in insn 97:
Processing use of (reg 24 cc) in insn 104:
  Adding insn 103 to worklist
Processing use of (reg 183 [ <variable>.handle_irq ]) in insn 103:
  Adding insn 102 to worklist
Processing use of (reg 151 [ plat ]) in insn 102:
  Adding insn 98 to worklist
Processing use of (reg 138 [ pmu_device.961 ]) in insn 98:
Processing use of (reg 13 sp) in insn 95:
Processing use of (reg 0 r0) in insn 95:
  Adding insn 94 to worklist
Processing use of (reg 157 [ c ]) in insn 94:
  Adding insn 60 to worklist
Processing use of (reg 155 [ oldval ]) in insn 60:
Processing use of (reg 24 cc) in insn 100:
  Adding insn 99 to worklist
Processing use of (reg 151 [ plat ]) in insn 99:
Processing use of (reg 13 sp) in insn 84:
Processing use of (reg 0 r0) in insn 84:
  Adding insn 83 to worklist
Processing use of (reg 24 cc) in insn 88:
  Adding insn 87 to worklist
Processing use of (reg 160 [ err ]) in insn 87:
Processing use of (reg 13 sp) in insn 75:
Processing use of (reg 0 r0) in insn 75:
  Adding insn 74 to worklist
Processing use of (reg 157 [ c ]) in insn 74:
Processing use of (reg 149 [ pmu_device.341 ]) in insn 78:
  Adding insn 76 to worklist
Processing use of (reg 179) in insn 78:
Processing use of (reg 0 r0) in insn 76:
Processing use of (reg 24 cc) in insn 80:
  Adding insn 79 to worklist
Processing use of (reg 149 [ pmu_device.341 ]) in insn 79:
Processing use of (reg 13 sp) in insn 69:
Processing use of (reg 0 r0) in insn 69:
  Adding insn 68 to worklist
Processing use of (reg 169) in insn 70:
  Adding insn 24 to worklist
Processing use of (reg 24 cc) in insn 72:
  Adding insn 71 to worklist
Processing use of (reg 161 [ D.25549 ]) in insn 71:
Processing use of (reg 24 cc) in insn 58:
  Adding insn 57 to worklist
Processing use of (reg 155 [ oldval ]) in insn 57:
Processing use of (reg 157 [ c ]) in insn 57:
Processing use of (reg 157 [ c ]) in insn 50:
Processing use of (reg 158 [ D.26586 ]) in insn 50:
  Adding insn 43 to worklist
Processing use of (reg 263) in insn 50:
  Adding insn 46 to worklist
Processing use of (reg 263) in insn 50:
Processing use of (reg 264) in insn 50:
  Adding insn 48 to worklist
Processing use of (reg 169) in insn 48:
Processing use of (reg 169) in insn 46:
Processing use of (reg 157 [ c ]) in insn 43:
Processing use of (reg 24 cc) in insn 53:
  Adding insn 52 to worklist
Processing use of (reg 156 [ res ]) in insn 52:
Processing use of (reg 24 cc) in insn 41:
  Adding insn 40 to worklist
Processing use of (reg 157 [ c ]) in insn 40:
Processing use of (reg 163 [ event ]) in insn 35:
Processing use of (reg 171) in insn 35:
  Adding insn 34 to worklist
Processing use of (reg 169) in insn 38:
Processing use of (reg 24 cc) in insn 27:
  Adding insn 26 to worklist
Processing use of (reg 170 [ armpmu ]) in insn 26:
  Adding insn 25 to worklist
Processing use of (reg 169) in insn 25:
Processing use of (reg 24 cc) in insn 14:
  Adding insn 13 to worklist
Processing use of (reg 168) in insn 13:
  Adding insn 12 to worklist
Processing use of (reg 165) in insn 12:
  Adding insn 11 to worklist
Processing use of (reg 164 [ <variable>.attr.type ]) in insn 11:
  Adding insn 6 to worklist
Processing use of (reg 166) in insn 11:
  Adding insn 9 to worklist
Processing use of (reg 163 [ event ]) in insn 6:
Processing use of (reg 24 cc) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 164 [ <variable>.attr.type ]) in insn 7:


armpmu_event_init

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={28d,22u} r1={20d,5u} r2={16d,1u} r3={16d,1u} r11={1d,63u} r12={15d} r13={1d,79u} r14={15d,1u} r15={14d} r16={14d} r17={14d} r18={14d} r19={14d} r20={14d} r21={14d} r22={14d} r23={14d} r24={49d,32u} r25={1d,63u} r26={1d,62u} r27={14d} r28={14d} r29={14d} r30={14d} r31={14d} r32={14d} r33={14d} r34={14d} r35={14d} r36={14d} r37={14d} r38={14d} r39={14d} r40={14d} r41={14d} r42={14d} r43={14d} r44={14d} r45={14d} r46={14d} r47={14d} r48={14d} r49={14d} r50={14d} r51={14d} r52={14d} r53={14d} r54={14d} r55={14d} r56={14d} r57={14d} r58={14d} r59={14d} r60={14d} r61={14d} r62={14d} r63={14d} r64={14d} r65={14d} r66={14d} r67={14d} r68={14d} r69={14d} r70={14d} r71={14d} r72={14d} r73={14d} r74={14d} r75={14d} r76={14d} r77={14d} r78={14d} r79={14d} r80={14d} r81={14d} r82={14d} r83={14d} r84={14d} r85={14d} r86={14d} r87={14d} r88={14d} r89={14d} r90={14d} r91={14d} r92={14d} r93={14d} r94={14d} r95={14d} r96={14d} r97={14d} r98={14d} r99={14d} r100={14d} r101={14d} r102={14d} r103={14d} r104={14d} r105={14d} r106={14d} r107={14d} r108={14d} r109={14d} r110={14d} r111={14d} r112={14d} r113={14d} r114={14d} r115={14d} r116={14d} r117={14d} r118={14d} r119={14d} r120={14d} r121={14d} r122={14d} r123={14d} r124={14d} r125={14d} r126={14d} r127={14d} r134={1d,1u} r135={2d,3u} r137={1d,2u} r138={1d,2u} r140={1d,4u} r141={1d,3u} r142={1d,2u,1d} r143={1d,2u} r144={1d,2u} r145={1d,2u,1d} r146={1d} r147={1d} r148={1d} r149={1d,2u} r151={1d,2u} r152={2d,1u} r153={2d,5u} r154={1d,2u} r155={1d,2u} r156={1d,1u} r157={2d,6u} r158={1d,1u} r160={18d,9u,1d} r161={1d,1u} r163={1d,22u} r164={1d,2u,1d} r165={1d,1u} r166={1d,1u} r168={1d,1u} r169={1d,5u} r170={1d,1u} r171={1d,1u} r179={1d,3u} r183={1d,1u} r184={1d,1u} r185={1d,1u} r186={1d,1u} r192={1d,1u} r195={1d,1u} r196={1d,3u} r198={1d,1u} r202={1d,1u} r203={1d,1u} r204={1d,1u} r205={1d,1u} r206={1d,1u} r209={1d,1u} r212={1d,1u} r213={1d,1u} r214={1d,1u} r215={1d,1u} r216={1d,1u} r218={1d,1u} r219={1d,1u} r220={1d,1u} r221={1d,1u} r222={1d,1u} r223={1d,1u} r224={1d,1u} r225={1d,1u} r227={1d,1u} r228={1d,1u} r229={1d,1u} r230={1d,2u} r231={1d,1u} r232={1d,1u} r234={1d,1u} r235={2d,2u} r239={1d,1u} r240={1d,1u} r241={1d,1u} r243={1d,1u} r245={1d,1u} r246={1d,1u} r248={1d,3u} r249={1d,2u} r250={2d,2u} r252={2d,2u} r254={1d,1u} r255={1d,1u} r257={1d,1u} r258={1d,1u} r259={1d,2u} r263={1d,2u} r264={1d,1u} 
;;    total ref usage 2300{1812d,484u,4e} in 237{223 regular + 14 call} insns.
;; Reaching defs:

  sparse invalidated 	24
  dense invalidated 	
0[0,28] 1[28,20] 2[48,16] 3[64,16] 11[80,1] 12[81,15] 13[96,1] 14[97,15] 15[112,14] 16[126,14] 17[140,14] 18[154,14] 19[168,14] 20[182,14] 21[196,14] 22[210,14] 23[224,14] 24[238,49] 25[287,1] 26[288,1] 27[289,14] 28[303,14] 29[317,14] 30[331,14] 31[345,14] 32[359,14] 33[373,14] 34[387,14] 35[401,14] 36[415,14] 37[429,14] 38[443,14] 39[457,14] 40[471,14] 41[485,14] 42[499,14] 43[513,14] 44[527,14] 45[541,14] 46[555,14] 47[569,14] 48[583,14] 49[597,14] 50[611,14] 51[625,14] 52[639,14] 53[653,14] 54[667,14] 55[681,14] 56[695,14] 57[709,14] 58[723,14] 59[737,14] 60[751,14] 61[765,14] 62[779,14] 63[793,14] 64[807,14] 65[821,14] 66[835,14] 67[849,14] 68[863,14] 69[877,14] 70[891,14] 71[905,14] 72[919,14] 73[933,14] 74[947,14] 75[961,14] 76[975,14] 77[989,14] 78[1003,14] 79[1017,14] 80[1031,14] 81[1045,14] 82[1059,14] 83[1073,14] 84[1087,14] 85[1101,14] 86[1115,14] 87[1129,14] 88[1143,14] 89[1157,14] 90[1171,14] 91[1185,14] 92[1199,14] 93[1213,14] 94[1227,14] 95[1241,14] 96[1255,14] 97[1269,14] 98[1283,14] 99[1297,14] 100[1311,14] 101[1325,14] 102[1339,14] 103[1353,14] 104[1367,14] 105[1381,14] 106[1395,14] 107[1409,14] 108[1423,14] 109[1437,14] 110[1451,14] 111[1465,14] 112[1479,14] 113[1493,14] 114[1507,14] 115[1521,14] 116[1535,14] 117[1549,14] 118[1563,14] 119[1577,14] 120[1591,14] 121[1605,14] 122[1619,14] 123[1633,14] 124[1647,14] 125[1661,14] 126[1675,14] 127[1689,14] 134[1703,1] 135[1704,2] 137[1706,1] 138[1707,1] 140[1708,1] 141[1709,1] 142[1710,1] 143[1711,1] 144[1712,1] 145[1713,1] 146[1714,1] 147[1715,1] 148[1716,1] 149[1717,1] 151[1718,1] 152[1719,2] 153[1721,2] 154[1723,1] 155[1724,1] 156[1725,1] 157[1726,2] 158[1728,1] 160[1729,18] 161[1747,1] 163[1748,1] 164[1749,1] 165[1750,1] 166[1751,1] 168[1752,1] 169[1753,1] 170[1754,1] 171[1755,1] 179[1756,1] 183[1757,1] 184[1758,1] 185[1759,1] 186[1760,1] 192[1761,1] 195[1762,1] 196[1763,1] 198[1764,1] 202[1765,1] 203[1766,1] 204[1767,1] 205[1768,1] 206[1769,1] 209[1770,1] 212[1771,1] 213[1772,1] 214[1773,1] 215[1774,1] 216[1775,1] 218[1776,1] 219[1777,1] 220[1778,1] 221[1779,1] 222[1780,1] 223[1781,1] 224[1782,1] 225[1783,1] 227[1784,1] 228[1785,1] 229[1786,1] 230[1787,1] 231[1788,1] 232[1789,1] 234[1790,1] 235[1791,2] 239[1793,1] 240[1794,1] 241[1795,1] 243[1796,1] 245[1797,1] 246[1798,1] 248[1799,1] 249[1800,1] 250[1801,2] 252[1803,2] 254[1805,1] 255[1806,1] 257[1807,1] 258[1808,1] 259[1809,1] 263[1810,1] 264[1811,1] 
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 163 164
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 163 164
;; live  kill	
;; rd  in  	(10)
27, 47, 63, 79, 80, 95, 96, 111, 287, 288
;; rd  gen 	(3)
286, 1748, 1749
;; rd  kill	(2)
1748, 1749

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 arch/arm/kernel/perf_event.c:544 (set (reg/v/f:SI 163 [ event ])
        (reg:SI 0 r0 [ event ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ event ])
        (nil)))

(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 3 7 2 arch/arm/kernel/perf_event.c:547 (set (reg:SI 164 [ <variable>.attr.type ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 163 [ event ])
                (const_int 120 [0x78])) [0 <variable>.attr.type+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 7 6 8 2 arch/arm/kernel/perf_event.c:547 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 164 [ <variable>.attr.type ])
            (const_int 4 [0x4]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 8 7 394 2 arch/arm/kernel/perf_event.c:547 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 17)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 2 -> ( 4 3)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 163 164
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 163 164
;; rd  out 	(13)
27, 47, 63, 79, 80, 95, 96, 111, 286, 287, 288, 1748, 1749


;; Succ edge  4 [50.0%] 
;; Succ edge  3 [50.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(11){ }u9(13){ }u10(25){ }u11(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 163 164
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164
;; lr  def 	 24 [cc] 165 166 168
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 163 164
;; live  gen 	 24 [cc] 165 166 168
;; live  kill	
;; rd  in  	(13)
27, 47, 63, 79, 80, 95, 96, 111, 286, 287, 288, 1748, 1749
;; rd  gen 	(4)
285, 1750, 1751, 1752
;; rd  kill	(3)
1750, 1751, 1752

;; Pred edge  2 [50.0%]  (fallthru)
(note 394 8 9 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 9 394 11 3 arch/arm/kernel/perf_event.c:547 (set (reg:SI 166)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 11 9 12 3 arch/arm/kernel/perf_event.c:547 (set (reg:SI 165)
        (ashift:SI (reg:SI 166)
            (reg:SI 164 [ <variable>.attr.type ]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 166)
        (expr_list:REG_DEAD (reg:SI 164 [ <variable>.attr.type ])
            (expr_list:REG_EQUAL (ashift:SI (const_int 1 [0x1])
                    (reg:SI 164 [ <variable>.attr.type ]))
                (nil)))))

(insn 12 11 13 3 arch/arm/kernel/perf_event.c:547 (set (reg:SI 168)
        (and:SI (reg:SI 165)
            (const_int 25 [0x19]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 165)
        (nil)))

(insn 13 12 14 3 arch/arm/kernel/perf_event.c:547 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 168)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 168)
        (nil)))

(jump_insn 14 13 17 3 arch/arm/kernel/perf_event.c:547 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 22)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 3 -> ( 5 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 163
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 163
;; rd  out 	(16)
27, 47, 63, 79, 80, 95, 96, 111, 285, 287, 288, 1748, 1749, 1750, 1751, 1752


;; Succ edge  5 [50.0%] 
;; Succ edge  4 [50.0%]  (fallthru)

;; Start of basic block ( 3 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u18(11){ }u19(13){ }u20(25){ }u21(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 160
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 160
;; live  kill	
;; rd  in  	(17)
27, 47, 63, 79, 80, 95, 96, 111, 285, 286, 287, 288, 1748, 1749, 1750, 1751, 1752
;; rd  gen 	(1)
1746
;; rd  kill	(18)
1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746

;; Pred edge  3 [50.0%]  (fallthru)
;; Pred edge  2 [50.0%] 
(code_label 17 14 18 4 165 "" [1 uses])

(note 18 17 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 19 18 417 4 arch/arm/kernel/perf_event.c:554 (set (reg/v:SI 160 [ err ])
        (const_int -2 [0xfffffffffffffffe])) 167 {*arm_movsi_insn} (nil))

(jump_insn 417 19 418 4 (set (pc)
        (label_ref 370)) -1 (nil))
;; End of basic block 4 -> ( 61)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 160
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 160
;; rd  out 	(18)
27, 47, 63, 79, 80, 95, 96, 111, 285, 286, 287, 288, 1746, 1748, 1749, 1750, 1751, 1752


;; Succ edge  61 [100.0%] 

(barrier 418 417 22)

;; Start of basic block ( 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u22(11){ }u23(13){ }u24(25){ }u25(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 163
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 169 170
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 163
;; live  gen 	 24 [cc] 169 170
;; live  kill	
;; rd  in  	(16)
27, 47, 63, 79, 80, 95, 96, 111, 285, 287, 288, 1748, 1749, 1750, 1751, 1752
;; rd  gen 	(3)
284, 1753, 1754
;; rd  kill	(2)
1753, 1754

;; Pred edge  3 [50.0%] 
(code_label 22 418 23 5 166 "" [1 uses])

(note 23 22 24 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 24 23 25 5 arch/arm/kernel/perf_event.c:557 (set (reg/f:SI 169)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 25 24 26 5 arch/arm/kernel/perf_event.c:557 (set (reg/f:SI 170 [ armpmu ])
        (mem/f/c/i:SI (reg/f:SI 169) [0 armpmu+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 armpmu+0 S4 A32])
        (nil)))

(insn 26 25 27 5 arch/arm/kernel/perf_event.c:557 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 170 [ armpmu ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/f:SI 170 [ armpmu ])
        (nil)))

(jump_insn 27 26 28 5 arch/arm/kernel/perf_event.c:557 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 32)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 8986 [0x231a])
            (nil))))
;; End of basic block 5 -> ( 6 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 163 169
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 163 169
;; rd  out 	(18)
27, 47, 63, 79, 80, 95, 96, 111, 284, 287, 288, 1748, 1749, 1750, 1751, 1752, 1753, 1754


;; Succ edge  6 [10.1%]  (fallthru)
;; Succ edge  7 [89.9%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u29(11){ }u30(13){ }u31(25){ }u32(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 160
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 160
;; live  kill	
;; rd  in  	(18)
27, 47, 63, 79, 80, 95, 96, 111, 284, 287, 288, 1748, 1749, 1750, 1751, 1752, 1753, 1754
;; rd  gen 	(1)
1745
;; rd  kill	(18)
1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746

;; Pred edge  5 [10.1%]  (fallthru)
(note 28 27 29 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 29 28 419 6 arch/arm/kernel/perf_event.c:558 (set (reg/v:SI 160 [ err ])
        (const_int -19 [0xffffffffffffffed])) 167 {*arm_movsi_insn} (nil))

(jump_insn 419 29 420 6 (set (pc)
        (label_ref 370)) -1 (nil))
;; End of basic block 6 -> ( 61)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 160
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 160
;; rd  out 	(19)
27, 47, 63, 79, 80, 95, 96, 111, 284, 287, 288, 1745, 1748, 1749, 1750, 1751, 1752, 1753, 1754


;; Succ edge  61 [100.0%] 

(barrier 420 419 32)

;; Start of basic block ( 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u33(11){ }u34(13){ }u35(25){ }u36(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 163 169
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163 169
;; lr  def 	 157 171 263 264
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 163 169
;; live  gen 	 157 171 263 264
;; live  kill	
;; rd  in  	(18)
27, 47, 63, 79, 80, 95, 96, 111, 284, 287, 288, 1748, 1749, 1750, 1751, 1752, 1753, 1754
;; rd  gen 	(4)
1727, 1755, 1810, 1811
;; rd  kill	(5)
1726, 1727, 1755, 1810, 1811

;; Pred edge  5 [89.9%] 
(code_label 32 420 33 7 168 "" [1 uses])

(note 33 32 34 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 34 33 35 7 arch/arm/kernel/perf_event.c:560 (set (reg/f:SI 171)
        (symbol_ref:SI ("hw_perf_event_destroy") [flags 0x3] <function_decl 0x114c5180 hw_perf_event_destroy>)) 167 {*arm_movsi_insn} (nil))

(insn 35 34 38 7 arch/arm/kernel/perf_event.c:560 (set (mem/s/f/j:SI (plus:SI (reg/v/f:SI 163 [ event ])
                (const_int 500 [0x1f4])) [0 <variable>.destroy+0 S4 A32])
        (reg/f:SI 171)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 171)
        (expr_list:REG_EQUAL (symbol_ref:SI ("hw_perf_event_destroy") [flags 0x3] <function_decl 0x114c5180 hw_perf_event_destroy>)
            (nil))))

(insn 38 35 46 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/atomic.h:215 (set (reg/v:SI 157 [ c ])
        (mem/v:SI (plus:SI (reg/f:SI 169)
                (const_int 12 [0xc])) [0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/v:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 12 [0xc]))) [0 S4 A32])
        (nil)))

(insn 46 38 48 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/atomic.h:120 (set (reg/f:SI 263)
        (reg/f:SI 169)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 48 46 61 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/atomic.h:120 (set (reg/f:SI 264)
        (plus:SI (reg/f:SI 169)
            (const_int 12 [0xc]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 12 [0xc])))
        (nil)))
;; End of basic block 7 -> ( 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 157 163 169 263 264
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 157 163 169 263 264
;; rd  out 	(22)
27, 47, 63, 79, 80, 95, 96, 111, 284, 287, 288, 1727, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1810, 1811


;; Succ edge  8 [100.0%]  (fallthru)

;; Start of basic block ( 7 12) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u42(11){ }u43(13){ }u44(25){ }u45(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 157 163 169 263 264
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 157 163 169 263 264
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(27)
27, 47, 63, 79, 80, 95, 96, 111, 243, 284, 287, 288, 1724, 1725, 1726, 1727, 1728, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1810, 1811
;; rd  gen 	(1)
283
;; rd  kill	(0)


;; Pred edge  7 [100.0%]  (fallthru)
;; Pred edge  12 [100.0%]  (dfs_back)
(code_label 61 48 39 8 172 "" [1 uses])

(note 39 61 40 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 40 39 41 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/atomic.h:216 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 157 [ c ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 41 40 42 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/atomic.h:216 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 64)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 450 [0x1c2])
            (nil))))
;; End of basic block 8 -> ( 9 13)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 157 163 169 263 264
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 157 163 169 263 264
;; rd  out 	(26)
27, 47, 63, 79, 80, 95, 96, 111, 283, 287, 288, 1724, 1725, 1726, 1727, 1728, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1810, 1811


;; Succ edge  9 [95.5%]  (fallthru)
;; Succ edge  13 [4.5%]  (loop_exit)

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u48(11){ }u49(13){ }u50(25){ }u51(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 157 163 169 263 264
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157
;; lr  def 	 158
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 157 163 169 263 264
;; live  gen 	 158
;; live  kill	
;; rd  in  	(26)
27, 47, 63, 79, 80, 95, 96, 111, 283, 287, 288, 1724, 1725, 1726, 1727, 1728, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1810, 1811
;; rd  gen 	(1)
1728
;; rd  kill	(1)
1728

;; Pred edge  8 [95.5%]  (fallthru)
(note 42 41 43 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 43 42 44 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/atomic.h:216 discrim 2 (set (reg:SI 158 [ D.26586 ])
        (plus:SI (reg/v:SI 157 [ c ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 44 43 51 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/atomic.h:117 (parallel [
            (asm_operands/v ("dmb") ("") 0 []
                 [] 2611313)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))
;; End of basic block 9 -> ( 10)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 157 158 163 169 263 264
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 157 158 163 169 263 264
;; rd  out 	(26)
27, 47, 63, 79, 80, 95, 96, 111, 283, 287, 288, 1724, 1725, 1726, 1727, 1728, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1810, 1811


;; Succ edge  10 [100.0%]  (fallthru)

;; Start of basic block ( 9 10) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u53(11){ }u54(13){ }u55(25){ }u56(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 157 158 163 169 263 264
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157 158 263 264
;; lr  def 	 24 [cc] 155 156
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 157 158 163 169 263 264
;; live  gen 	 24 [cc] 155 156
;; live  kill	 24 [cc]
;; rd  in  	(27)
27, 47, 63, 79, 80, 95, 96, 111, 282, 283, 287, 288, 1724, 1725, 1726, 1727, 1728, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1810, 1811
;; rd  gen 	(3)
282, 1724, 1725
;; rd  kill	(2)
1724, 1725

;; Pred edge  9 [100.0%]  (fallthru)
;; Pred edge  10 [86.0%]  (dfs_back)
(code_label 51 44 45 10 170 "" [1 uses])

(note 45 51 50 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 50 45 52 10 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/atomic.h:120 (parallel [
            (set (reg/v:SI 156 [ res ])
                (asm_operands/v:SI ("@ atomic_cmpxchg
ldrex	%1, [%3]
mov	%0, #0
teq	%1, %4
strexeq %0, %5, [%3]
") ("=&r") 0 [
                        (reg/f:SI 264)
                        (reg/v:SI 157 [ c ])
                        (reg:SI 158 [ D.26586 ])
                        (mem/s/j/c:SI (plus:SI (reg/f:SI 263)
                                (const_int 12 [0xc])) [0 active_events.counter+0 S4 A32])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("Ir") 0)
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("Qo") 0)
                    ] 2611698))
            (set (reg/v:SI 155 [ oldval ])
                (asm_operands/v:SI ("@ atomic_cmpxchg
ldrex	%1, [%3]
mov	%0, #0
teq	%1, %4
strexeq %0, %5, [%3]
") ("=&r") 1 [
                        (reg/f:SI 264)
                        (reg/v:SI 157 [ c ])
                        (reg:SI 158 [ D.26586 ])
                        (mem/s/j/c:SI (plus:SI (reg/f:SI 263)
                                (const_int 12 [0xc])) [0 active_events.counter+0 S4 A32])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("Ir") 0)
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("Qo") 0)
                    ] 2611698))
            (set (mem/s/j/c:SI (plus:SI (reg/f:SI 263)
                        (const_int 12 [0xc])) [0 active_events.counter+0 S4 A32])
                (asm_operands/v:SI ("@ atomic_cmpxchg
ldrex	%1, [%3]
mov	%0, #0
teq	%1, %4
strexeq %0, %5, [%3]
") ("=Qo") 2 [
                        (reg/f:SI 264)
                        (reg/v:SI 157 [ c ])
                        (reg:SI 158 [ D.26586 ])
                        (mem/s/j/c:SI (plus:SI (reg/f:SI 263)
                                (const_int 12 [0xc])) [0 active_events.counter+0 S4 A32])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("Ir") 0)
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("Qo") 0)
                    ] 2611698))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(insn 52 50 53 10 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/atomic.h:128 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 156 [ res ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 156 [ res ])
        (nil)))

(jump_insn 53 52 54 10 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/atomic.h:128 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 51)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 8600 [0x2198])
            (nil))))
;; End of basic block 10 -> ( 10 11)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 157 158 163 169 263 264
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 157 158 163 169 263 264
;; rd  out 	(26)
27, 47, 63, 79, 80, 95, 96, 111, 282, 287, 288, 1724, 1725, 1726, 1727, 1728, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1810, 1811


;; Succ edge  10 [86.0%]  (dfs_back)
;; Succ edge  11 [14.0%]  (fallthru,loop_exit)

;; Start of basic block ( 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u64(11){ }u65(13){ }u66(25){ }u67(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 157 163 169 263 264
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 155 157
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 157 163 169 263 264
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(26)
27, 47, 63, 79, 80, 95, 96, 111, 282, 287, 288, 1724, 1725, 1726, 1727, 1728, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1810, 1811
;; rd  gen 	(1)
243
;; rd  kill	(0)


;; Pred edge  10 [14.0%]  (fallthru,loop_exit)
(note 54 53 55 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 55 54 57 11 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/atomic.h:130 (parallel [
            (asm_operands/v ("dmb") ("") 0 []
                 [] 2612977)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 57 55 58 11 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/atomic.h:216 discrim 2 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 155 [ oldval ])
            (reg/v:SI 157 [ c ]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 157 [ c ])
        (nil)))

(jump_insn 58 57 59 11 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/atomic.h:216 discrim 2 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 224)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 1400 [0x578])
            (nil))))
;; End of basic block 11 -> ( 12 38)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 163 169 263 264
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 163 169 263 264
;; rd  out 	(26)
27, 47, 63, 79, 80, 95, 96, 111, 243, 287, 288, 1724, 1725, 1726, 1727, 1728, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1810, 1811


;; Succ edge  12 [86.0%]  (fallthru)
;; Succ edge  38 [14.0%]  (loop_exit)

;; Start of basic block ( 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u71(11){ }u72(13){ }u73(25){ }u74(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 163 169 263 264
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 155
;; lr  def 	 157
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 163 169 263 264
;; live  gen 	 157
;; live  kill	
;; rd  in  	(26)
27, 47, 63, 79, 80, 95, 96, 111, 243, 287, 288, 1724, 1725, 1726, 1727, 1728, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1810, 1811
;; rd  gen 	(1)
1726
;; rd  kill	(2)
1726, 1727

;; Pred edge  11 [86.0%]  (fallthru)
(note 59 58 60 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 60 59 421 12 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/atomic.h:132 (set (reg/v:SI 157 [ c ])
        (reg/v:SI 155 [ oldval ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 155 [ oldval ])
        (nil)))

(jump_insn 421 60 422 12 (set (pc)
        (label_ref 61)) -1 (nil))
;; End of basic block 12 -> ( 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 157 163 169 263 264
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 157 163 169 263 264
;; rd  out 	(25)
27, 47, 63, 79, 80, 95, 96, 111, 243, 287, 288, 1724, 1725, 1726, 1728, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1810, 1811


;; Succ edge  8 [100.0%]  (dfs_back)

(barrier 422 421 64)

;; Start of basic block ( 8) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u76(11){ }u77(13){ }u78(25){ }u79(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157 163 169
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 169
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 161
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157 163 169
;; live  gen 	 0 [r0] 24 [cc] 161
;; live  kill	 14 [lr]
;; rd  in  	(26)
27, 47, 63, 79, 80, 95, 96, 111, 283, 287, 288, 1724, 1725, 1726, 1727, 1728, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1810, 1811
;; rd  gen 	(2)
280, 1747
;; rd  kill	(16)
97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 1747

;; Pred edge  8 [4.5%]  (loop_exit)
(code_label 64 422 65 13 169 "" [1 uses])

(note 65 64 68 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 68 65 69 13 arch/arm/kernel/perf_event.c:563 (set (reg:SI 0 r0)
        (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                (const_int 152 [0x98])))) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                (const_int 152 [0x98])))
        (nil)))

(call_insn 69 68 70 13 arch/arm/kernel/perf_event.c:563 (parallel [
            (call (mem:SI (symbol_ref:SI ("mutex_lock") [flags 0x41] <function_decl 0x10d7c200 mutex_lock>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 70 69 71 13 arch/arm/kernel/perf_event.c:564 (set (reg:SI 161 [ D.25549 ])
        (mem/v:SI (plus:SI (reg/f:SI 169)
                (const_int 12 [0xc])) [0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 169)
        (expr_list:REG_EQUAL (mem/v:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                        (const_int 12 [0xc]))) [0 S4 A32])
            (nil))))

(insn 71 70 72 13 arch/arm/kernel/perf_event.c:564 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 161 [ D.25549 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 161 [ D.25549 ])
        (nil)))

(jump_insn 72 71 73 13 arch/arm/kernel/perf_event.c:564 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 208)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 13 -> ( 14 36)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157 163
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157 163
;; rd  out 	(26)
27, 47, 63, 79, 80, 95, 96, 280, 287, 288, 1724, 1725, 1726, 1727, 1728, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1810, 1811


;; Succ edge  14 [29.0%]  (fallthru)
;; Succ edge  36 [71.0%] 

;; Start of basic block ( 13) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u85(11){ }u86(13){ }u87(25){ }u88(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157 163
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 149 179
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157 163
;; live  gen 	 0 [r0] 24 [cc] 149 179
;; live  kill	 14 [lr]
;; rd  in  	(26)
27, 47, 63, 79, 80, 95, 96, 280, 287, 288, 1724, 1725, 1726, 1727, 1728, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1810, 1811
;; rd  gen 	(4)
25, 278, 1717, 1756
;; rd  kill	(45)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 1717, 1756

;; Pred edge  13 [29.0%]  (fallthru)
(note 73 72 74 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 74 73 75 14 arch/arm/kernel/perf_event.c:398 (set (reg:SI 0 r0)
        (reg/v:SI 157 [ c ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(call_insn 75 74 76 14 arch/arm/kernel/perf_event.c:398 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("reserve_pmu") [flags 0x41] <function_decl 0x1147bb00 reserve_pmu>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 76 75 77 14 arch/arm/kernel/perf_event.c:398 (set (reg/f:SI 149 [ pmu_device.341 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 77 76 78 14 arch/arm/kernel/perf_event.c:398 (set (reg/f:SI 179)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 78 77 79 14 arch/arm/kernel/perf_event.c:398 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 179)
                (const_int 4 [0x4])) [0 pmu_device+0 S4 A32])
        (reg/f:SI 149 [ pmu_device.341 ])) 167 {*arm_movsi_insn} (nil))

(insn 79 78 80 14 include/linux/err.h:34 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 149 [ pmu_device.341 ])
            (const_int -4096 [0xfffffffffffff000]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/f:SI 149 [ pmu_device.341 ])
        (nil)))

(jump_insn 80 79 81 14 include/linux/err.h:34 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 92)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 14 -> ( 15 17)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157 163 179
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157 163 179
;; rd  out 	(28)
25, 47, 63, 79, 80, 95, 96, 278, 287, 288, 1717, 1724, 1725, 1726, 1727, 1728, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1810, 1811


;; Succ edge  15 [0.0%]  (fallthru)
;; Succ edge  17 [100.0%] 

;; Start of basic block ( 14) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u97(11){ }u98(13){ }u99(25){ }u100(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163 179
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 179
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 160
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163 179
;; live  gen 	 0 [r0] 24 [cc] 160
;; live  kill	 14 [lr]
;; rd  in  	(28)
25, 47, 63, 79, 80, 95, 96, 278, 287, 288, 1717, 1724, 1725, 1726, 1727, 1728, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1810, 1811
;; rd  gen 	(3)
24, 276, 1729
;; rd  kill	(61)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746

;; Pred edge  14 [0.0%]  (fallthru)
(note 81 80 83 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 83 81 84 15 arch/arm/kernel/perf_event.c:400 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC11") [flags 0x82] <string_cst 0x115c5640>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82] <string_cst 0x115c5640>)
        (nil)))

(call_insn 84 83 86 15 arch/arm/kernel/perf_event.c:400 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_UNUSED (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 86 84 87 15 include/linux/err.h:29 (set (reg/v:SI 160 [ err ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 179)
                (const_int 4 [0x4])) [0 pmu_device+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 179)
        (expr_list:REG_EQUAL (mem/f/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                        (const_int 4 [0x4]))) [0 pmu_device+0 S4 A32])
            (nil))))

(insn 87 86 88 15 arch/arm/kernel/perf_event.c:568 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 160 [ err ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 88 87 423 15 arch/arm/kernel/perf_event.c:568 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 216)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 10000 [0x2710])
            (nil))))
;; End of basic block 15 -> ( 16 37)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 163
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 163
;; rd  out 	(29)
24, 47, 63, 79, 80, 95, 96, 276, 287, 288, 1717, 1724, 1725, 1726, 1727, 1728, 1729, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1810, 1811


;; Succ edge  16 (fallthru)
;; Succ edge  37 [100.0%] 

;; Start of basic block ( 15) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163
;; live  gen 	
;; live  kill	
;; rd  in  	(29)
24, 47, 63, 79, 80, 95, 96, 276, 287, 288, 1717, 1724, 1725, 1726, 1727, 1728, 1729, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1810, 1811
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  15 (fallthru)
(note 423 88 424 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(jump_insn 424 423 425 16 (set (pc)
        (label_ref 208)) -1 (nil))
;; End of basic block 16 -> ( 36)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163
;; rd  out 	(29)
24, 47, 63, 79, 80, 95, 96, 276, 287, 288, 1717, 1724, 1725, 1726, 1727, 1728, 1729, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1810, 1811


;; Succ edge  36 [100.0%] 

(barrier 425 424 92)

;; Start of basic block ( 14) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u106(11){ }u107(13){ }u108(25){ }u109(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157 163 179
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157 179
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 138 151
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157 163 179
;; live  gen 	 0 [r0] 24 [cc] 138 151
;; live  kill	 14 [lr]
;; rd  in  	(28)
25, 47, 63, 79, 80, 95, 96, 278, 287, 288, 1717, 1724, 1725, 1726, 1727, 1728, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1810, 1811
;; rd  gen 	(4)
23, 274, 1707, 1718
;; rd  kill	(45)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 1707, 1718

;; Pred edge  14 [100.0%] 
(code_label 92 425 93 17 174 "" [1 uses])

(note 93 92 94 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 94 93 95 17 arch/arm/kernel/perf_event.c:404 (set (reg:SI 0 r0)
        (reg/v:SI 157 [ c ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 157 [ c ])
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(call_insn 95 94 97 17 arch/arm/kernel/perf_event.c:404 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("init_pmu") [flags 0x41] <function_decl 0x1147bc00 init_pmu>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_UNUSED (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 97 95 98 17 arch/arm/kernel/perf_event.c:406 (set (reg/f:SI 138 [ pmu_device.961 ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 179)
                (const_int 4 [0x4])) [0 pmu_device+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 179)
        (expr_list:REG_EQUAL (mem/f/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                        (const_int 4 [0x4]))) [0 pmu_device+0 S4 A32])
            (nil))))

(insn 98 97 99 17 arch/arm/kernel/perf_event.c:406 (set (reg/v/f:SI 151 [ plat ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 138 [ pmu_device.961 ])
                (const_int 92 [0x5c])) [0 <variable>.dev.platform_data+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 99 98 100 17 arch/arm/kernel/perf_event.c:407 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 151 [ plat ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 100 99 101 17 arch/arm/kernel/perf_event.c:407 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 109)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
            (nil))))
;; End of basic block 17 -> ( 18 20)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 151 163
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 151 163
;; rd  out 	(30)
23, 47, 63, 79, 80, 95, 96, 274, 287, 288, 1707, 1717, 1718, 1724, 1725, 1726, 1727, 1728, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1810, 1811


;; Succ edge  18 [85.0%]  (fallthru)
;; Succ edge  20 [15.0%] 

;; Start of basic block ( 17) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u117(11){ }u118(13){ }u119(25){ }u120(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 151 163
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151
;; lr  def 	 24 [cc] 183
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 151 163
;; live  gen 	 24 [cc] 183
;; live  kill	
;; rd  in  	(30)
23, 47, 63, 79, 80, 95, 96, 274, 287, 288, 1707, 1717, 1718, 1724, 1725, 1726, 1727, 1728, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1810, 1811
;; rd  gen 	(2)
273, 1757
;; rd  kill	(1)
1757

;; Pred edge  17 [85.0%]  (fallthru)
(note 101 100 102 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 102 101 103 18 arch/arm/kernel/perf_event.c:407 discrim 1 (set (reg/f:SI 183 [ <variable>.handle_irq ])
        (mem/s/f/j:SI (reg/v/f:SI 151 [ plat ]) [0 <variable>.handle_irq+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 151 [ plat ])
        (nil)))

(insn 103 102 104 18 arch/arm/kernel/perf_event.c:407 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 183 [ <variable>.handle_irq ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/f:SI 183 [ <variable>.handle_irq ])
        (nil)))

(jump_insn 104 103 105 18 arch/arm/kernel/perf_event.c:407 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 109)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
            (nil))))
;; End of basic block 18 -> ( 19 20)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 163
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 163
;; rd  out 	(31)
23, 47, 63, 79, 80, 95, 96, 273, 287, 288, 1707, 1717, 1718, 1724, 1725, 1726, 1727, 1728, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1810, 1811


;; Succ edge  19 [85.0%]  (fallthru)
;; Succ edge  20 [15.0%] 

;; Start of basic block ( 18) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u124(11){ }u125(13){ }u126(25){ }u127(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 163
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 152
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 163
;; live  gen 	 152
;; live  kill	
;; rd  in  	(31)
23, 47, 63, 79, 80, 95, 96, 273, 287, 288, 1707, 1717, 1718, 1724, 1725, 1726, 1727, 1728, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1810, 1811
;; rd  gen 	(1)
1720
;; rd  kill	(2)
1719, 1720

;; Pred edge  18 [85.0%]  (fallthru)
(note 105 104 106 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 106 105 426 19 arch/arm/kernel/perf_event.c:408 (set (reg/v/f:SI 152 [ handle_irq ])
        (symbol_ref:SI ("armpmu_platform_irq") [flags 0x3] <function_decl 0x114a1e80 armpmu_platform_irq>)) 167 {*arm_movsi_insn} (nil))

(jump_insn 426 106 427 19 (set (pc)
        (label_ref 114)) -1 (nil))
;; End of basic block 19 -> ( 21)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 152 163
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 152 163
;; rd  out 	(32)
23, 47, 63, 79, 80, 95, 96, 273, 287, 288, 1707, 1717, 1718, 1720, 1724, 1725, 1726, 1727, 1728, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1810, 1811


;; Succ edge  21 [100.0%] 

(barrier 427 426 109)

;; Start of basic block ( 17 18) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u128(11){ }u129(13){ }u130(25){ }u131(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 163
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 152 184 185
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 163
;; live  gen 	 152 184 185
;; live  kill	
;; rd  in  	(32)
23, 47, 63, 79, 80, 95, 96, 273, 274, 287, 288, 1707, 1717, 1718, 1724, 1725, 1726, 1727, 1728, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1810, 1811
;; rd  gen 	(3)
1719, 1758, 1759
;; rd  kill	(4)
1719, 1720, 1758, 1759

;; Pred edge  17 [15.0%] 
;; Pred edge  18 [15.0%] 
(code_label 109 427 110 20 176 "" [2 uses])

(note 110 109 111 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn 111 110 112 20 arch/arm/kernel/perf_event.c:410 (set (reg/f:SI 184)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 112 111 113 20 arch/arm/kernel/perf_event.c:410 (set (reg/f:SI 185 [ armpmu ])
        (mem/f/c/i:SI (reg/f:SI 184) [0 armpmu+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 184)
        (expr_list:REG_EQUAL (mem/f/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 armpmu+0 S4 A32])
            (nil))))

(insn 113 112 114 20 arch/arm/kernel/perf_event.c:410 (set (reg/v/f:SI 152 [ handle_irq ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 185 [ armpmu ])
                (const_int 8 [0x8])) [0 <variable>.handle_irq+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 185 [ armpmu ])
        (nil)))
;; End of basic block 20 -> ( 21)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 152 163
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 152 163
;; rd  out 	(35)
23, 47, 63, 79, 80, 95, 96, 273, 274, 287, 288, 1707, 1717, 1718, 1719, 1724, 1725, 1726, 1727, 1728, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1810, 1811


;; Succ edge  21 [100.0%]  (fallthru)

;; Start of basic block ( 20 19) -> 21
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u134(11){ }u135(13){ }u136(25){ }u137(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 152 163
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 24 [cc] 186
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 152 163
;; live  gen 	 24 [cc] 186
;; live  kill	
;; rd  in  	(36)
23, 47, 63, 79, 80, 95, 96, 273, 274, 287, 288, 1707, 1717, 1718, 1719, 1720, 1724, 1725, 1726, 1727, 1728, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1810, 1811
;; rd  gen 	(2)
272, 1760
;; rd  kill	(1)
1760

;; Pred edge  20 [100.0%]  (fallthru)
;; Pred edge  19 [100.0%] 
(code_label 114 113 115 21 177 "" [1 uses])

(note 115 114 116 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn 116 115 117 21 arch/arm/kernel/perf_event.c:412 (set (reg:SI 186 [ <variable>.num_resources ])
        (mem/s/j:SI (plus:SI (reg/f:SI 138 [ pmu_device.961 ])
                (const_int 368 [0x170])) [0 <variable>.num_resources+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 138 [ pmu_device.961 ])
        (nil)))

(insn 117 116 118 21 arch/arm/kernel/perf_event.c:412 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 186 [ <variable>.num_resources ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 186 [ <variable>.num_resources ])
        (nil)))

(jump_insn 118 117 119 21 arch/arm/kernel/perf_event.c:412 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 124)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 4 [0x4])
            (nil))))
;; End of basic block 21 -> ( 23 22)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 163
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 163
;; rd  out 	(36)
23, 47, 63, 79, 80, 95, 96, 272, 287, 288, 1707, 1717, 1718, 1719, 1720, 1724, 1725, 1726, 1727, 1728, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1810, 1811


;; Succ edge  23 [0.0%] 
;; Succ edge  22 [100.0%]  (fallthru)

;; Start of basic block ( 21) -> 22
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u141(11){ }u142(13){ }u143(25){ }u144(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 163
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 153 160 257 258 259
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 163
;; live  gen 	 153 160 257 258 259
;; live  kill	
;; rd  in  	(36)
23, 47, 63, 79, 80, 95, 96, 272, 287, 288, 1707, 1717, 1718, 1719, 1720, 1724, 1725, 1726, 1727, 1728, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1810, 1811
;; rd  gen 	(5)
1722, 1744, 1807, 1808, 1809
;; rd  kill	(23)
1721, 1722, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1807, 1808, 1809

;; Pred edge  21 [100.0%]  (fallthru)
(note 119 118 120 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(insn 120 119 121 22 arch/arm/kernel/perf_event.c:412 (set (reg/v:SI 160 [ err ])
        (const_int -19 [0xffffffffffffffed])) 167 {*arm_movsi_insn} (nil))

(insn 121 120 165 22 arch/arm/kernel/perf_event.c:412 (set (reg/v:SI 153 [ i ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 165 121 140 22 arch/arm/kernel/perf_event.c:417 discrim 1 (set (reg/f:SI 257)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 140 165 142 22 include/linux/interrupt.h:135 (set (reg/f:SI 258)
        (symbol_ref/v/f:SI ("*.LC13") [flags 0x82] <string_cst 0x116a1ca0>)) 167 {*arm_movsi_insn} (nil))

(insn 142 140 428 22 include/linux/interrupt.h:135 (set (reg:SI 259)
        (reg/v:SI 153 [ i ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(jump_insn 428 142 429 22 (set (pc)
        (label_ref 162)) -1 (nil))
;; End of basic block 22 -> ( 28)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 153 160 163 257 258 259
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 153 160 163 257 258 259
;; rd  out 	(41)
23, 47, 63, 79, 80, 95, 96, 272, 287, 288, 1707, 1717, 1718, 1719, 1720, 1722, 1724, 1725, 1726, 1727, 1728, 1744, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1807, 1808, 1809, 1810, 1811


;; Succ edge  28 [100.0%] 

(barrier 429 428 124)

;; Start of basic block ( 21) -> 23
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u146(11){ }u147(13){ }u148(25){ }u149(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 160
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163
;; live  gen 	 0 [r0] 160
;; live  kill	 14 [lr]
;; rd  in  	(36)
23, 47, 63, 79, 80, 95, 96, 272, 287, 288, 1707, 1717, 1718, 1719, 1720, 1724, 1725, 1726, 1727, 1728, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1810, 1811
;; rd  gen 	(2)
22, 1743
;; rd  kill	(61)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746

;; Pred edge  21 [0.0%] 
(code_label 124 429 125 23 178 "" [1 uses])

(note 125 124 127 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(insn 127 125 128 23 arch/arm/kernel/perf_event.c:413 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC12") [flags 0x82] <string_cst 0x115c5690>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC12") [flags 0x82] <string_cst 0x115c5690>)
        (nil)))

(call_insn 128 127 129 23 arch/arm/kernel/perf_event.c:413 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_UNUSED (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 129 128 430 23 arch/arm/kernel/perf_event.c:414 (set (reg/v:SI 160 [ err ])
        (const_int -19 [0xffffffffffffffed])) 167 {*arm_movsi_insn} (nil))

(jump_insn 430 129 431 23 (set (pc)
        (label_ref 216)) -1 (nil))
;; End of basic block 23 -> ( 37)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 163
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 163
;; rd  out 	(37)
22, 47, 63, 79, 80, 95, 96, 272, 287, 288, 1707, 1717, 1718, 1719, 1720, 1724, 1725, 1726, 1727, 1728, 1743, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1810, 1811


;; Succ edge  37 [100.0%] 

(barrier 431 430 167)

;; Start of basic block ( 28) -> 24
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u152(11){ }u153(13){ }u154(25){ }u155(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 152 153 160 163 257 258 259
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 153
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 154
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 152 153 160 163 257 258 259
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 154
;; live  kill	 14 [lr]
;; rd  in  	(48)
19, 20, 23, 47, 63, 79, 80, 95, 96, 242, 287, 288, 1706, 1707, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1742, 1744, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1807, 1808, 1809, 1810, 1811
;; rd  gen 	(3)
20, 269, 1723
;; rd  kill	(44)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 1723

;; Pred edge  28 [95.5%] 
(code_label 167 431 132 24 182 "" [1 uses])

(note 132 167 133 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(insn 133 132 134 24 arch/arm/kernel/perf_event.c:418 (set (reg:SI 0 r0)
        (reg/f:SI 137 [ pmu_device.962 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 137 [ pmu_device.962 ])
        (nil)))

(insn 134 133 135 24 arch/arm/kernel/perf_event.c:418 (set (reg:SI 1 r1)
        (reg/v:SI 153 [ i ])) 167 {*arm_movsi_insn} (nil))

(call_insn 135 134 136 24 arch/arm/kernel/perf_event.c:418 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("platform_get_irq") [flags 0x41] <function_decl 0x11436f00 platform_get_irq>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 136 135 137 24 arch/arm/kernel/perf_event.c:418 (set (reg/v:SI 154 [ irq ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 137 136 138 24 arch/arm/kernel/perf_event.c:419 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 154 [ irq ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 138 137 139 24 arch/arm/kernel/perf_event.c:419 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 159)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 4752 [0x1290])
            (nil))))
;; End of basic block 24 -> ( 27 25)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 153 154 160 163 257 258 259
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 153 154 160 163 257 258 259
;; rd  out 	(46)
20, 47, 63, 79, 80, 95, 96, 269, 287, 288, 1706, 1707, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1742, 1744, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1807, 1808, 1809, 1810, 1811


;; Succ edge  27 [47.5%] 
;; Succ edge  25 [52.5%]  (fallthru)

;; Start of basic block ( 24) -> 25
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u164(11){ }u165(13){ }u166(25){ }u167(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 153 154 163 257 258 259
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 258 259
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 160
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 153 154 163 257 258 259
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc] 160
;; live  kill	 14 [lr]
;; rd  in  	(46)
20, 47, 63, 79, 80, 95, 96, 269, 287, 288, 1706, 1707, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1742, 1744, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1807, 1808, 1809, 1810, 1811
;; rd  gen 	(3)
19, 267, 1742
;; rd  kill	(61)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746

;; Pred edge  24 [52.5%]  (fallthru)
(note 139 138 141 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(insn 141 139 143 25 include/linux/interrupt.h:135 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg/f:SI 258)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC13") [flags 0x82] <string_cst 0x116a1ca0>)
        (nil)))

(insn 143 141 145 25 include/linux/interrupt.h:135 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 259)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 145 143 146 25 include/linux/interrupt.h:135 (set (reg:SI 1 r1)
        (reg/v/f:SI 152 [ handle_irq ])) 167 {*arm_movsi_insn} (nil))

(insn 146 145 410 25 include/linux/interrupt.h:135 (set (reg:SI 2 r2)
        (reg:SI 259)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 410 146 148 25 include/linux/interrupt.h:135 (set (reg:SI 3 r3)
        (const_int 2080 [0x820])) 167 {*arm_movsi_insn} (nil))

(call_insn 148 410 149 25 include/linux/interrupt.h:135 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("request_threaded_irq") [flags 0x41] <function_decl 0x10cec680 request_threaded_irq>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 149 148 150 25 include/linux/interrupt.h:135 (set (reg/v:SI 160 [ err ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 150 149 151 25 arch/arm/kernel/perf_event.c:425 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 160 [ err ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 151 150 152 25 arch/arm/kernel/perf_event.c:425 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 159)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 25 -> ( 26 27)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 153 154 160 163 257 258 259
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 153 154 160 163 257 258 259
;; rd  out 	(45)
19, 47, 63, 79, 80, 95, 96, 267, 287, 288, 1706, 1707, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1742, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1807, 1808, 1809, 1810, 1811


;; Succ edge  26 [0.0%]  (fallthru,loop_exit)
;; Succ edge  27 [100.0%] 

;; Start of basic block ( 25) -> 26
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u182(11){ }u183(13){ }u184(25){ }u185(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153 154 160 163
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153 154 160 163
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]
;; rd  in  	(45)
19, 47, 63, 79, 80, 95, 96, 267, 287, 288, 1706, 1707, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1742, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1807, 1808, 1809, 1810, 1811
;; rd  gen 	(1)
18
;; rd  kill	(43)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111

;; Pred edge  25 [0.0%]  (fallthru,loop_exit)
(note 152 151 154 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(insn 154 152 155 26 arch/arm/kernel/perf_event.c:426 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC14") [flags 0x82] <string_cst 0x113516c0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC14") [flags 0x82] <string_cst 0x113516c0>)
        (nil)))

(insn 155 154 156 26 arch/arm/kernel/perf_event.c:426 (set (reg:SI 1 r1)
        (reg/v:SI 154 [ irq ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 154 [ irq ])
        (nil)))

(call_insn 156 155 432 26 arch/arm/kernel/perf_event.c:426 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(jump_insn 432 156 433 26 (set (pc)
        (label_ref 175)) -1 (nil))
;; End of basic block 26 -> ( 30)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153 160 163
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153 160 163
;; rd  out 	(45)
18, 47, 63, 79, 80, 95, 96, 267, 287, 288, 1706, 1707, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1742, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1807, 1808, 1809, 1810, 1811


;; Succ edge  30 [100.0%] 

(barrier 433 432 159)

;; Start of basic block ( 24 25) -> 27
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u190(11){ }u191(13){ }u192(25){ }u193(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 153 160 163 257 258 259
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153
;; lr  def 	 153
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 153 160 163 257 258 259
;; live  gen 	 153
;; live  kill	
;; rd  in  	(48)
19, 20, 47, 63, 79, 80, 95, 96, 267, 269, 287, 288, 1706, 1707, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1742, 1744, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1807, 1808, 1809, 1810, 1811
;; rd  gen 	(1)
1721
;; rd  kill	(2)
1721, 1722

;; Pred edge  24 [47.5%] 
;; Pred edge  25 [100.0%] 
(code_label 159 433 160 27 180 "" [2 uses])

(note 160 159 161 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(insn 161 160 162 27 arch/arm/kernel/perf_event.c:417 (set (reg/v:SI 153 [ i ])
        (plus:SI (reg/v:SI 153 [ i ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))
;; End of basic block 27 -> ( 28)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 153 160 163 257 258 259
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 153 160 163 257 258 259
;; rd  out 	(47)
19, 20, 47, 63, 79, 80, 95, 96, 267, 269, 287, 288, 1706, 1707, 1717, 1718, 1719, 1720, 1721, 1723, 1724, 1725, 1726, 1727, 1728, 1742, 1744, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1807, 1808, 1809, 1810, 1811


;; Succ edge  28 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 27 22) -> 28
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u195(11){ }u196(13){ }u197(25){ }u198(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 153 160 163 257 258 259
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153 257
;; lr  def 	 24 [cc] 137 192
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 153 160 163 257 258 259
;; live  gen 	 24 [cc] 137 192
;; live  kill	
;; rd  in  	(50)
19, 20, 23, 47, 63, 79, 80, 95, 96, 267, 269, 272, 287, 288, 1706, 1707, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1742, 1744, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1807, 1808, 1809, 1810, 1811
;; rd  gen 	(3)
242, 1706, 1761
;; rd  kill	(2)
1706, 1761

;; Pred edge  27 [100.0%]  (fallthru,dfs_back)
;; Pred edge  22 [100.0%] 
(code_label 162 161 163 28 179 "" [1 uses])

(note 163 162 166 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(insn 166 163 168 28 arch/arm/kernel/perf_event.c:417 discrim 1 (set (reg/f:SI 137 [ pmu_device.962 ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 257)
                (const_int 4 [0x4])) [0 pmu_device+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 4 [0x4]))) [0 pmu_device+0 S4 A32])
        (nil)))

(insn 168 166 169 28 arch/arm/kernel/perf_event.c:417 discrim 1 (set (reg:SI 192 [ <variable>.num_resources ])
        (mem/s/j:SI (plus:SI (reg/f:SI 137 [ pmu_device.962 ])
                (const_int 368 [0x170])) [0 <variable>.num_resources+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 169 168 170 28 arch/arm/kernel/perf_event.c:417 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 153 [ i ])
            (reg:SI 192 [ <variable>.num_resources ]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 192 [ <variable>.num_resources ])
        (nil)))

(jump_insn 170 169 171 28 arch/arm/kernel/perf_event.c:417 discrim 1 (set (pc)
        (if_then_else (ltu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 167)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9550 [0x254e])
            (nil))))
;; End of basic block 28 -> ( 24 29)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 152 153 160 163 257 258 259
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 152 153 160 163 257 258 259
;; rd  out 	(48)
19, 20, 23, 47, 63, 79, 80, 95, 96, 242, 287, 288, 1706, 1707, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1742, 1744, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1807, 1808, 1809, 1810, 1811


;; Succ edge  24 [95.5%] 
;; Succ edge  29 [4.5%]  (fallthru,loop_exit)

;; Start of basic block ( 28) -> 29
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u204(11){ }u205(13){ }u206(25){ }u207(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153 160 163
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153 160 163
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(48)
19, 20, 23, 47, 63, 79, 80, 95, 96, 242, 287, 288, 1706, 1707, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1742, 1744, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1807, 1808, 1809, 1810, 1811
;; rd  gen 	(1)
241
;; rd  kill	(0)


;; Pred edge  28 [4.5%]  (fallthru,loop_exit)
(note 171 170 173 29 [bb 29] NOTE_INSN_BASIC_BLOCK)

(insn 173 171 174 29 arch/arm/kernel/perf_event.c:432 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 160 [ err ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 174 173 175 29 arch/arm/kernel/perf_event.c:432 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 208)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 29 -> ( 30 36)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153 160 163
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153 160 163
;; rd  out 	(48)
19, 20, 23, 47, 63, 79, 80, 95, 96, 241, 287, 288, 1706, 1707, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1742, 1744, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1807, 1808, 1809, 1810, 1811


;; Succ edge  30 [50.0%]  (fallthru)
;; Succ edge  36 [50.0%] 

;; Start of basic block ( 29 26) -> 30
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u210(11){ }u211(13){ }u212(25){ }u213(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153 160 163
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153
;; lr  def 	 135 255
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153 160 163
;; live  gen 	 135 255
;; live  kill	
;; rd  in  	(50)
18, 19, 20, 23, 47, 63, 79, 80, 95, 96, 241, 267, 287, 288, 1706, 1707, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1742, 1744, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1807, 1808, 1809, 1810, 1811
;; rd  gen 	(2)
1705, 1806
;; rd  kill	(3)
1704, 1705, 1806

;; Pred edge  29 [50.0%]  (fallthru)
;; Pred edge  26 [100.0%] 
(code_label 175 174 176 30 181 "" [1 uses])

(note 176 175 177 30 [bb 30] NOTE_INSN_BASIC_BLOCK)

(insn 177 176 401 30 arch/arm/kernel/perf_event.c:433 (set (reg/v:SI 135 [ i.966 ])
        (plus:SI (reg/v:SI 153 [ i ])
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/v:SI 153 [ i ])
        (nil)))

(insn 401 177 434 30 (set (reg/f:SI 255)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(jump_insn 434 401 435 30 (set (pc)
        (label_ref 195)) -1 (nil))
;; End of basic block 30 -> ( 34)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 160 163 255
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 160 163 255
;; rd  out 	(52)
18, 19, 20, 23, 47, 63, 79, 80, 95, 96, 241, 267, 287, 288, 1705, 1706, 1707, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1742, 1744, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1806, 1807, 1808, 1809, 1810, 1811


;; Succ edge  34 [100.0%] 

(barrier 435 434 197)

;; Start of basic block ( 34) -> 31
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u215(11){ }u216(13){ }u217(25){ }u218(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 160 163 255
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 255
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 160 163 255
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 134
;; live  kill	 14 [lr]
;; rd  in  	(55)
17, 18, 19, 20, 23, 47, 63, 79, 80, 95, 96, 262, 287, 288, 1703, 1704, 1705, 1706, 1707, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1742, 1744, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1805, 1806, 1807, 1808, 1809, 1810, 1811
;; rd  gen 	(3)
17, 264, 1703
;; rd  kill	(44)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 1703

;; Pred edge  34 [91.0%] 
(code_label 197 435 180 31 185 "" [1 uses])

(note 180 197 182 31 [bb 31] NOTE_INSN_BASIC_BLOCK)

(insn 182 180 183 31 arch/arm/kernel/perf_event.c:434 (set (reg:SI 0 r0)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 255)
                (const_int 4 [0x4])) [0 pmu_device+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 4 [0x4]))) [0 pmu_device+0 S4 A32])
        (nil)))

(insn 183 182 184 31 arch/arm/kernel/perf_event.c:434 (set (reg:SI 1 r1)
        (reg/v:SI 135 [ i.966 ])) 167 {*arm_movsi_insn} (nil))

(call_insn 184 183 185 31 arch/arm/kernel/perf_event.c:434 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("platform_get_irq") [flags 0x41] <function_decl 0x11436f00 platform_get_irq>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 185 184 186 31 arch/arm/kernel/perf_event.c:434 (set (reg/v:SI 134 [ irq.967 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 186 185 187 31 arch/arm/kernel/perf_event.c:435 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 134 [ irq.967 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 134 [ irq.967 ])
        (nil)))

(jump_insn 187 186 188 31 arch/arm/kernel/perf_event.c:435 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 192)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 4752 [0x1290])
            (nil))))
;; End of basic block 31 -> ( 32 33)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 160 163 255
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 160 163 255
;; rd  out 	(51)
17, 47, 63, 79, 80, 95, 96, 264, 287, 288, 1703, 1704, 1705, 1706, 1707, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1742, 1744, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1805, 1806, 1807, 1808, 1809, 1810, 1811


;; Succ edge  32 [52.5%]  (fallthru)
;; Succ edge  33 [47.5%] 

;; Start of basic block ( 31) -> 32
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u227(11){ }u228(13){ }u229(25){ }u230(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 160 163 255
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 160 163 255
;; live  gen 	 1 [r1]
;; live  kill	 14 [lr]
;; rd  in  	(51)
17, 47, 63, 79, 80, 95, 96, 264, 287, 288, 1703, 1704, 1705, 1706, 1707, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1742, 1744, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1805, 1806, 1807, 1808, 1809, 1810, 1811
;; rd  gen 	(0)

;; rd  kill	(15)
97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111

;; Pred edge  31 [52.5%]  (fallthru)
(note 188 187 406 32 [bb 32] NOTE_INSN_BASIC_BLOCK)

(insn 406 188 191 32 arch/arm/kernel/perf_event.c:436 (set (reg:SI 1 r1)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(call_insn 191 406 192 32 arch/arm/kernel/perf_event.c:436 (parallel [
            (call (mem:SI (symbol_ref:SI ("free_irq") [flags 0x41] <function_decl 0x10cec900 free_irq>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 32 -> ( 33)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 160 163 255
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 160 163 255
;; rd  out 	(51)
17, 47, 63, 79, 80, 95, 96, 264, 287, 288, 1703, 1704, 1705, 1706, 1707, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1742, 1744, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1805, 1806, 1807, 1808, 1809, 1810, 1811


;; Succ edge  33 [100.0%]  (fallthru)

;; Start of basic block ( 31 32) -> 33
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u234(11){ }u235(13){ }u236(25){ }u237(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 160 163 255
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 135
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 160 163 255
;; live  gen 	 135
;; live  kill	
;; rd  in  	(51)
17, 47, 63, 79, 80, 95, 96, 264, 287, 288, 1703, 1704, 1705, 1706, 1707, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1742, 1744, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1805, 1806, 1807, 1808, 1809, 1810, 1811
;; rd  gen 	(1)
1704
;; rd  kill	(2)
1704, 1705

;; Pred edge  31 [47.5%] 
;; Pred edge  32 [100.0%]  (fallthru)
(code_label 192 191 193 33 184 "" [1 uses])

(note 193 192 194 33 [bb 33] NOTE_INSN_BASIC_BLOCK)

(insn 194 193 195 33 arch/arm/kernel/perf_event.c:433 (set (reg/v:SI 135 [ i.966 ])
        (plus:SI (reg/v:SI 135 [ i.966 ])
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (nil))
;; End of basic block 33 -> ( 34)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 160 163 255
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 160 163 255
;; rd  out 	(50)
17, 47, 63, 79, 80, 95, 96, 264, 287, 288, 1703, 1704, 1706, 1707, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1742, 1744, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1805, 1806, 1807, 1808, 1809, 1810, 1811


;; Succ edge  34 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 33 30) -> 34
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u239(11){ }u240(13){ }u241(25){ }u242(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 160 163 255
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc] 254
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 160 163 255
;; live  gen 	 24 [cc] 254
;; live  kill	
;; rd  in  	(57)
17, 18, 19, 20, 23, 47, 63, 79, 80, 95, 96, 241, 264, 267, 287, 288, 1703, 1704, 1705, 1706, 1707, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1742, 1744, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1805, 1806, 1807, 1808, 1809, 1810, 1811
;; rd  gen 	(2)
262, 1805
;; rd  kill	(1)
1805

;; Pred edge  33 [100.0%]  (fallthru,dfs_back)
;; Pred edge  30 [100.0%] 
(code_label 195 194 196 34 183 "" [1 uses])

(note 196 195 198 34 [bb 34] NOTE_INSN_BASIC_BLOCK)

(insn 198 196 405 34 arch/arm/kernel/perf_event.c:433 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 135 [ i.966 ])
            (const_int -1 [0xffffffffffffffff]))) 219 {*arm_cmpsi_insn} (nil))

(insn 405 198 199 34 (set (reg/f:SI 254)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(jump_insn 199 405 200 34 arch/arm/kernel/perf_event.c:433 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 197)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil))))
;; End of basic block 34 -> ( 31 35)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 160 163 254 255
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 160 163 254 255
;; rd  out 	(55)
17, 18, 19, 20, 23, 47, 63, 79, 80, 95, 96, 262, 287, 288, 1703, 1704, 1705, 1706, 1707, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1742, 1744, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1805, 1806, 1807, 1808, 1809, 1810, 1811


;; Succ edge  31 [91.0%] 
;; Succ edge  35 [9.0%]  (fallthru,loop_exit)

;; Start of basic block ( 34) -> 35
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u245(11){ }u246(13){ }u247(25){ }u248(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 163 254
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 254
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 195
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 163 254
;; live  gen 	 0 [r0] 195
;; live  kill	 14 [lr]
;; rd  in  	(55)
17, 18, 19, 20, 23, 47, 63, 79, 80, 95, 96, 262, 287, 288, 1703, 1704, 1705, 1706, 1707, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1742, 1744, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1805, 1806, 1807, 1808, 1809, 1810, 1811
;; rd  gen 	(2)
14, 1762
;; rd  kill	(44)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 1762

;; Pred edge  34 [9.0%]  (fallthru,loop_exit)
(note 200 199 201 35 [bb 35] NOTE_INSN_BASIC_BLOCK)

(insn 201 200 202 35 arch/arm/kernel/perf_event.c:438 (set (reg:SI 0 r0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(call_insn 202 201 204 35 arch/arm/kernel/perf_event.c:438 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("release_pmu") [flags 0x41] <function_decl 0x1147bb80 release_pmu>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_UNUSED (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 204 202 205 35 arch/arm/kernel/perf_event.c:439 (set (reg:SI 195)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 205 204 436 35 arch/arm/kernel/perf_event.c:439 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 254)
                (const_int 4 [0x4])) [0 pmu_device+0 S4 A32])
        (reg:SI 195)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 254)
        (expr_list:REG_DEAD (reg:SI 195)
            (expr_list:REG_EQUAL (const_int 0 [0x0])
                (nil)))))

(jump_insn 436 205 437 35 (set (pc)
        (label_ref 216)) -1 (nil))
;; End of basic block 35 -> ( 37)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 163
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 163
;; rd  out 	(52)
14, 47, 63, 79, 80, 95, 96, 262, 287, 288, 1703, 1704, 1705, 1706, 1707, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1742, 1744, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1805, 1806, 1807, 1808, 1809, 1810, 1811


;; Succ edge  37 [100.0%] 

(barrier 437 436 208)

;; Start of basic block ( 29 13 16) -> 36
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u253(11){ }u254(13){ }u255(25){ }u256(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 147 148 160 196 198
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163
;; live  gen 	 147 148 160 196 198
;; live  kill	 24 [cc]
;; rd  in  	(53)
19, 20, 23, 24, 27, 47, 63, 79, 80, 95, 96, 241, 276, 280, 287, 288, 1706, 1707, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1742, 1744, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1807, 1808, 1809, 1810, 1811
;; rd  gen 	(5)
1715, 1716, 1741, 1763, 1764
;; rd  kill	(22)
1715, 1716, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1763, 1764

;; Pred edge  29 [50.0%] 
;; Pred edge  13 [71.0%] 
;; Pred edge  16 [100.0%] 
(code_label 208 437 209 36 173 "" [3 uses])

(note 209 208 210 36 [bb 36] NOTE_INSN_BASIC_BLOCK)

(insn 210 209 212 36 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/atomic.h:42 (set (reg/f:SI 196)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 212 210 214 36 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/atomic.h:42 (set (reg/f:SI 198)
        (plus:SI (reg/f:SI 196)
            (const_int 12 [0xc]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 12 [0xc])))
        (nil)))

(insn 214 212 215 36 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/atomic.h:42 (parallel [
            (set (reg/v:SI 148 [ result ])
                (asm_operands/v:SI ("@ atomic_add
1:	ldrex	%0, [%3]
	add	%0, %0, %4
	strex	%1, %0, [%3]
	teq	%1, #0
	bne	1b") ("=&r") 0 [
                        (reg/f:SI 198)
                        (const_int 1 [0x1])
                        (mem/s/j/c:SI (plus:SI (reg/f:SI 196)
                                (const_int 12 [0xc])) [0 active_events.counter+0 S4 A32])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("Ir") 0)
                        (asm_input:SI ("Qo") 0)
                    ] 2601713))
            (set (reg/v:SI 147 [ tmp ])
                (asm_operands/v:SI ("@ atomic_add
1:	ldrex	%0, [%3]
	add	%0, %0, %4
	strex	%1, %0, [%3]
	teq	%1, #0
	bne	1b") ("=&r") 1 [
                        (reg/f:SI 198)
                        (const_int 1 [0x1])
                        (mem/s/j/c:SI (plus:SI (reg/f:SI 196)
                                (const_int 12 [0xc])) [0 active_events.counter+0 S4 A32])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("Ir") 0)
                        (asm_input:SI ("Qo") 0)
                    ] 2601713))
            (set (mem/s/j/c:SI (plus:SI (reg/f:SI 196)
                        (const_int 12 [0xc])) [0 active_events.counter+0 S4 A32])
                (asm_operands/v:SI ("@ atomic_add
1:	ldrex	%0, [%3]
	add	%0, %0, %4
	strex	%1, %0, [%3]
	teq	%1, #0
	bne	1b") ("=Qo") 2 [
                        (reg/f:SI 198)
                        (const_int 1 [0x1])
                        (mem/s/j/c:SI (plus:SI (reg/f:SI 196)
                                (const_int 12 [0xc])) [0 active_events.counter+0 S4 A32])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("Ir") 0)
                        (asm_input:SI ("Qo") 0)
                    ] 2601713))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/f:SI 198)
        (expr_list:REG_DEAD (reg/f:SI 196)
            (expr_list:REG_UNUSED (reg/v:SI 148 [ result ])
                (expr_list:REG_UNUSED (reg/v:SI 147 [ tmp ])
                    (expr_list:REG_UNUSED (reg:QI 24 cc)
                        (nil)))))))

(insn 215 214 216 36 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/atomic.h:42 (set (reg/v:SI 160 [ err ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 36 -> ( 37)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 163
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 163
;; rd  out 	(52)
19, 20, 23, 24, 27, 47, 63, 79, 80, 95, 96, 287, 288, 1706, 1707, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1741, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1763, 1764, 1807, 1808, 1809, 1810, 1811


;; Succ edge  37 [100.0%]  (fallthru)

;; Start of basic block ( 15 36 23 35) -> 37
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u261(11){ }u262(13){ }u263(25){ }u264(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 163
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 163
;; live  gen 	 0 [r0] 24 [cc]
;; live  kill	 14 [lr]
;; rd  in  	(67)
14, 19, 20, 22, 23, 24, 27, 47, 63, 79, 80, 95, 96, 262, 272, 276, 287, 288, 1703, 1704, 1705, 1706, 1707, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1741, 1742, 1743, 1744, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1805, 1806, 1807, 1808, 1809, 1810, 1811
;; rd  gen 	(1)
259
;; rd  kill	(15)
97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111

;; Pred edge  15 [100.0%] 
;; Pred edge  36 [100.0%]  (fallthru)
;; Pred edge  23 [100.0%] 
;; Pred edge  35 [100.0%] 
(code_label 216 215 217 37 175 "" [3 uses])

(note 217 216 220 37 [bb 37] NOTE_INSN_BASIC_BLOCK)

(insn 220 217 221 37 arch/arm/kernel/perf_event.c:570 (set (reg:SI 0 r0)
        (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                (const_int 152 [0x98])))) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                (const_int 152 [0x98])))
        (nil)))

(call_insn 221 220 222 37 arch/arm/kernel/perf_event.c:570 (parallel [
            (call (mem:SI (symbol_ref:SI ("mutex_unlock") [flags 0x41] <function_decl 0x10d7c400 mutex_unlock>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 222 221 223 37 arch/arm/kernel/perf_event.c:573 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 160 [ err ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 223 222 224 37 arch/arm/kernel/perf_event.c:573 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 370)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 10000 [0x2710])
            (nil))))
;; End of basic block 37 -> ( 61 38)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 160 163
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 163
;; rd  out 	(65)
14, 19, 20, 22, 23, 24, 27, 47, 63, 79, 80, 95, 96, 259, 287, 288, 1703, 1704, 1705, 1706, 1707, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1741, 1742, 1743, 1744, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1805, 1806, 1807, 1808, 1809, 1810, 1811


;; Succ edge  61 [100.0%] 
;; Succ edge  38 (fallthru)

;; Start of basic block ( 37 11) -> 38
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u269(11){ }u270(13){ }u271(25){ }u272(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 163
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163
;; lr  def 	 24 [cc] 140
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 163
;; live  gen 	 24 [cc] 140
;; live  kill	
;; rd  in  	(67)
14, 19, 20, 22, 23, 24, 27, 47, 63, 79, 80, 95, 96, 111, 243, 259, 287, 288, 1703, 1704, 1705, 1706, 1707, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1741, 1742, 1743, 1744, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1805, 1806, 1807, 1808, 1809, 1810, 1811
;; rd  gen 	(2)
258, 1708
;; rd  kill	(1)
1708

;; Pred edge  37 (fallthru)
;; Pred edge  11 [14.0%]  (loop_exit)
(code_label 224 223 225 38 171 "" [1 uses])

(note 225 224 226 38 [bb 38] NOTE_INSN_BASIC_BLOCK)

(insn 226 225 227 38 arch/arm/kernel/perf_event.c:480 (set (reg:SI 140 [ D.26654 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 163 [ event ])
                (const_int 120 [0x78])) [0 <variable>.attr.type+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 227 226 228 38 arch/arm/kernel/perf_event.c:480 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 140 [ D.26654 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 228 227 229 38 arch/arm/kernel/perf_event.c:480 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 241)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 38 -> ( 39 41)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 163
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 163
;; rd  out 	(67)
14, 19, 20, 22, 23, 24, 27, 47, 63, 79, 80, 95, 96, 111, 258, 287, 288, 1703, 1704, 1705, 1706, 1707, 1708, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1741, 1742, 1743, 1744, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1805, 1806, 1807, 1808, 1809, 1810, 1811


;; Succ edge  39 [50.0%]  (fallthru)
;; Succ edge  41 [50.0%] 

;; Start of basic block ( 38) -> 39
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u276(11){ }u277(13){ }u278(25){ }u279(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 163
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163
;; lr  def 	 24 [cc] 160 202 203 204 205 206
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 163
;; live  gen 	 24 [cc] 160 202 203 204 205 206
;; live  kill	
;; rd  in  	(67)
14, 19, 20, 22, 23, 24, 27, 47, 63, 79, 80, 95, 96, 111, 258, 287, 288, 1703, 1704, 1705, 1706, 1707, 1708, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1741, 1742, 1743, 1744, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1805, 1806, 1807, 1808, 1809, 1810, 1811
;; rd  gen 	(7)
257, 1740, 1765, 1766, 1767, 1768, 1769
;; rd  kill	(23)
1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1765, 1766, 1767, 1768, 1769

;; Pred edge  38 [50.0%]  (fallthru)
(note 229 228 230 39 [bb 39] NOTE_INSN_BASIC_BLOCK)

(insn 230 229 231 39 arch/arm/kernel/perf_event.c:160 (set (reg/f:SI 202)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 231 230 232 39 arch/arm/kernel/perf_event.c:160 (set (reg/f:SI 203 [ armpmu ])
        (mem/f/c/i:SI (reg/f:SI 202) [0 armpmu+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 202)
        (expr_list:REG_EQUAL (mem/f/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 armpmu+0 S4 A32])
            (nil))))

(insn 232 231 233 39 arch/arm/kernel/perf_event.c:160 (set (reg/f:SI 204 [ <variable>.event_map ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 203 [ armpmu ])
                (const_int 48 [0x30])) [0 <variable>.event_map+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 203 [ armpmu ])
        (nil)))

(insn 233 232 234 39 arch/arm/kernel/perf_event.c:160 (set (reg:SI 205 [ <variable>.attr.config ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 163 [ event ])
                (const_int 128 [0x80])) [0 <variable>.attr.config+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 234 233 235 39 arch/arm/kernel/perf_event.c:160 (set (reg/v:SI 160 [ err ])
        (mem/s/j:SI (plus:SI (mult:SI (reg:SI 205 [ <variable>.attr.config ])
                    (const_int 4 [0x4]))
                (reg/f:SI 204 [ <variable>.event_map ])) [0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 205 [ <variable>.attr.config ])
        (expr_list:REG_DEAD (reg/f:SI 204 [ <variable>.event_map ])
            (nil))))

(insn 235 234 236 39 arch/arm/kernel/perf_event.c:161 (set (reg:SI 206)
        (const_int 65535 [0xffff])) 167 {*arm_movsi_insn} (nil))

(insn 236 235 237 39 arch/arm/kernel/perf_event.c:161 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 160 [ err ])
            (reg:SI 206))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 206)
        (expr_list:REG_EQUAL (compare:CC (reg/v:SI 160 [ err ])
                (const_int 65535 [0xffff]))
            (nil))))

(jump_insn 237 236 438 39 arch/arm/kernel/perf_event.c:161 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 303)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 39 -> ( 51 40)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 160 163
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 160 163
;; rd  out 	(68)
14, 19, 20, 22, 23, 24, 27, 47, 63, 79, 80, 95, 96, 111, 257, 287, 288, 1703, 1704, 1705, 1706, 1707, 1708, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1740, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1805, 1806, 1807, 1808, 1809, 1810, 1811


;; Succ edge  51 [72.0%] 
;; Succ edge  40 [28.0%]  (fallthru)

;; Start of basic block ( 39) -> 40
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163
;; live  gen 	
;; live  kill	
;; rd  in  	(68)
14, 19, 20, 22, 23, 24, 27, 47, 63, 79, 80, 95, 96, 111, 257, 287, 288, 1703, 1704, 1705, 1706, 1707, 1708, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1740, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1805, 1806, 1807, 1808, 1809, 1810, 1811
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  39 [28.0%]  (fallthru)
(note 438 237 440 40 [bb 40] NOTE_INSN_BASIC_BLOCK)

(jump_insn 440 438 441 40 (set (pc)
        (label_ref 439)) -1 (nil))
;; End of basic block 40 -> ( 62)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163
;; rd  out 	(68)
14, 19, 20, 22, 23, 24, 27, 47, 63, 79, 80, 95, 96, 111, 257, 287, 288, 1703, 1704, 1705, 1706, 1707, 1708, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1740, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1805, 1806, 1807, 1808, 1809, 1810, 1811


;; Succ edge  62 [100.0%] 

(barrier 441 440 241)

;; Start of basic block ( 38) -> 41
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u289(11){ }u290(13){ }u291(25){ }u292(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 163
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 163
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(67)
14, 19, 20, 22, 23, 24, 27, 47, 63, 79, 80, 95, 96, 111, 258, 287, 288, 1703, 1704, 1705, 1706, 1707, 1708, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1741, 1742, 1743, 1744, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1805, 1806, 1807, 1808, 1809, 1810, 1811
;; rd  gen 	(1)
256
;; rd  kill	(0)


;; Pred edge  38 [50.0%] 
(code_label 241 441 242 41 186 "" [1 uses])

(note 242 241 243 41 [bb 41] NOTE_INSN_BASIC_BLOCK)

(insn 243 242 244 41 arch/arm/kernel/perf_event.c:482 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 140 [ D.26654 ])
            (const_int 3 [0x3]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 244 243 245 41 arch/arm/kernel/perf_event.c:482 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 288)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 41 -> ( 42 48)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 163
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 163
;; rd  out 	(67)
14, 19, 20, 22, 23, 24, 27, 47, 63, 79, 80, 95, 96, 111, 256, 287, 288, 1703, 1704, 1705, 1706, 1707, 1708, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1741, 1742, 1743, 1744, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1805, 1806, 1807, 1808, 1809, 1810, 1811


;; Succ edge  42 [28.0%]  (fallthru)
;; Succ edge  48 [72.0%] 

;; Start of basic block ( 41) -> 42
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u295(11){ }u296(13){ }u297(25){ }u298(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 163
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163
;; lr  def 	 24 [cc] 145 248 249
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 163
;; live  gen 	 24 [cc] 145 248 249
;; live  kill	
;; rd  in  	(67)
14, 19, 20, 22, 23, 24, 27, 47, 63, 79, 80, 95, 96, 111, 256, 287, 288, 1703, 1704, 1705, 1706, 1707, 1708, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1741, 1742, 1743, 1744, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1805, 1806, 1807, 1808, 1809, 1810, 1811
;; rd  gen 	(4)
255, 1713, 1799, 1800
;; rd  kill	(3)
1713, 1799, 1800

;; Pred edge  41 [28.0%]  (fallthru)
(note 245 244 398 42 [bb 42] NOTE_INSN_BASIC_BLOCK)

(insn 398 245 399 42 arch/arm/kernel/perf_event.c:483 (set (reg:SI 248 [ temp.969 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 163 [ event ])
                (const_int 128 [0x80])) [0 <variable>.attr.config+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 399 398 247 42 arch/arm/kernel/perf_event.c:483 (set (reg:SI 249 [ temp.969+4 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 163 [ event ])
                (const_int 132 [0x84])) [0 <variable>.attr.config+4 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 247 399 248 42 arch/arm/kernel/perf_event.c:137 (set (reg/v:SI 145 [ cache_type ])
        (and:SI (reg:SI 248 [ temp.969 ])
            (const_int 255 [0xff]))) 67 {*arm_andsi3_insn} (nil))

(insn 248 247 249 42 arch/arm/kernel/perf_event.c:138 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 145 [ cache_type ])
            (const_int 6 [0x6]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 249 248 250 42 arch/arm/kernel/perf_event.c:138 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 380)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 42 -> ( 63 43)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 145 163 248 249
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 145 163 248 249
;; rd  out 	(70)
14, 19, 20, 22, 23, 24, 27, 47, 63, 79, 80, 95, 96, 111, 255, 287, 288, 1703, 1704, 1705, 1706, 1707, 1708, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1741, 1742, 1743, 1744, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1799, 1800, 1805, 1806, 1807, 1808, 1809, 1810, 1811


;; Succ edge  63 [50.0%] 
;; Succ edge  43 [50.0%]  (fallthru)

;; Start of basic block ( 42) -> 43
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u304(11){ }u305(13){ }u306(25){ }u307(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 145 163 248 249
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 248 249
;; lr  def 	 24 [cc] 144 209 250
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 145 163 248 249
;; live  gen 	 24 [cc] 144 209 250
;; live  kill	
;; rd  in  	(70)
14, 19, 20, 22, 23, 24, 27, 47, 63, 79, 80, 95, 96, 111, 255, 287, 288, 1703, 1704, 1705, 1706, 1707, 1708, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1741, 1742, 1743, 1744, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1799, 1800, 1805, 1806, 1807, 1808, 1809, 1810, 1811
;; rd  gen 	(4)
254, 1712, 1770, 1801
;; rd  kill	(4)
1712, 1770, 1801, 1802

;; Pred edge  42 [50.0%]  (fallthru)
(note 250 249 251 43 [bb 43] NOTE_INSN_BASIC_BLOCK)

(insn 251 250 252 43 arch/arm/kernel/perf_event.c:141 (set (reg:SI 209)
        (ashift:SI (reg:SI 249 [ temp.969+4 ])
            (const_int 24 [0x18]))) 117 {*arm_shiftsi3} (nil))

(insn 252 251 253 43 arch/arm/kernel/perf_event.c:141 (set (reg:SI 250)
        (lshiftrt:SI (reg:SI 248 [ temp.969 ])
            (const_int 8 [0x8]))) 117 {*arm_shiftsi3} (nil))

(insn 253 252 255 43 arch/arm/kernel/perf_event.c:141 (set (reg:SI 250)
        (ior:SI (reg:SI 209)
            (reg:SI 250))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 209)
        (nil)))

(insn 255 253 256 43 arch/arm/kernel/perf_event.c:141 (set (reg/v:SI 144 [ cache_op ])
        (and:SI (reg:SI 250)
            (const_int 255 [0xff]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 250)
        (nil)))

(insn 256 255 257 43 arch/arm/kernel/perf_event.c:142 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 144 [ cache_op ])
            (const_int 2 [0x2]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 257 256 258 43 arch/arm/kernel/perf_event.c:142 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 380)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 43 -> ( 63 44)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 144 145 163 248 249
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 144 145 163 248 249
;; rd  out 	(73)
14, 19, 20, 22, 23, 24, 27, 47, 63, 79, 80, 95, 96, 111, 254, 287, 288, 1703, 1704, 1705, 1706, 1707, 1708, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1741, 1742, 1743, 1744, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1770, 1799, 1800, 1801, 1805, 1806, 1807, 1808, 1809, 1810, 1811


;; Succ edge  63 [50.0%] 
;; Succ edge  44 [50.0%]  (fallthru)

;; Start of basic block ( 43) -> 44
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u315(11){ }u316(13){ }u317(25){ }u318(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 144 145 163 248 249
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 248 249
;; lr  def 	 24 [cc] 143 212 252
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 144 145 163 248 249
;; live  gen 	 24 [cc] 143 212 252
;; live  kill	
;; rd  in  	(73)
14, 19, 20, 22, 23, 24, 27, 47, 63, 79, 80, 95, 96, 111, 254, 287, 288, 1703, 1704, 1705, 1706, 1707, 1708, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1741, 1742, 1743, 1744, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1770, 1799, 1800, 1801, 1805, 1806, 1807, 1808, 1809, 1810, 1811
;; rd  gen 	(4)
253, 1711, 1771, 1803
;; rd  kill	(4)
1711, 1771, 1803, 1804

;; Pred edge  43 [50.0%]  (fallthru)
(note 258 257 259 44 [bb 44] NOTE_INSN_BASIC_BLOCK)

(insn 259 258 260 44 arch/arm/kernel/perf_event.c:145 (set (reg:SI 212)
        (ashift:SI (reg:SI 249 [ temp.969+4 ])
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 249 [ temp.969+4 ])
        (nil)))

(insn 260 259 261 44 arch/arm/kernel/perf_event.c:145 (set (reg:SI 252)
        (lshiftrt:SI (reg:SI 248 [ temp.969 ])
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 248 [ temp.969 ])
        (nil)))

(insn 261 260 263 44 arch/arm/kernel/perf_event.c:145 (set (reg:SI 252)
        (ior:SI (reg:SI 212)
            (reg:SI 252))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 212)
        (nil)))

(insn 263 261 264 44 arch/arm/kernel/perf_event.c:145 (set (reg/v:SI 143 [ cache_result ])
        (and:SI (reg:SI 252)
            (const_int 255 [0xff]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 252)
        (nil)))

(insn 264 263 265 44 arch/arm/kernel/perf_event.c:146 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 143 [ cache_result ])
            (const_int 1 [0x1]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 265 264 266 44 arch/arm/kernel/perf_event.c:146 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 380)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7300 [0x1c84])
            (nil))))
;; End of basic block 44 -> ( 63 45)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 143 144 145 163
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 143 144 145 163
;; rd  out 	(76)
14, 19, 20, 22, 23, 24, 27, 47, 63, 79, 80, 95, 96, 111, 253, 287, 288, 1703, 1704, 1705, 1706, 1707, 1708, 1711, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1741, 1742, 1743, 1744, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1770, 1771, 1799, 1800, 1801, 1803, 1805, 1806, 1807, 1808, 1809, 1810, 1811


;; Succ edge  63 [73.0%] 
;; Succ edge  45 [27.0%]  (fallthru)

;; Start of basic block ( 44) -> 45
;; bb 45 artificial_defs: { }
;; bb 45 artificial_uses: { u326(11){ }u327(13){ }u328(25){ }u329(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 143 144 145 163
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 143 144 145
;; lr  def 	 24 [cc] 142 213 214 215 216 218 219 220 221
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 143 144 145 163
;; live  gen 	 24 [cc] 142 213 214 215 216 218 219 220 221
;; live  kill	
;; rd  in  	(76)
14, 19, 20, 22, 23, 24, 27, 47, 63, 79, 80, 95, 96, 111, 253, 287, 288, 1703, 1704, 1705, 1706, 1707, 1708, 1711, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1741, 1742, 1743, 1744, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1770, 1771, 1799, 1800, 1801, 1803, 1805, 1806, 1807, 1808, 1809, 1810, 1811
;; rd  gen 	(10)
252, 1710, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779
;; rd  kill	(9)
1710, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779

;; Pred edge  44 [27.0%]  (fallthru)
(note 266 265 267 45 [bb 45] NOTE_INSN_BASIC_BLOCK)

(insn 267 266 268 45 arch/arm/kernel/perf_event.c:149 (set (reg/f:SI 213)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 268 267 269 45 arch/arm/kernel/perf_event.c:149 (set (reg/f:SI 214 [ armpmu ])
        (mem/f/c/i:SI (reg/f:SI 213) [0 armpmu+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 213)
        (expr_list:REG_EQUAL (mem/f/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 armpmu+0 S4 A32])
            (nil))))

(insn 269 268 271 45 arch/arm/kernel/perf_event.c:149 (set (reg/f:SI 215 [ <variable>.cache_map ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 214 [ armpmu ])
                (const_int 44 [0x2c])) [0 <variable>.cache_map+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 214 [ armpmu ])
        (nil)))

(insn 271 269 272 45 arch/arm/kernel/perf_event.c:149 (set (reg:SI 216)
        (mult:SI (reg:SI 140 [ D.26654 ])
            (reg/v:SI 145 [ cache_type ]))) 32 {*arm_mulsi3_v6} (expr_list:REG_DEAD (reg/v:SI 145 [ cache_type ])
        (expr_list:REG_DEAD (reg:SI 140 [ D.26654 ])
            (expr_list:REG_EQUAL (mult:SI (reg/v:SI 145 [ cache_type ])
                    (const_int 3 [0x3]))
                (nil)))))

(insn 272 271 273 45 arch/arm/kernel/perf_event.c:149 (set (reg:SI 218)
        (plus:SI (reg:SI 216)
            (reg/v:SI 144 [ cache_op ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 216)
        (expr_list:REG_DEAD (reg/v:SI 144 [ cache_op ])
            (nil))))

(insn 273 272 274 45 arch/arm/kernel/perf_event.c:149 (set (reg:SI 219)
        (ashift:SI (reg:SI 218)
            (const_int 1 [0x1]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 218)
        (nil)))

(insn 274 273 275 45 arch/arm/kernel/perf_event.c:149 (set (reg:SI 220)
        (plus:SI (reg:SI 219)
            (reg/v:SI 143 [ cache_result ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 219)
        (expr_list:REG_DEAD (reg/v:SI 143 [ cache_result ])
            (nil))))

(insn 275 274 276 45 arch/arm/kernel/perf_event.c:149 (set (reg/v:SI 142 [ ret ])
        (mem/s/j:SI (plus:SI (mult:SI (reg:SI 220)
                    (const_int 4 [0x4]))
                (reg/f:SI 215 [ <variable>.cache_map ])) [0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 220)
        (expr_list:REG_DEAD (reg/f:SI 215 [ <variable>.cache_map ])
            (nil))))

(insn 276 275 277 45 arch/arm/kernel/perf_event.c:151 (set (reg:SI 221)
        (const_int 65535 [0xffff])) 167 {*arm_movsi_insn} (nil))

(insn 277 276 278 45 arch/arm/kernel/perf_event.c:151 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 142 [ ret ])
            (reg:SI 221))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 221)
        (expr_list:REG_EQUAL (compare:CC (reg/v:SI 142 [ ret ])
                (const_int 65535 [0xffff]))
            (nil))))

(jump_insn 278 277 279 45 arch/arm/kernel/perf_event.c:151 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 283)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 45 -> ( 46 47)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 163
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 163
;; rd  out 	(85)
14, 19, 20, 22, 23, 24, 27, 47, 63, 79, 80, 95, 96, 111, 252, 287, 288, 1703, 1704, 1705, 1706, 1707, 1708, 1710, 1711, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1741, 1742, 1743, 1744, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1799, 1800, 1801, 1803, 1805, 1806, 1807, 1808, 1809, 1810, 1811


;; Succ edge  46 [28.0%]  (fallthru)
;; Succ edge  47 [72.0%] 

;; Start of basic block ( 45) -> 46
;; bb 46 artificial_defs: { }
;; bb 46 artificial_uses: { u346(11){ }u347(13){ }u348(25){ }u349(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 160
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163
;; live  gen 	 160
;; live  kill	
;; rd  in  	(85)
14, 19, 20, 22, 23, 24, 27, 47, 63, 79, 80, 95, 96, 111, 252, 287, 288, 1703, 1704, 1705, 1706, 1707, 1708, 1710, 1711, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1741, 1742, 1743, 1744, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1799, 1800, 1801, 1803, 1805, 1806, 1807, 1808, 1809, 1810, 1811
;; rd  gen 	(1)
1739
;; rd  kill	(18)
1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746

;; Pred edge  45 [28.0%]  (fallthru)
(note 279 278 280 46 [bb 46] NOTE_INSN_BASIC_BLOCK)

(insn 280 279 442 46 arch/arm/kernel/perf_event.c:152 (set (reg/v:SI 160 [ err ])
        (const_int -2 [0xfffffffffffffffe])) 167 {*arm_movsi_insn} (nil))

(jump_insn 442 280 443 46 (set (pc)
        (label_ref 366)) -1 (nil))
;; End of basic block 46 -> ( 60)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 163
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 163
;; rd  out 	(81)
14, 19, 20, 22, 23, 24, 27, 47, 63, 79, 80, 95, 96, 111, 252, 287, 288, 1703, 1704, 1705, 1706, 1707, 1708, 1710, 1711, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1739, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1799, 1800, 1801, 1803, 1805, 1806, 1807, 1808, 1809, 1810, 1811


;; Succ edge  60 [100.0%] 

(barrier 443 442 283)

;; Start of basic block ( 45) -> 47
;; bb 47 artificial_defs: { }
;; bb 47 artificial_uses: { u350(11){ }u351(13){ }u352(25){ }u353(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 163
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 160
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 163
;; live  gen 	 160
;; live  kill	
;; rd  in  	(85)
14, 19, 20, 22, 23, 24, 27, 47, 63, 79, 80, 95, 96, 111, 252, 287, 288, 1703, 1704, 1705, 1706, 1707, 1708, 1710, 1711, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1741, 1742, 1743, 1744, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1799, 1800, 1801, 1803, 1805, 1806, 1807, 1808, 1809, 1810, 1811
;; rd  gen 	(1)
1738
;; rd  kill	(18)
1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746

;; Pred edge  45 [72.0%] 
(code_label 283 443 284 47 191 "" [1 uses])

(note 284 283 285 47 [bb 47] NOTE_INSN_BASIC_BLOCK)

(insn 285 284 444 47 arch/arm/kernel/perf_event.c:154 (set (reg/v:SI 160 [ err ])
        (reg/v:SI 142 [ ret ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 142 [ ret ])
        (nil)))

(jump_insn 444 285 445 47 (set (pc)
        (label_ref 303)) -1 (nil))
;; End of basic block 47 -> ( 51)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 160 163
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 160 163
;; rd  out 	(81)
14, 19, 20, 22, 23, 24, 27, 47, 63, 79, 80, 95, 96, 111, 252, 287, 288, 1703, 1704, 1705, 1706, 1707, 1708, 1710, 1711, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1738, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1799, 1800, 1801, 1803, 1805, 1806, 1807, 1808, 1809, 1810, 1811


;; Succ edge  51 [100.0%] 

(barrier 445 444 288)

;; Start of basic block ( 41) -> 48
;; bb 48 artificial_defs: { }
;; bb 48 artificial_uses: { u355(11){ }u356(13){ }u357(25){ }u358(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 163
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 163
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(67)
14, 19, 20, 22, 23, 24, 27, 47, 63, 79, 80, 95, 96, 111, 256, 287, 288, 1703, 1704, 1705, 1706, 1707, 1708, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1741, 1742, 1743, 1744, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1805, 1806, 1807, 1808, 1809, 1810, 1811
;; rd  gen 	(1)
251
;; rd  kill	(0)


;; Pred edge  41 [72.0%] 
(code_label 288 445 289 48 189 "" [1 uses])

(note 289 288 290 48 [bb 48] NOTE_INSN_BASIC_BLOCK)

(insn 290 289 291 48 arch/arm/kernel/perf_event.c:484 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 140 [ D.26654 ])
            (const_int 4 [0x4]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 140 [ D.26654 ])
        (nil)))

(jump_insn 291 290 292 48 arch/arm/kernel/perf_event.c:484 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 296)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2800 [0xaf0])
            (nil))))
;; End of basic block 48 -> ( 50 49)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 163
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 163
;; rd  out 	(67)
14, 19, 20, 22, 23, 24, 27, 47, 63, 79, 80, 95, 96, 111, 251, 287, 288, 1703, 1704, 1705, 1706, 1707, 1708, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1741, 1742, 1743, 1744, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1805, 1806, 1807, 1808, 1809, 1810, 1811


;; Succ edge  50 [28.0%] 
;; Succ edge  49 [72.0%]  (fallthru)

;; Start of basic block ( 48) -> 49
;; bb 49 artificial_defs: { }
;; bb 49 artificial_uses: { u361(11){ }u362(13){ }u363(25){ }u364(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 160
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163
;; live  gen 	 160
;; live  kill	
;; rd  in  	(67)
14, 19, 20, 22, 23, 24, 27, 47, 63, 79, 80, 95, 96, 111, 251, 287, 288, 1703, 1704, 1705, 1706, 1707, 1708, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1741, 1742, 1743, 1744, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1805, 1806, 1807, 1808, 1809, 1810, 1811
;; rd  gen 	(1)
1737
;; rd  kill	(18)
1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746

;; Pred edge  48 [72.0%]  (fallthru)
(note 292 291 293 49 [bb 49] NOTE_INSN_BASIC_BLOCK)

(insn 293 292 446 49 arch/arm/kernel/perf_event.c:488 (set (reg/v:SI 160 [ err ])
        (const_int -95 [0xffffffffffffffa1])) 167 {*arm_movsi_insn} (nil))

(jump_insn 446 293 447 49 (set (pc)
        (label_ref 366)) -1 (nil))
;; End of basic block 49 -> ( 60)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 163
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 163
;; rd  out 	(63)
14, 19, 20, 22, 23, 24, 27, 47, 63, 79, 80, 95, 96, 111, 251, 287, 288, 1703, 1704, 1705, 1706, 1707, 1708, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1737, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1805, 1806, 1807, 1808, 1809, 1810, 1811


;; Succ edge  60 [100.0%] 

(barrier 447 446 296)

;; Start of basic block ( 48) -> 50
;; bb 50 artificial_defs: { }
;; bb 50 artificial_uses: { u365(11){ }u366(13){ }u367(25){ }u368(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 163
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163
;; lr  def 	 160 222 223 224 225
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 163
;; live  gen 	 160 222 223 224 225
;; live  kill	
;; rd  in  	(67)
14, 19, 20, 22, 23, 24, 27, 47, 63, 79, 80, 95, 96, 111, 251, 287, 288, 1703, 1704, 1705, 1706, 1707, 1708, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1741, 1742, 1743, 1744, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1805, 1806, 1807, 1808, 1809, 1810, 1811
;; rd  gen 	(5)
1736, 1780, 1781, 1782, 1783
;; rd  kill	(22)
1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1780, 1781, 1782, 1783

;; Pred edge  48 [28.0%] 
(code_label 296 447 297 50 193 "" [1 uses])

(note 297 296 298 50 [bb 50] NOTE_INSN_BASIC_BLOCK)

(insn 298 297 299 50 arch/arm/kernel/perf_event.c:167 (set (reg/f:SI 222)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 299 298 300 50 arch/arm/kernel/perf_event.c:167 (set (reg/f:SI 223 [ armpmu ])
        (mem/f/c/i:SI (reg/f:SI 222) [0 armpmu+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 222)
        (expr_list:REG_EQUAL (mem/f/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 armpmu+0 S4 A32])
            (nil))))

(insn 300 299 301 50 arch/arm/kernel/perf_event.c:167 (set (reg:SI 224 [ <variable>.attr.config ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 163 [ event ])
                (const_int 128 [0x80])) [0 <variable>.attr.config+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 301 300 302 50 arch/arm/kernel/perf_event.c:167 (set (reg:SI 225 [ <variable>.raw_event_mask ])
        (mem/s/j:SI (plus:SI (reg/f:SI 223 [ armpmu ])
                (const_int 52 [0x34])) [0 <variable>.raw_event_mask+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 223 [ armpmu ])
        (nil)))

(insn 302 301 303 50 arch/arm/kernel/perf_event.c:167 (set (reg/v:SI 160 [ err ])
        (and:SI (reg:SI 224 [ <variable>.attr.config ])
            (reg:SI 225 [ <variable>.raw_event_mask ]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 225 [ <variable>.raw_event_mask ])
        (expr_list:REG_DEAD (reg:SI 224 [ <variable>.attr.config ])
            (nil))))
;; End of basic block 50 -> ( 51)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 160 163
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 160 163
;; rd  out 	(67)
14, 19, 20, 22, 23, 24, 27, 47, 63, 79, 80, 95, 96, 111, 251, 287, 288, 1703, 1704, 1705, 1706, 1707, 1708, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1736, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1780, 1781, 1782, 1783, 1805, 1806, 1807, 1808, 1809, 1810, 1811


;; Succ edge  51 [100.0%]  (fallthru)

;; Start of basic block ( 39 50 47) -> 51
;; bb 51 artificial_defs: { }
;; bb 51 artificial_uses: { u374(11){ }u375(13){ }u376(25){ }u377(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 160 163
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 160 163
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(94)
14, 19, 20, 22, 23, 24, 27, 47, 63, 79, 80, 95, 96, 111, 251, 252, 257, 287, 288, 1703, 1704, 1705, 1706, 1707, 1708, 1710, 1711, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1736, 1738, 1740, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1799, 1800, 1801, 1803, 1805, 1806, 1807, 1808, 1809, 1810, 1811
;; rd  gen 	(1)
250
;; rd  kill	(0)


;; Pred edge  39 [72.0%] 
;; Pred edge  50 [100.0%]  (fallthru)
;; Pred edge  47 [100.0%] 
(code_label 303 302 304 51 187 "" [2 uses])

(note 304 303 305 51 [bb 51] NOTE_INSN_BASIC_BLOCK)

(insn 305 304 306 51 arch/arm/kernel/perf_event.c:491 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 160 [ err ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 306 305 307 51 arch/arm/kernel/perf_event.c:491 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 366)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 0 [0x0])
            (nil))))
;; End of basic block 51 -> ( 60 52)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 160 163
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 160 163
;; rd  out 	(92)
14, 19, 20, 22, 23, 24, 27, 47, 63, 79, 80, 95, 96, 111, 250, 287, 288, 1703, 1704, 1705, 1706, 1707, 1708, 1710, 1711, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1736, 1738, 1740, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1799, 1800, 1801, 1803, 1805, 1806, 1807, 1808, 1809, 1810, 1811


;; Succ edge  60
;; Succ edge  52 [100.0%]  (fallthru)

;; Start of basic block ( 51) -> 52
;; bb 52 artificial_defs: { }
;; bb 52 artificial_uses: { u380(11){ }u381(13){ }u382(25){ }u383(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 160 163
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163
;; lr  def 	 24 [cc] 227 228 229 230
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 160 163
;; live  gen 	 24 [cc] 227 228 229 230
;; live  kill	
;; rd  in  	(92)
14, 19, 20, 22, 23, 24, 27, 47, 63, 79, 80, 95, 96, 111, 250, 287, 288, 1703, 1704, 1705, 1706, 1707, 1708, 1710, 1711, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1736, 1738, 1740, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1799, 1800, 1801, 1803, 1805, 1806, 1807, 1808, 1809, 1810, 1811
;; rd  gen 	(5)
249, 1784, 1785, 1786, 1787
;; rd  kill	(4)
1784, 1785, 1786, 1787

;; Pred edge  51 [100.0%]  (fallthru)
(note 307 306 308 52 [bb 52] NOTE_INSN_BASIC_BLOCK)

(insn 308 307 310 52 arch/arm/kernel/perf_event.c:502 (set (reg:SI 227)
        (zero_extend:SI (mem/s:QI (plus:SI (reg/v/f:SI 163 [ event ])
                    (const_int 160 [0xa0])) [0 S1 A64]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 310 308 311 52 arch/arm/kernel/perf_event.c:502 (set (reg:SI 228)
        (and:SI (reg:SI 227)
            (const_int -16 [0xfffffffffffffff0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 227)
        (nil)))

(insn 311 310 312 52 arch/arm/kernel/perf_event.c:502 (set (reg:QI 229)
        (subreg:QI (reg:SI 228) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 228)
        (nil)))

(insn 312 311 313 52 arch/arm/kernel/perf_event.c:502 (set (reg:SI 230)
        (zero_extend:SI (reg:QI 229))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 229)
        (nil)))

(insn 313 312 314 52 arch/arm/kernel/perf_event.c:502 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 230)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 314 313 315 52 arch/arm/kernel/perf_event.c:502 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 319)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 52 -> ( 53 54)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 160 163 230
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 160 163 230
;; rd  out 	(96)
14, 19, 20, 22, 23, 24, 27, 47, 63, 79, 80, 95, 96, 111, 249, 287, 288, 1703, 1704, 1705, 1706, 1707, 1708, 1710, 1711, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1736, 1738, 1740, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1799, 1800, 1801, 1803, 1805, 1806, 1807, 1808, 1809, 1810, 1811


;; Succ edge  53 [50.0%]  (fallthru)
;; Succ edge  54 [50.0%] 

;; Start of basic block ( 52) -> 53
;; bb 53 artificial_defs: { }
;; bb 53 artificial_uses: { u390(11){ }u391(13){ }u392(25){ }u393(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 160
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163
;; live  gen 	 160
;; live  kill	
;; rd  in  	(96)
14, 19, 20, 22, 23, 24, 27, 47, 63, 79, 80, 95, 96, 111, 249, 287, 288, 1703, 1704, 1705, 1706, 1707, 1708, 1710, 1711, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1736, 1738, 1740, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1799, 1800, 1801, 1803, 1805, 1806, 1807, 1808, 1809, 1810, 1811
;; rd  gen 	(1)
1735
;; rd  kill	(18)
1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746

;; Pred edge  52 [50.0%]  (fallthru)
(note 315 314 316 53 [bb 53] NOTE_INSN_BASIC_BLOCK)

(insn 316 315 448 53 arch/arm/kernel/perf_event.c:506 (set (reg/v:SI 160 [ err ])
        (const_int -1 [0xffffffffffffffff])) 167 {*arm_movsi_insn} (nil))

(jump_insn 448 316 449 53 (set (pc)
        (label_ref 366)) -1 (nil))
;; End of basic block 53 -> ( 60)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 163
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 163
;; rd  out 	(94)
14, 19, 20, 22, 23, 24, 27, 47, 63, 79, 80, 95, 96, 111, 249, 287, 288, 1703, 1704, 1705, 1706, 1707, 1708, 1710, 1711, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1735, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1799, 1800, 1801, 1803, 1805, 1806, 1807, 1808, 1809, 1810, 1811


;; Succ edge  60 [100.0%] 

(barrier 449 448 319)

;; Start of basic block ( 52) -> 54
;; bb 54 artificial_defs: { }
;; bb 54 artificial_uses: { u394(11){ }u395(13){ }u396(25){ }u397(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 160 163 230
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 163 230
;; lr  def 	 24 [cc] 231 232 234 235 239
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 160 163 230
;; live  gen 	 24 [cc] 231 232 234 235 239
;; live  kill	
;; rd  in  	(96)
14, 19, 20, 22, 23, 24, 27, 47, 63, 79, 80, 95, 96, 111, 249, 287, 288, 1703, 1704, 1705, 1706, 1707, 1708, 1710, 1711, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1736, 1738, 1740, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1799, 1800, 1801, 1803, 1805, 1806, 1807, 1808, 1809, 1810, 1811
;; rd  gen 	(6)
248, 1788, 1789, 1790, 1792, 1793
;; rd  kill	(6)
1788, 1789, 1790, 1791, 1792, 1793

;; Pred edge  52 [50.0%] 
(code_label 319 449 320 54 194 "" [1 uses])

(note 320 319 321 54 [bb 54] NOTE_INSN_BASIC_BLOCK)

(insn 321 320 322 54 arch/arm/kernel/perf_event.c:515 (set (reg:SI 231)
        (const_int -1 [0xffffffffffffffff])) 167 {*arm_movsi_insn} (nil))

(insn 322 321 323 54 arch/arm/kernel/perf_event.c:515 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 163 [ event ])
                (const_int 224 [0xe0])) [0 <variable>.hw.D.23168.D.23159.idx+0 S4 A64])
        (reg:SI 231)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 231)
        (expr_list:REG_EQUAL (const_int -1 [0xffffffffffffffff])
            (nil))))

(insn 323 322 324 54 arch/arm/kernel/perf_event.c:523 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 163 [ event ])
                (const_int 216 [0xd8])) [0 <variable>.hw.D.23168.D.23159.config_base+0 S4 A64])
        (reg/v:SI 160 [ err ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 160 [ err ])
        (nil)))

(insn 324 323 325 54 arch/arm/kernel/perf_event.c:524 (set (reg:DI 232)
        (const_int 0 [0x0])) 163 {*arm_movdi} (nil))

(insn 325 324 327 54 arch/arm/kernel/perf_event.c:524 (set (mem/s/j:DI (plus:SI (reg/v/f:SI 163 [ event ])
                (const_int 200 [0xc8])) [0 <variable>.hw.D.23168.D.23159.config+0 S8 A64])
        (reg:DI 232)) 163 {*arm_movdi} (expr_list:REG_DEAD (reg:DI 232)
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn 327 325 328 54 arch/arm/kernel/perf_event.c:525 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 163 [ event ])
                (const_int 220 [0xdc])) [0 <variable>.hw.D.23168.D.23159.event_base+0 S4 A32])
        (reg:SI 230)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 230)
        (nil)))

(insn 328 327 329 54 arch/arm/kernel/perf_event.c:527 (set (reg:SI 234)
        (const_int 288 [0x120])) 167 {*arm_movsi_insn} (nil))

(insn 329 328 333 54 arch/arm/kernel/perf_event.c:527 (set (reg:SI 235 [ <variable>.hw.sample_period ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 163 [ event ])
                (const_int 288 [0x120])) [0 <variable>.hw.sample_period+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 333 329 334 54 arch/arm/kernel/perf_event.c:527 (set (reg:SI 239 [ <variable>.hw.sample_period+4 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 163 [ event ])
                (const_int 292 [0x124])) [0 <variable>.hw.sample_period+4 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 334 333 335 54 arch/arm/kernel/perf_event.c:527 (set (reg:SI 235 [ <variable>.hw.sample_period ])
        (ior:SI (reg:SI 235 [ <variable>.hw.sample_period ])
            (reg:SI 239 [ <variable>.hw.sample_period+4 ]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 239 [ <variable>.hw.sample_period+4 ])
        (nil)))

(insn 335 334 336 54 arch/arm/kernel/perf_event.c:527 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 235 [ <variable>.hw.sample_period ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 235 [ <variable>.hw.sample_period ])
        (nil)))

(jump_insn 336 335 337 54 arch/arm/kernel/perf_event.c:527 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 348)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 54 -> ( 55 56)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 163 234
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 163 234
;; rd  out 	(101)
14, 19, 20, 22, 23, 24, 27, 47, 63, 79, 80, 95, 96, 111, 248, 287, 288, 1703, 1704, 1705, 1706, 1707, 1708, 1710, 1711, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1736, 1738, 1740, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1792, 1793, 1799, 1800, 1801, 1803, 1805, 1806, 1807, 1808, 1809, 1810, 1811


;; Succ edge  55 [50.0%]  (fallthru)
;; Succ edge  56 [50.0%] 

;; Start of basic block ( 54) -> 55
;; bb 55 artificial_defs: { }
;; bb 55 artificial_uses: { u412(11){ }u413(13){ }u414(25){ }u415(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 163 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163 234
;; lr  def 	 24 [cc] 141 146 240 241 243 245
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 163 234
;; live  gen 	 141 146 240 241 243 245
;; live  kill	 24 [cc]
;; rd  in  	(101)
14, 19, 20, 22, 23, 24, 27, 47, 63, 79, 80, 95, 96, 111, 248, 287, 288, 1703, 1704, 1705, 1706, 1707, 1708, 1710, 1711, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1736, 1738, 1740, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1792, 1793, 1799, 1800, 1801, 1803, 1805, 1806, 1807, 1808, 1809, 1810, 1811
;; rd  gen 	(6)
1709, 1714, 1794, 1795, 1796, 1797
;; rd  kill	(6)
1709, 1714, 1794, 1795, 1796, 1797

;; Pred edge  54 [50.0%]  (fallthru)
(note 337 336 338 55 [bb 55] NOTE_INSN_BASIC_BLOCK)

(insn 338 337 339 55 arch/arm/kernel/perf_event.c:528 (set (reg/f:SI 240)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 339 338 340 55 arch/arm/kernel/perf_event.c:528 (set (reg/f:SI 241 [ armpmu ])
        (mem/f/c/i:SI (reg/f:SI 240) [0 armpmu+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 240)
        (expr_list:REG_EQUAL (mem/f/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 armpmu+0 S4 A32])
            (nil))))

(insn 340 339 342 55 arch/arm/kernel/perf_event.c:528 (set (reg:DI 141 [ D.26647 ])
        (mem/s/j:DI (plus:SI (reg/f:SI 241 [ armpmu ])
                (const_int 64 [0x40])) [0 <variable>.max_period+0 S8 A64])) 163 {*arm_movdi} (expr_list:REG_DEAD (reg/f:SI 241 [ armpmu ])
        (nil)))

(insn 342 340 343 55 arch/arm/kernel/perf_event.c:528 (set (mem/s/j:DI (plus:SI (reg/v/f:SI 163 [ event ])
                (reg:SI 234)) [0 <variable>.hw.sample_period+0 S8 A64])
        (reg:DI 141 [ D.26647 ])) 163 {*arm_movdi} (expr_list:REG_DEAD (reg:SI 234)
        (nil)))

(insn 343 342 344 55 arch/arm/kernel/perf_event.c:529 (set (reg:SI 243)
        (const_int 296 [0x128])) 167 {*arm_movsi_insn} (nil))

(insn 344 343 346 55 arch/arm/kernel/perf_event.c:529 (set (mem/s/j:DI (plus:SI (reg/v/f:SI 163 [ event ])
                (reg:SI 243)) [0 <variable>.hw.last_period+0 S8 A64])
        (reg:DI 141 [ D.26647 ])) 163 {*arm_movdi} (expr_list:REG_DEAD (reg:SI 243)
        (nil)))

(insn 346 344 347 55 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/atomic.h:261 (set (reg/f:SI 245)
        (plus:SI (reg/v/f:SI 163 [ event ])
            (const_int 304 [0x130]))) 4 {*arm_addsi3} (nil))

(insn 347 346 348 55 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/atomic.h:261 (parallel [
            (set (reg/v:DI 146 [ tmp ])
                (asm_operands/v:DI ("@ atomic64_set
1:	ldrexd	%0, %H0, [%2]
	strexd	%0, %3, %H3, [%2]
	teq	%0, #0
	bne	1b") ("=&r") 0 [
                        (reg/f:SI 245)
                        (reg:DI 141 [ D.26647 ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:DI ("r") 0)
                    ] 2629745))
            (set (mem/s/j:DI (plus:SI (reg/v/f:SI 163 [ event ])
                        (const_int 304 [0x130])) [0 <variable>.counter+0 S8 A64])
                (asm_operands/v:DI ("@ atomic64_set
1:	ldrexd	%0, %H0, [%2]
	strexd	%0, %3, %H3, [%2]
	teq	%0, #0
	bne	1b") ("=Qo") 1 [
                        (reg/f:SI 245)
                        (reg:DI 141 [ D.26647 ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:DI ("r") 0)
                    ] 2629745))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/f:SI 245)
        (expr_list:REG_DEAD (reg:DI 141 [ D.26647 ])
            (expr_list:REG_UNUSED (reg/v:DI 146 [ tmp ])
                (expr_list:REG_UNUSED (reg:QI 24 cc)
                    (nil))))))
;; End of basic block 55 -> ( 56)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 163
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 163
;; rd  out 	(106)
14, 19, 20, 22, 23, 24, 27, 47, 63, 79, 80, 95, 96, 111, 287, 288, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1736, 1738, 1740, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1792, 1793, 1794, 1795, 1796, 1797, 1799, 1800, 1801, 1803, 1805, 1806, 1807, 1808, 1809, 1810, 1811


;; Succ edge  56 [100.0%]  (fallthru)

;; Start of basic block ( 54 55) -> 56
;; bb 56 artificial_defs: { }
;; bb 56 artificial_uses: { u428(11){ }u429(13){ }u430(25){ }u431(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 163
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163
;; lr  def 	 24 [cc] 246
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 163
;; live  gen 	 24 [cc] 246
;; live  kill	
;; rd  in  	(107)
14, 19, 20, 22, 23, 24, 27, 47, 63, 79, 80, 95, 96, 111, 248, 287, 288, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1736, 1738, 1740, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1792, 1793, 1794, 1795, 1796, 1797, 1799, 1800, 1801, 1803, 1805, 1806, 1807, 1808, 1809, 1810, 1811
;; rd  gen 	(2)
247, 1798
;; rd  kill	(1)
1798

;; Pred edge  54 [50.0%] 
;; Pred edge  55 [100.0%]  (fallthru)
(code_label 348 347 349 56 195 "" [1 uses])

(note 349 348 350 56 [bb 56] NOTE_INSN_BASIC_BLOCK)

(insn 350 349 351 56 arch/arm/kernel/perf_event.c:534 (set (reg/f:SI 246 [ <variable>.group_leader ])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 163 [ event ])
                (const_int 40 [0x28])) [0 <variable>.group_leader+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 351 350 352 56 arch/arm/kernel/perf_event.c:534 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 246 [ <variable>.group_leader ])
            (reg/v/f:SI 163 [ event ]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/f:SI 246 [ <variable>.group_leader ])
        (nil)))

(jump_insn 352 351 353 56 arch/arm/kernel/perf_event.c:534 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 357)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6983 [0x1b47])
            (nil))))
;; End of basic block 56 -> ( 58 57)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 163
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 163
;; rd  out 	(108)
14, 19, 20, 22, 23, 24, 27, 47, 63, 79, 80, 95, 96, 111, 247, 287, 288, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1736, 1738, 1740, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1803, 1805, 1806, 1807, 1808, 1809, 1810, 1811


;; Succ edge  58 [69.8%] 
;; Succ edge  57 [30.2%]  (fallthru)

;; Start of basic block ( 56) -> 57
;; bb 57 artificial_defs: { }
;; bb 57 artificial_uses: { u436(11){ }u437(13){ }u438(25){ }u439(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 160
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 160
;; live  kill	
;; rd  in  	(108)
14, 19, 20, 22, 23, 24, 27, 47, 63, 79, 80, 95, 96, 111, 247, 287, 288, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1736, 1738, 1740, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1803, 1805, 1806, 1807, 1808, 1809, 1810, 1811
;; rd  gen 	(1)
1734
;; rd  kill	(18)
1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746

;; Pred edge  56 [30.2%]  (fallthru)
(note 353 352 354 57 [bb 57] NOTE_INSN_BASIC_BLOCK)

(insn 354 353 450 57 arch/arm/kernel/perf_event.c:534 (set (reg/v:SI 160 [ err ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(jump_insn 450 354 451 57 (set (pc)
        (label_ref 370)) -1 (nil))
;; End of basic block 57 -> ( 61)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 160
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 160
;; rd  out 	(106)
14, 19, 20, 22, 23, 24, 27, 47, 63, 79, 80, 95, 96, 111, 247, 287, 288, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1734, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1803, 1805, 1806, 1807, 1808, 1809, 1810, 1811


;; Succ edge  61 [100.0%] 

(barrier 451 450 357)

;; Start of basic block ( 56) -> 58
;; bb 58 artificial_defs: { }
;; bb 58 artificial_uses: { u440(11){ }u441(13){ }u442(25){ }u443(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 160
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163
;; live  gen 	 0 [r0] 24 [cc] 160
;; live  kill	 14 [lr]
;; rd  in  	(108)
14, 19, 20, 22, 23, 24, 27, 47, 63, 79, 80, 95, 96, 111, 247, 287, 288, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1736, 1738, 1740, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1803, 1805, 1806, 1807, 1808, 1809, 1810, 1811
;; rd  gen 	(3)
11, 245, 1733
;; rd  kill	(61)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746

;; Pred edge  56 [69.8%] 
(code_label 357 451 358 58 196 "" [1 uses])

(note 358 357 359 58 [bb 58] NOTE_INSN_BASIC_BLOCK)

(insn 359 358 360 58 arch/arm/kernel/perf_event.c:535 (set (reg:SI 0 r0)
        (reg/v/f:SI 163 [ event ])) 167 {*arm_movsi_insn} (nil))

(call_insn 360 359 361 58 arch/arm/kernel/perf_event.c:535 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("validate_group") [flags 0x3] <function_decl 0x114a1d80 validate_group>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 361 360 362 58 arch/arm/kernel/perf_event.c:535 (set (reg/v:SI 160 [ err ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 362 361 363 58 arch/arm/kernel/perf_event.c:536 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 160 [ err ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 363 362 364 58 arch/arm/kernel/perf_event.c:536 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 370)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 58 -> ( 59 61)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 160 163
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 163
;; rd  out 	(99)
11, 47, 63, 79, 80, 95, 96, 245, 287, 288, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1733, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1803, 1805, 1806, 1807, 1808, 1809, 1810, 1811


;; Succ edge  59 [50.0%]  (fallthru)
;; Succ edge  61 [50.0%] 

;; Start of basic block ( 58) -> 59
;; bb 59 artificial_defs: { }
;; bb 59 artificial_uses: { u450(11){ }u451(13){ }u452(25){ }u453(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 160
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163
;; live  gen 	 160
;; live  kill	
;; rd  in  	(99)
11, 47, 63, 79, 80, 95, 96, 245, 287, 288, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1733, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1803, 1805, 1806, 1807, 1808, 1809, 1810, 1811
;; rd  gen 	(1)
1732
;; rd  kill	(18)
1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746

;; Pred edge  58 [50.0%]  (fallthru)
(note 364 363 365 59 [bb 59] NOTE_INSN_BASIC_BLOCK)

(insn 365 364 366 59 arch/arm/kernel/perf_event.c:537 (set (reg/v:SI 160 [ err ])
        (const_int -22 [0xffffffffffffffea])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 59 -> ( 60)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 163
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 163
;; rd  out 	(99)
11, 47, 63, 79, 80, 95, 96, 245, 287, 288, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1732, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1803, 1805, 1806, 1807, 1808, 1809, 1810, 1811


;; Succ edge  60 [100.0%]  (fallthru)

;; Start of basic block ( 46 53 49 59 51 62 63) -> 60
;; bb 60 artificial_defs: { }
;; bb 60 artificial_uses: { u454(11){ }u455(13){ }u456(25){ }u457(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 163
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 163
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]
;; rd  in  	(123)
11, 14, 19, 20, 22, 23, 24, 27, 47, 63, 79, 80, 95, 96, 111, 245, 249, 250, 251, 252, 253, 254, 255, 257, 287, 288, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1730, 1731, 1732, 1735, 1736, 1737, 1738, 1739, 1740, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1803, 1805, 1806, 1807, 1808, 1809, 1810, 1811
;; rd  gen 	(0)

;; rd  kill	(15)
97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111

;; Pred edge  46 [100.0%] 
;; Pred edge  53 [100.0%] 
;; Pred edge  49 [100.0%] 
;; Pred edge  59 [100.0%]  (fallthru)
;; Pred edge  51
;; Pred edge  62 [100.0%] 
;; Pred edge  63 [100.0%] 
(code_label 366 365 367 60 192 "" [6 uses])

(note 367 366 368 60 [bb 60] NOTE_INSN_BASIC_BLOCK)

(insn 368 367 369 60 arch/arm/kernel/perf_event.c:578 (set (reg:SI 0 r0)
        (reg/v/f:SI 163 [ event ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 163 [ event ])
        (nil)))

(call_insn 369 368 370 60 arch/arm/kernel/perf_event.c:578 (parallel [
            (call (mem:SI (symbol_ref:SI ("hw_perf_event_destroy") [flags 0x3] <function_decl 0x114c5180 hw_perf_event_destroy>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 60 -> ( 61)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 160
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160
;; rd  out 	(122)
11, 14, 19, 20, 22, 23, 24, 27, 47, 63, 79, 80, 95, 96, 245, 249, 250, 251, 252, 253, 254, 255, 257, 287, 288, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1730, 1731, 1732, 1735, 1736, 1737, 1738, 1739, 1740, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1803, 1805, 1806, 1807, 1808, 1809, 1810, 1811


;; Succ edge  61 [100.0%]  (fallthru)

;; Start of basic block ( 6 4 37 60 58 57) -> 61
;; bb 61 artificial_defs: { }
;; bb 61 artificial_uses: { u461(11){ }u462(13){ }u463(25){ }u464(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 160
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 160
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(137)
11, 14, 19, 20, 22, 23, 24, 27, 47, 63, 79, 80, 95, 96, 111, 245, 247, 249, 250, 251, 252, 253, 254, 255, 257, 259, 284, 285, 286, 287, 288, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1803, 1805, 1806, 1807, 1808, 1809, 1810, 1811
;; rd  gen 	(1)
8
;; rd  kill	(28)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27

;; Pred edge  6 [100.0%] 
;; Pred edge  4 [100.0%] 
;; Pred edge  37 [100.0%] 
;; Pred edge  60 [100.0%]  (fallthru)
;; Pred edge  58 [50.0%] 
;; Pred edge  57 [100.0%] 
(code_label 370 369 371 61 167 "" [5 uses])

(note 371 370 386 61 [bb 61] NOTE_INSN_BASIC_BLOCK)

(insn 386 371 392 61 arch/arm/kernel/perf_event.c:581 (set (reg/i:SI 0 r0)
        (reg/v:SI 160 [ err ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 160 [ err ])
        (nil)))

(insn 392 386 439 61 arch/arm/kernel/perf_event.c:581 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 61 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(130)
8, 47, 63, 79, 80, 95, 96, 111, 245, 247, 249, 250, 251, 252, 253, 254, 255, 257, 259, 284, 285, 286, 287, 288, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1803, 1805, 1806, 1807, 1808, 1809, 1810, 1811


;; Succ edge  EXIT [100.0%]  (fallthru)

;; Start of basic block ( 40) -> 62
;; bb 62 artificial_defs: { }
;; bb 62 artificial_uses: { u467(11){ }u468(13){ }u469(25){ }u470(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 160
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163
;; live  gen 	 160
;; live  kill	
;; rd  in  	(68)
14, 19, 20, 22, 23, 24, 27, 47, 63, 79, 80, 95, 96, 111, 257, 287, 288, 1703, 1704, 1705, 1706, 1707, 1708, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1740, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1805, 1806, 1807, 1808, 1809, 1810, 1811
;; rd  gen 	(1)
1731
;; rd  kill	(18)
1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746

;; Pred edge  40 [100.0%] 
(code_label 439 392 376 62 199 "" [1 uses])

(note 376 439 377 62 [bb 62] NOTE_INSN_BASIC_BLOCK)

(insn 377 376 452 62 arch/arm/kernel/perf_event.c:161 discrim 2 (set (reg/v:SI 160 [ err ])
        (const_int -95 [0xffffffffffffffa1])) 167 {*arm_movsi_insn} (nil))

(jump_insn 452 377 453 62 (set (pc)
        (label_ref 366)) -1 (nil))
;; End of basic block 62 -> ( 60)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 163
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 163
;; rd  out 	(68)
14, 19, 20, 22, 23, 24, 27, 47, 63, 79, 80, 95, 96, 111, 257, 287, 288, 1703, 1704, 1705, 1706, 1707, 1708, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1731, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1805, 1806, 1807, 1808, 1809, 1810, 1811


;; Succ edge  60 [100.0%] 

(barrier 453 452 380)

;; Start of basic block ( 43 44 42) -> 63
;; bb 63 artificial_defs: { }
;; bb 63 artificial_uses: { u471(11){ }u472(13){ }u473(25){ }u474(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 160
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163
;; live  gen 	 160
;; live  kill	
;; rd  in  	(78)
14, 19, 20, 22, 23, 24, 27, 47, 63, 79, 80, 95, 96, 111, 253, 254, 255, 287, 288, 1703, 1704, 1705, 1706, 1707, 1708, 1711, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1741, 1742, 1743, 1744, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1770, 1771, 1799, 1800, 1801, 1803, 1805, 1806, 1807, 1808, 1809, 1810, 1811
;; rd  gen 	(1)
1730
;; rd  kill	(18)
1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746

;; Pred edge  43 [50.0%] 
;; Pred edge  44 [73.0%] 
;; Pred edge  42 [50.0%] 
(code_label 380 453 381 63 190 "" [3 uses])

(note 381 380 382 63 [bb 63] NOTE_INSN_BASIC_BLOCK)

(insn 382 381 454 63 arch/arm/kernel/perf_event.c:147 (set (reg/v:SI 160 [ err ])
        (const_int -22 [0xffffffffffffffea])) 167 {*arm_movsi_insn} (nil))

(jump_insn 454 382 455 63 (set (pc)
        (label_ref 366)) -1 (nil))
;; End of basic block 63 -> ( 60)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 163
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 163
;; rd  out 	(74)
14, 19, 20, 22, 23, 24, 27, 47, 63, 79, 80, 95, 96, 111, 253, 254, 255, 287, 288, 1703, 1704, 1705, 1706, 1707, 1708, 1711, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1730, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1770, 1771, 1799, 1800, 1801, 1803, 1805, 1806, 1807, 1808, 1809, 1810, 1811


;; Succ edge  60 [100.0%] 

(barrier 455 454 0)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function armv7pmu_stop (armv7pmu_stop)[0:1349]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


armv7pmu_stop

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr]
;;  ref usage 	r0={5d,3u} r1={4d,1u} r2={3d} r3={3d} r11={1d,2u} r12={3d} r13={1d,4u} r14={2d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={1d,2u} r26={1d,1u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} 
;;    total ref usage 274{253d,21u,0e} in 14{12 regular + 2 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245
0[0,5] 1[5,4] 2[9,3] 3[12,3] 11[15,1] 12[16,3] 13[19,1] 14[20,2] 15[22,2] 16[24,2] 17[26,2] 18[28,2] 19[30,2] 20[32,2] 21[34,2] 22[36,2] 23[38,2] 24[40,2] 25[42,1] 26[43,1] 27[44,2] 28[46,2] 29[48,2] 30[50,2] 31[52,2] 32[54,2] 33[56,2] 34[58,2] 35[60,2] 36[62,2] 37[64,2] 38[66,2] 39[68,2] 40[70,2] 41[72,2] 42[74,2] 43[76,2] 44[78,2] 45[80,2] 46[82,2] 47[84,2] 48[86,2] 49[88,2] 50[90,2] 51[92,2] 52[94,2] 53[96,2] 54[98,2] 55[100,2] 56[102,2] 57[104,2] 58[106,2] 59[108,2] 60[110,2] 61[112,2] 62[114,2] 63[116,2] 64[118,2] 65[120,2] 66[122,2] 67[124,2] 68[126,2] 69[128,2] 70[130,2] 71[132,2] 72[134,2] 73[136,2] 74[138,2] 75[140,2] 76[142,2] 77[144,2] 78[146,2] 79[148,2] 80[150,2] 81[152,2] 82[154,2] 83[156,2] 84[158,2] 85[160,2] 86[162,2] 87[164,2] 88[166,2] 89[168,2] 90[170,2] 91[172,2] 92[174,2] 93[176,2] 94[178,2] 95[180,2] 96[182,2] 97[184,2] 98[186,2] 99[188,2] 100[190,2] 101[192,2] 102[194,2] 103[196,2] 104[198,2] 105[200,2] 106[202,2] 107[204,2] 108[206,2] 109[208,2] 110[210,2] 111[212,2] 112[214,2] 113[216,2] 114[218,2] 115[220,2] 116[222,2] 117[224,2] 118[226,2] 119[228,2] 120[230,2] 121[232,2] 122[234,2] 123[236,2] 124[238,2] 125[240,2] 126[242,2] 127[244,2] 133[246,1] 134[247,1] 135[248,1] 136[249,1] 137[250,1] 138[251,1] 139[252,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d4(0){ }d8(1){ }d11(2){ }d14(3){ }d15(11){ }d18(12){ }d19(13){ }d21(14){ }d42(25){ }d43(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
4, 8, 11, 14, 15, 18, 19, 21, 42, 43
;; rd  kill	(24)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 42, 43
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(10)
4, 8, 11, 14, 15, 18, 19, 21, 42, 43

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d15(bb 0 insn -1) }u1(13){ d19(bb 0 insn -1) }u2(25){ d42(bb 0 insn -1) }u3(26){ d43(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134 135 136 137 138 139
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 133 134 135 136 137 138 139
;; live  kill	 14 [lr]
;; rd  in  	(10)
4, 8, 11, 14, 15, 18, 19, 21, 42, 43
;; rd  gen 	(7)
246, 247, 248, 249, 250, 251, 252
;; rd  kill	(9)
20, 21, 246, 247, 248, 249, 250, 251, 252
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(16)
4, 8, 11, 14, 15, 18, 19, 42, 43, 246, 247, 248, 249, 250, 251, 252
;;  UD chains for artificial uses
;;   reg 11 { d15(bb 0 insn -1) }
;;   reg 13 { d19(bb 0 insn -1) }
;;   reg 25 { d42(bb 0 insn -1) }
;;   reg 26 { d43(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 6
;;      reg 135 { d248(bb 2 insn 5) }
;;   UD chains for insn luid 2 uid 7
;;      reg 136 { d249(bb 2 insn 6) }
;;   UD chains for insn luid 3 uid 8
;;      reg 13 { d19(bb 0 insn -1) }
;;      reg 0 { d3(bb 2 insn 7) }
;;   UD chains for insn luid 4 uid 9
;;      reg 0 { d2(bb 2 insn 8) }
;;   UD chains for insn luid 7 uid 12
;;      reg 133 { d246(bb 2 insn 10) }
;;   UD chains for insn luid 8 uid 13
;;      reg 137 { d250(bb 2 insn 12) }
;;   UD chains for insn luid 10 uid 15
;;      reg 138 { d251(bb 2 insn 14) }
;;   UD chains for insn luid 11 uid 16
;;      reg 139 { d252(bb 2 insn 15) }
;;   UD chains for insn luid 12 uid 17
;;      reg 134 { d247(bb 2 insn 9) }
;;   UD chains for insn luid 13 uid 18
;;      reg 13 { d19(bb 0 insn -1) }
;;      reg 0 { d1(bb 2 insn 16) }
;;      reg 1 { d6(bb 2 insn 17) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u17(11){ d15(bb 0 insn -1) }u18(13){ d19(bb 0 insn -1) }u19(14){ }u20(25){ d42(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(16)
4, 8, 11, 14, 15, 18, 19, 42, 43, 246, 247, 248, 249, 250, 251, 252
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(16)
4, 8, 11, 14, 15, 18, 19, 42, 43, 246, 247, 248, 249, 250, 251, 252
;;  UD chains for artificial uses
;;   reg 11 { d15(bb 0 insn -1) }
;;   reg 13 { d19(bb 0 insn -1) }
;;   reg 14 { }
;;   reg 25 { d42(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 18 to worklist
  Adding insn 13 to worklist
  Adding insn 11 to worklist
  Adding insn 10 to worklist
  Adding insn 8 to worklist
Finished finding needed instructions:
Processing use of (reg 13 sp) in insn 8:
Processing use of (reg 0 r0) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 136) in insn 7:
  Adding insn 6 to worklist
Processing use of (reg 135) in insn 6:
  Adding insn 5 to worklist
Processing use of (reg 137) in insn 13:
  Adding insn 12 to worklist
Processing use of (reg 133 [ val ]) in insn 12:
Processing use of (reg 13 sp) in insn 18:
Processing use of (reg 0 r0) in insn 18:
  Adding insn 16 to worklist
Processing use of (reg 1 r1) in insn 18:
  Adding insn 17 to worklist
Processing use of (reg 134 [ flags ]) in insn 17:
  Adding insn 9 to worklist
Processing use of (reg 0 r0) in insn 9:
Processing use of (reg 139) in insn 16:
  Adding insn 15 to worklist
Processing use of (reg 138) in insn 15:
  Adding insn 14 to worklist


armv7pmu_stop

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr]
;;  ref usage 	r0={5d,3u} r1={4d,1u} r2={3d} r3={3d} r11={1d,2u} r12={3d} r13={1d,4u} r14={2d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={1d,2u} r26={1d,1u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} 
;;    total ref usage 274{253d,21u,0e} in 14{12 regular + 2 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245
0[0,5] 1[5,4] 2[9,3] 3[12,3] 11[15,1] 12[16,3] 13[19,1] 14[20,2] 15[22,2] 16[24,2] 17[26,2] 18[28,2] 19[30,2] 20[32,2] 21[34,2] 22[36,2] 23[38,2] 24[40,2] 25[42,1] 26[43,1] 27[44,2] 28[46,2] 29[48,2] 30[50,2] 31[52,2] 32[54,2] 33[56,2] 34[58,2] 35[60,2] 36[62,2] 37[64,2] 38[66,2] 39[68,2] 40[70,2] 41[72,2] 42[74,2] 43[76,2] 44[78,2] 45[80,2] 46[82,2] 47[84,2] 48[86,2] 49[88,2] 50[90,2] 51[92,2] 52[94,2] 53[96,2] 54[98,2] 55[100,2] 56[102,2] 57[104,2] 58[106,2] 59[108,2] 60[110,2] 61[112,2] 62[114,2] 63[116,2] 64[118,2] 65[120,2] 66[122,2] 67[124,2] 68[126,2] 69[128,2] 70[130,2] 71[132,2] 72[134,2] 73[136,2] 74[138,2] 75[140,2] 76[142,2] 77[144,2] 78[146,2] 79[148,2] 80[150,2] 81[152,2] 82[154,2] 83[156,2] 84[158,2] 85[160,2] 86[162,2] 87[164,2] 88[166,2] 89[168,2] 90[170,2] 91[172,2] 92[174,2] 93[176,2] 94[178,2] 95[180,2] 96[182,2] 97[184,2] 98[186,2] 99[188,2] 100[190,2] 101[192,2] 102[194,2] 103[196,2] 104[198,2] 105[200,2] 106[202,2] 107[204,2] 108[206,2] 109[208,2] 110[210,2] 111[212,2] 112[214,2] 113[216,2] 114[218,2] 115[220,2] 116[222,2] 117[224,2] 118[226,2] 119[228,2] 120[230,2] 121[232,2] 122[234,2] 123[236,2] 124[238,2] 125[240,2] 126[242,2] 127[244,2] 133[246,1] 134[247,1] 135[248,1] 136[249,1] 137[250,1] 138[251,1] 139[252,1] 
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134 135 136 137 138 139
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 133 134 135 136 137 138 139
;; live  kill	 14 [lr]
;; rd  in  	(10)
4, 8, 11, 14, 15, 18, 19, 21, 42, 43
;; rd  gen 	(7)
246, 247, 248, 249, 250, 251, 252
;; rd  kill	(9)
20, 21, 246, 247, 248, 249, 250, 251, 252

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)

(insn 5 2 6 2 arch/arm/kernel/perf_event_v7.c:1122 (set (reg/f:SI 135)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 6 5 7 2 arch/arm/kernel/perf_event_v7.c:1122 (set (reg/f:SI 136)
        (plus:SI (reg/f:SI 135)
            (const_int 16 [0x10]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 135)
        (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 16 [0x10])))
            (nil))))

(insn 7 6 8 2 arch/arm/kernel/perf_event_v7.c:1122 (set (reg:SI 0 r0)
        (reg/f:SI 136)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 136)
        (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 16 [0x10])))
            (nil))))

(call_insn 8 7 9 2 arch/arm/kernel/perf_event_v7.c:1122 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("_raw_spin_lock_irqsave") [flags 0x41] <function_decl 0x10b86a00 _raw_spin_lock_irqsave>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 9 8 10 2 arch/arm/kernel/perf_event_v7.c:1122 (set (reg/v:SI 134 [ flags ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 10 9 11 2 arch/arm/kernel/perf_event_v7.c:764 (set (reg/v:SI 133 [ val ])
        (asm_operands/v:SI ("mrc p15, 0, %0, c9, c12, 0") ("=r") 0 []
             [] 8903762)) -1 (nil))

(insn 11 10 12 2 arch/arm/kernel/perf_event_v7.c:771 (parallel [
            (asm_operands/v ("isb") ("") 0 []
                 [] 8904658)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 12 11 13 2 arch/arm/kernel/perf_event_v7.c:772 (set (reg:SI 137)
        (and:SI (reg/v:SI 133 [ val ])
            (const_int 62 [0x3e]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg/v:SI 133 [ val ])
        (nil)))

(insn 13 12 14 2 arch/arm/kernel/perf_event_v7.c:772 (asm_operands/v ("mcr p15, 0, %0, c9, c12, 0") ("") 0 [
            (reg:SI 137)
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8904786) -1 (expr_list:REG_DEAD (reg:SI 137)
        (nil)))

(insn 14 13 15 2 arch/arm/kernel/perf_event_v7.c:1125 (set (reg/f:SI 138)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 15 14 16 2 arch/arm/kernel/perf_event_v7.c:1125 (set (reg/f:SI 139)
        (plus:SI (reg/f:SI 138)
            (const_int 16 [0x10]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 138)
        (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 16 [0x10])))
            (nil))))

(insn 16 15 17 2 arch/arm/kernel/perf_event_v7.c:1125 (set (reg:SI 0 r0)
        (reg/f:SI 139)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 139)
        (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 16 [0x10])))
            (nil))))

(insn 17 16 18 2 arch/arm/kernel/perf_event_v7.c:1125 (set (reg:SI 1 r1)
        (reg/v:SI 134 [ flags ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 134 [ flags ])
        (nil)))

(call_insn/j 18 17 19 2 arch/arm/kernel/perf_event_v7.c:1125 (parallel [
            (call (mem:SI (symbol_ref:SI ("_raw_spin_unlock_irqrestore") [flags 0x41] <function_decl 0x10b86d80 _raw_spin_unlock_irqrestore>) [0 S4 A32])
                (const_int 0 [0x0]))
            (return)
            (use (const_int 0 [0x0]))
        ]) 258 {*sibcall_insn} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(16)
4, 8, 11, 14, 15, 18, 19, 42, 43, 246, 247, 248, 249, 250, 251, 252


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 19 18 0)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function armv7pmu_start (armv7pmu_start)[0:1348]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


armv7pmu_start

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr]
;;  ref usage 	r0={5d,3u} r1={4d,1u} r2={3d} r3={3d} r11={1d,2u} r12={3d} r13={1d,4u} r14={2d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={1d,2u} r26={1d,1u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} 
;;    total ref usage 276{254d,22u,0e} in 15{13 regular + 2 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245
0[0,5] 1[5,4] 2[9,3] 3[12,3] 11[15,1] 12[16,3] 13[19,1] 14[20,2] 15[22,2] 16[24,2] 17[26,2] 18[28,2] 19[30,2] 20[32,2] 21[34,2] 22[36,2] 23[38,2] 24[40,2] 25[42,1] 26[43,1] 27[44,2] 28[46,2] 29[48,2] 30[50,2] 31[52,2] 32[54,2] 33[56,2] 34[58,2] 35[60,2] 36[62,2] 37[64,2] 38[66,2] 39[68,2] 40[70,2] 41[72,2] 42[74,2] 43[76,2] 44[78,2] 45[80,2] 46[82,2] 47[84,2] 48[86,2] 49[88,2] 50[90,2] 51[92,2] 52[94,2] 53[96,2] 54[98,2] 55[100,2] 56[102,2] 57[104,2] 58[106,2] 59[108,2] 60[110,2] 61[112,2] 62[114,2] 63[116,2] 64[118,2] 65[120,2] 66[122,2] 67[124,2] 68[126,2] 69[128,2] 70[130,2] 71[132,2] 72[134,2] 73[136,2] 74[138,2] 75[140,2] 76[142,2] 77[144,2] 78[146,2] 79[148,2] 80[150,2] 81[152,2] 82[154,2] 83[156,2] 84[158,2] 85[160,2] 86[162,2] 87[164,2] 88[166,2] 89[168,2] 90[170,2] 91[172,2] 92[174,2] 93[176,2] 94[178,2] 95[180,2] 96[182,2] 97[184,2] 98[186,2] 99[188,2] 100[190,2] 101[192,2] 102[194,2] 103[196,2] 104[198,2] 105[200,2] 106[202,2] 107[204,2] 108[206,2] 109[208,2] 110[210,2] 111[212,2] 112[214,2] 113[216,2] 114[218,2] 115[220,2] 116[222,2] 117[224,2] 118[226,2] 119[228,2] 120[230,2] 121[232,2] 122[234,2] 123[236,2] 124[238,2] 125[240,2] 126[242,2] 127[244,2] 133[246,1] 134[247,1] 135[248,1] 136[249,1] 137[250,1] 138[251,1] 139[252,1] 140[253,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d4(0){ }d8(1){ }d11(2){ }d14(3){ }d15(11){ }d18(12){ }d19(13){ }d21(14){ }d42(25){ }d43(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
4, 8, 11, 14, 15, 18, 19, 21, 42, 43
;; rd  kill	(24)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 42, 43
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(10)
4, 8, 11, 14, 15, 18, 19, 21, 42, 43

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d15(bb 0 insn -1) }u1(13){ d19(bb 0 insn -1) }u2(25){ d42(bb 0 insn -1) }u3(26){ d43(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134 135 136 137 138 139 140
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 133 134 135 136 137 138 139 140
;; live  kill	 14 [lr]
;; rd  in  	(10)
4, 8, 11, 14, 15, 18, 19, 21, 42, 43
;; rd  gen 	(8)
246, 247, 248, 249, 250, 251, 252, 253
;; rd  kill	(10)
20, 21, 246, 247, 248, 249, 250, 251, 252, 253
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(17)
4, 8, 11, 14, 15, 18, 19, 42, 43, 246, 247, 248, 249, 250, 251, 252, 253
;;  UD chains for artificial uses
;;   reg 11 { d15(bb 0 insn -1) }
;;   reg 13 { d19(bb 0 insn -1) }
;;   reg 25 { d42(bb 0 insn -1) }
;;   reg 26 { d43(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 6
;;      reg 135 { d248(bb 2 insn 5) }
;;   UD chains for insn luid 2 uid 7
;;      reg 136 { d249(bb 2 insn 6) }
;;   UD chains for insn luid 3 uid 8
;;      reg 13 { d19(bb 0 insn -1) }
;;      reg 0 { d3(bb 2 insn 7) }
;;   UD chains for insn luid 4 uid 9
;;      reg 0 { d2(bb 2 insn 8) }
;;   UD chains for insn luid 7 uid 12
;;      reg 133 { d246(bb 2 insn 10) }
;;   UD chains for insn luid 8 uid 13
;;      reg 137 { d250(bb 2 insn 12) }
;;   UD chains for insn luid 9 uid 14
;;      reg 138 { d251(bb 2 insn 13) }
;;   UD chains for insn luid 11 uid 16
;;      reg 139 { d252(bb 2 insn 15) }
;;   UD chains for insn luid 12 uid 17
;;      reg 140 { d253(bb 2 insn 16) }
;;   UD chains for insn luid 13 uid 18
;;      reg 134 { d247(bb 2 insn 9) }
;;   UD chains for insn luid 14 uid 19
;;      reg 13 { d19(bb 0 insn -1) }
;;      reg 0 { d1(bb 2 insn 17) }
;;      reg 1 { d6(bb 2 insn 18) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u18(11){ d15(bb 0 insn -1) }u19(13){ d19(bb 0 insn -1) }u20(14){ }u21(25){ d42(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(17)
4, 8, 11, 14, 15, 18, 19, 42, 43, 246, 247, 248, 249, 250, 251, 252, 253
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(17)
4, 8, 11, 14, 15, 18, 19, 42, 43, 246, 247, 248, 249, 250, 251, 252, 253
;;  UD chains for artificial uses
;;   reg 11 { d15(bb 0 insn -1) }
;;   reg 13 { d19(bb 0 insn -1) }
;;   reg 14 { }
;;   reg 25 { d42(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 19 to worklist
  Adding insn 14 to worklist
  Adding insn 11 to worklist
  Adding insn 10 to worklist
  Adding insn 8 to worklist
Finished finding needed instructions:
Processing use of (reg 13 sp) in insn 8:
Processing use of (reg 0 r0) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 136) in insn 7:
  Adding insn 6 to worklist
Processing use of (reg 135) in insn 6:
  Adding insn 5 to worklist
Processing use of (reg 138) in insn 14:
  Adding insn 13 to worklist
Processing use of (reg 137) in insn 13:
  Adding insn 12 to worklist
Processing use of (reg 133 [ val ]) in insn 12:
Processing use of (reg 13 sp) in insn 19:
Processing use of (reg 0 r0) in insn 19:
  Adding insn 17 to worklist
Processing use of (reg 1 r1) in insn 19:
  Adding insn 18 to worklist
Processing use of (reg 134 [ flags ]) in insn 18:
  Adding insn 9 to worklist
Processing use of (reg 0 r0) in insn 9:
Processing use of (reg 140) in insn 17:
  Adding insn 16 to worklist
Processing use of (reg 139) in insn 16:
  Adding insn 15 to worklist


armv7pmu_start

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr]
;;  ref usage 	r0={5d,3u} r1={4d,1u} r2={3d} r3={3d} r11={1d,2u} r12={3d} r13={1d,4u} r14={2d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={1d,2u} r26={1d,1u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} 
;;    total ref usage 276{254d,22u,0e} in 15{13 regular + 2 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245
0[0,5] 1[5,4] 2[9,3] 3[12,3] 11[15,1] 12[16,3] 13[19,1] 14[20,2] 15[22,2] 16[24,2] 17[26,2] 18[28,2] 19[30,2] 20[32,2] 21[34,2] 22[36,2] 23[38,2] 24[40,2] 25[42,1] 26[43,1] 27[44,2] 28[46,2] 29[48,2] 30[50,2] 31[52,2] 32[54,2] 33[56,2] 34[58,2] 35[60,2] 36[62,2] 37[64,2] 38[66,2] 39[68,2] 40[70,2] 41[72,2] 42[74,2] 43[76,2] 44[78,2] 45[80,2] 46[82,2] 47[84,2] 48[86,2] 49[88,2] 50[90,2] 51[92,2] 52[94,2] 53[96,2] 54[98,2] 55[100,2] 56[102,2] 57[104,2] 58[106,2] 59[108,2] 60[110,2] 61[112,2] 62[114,2] 63[116,2] 64[118,2] 65[120,2] 66[122,2] 67[124,2] 68[126,2] 69[128,2] 70[130,2] 71[132,2] 72[134,2] 73[136,2] 74[138,2] 75[140,2] 76[142,2] 77[144,2] 78[146,2] 79[148,2] 80[150,2] 81[152,2] 82[154,2] 83[156,2] 84[158,2] 85[160,2] 86[162,2] 87[164,2] 88[166,2] 89[168,2] 90[170,2] 91[172,2] 92[174,2] 93[176,2] 94[178,2] 95[180,2] 96[182,2] 97[184,2] 98[186,2] 99[188,2] 100[190,2] 101[192,2] 102[194,2] 103[196,2] 104[198,2] 105[200,2] 106[202,2] 107[204,2] 108[206,2] 109[208,2] 110[210,2] 111[212,2] 112[214,2] 113[216,2] 114[218,2] 115[220,2] 116[222,2] 117[224,2] 118[226,2] 119[228,2] 120[230,2] 121[232,2] 122[234,2] 123[236,2] 124[238,2] 125[240,2] 126[242,2] 127[244,2] 133[246,1] 134[247,1] 135[248,1] 136[249,1] 137[250,1] 138[251,1] 139[252,1] 140[253,1] 
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134 135 136 137 138 139 140
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 133 134 135 136 137 138 139 140
;; live  kill	 14 [lr]
;; rd  in  	(10)
4, 8, 11, 14, 15, 18, 19, 21, 42, 43
;; rd  gen 	(8)
246, 247, 248, 249, 250, 251, 252, 253
;; rd  kill	(10)
20, 21, 246, 247, 248, 249, 250, 251, 252, 253

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)

(insn 5 2 6 2 arch/arm/kernel/perf_event_v7.c:1112 (set (reg/f:SI 135)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 6 5 7 2 arch/arm/kernel/perf_event_v7.c:1112 (set (reg/f:SI 136)
        (plus:SI (reg/f:SI 135)
            (const_int 16 [0x10]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 135)
        (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 16 [0x10])))
            (nil))))

(insn 7 6 8 2 arch/arm/kernel/perf_event_v7.c:1112 (set (reg:SI 0 r0)
        (reg/f:SI 136)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 136)
        (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 16 [0x10])))
            (nil))))

(call_insn 8 7 9 2 arch/arm/kernel/perf_event_v7.c:1112 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("_raw_spin_lock_irqsave") [flags 0x41] <function_decl 0x10b86a00 _raw_spin_lock_irqsave>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 9 8 10 2 arch/arm/kernel/perf_event_v7.c:1112 (set (reg/v:SI 134 [ flags ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 10 9 11 2 arch/arm/kernel/perf_event_v7.c:764 (set (reg/v:SI 133 [ val ])
        (asm_operands/v:SI ("mrc p15, 0, %0, c9, c12, 0") ("=r") 0 []
             [] 8903762)) -1 (nil))

(insn 11 10 12 2 arch/arm/kernel/perf_event_v7.c:771 (parallel [
            (asm_operands/v ("isb") ("") 0 []
                 [] 8904658)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 12 11 13 2 arch/arm/kernel/perf_event_v7.c:772 (set (reg:SI 137)
        (ior:SI (reg/v:SI 133 [ val ])
            (const_int 1 [0x1]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg/v:SI 133 [ val ])
        (nil)))

(insn 13 12 14 2 arch/arm/kernel/perf_event_v7.c:772 (set (reg:SI 138)
        (and:SI (reg:SI 137)
            (const_int 63 [0x3f]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 137)
        (nil)))

(insn 14 13 15 2 arch/arm/kernel/perf_event_v7.c:772 (asm_operands/v ("mcr p15, 0, %0, c9, c12, 0") ("") 0 [
            (reg:SI 138)
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8904786) -1 (expr_list:REG_DEAD (reg:SI 138)
        (nil)))

(insn 15 14 16 2 arch/arm/kernel/perf_event_v7.c:1115 (set (reg/f:SI 139)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 16 15 17 2 arch/arm/kernel/perf_event_v7.c:1115 (set (reg/f:SI 140)
        (plus:SI (reg/f:SI 139)
            (const_int 16 [0x10]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 139)
        (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 16 [0x10])))
            (nil))))

(insn 17 16 18 2 arch/arm/kernel/perf_event_v7.c:1115 (set (reg:SI 0 r0)
        (reg/f:SI 140)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 140)
        (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 16 [0x10])))
            (nil))))

(insn 18 17 19 2 arch/arm/kernel/perf_event_v7.c:1115 (set (reg:SI 1 r1)
        (reg/v:SI 134 [ flags ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 134 [ flags ])
        (nil)))

(call_insn/j 19 18 20 2 arch/arm/kernel/perf_event_v7.c:1115 (parallel [
            (call (mem:SI (symbol_ref:SI ("_raw_spin_unlock_irqrestore") [flags 0x41] <function_decl 0x10b86d80 _raw_spin_unlock_irqrestore>) [0 S4 A32])
                (const_int 0 [0x0]))
            (return)
            (use (const_int 0 [0x0]))
        ]) 258 {*sibcall_insn} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(17)
4, 8, 11, 14, 15, 18, 19, 42, 43, 246, 247, 248, 249, 250, 251, 252, 253


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 20 19 0)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function armv7pmu_disable_event (armv7pmu_disable_event)[0:1346]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 16 n_edges 21 count 29 (  1.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 16 n_edges 21 count 30 (  1.9)
df_worklist_dataflow_doublequeue:n_basic_blocks 16 n_edges 21 count 30 (  1.9)


armv7pmu_disable_event

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={9d,5u} r1={8d,4u} r2={7d,2u} r3={5d} r11={1d,15u} r12={5d} r13={1d,21u,2d} r14={4d,1u} r15={4d} r16={4d} r17={4d} r18={4d} r19={4d} r20={4d} r21={4d} r22={4d} r23={4d} r24={9d,6u} r25={1d,15u} r26={1d,14u} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r81={4d} r82={4d} r83={4d} r84={4d} r85={4d} r86={4d} r87={4d} r88={4d} r89={4d} r90={4d} r91={4d} r92={4d} r93={4d} r94={4d} r95={4d} r96={4d} r97={4d} r98={4d} r99={4d} r100={4d} r101={4d} r102={4d} r103={4d} r104={4d} r105={4d} r106={4d} r107={4d} r108={4d} r109={4d} r110={4d} r111={4d} r112={4d} r113={4d} r114={4d} r115={4d} r116={4d} r117={4d} r118={4d} r119={4d} r120={4d} r121={4d} r122={4d} r123={4d} r124={4d} r125={4d} r126={4d} r127={4d} r133={2d,1u} r135={2d,1u} r138={1d,1u} r140={1d,9u} r141={1d,2u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u,1d} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u,1d} r160={1d,1u} 
;;    total ref usage 629{513d,112u,4e} in 52{48 regular + 4 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490
0[0,9] 1[9,8] 2[17,7] 3[24,5] 11[29,1] 12[30,5] 13[35,1] 14[36,4] 15[40,4] 16[44,4] 17[48,4] 18[52,4] 19[56,4] 20[60,4] 21[64,4] 22[68,4] 23[72,4] 24[76,9] 25[85,1] 26[86,1] 27[87,4] 28[91,4] 29[95,4] 30[99,4] 31[103,4] 32[107,4] 33[111,4] 34[115,4] 35[119,4] 36[123,4] 37[127,4] 38[131,4] 39[135,4] 40[139,4] 41[143,4] 42[147,4] 43[151,4] 44[155,4] 45[159,4] 46[163,4] 47[167,4] 48[171,4] 49[175,4] 50[179,4] 51[183,4] 52[187,4] 53[191,4] 54[195,4] 55[199,4] 56[203,4] 57[207,4] 58[211,4] 59[215,4] 60[219,4] 61[223,4] 62[227,4] 63[231,4] 64[235,4] 65[239,4] 66[243,4] 67[247,4] 68[251,4] 69[255,4] 70[259,4] 71[263,4] 72[267,4] 73[271,4] 74[275,4] 75[279,4] 76[283,4] 77[287,4] 78[291,4] 79[295,4] 80[299,4] 81[303,4] 82[307,4] 83[311,4] 84[315,4] 85[319,4] 86[323,4] 87[327,4] 88[331,4] 89[335,4] 90[339,4] 91[343,4] 92[347,4] 93[351,4] 94[355,4] 95[359,4] 96[363,4] 97[367,4] 98[371,4] 99[375,4] 100[379,4] 101[383,4] 102[387,4] 103[391,4] 104[395,4] 105[399,4] 106[403,4] 107[407,4] 108[411,4] 109[415,4] 110[419,4] 111[423,4] 112[427,4] 113[431,4] 114[435,4] 115[439,4] 116[443,4] 117[447,4] 118[451,4] 119[455,4] 120[459,4] 121[463,4] 122[467,4] 123[471,4] 124[475,4] 125[479,4] 126[483,4] 127[487,4] 133[491,2] 135[493,2] 138[495,1] 140[496,1] 141[497,1] 144[498,1] 145[499,1] 146[500,1] 148[501,1] 149[502,1] 150[503,1] 151[504,1] 152[505,1] 153[506,1] 154[507,1] 155[508,1] 157[509,1] 158[510,1] 159[511,1] 160[512,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d8(0){ }d16(1){ }d23(2){ }d28(3){ }d29(11){ }d34(12){ }d35(13){ }d39(14){ }d85(25){ }d86(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
8, 16, 23, 28, 29, 34, 35, 39, 85, 86
;; rd  kill	(42)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 85, 86
;; lr  out 	 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(10)
8, 16, 23, 28, 29, 34, 35, 39, 85, 86

( 0 )->[2]->( 4 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d29(bb 0 insn -1) }u1(13){ d35(bb 0 insn -1) }u2(25){ d85(bb 0 insn -1) }u3(26){ d86(bb 0 insn -1) }}
;; lr  in  	 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 138 140 141
;; live  in  	 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 24 [cc] 138 140 141
;; live  kill	 14 [lr]
;; rd  in  	(10)
8, 16, 23, 28, 29, 34, 35, 39, 85, 86
;; rd  gen 	(5)
7, 83, 495, 496, 497
;; rd  kill	(25)
0, 1, 2, 3, 4, 5, 6, 7, 8, 36, 37, 38, 39, 76, 77, 78, 79, 80, 81, 82, 83, 84, 495, 496, 497
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 138 140 141
;; live  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 138 140 141
;; rd  out 	(13)
7, 16, 23, 28, 29, 34, 35, 83, 85, 86, 495, 496, 497
;;  UD chains for artificial uses
;;   reg 11 { d29(bb 0 insn -1) }
;;   reg 13 { d35(bb 0 insn -1) }
;;   reg 25 { d85(bb 0 insn -1) }
;;   reg 26 { d86(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 3
;;      reg 1 { d16(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 9
;;      reg 141 { d497(bb 2 insn 7) }
;;   UD chains for insn luid 3 uid 10
;;      reg 13 { d35(bb 0 insn -1) }
;;      reg 0 { d0(bb 2 insn 9) }
;;   UD chains for insn luid 4 uid 11
;;      reg 0 { d7(bb 2 insn 10) }
;;   UD chains for insn luid 5 uid 13
;;      reg 140 { d496(bb 2 insn 3) }
;;   UD chains for insn luid 6 uid 14
;;      reg 24 { d83(bb 2 insn 13) }

( 2 )->[3]->( 8 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u11(11){ d29(bb 0 insn -1) }u12(13){ d35(bb 0 insn -1) }u13(25){ d85(bb 0 insn -1) }u14(26){ d86(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 140
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 135
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 140
;; live  gen 	 135
;; live  kill	
;; rd  in  	(13)
7, 16, 23, 28, 29, 34, 35, 83, 85, 86, 495, 496, 497
;; rd  gen 	(1)
494
;; rd  kill	(2)
493, 494
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 138 140
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 138 140
;; rd  out 	(14)
7, 16, 23, 28, 29, 34, 35, 83, 85, 86, 494, 495, 496, 497
;;  UD chains for artificial uses
;;   reg 11 { d29(bb 0 insn -1) }
;;   reg 13 { d35(bb 0 insn -1) }
;;   reg 25 { d85(bb 0 insn -1) }
;;   reg 26 { d86(bb 0 insn -1) }

( 2 )->[4]->( 6 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u15(11){ d29(bb 0 insn -1) }u16(13){ d35(bb 0 insn -1) }u17(25){ d85(bb 0 insn -1) }u18(26){ d86(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 138 140 141
;; lr  use 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 138 140 141
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
7, 16, 23, 28, 29, 34, 35, 83, 85, 86, 495, 496, 497
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 140 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 140 141
;; rd  out 	(13)
7, 16, 23, 28, 29, 34, 35, 83, 85, 86, 495, 496, 497
;;  UD chains for artificial uses
;;   reg 11 { d29(bb 0 insn -1) }
;;   reg 13 { d35(bb 0 insn -1) }
;;   reg 25 { d85(bb 0 insn -1) }
;;   reg 26 { d86(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 22
;;      reg 24 { d83(bb 2 insn 13) }

( 4 )->[5]->( 6 7 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u20(11){ d29(bb 0 insn -1) }u21(13){ d35(bb 0 insn -1) }u22(25){ d85(bb 0 insn -1) }u23(26){ d86(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 140 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141
;; lr  def 	 24 [cc] 144 145 146
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 140 141
;; live  gen 	 24 [cc] 144 145 146
;; live  kill	
;; rd  in  	(13)
7, 16, 23, 28, 29, 34, 35, 83, 85, 86, 495, 496, 497
;; rd  gen 	(4)
77, 498, 499, 500
;; rd  kill	(12)
76, 77, 78, 79, 80, 81, 82, 83, 84, 498, 499, 500
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 140
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 140
;; rd  out 	(16)
7, 16, 23, 28, 29, 34, 35, 77, 85, 86, 495, 496, 497, 498, 499, 500
;;  UD chains for artificial uses
;;   reg 11 { d29(bb 0 insn -1) }
;;   reg 13 { d35(bb 0 insn -1) }
;;   reg 25 { d85(bb 0 insn -1) }
;;   reg 26 { d86(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 25
;;      reg 141 { d497(bb 2 insn 7) }
;;   UD chains for insn luid 1 uid 26
;;      reg 144 { d498(bb 5 insn 25) }
;;   UD chains for insn luid 2 uid 27
;;      reg 146 { d500(bb 5 insn 26) }
;;   UD chains for insn luid 3 uid 28
;;      reg 140 { d496(bb 2 insn 3) }
;;      reg 145 { d499(bb 5 insn 27) }
;;   UD chains for insn luid 4 uid 29
;;      reg 24 { d77(bb 5 insn 28) }

( 4 5 )->[6]->( 10 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u30(11){ d29(bb 0 insn -1) }u31(13){ d35(bb 0 insn -1) }u32(25){ d85(bb 0 insn -1) }u33(26){ d86(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 140
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 148 149
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 140
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 148 149
;; live  kill	 14 [lr]
;; rd  in  	(17)
7, 16, 23, 28, 29, 34, 35, 77, 83, 85, 86, 495, 496, 497, 498, 499, 500
;; rd  gen 	(3)
6, 501, 502
;; rd  kill	(15)
0, 1, 2, 3, 4, 5, 6, 7, 8, 36, 37, 38, 39, 501, 502
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 140
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 140
;; rd  out 	(19)
6, 16, 23, 28, 29, 34, 35, 77, 83, 85, 86, 495, 496, 497, 498, 499, 500, 501, 502
;;  UD chains for artificial uses
;;   reg 11 { d29(bb 0 insn -1) }
;;   reg 13 { d35(bb 0 insn -1) }
;;   reg 25 { d85(bb 0 insn -1) }
;;   reg 26 { d86(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 34
;;      reg 13 { d35(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 35
;;      reg 149 { d502(bb 6 insn 34) }
;;   eq_note reg 13 { }
;;   UD chains for insn luid 3 uid 37
;;      reg 148 { d501(bb 6 insn 35) }
;;   UD chains for insn luid 4 uid 38
;;      reg 140 { d496(bb 2 insn 3) }
;;   UD chains for insn luid 5 uid 39
;;      reg 13 { d35(bb 0 insn -1) }
;;      reg 0 { d3(bb 6 insn 36) }
;;      reg 1 { d14(bb 6 insn 37) }
;;      reg 2 { d21(bb 6 insn 38) }

( 5 )->[7]->( 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u43(11){ d29(bb 0 insn -1) }u44(13){ d35(bb 0 insn -1) }u45(25){ d85(bb 0 insn -1) }u46(26){ d86(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 140
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 135 150 151
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 140
;; live  gen 	 135 150 151
;; live  kill	
;; rd  in  	(16)
7, 16, 23, 28, 29, 34, 35, 77, 85, 86, 495, 496, 497, 498, 499, 500
;; rd  gen 	(3)
493, 503, 504
;; rd  kill	(4)
493, 494, 503, 504
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 138 140
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 138 140
;; rd  out 	(19)
7, 16, 23, 28, 29, 34, 35, 77, 85, 86, 493, 495, 496, 497, 498, 499, 500, 503, 504
;;  UD chains for artificial uses
;;   reg 11 { d29(bb 0 insn -1) }
;;   reg 13 { d35(bb 0 insn -1) }
;;   reg 25 { d85(bb 0 insn -1) }
;;   reg 26 { d86(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 44
;;      reg 140 { d496(bb 2 insn 3) }
;;   UD chains for insn luid 2 uid 46
;;      reg 150 { d503(bb 7 insn 44) }
;;      reg 151 { d504(bb 7 insn 45) }
;;   eq_note reg 150 { }

( 7 3 )->[8]->( 10 9 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u51(11){ d29(bb 0 insn -1) }u52(13){ d35(bb 0 insn -1) }u53(25){ d85(bb 0 insn -1) }u54(26){ d86(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 138 140
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 138 140
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(21)
7, 16, 23, 28, 29, 34, 35, 77, 83, 85, 86, 493, 494, 495, 496, 497, 498, 499, 500, 503, 504
;; rd  gen 	(1)
81
;; rd  kill	(9)
76, 77, 78, 79, 80, 81, 82, 83, 84
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 140
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 140
;; rd  out 	(20)
7, 16, 23, 28, 29, 34, 35, 81, 85, 86, 493, 494, 495, 496, 497, 498, 499, 500, 503, 504
;;  UD chains for artificial uses
;;   reg 11 { d29(bb 0 insn -1) }
;;   reg 13 { d35(bb 0 insn -1) }
;;   reg 25 { d85(bb 0 insn -1) }
;;   reg 26 { d86(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 49
;;      reg 135 { d494(bb 3 insn 16) d493(bb 7 insn 46) }
;;   UD chains for insn luid 1 uid 50
;;      reg 140 { d496(bb 2 insn 3) }
;;   UD chains for insn luid 2 uid 51
;;      reg 24 { d81(bb 8 insn 50) }

( 8 )->[9]->( 14 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u58(11){ d29(bb 0 insn -1) }u59(13){ d35(bb 0 insn -1) }u60(25){ d85(bb 0 insn -1) }u61(26){ d86(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; live  gen 	 133
;; live  kill	
;; rd  in  	(20)
7, 16, 23, 28, 29, 34, 35, 81, 85, 86, 493, 494, 495, 496, 497, 498, 499, 500, 503, 504
;; rd  gen 	(1)
492
;; rd  kill	(2)
491, 492
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 138
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138
;; rd  out 	(21)
7, 16, 23, 28, 29, 34, 35, 81, 85, 86, 492, 493, 494, 495, 496, 497, 498, 499, 500, 503, 504
;;  UD chains for artificial uses
;;   reg 11 { d29(bb 0 insn -1) }
;;   reg 13 { d35(bb 0 insn -1) }
;;   reg 25 { d85(bb 0 insn -1) }
;;   reg 26 { d86(bb 0 insn -1) }

( 8 6 )->[10]->( 12 11 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u62(11){ d29(bb 0 insn -1) }u63(13){ d35(bb 0 insn -1) }u64(25){ d85(bb 0 insn -1) }u65(26){ d86(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 140
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 140
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(25)
6, 7, 16, 23, 28, 29, 34, 35, 77, 81, 83, 85, 86, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504
;; rd  gen 	(1)
80
;; rd  kill	(9)
76, 77, 78, 79, 80, 81, 82, 83, 84
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 140
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 140
;; rd  out 	(23)
6, 7, 16, 23, 28, 29, 34, 35, 80, 85, 86, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504
;;  UD chains for artificial uses
;;   reg 11 { d29(bb 0 insn -1) }
;;   reg 13 { d35(bb 0 insn -1) }
;;   reg 25 { d85(bb 0 insn -1) }
;;   reg 26 { d86(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 58
;;      reg 140 { d496(bb 2 insn 3) }
;;   UD chains for insn luid 1 uid 59
;;      reg 24 { d80(bb 10 insn 58) }

( 10 )->[11]->( 12 13 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u68(11){ d29(bb 0 insn -1) }u69(13){ d35(bb 0 insn -1) }u70(25){ d85(bb 0 insn -1) }u71(26){ d86(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 140
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 24 [cc] 152 153 154 155
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 140
;; live  gen 	 24 [cc] 152 153 154 155
;; live  kill	
;; rd  in  	(23)
6, 7, 16, 23, 28, 29, 34, 35, 80, 85, 86, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504
;; rd  gen 	(5)
76, 505, 506, 507, 508
;; rd  kill	(13)
76, 77, 78, 79, 80, 81, 82, 83, 84, 505, 506, 507, 508
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 140
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 140
;; rd  out 	(27)
6, 7, 16, 23, 28, 29, 34, 35, 76, 85, 86, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508
;;  UD chains for artificial uses
;;   reg 11 { d29(bb 0 insn -1) }
;;   reg 13 { d35(bb 0 insn -1) }
;;   reg 25 { d85(bb 0 insn -1) }
;;   reg 26 { d86(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 62
;;      reg 152 { d505(bb 11 insn 61) }
;;   UD chains for insn luid 2 uid 63
;;      reg 153 { d506(bb 11 insn 62) }
;;   UD chains for insn luid 3 uid 64
;;      reg 155 { d508(bb 11 insn 63) }
;;   UD chains for insn luid 4 uid 65
;;      reg 140 { d496(bb 2 insn 3) }
;;      reg 154 { d507(bb 11 insn 64) }
;;   UD chains for insn luid 5 uid 66
;;      reg 24 { d76(bb 11 insn 65) }

( 10 11 )->[12]->( 15 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u78(11){ d29(bb 0 insn -1) }u79(13){ d35(bb 0 insn -1) }u80(25){ d85(bb 0 insn -1) }u81(26){ d86(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 140
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 157 158
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 140
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 157 158
;; live  kill	 14 [lr]
;; rd  in  	(28)
6, 7, 16, 23, 28, 29, 34, 35, 76, 80, 85, 86, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508
;; rd  gen 	(3)
5, 509, 510
;; rd  kill	(15)
0, 1, 2, 3, 4, 5, 6, 7, 8, 36, 37, 38, 39, 509, 510
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; rd  out 	(29)
5, 16, 23, 28, 29, 34, 35, 76, 80, 85, 86, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510
;;  UD chains for artificial uses
;;   reg 11 { d29(bb 0 insn -1) }
;;   reg 13 { d35(bb 0 insn -1) }
;;   reg 25 { d85(bb 0 insn -1) }
;;   reg 26 { d86(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 71
;;      reg 13 { d35(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 72
;;      reg 158 { d510(bb 12 insn 71) }
;;   eq_note reg 13 { }
;;   UD chains for insn luid 3 uid 74
;;      reg 157 { d509(bb 12 insn 72) }
;;   UD chains for insn luid 4 uid 75
;;      reg 140 { d496(bb 2 insn 3) }
;;   UD chains for insn luid 5 uid 76
;;      reg 13 { d35(bb 0 insn -1) }
;;      reg 0 { d2(bb 12 insn 73) }
;;      reg 1 { d12(bb 12 insn 74) }
;;      reg 2 { d19(bb 12 insn 75) }

( 11 )->[13]->( 14 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u91(11){ d29(bb 0 insn -1) }u92(13){ d35(bb 0 insn -1) }u93(25){ d85(bb 0 insn -1) }u94(26){ d86(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 140
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 133 159 160
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 140
;; live  gen 	 133 159 160
;; live  kill	
;; rd  in  	(27)
6, 7, 16, 23, 28, 29, 34, 35, 76, 85, 86, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508
;; rd  gen 	(3)
491, 511, 512
;; rd  kill	(4)
491, 492, 511, 512
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 138
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138
;; rd  out 	(30)
6, 7, 16, 23, 28, 29, 34, 35, 76, 85, 86, 491, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 511, 512
;;  UD chains for artificial uses
;;   reg 11 { d29(bb 0 insn -1) }
;;   reg 13 { d35(bb 0 insn -1) }
;;   reg 25 { d85(bb 0 insn -1) }
;;   reg 26 { d86(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 81
;;      reg 140 { d496(bb 2 insn 3) }
;;   UD chains for insn luid 2 uid 83
;;      reg 159 { d511(bb 13 insn 81) }
;;      reg 160 { d512(bb 13 insn 82) }
;;   eq_note reg 159 { }

( 13 9 )->[14]->( 15 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u99(11){ d29(bb 0 insn -1) }u100(13){ d35(bb 0 insn -1) }u101(25){ d85(bb 0 insn -1) }u102(26){ d86(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138
;; live  gen 	
;; live  kill	
;; rd  in  	(32)
6, 7, 16, 23, 28, 29, 34, 35, 76, 81, 85, 86, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 511, 512
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; rd  out 	(32)
6, 7, 16, 23, 28, 29, 34, 35, 76, 81, 85, 86, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 511, 512
;;  UD chains for artificial uses
;;   reg 11 { d29(bb 0 insn -1) }
;;   reg 13 { d35(bb 0 insn -1) }
;;   reg 25 { d85(bb 0 insn -1) }
;;   reg 26 { d86(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 86
;;      reg 133 { d492(bb 9 insn 53) d491(bb 13 insn 83) }

( 14 12 )->[15]->( 1 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u104(11){ d29(bb 0 insn -1) }u105(13){ d35(bb 0 insn -1) }u106(25){ d85(bb 0 insn -1) }u107(26){ d86(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	
;; rd  in  	(36)
5, 6, 7, 16, 23, 28, 29, 34, 35, 76, 80, 81, 85, 86, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(36)
5, 6, 7, 16, 23, 28, 29, 34, 35, 76, 80, 81, 85, 86, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512
;;  UD chains for artificial uses
;;   reg 11 { d29(bb 0 insn -1) }
;;   reg 13 { d35(bb 0 insn -1) }
;;   reg 25 { d85(bb 0 insn -1) }
;;   reg 26 { d86(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 92
;;      reg 138 { d495(bb 2 insn 11) }
;;   UD chains for insn luid 2 uid 93
;;      reg 13 { d35(bb 0 insn -1) }
;;      reg 0 { d1(bb 15 insn 91) }
;;      reg 1 { d10(bb 15 insn 92) }

( 15 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u112(11){ d29(bb 0 insn -1) }u113(13){ d35(bb 0 insn -1) }u114(14){ }u115(25){ d85(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(36)
5, 6, 7, 16, 23, 28, 29, 34, 35, 76, 80, 81, 85, 86, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(36)
5, 6, 7, 16, 23, 28, 29, 34, 35, 76, 80, 81, 85, 86, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512
;;  UD chains for artificial uses
;;   reg 11 { d29(bb 0 insn -1) }
;;   reg 13 { d35(bb 0 insn -1) }
;;   reg 14 { }
;;   reg 25 { d85(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 14 to worklist
  Adding insn 10 to worklist
  Adding insn 102 to worklist
  Adding insn 22 to worklist
  Adding insn 29 to worklist
  Adding insn 104 to worklist
  Adding insn 39 to worklist
  Adding insn 51 to worklist
  Adding insn 49 to worklist
  Adding insn 106 to worklist
  Adding insn 59 to worklist
  Adding insn 66 to worklist
  Adding insn 108 to worklist
  Adding insn 76 to worklist
  Adding insn 86 to worklist
  Adding insn 93 to worklist
Finished finding needed instructions:
Processing use of (reg 13 sp) in insn 93:
Processing use of (reg 0 r0) in insn 93:
  Adding insn 91 to worklist
Processing use of (reg 1 r1) in insn 93:
  Adding insn 92 to worklist
Processing use of (reg 138 [ flags ]) in insn 92:
  Adding insn 11 to worklist
Processing use of (reg 0 r0) in insn 11:
Processing use of (reg 133 [ val ]) in insn 86:
  Adding insn 53 to worklist
  Adding insn 83 to worklist
Processing use of (reg 159) in insn 83:
  Adding insn 81 to worklist
Processing use of (reg 160) in insn 83:
  Adding insn 82 to worklist
Processing use of (reg 140 [ idx ]) in insn 81:
  Adding insn 3 to worklist
Processing use of (reg 1 r1) in insn 3:
Processing use of (reg 13 sp) in insn 76:
Processing use of (reg 0 r0) in insn 76:
  Adding insn 73 to worklist
Processing use of (reg 1 r1) in insn 76:
  Adding insn 74 to worklist
Processing use of (reg 2 r2) in insn 76:
  Adding insn 75 to worklist
Processing use of (reg 140 [ idx ]) in insn 75:
Processing use of (reg 157) in insn 74:
  Adding insn 72 to worklist
Processing use of (reg 158) in insn 72:
  Adding insn 71 to worklist
Processing use of (reg 13 sp) in insn 71:
Processing use of (reg 24 cc) in insn 66:
  Adding insn 65 to worklist
Processing use of (reg 140 [ idx ]) in insn 65:
Processing use of (reg 154) in insn 65:
  Adding insn 64 to worklist
Processing use of (reg 155 [ <variable>.num_events ]) in insn 64:
  Adding insn 63 to worklist
Processing use of (reg 153 [ armpmu ]) in insn 63:
  Adding insn 62 to worklist
Processing use of (reg 152) in insn 62:
  Adding insn 61 to worklist
Processing use of (reg 24 cc) in insn 59:
  Adding insn 58 to worklist
Processing use of (reg 140 [ idx ]) in insn 58:
Processing use of (reg 135 [ val ]) in insn 49:
  Adding insn 16 to worklist
  Adding insn 46 to worklist
Processing use of (reg 150) in insn 46:
  Adding insn 44 to worklist
Processing use of (reg 151) in insn 46:
  Adding insn 45 to worklist
Processing use of (reg 140 [ idx ]) in insn 44:
Processing use of (reg 24 cc) in insn 51:
  Adding insn 50 to worklist
Processing use of (reg 140 [ idx ]) in insn 50:
Processing use of (reg 13 sp) in insn 39:
Processing use of (reg 0 r0) in insn 39:
  Adding insn 36 to worklist
Processing use of (reg 1 r1) in insn 39:
  Adding insn 37 to worklist
Processing use of (reg 2 r2) in insn 39:
  Adding insn 38 to worklist
Processing use of (reg 140 [ idx ]) in insn 38:
Processing use of (reg 148) in insn 37:
  Adding insn 35 to worklist
Processing use of (reg 149) in insn 35:
  Adding insn 34 to worklist
Processing use of (reg 13 sp) in insn 34:
Processing use of (reg 24 cc) in insn 29:
  Adding insn 28 to worklist
Processing use of (reg 140 [ idx ]) in insn 28:
Processing use of (reg 145) in insn 28:
  Adding insn 27 to worklist
Processing use of (reg 146 [ <variable>.num_events ]) in insn 27:
  Adding insn 26 to worklist
Processing use of (reg 144 [ armpmu ]) in insn 26:
  Adding insn 25 to worklist
Processing use of (reg 141) in insn 25:
  Adding insn 7 to worklist
Processing use of (reg 24 cc) in insn 22:
  Adding insn 13 to worklist
Processing use of (reg 140 [ idx ]) in insn 13:
Processing use of (reg 13 sp) in insn 10:
Processing use of (reg 0 r0) in insn 10:
  Adding insn 9 to worklist
Processing use of (reg 141) in insn 9:
Processing use of (reg 24 cc) in insn 14:


armv7pmu_disable_event

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={9d,5u} r1={8d,4u} r2={7d,2u} r3={5d} r11={1d,15u} r12={5d} r13={1d,21u,2d} r14={4d,1u} r15={4d} r16={4d} r17={4d} r18={4d} r19={4d} r20={4d} r21={4d} r22={4d} r23={4d} r24={9d,6u} r25={1d,15u} r26={1d,14u} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r81={4d} r82={4d} r83={4d} r84={4d} r85={4d} r86={4d} r87={4d} r88={4d} r89={4d} r90={4d} r91={4d} r92={4d} r93={4d} r94={4d} r95={4d} r96={4d} r97={4d} r98={4d} r99={4d} r100={4d} r101={4d} r102={4d} r103={4d} r104={4d} r105={4d} r106={4d} r107={4d} r108={4d} r109={4d} r110={4d} r111={4d} r112={4d} r113={4d} r114={4d} r115={4d} r116={4d} r117={4d} r118={4d} r119={4d} r120={4d} r121={4d} r122={4d} r123={4d} r124={4d} r125={4d} r126={4d} r127={4d} r133={2d,1u} r135={2d,1u} r138={1d,1u} r140={1d,9u} r141={1d,2u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u,1d} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u,1d} r160={1d,1u} 
;;    total ref usage 629{513d,112u,4e} in 52{48 regular + 4 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490
0[0,9] 1[9,8] 2[17,7] 3[24,5] 11[29,1] 12[30,5] 13[35,1] 14[36,4] 15[40,4] 16[44,4] 17[48,4] 18[52,4] 19[56,4] 20[60,4] 21[64,4] 22[68,4] 23[72,4] 24[76,9] 25[85,1] 26[86,1] 27[87,4] 28[91,4] 29[95,4] 30[99,4] 31[103,4] 32[107,4] 33[111,4] 34[115,4] 35[119,4] 36[123,4] 37[127,4] 38[131,4] 39[135,4] 40[139,4] 41[143,4] 42[147,4] 43[151,4] 44[155,4] 45[159,4] 46[163,4] 47[167,4] 48[171,4] 49[175,4] 50[179,4] 51[183,4] 52[187,4] 53[191,4] 54[195,4] 55[199,4] 56[203,4] 57[207,4] 58[211,4] 59[215,4] 60[219,4] 61[223,4] 62[227,4] 63[231,4] 64[235,4] 65[239,4] 66[243,4] 67[247,4] 68[251,4] 69[255,4] 70[259,4] 71[263,4] 72[267,4] 73[271,4] 74[275,4] 75[279,4] 76[283,4] 77[287,4] 78[291,4] 79[295,4] 80[299,4] 81[303,4] 82[307,4] 83[311,4] 84[315,4] 85[319,4] 86[323,4] 87[327,4] 88[331,4] 89[335,4] 90[339,4] 91[343,4] 92[347,4] 93[351,4] 94[355,4] 95[359,4] 96[363,4] 97[367,4] 98[371,4] 99[375,4] 100[379,4] 101[383,4] 102[387,4] 103[391,4] 104[395,4] 105[399,4] 106[403,4] 107[407,4] 108[411,4] 109[415,4] 110[419,4] 111[423,4] 112[427,4] 113[431,4] 114[435,4] 115[439,4] 116[443,4] 117[447,4] 118[451,4] 119[455,4] 120[459,4] 121[463,4] 122[467,4] 123[471,4] 124[475,4] 125[479,4] 126[483,4] 127[487,4] 133[491,2] 135[493,2] 138[495,1] 140[496,1] 141[497,1] 144[498,1] 145[499,1] 146[500,1] 148[501,1] 149[502,1] 150[503,1] 151[504,1] 152[505,1] 153[506,1] 154[507,1] 155[508,1] 157[509,1] 158[510,1] 159[511,1] 160[512,1] 
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 138 140 141
;; live  in  	 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 24 [cc] 138 140 141
;; live  kill	 14 [lr]
;; rd  in  	(10)
8, 16, 23, 28, 29, 34, 35, 39, 85, 86
;; rd  gen 	(5)
7, 83, 495, 496, 497
;; rd  kill	(25)
0, 1, 2, 3, 4, 5, 6, 7, 8, 36, 37, 38, 39, 76, 77, 78, 79, 80, 81, 82, 83, 84, 495, 496, 497

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 3 5 4 2 arch/arm/kernel/perf_event_v7.c:1024 (set (reg/v:SI 140 [ idx ])
        (reg:SI 1 r1 [ idx ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ idx ])
        (nil)))

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 9 2 arch/arm/kernel/perf_event_v7.c:1030 (set (reg/f:SI 141)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 9 7 10 2 arch/arm/kernel/perf_event_v7.c:1030 (set (reg:SI 0 r0)
        (plus:SI (reg/f:SI 141)
            (const_int 16 [0x10]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 16 [0x10])))
        (nil)))

(call_insn 10 9 11 2 arch/arm/kernel/perf_event_v7.c:1030 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("_raw_spin_lock_irqsave") [flags 0x41] <function_decl 0x10b86a00 _raw_spin_lock_irqsave>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 11 10 13 2 arch/arm/kernel/perf_event_v7.c:1030 (set (reg/v:SI 138 [ flags ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 13 11 14 2 arch/arm/kernel/perf_event_v7.c:877 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 140 [ idx ])
            (const_int 1 [0x1]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 14 13 15 2 arch/arm/kernel/perf_event_v7.c:877 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 19)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
        (nil)))
;; End of basic block 2 -> ( 4 3)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 138 140 141
;; live  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 138 140 141
;; rd  out 	(13)
7, 16, 23, 28, 29, 34, 35, 83, 85, 86, 495, 496, 497


;; Succ edge  4 [72.0%] 
;; Succ edge  3 [28.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u11(11){ }u12(13){ }u13(25){ }u14(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 140
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 135
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 140
;; live  gen 	 135
;; live  kill	
;; rd  in  	(13)
7, 16, 23, 28, 29, 34, 35, 83, 85, 86, 495, 496, 497
;; rd  gen 	(1)
494
;; rd  kill	(2)
493, 494

;; Pred edge  2 [28.0%]  (fallthru)
(note 15 14 16 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 16 15 102 3 arch/arm/kernel/perf_event_v7.c:885 (set (reg/v:SI 135 [ val ])
        (const_int -2147483648 [0xffffffff80000000])) 167 {*arm_movsi_insn} (nil))

(jump_insn 102 16 103 3 (set (pc)
        (label_ref 47)) -1 (nil))
;; End of basic block 3 -> ( 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 138 140
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 138 140
;; rd  out 	(14)
7, 16, 23, 28, 29, 34, 35, 83, 85, 86, 494, 495, 496, 497


;; Succ edge  8 [100.0%] 

(barrier 103 102 19)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u15(11){ }u16(13){ }u17(25){ }u18(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 138 140 141
;; lr  use 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 138 140 141
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
7, 16, 23, 28, 29, 34, 35, 83, 85, 86, 495, 496, 497
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  2 [72.0%] 
(code_label 19 103 20 4 212 "" [1 uses])

(note 20 19 22 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(jump_insn 22 20 23 4 arch/arm/kernel/perf_event_v7.c:877 discrim 1 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 30)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 4 [0x4])
            (nil))))
;; End of basic block 4 -> ( 6 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 140 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 140 141
;; rd  out 	(13)
7, 16, 23, 28, 29, 34, 35, 83, 85, 86, 495, 496, 497


;; Succ edge  6 [0.0%] 
;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u20(11){ }u21(13){ }u22(25){ }u23(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 140 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141
;; lr  def 	 24 [cc] 144 145 146
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 140 141
;; live  gen 	 24 [cc] 144 145 146
;; live  kill	
;; rd  in  	(13)
7, 16, 23, 28, 29, 34, 35, 83, 85, 86, 495, 496, 497
;; rd  gen 	(4)
77, 498, 499, 500
;; rd  kill	(12)
76, 77, 78, 79, 80, 81, 82, 83, 84, 498, 499, 500

;; Pred edge  4 [100.0%]  (fallthru)
(note 23 22 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 25 23 26 5 arch/arm/kernel/perf_event_v7.c:878 (set (reg/f:SI 144 [ armpmu ])
        (mem/f/c/i:SI (reg/f:SI 141) [0 armpmu+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 141)
        (expr_list:REG_EQUAL (mem/f/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 armpmu+0 S4 A32])
            (nil))))

(insn 26 25 27 5 arch/arm/kernel/perf_event_v7.c:878 (set (reg:SI 146 [ <variable>.num_events ])
        (mem/s/j:SI (plus:SI (reg/f:SI 144 [ armpmu ])
                (const_int 56 [0x38])) [0 <variable>.num_events+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 144 [ armpmu ])
        (nil)))

(insn 27 26 28 5 arch/arm/kernel/perf_event_v7.c:878 (set (reg:SI 145)
        (plus:SI (reg:SI 146 [ <variable>.num_events ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 146 [ <variable>.num_events ])
        (nil)))

(insn 28 27 29 5 arch/arm/kernel/perf_event_v7.c:878 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 140 [ idx ])
            (reg:SI 145))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 145)
        (nil)))

(jump_insn 29 28 30 5 arch/arm/kernel/perf_event_v7.c:878 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 42)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 5 -> ( 6 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 140
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 140
;; rd  out 	(16)
7, 16, 23, 28, 29, 34, 35, 77, 85, 86, 495, 496, 497, 498, 499, 500


;; Succ edge  6 [0.0%]  (fallthru)
;; Succ edge  7 [100.0%] 

;; Start of basic block ( 4 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u30(11){ }u31(13){ }u32(25){ }u33(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 140
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 148 149
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 140
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 148 149
;; live  kill	 14 [lr]
;; rd  in  	(17)
7, 16, 23, 28, 29, 34, 35, 77, 83, 85, 86, 495, 496, 497, 498, 499, 500
;; rd  gen 	(3)
6, 501, 502
;; rd  kill	(15)
0, 1, 2, 3, 4, 5, 6, 7, 8, 36, 37, 38, 39, 501, 502

;; Pred edge  4 [0.0%] 
;; Pred edge  5 [0.0%]  (fallthru)
(code_label 30 29 31 6 214 "" [1 uses])

(note 31 30 34 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 34 31 35 6 arch/arm/kernel/perf_event_v7.c:879 (set (reg:SI 149)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 35 34 36 6 arch/arm/kernel/perf_event_v7.c:879 (set (reg:SI 148)
        (and:SI (reg:SI 149)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 149)
        (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
                (const_int -8192 [0xffffffffffffe000]))
            (nil))))

(insn 36 35 37 6 arch/arm/kernel/perf_event_v7.c:879 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC15") [flags 0x82] <string_cst 0x113e5120>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC15") [flags 0x82] <string_cst 0x113e5120>)
        (nil)))

(insn 37 36 38 6 arch/arm/kernel/perf_event_v7.c:879 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg:SI 148)
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 148)
        (nil)))

(insn 38 37 39 6 arch/arm/kernel/perf_event_v7.c:879 (set (reg:SI 2 r2)
        (reg/v:SI 140 [ idx ])) 167 {*arm_movsi_insn} (nil))

(call_insn 39 38 104 6 arch/arm/kernel/perf_event_v7.c:879 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(jump_insn 104 39 105 6 (set (pc)
        (label_ref 56)) -1 (nil))
;; End of basic block 6 -> ( 10)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 140
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 140
;; rd  out 	(19)
6, 16, 23, 28, 29, 34, 35, 77, 83, 85, 86, 495, 496, 497, 498, 499, 500, 501, 502


;; Succ edge  10 [100.0%] 

(barrier 105 104 42)

;; Start of basic block ( 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u43(11){ }u44(13){ }u45(25){ }u46(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 140
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 135 150 151
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 140
;; live  gen 	 135 150 151
;; live  kill	
;; rd  in  	(16)
7, 16, 23, 28, 29, 34, 35, 77, 85, 86, 495, 496, 497, 498, 499, 500
;; rd  gen 	(3)
493, 503, 504
;; rd  kill	(4)
493, 494, 503, 504

;; Pred edge  5 [100.0%] 
(code_label 42 105 43 7 215 "" [1 uses])

(note 43 42 44 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 44 43 45 7 arch/arm/kernel/perf_event_v7.c:887 (set (reg:SI 150)
        (plus:SI (reg/v:SI 140 [ idx ])
            (const_int -2 [0xfffffffffffffffe]))) 4 {*arm_addsi3} (nil))

(insn 45 44 46 7 arch/arm/kernel/perf_event_v7.c:887 (set (reg:SI 151)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 46 45 47 7 arch/arm/kernel/perf_event_v7.c:887 (set (reg/v:SI 135 [ val ])
        (ashift:SI (reg:SI 151)
            (reg:SI 150))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 151)
        (expr_list:REG_DEAD (reg:SI 150)
            (expr_list:REG_EQUAL (ashift:SI (const_int 1 [0x1])
                    (reg:SI 150))
                (nil)))))
;; End of basic block 7 -> ( 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 138 140
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 138 140
;; rd  out 	(19)
7, 16, 23, 28, 29, 34, 35, 77, 85, 86, 493, 495, 496, 497, 498, 499, 500, 503, 504


;; Succ edge  8 [100.0%]  (fallthru)

;; Start of basic block ( 7 3) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u51(11){ }u52(13){ }u53(25){ }u54(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 138 140
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 138 140
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(21)
7, 16, 23, 28, 29, 34, 35, 77, 83, 85, 86, 493, 494, 495, 496, 497, 498, 499, 500, 503, 504
;; rd  gen 	(1)
81
;; rd  kill	(9)
76, 77, 78, 79, 80, 81, 82, 83, 84

;; Pred edge  7 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%] 
(code_label 47 46 48 8 213 "" [1 uses])

(note 48 47 49 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 49 48 50 8 arch/arm/kernel/perf_event_v7.c:889 (asm_operands/v ("mcr p15, 0, %0, c9, c12, 2") ("") 0 [
            (reg/v:SI 135 [ val ])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8919762) -1 (expr_list:REG_DEAD (reg/v:SI 135 [ val ])
        (nil)))

(insn 50 49 51 8 arch/arm/kernel/perf_event_v7.c:919 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 140 [ idx ])
            (const_int 1 [0x1]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 51 50 52 8 arch/arm/kernel/perf_event_v7.c:919 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 56)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7198 [0x1c1e])
            (nil))))
;; End of basic block 8 -> ( 10 9)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 140
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 140
;; rd  out 	(20)
7, 16, 23, 28, 29, 34, 35, 81, 85, 86, 493, 494, 495, 496, 497, 498, 499, 500, 503, 504


;; Succ edge  10 [72.0%] 
;; Succ edge  9 [28.0%]  (fallthru)

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u58(11){ }u59(13){ }u60(25){ }u61(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; live  gen 	 133
;; live  kill	
;; rd  in  	(20)
7, 16, 23, 28, 29, 34, 35, 81, 85, 86, 493, 494, 495, 496, 497, 498, 499, 500, 503, 504
;; rd  gen 	(1)
492
;; rd  kill	(2)
491, 492

;; Pred edge  8 [28.0%]  (fallthru)
(note 52 51 53 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 53 52 106 9 arch/arm/kernel/perf_event_v7.c:927 (set (reg/v:SI 133 [ val ])
        (const_int -2147483648 [0xffffffff80000000])) 167 {*arm_movsi_insn} (nil))

(jump_insn 106 53 107 9 (set (pc)
        (label_ref 84)) -1 (nil))
;; End of basic block 9 -> ( 14)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 138
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138
;; rd  out 	(21)
7, 16, 23, 28, 29, 34, 35, 81, 85, 86, 492, 493, 494, 495, 496, 497, 498, 499, 500, 503, 504


;; Succ edge  14 [100.0%] 

(barrier 107 106 56)

;; Start of basic block ( 8 6) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u62(11){ }u63(13){ }u64(25){ }u65(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 140
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 140
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(25)
6, 7, 16, 23, 28, 29, 34, 35, 77, 81, 83, 85, 86, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504
;; rd  gen 	(1)
80
;; rd  kill	(9)
76, 77, 78, 79, 80, 81, 82, 83, 84

;; Pred edge  8 [72.0%] 
;; Pred edge  6 [100.0%] 
(code_label 56 107 57 10 216 "" [2 uses])

(note 57 56 58 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 58 57 59 10 arch/arm/kernel/perf_event_v7.c:919 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 140 [ idx ])
            (const_int 1 [0x1]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 59 58 60 10 arch/arm/kernel/perf_event_v7.c:919 discrim 1 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 67)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 4 [0x4])
            (nil))))
;; End of basic block 10 -> ( 12 11)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 140
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 140
;; rd  out 	(23)
6, 7, 16, 23, 28, 29, 34, 35, 80, 85, 86, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504


;; Succ edge  12 [0.0%] 
;; Succ edge  11 [100.0%]  (fallthru)

;; Start of basic block ( 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u68(11){ }u69(13){ }u70(25){ }u71(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 140
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 24 [cc] 152 153 154 155
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 140
;; live  gen 	 24 [cc] 152 153 154 155
;; live  kill	
;; rd  in  	(23)
6, 7, 16, 23, 28, 29, 34, 35, 80, 85, 86, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504
;; rd  gen 	(5)
76, 505, 506, 507, 508
;; rd  kill	(13)
76, 77, 78, 79, 80, 81, 82, 83, 84, 505, 506, 507, 508

;; Pred edge  10 [100.0%]  (fallthru)
(note 60 59 61 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 61 60 62 11 arch/arm/kernel/perf_event_v7.c:920 (set (reg/f:SI 152)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 62 61 63 11 arch/arm/kernel/perf_event_v7.c:920 (set (reg/f:SI 153 [ armpmu ])
        (mem/f/c/i:SI (reg/f:SI 152) [0 armpmu+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 152)
        (expr_list:REG_EQUAL (mem/f/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 armpmu+0 S4 A32])
            (nil))))

(insn 63 62 64 11 arch/arm/kernel/perf_event_v7.c:920 (set (reg:SI 155 [ <variable>.num_events ])
        (mem/s/j:SI (plus:SI (reg/f:SI 153 [ armpmu ])
                (const_int 56 [0x38])) [0 <variable>.num_events+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 153 [ armpmu ])
        (nil)))

(insn 64 63 65 11 arch/arm/kernel/perf_event_v7.c:920 (set (reg:SI 154)
        (plus:SI (reg:SI 155 [ <variable>.num_events ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 155 [ <variable>.num_events ])
        (nil)))

(insn 65 64 66 11 arch/arm/kernel/perf_event_v7.c:920 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 140 [ idx ])
            (reg:SI 154))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 154)
        (nil)))

(jump_insn 66 65 67 11 arch/arm/kernel/perf_event_v7.c:920 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 79)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 11 -> ( 12 13)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 140
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 140
;; rd  out 	(27)
6, 7, 16, 23, 28, 29, 34, 35, 76, 85, 86, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508


;; Succ edge  12 [0.0%]  (fallthru)
;; Succ edge  13 [100.0%] 

;; Start of basic block ( 10 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u78(11){ }u79(13){ }u80(25){ }u81(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 140
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 157 158
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 140
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 157 158
;; live  kill	 14 [lr]
;; rd  in  	(28)
6, 7, 16, 23, 28, 29, 34, 35, 76, 80, 85, 86, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508
;; rd  gen 	(3)
5, 509, 510
;; rd  kill	(15)
0, 1, 2, 3, 4, 5, 6, 7, 8, 36, 37, 38, 39, 509, 510

;; Pred edge  10 [0.0%] 
;; Pred edge  11 [0.0%]  (fallthru)
(code_label 67 66 68 12 218 "" [1 uses])

(note 68 67 71 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 71 68 72 12 arch/arm/kernel/perf_event_v7.c:921 (set (reg:SI 158)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 72 71 73 12 arch/arm/kernel/perf_event_v7.c:921 (set (reg:SI 157)
        (and:SI (reg:SI 158)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 158)
        (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
                (const_int -8192 [0xffffffffffffe000]))
            (nil))))

(insn 73 72 74 12 arch/arm/kernel/perf_event_v7.c:921 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC16") [flags 0x82] <string_cst 0x116cf8c0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC16") [flags 0x82] <string_cst 0x116cf8c0>)
        (nil)))

(insn 74 73 75 12 arch/arm/kernel/perf_event_v7.c:921 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg:SI 157)
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 157)
        (nil)))

(insn 75 74 76 12 arch/arm/kernel/perf_event_v7.c:921 (set (reg:SI 2 r2)
        (reg/v:SI 140 [ idx ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 140 [ idx ])
        (nil)))

(call_insn 76 75 108 12 arch/arm/kernel/perf_event_v7.c:921 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(jump_insn 108 76 109 12 (set (pc)
        (label_ref 87)) -1 (nil))
;; End of basic block 12 -> ( 15)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; rd  out 	(29)
5, 16, 23, 28, 29, 34, 35, 76, 80, 85, 86, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510


;; Succ edge  15 [100.0%] 

(barrier 109 108 79)

;; Start of basic block ( 11) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u91(11){ }u92(13){ }u93(25){ }u94(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 140
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 133 159 160
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 140
;; live  gen 	 133 159 160
;; live  kill	
;; rd  in  	(27)
6, 7, 16, 23, 28, 29, 34, 35, 76, 85, 86, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508
;; rd  gen 	(3)
491, 511, 512
;; rd  kill	(4)
491, 492, 511, 512

;; Pred edge  11 [100.0%] 
(code_label 79 109 80 13 219 "" [1 uses])

(note 80 79 81 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 81 80 82 13 arch/arm/kernel/perf_event_v7.c:929 (set (reg:SI 159)
        (plus:SI (reg/v:SI 140 [ idx ])
            (const_int -2 [0xfffffffffffffffe]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/v:SI 140 [ idx ])
        (nil)))

(insn 82 81 83 13 arch/arm/kernel/perf_event_v7.c:929 (set (reg:SI 160)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 83 82 84 13 arch/arm/kernel/perf_event_v7.c:929 (set (reg/v:SI 133 [ val ])
        (ashift:SI (reg:SI 160)
            (reg:SI 159))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 160)
        (expr_list:REG_DEAD (reg:SI 159)
            (expr_list:REG_EQUAL (ashift:SI (const_int 1 [0x1])
                    (reg:SI 159))
                (nil)))))
;; End of basic block 13 -> ( 14)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 138
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138
;; rd  out 	(30)
6, 7, 16, 23, 28, 29, 34, 35, 76, 85, 86, 491, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 511, 512


;; Succ edge  14 [100.0%]  (fallthru)

;; Start of basic block ( 13 9) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u99(11){ }u100(13){ }u101(25){ }u102(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138
;; live  gen 	
;; live  kill	
;; rd  in  	(32)
6, 7, 16, 23, 28, 29, 34, 35, 76, 81, 85, 86, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 511, 512
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  13 [100.0%]  (fallthru)
;; Pred edge  9 [100.0%] 
(code_label 84 83 85 14 217 "" [1 uses])

(note 85 84 86 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 86 85 87 14 arch/arm/kernel/perf_event_v7.c:931 (asm_operands/v ("mcr p15, 0, %0, c9, c14, 2") ("") 0 [
            (reg/v:SI 133 [ val ])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8925138) -1 (expr_list:REG_DEAD (reg/v:SI 133 [ val ])
        (nil)))
;; End of basic block 14 -> ( 15)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; rd  out 	(32)
6, 7, 16, 23, 28, 29, 34, 35, 76, 81, 85, 86, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 511, 512


;; Succ edge  15 [100.0%]  (fallthru)

;; Start of basic block ( 14 12) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u104(11){ }u105(13){ }u106(25){ }u107(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	
;; rd  in  	(36)
5, 6, 7, 16, 23, 28, 29, 34, 35, 76, 80, 81, 85, 86, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  14 [100.0%]  (fallthru)
;; Pred edge  12 [100.0%] 
(code_label 87 86 88 15 220 "" [1 uses])

(note 88 87 91 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 91 88 92 15 arch/arm/kernel/perf_event_v7.c:1042 (set (reg:SI 0 r0)
        (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 16 [0x10])))) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 16 [0x10])))
        (nil)))

(insn 92 91 93 15 arch/arm/kernel/perf_event_v7.c:1042 (set (reg:SI 1 r1)
        (reg/v:SI 138 [ flags ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 138 [ flags ])
        (nil)))

(call_insn/j 93 92 94 15 arch/arm/kernel/perf_event_v7.c:1042 (parallel [
            (call (mem:SI (symbol_ref:SI ("_raw_spin_unlock_irqrestore") [flags 0x41] <function_decl 0x10b86d80 _raw_spin_unlock_irqrestore>) [0 S4 A32])
                (const_int 0 [0x0]))
            (return)
            (use (const_int 0 [0x0]))
        ]) 258 {*sibcall_insn} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 15 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(36)
5, 6, 7, 16, 23, 28, 29, 34, 35, 76, 80, 81, 85, 86, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 94 93 0)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function armv7pmu_reset (armv7pmu_reset)[0:1351]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 10 (  1.7)
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 11 (  1.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 11 (  1.8)


armv7pmu_reset

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={3d,1u} r1={3d,1u} r2={2d} r3={2d} r11={1d,5u} r12={2d} r13={1d,6u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={2d,1u} r25={1d,5u} r26={1d,4u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,1u} r134={2d,3u} r136={1d,1u} r137={1d,1u} r138={1d,1u} 
;;    total ref usage 167{136d,31u,0e} in 14{13 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129
0[0,3] 1[3,3] 2[6,2] 3[8,2] 11[10,1] 12[11,2] 13[13,1] 14[14,2] 15[16,1] 16[17,1] 17[18,1] 18[19,1] 19[20,1] 20[21,1] 21[22,1] 22[23,1] 23[24,1] 24[25,2] 25[27,1] 26[28,1] 27[29,1] 28[30,1] 29[31,1] 30[32,1] 31[33,1] 32[34,1] 33[35,1] 34[36,1] 35[37,1] 36[38,1] 37[39,1] 38[40,1] 39[41,1] 40[42,1] 41[43,1] 42[44,1] 43[45,1] 44[46,1] 45[47,1] 46[48,1] 47[49,1] 48[50,1] 49[51,1] 50[52,1] 51[53,1] 52[54,1] 53[55,1] 54[56,1] 55[57,1] 56[58,1] 57[59,1] 58[60,1] 59[61,1] 60[62,1] 61[63,1] 62[64,1] 63[65,1] 64[66,1] 65[67,1] 66[68,1] 67[69,1] 68[70,1] 69[71,1] 70[72,1] 71[73,1] 72[74,1] 73[75,1] 74[76,1] 75[77,1] 76[78,1] 77[79,1] 78[80,1] 79[81,1] 80[82,1] 81[83,1] 82[84,1] 83[85,1] 84[86,1] 85[87,1] 86[88,1] 87[89,1] 88[90,1] 89[91,1] 90[92,1] 91[93,1] 92[94,1] 93[95,1] 94[96,1] 95[97,1] 96[98,1] 97[99,1] 98[100,1] 99[101,1] 100[102,1] 101[103,1] 102[104,1] 103[105,1] 104[106,1] 105[107,1] 106[108,1] 107[109,1] 108[110,1] 109[111,1] 110[112,1] 111[113,1] 112[114,1] 113[115,1] 114[116,1] 115[117,1] 116[118,1] 117[119,1] 118[120,1] 119[121,1] 120[122,1] 121[123,1] 122[124,1] 123[125,1] 124[126,1] 125[127,1] 126[128,1] 127[129,1] 133[130,1] 134[131,2] 136[133,1] 137[134,1] 138[135,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d2(0){ }d5(1){ }d7(2){ }d9(3){ }d10(11){ }d12(12){ }d13(13){ }d15(14){ }d27(25){ }d28(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28
;; rd  kill	(18)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 27, 28
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28

( 0 )->[2]->( 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d10(bb 0 insn -1) }u1(13){ d13(bb 0 insn -1) }u2(25){ d27(bb 0 insn -1) }u3(26){ d28(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133 134 136 137
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133 134 136 137
;; live  kill	
;; rd  in  	(10)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28
;; rd  gen 	(4)
130, 132, 133, 134
;; rd  kill	(5)
130, 131, 132, 133, 134
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; rd  out 	(14)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 132, 133, 134
;;  UD chains for artificial uses
;;   reg 11 { d10(bb 0 insn -1) }
;;   reg 13 { d13(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 7
;;      reg 136 { d133(bb 2 insn 6) }
;;   UD chains for insn luid 2 uid 8
;;      reg 137 { d134(bb 2 insn 7) }

( 4 )->[3]->( 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u6(11){ d10(bb 0 insn -1) }u7(13){ d13(bb 0 insn -1) }u8(25){ d27(bb 0 insn -1) }u9(26){ d28(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134
;; live  gen 	 0 [r0] 1 [r1] 134
;; live  kill	 14 [lr]
;; rd  in  	(16)
2, 5, 7, 9, 10, 12, 13, 15, 25, 27, 28, 130, 131, 132, 133, 134
;; rd  gen 	(1)
131
;; rd  kill	(4)
14, 15, 131, 132
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134
;; rd  out 	(14)
2, 5, 7, 9, 10, 12, 13, 25, 27, 28, 130, 131, 133, 134
;;  UD chains for artificial uses
;;   reg 11 { d10(bb 0 insn -1) }
;;   reg 13 { d13(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 14
;;      reg 134 { d132(bb 2 insn 9) d131(bb 3 insn 16) }
;;   UD chains for insn luid 2 uid 15
;;      reg 13 { d13(bb 0 insn -1) }
;;      reg 0 { d0(bb 3 insn 33) }
;;      reg 1 { d4(bb 3 insn 14) }
;;   UD chains for insn luid 3 uid 16
;;      reg 134 { d132(bb 2 insn 9) d131(bb 3 insn 16) }

( 3 2 )->[4]->( 3 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u15(11){ d10(bb 0 insn -1) }u16(13){ d13(bb 0 insn -1) }u17(25){ d27(bb 0 insn -1) }u18(26){ d28(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(16)
2, 5, 7, 9, 10, 12, 13, 15, 25, 27, 28, 130, 131, 132, 133, 134
;; rd  gen 	(1)
25
;; rd  kill	(2)
25, 26
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; rd  out 	(16)
2, 5, 7, 9, 10, 12, 13, 15, 25, 27, 28, 130, 131, 132, 133, 134
;;  UD chains for artificial uses
;;   reg 11 { d10(bb 0 insn -1) }
;;   reg 13 { d13(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 20
;;      reg 133 { d130(bb 2 insn 8) }
;;      reg 134 { d132(bb 2 insn 9) d131(bb 3 insn 16) }
;;   UD chains for insn luid 1 uid 21
;;      reg 24 { d25(bb 4 insn 20) }

( 4 )->[5]->( 1 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u22(11){ d10(bb 0 insn -1) }u23(13){ d13(bb 0 insn -1) }u24(25){ d27(bb 0 insn -1) }u25(26){ d28(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 138
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 138
;; live  kill	
;; rd  in  	(16)
2, 5, 7, 9, 10, 12, 13, 15, 25, 27, 28, 130, 131, 132, 133, 134
;; rd  gen 	(1)
135
;; rd  kill	(1)
135
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(17)
2, 5, 7, 9, 10, 12, 13, 15, 25, 27, 28, 130, 131, 132, 133, 134, 135
;;  UD chains for artificial uses
;;   reg 11 { d10(bb 0 insn -1) }
;;   reg 13 { d13(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 25
;;      reg 138 { d135(bb 5 insn 24) }

( 5 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u27(11){ d10(bb 0 insn -1) }u28(13){ d13(bb 0 insn -1) }u29(14){ d15(bb 0 insn -1) }u30(25){ d27(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(17)
2, 5, 7, 9, 10, 12, 13, 15, 25, 27, 28, 130, 131, 132, 133, 134, 135
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(17)
2, 5, 7, 9, 10, 12, 13, 15, 25, 27, 28, 130, 131, 132, 133, 134, 135
;;  UD chains for artificial uses
;;   reg 11 { d10(bb 0 insn -1) }
;;   reg 13 { d13(bb 0 insn -1) }
;;   reg 14 { d15(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 34 to worklist
  Adding insn 15 to worklist
  Adding insn 21 to worklist
  Adding insn 25 to worklist
  Adding insn 23 to worklist
Finished finding needed instructions:
Processing use of (reg 138) in insn 25:
  Adding insn 24 to worklist
Processing use of (reg 24 cc) in insn 21:
  Adding insn 20 to worklist
Processing use of (reg 133 [ nb_cnt ]) in insn 20:
  Adding insn 8 to worklist
Processing use of (reg 134 [ idx ]) in insn 20:
  Adding insn 9 to worklist
  Adding insn 16 to worklist
Processing use of (reg 134 [ idx ]) in insn 16:
Processing use of (reg 137 [ armpmu ]) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 136) in insn 7:
  Adding insn 6 to worklist
Processing use of (reg 13 sp) in insn 15:
Processing use of (reg 0 r0) in insn 15:
  Adding insn 33 to worklist
Processing use of (reg 1 r1) in insn 15:
  Adding insn 14 to worklist
Processing use of (reg 134 [ idx ]) in insn 14:


armv7pmu_reset

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={3d,1u} r1={3d,1u} r2={2d} r3={2d} r11={1d,5u} r12={2d} r13={1d,6u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={2d,1u} r25={1d,5u} r26={1d,4u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,1u} r134={2d,3u} r136={1d,1u} r137={1d,1u} r138={1d,1u} 
;;    total ref usage 167{136d,31u,0e} in 14{13 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129
0[0,3] 1[3,3] 2[6,2] 3[8,2] 11[10,1] 12[11,2] 13[13,1] 14[14,2] 15[16,1] 16[17,1] 17[18,1] 18[19,1] 19[20,1] 20[21,1] 21[22,1] 22[23,1] 23[24,1] 24[25,2] 25[27,1] 26[28,1] 27[29,1] 28[30,1] 29[31,1] 30[32,1] 31[33,1] 32[34,1] 33[35,1] 34[36,1] 35[37,1] 36[38,1] 37[39,1] 38[40,1] 39[41,1] 40[42,1] 41[43,1] 42[44,1] 43[45,1] 44[46,1] 45[47,1] 46[48,1] 47[49,1] 48[50,1] 49[51,1] 50[52,1] 51[53,1] 52[54,1] 53[55,1] 54[56,1] 55[57,1] 56[58,1] 57[59,1] 58[60,1] 59[61,1] 60[62,1] 61[63,1] 62[64,1] 63[65,1] 64[66,1] 65[67,1] 66[68,1] 67[69,1] 68[70,1] 69[71,1] 70[72,1] 71[73,1] 72[74,1] 73[75,1] 74[76,1] 75[77,1] 76[78,1] 77[79,1] 78[80,1] 79[81,1] 80[82,1] 81[83,1] 82[84,1] 83[85,1] 84[86,1] 85[87,1] 86[88,1] 87[89,1] 88[90,1] 89[91,1] 90[92,1] 91[93,1] 92[94,1] 93[95,1] 94[96,1] 95[97,1] 96[98,1] 97[99,1] 98[100,1] 99[101,1] 100[102,1] 101[103,1] 102[104,1] 103[105,1] 104[106,1] 105[107,1] 106[108,1] 107[109,1] 108[110,1] 109[111,1] 110[112,1] 111[113,1] 112[114,1] 113[115,1] 114[116,1] 115[117,1] 116[118,1] 117[119,1] 118[120,1] 119[121,1] 120[122,1] 121[123,1] 122[124,1] 123[125,1] 124[126,1] 125[127,1] 126[128,1] 127[129,1] 133[130,1] 134[131,2] 136[133,1] 137[134,1] 138[135,1] 
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133 134 136 137
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133 134 136 137
;; live  kill	
;; rd  in  	(10)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28
;; rd  gen 	(4)
130, 132, 133, 134
;; rd  kill	(5)
130, 131, 132, 133, 134

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 3 7 2 arch/arm/kernel/perf_event_v7.c:1156 (set (reg/f:SI 136)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 7 6 8 2 arch/arm/kernel/perf_event_v7.c:1156 (set (reg/f:SI 137 [ armpmu ])
        (mem/f/c/i:SI (reg/f:SI 136) [0 armpmu+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 136)
        (expr_list:REG_EQUAL (mem/f/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 armpmu+0 S4 A32])
            (nil))))

(insn 8 7 9 2 arch/arm/kernel/perf_event_v7.c:1156 (set (reg/v:SI 133 [ nb_cnt ])
        (mem/s/j:SI (plus:SI (reg/f:SI 137 [ armpmu ])
                (const_int 56 [0x38])) [0 <variable>.num_events+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 137 [ armpmu ])
        (nil)))

(insn 9 8 34 2 arch/arm/kernel/perf_event_v7.c:1159 (set (reg/v:SI 134 [ idx ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(jump_insn 34 9 35 2 arch/arm/kernel/perf_event_v7.c:1159 (set (pc)
        (label_ref 17)) -1 (nil))
;; End of basic block 2 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; rd  out 	(14)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 132, 133, 134


;; Succ edge  4 [100.0%] 

(barrier 35 34 19)

;; Start of basic block ( 4) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u6(11){ }u7(13){ }u8(25){ }u9(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134
;; live  gen 	 0 [r0] 1 [r1] 134
;; live  kill	 14 [lr]
;; rd  in  	(16)
2, 5, 7, 9, 10, 12, 13, 15, 25, 27, 28, 130, 131, 132, 133, 134
;; rd  gen 	(1)
131
;; rd  kill	(4)
14, 15, 131, 132

;; Pred edge  4 [91.0%] 
(code_label 19 35 12 3 226 "" [1 uses])

(note 12 19 33 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 33 12 14 3 arch/arm/kernel/perf_event_v7.c:1160 (set (reg:SI 0 r0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 14 33 15 3 arch/arm/kernel/perf_event_v7.c:1160 (set (reg:SI 1 r1)
        (reg/v:SI 134 [ idx ])) 167 {*arm_movsi_insn} (nil))

(call_insn 15 14 16 3 arch/arm/kernel/perf_event_v7.c:1160 (parallel [
            (call (mem:SI (symbol_ref:SI ("armv7pmu_disable_event") [flags 0x3] <function_decl 0x1150d880 armv7pmu_disable_event>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 16 15 17 3 arch/arm/kernel/perf_event_v7.c:1159 discrim 2 (set (reg/v:SI 134 [ idx ])
        (plus:SI (reg/v:SI 134 [ idx ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134
;; rd  out 	(14)
2, 5, 7, 9, 10, 12, 13, 25, 27, 28, 130, 131, 133, 134


;; Succ edge  4 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 3 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u15(11){ }u16(13){ }u17(25){ }u18(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(16)
2, 5, 7, 9, 10, 12, 13, 15, 25, 27, 28, 130, 131, 132, 133, 134
;; rd  gen 	(1)
25
;; rd  kill	(2)
25, 26

;; Pred edge  3 [100.0%]  (fallthru,dfs_back)
;; Pred edge  2 [100.0%] 
(code_label 17 16 18 4 225 "" [1 uses])

(note 18 17 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 20 18 21 4 arch/arm/kernel/perf_event_v7.c:1159 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 134 [ idx ])
            (reg/v:SI 133 [ nb_cnt ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 21 20 22 4 arch/arm/kernel/perf_event_v7.c:1159 discrim 1 (set (pc)
        (if_then_else (ltu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 19)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil))))
;; End of basic block 4 -> ( 3 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; rd  out 	(16)
2, 5, 7, 9, 10, 12, 13, 15, 25, 27, 28, 130, 131, 132, 133, 134


;; Succ edge  3 [91.0%] 
;; Succ edge  5 [9.0%]  (fallthru,loop_exit)

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u22(11){ }u23(13){ }u24(25){ }u25(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 138
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 138
;; live  kill	
;; rd  in  	(16)
2, 5, 7, 9, 10, 12, 13, 15, 25, 27, 28, 130, 131, 132, 133, 134
;; rd  gen 	(1)
135
;; rd  kill	(1)
135

;; Pred edge  4 [9.0%]  (fallthru,loop_exit)
(note 22 21 23 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 23 22 24 5 arch/arm/kernel/perf_event_v7.c:771 (parallel [
            (asm_operands/v ("isb") ("") 0 []
                 [] 8904658)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 24 23 25 5 arch/arm/kernel/perf_event_v7.c:772 (set (reg:SI 138)
        (const_int 6 [0x6])) 167 {*arm_movsi_insn} (nil))

(insn 25 24 0 5 arch/arm/kernel/perf_event_v7.c:772 (asm_operands/v ("mcr p15, 0, %0, c9, c12, 0") ("") 0 [
            (reg:SI 138)
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8904786) -1 (expr_list:REG_DEAD (reg:SI 138)
        (nil)))
;; End of basic block 5 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(17)
2, 5, 7, 9, 10, 12, 13, 15, 25, 27, 28, 130, 131, 132, 133, 134, 135


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function armv7pmu_enable_event (armv7pmu_enable_event)[0:1345]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 30 n_edges 42 count 57 (  1.9)
df_worklist_dataflow_doublequeue:n_basic_blocks 30 n_edges 42 count 58 (  1.9)
df_worklist_dataflow_doublequeue:n_basic_blocks 30 n_edges 42 count 58 (  1.9)


armv7pmu_enable_event

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={13d,8u} r1={12d,6u} r2={11d,4u} r3={7d} r11={1d,29u} r12={7d} r13={1d,39u,4d} r14={6d,1u} r15={6d} r16={6d} r17={6d} r18={6d} r19={6d} r20={6d} r21={6d} r22={6d} r23={6d} r24={16d,13u} r25={1d,29u} r26={1d,28u} r27={6d} r28={6d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={6d} r38={6d} r39={6d} r40={6d} r41={6d} r42={6d} r43={6d} r44={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r76={6d} r77={6d} r78={6d} r79={6d} r80={6d} r81={6d} r82={6d} r83={6d} r84={6d} r85={6d} r86={6d} r87={6d} r88={6d} r89={6d} r90={6d} r91={6d} r92={6d} r93={6d} r94={6d} r95={6d} r96={6d} r97={6d} r98={6d} r99={6d} r100={6d} r101={6d} r102={6d} r103={6d} r104={6d} r105={6d} r106={6d} r107={6d} r108={6d} r109={6d} r110={6d} r111={6d} r112={6d} r113={6d} r114={6d} r115={6d} r116={6d} r117={6d} r118={6d} r119={6d} r120={6d} r121={6d} r122={6d} r123={6d} r124={6d} r125={6d} r126={6d} r127={6d} r133={2d,1u} r135={2d,1u} r138={2d,1u} r140={1d,10u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={2d,10u} r145={1d,2u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u,1d} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r171={1d,1u} r172={1d,1u} r173={1d,1u,1d} r174={1d,1u} r175={1d,1u} r176={1d,1u} r177={1d,1u} r178={1d,1u} r180={1d,1u} r181={1d,1u} r182={1d,1u,1d} r183={1d,1u} 
;;    total ref usage 1005{781d,217u,7e} in 103{97 regular + 6 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735
0[0,13] 1[13,12] 2[25,11] 3[36,7] 11[43,1] 12[44,7] 13[51,1] 14[52,6] 15[58,6] 16[64,6] 17[70,6] 18[76,6] 19[82,6] 20[88,6] 21[94,6] 22[100,6] 23[106,6] 24[112,16] 25[128,1] 26[129,1] 27[130,6] 28[136,6] 29[142,6] 30[148,6] 31[154,6] 32[160,6] 33[166,6] 34[172,6] 35[178,6] 36[184,6] 37[190,6] 38[196,6] 39[202,6] 40[208,6] 41[214,6] 42[220,6] 43[226,6] 44[232,6] 45[238,6] 46[244,6] 47[250,6] 48[256,6] 49[262,6] 50[268,6] 51[274,6] 52[280,6] 53[286,6] 54[292,6] 55[298,6] 56[304,6] 57[310,6] 58[316,6] 59[322,6] 60[328,6] 61[334,6] 62[340,6] 63[346,6] 64[352,6] 65[358,6] 66[364,6] 67[370,6] 68[376,6] 69[382,6] 70[388,6] 71[394,6] 72[400,6] 73[406,6] 74[412,6] 75[418,6] 76[424,6] 77[430,6] 78[436,6] 79[442,6] 80[448,6] 81[454,6] 82[460,6] 83[466,6] 84[472,6] 85[478,6] 86[484,6] 87[490,6] 88[496,6] 89[502,6] 90[508,6] 91[514,6] 92[520,6] 93[526,6] 94[532,6] 95[538,6] 96[544,6] 97[550,6] 98[556,6] 99[562,6] 100[568,6] 101[574,6] 102[580,6] 103[586,6] 104[592,6] 105[598,6] 106[604,6] 107[610,6] 108[616,6] 109[622,6] 110[628,6] 111[634,6] 112[640,6] 113[646,6] 114[652,6] 115[658,6] 116[664,6] 117[670,6] 118[676,6] 119[682,6] 120[688,6] 121[694,6] 122[700,6] 123[706,6] 124[712,6] 125[718,6] 126[724,6] 127[730,6] 133[736,2] 135[738,2] 138[740,2] 140[742,1] 141[743,1] 142[744,1] 143[745,1] 144[746,2] 145[748,1] 148[749,1] 149[750,1] 150[751,1] 152[752,1] 153[753,1] 154[754,1] 155[755,1] 156[756,1] 157[757,1] 158[758,1] 159[759,1] 161[760,1] 162[761,1] 163[762,1] 164[763,1] 165[764,1] 166[765,1] 167[766,1] 168[767,1] 169[768,1] 171[769,1] 172[770,1] 173[771,1] 174[772,1] 175[773,1] 176[774,1] 177[775,1] 178[776,1] 180[777,1] 181[778,1] 182[779,1] 183[780,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d12(0){ }d24(1){ }d35(2){ }d42(3){ }d43(11){ }d50(12){ }d51(13){ }d57(14){ }d128(25){ }d129(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
12, 24, 35, 42, 43, 50, 51, 57, 128, 129
;; rd  kill	(60)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 128, 129
;; lr  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(10)
12, 24, 35, 42, 43, 50, 51, 57, 128, 129

( 0 )->[2]->( 4 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d43(bb 0 insn -1) }u1(13){ d51(bb 0 insn -1) }u2(25){ d128(bb 0 insn -1) }u3(26){ d129(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 140 141 143 144 145
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 24 [cc] 140 141 143 144 145
;; live  kill	 14 [lr]
;; rd  in  	(10)
12, 24, 35, 42, 43, 50, 51, 57, 128, 129
;; rd  gen 	(7)
11, 114, 742, 743, 745, 747, 748
;; rd  kill	(41)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 52, 53, 54, 55, 56, 57, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 742, 743, 745, 746, 747, 748
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 140 141 143 144 145
;; live  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 140 141 143 144 145
;; rd  out 	(15)
11, 24, 35, 42, 43, 50, 51, 114, 128, 129, 742, 743, 745, 747, 748
;;  UD chains for artificial uses
;;   reg 11 { d43(bb 0 insn -1) }
;;   reg 13 { d51(bb 0 insn -1) }
;;   reg 25 { d128(bb 0 insn -1) }
;;   reg 26 { d129(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d12(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 3
;;      reg 1 { d24(bb 0 insn -1) }
;;   UD chains for insn luid 3 uid 9
;;      reg 145 { d748(bb 2 insn 7) }
;;   UD chains for insn luid 4 uid 10
;;      reg 13 { d51(bb 0 insn -1) }
;;      reg 0 { d0(bb 2 insn 9) }
;;   UD chains for insn luid 5 uid 11
;;      reg 0 { d11(bb 2 insn 10) }
;;   UD chains for insn luid 6 uid 12
;;      reg 144 { d747(bb 2 insn 3) }
;;   UD chains for insn luid 7 uid 13
;;      reg 144 { d747(bb 2 insn 3) }
;;   UD chains for insn luid 8 uid 14
;;      reg 24 { d114(bb 2 insn 13) }

( 2 )->[3]->( 8 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u13(11){ d43(bb 0 insn -1) }u14(13){ d51(bb 0 insn -1) }u15(25){ d128(bb 0 insn -1) }u16(26){ d129(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141 143 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 138
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 143 144
;; live  gen 	 138
;; live  kill	
;; rd  in  	(15)
11, 24, 35, 42, 43, 50, 51, 114, 128, 129, 742, 743, 745, 747, 748
;; rd  gen 	(1)
741
;; rd  kill	(2)
740, 741
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 140 141 143 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 140 141 143 144
;; rd  out 	(16)
11, 24, 35, 42, 43, 50, 51, 114, 128, 129, 741, 742, 743, 745, 747, 748
;;  UD chains for artificial uses
;;   reg 11 { d43(bb 0 insn -1) }
;;   reg 13 { d51(bb 0 insn -1) }
;;   reg 25 { d128(bb 0 insn -1) }
;;   reg 26 { d129(bb 0 insn -1) }

( 2 )->[4]->( 6 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u17(11){ d43(bb 0 insn -1) }u18(13){ d51(bb 0 insn -1) }u19(25){ d128(bb 0 insn -1) }u20(26){ d129(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 140 141 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 140 141 143 144 145
;; live  gen 	
;; live  kill	
;; rd  in  	(15)
11, 24, 35, 42, 43, 50, 51, 114, 128, 129, 742, 743, 745, 747, 748
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141 143 144 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 143 144 145
;; rd  out 	(15)
11, 24, 35, 42, 43, 50, 51, 114, 128, 129, 742, 743, 745, 747, 748
;;  UD chains for artificial uses
;;   reg 11 { d43(bb 0 insn -1) }
;;   reg 13 { d51(bb 0 insn -1) }
;;   reg 25 { d128(bb 0 insn -1) }
;;   reg 26 { d129(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 22
;;      reg 24 { d114(bb 2 insn 13) }

( 4 )->[5]->( 6 7 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u22(11){ d43(bb 0 insn -1) }u23(13){ d51(bb 0 insn -1) }u24(25){ d128(bb 0 insn -1) }u25(26){ d129(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145
;; lr  def 	 24 [cc] 148 149 150
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 143 144 145
;; live  gen 	 24 [cc] 148 149 150
;; live  kill	
;; rd  in  	(15)
11, 24, 35, 42, 43, 50, 51, 114, 128, 129, 742, 743, 745, 747, 748
;; rd  gen 	(4)
113, 749, 750, 751
;; rd  kill	(19)
112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 749, 750, 751
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141 143 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 143 144
;; rd  out 	(18)
11, 24, 35, 42, 43, 50, 51, 113, 128, 129, 742, 743, 745, 747, 748, 749, 750, 751
;;  UD chains for artificial uses
;;   reg 11 { d43(bb 0 insn -1) }
;;   reg 13 { d51(bb 0 insn -1) }
;;   reg 25 { d128(bb 0 insn -1) }
;;   reg 26 { d129(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 25
;;      reg 145 { d748(bb 2 insn 7) }
;;   UD chains for insn luid 1 uid 26
;;      reg 148 { d749(bb 5 insn 25) }
;;   UD chains for insn luid 2 uid 27
;;      reg 150 { d751(bb 5 insn 26) }
;;   UD chains for insn luid 3 uid 28
;;      reg 144 { d747(bb 2 insn 3) }
;;      reg 149 { d750(bb 5 insn 27) }
;;   UD chains for insn luid 4 uid 29
;;      reg 24 { d113(bb 5 insn 28) }

( 4 5 )->[6]->( 9 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u32(11){ d43(bb 0 insn -1) }u33(13){ d51(bb 0 insn -1) }u34(25){ d128(bb 0 insn -1) }u35(26){ d129(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 143 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 152 153
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 143 144
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 152 153
;; live  kill	 14 [lr]
;; rd  in  	(19)
11, 24, 35, 42, 43, 50, 51, 113, 114, 128, 129, 742, 743, 745, 747, 748, 749, 750, 751
;; rd  gen 	(3)
10, 752, 753
;; rd  kill	(21)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 52, 53, 54, 55, 56, 57, 752, 753
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141 143 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 143 144
;; rd  out 	(21)
10, 24, 35, 42, 43, 50, 51, 113, 114, 128, 129, 742, 743, 745, 747, 748, 749, 750, 751, 752, 753
;;  UD chains for artificial uses
;;   reg 11 { d43(bb 0 insn -1) }
;;   reg 13 { d51(bb 0 insn -1) }
;;   reg 25 { d128(bb 0 insn -1) }
;;   reg 26 { d129(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 34
;;      reg 13 { d51(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 35
;;      reg 153 { d753(bb 6 insn 34) }
;;   eq_note reg 13 { }
;;   UD chains for insn luid 3 uid 37
;;      reg 152 { d752(bb 6 insn 35) }
;;   UD chains for insn luid 4 uid 38
;;      reg 144 { d747(bb 2 insn 3) }
;;   UD chains for insn luid 5 uid 39
;;      reg 13 { d51(bb 0 insn -1) }
;;      reg 0 { d5(bb 6 insn 36) }
;;      reg 1 { d22(bb 6 insn 37) }
;;      reg 2 { d26(bb 6 insn 38) }

( 5 )->[7]->( 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u45(11){ d43(bb 0 insn -1) }u46(13){ d51(bb 0 insn -1) }u47(25){ d128(bb 0 insn -1) }u48(26){ d129(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141 143 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 138 154 155
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 143 144
;; live  gen 	 138 154 155
;; live  kill	
;; rd  in  	(18)
11, 24, 35, 42, 43, 50, 51, 113, 128, 129, 742, 743, 745, 747, 748, 749, 750, 751
;; rd  gen 	(3)
740, 754, 755
;; rd  kill	(4)
740, 741, 754, 755
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 140 141 143 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 140 141 143 144
;; rd  out 	(21)
11, 24, 35, 42, 43, 50, 51, 113, 128, 129, 740, 742, 743, 745, 747, 748, 749, 750, 751, 754, 755
;;  UD chains for artificial uses
;;   reg 11 { d43(bb 0 insn -1) }
;;   reg 13 { d51(bb 0 insn -1) }
;;   reg 25 { d128(bb 0 insn -1) }
;;   reg 26 { d129(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 44
;;      reg 144 { d747(bb 2 insn 3) }
;;   UD chains for insn luid 2 uid 46
;;      reg 154 { d754(bb 7 insn 44) }
;;      reg 155 { d755(bb 7 insn 45) }
;;   eq_note reg 154 { }

( 7 3 )->[8]->( 9 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u53(11){ d43(bb 0 insn -1) }u54(13){ d51(bb 0 insn -1) }u55(25){ d128(bb 0 insn -1) }u56(26){ d129(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 140 141 143 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 140 141 143 144
;; live  gen 	
;; live  kill	
;; rd  in  	(23)
11, 24, 35, 42, 43, 50, 51, 113, 114, 128, 129, 740, 741, 742, 743, 745, 747, 748, 749, 750, 751, 754, 755
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141 143 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 143 144
;; rd  out 	(23)
11, 24, 35, 42, 43, 50, 51, 113, 114, 128, 129, 740, 741, 742, 743, 745, 747, 748, 749, 750, 751, 754, 755
;;  UD chains for artificial uses
;;   reg 11 { d43(bb 0 insn -1) }
;;   reg 13 { d51(bb 0 insn -1) }
;;   reg 25 { d128(bb 0 insn -1) }
;;   reg 26 { d129(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 49
;;      reg 138 { d741(bb 3 insn 16) d740(bb 7 insn 46) }

( 8 6 )->[9]->( 10 16 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u58(11){ d43(bb 0 insn -1) }u59(13){ d51(bb 0 insn -1) }u60(25){ d128(bb 0 insn -1) }u61(26){ d129(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141 143 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 143 144
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(26)
10, 11, 24, 35, 42, 43, 50, 51, 113, 114, 128, 129, 740, 741, 742, 743, 745, 747, 748, 749, 750, 751, 752, 753, 754, 755
;; rd  gen 	(1)
125
;; rd  kill	(16)
112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 140 141 143 144
;; live  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 140 141 143 144
;; rd  out 	(25)
10, 11, 24, 35, 42, 43, 50, 51, 125, 128, 129, 740, 741, 742, 743, 745, 747, 748, 749, 750, 751, 752, 753, 754, 755
;;  UD chains for artificial uses
;;   reg 11 { d43(bb 0 insn -1) }
;;   reg 13 { d51(bb 0 insn -1) }
;;   reg 25 { d128(bb 0 insn -1) }
;;   reg 26 { d129(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 52
;;      reg 144 { d747(bb 2 insn 3) }
;;   UD chains for insn luid 1 uid 53
;;      reg 24 { d125(bb 9 insn 52) }

( 9 )->[10]->( 12 11 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u64(11){ d43(bb 0 insn -1) }u65(13){ d51(bb 0 insn -1) }u66(25){ d128(bb 0 insn -1) }u67(26){ d129(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 140 141 143 144
;; lr  use 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 143
;; lr  def 	 142
;; live  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 140 141 143 144
;; live  gen 	 142
;; live  kill	
;; rd  in  	(25)
10, 11, 24, 35, 42, 43, 50, 51, 125, 128, 129, 740, 741, 742, 743, 745, 747, 748, 749, 750, 751, 752, 753, 754, 755
;; rd  gen 	(1)
744
;; rd  kill	(1)
744
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141 142 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 142 144
;; rd  out 	(26)
10, 11, 24, 35, 42, 43, 50, 51, 125, 128, 129, 740, 741, 742, 743, 744, 745, 747, 748, 749, 750, 751, 752, 753, 754, 755
;;  UD chains for artificial uses
;;   reg 11 { d43(bb 0 insn -1) }
;;   reg 13 { d51(bb 0 insn -1) }
;;   reg 25 { d128(bb 0 insn -1) }
;;   reg 26 { d129(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 55
;;      reg 143 { d745(bb 2 insn 2) }
;;   UD chains for insn luid 1 uid 57
;;      reg 24 { d125(bb 9 insn 52) }

( 10 )->[11]->( 12 13 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u70(11){ d43(bb 0 insn -1) }u71(13){ d51(bb 0 insn -1) }u72(25){ d128(bb 0 insn -1) }u73(26){ d129(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141 142 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 24 [cc] 156 157 158 159
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 142 144
;; live  gen 	 24 [cc] 156 157 158 159
;; live  kill	
;; rd  in  	(26)
10, 11, 24, 35, 42, 43, 50, 51, 125, 128, 129, 740, 741, 742, 743, 744, 745, 747, 748, 749, 750, 751, 752, 753, 754, 755
;; rd  gen 	(5)
112, 756, 757, 758, 759
;; rd  kill	(20)
112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 756, 757, 758, 759
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141 142 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 142 144
;; rd  out 	(30)
10, 11, 24, 35, 42, 43, 50, 51, 112, 128, 129, 740, 741, 742, 743, 744, 745, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759
;;  UD chains for artificial uses
;;   reg 11 { d43(bb 0 insn -1) }
;;   reg 13 { d51(bb 0 insn -1) }
;;   reg 25 { d128(bb 0 insn -1) }
;;   reg 26 { d129(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 60
;;      reg 156 { d756(bb 11 insn 59) }
;;   UD chains for insn luid 2 uid 61
;;      reg 157 { d757(bb 11 insn 60) }
;;   UD chains for insn luid 3 uid 62
;;      reg 159 { d759(bb 11 insn 61) }
;;   UD chains for insn luid 4 uid 63
;;      reg 144 { d747(bb 2 insn 3) }
;;      reg 158 { d758(bb 11 insn 62) }
;;   UD chains for insn luid 5 uid 64
;;      reg 24 { d112(bb 11 insn 63) }

( 10 11 )->[12]->( 14 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u80(11){ d43(bb 0 insn -1) }u81(13){ d51(bb 0 insn -1) }u82(25){ d128(bb 0 insn -1) }u83(26){ d129(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 142 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 144 161 162
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 142 144
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 144 161 162
;; live  kill	 14 [lr]
;; rd  in  	(31)
10, 11, 24, 35, 42, 43, 50, 51, 112, 125, 128, 129, 740, 741, 742, 743, 744, 745, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759
;; rd  gen 	(4)
9, 746, 760, 761
;; rd  kill	(23)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 52, 53, 54, 55, 56, 57, 746, 747, 760, 761
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141 142 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 142 144
;; rd  out 	(32)
9, 24, 35, 42, 43, 50, 51, 112, 125, 128, 129, 740, 741, 742, 743, 744, 745, 746, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761
;;  UD chains for artificial uses
;;   reg 11 { d43(bb 0 insn -1) }
;;   reg 13 { d51(bb 0 insn -1) }
;;   reg 25 { d128(bb 0 insn -1) }
;;   reg 26 { d129(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 69
;;      reg 13 { d51(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 70
;;      reg 162 { d761(bb 12 insn 69) }
;;   eq_note reg 13 { }
;;   UD chains for insn luid 3 uid 72
;;      reg 161 { d760(bb 12 insn 70) }
;;   UD chains for insn luid 4 uid 73
;;      reg 144 { d747(bb 2 insn 3) }
;;   UD chains for insn luid 5 uid 74
;;      reg 13 { d51(bb 0 insn -1) }
;;      reg 0 { d4(bb 12 insn 71) }
;;      reg 1 { d20(bb 12 insn 72) }
;;      reg 2 { d25(bb 12 insn 73) }

( 11 )->[13]->( 14 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u93(11){ d43(bb 0 insn -1) }u94(13){ d51(bb 0 insn -1) }u95(25){ d128(bb 0 insn -1) }u96(26){ d129(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141 142 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 163 164
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 142 144
;; live  gen 	 163 164
;; live  kill	
;; rd  in  	(30)
10, 11, 24, 35, 42, 43, 50, 51, 112, 128, 129, 740, 741, 742, 743, 744, 745, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759
;; rd  gen 	(2)
762, 763
;; rd  kill	(2)
762, 763
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141 142 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 142 144
;; rd  out 	(32)
10, 11, 24, 35, 42, 43, 50, 51, 112, 128, 129, 740, 741, 742, 743, 744, 745, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 762, 763
;;  UD chains for artificial uses
;;   reg 11 { d43(bb 0 insn -1) }
;;   reg 13 { d51(bb 0 insn -1) }
;;   reg 25 { d128(bb 0 insn -1) }
;;   reg 26 { d129(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 80
;;      reg 144 { d747(bb 2 insn 3) }
;;   UD chains for insn luid 1 uid 81
;;      reg 163 { d762(bb 13 insn 80) }
;;   UD chains for insn luid 2 uid 82
;;      reg 164 { d763(bb 13 insn 81) }

( 13 12 )->[14]->( 15 16 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u100(11){ d43(bb 0 insn -1) }u101(13){ d51(bb 0 insn -1) }u102(25){ d128(bb 0 insn -1) }u103(26){ d129(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141 142 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 144
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 142 144
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(37)
9, 10, 11, 24, 35, 42, 43, 50, 51, 112, 125, 128, 129, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763
;; rd  gen 	(1)
123
;; rd  kill	(16)
112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141 142
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 142
;; rd  out 	(36)
9, 10, 11, 24, 35, 42, 43, 50, 51, 123, 128, 129, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763
;;  UD chains for artificial uses
;;   reg 11 { d43(bb 0 insn -1) }
;;   reg 13 { d51(bb 0 insn -1) }
;;   reg 25 { d128(bb 0 insn -1) }
;;   reg 26 { d129(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 86
;;      reg 140 { d742(bb 2 insn 12) }
;;      reg 144 { d747(bb 2 insn 3) d746(bb 12 insn 75) }
;;   UD chains for insn luid 1 uid 87
;;      reg 24 { d123(bb 14 insn 86) }

( 14 )->[15]->( 19 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u107(11){ d43(bb 0 insn -1) }u108(13){ d51(bb 0 insn -1) }u109(25){ d128(bb 0 insn -1) }u110(26){ d129(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141 142
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 165
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 142
;; live  gen 	 165
;; live  kill	
;; rd  in  	(36)
9, 10, 11, 24, 35, 42, 43, 50, 51, 123, 128, 129, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763
;; rd  gen 	(1)
764
;; rd  kill	(1)
764
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141
;; rd  out 	(37)
9, 10, 11, 24, 35, 42, 43, 50, 51, 123, 128, 129, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764
;;  UD chains for artificial uses
;;   reg 11 { d43(bb 0 insn -1) }
;;   reg 13 { d51(bb 0 insn -1) }
;;   reg 25 { d128(bb 0 insn -1) }
;;   reg 26 { d129(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 89
;;      reg 142 { d744(bb 10 insn 55) }
;;   UD chains for insn luid 1 uid 90
;;      reg 165 { d764(bb 15 insn 89) }

( 9 14 )->[16]->( 18 17 )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u113(11){ d43(bb 0 insn -1) }u114(13){ d51(bb 0 insn -1) }u115(25){ d128(bb 0 insn -1) }u116(26){ d129(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(37)
9, 10, 11, 24, 35, 42, 43, 50, 51, 123, 125, 128, 129, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763
;; rd  gen 	(1)
122
;; rd  kill	(16)
112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 140 141
;; live  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 140 141
;; rd  out 	(36)
9, 10, 11, 24, 35, 42, 43, 50, 51, 122, 128, 129, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763
;;  UD chains for artificial uses
;;   reg 11 { d43(bb 0 insn -1) }
;;   reg 13 { d51(bb 0 insn -1) }
;;   reg 25 { d128(bb 0 insn -1) }
;;   reg 26 { d129(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 95
;;      reg 140 { d742(bb 2 insn 12) }
;;   UD chains for insn luid 1 uid 96
;;      reg 24 { d122(bb 16 insn 95) }

( 16 )->[17]->( 22 )
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u119(11){ d43(bb 0 insn -1) }u120(13){ d51(bb 0 insn -1) }u121(25){ d128(bb 0 insn -1) }u122(26){ d129(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 135
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141
;; live  gen 	 135
;; live  kill	
;; rd  in  	(36)
9, 10, 11, 24, 35, 42, 43, 50, 51, 122, 128, 129, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763
;; rd  gen 	(1)
739
;; rd  kill	(2)
738, 739
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 140 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 141
;; rd  out 	(37)
9, 10, 11, 24, 35, 42, 43, 50, 51, 122, 128, 129, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763
;;  UD chains for artificial uses
;;   reg 11 { d43(bb 0 insn -1) }
;;   reg 13 { d51(bb 0 insn -1) }
;;   reg 25 { d128(bb 0 insn -1) }
;;   reg 26 { d129(bb 0 insn -1) }

( 16 )->[18]->( 20 19 )
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u123(11){ d43(bb 0 insn -1) }u124(13){ d51(bb 0 insn -1) }u125(25){ d128(bb 0 insn -1) }u126(26){ d129(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 140 141
;; lr  use 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 140 141
;; live  gen 	
;; live  kill	
;; rd  in  	(36)
9, 10, 11, 24, 35, 42, 43, 50, 51, 122, 128, 129, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141
;; rd  out 	(36)
9, 10, 11, 24, 35, 42, 43, 50, 51, 122, 128, 129, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763
;;  UD chains for artificial uses
;;   reg 11 { d43(bb 0 insn -1) }
;;   reg 13 { d51(bb 0 insn -1) }
;;   reg 25 { d128(bb 0 insn -1) }
;;   reg 26 { d129(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 104
;;      reg 24 { d122(bb 16 insn 95) }

( 18 15 )->[19]->( 20 21 )
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u128(11){ d43(bb 0 insn -1) }u129(13){ d51(bb 0 insn -1) }u130(25){ d128(bb 0 insn -1) }u131(26){ d129(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 24 [cc] 166 167 168 169
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141
;; live  gen 	 24 [cc] 166 167 168 169
;; live  kill	
;; rd  in  	(38)
9, 10, 11, 24, 35, 42, 43, 50, 51, 122, 123, 128, 129, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764
;; rd  gen 	(5)
121, 765, 766, 767, 768
;; rd  kill	(20)
112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 765, 766, 767, 768
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141
;; rd  out 	(41)
9, 10, 11, 24, 35, 42, 43, 50, 51, 121, 128, 129, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768
;;  UD chains for artificial uses
;;   reg 11 { d43(bb 0 insn -1) }
;;   reg 13 { d51(bb 0 insn -1) }
;;   reg 25 { d128(bb 0 insn -1) }
;;   reg 26 { d129(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 108
;;      reg 166 { d765(bb 19 insn 107) }
;;   UD chains for insn luid 2 uid 109
;;      reg 167 { d766(bb 19 insn 108) }
;;   UD chains for insn luid 3 uid 110
;;      reg 169 { d768(bb 19 insn 109) }
;;   UD chains for insn luid 4 uid 111
;;      reg 140 { d742(bb 2 insn 12) }
;;      reg 168 { d767(bb 19 insn 110) }
;;   UD chains for insn luid 5 uid 112
;;      reg 24 { d121(bb 19 insn 111) }

( 18 19 )->[20]->( 24 )
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u138(11){ d43(bb 0 insn -1) }u139(13){ d51(bb 0 insn -1) }u140(25){ d128(bb 0 insn -1) }u141(26){ d129(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 171 172
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 171 172
;; live  kill	 14 [lr]
;; rd  in  	(42)
9, 10, 11, 24, 35, 42, 43, 50, 51, 121, 122, 128, 129, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768
;; rd  gen 	(3)
8, 769, 770
;; rd  kill	(21)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 52, 53, 54, 55, 56, 57, 769, 770
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141
;; rd  out 	(42)
8, 24, 35, 42, 43, 50, 51, 121, 122, 128, 129, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770
;;  UD chains for artificial uses
;;   reg 11 { d43(bb 0 insn -1) }
;;   reg 13 { d51(bb 0 insn -1) }
;;   reg 25 { d128(bb 0 insn -1) }
;;   reg 26 { d129(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 117
;;      reg 13 { d51(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 118
;;      reg 172 { d770(bb 20 insn 117) }
;;   eq_note reg 13 { }
;;   UD chains for insn luid 3 uid 120
;;      reg 171 { d769(bb 20 insn 118) }
;;   UD chains for insn luid 4 uid 121
;;      reg 140 { d742(bb 2 insn 12) }
;;   UD chains for insn luid 5 uid 122
;;      reg 13 { d51(bb 0 insn -1) }
;;      reg 0 { d3(bb 20 insn 119) }
;;      reg 1 { d18(bb 20 insn 120) }
;;      reg 2 { d31(bb 20 insn 121) }

( 19 )->[21]->( 22 )
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u151(11){ d43(bb 0 insn -1) }u152(13){ d51(bb 0 insn -1) }u153(25){ d128(bb 0 insn -1) }u154(26){ d129(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 135 173 174
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141
;; live  gen 	 135 173 174
;; live  kill	
;; rd  in  	(41)
9, 10, 11, 24, 35, 42, 43, 50, 51, 121, 128, 129, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768
;; rd  gen 	(3)
738, 771, 772
;; rd  kill	(4)
738, 739, 771, 772
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 140 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 141
;; rd  out 	(44)
9, 10, 11, 24, 35, 42, 43, 50, 51, 121, 128, 129, 738, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 771, 772
;;  UD chains for artificial uses
;;   reg 11 { d43(bb 0 insn -1) }
;;   reg 13 { d51(bb 0 insn -1) }
;;   reg 25 { d128(bb 0 insn -1) }
;;   reg 26 { d129(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 127
;;      reg 140 { d742(bb 2 insn 12) }
;;   UD chains for insn luid 2 uid 129
;;      reg 173 { d771(bb 21 insn 127) }
;;      reg 174 { d772(bb 21 insn 128) }
;;   eq_note reg 173 { }

( 21 17 )->[22]->( 24 23 )
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u159(11){ d43(bb 0 insn -1) }u160(13){ d51(bb 0 insn -1) }u161(25){ d128(bb 0 insn -1) }u162(26){ d129(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 140 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 141
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(46)
9, 10, 11, 24, 35, 42, 43, 50, 51, 121, 122, 128, 129, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 771, 772
;; rd  gen 	(1)
119
;; rd  kill	(16)
112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141
;; rd  out 	(45)
9, 10, 11, 24, 35, 42, 43, 50, 51, 119, 128, 129, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 771, 772
;;  UD chains for artificial uses
;;   reg 11 { d43(bb 0 insn -1) }
;;   reg 13 { d51(bb 0 insn -1) }
;;   reg 25 { d128(bb 0 insn -1) }
;;   reg 26 { d129(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 132
;;      reg 135 { d739(bb 17 insn 98) d738(bb 21 insn 129) }
;;   UD chains for insn luid 1 uid 133
;;      reg 140 { d742(bb 2 insn 12) }
;;   UD chains for insn luid 2 uid 134
;;      reg 24 { d119(bb 22 insn 133) }

( 22 )->[23]->( 28 )
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u166(11){ d43(bb 0 insn -1) }u167(13){ d51(bb 0 insn -1) }u168(25){ d128(bb 0 insn -1) }u169(26){ d129(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; live  gen 	 133
;; live  kill	
;; rd  in  	(45)
9, 10, 11, 24, 35, 42, 43, 50, 51, 119, 128, 129, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 771, 772
;; rd  gen 	(1)
737
;; rd  kill	(2)
736, 737
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141
;; rd  out 	(46)
9, 10, 11, 24, 35, 42, 43, 50, 51, 119, 128, 129, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 771, 772
;;  UD chains for artificial uses
;;   reg 11 { d43(bb 0 insn -1) }
;;   reg 13 { d51(bb 0 insn -1) }
;;   reg 25 { d128(bb 0 insn -1) }
;;   reg 26 { d129(bb 0 insn -1) }

( 22 20 )->[24]->( 26 25 )
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u170(11){ d43(bb 0 insn -1) }u171(13){ d51(bb 0 insn -1) }u172(25){ d128(bb 0 insn -1) }u173(26){ d129(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(50)
8, 9, 10, 11, 24, 35, 42, 43, 50, 51, 119, 121, 122, 128, 129, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772
;; rd  gen 	(1)
118
;; rd  kill	(16)
112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141
;; rd  out 	(48)
8, 9, 10, 11, 24, 35, 42, 43, 50, 51, 118, 128, 129, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772
;;  UD chains for artificial uses
;;   reg 11 { d43(bb 0 insn -1) }
;;   reg 13 { d51(bb 0 insn -1) }
;;   reg 25 { d128(bb 0 insn -1) }
;;   reg 26 { d129(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 141
;;      reg 140 { d742(bb 2 insn 12) }
;;   UD chains for insn luid 1 uid 142
;;      reg 24 { d118(bb 24 insn 141) }

( 24 )->[25]->( 26 27 )
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u176(11){ d43(bb 0 insn -1) }u177(13){ d51(bb 0 insn -1) }u178(25){ d128(bb 0 insn -1) }u179(26){ d129(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 24 [cc] 175 176 177 178
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141
;; live  gen 	 24 [cc] 175 176 177 178
;; live  kill	
;; rd  in  	(48)
8, 9, 10, 11, 24, 35, 42, 43, 50, 51, 118, 128, 129, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772
;; rd  gen 	(5)
117, 773, 774, 775, 776
;; rd  kill	(20)
112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 773, 774, 775, 776
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141
;; rd  out 	(52)
8, 9, 10, 11, 24, 35, 42, 43, 50, 51, 117, 128, 129, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776
;;  UD chains for artificial uses
;;   reg 11 { d43(bb 0 insn -1) }
;;   reg 13 { d51(bb 0 insn -1) }
;;   reg 25 { d128(bb 0 insn -1) }
;;   reg 26 { d129(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 145
;;      reg 175 { d773(bb 25 insn 144) }
;;   UD chains for insn luid 2 uid 146
;;      reg 176 { d774(bb 25 insn 145) }
;;   UD chains for insn luid 3 uid 147
;;      reg 178 { d776(bb 25 insn 146) }
;;   UD chains for insn luid 4 uid 148
;;      reg 140 { d742(bb 2 insn 12) }
;;      reg 177 { d775(bb 25 insn 147) }
;;   UD chains for insn luid 5 uid 149
;;      reg 24 { d117(bb 25 insn 148) }

( 24 25 )->[26]->( 29 )
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u186(11){ d43(bb 0 insn -1) }u187(13){ d51(bb 0 insn -1) }u188(25){ d128(bb 0 insn -1) }u189(26){ d129(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 180 181
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 180 181
;; live  kill	 14 [lr]
;; rd  in  	(53)
8, 9, 10, 11, 24, 35, 42, 43, 50, 51, 117, 118, 128, 129, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776
;; rd  gen 	(3)
7, 777, 778
;; rd  kill	(21)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 52, 53, 54, 55, 56, 57, 777, 778
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; rd  out 	(52)
7, 24, 35, 42, 43, 50, 51, 117, 118, 128, 129, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778
;;  UD chains for artificial uses
;;   reg 11 { d43(bb 0 insn -1) }
;;   reg 13 { d51(bb 0 insn -1) }
;;   reg 25 { d128(bb 0 insn -1) }
;;   reg 26 { d129(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 154
;;      reg 13 { d51(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 155
;;      reg 181 { d778(bb 26 insn 154) }
;;   eq_note reg 13 { }
;;   UD chains for insn luid 3 uid 157
;;      reg 180 { d777(bb 26 insn 155) }
;;   UD chains for insn luid 4 uid 158
;;      reg 140 { d742(bb 2 insn 12) }
;;   UD chains for insn luid 5 uid 159
;;      reg 13 { d51(bb 0 insn -1) }
;;      reg 0 { d2(bb 26 insn 156) }
;;      reg 1 { d16(bb 26 insn 157) }
;;      reg 2 { d29(bb 26 insn 158) }

( 25 )->[27]->( 28 )
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u199(11){ d43(bb 0 insn -1) }u200(13){ d51(bb 0 insn -1) }u201(25){ d128(bb 0 insn -1) }u202(26){ d129(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 133 182 183
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141
;; live  gen 	 133 182 183
;; live  kill	
;; rd  in  	(52)
8, 9, 10, 11, 24, 35, 42, 43, 50, 51, 117, 128, 129, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776
;; rd  gen 	(3)
736, 779, 780
;; rd  kill	(4)
736, 737, 779, 780
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141
;; rd  out 	(55)
8, 9, 10, 11, 24, 35, 42, 43, 50, 51, 117, 128, 129, 736, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 779, 780
;;  UD chains for artificial uses
;;   reg 11 { d43(bb 0 insn -1) }
;;   reg 13 { d51(bb 0 insn -1) }
;;   reg 25 { d128(bb 0 insn -1) }
;;   reg 26 { d129(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 164
;;      reg 140 { d742(bb 2 insn 12) }
;;   UD chains for insn luid 2 uid 166
;;      reg 182 { d779(bb 27 insn 164) }
;;      reg 183 { d780(bb 27 insn 165) }
;;   eq_note reg 182 { }

( 27 23 )->[28]->( 29 )
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u207(11){ d43(bb 0 insn -1) }u208(13){ d51(bb 0 insn -1) }u209(25){ d128(bb 0 insn -1) }u210(26){ d129(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141
;; live  gen 	
;; live  kill	
;; rd  in  	(57)
8, 9, 10, 11, 24, 35, 42, 43, 50, 51, 117, 119, 128, 129, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 779, 780
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; rd  out 	(57)
8, 9, 10, 11, 24, 35, 42, 43, 50, 51, 117, 119, 128, 129, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 779, 780
;;  UD chains for artificial uses
;;   reg 11 { d43(bb 0 insn -1) }
;;   reg 13 { d51(bb 0 insn -1) }
;;   reg 25 { d128(bb 0 insn -1) }
;;   reg 26 { d129(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 169
;;      reg 133 { d737(bb 23 insn 136) d736(bb 27 insn 166) }

( 28 26 )->[29]->( 1 )
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u212(11){ d43(bb 0 insn -1) }u213(13){ d51(bb 0 insn -1) }u214(25){ d128(bb 0 insn -1) }u215(26){ d129(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	
;; rd  in  	(61)
7, 8, 9, 10, 11, 24, 35, 42, 43, 50, 51, 117, 118, 119, 128, 129, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(61)
7, 8, 9, 10, 11, 24, 35, 42, 43, 50, 51, 117, 118, 119, 128, 129, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780
;;  UD chains for artificial uses
;;   reg 11 { d43(bb 0 insn -1) }
;;   reg 13 { d51(bb 0 insn -1) }
;;   reg 25 { d128(bb 0 insn -1) }
;;   reg 26 { d129(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 175
;;      reg 141 { d743(bb 2 insn 11) }
;;   UD chains for insn luid 2 uid 176
;;      reg 13 { d51(bb 0 insn -1) }
;;      reg 0 { d1(bb 29 insn 174) }
;;      reg 1 { d14(bb 29 insn 175) }

( 29 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u220(11){ d43(bb 0 insn -1) }u221(13){ d51(bb 0 insn -1) }u222(14){ }u223(25){ d128(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(61)
7, 8, 9, 10, 11, 24, 35, 42, 43, 50, 51, 117, 118, 119, 128, 129, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(61)
7, 8, 9, 10, 11, 24, 35, 42, 43, 50, 51, 117, 118, 119, 128, 129, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780
;;  UD chains for artificial uses
;;   reg 11 { d43(bb 0 insn -1) }
;;   reg 13 { d51(bb 0 insn -1) }
;;   reg 14 { }
;;   reg 25 { d128(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 14 to worklist
  Adding insn 10 to worklist
  Adding insn 185 to worklist
  Adding insn 22 to worklist
  Adding insn 29 to worklist
  Adding insn 187 to worklist
  Adding insn 39 to worklist
  Adding insn 49 to worklist
  Adding insn 53 to worklist
  Adding insn 57 to worklist
  Adding insn 64 to worklist
  Adding insn 189 to worklist
  Adding insn 74 to worklist
  Adding insn 83 to worklist
  Adding insn 82 to worklist
  Adding insn 87 to worklist
  Adding insn 191 to worklist
  Adding insn 90 to worklist
  Adding insn 96 to worklist
  Adding insn 193 to worklist
  Adding insn 104 to worklist
  Adding insn 112 to worklist
  Adding insn 195 to worklist
  Adding insn 122 to worklist
  Adding insn 134 to worklist
  Adding insn 132 to worklist
  Adding insn 197 to worklist
  Adding insn 142 to worklist
  Adding insn 149 to worklist
  Adding insn 199 to worklist
  Adding insn 159 to worklist
  Adding insn 169 to worklist
  Adding insn 176 to worklist
Finished finding needed instructions:
Processing use of (reg 13 sp) in insn 176:
Processing use of (reg 0 r0) in insn 176:
  Adding insn 174 to worklist
Processing use of (reg 1 r1) in insn 176:
  Adding insn 175 to worklist
Processing use of (reg 141 [ flags ]) in insn 175:
  Adding insn 11 to worklist
Processing use of (reg 0 r0) in insn 11:
Processing use of (reg 133 [ val ]) in insn 169:
  Adding insn 136 to worklist
  Adding insn 166 to worklist
Processing use of (reg 182) in insn 166:
  Adding insn 164 to worklist
Processing use of (reg 183) in insn 166:
  Adding insn 165 to worklist
Processing use of (reg 140 [ idx ]) in insn 164:
  Adding insn 12 to worklist
Processing use of (reg 144 [ idx ]) in insn 12:
  Adding insn 3 to worklist
Processing use of (reg 1 r1) in insn 3:
Processing use of (reg 13 sp) in insn 159:
Processing use of (reg 0 r0) in insn 159:
  Adding insn 156 to worklist
Processing use of (reg 1 r1) in insn 159:
  Adding insn 157 to worklist
Processing use of (reg 2 r2) in insn 159:
  Adding insn 158 to worklist
Processing use of (reg 140 [ idx ]) in insn 158:
Processing use of (reg 180) in insn 157:
  Adding insn 155 to worklist
Processing use of (reg 181) in insn 155:
  Adding insn 154 to worklist
Processing use of (reg 13 sp) in insn 154:
Processing use of (reg 24 cc) in insn 149:
  Adding insn 148 to worklist
Processing use of (reg 140 [ idx ]) in insn 148:
Processing use of (reg 177) in insn 148:
  Adding insn 147 to worklist
Processing use of (reg 178 [ <variable>.num_events ]) in insn 147:
  Adding insn 146 to worklist
Processing use of (reg 176 [ armpmu ]) in insn 146:
  Adding insn 145 to worklist
Processing use of (reg 175) in insn 145:
  Adding insn 144 to worklist
Processing use of (reg 24 cc) in insn 142:
  Adding insn 141 to worklist
Processing use of (reg 140 [ idx ]) in insn 141:
Processing use of (reg 135 [ val ]) in insn 132:
  Adding insn 98 to worklist
  Adding insn 129 to worklist
Processing use of (reg 173) in insn 129:
  Adding insn 127 to worklist
Processing use of (reg 174) in insn 129:
  Adding insn 128 to worklist
Processing use of (reg 140 [ idx ]) in insn 127:
Processing use of (reg 24 cc) in insn 134:
  Adding insn 133 to worklist
Processing use of (reg 140 [ idx ]) in insn 133:
Processing use of (reg 13 sp) in insn 122:
Processing use of (reg 0 r0) in insn 122:
  Adding insn 119 to worklist
Processing use of (reg 1 r1) in insn 122:
  Adding insn 120 to worklist
Processing use of (reg 2 r2) in insn 122:
  Adding insn 121 to worklist
Processing use of (reg 140 [ idx ]) in insn 121:
Processing use of (reg 171) in insn 120:
  Adding insn 118 to worklist
Processing use of (reg 172) in insn 118:
  Adding insn 117 to worklist
Processing use of (reg 13 sp) in insn 117:
Processing use of (reg 24 cc) in insn 112:
  Adding insn 111 to worklist
Processing use of (reg 140 [ idx ]) in insn 111:
Processing use of (reg 168) in insn 111:
  Adding insn 110 to worklist
Processing use of (reg 169 [ <variable>.num_events ]) in insn 110:
  Adding insn 109 to worklist
Processing use of (reg 167 [ armpmu ]) in insn 109:
  Adding insn 108 to worklist
Processing use of (reg 166) in insn 108:
  Adding insn 107 to worklist
Processing use of (reg 24 cc) in insn 104:
  Adding insn 95 to worklist
Processing use of (reg 140 [ idx ]) in insn 95:
Processing use of (reg 24 cc) in insn 96:
Processing use of (reg 165) in insn 90:
  Adding insn 89 to worklist
Processing use of (reg 142 [ D.25960 ]) in insn 89:
  Adding insn 55 to worklist
Processing use of (reg 143 [ hwc ]) in insn 55:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 24 cc) in insn 87:
  Adding insn 86 to worklist
Processing use of (reg 140 [ idx ]) in insn 86:
Processing use of (reg 144 [ idx ]) in insn 86:
  Adding insn 75 to worklist
Processing use of (reg 164) in insn 82:
  Adding insn 81 to worklist
Processing use of (reg 163) in insn 81:
  Adding insn 80 to worklist
Processing use of (reg 144 [ idx ]) in insn 80:
Processing use of (reg 13 sp) in insn 74:
Processing use of (reg 0 r0) in insn 74:
  Adding insn 71 to worklist
Processing use of (reg 1 r1) in insn 74:
  Adding insn 72 to worklist
Processing use of (reg 2 r2) in insn 74:
  Adding insn 73 to worklist
Processing use of (reg 144 [ idx ]) in insn 73:
Processing use of (reg 161) in insn 72:
  Adding insn 70 to worklist
Processing use of (reg 162) in insn 70:
  Adding insn 69 to worklist
Processing use of (reg 13 sp) in insn 69:
Processing use of (reg 24 cc) in insn 64:
  Adding insn 63 to worklist
Processing use of (reg 144 [ idx ]) in insn 63:
Processing use of (reg 158) in insn 63:
  Adding insn 62 to worklist
Processing use of (reg 159 [ <variable>.num_events ]) in insn 62:
  Adding insn 61 to worklist
Processing use of (reg 157 [ armpmu ]) in insn 61:
  Adding insn 60 to worklist
Processing use of (reg 156) in insn 60:
  Adding insn 59 to worklist
Processing use of (reg 24 cc) in insn 57:
  Adding insn 52 to worklist
Processing use of (reg 144 [ idx ]) in insn 52:
Processing use of (reg 24 cc) in insn 53:
Processing use of (reg 138 [ val ]) in insn 49:
  Adding insn 16 to worklist
  Adding insn 46 to worklist
Processing use of (reg 154) in insn 46:
  Adding insn 44 to worklist
Processing use of (reg 155) in insn 46:
  Adding insn 45 to worklist
Processing use of (reg 144 [ idx ]) in insn 44:
Processing use of (reg 13 sp) in insn 39:
Processing use of (reg 0 r0) in insn 39:
  Adding insn 36 to worklist
Processing use of (reg 1 r1) in insn 39:
  Adding insn 37 to worklist
Processing use of (reg 2 r2) in insn 39:
  Adding insn 38 to worklist
Processing use of (reg 144 [ idx ]) in insn 38:
Processing use of (reg 152) in insn 37:
  Adding insn 35 to worklist
Processing use of (reg 153) in insn 35:
  Adding insn 34 to worklist
Processing use of (reg 13 sp) in insn 34:
Processing use of (reg 24 cc) in insn 29:
  Adding insn 28 to worklist
Processing use of (reg 144 [ idx ]) in insn 28:
Processing use of (reg 149) in insn 28:
  Adding insn 27 to worklist
Processing use of (reg 150 [ <variable>.num_events ]) in insn 27:
  Adding insn 26 to worklist
Processing use of (reg 148 [ armpmu ]) in insn 26:
  Adding insn 25 to worklist
Processing use of (reg 145) in insn 25:
  Adding insn 7 to worklist
Processing use of (reg 24 cc) in insn 22:
  Adding insn 13 to worklist
Processing use of (reg 144 [ idx ]) in insn 13:
Processing use of (reg 13 sp) in insn 10:
Processing use of (reg 0 r0) in insn 10:
  Adding insn 9 to worklist
Processing use of (reg 145) in insn 9:
Processing use of (reg 24 cc) in insn 14:


armv7pmu_enable_event

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={13d,8u} r1={12d,6u} r2={11d,4u} r3={7d} r11={1d,29u} r12={7d} r13={1d,39u,4d} r14={6d,1u} r15={6d} r16={6d} r17={6d} r18={6d} r19={6d} r20={6d} r21={6d} r22={6d} r23={6d} r24={16d,13u} r25={1d,29u} r26={1d,28u} r27={6d} r28={6d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={6d} r38={6d} r39={6d} r40={6d} r41={6d} r42={6d} r43={6d} r44={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r76={6d} r77={6d} r78={6d} r79={6d} r80={6d} r81={6d} r82={6d} r83={6d} r84={6d} r85={6d} r86={6d} r87={6d} r88={6d} r89={6d} r90={6d} r91={6d} r92={6d} r93={6d} r94={6d} r95={6d} r96={6d} r97={6d} r98={6d} r99={6d} r100={6d} r101={6d} r102={6d} r103={6d} r104={6d} r105={6d} r106={6d} r107={6d} r108={6d} r109={6d} r110={6d} r111={6d} r112={6d} r113={6d} r114={6d} r115={6d} r116={6d} r117={6d} r118={6d} r119={6d} r120={6d} r121={6d} r122={6d} r123={6d} r124={6d} r125={6d} r126={6d} r127={6d} r133={2d,1u} r135={2d,1u} r138={2d,1u} r140={1d,10u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={2d,10u} r145={1d,2u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u,1d} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r171={1d,1u} r172={1d,1u} r173={1d,1u,1d} r174={1d,1u} r175={1d,1u} r176={1d,1u} r177={1d,1u} r178={1d,1u} r180={1d,1u} r181={1d,1u} r182={1d,1u,1d} r183={1d,1u} 
;;    total ref usage 1005{781d,217u,7e} in 103{97 regular + 6 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735
0[0,13] 1[13,12] 2[25,11] 3[36,7] 11[43,1] 12[44,7] 13[51,1] 14[52,6] 15[58,6] 16[64,6] 17[70,6] 18[76,6] 19[82,6] 20[88,6] 21[94,6] 22[100,6] 23[106,6] 24[112,16] 25[128,1] 26[129,1] 27[130,6] 28[136,6] 29[142,6] 30[148,6] 31[154,6] 32[160,6] 33[166,6] 34[172,6] 35[178,6] 36[184,6] 37[190,6] 38[196,6] 39[202,6] 40[208,6] 41[214,6] 42[220,6] 43[226,6] 44[232,6] 45[238,6] 46[244,6] 47[250,6] 48[256,6] 49[262,6] 50[268,6] 51[274,6] 52[280,6] 53[286,6] 54[292,6] 55[298,6] 56[304,6] 57[310,6] 58[316,6] 59[322,6] 60[328,6] 61[334,6] 62[340,6] 63[346,6] 64[352,6] 65[358,6] 66[364,6] 67[370,6] 68[376,6] 69[382,6] 70[388,6] 71[394,6] 72[400,6] 73[406,6] 74[412,6] 75[418,6] 76[424,6] 77[430,6] 78[436,6] 79[442,6] 80[448,6] 81[454,6] 82[460,6] 83[466,6] 84[472,6] 85[478,6] 86[484,6] 87[490,6] 88[496,6] 89[502,6] 90[508,6] 91[514,6] 92[520,6] 93[526,6] 94[532,6] 95[538,6] 96[544,6] 97[550,6] 98[556,6] 99[562,6] 100[568,6] 101[574,6] 102[580,6] 103[586,6] 104[592,6] 105[598,6] 106[604,6] 107[610,6] 108[616,6] 109[622,6] 110[628,6] 111[634,6] 112[640,6] 113[646,6] 114[652,6] 115[658,6] 116[664,6] 117[670,6] 118[676,6] 119[682,6] 120[688,6] 121[694,6] 122[700,6] 123[706,6] 124[712,6] 125[718,6] 126[724,6] 127[730,6] 133[736,2] 135[738,2] 138[740,2] 140[742,1] 141[743,1] 142[744,1] 143[745,1] 144[746,2] 145[748,1] 148[749,1] 149[750,1] 150[751,1] 152[752,1] 153[753,1] 154[754,1] 155[755,1] 156[756,1] 157[757,1] 158[758,1] 159[759,1] 161[760,1] 162[761,1] 163[762,1] 164[763,1] 165[764,1] 166[765,1] 167[766,1] 168[767,1] 169[768,1] 171[769,1] 172[770,1] 173[771,1] 174[772,1] 175[773,1] 176[774,1] 177[775,1] 178[776,1] 180[777,1] 181[778,1] 182[779,1] 183[780,1] 
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 140 141 143 144 145
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 24 [cc] 140 141 143 144 145
;; live  kill	 14 [lr]
;; rd  in  	(10)
12, 24, 35, 42, 43, 50, 51, 57, 128, 129
;; rd  gen 	(7)
11, 114, 742, 743, 745, 747, 748
;; rd  kill	(41)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 52, 53, 54, 55, 56, 57, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 742, 743, 745, 746, 747, 748

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 5 3 2 arch/arm/kernel/perf_event_v7.c:989 (set (reg/v/f:SI 143 [ hwc ])
        (reg:SI 0 r0 [ hwc ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ hwc ])
        (nil)))

(insn 3 2 4 2 arch/arm/kernel/perf_event_v7.c:989 (set (reg/v:SI 144 [ idx ])
        (reg:SI 1 r1 [ idx ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ idx ])
        (nil)))

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 9 2 arch/arm/kernel/perf_event_v7.c:996 (set (reg/f:SI 145)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 9 7 10 2 arch/arm/kernel/perf_event_v7.c:996 (set (reg:SI 0 r0)
        (plus:SI (reg/f:SI 145)
            (const_int 16 [0x10]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 16 [0x10])))
        (nil)))

(call_insn 10 9 11 2 arch/arm/kernel/perf_event_v7.c:996 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("_raw_spin_lock_irqsave") [flags 0x41] <function_decl 0x10b86a00 _raw_spin_lock_irqsave>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 11 10 12 2 arch/arm/kernel/perf_event_v7.c:996 (set (reg/v:SI 141 [ flags ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 12 11 13 2 arch/arm/kernel/perf_event_v7.c:1001 (set (reg/v:SI 140 [ idx ])
        (reg/v:SI 144 [ idx ])) 167 {*arm_movsi_insn} (nil))

(insn 13 12 14 2 arch/arm/kernel/perf_event_v7.c:877 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 144 [ idx ])
            (const_int 1 [0x1]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 14 13 15 2 arch/arm/kernel/perf_event_v7.c:877 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 19)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
        (nil)))
;; End of basic block 2 -> ( 4 3)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 140 141 143 144 145
;; live  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 140 141 143 144 145
;; rd  out 	(15)
11, 24, 35, 42, 43, 50, 51, 114, 128, 129, 742, 743, 745, 747, 748


;; Succ edge  4 [72.0%] 
;; Succ edge  3 [28.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u13(11){ }u14(13){ }u15(25){ }u16(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141 143 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 138
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 143 144
;; live  gen 	 138
;; live  kill	
;; rd  in  	(15)
11, 24, 35, 42, 43, 50, 51, 114, 128, 129, 742, 743, 745, 747, 748
;; rd  gen 	(1)
741
;; rd  kill	(2)
740, 741

;; Pred edge  2 [28.0%]  (fallthru)
(note 15 14 16 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 16 15 185 3 arch/arm/kernel/perf_event_v7.c:885 (set (reg/v:SI 138 [ val ])
        (const_int -2147483648 [0xffffffff80000000])) 167 {*arm_movsi_insn} (nil))

(jump_insn 185 16 186 3 (set (pc)
        (label_ref 47)) -1 (nil))
;; End of basic block 3 -> ( 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 140 141 143 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 140 141 143 144
;; rd  out 	(16)
11, 24, 35, 42, 43, 50, 51, 114, 128, 129, 741, 742, 743, 745, 747, 748


;; Succ edge  8 [100.0%] 

(barrier 186 185 19)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u17(11){ }u18(13){ }u19(25){ }u20(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 140 141 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 140 141 143 144 145
;; live  gen 	
;; live  kill	
;; rd  in  	(15)
11, 24, 35, 42, 43, 50, 51, 114, 128, 129, 742, 743, 745, 747, 748
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  2 [72.0%] 
(code_label 19 186 20 4 231 "" [1 uses])

(note 20 19 22 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(jump_insn 22 20 23 4 arch/arm/kernel/perf_event_v7.c:877 discrim 1 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 30)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 4 [0x4])
            (nil))))
;; End of basic block 4 -> ( 6 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141 143 144 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 143 144 145
;; rd  out 	(15)
11, 24, 35, 42, 43, 50, 51, 114, 128, 129, 742, 743, 745, 747, 748


;; Succ edge  6 [0.0%] 
;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u22(11){ }u23(13){ }u24(25){ }u25(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145
;; lr  def 	 24 [cc] 148 149 150
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 143 144 145
;; live  gen 	 24 [cc] 148 149 150
;; live  kill	
;; rd  in  	(15)
11, 24, 35, 42, 43, 50, 51, 114, 128, 129, 742, 743, 745, 747, 748
;; rd  gen 	(4)
113, 749, 750, 751
;; rd  kill	(19)
112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 749, 750, 751

;; Pred edge  4 [100.0%]  (fallthru)
(note 23 22 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 25 23 26 5 arch/arm/kernel/perf_event_v7.c:878 (set (reg/f:SI 148 [ armpmu ])
        (mem/f/c/i:SI (reg/f:SI 145) [0 armpmu+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 145)
        (expr_list:REG_EQUAL (mem/f/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 armpmu+0 S4 A32])
            (nil))))

(insn 26 25 27 5 arch/arm/kernel/perf_event_v7.c:878 (set (reg:SI 150 [ <variable>.num_events ])
        (mem/s/j:SI (plus:SI (reg/f:SI 148 [ armpmu ])
                (const_int 56 [0x38])) [0 <variable>.num_events+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 148 [ armpmu ])
        (nil)))

(insn 27 26 28 5 arch/arm/kernel/perf_event_v7.c:878 (set (reg:SI 149)
        (plus:SI (reg:SI 150 [ <variable>.num_events ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 150 [ <variable>.num_events ])
        (nil)))

(insn 28 27 29 5 arch/arm/kernel/perf_event_v7.c:878 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 144 [ idx ])
            (reg:SI 149))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 149)
        (nil)))

(jump_insn 29 28 30 5 arch/arm/kernel/perf_event_v7.c:878 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 42)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 5 -> ( 6 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141 143 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 143 144
;; rd  out 	(18)
11, 24, 35, 42, 43, 50, 51, 113, 128, 129, 742, 743, 745, 747, 748, 749, 750, 751


;; Succ edge  6 [0.0%]  (fallthru)
;; Succ edge  7 [100.0%] 

;; Start of basic block ( 4 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u32(11){ }u33(13){ }u34(25){ }u35(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 143 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 152 153
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 143 144
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 152 153
;; live  kill	 14 [lr]
;; rd  in  	(19)
11, 24, 35, 42, 43, 50, 51, 113, 114, 128, 129, 742, 743, 745, 747, 748, 749, 750, 751
;; rd  gen 	(3)
10, 752, 753
;; rd  kill	(21)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 52, 53, 54, 55, 56, 57, 752, 753

;; Pred edge  4 [0.0%] 
;; Pred edge  5 [0.0%]  (fallthru)
(code_label 30 29 31 6 233 "" [1 uses])

(note 31 30 34 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 34 31 35 6 arch/arm/kernel/perf_event_v7.c:879 (set (reg:SI 153)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 35 34 36 6 arch/arm/kernel/perf_event_v7.c:879 (set (reg:SI 152)
        (and:SI (reg:SI 153)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 153)
        (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
                (const_int -8192 [0xffffffffffffe000]))
            (nil))))

(insn 36 35 37 6 arch/arm/kernel/perf_event_v7.c:879 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC15") [flags 0x82] <string_cst 0x113e5120>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC15") [flags 0x82] <string_cst 0x113e5120>)
        (nil)))

(insn 37 36 38 6 arch/arm/kernel/perf_event_v7.c:879 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg:SI 152)
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 152)
        (nil)))

(insn 38 37 39 6 arch/arm/kernel/perf_event_v7.c:879 (set (reg:SI 2 r2)
        (reg/v:SI 144 [ idx ])) 167 {*arm_movsi_insn} (nil))

(call_insn 39 38 187 6 arch/arm/kernel/perf_event_v7.c:879 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(jump_insn 187 39 188 6 (set (pc)
        (label_ref 50)) -1 (nil))
;; End of basic block 6 -> ( 9)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141 143 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 143 144
;; rd  out 	(21)
10, 24, 35, 42, 43, 50, 51, 113, 114, 128, 129, 742, 743, 745, 747, 748, 749, 750, 751, 752, 753


;; Succ edge  9 [100.0%] 

(barrier 188 187 42)

;; Start of basic block ( 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u45(11){ }u46(13){ }u47(25){ }u48(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141 143 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 138 154 155
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 143 144
;; live  gen 	 138 154 155
;; live  kill	
;; rd  in  	(18)
11, 24, 35, 42, 43, 50, 51, 113, 128, 129, 742, 743, 745, 747, 748, 749, 750, 751
;; rd  gen 	(3)
740, 754, 755
;; rd  kill	(4)
740, 741, 754, 755

;; Pred edge  5 [100.0%] 
(code_label 42 188 43 7 234 "" [1 uses])

(note 43 42 44 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 44 43 45 7 arch/arm/kernel/perf_event_v7.c:887 (set (reg:SI 154)
        (plus:SI (reg/v:SI 144 [ idx ])
            (const_int -2 [0xfffffffffffffffe]))) 4 {*arm_addsi3} (nil))

(insn 45 44 46 7 arch/arm/kernel/perf_event_v7.c:887 (set (reg:SI 155)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 46 45 47 7 arch/arm/kernel/perf_event_v7.c:887 (set (reg/v:SI 138 [ val ])
        (ashift:SI (reg:SI 155)
            (reg:SI 154))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 155)
        (expr_list:REG_DEAD (reg:SI 154)
            (expr_list:REG_EQUAL (ashift:SI (const_int 1 [0x1])
                    (reg:SI 154))
                (nil)))))
;; End of basic block 7 -> ( 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 140 141 143 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 140 141 143 144
;; rd  out 	(21)
11, 24, 35, 42, 43, 50, 51, 113, 128, 129, 740, 742, 743, 745, 747, 748, 749, 750, 751, 754, 755


;; Succ edge  8 [100.0%]  (fallthru)

;; Start of basic block ( 7 3) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u53(11){ }u54(13){ }u55(25){ }u56(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 140 141 143 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 140 141 143 144
;; live  gen 	
;; live  kill	
;; rd  in  	(23)
11, 24, 35, 42, 43, 50, 51, 113, 114, 128, 129, 740, 741, 742, 743, 745, 747, 748, 749, 750, 751, 754, 755
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  7 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%] 
(code_label 47 46 48 8 232 "" [1 uses])

(note 48 47 49 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 49 48 50 8 arch/arm/kernel/perf_event_v7.c:889 (asm_operands/v ("mcr p15, 0, %0, c9, c12, 2") ("") 0 [
            (reg/v:SI 138 [ val ])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8919762) -1 (expr_list:REG_DEAD (reg/v:SI 138 [ val ])
        (nil)))
;; End of basic block 8 -> ( 9)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141 143 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 143 144
;; rd  out 	(23)
11, 24, 35, 42, 43, 50, 51, 113, 114, 128, 129, 740, 741, 742, 743, 745, 747, 748, 749, 750, 751, 754, 755


;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 8 6) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u58(11){ }u59(13){ }u60(25){ }u61(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141 143 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 143 144
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(26)
10, 11, 24, 35, 42, 43, 50, 51, 113, 114, 128, 129, 740, 741, 742, 743, 745, 747, 748, 749, 750, 751, 752, 753, 754, 755
;; rd  gen 	(1)
125
;; rd  kill	(16)
112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127

;; Pred edge  8 [100.0%]  (fallthru)
;; Pred edge  6 [100.0%] 
(code_label 50 49 51 9 235 "" [1 uses])

(note 51 50 52 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 52 51 53 9 arch/arm/kernel/perf_event_v7.c:1007 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 144 [ idx ])
            (const_int 1 [0x1]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 53 52 54 9 arch/arm/kernel/perf_event_v7.c:1007 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 93)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 2800 [0xaf0])
        (nil)))
;; End of basic block 9 -> ( 10 16)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 140 141 143 144
;; live  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 140 141 143 144
;; rd  out 	(25)
10, 11, 24, 35, 42, 43, 50, 51, 125, 128, 129, 740, 741, 742, 743, 745, 747, 748, 749, 750, 751, 752, 753, 754, 755


;; Succ edge  10 [72.0%]  (fallthru)
;; Succ edge  16 [28.0%] 

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u64(11){ }u65(13){ }u66(25){ }u67(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 140 141 143 144
;; lr  use 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 143
;; lr  def 	 142
;; live  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 140 141 143 144
;; live  gen 	 142
;; live  kill	
;; rd  in  	(25)
10, 11, 24, 35, 42, 43, 50, 51, 125, 128, 129, 740, 741, 742, 743, 745, 747, 748, 749, 750, 751, 752, 753, 754, 755
;; rd  gen 	(1)
744
;; rd  kill	(1)
744

;; Pred edge  9 [72.0%]  (fallthru)
(note 54 53 55 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 55 54 57 10 arch/arm/kernel/perf_event_v7.c:1008 (set (reg:SI 142 [ D.25960 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 143 [ hwc ])
                (const_int 16 [0x10])) [0 <variable>.D.23168.D.23159.config_base+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 143 [ hwc ])
        (nil)))

(jump_insn 57 55 58 10 arch/arm/kernel/perf_event_v7.c:800 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 65)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 4 [0x4])
            (nil))))
;; End of basic block 10 -> ( 12 11)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141 142 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 142 144
;; rd  out 	(26)
10, 11, 24, 35, 42, 43, 50, 51, 125, 128, 129, 740, 741, 742, 743, 744, 745, 747, 748, 749, 750, 751, 752, 753, 754, 755


;; Succ edge  12 [0.0%] 
;; Succ edge  11 [100.0%]  (fallthru)

;; Start of basic block ( 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u70(11){ }u71(13){ }u72(25){ }u73(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141 142 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 24 [cc] 156 157 158 159
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 142 144
;; live  gen 	 24 [cc] 156 157 158 159
;; live  kill	
;; rd  in  	(26)
10, 11, 24, 35, 42, 43, 50, 51, 125, 128, 129, 740, 741, 742, 743, 744, 745, 747, 748, 749, 750, 751, 752, 753, 754, 755
;; rd  gen 	(5)
112, 756, 757, 758, 759
;; rd  kill	(20)
112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 756, 757, 758, 759

;; Pred edge  10 [100.0%]  (fallthru)
(note 58 57 59 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 59 58 60 11 arch/arm/kernel/perf_event_v7.c:800 discrim 1 (set (reg/f:SI 156)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 60 59 61 11 arch/arm/kernel/perf_event_v7.c:800 discrim 1 (set (reg/f:SI 157 [ armpmu ])
        (mem/f/c/i:SI (reg/f:SI 156) [0 armpmu+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 156)
        (expr_list:REG_EQUAL (mem/f/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 armpmu+0 S4 A32])
            (nil))))

(insn 61 60 62 11 arch/arm/kernel/perf_event_v7.c:800 discrim 1 (set (reg:SI 159 [ <variable>.num_events ])
        (mem/s/j:SI (plus:SI (reg/f:SI 157 [ armpmu ])
                (const_int 56 [0x38])) [0 <variable>.num_events+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 157 [ armpmu ])
        (nil)))

(insn 62 61 63 11 arch/arm/kernel/perf_event_v7.c:800 discrim 1 (set (reg:SI 158)
        (plus:SI (reg:SI 159 [ <variable>.num_events ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 159 [ <variable>.num_events ])
        (nil)))

(insn 63 62 64 11 arch/arm/kernel/perf_event_v7.c:800 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 144 [ idx ])
            (reg:SI 158))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 158)
        (nil)))

(jump_insn 64 63 65 11 arch/arm/kernel/perf_event_v7.c:800 discrim 1 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 78)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 11 -> ( 12 13)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141 142 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 142 144
;; rd  out 	(30)
10, 11, 24, 35, 42, 43, 50, 51, 112, 128, 129, 740, 741, 742, 743, 744, 745, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759


;; Succ edge  12 [0.0%]  (fallthru)
;; Succ edge  13 [100.0%] 

;; Start of basic block ( 10 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u80(11){ }u81(13){ }u82(25){ }u83(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 142 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 144 161 162
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 142 144
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 144 161 162
;; live  kill	 14 [lr]
;; rd  in  	(31)
10, 11, 24, 35, 42, 43, 50, 51, 112, 125, 128, 129, 740, 741, 742, 743, 744, 745, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759
;; rd  gen 	(4)
9, 746, 760, 761
;; rd  kill	(23)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 52, 53, 54, 55, 56, 57, 746, 747, 760, 761

;; Pred edge  10 [0.0%] 
;; Pred edge  11 [0.0%]  (fallthru)
(code_label 65 64 66 12 237 "" [1 uses])

(note 66 65 69 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 69 66 70 12 arch/arm/kernel/perf_event_v7.c:801 (set (reg:SI 162)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 70 69 71 12 arch/arm/kernel/perf_event_v7.c:801 (set (reg:SI 161)
        (and:SI (reg:SI 162)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 162)
        (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
                (const_int -8192 [0xffffffffffffe000]))
            (nil))))

(insn 71 70 72 12 arch/arm/kernel/perf_event_v7.c:801 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x111c4900>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x111c4900>)
        (nil)))

(insn 72 71 73 12 arch/arm/kernel/perf_event_v7.c:801 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg:SI 161)
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 161)
        (nil)))

(insn 73 72 74 12 arch/arm/kernel/perf_event_v7.c:801 (set (reg:SI 2 r2)
        (reg/v:SI 144 [ idx ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 144 [ idx ])
        (nil)))

(call_insn 74 73 75 12 arch/arm/kernel/perf_event_v7.c:801 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 75 74 189 12 arch/arm/kernel/perf_event_v7.c:803 (set (reg/v:SI 144 [ idx ])
        (const_int -1 [0xffffffffffffffff])) 167 {*arm_movsi_insn} (nil))

(jump_insn 189 75 190 12 (set (pc)
        (label_ref 84)) -1 (nil))
;; End of basic block 12 -> ( 14)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141 142 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 142 144
;; rd  out 	(32)
9, 24, 35, 42, 43, 50, 51, 112, 125, 128, 129, 740, 741, 742, 743, 744, 745, 746, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761


;; Succ edge  14 [100.0%] 

(barrier 190 189 78)

;; Start of basic block ( 11) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u93(11){ }u94(13){ }u95(25){ }u96(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141 142 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 163 164
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 142 144
;; live  gen 	 163 164
;; live  kill	
;; rd  in  	(30)
10, 11, 24, 35, 42, 43, 50, 51, 112, 128, 129, 740, 741, 742, 743, 744, 745, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759
;; rd  gen 	(2)
762, 763
;; rd  kill	(2)
762, 763

;; Pred edge  11 [100.0%] 
(code_label 78 190 79 13 238 "" [1 uses])

(note 79 78 80 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 80 79 81 13 arch/arm/kernel/perf_event_v7.c:807 (set (reg:SI 163)
        (plus:SI (reg/v:SI 144 [ idx ])
            (const_int -2 [0xfffffffffffffffe]))) 4 {*arm_addsi3} (nil))

(insn 81 80 82 13 arch/arm/kernel/perf_event_v7.c:807 (set (reg:SI 164)
        (and:SI (reg:SI 163)
            (const_int 31 [0x1f]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 163)
        (nil)))

(insn 82 81 83 13 arch/arm/kernel/perf_event_v7.c:807 (asm_operands/v ("mcr p15, 0, %0, c9, c12, 5") ("") 0 [
            (reg:SI 164)
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8909266) -1 (expr_list:REG_DEAD (reg:SI 164)
        (nil)))

(insn 83 82 84 13 arch/arm/kernel/perf_event_v7.c:808 (parallel [
            (asm_operands/v ("isb") ("") 0 []
                 [] 8909394)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))
;; End of basic block 13 -> ( 14)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141 142 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 142 144
;; rd  out 	(32)
10, 11, 24, 35, 42, 43, 50, 51, 112, 128, 129, 740, 741, 742, 743, 744, 745, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 762, 763


;; Succ edge  14 [100.0%]  (fallthru)

;; Start of basic block ( 13 12) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u100(11){ }u101(13){ }u102(25){ }u103(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141 142 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 144
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 142 144
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(37)
9, 10, 11, 24, 35, 42, 43, 50, 51, 112, 125, 128, 129, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763
;; rd  gen 	(1)
123
;; rd  kill	(16)
112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127

;; Pred edge  13 [100.0%]  (fallthru)
;; Pred edge  12 [100.0%] 
(code_label 84 83 85 14 239 "" [1 uses])

(note 85 84 86 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 86 85 87 14 arch/arm/kernel/perf_event_v7.c:845 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 144 [ idx ])
            (reg/v:SI 140 [ idx ]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 144 [ idx ])
        (nil)))

(jump_insn 87 86 88 14 arch/arm/kernel/perf_event_v7.c:845 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 93)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 14 -> ( 15 16)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141 142
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 142
;; rd  out 	(36)
9, 10, 11, 24, 35, 42, 43, 50, 51, 123, 128, 129, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763


;; Succ edge  15 [28.0%]  (fallthru)
;; Succ edge  16 [72.0%] 

;; Start of basic block ( 14) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u107(11){ }u108(13){ }u109(25){ }u110(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141 142
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 165
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 142
;; live  gen 	 165
;; live  kill	
;; rd  in  	(36)
9, 10, 11, 24, 35, 42, 43, 50, 51, 123, 128, 129, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763
;; rd  gen 	(1)
764
;; rd  kill	(1)
764

;; Pred edge  14 [28.0%]  (fallthru)
(note 88 87 89 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 89 88 90 15 arch/arm/kernel/perf_event_v7.c:847 (set (reg:SI 165)
        (and:SI (reg:SI 142 [ D.25960 ])
            (const_int 255 [0xff]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 142 [ D.25960 ])
        (nil)))

(insn 90 89 191 15 arch/arm/kernel/perf_event_v7.c:847 (asm_operands/v ("mcr p15, 0, %0, c9, c13, 1") ("") 0 [
            (reg:SI 165)
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8914387) -1 (expr_list:REG_DEAD (reg:SI 165)
        (nil)))

(jump_insn 191 90 192 15 (set (pc)
        (label_ref 105)) -1 (nil))
;; End of basic block 15 -> ( 19)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141
;; rd  out 	(37)
9, 10, 11, 24, 35, 42, 43, 50, 51, 123, 128, 129, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764


;; Succ edge  19 [100.0%] 

(barrier 192 191 93)

;; Start of basic block ( 9 14) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u113(11){ }u114(13){ }u115(25){ }u116(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(37)
9, 10, 11, 24, 35, 42, 43, 50, 51, 123, 125, 128, 129, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763
;; rd  gen 	(1)
122
;; rd  kill	(16)
112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127

;; Pred edge  9 [28.0%] 
;; Pred edge  14 [72.0%] 
(code_label 93 192 94 16 236 "" [2 uses])

(note 94 93 95 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 95 94 96 16 arch/arm/kernel/perf_event_v7.c:898 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 140 [ idx ])
            (const_int 1 [0x1]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 96 95 97 16 arch/arm/kernel/perf_event_v7.c:898 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 101)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 6493 [0x195d])
        (nil)))
;; End of basic block 16 -> ( 18 17)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 140 141
;; live  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 140 141
;; rd  out 	(36)
9, 10, 11, 24, 35, 42, 43, 50, 51, 122, 128, 129, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763


;; Succ edge  18 [64.9%] 
;; Succ edge  17 [35.1%]  (fallthru)

;; Start of basic block ( 16) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u119(11){ }u120(13){ }u121(25){ }u122(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 135
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141
;; live  gen 	 135
;; live  kill	
;; rd  in  	(36)
9, 10, 11, 24, 35, 42, 43, 50, 51, 122, 128, 129, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763
;; rd  gen 	(1)
739
;; rd  kill	(2)
738, 739

;; Pred edge  16 [35.1%]  (fallthru)
(note 97 96 98 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 98 97 193 17 arch/arm/kernel/perf_event_v7.c:906 (set (reg/v:SI 135 [ val ])
        (const_int -2147483648 [0xffffffff80000000])) 167 {*arm_movsi_insn} (nil))

(jump_insn 193 98 194 17 (set (pc)
        (label_ref 130)) -1 (nil))
;; End of basic block 17 -> ( 22)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 140 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 141
;; rd  out 	(37)
9, 10, 11, 24, 35, 42, 43, 50, 51, 122, 128, 129, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763


;; Succ edge  22 [100.0%] 

(barrier 194 193 101)

;; Start of basic block ( 16) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u123(11){ }u124(13){ }u125(25){ }u126(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 140 141
;; lr  use 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 140 141
;; live  gen 	
;; live  kill	
;; rd  in  	(36)
9, 10, 11, 24, 35, 42, 43, 50, 51, 122, 128, 129, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  16 [64.9%] 
(code_label 101 194 102 18 241 "" [1 uses])

(note 102 101 104 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(jump_insn 104 102 105 18 arch/arm/kernel/perf_event_v7.c:898 discrim 1 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 113)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6 [0x6])
            (nil))))
;; End of basic block 18 -> ( 20 19)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141
;; rd  out 	(36)
9, 10, 11, 24, 35, 42, 43, 50, 51, 122, 128, 129, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763


;; Succ edge  20 [0.1%] 
;; Succ edge  19 [99.9%]  (fallthru)

;; Start of basic block ( 18 15) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u128(11){ }u129(13){ }u130(25){ }u131(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 24 [cc] 166 167 168 169
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141
;; live  gen 	 24 [cc] 166 167 168 169
;; live  kill	
;; rd  in  	(38)
9, 10, 11, 24, 35, 42, 43, 50, 51, 122, 123, 128, 129, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764
;; rd  gen 	(5)
121, 765, 766, 767, 768
;; rd  kill	(20)
112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 765, 766, 767, 768

;; Pred edge  18 [99.9%]  (fallthru)
;; Pred edge  15 [100.0%] 
(code_label 105 104 106 19 240 "" [1 uses])

(note 106 105 107 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 107 106 108 19 arch/arm/kernel/perf_event_v7.c:899 (set (reg/f:SI 166)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 108 107 109 19 arch/arm/kernel/perf_event_v7.c:899 (set (reg/f:SI 167 [ armpmu ])
        (mem/f/c/i:SI (reg/f:SI 166) [0 armpmu+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 166)
        (expr_list:REG_EQUAL (mem/f/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 armpmu+0 S4 A32])
            (nil))))

(insn 109 108 110 19 arch/arm/kernel/perf_event_v7.c:899 (set (reg:SI 169 [ <variable>.num_events ])
        (mem/s/j:SI (plus:SI (reg/f:SI 167 [ armpmu ])
                (const_int 56 [0x38])) [0 <variable>.num_events+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 167 [ armpmu ])
        (nil)))

(insn 110 109 111 19 arch/arm/kernel/perf_event_v7.c:899 (set (reg:SI 168)
        (plus:SI (reg:SI 169 [ <variable>.num_events ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 169 [ <variable>.num_events ])
        (nil)))

(insn 111 110 112 19 arch/arm/kernel/perf_event_v7.c:899 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 140 [ idx ])
            (reg:SI 168))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 168)
        (nil)))

(jump_insn 112 111 113 19 arch/arm/kernel/perf_event_v7.c:899 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 125)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 19 -> ( 20 21)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141
;; rd  out 	(41)
9, 10, 11, 24, 35, 42, 43, 50, 51, 121, 128, 129, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768


;; Succ edge  20 [0.0%]  (fallthru)
;; Succ edge  21 [100.0%] 

;; Start of basic block ( 18 19) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u138(11){ }u139(13){ }u140(25){ }u141(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 171 172
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 171 172
;; live  kill	 14 [lr]
;; rd  in  	(42)
9, 10, 11, 24, 35, 42, 43, 50, 51, 121, 122, 128, 129, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768
;; rd  gen 	(3)
8, 769, 770
;; rd  kill	(21)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 52, 53, 54, 55, 56, 57, 769, 770

;; Pred edge  18 [0.1%] 
;; Pred edge  19 [0.0%]  (fallthru)
(code_label 113 112 114 20 243 "" [1 uses])

(note 114 113 117 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn 117 114 118 20 arch/arm/kernel/perf_event_v7.c:900 (set (reg:SI 172)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 118 117 119 20 arch/arm/kernel/perf_event_v7.c:900 (set (reg:SI 171)
        (and:SI (reg:SI 172)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 172)
        (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
                (const_int -8192 [0xffffffffffffe000]))
            (nil))))

(insn 119 118 120 20 arch/arm/kernel/perf_event_v7.c:900 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC17") [flags 0x82] <string_cst 0x116e47e0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC17") [flags 0x82] <string_cst 0x116e47e0>)
        (nil)))

(insn 120 119 121 20 arch/arm/kernel/perf_event_v7.c:900 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg:SI 171)
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 171)
        (nil)))

(insn 121 120 122 20 arch/arm/kernel/perf_event_v7.c:900 (set (reg:SI 2 r2)
        (reg/v:SI 140 [ idx ])) 167 {*arm_movsi_insn} (nil))

(call_insn 122 121 195 20 arch/arm/kernel/perf_event_v7.c:900 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(jump_insn 195 122 196 20 (set (pc)
        (label_ref 139)) -1 (nil))
;; End of basic block 20 -> ( 24)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141
;; rd  out 	(42)
8, 24, 35, 42, 43, 50, 51, 121, 122, 128, 129, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770


;; Succ edge  24 [100.0%] 

(barrier 196 195 125)

;; Start of basic block ( 19) -> 21
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u151(11){ }u152(13){ }u153(25){ }u154(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 135 173 174
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141
;; live  gen 	 135 173 174
;; live  kill	
;; rd  in  	(41)
9, 10, 11, 24, 35, 42, 43, 50, 51, 121, 128, 129, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768
;; rd  gen 	(3)
738, 771, 772
;; rd  kill	(4)
738, 739, 771, 772

;; Pred edge  19 [100.0%] 
(code_label 125 196 126 21 244 "" [1 uses])

(note 126 125 127 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn 127 126 128 21 arch/arm/kernel/perf_event_v7.c:908 (set (reg:SI 173)
        (plus:SI (reg/v:SI 140 [ idx ])
            (const_int -2 [0xfffffffffffffffe]))) 4 {*arm_addsi3} (nil))

(insn 128 127 129 21 arch/arm/kernel/perf_event_v7.c:908 (set (reg:SI 174)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 129 128 130 21 arch/arm/kernel/perf_event_v7.c:908 (set (reg/v:SI 135 [ val ])
        (ashift:SI (reg:SI 174)
            (reg:SI 173))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 174)
        (expr_list:REG_DEAD (reg:SI 173)
            (expr_list:REG_EQUAL (ashift:SI (const_int 1 [0x1])
                    (reg:SI 173))
                (nil)))))
;; End of basic block 21 -> ( 22)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 140 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 141
;; rd  out 	(44)
9, 10, 11, 24, 35, 42, 43, 50, 51, 121, 128, 129, 738, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 771, 772


;; Succ edge  22 [100.0%]  (fallthru)

;; Start of basic block ( 21 17) -> 22
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u159(11){ }u160(13){ }u161(25){ }u162(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 140 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 141
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(46)
9, 10, 11, 24, 35, 42, 43, 50, 51, 121, 122, 128, 129, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 771, 772
;; rd  gen 	(1)
119
;; rd  kill	(16)
112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127

;; Pred edge  21 [100.0%]  (fallthru)
;; Pred edge  17 [100.0%] 
(code_label 130 129 131 22 242 "" [1 uses])

(note 131 130 132 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(insn 132 131 133 22 arch/arm/kernel/perf_event_v7.c:910 (asm_operands/v ("mcr p15, 0, %0, c9, c14, 1") ("") 0 [
            (reg/v:SI 135 [ val ])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8922450) -1 (expr_list:REG_DEAD (reg/v:SI 135 [ val ])
        (nil)))

(insn 133 132 134 22 arch/arm/kernel/perf_event_v7.c:855 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 140 [ idx ])
            (const_int 1 [0x1]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 134 133 135 22 arch/arm/kernel/perf_event_v7.c:855 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 139)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7198 [0x1c1e])
            (nil))))
;; End of basic block 22 -> ( 24 23)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141
;; rd  out 	(45)
9, 10, 11, 24, 35, 42, 43, 50, 51, 119, 128, 129, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 771, 772


;; Succ edge  24 [72.0%] 
;; Succ edge  23 [28.0%]  (fallthru)

;; Start of basic block ( 22) -> 23
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u166(11){ }u167(13){ }u168(25){ }u169(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; live  gen 	 133
;; live  kill	
;; rd  in  	(45)
9, 10, 11, 24, 35, 42, 43, 50, 51, 119, 128, 129, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 771, 772
;; rd  gen 	(1)
737
;; rd  kill	(2)
736, 737

;; Pred edge  22 [28.0%]  (fallthru)
(note 135 134 136 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(insn 136 135 197 23 arch/arm/kernel/perf_event_v7.c:863 (set (reg/v:SI 133 [ val ])
        (const_int -2147483648 [0xffffffff80000000])) 167 {*arm_movsi_insn} (nil))

(jump_insn 197 136 198 23 (set (pc)
        (label_ref 167)) -1 (nil))
;; End of basic block 23 -> ( 28)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141
;; rd  out 	(46)
9, 10, 11, 24, 35, 42, 43, 50, 51, 119, 128, 129, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 771, 772


;; Succ edge  28 [100.0%] 

(barrier 198 197 139)

;; Start of basic block ( 22 20) -> 24
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u170(11){ }u171(13){ }u172(25){ }u173(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(50)
8, 9, 10, 11, 24, 35, 42, 43, 50, 51, 119, 121, 122, 128, 129, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772
;; rd  gen 	(1)
118
;; rd  kill	(16)
112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127

;; Pred edge  22 [72.0%] 
;; Pred edge  20 [100.0%] 
(code_label 139 198 140 24 245 "" [2 uses])

(note 140 139 141 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(insn 141 140 142 24 arch/arm/kernel/perf_event_v7.c:855 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 140 [ idx ])
            (const_int 1 [0x1]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 142 141 143 24 arch/arm/kernel/perf_event_v7.c:855 discrim 1 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 150)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 4 [0x4])
            (nil))))
;; End of basic block 24 -> ( 26 25)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141
;; rd  out 	(48)
8, 9, 10, 11, 24, 35, 42, 43, 50, 51, 118, 128, 129, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772


;; Succ edge  26 [0.0%] 
;; Succ edge  25 [100.0%]  (fallthru)

;; Start of basic block ( 24) -> 25
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u176(11){ }u177(13){ }u178(25){ }u179(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 24 [cc] 175 176 177 178
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141
;; live  gen 	 24 [cc] 175 176 177 178
;; live  kill	
;; rd  in  	(48)
8, 9, 10, 11, 24, 35, 42, 43, 50, 51, 118, 128, 129, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772
;; rd  gen 	(5)
117, 773, 774, 775, 776
;; rd  kill	(20)
112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 773, 774, 775, 776

;; Pred edge  24 [100.0%]  (fallthru)
(note 143 142 144 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(insn 144 143 145 25 arch/arm/kernel/perf_event_v7.c:856 (set (reg/f:SI 175)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 145 144 146 25 arch/arm/kernel/perf_event_v7.c:856 (set (reg/f:SI 176 [ armpmu ])
        (mem/f/c/i:SI (reg/f:SI 175) [0 armpmu+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 175)
        (expr_list:REG_EQUAL (mem/f/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 armpmu+0 S4 A32])
            (nil))))

(insn 146 145 147 25 arch/arm/kernel/perf_event_v7.c:856 (set (reg:SI 178 [ <variable>.num_events ])
        (mem/s/j:SI (plus:SI (reg/f:SI 176 [ armpmu ])
                (const_int 56 [0x38])) [0 <variable>.num_events+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 176 [ armpmu ])
        (nil)))

(insn 147 146 148 25 arch/arm/kernel/perf_event_v7.c:856 (set (reg:SI 177)
        (plus:SI (reg:SI 178 [ <variable>.num_events ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 178 [ <variable>.num_events ])
        (nil)))

(insn 148 147 149 25 arch/arm/kernel/perf_event_v7.c:856 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 140 [ idx ])
            (reg:SI 177))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 177)
        (nil)))

(jump_insn 149 148 150 25 arch/arm/kernel/perf_event_v7.c:856 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 162)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 25 -> ( 26 27)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141
;; rd  out 	(52)
8, 9, 10, 11, 24, 35, 42, 43, 50, 51, 117, 128, 129, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776


;; Succ edge  26 [0.0%]  (fallthru)
;; Succ edge  27 [100.0%] 

;; Start of basic block ( 24 25) -> 26
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u186(11){ }u187(13){ }u188(25){ }u189(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 180 181
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 180 181
;; live  kill	 14 [lr]
;; rd  in  	(53)
8, 9, 10, 11, 24, 35, 42, 43, 50, 51, 117, 118, 128, 129, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776
;; rd  gen 	(3)
7, 777, 778
;; rd  kill	(21)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 52, 53, 54, 55, 56, 57, 777, 778

;; Pred edge  24 [0.0%] 
;; Pred edge  25 [0.0%]  (fallthru)
(code_label 150 149 151 26 247 "" [1 uses])

(note 151 150 154 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(insn 154 151 155 26 arch/arm/kernel/perf_event_v7.c:857 (set (reg:SI 181)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 155 154 156 26 arch/arm/kernel/perf_event_v7.c:857 (set (reg:SI 180)
        (and:SI (reg:SI 181)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 181)
        (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
                (const_int -8192 [0xffffffffffffe000]))
            (nil))))

(insn 156 155 157 26 arch/arm/kernel/perf_event_v7.c:857 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC18") [flags 0x82] <string_cst 0x1156a840>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC18") [flags 0x82] <string_cst 0x1156a840>)
        (nil)))

(insn 157 156 158 26 arch/arm/kernel/perf_event_v7.c:857 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg:SI 180)
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 180)
        (nil)))

(insn 158 157 159 26 arch/arm/kernel/perf_event_v7.c:857 (set (reg:SI 2 r2)
        (reg/v:SI 140 [ idx ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 140 [ idx ])
        (nil)))

(call_insn 159 158 199 26 arch/arm/kernel/perf_event_v7.c:857 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(jump_insn 199 159 200 26 (set (pc)
        (label_ref 170)) -1 (nil))
;; End of basic block 26 -> ( 29)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; rd  out 	(52)
7, 24, 35, 42, 43, 50, 51, 117, 118, 128, 129, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778


;; Succ edge  29 [100.0%] 

(barrier 200 199 162)

;; Start of basic block ( 25) -> 27
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u199(11){ }u200(13){ }u201(25){ }u202(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 133 182 183
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141
;; live  gen 	 133 182 183
;; live  kill	
;; rd  in  	(52)
8, 9, 10, 11, 24, 35, 42, 43, 50, 51, 117, 128, 129, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776
;; rd  gen 	(3)
736, 779, 780
;; rd  kill	(4)
736, 737, 779, 780

;; Pred edge  25 [100.0%] 
(code_label 162 200 163 27 248 "" [1 uses])

(note 163 162 164 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(insn 164 163 165 27 arch/arm/kernel/perf_event_v7.c:865 (set (reg:SI 182)
        (plus:SI (reg/v:SI 140 [ idx ])
            (const_int -2 [0xfffffffffffffffe]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/v:SI 140 [ idx ])
        (nil)))

(insn 165 164 166 27 arch/arm/kernel/perf_event_v7.c:865 (set (reg:SI 183)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 166 165 167 27 arch/arm/kernel/perf_event_v7.c:865 (set (reg/v:SI 133 [ val ])
        (ashift:SI (reg:SI 183)
            (reg:SI 182))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 183)
        (expr_list:REG_DEAD (reg:SI 182)
            (expr_list:REG_EQUAL (ashift:SI (const_int 1 [0x1])
                    (reg:SI 182))
                (nil)))))
;; End of basic block 27 -> ( 28)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141
;; rd  out 	(55)
8, 9, 10, 11, 24, 35, 42, 43, 50, 51, 117, 128, 129, 736, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 779, 780


;; Succ edge  28 [100.0%]  (fallthru)

;; Start of basic block ( 27 23) -> 28
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u207(11){ }u208(13){ }u209(25){ }u210(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141
;; live  gen 	
;; live  kill	
;; rd  in  	(57)
8, 9, 10, 11, 24, 35, 42, 43, 50, 51, 117, 119, 128, 129, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 779, 780
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  27 [100.0%]  (fallthru)
;; Pred edge  23 [100.0%] 
(code_label 167 166 168 28 246 "" [1 uses])

(note 168 167 169 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(insn 169 168 170 28 arch/arm/kernel/perf_event_v7.c:867 (asm_operands/v ("mcr p15, 0, %0, c9, c12, 1") ("") 0 [
            (reg/v:SI 133 [ val ])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8916946) -1 (expr_list:REG_DEAD (reg/v:SI 133 [ val ])
        (nil)))
;; End of basic block 28 -> ( 29)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; rd  out 	(57)
8, 9, 10, 11, 24, 35, 42, 43, 50, 51, 117, 119, 128, 129, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 779, 780


;; Succ edge  29 [100.0%]  (fallthru)

;; Start of basic block ( 28 26) -> 29
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u212(11){ }u213(13){ }u214(25){ }u215(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	
;; rd  in  	(61)
7, 8, 9, 10, 11, 24, 35, 42, 43, 50, 51, 117, 118, 119, 128, 129, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  28 [100.0%]  (fallthru)
;; Pred edge  26 [100.0%] 
(code_label 170 169 171 29 249 "" [1 uses])

(note 171 170 174 29 [bb 29] NOTE_INSN_BASIC_BLOCK)

(insn 174 171 175 29 arch/arm/kernel/perf_event_v7.c:1020 (set (reg:SI 0 r0)
        (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 16 [0x10])))) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 16 [0x10])))
        (nil)))

(insn 175 174 176 29 arch/arm/kernel/perf_event_v7.c:1020 (set (reg:SI 1 r1)
        (reg/v:SI 141 [ flags ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 141 [ flags ])
        (nil)))

(call_insn/j 176 175 177 29 arch/arm/kernel/perf_event_v7.c:1020 (parallel [
            (call (mem:SI (symbol_ref:SI ("_raw_spin_unlock_irqrestore") [flags 0x41] <function_decl 0x10b86d80 _raw_spin_unlock_irqrestore>) [0 S4 A32])
                (const_int 0 [0x0]))
            (return)
            (use (const_int 0 [0x0]))
        ]) 258 {*sibcall_insn} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 29 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(61)
7, 8, 9, 10, 11, 24, 35, 42, 43, 50, 51, 117, 118, 119, 128, 129, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 177 176 0)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function armv7pmu_get_event_idx (armv7pmu_get_event_idx)[0:1350]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 11 n_edges 14 count 21 (  1.9)
df_worklist_dataflow_doublequeue:n_basic_blocks 11 n_edges 14 count 22 (    2)
df_worklist_dataflow_doublequeue:n_basic_blocks 11 n_edges 14 count 24 (  2.2)


armv7pmu_get_event_idx

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={6d,7u} r1={5d,3u} r2={3d} r3={3d} r11={1d,10u} r12={3d} r13={1d,12u} r14={3d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={6d,4u} r25={1d,10u} r26={1d,9u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r134={4d,4u} r135={1d,1u} r136={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r143={1d,1u} r144={1d,1u} r146={1d,2u} r147={1d,1u} 
;;    total ref usage 336{266d,70u,0e} in 31{29 regular + 2 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252
0[0,6] 1[6,5] 2[11,3] 3[14,3] 11[17,1] 12[18,3] 13[21,1] 14[22,3] 15[25,2] 16[27,2] 17[29,2] 18[31,2] 19[33,2] 20[35,2] 21[37,2] 22[39,2] 23[41,2] 24[43,6] 25[49,1] 26[50,1] 27[51,2] 28[53,2] 29[55,2] 30[57,2] 31[59,2] 32[61,2] 33[63,2] 34[65,2] 35[67,2] 36[69,2] 37[71,2] 38[73,2] 39[75,2] 40[77,2] 41[79,2] 42[81,2] 43[83,2] 44[85,2] 45[87,2] 46[89,2] 47[91,2] 48[93,2] 49[95,2] 50[97,2] 51[99,2] 52[101,2] 53[103,2] 54[105,2] 55[107,2] 56[109,2] 57[111,2] 58[113,2] 59[115,2] 60[117,2] 61[119,2] 62[121,2] 63[123,2] 64[125,2] 65[127,2] 66[129,2] 67[131,2] 68[133,2] 69[135,2] 70[137,2] 71[139,2] 72[141,2] 73[143,2] 74[145,2] 75[147,2] 76[149,2] 77[151,2] 78[153,2] 79[155,2] 80[157,2] 81[159,2] 82[161,2] 83[163,2] 84[165,2] 85[167,2] 86[169,2] 87[171,2] 88[173,2] 89[175,2] 90[177,2] 91[179,2] 92[181,2] 93[183,2] 94[185,2] 95[187,2] 96[189,2] 97[191,2] 98[193,2] 99[195,2] 100[197,2] 101[199,2] 102[201,2] 103[203,2] 104[205,2] 105[207,2] 106[209,2] 107[211,2] 108[213,2] 109[215,2] 110[217,2] 111[219,2] 112[221,2] 113[223,2] 114[225,2] 115[227,2] 116[229,2] 117[231,2] 118[233,2] 119[235,2] 120[237,2] 121[239,2] 122[241,2] 123[243,2] 124[245,2] 125[247,2] 126[249,2] 127[251,2] 134[253,4] 135[257,1] 136[258,1] 138[259,1] 139[260,1] 140[261,1] 143[262,1] 144[263,1] 146[264,1] 147[265,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d5(0){ }d10(1){ }d13(2){ }d16(3){ }d17(11){ }d20(12){ }d21(13){ }d24(14){ }d49(25){ }d50(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
5, 10, 13, 16, 17, 20, 21, 24, 49, 50
;; rd  kill	(27)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 49, 50
;; lr  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
5, 10, 13, 16, 17, 20, 21, 24, 49, 50

( 0 )->[2]->( 4 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d17(bb 0 insn -1) }u1(13){ d21(bb 0 insn -1) }u2(25){ d49(bb 0 insn -1) }u3(26){ d50(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 138 139 140 146
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 138 139 140 146
;; live  kill	
;; rd  in  	(10)
5, 10, 13, 16, 17, 20, 21, 24, 49, 50
;; rd  gen 	(5)
48, 259, 260, 261, 264
;; rd  kill	(10)
43, 44, 45, 46, 47, 48, 259, 260, 261, 264
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146
;; rd  out 	(15)
5, 10, 13, 16, 17, 20, 21, 24, 48, 49, 50, 259, 260, 261, 264
;;  UD chains for artificial uses
;;   reg 11 { d17(bb 0 insn -1) }
;;   reg 13 { d21(bb 0 insn -1) }
;;   reg 25 { d49(bb 0 insn -1) }
;;   reg 26 { d50(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d5(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 3
;;      reg 1 { d10(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 7
;;      reg 139 { d260(bb 2 insn 3) }
;;   UD chains for insn luid 3 uid 8
;;      reg 140 { d261(bb 2 insn 7) }
;;   UD chains for insn luid 4 uid 65
;;      reg 138 { d259(bb 2 insn 2) }
;;   UD chains for insn luid 5 uid 9
;;      reg 24 { d48(bb 2 insn 8) }

( 2 )->[3]->( 8 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u10(11){ d17(bb 0 insn -1) }u11(13){ d21(bb 0 insn -1) }u12(25){ d49(bb 0 insn -1) }u13(26){ d50(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134 147
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146
;; live  gen 	 134 147
;; live  kill	
;; rd  in  	(15)
5, 10, 13, 16, 17, 20, 21, 24, 48, 49, 50, 259, 260, 261, 264
;; rd  gen 	(2)
256, 265
;; rd  kill	(5)
253, 254, 255, 256, 265
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 146 147
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 146 147
;; rd  out 	(17)
5, 10, 13, 16, 17, 20, 21, 24, 48, 49, 50, 256, 259, 260, 261, 264, 265
;;  UD chains for artificial uses
;;   reg 11 { d17(bb 0 insn -1) }
;;   reg 13 { d21(bb 0 insn -1) }
;;   reg 25 { d49(bb 0 insn -1) }
;;   reg 26 { d50(bb 0 insn -1) }

( 2 )->[4]->( 9 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u14(11){ d17(bb 0 insn -1) }u15(13){ d21(bb 0 insn -1) }u16(25){ d49(bb 0 insn -1) }u17(26){ d50(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 136
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 136
;; live  kill	 14 [lr]
;; rd  in  	(15)
5, 10, 13, 16, 17, 20, 21, 24, 48, 49, 50, 259, 260, 261, 264
;; rd  gen 	(3)
3, 46, 258
;; rd  kill	(16)
0, 1, 2, 3, 4, 5, 22, 23, 24, 43, 44, 45, 46, 47, 48, 258
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(15)
3, 10, 13, 16, 17, 20, 21, 46, 49, 50, 258, 259, 260, 261, 264
;;  UD chains for artificial uses
;;   reg 11 { d17(bb 0 insn -1) }
;;   reg 13 { d21(bb 0 insn -1) }
;;   reg 25 { d49(bb 0 insn -1) }
;;   reg 26 { d50(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 19
;;      reg 146 { d264(bb 2 insn 65) }
;;   UD chains for insn luid 2 uid 20
;;      reg 13 { d21(bb 0 insn -1) }
;;      reg 0 { d4(bb 4 insn 18) }
;;      reg 1 { d7(bb 4 insn 19) }
;;   UD chains for insn luid 3 uid 21
;;      reg 0 { d3(bb 4 insn 20) }
;;   UD chains for insn luid 4 uid 22
;;      reg 136 { d258(bb 4 insn 21) }
;;   UD chains for insn luid 5 uid 23
;;      reg 24 { d46(bb 4 insn 22) }

( 4 )->[5]->( 10 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u25(11){ d17(bb 0 insn -1) }u26(13){ d21(bb 0 insn -1) }u27(25){ d49(bb 0 insn -1) }u28(26){ d50(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 134
;; live  kill	
;; rd  in  	(15)
3, 10, 13, 16, 17, 20, 21, 46, 49, 50, 258, 259, 260, 261, 264
;; rd  gen 	(1)
255
;; rd  kill	(4)
253, 254, 255, 256
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; rd  out 	(16)
3, 10, 13, 16, 17, 20, 21, 46, 49, 50, 255, 258, 259, 260, 261, 264
;;  UD chains for artificial uses
;;   reg 11 { d17(bb 0 insn -1) }
;;   reg 13 { d21(bb 0 insn -1) }
;;   reg 25 { d49(bb 0 insn -1) }
;;   reg 26 { d50(bb 0 insn -1) }

( 8 )->[6]->( 10 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u29(11){ d17(bb 0 insn -1) }u30(13){ d21(bb 0 insn -1) }u31(25){ d49(bb 0 insn -1) }u32(26){ d50(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 146 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 146
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 135
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 146 147
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 135
;; live  kill	 14 [lr]
;; rd  in  	(22)
1, 5, 10, 13, 16, 17, 20, 21, 24, 43, 49, 50, 254, 256, 257, 259, 260, 261, 262, 263, 264, 265
;; rd  gen 	(3)
1, 44, 257
;; rd  kill	(16)
0, 1, 2, 3, 4, 5, 22, 23, 24, 43, 44, 45, 46, 47, 48, 257
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 146 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 146 147
;; rd  out 	(20)
1, 10, 13, 16, 17, 20, 21, 44, 49, 50, 254, 256, 257, 259, 260, 261, 262, 263, 264, 265
;;  UD chains for artificial uses
;;   reg 11 { d17(bb 0 insn -1) }
;;   reg 13 { d21(bb 0 insn -1) }
;;   reg 25 { d49(bb 0 insn -1) }
;;   reg 26 { d50(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 29
;;      reg 134 { d256(bb 3 insn 12) d254(bb 7 insn 36) }
;;   UD chains for insn luid 1 uid 30
;;      reg 146 { d264(bb 2 insn 65) }
;;   UD chains for insn luid 2 uid 31
;;      reg 13 { d21(bb 0 insn -1) }
;;      reg 0 { d2(bb 6 insn 29) }
;;      reg 1 { d6(bb 6 insn 30) }
;;   UD chains for insn luid 3 uid 32
;;      reg 0 { d1(bb 6 insn 31) }
;;   UD chains for insn luid 4 uid 33
;;      reg 135 { d257(bb 6 insn 32) }
;;   UD chains for insn luid 5 uid 34
;;      reg 24 { d44(bb 6 insn 33) }

( 6 )->[7]->( 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u41(11){ d17(bb 0 insn -1) }u42(13){ d21(bb 0 insn -1) }u43(25){ d49(bb 0 insn -1) }u44(26){ d50(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 146 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 134
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 146 147
;; live  gen 	 134
;; live  kill	
;; rd  in  	(20)
1, 10, 13, 16, 17, 20, 21, 44, 49, 50, 254, 256, 257, 259, 260, 261, 262, 263, 264, 265
;; rd  gen 	(1)
254
;; rd  kill	(4)
253, 254, 255, 256
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 146 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 146 147
;; rd  out 	(19)
1, 10, 13, 16, 17, 20, 21, 44, 49, 50, 254, 257, 259, 260, 261, 262, 263, 264, 265
;;  UD chains for artificial uses
;;   reg 11 { d17(bb 0 insn -1) }
;;   reg 13 { d21(bb 0 insn -1) }
;;   reg 25 { d49(bb 0 insn -1) }
;;   reg 26 { d50(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 36
;;      reg 134 { d256(bb 3 insn 12) d254(bb 7 insn 36) }

( 7 3 )->[8]->( 6 9 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u46(11){ d17(bb 0 insn -1) }u47(13){ d21(bb 0 insn -1) }u48(25){ d49(bb 0 insn -1) }u49(26){ d50(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 146 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 147
;; lr  def 	 24 [cc] 143 144
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 146 147
;; live  gen 	 24 [cc] 143 144
;; live  kill	
;; rd  in  	(23)
1, 5, 10, 13, 16, 17, 20, 21, 24, 44, 48, 49, 50, 254, 256, 257, 259, 260, 261, 262, 263, 264, 265
;; rd  gen 	(3)
43, 262, 263
;; rd  kill	(8)
43, 44, 45, 46, 47, 48, 262, 263
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 146 147
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 146 147
;; rd  out 	(22)
1, 5, 10, 13, 16, 17, 20, 21, 24, 43, 49, 50, 254, 256, 257, 259, 260, 261, 262, 263, 264, 265
;;  UD chains for artificial uses
;;   reg 11 { d17(bb 0 insn -1) }
;;   reg 13 { d21(bb 0 insn -1) }
;;   reg 25 { d49(bb 0 insn -1) }
;;   reg 26 { d50(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 41
;;      reg 147 { d265(bb 3 insn 40) }
;;   UD chains for insn luid 1 uid 42
;;      reg 143 { d262(bb 8 insn 41) }
;;   UD chains for insn luid 2 uid 43
;;      reg 134 { d256(bb 3 insn 12) d254(bb 7 insn 36) }
;;      reg 144 { d263(bb 8 insn 42) }
;;   UD chains for insn luid 3 uid 44
;;      reg 24 { d43(bb 8 insn 43) }

( 4 8 )->[9]->( 10 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u55(11){ d17(bb 0 insn -1) }u56(13){ d21(bb 0 insn -1) }u57(25){ d49(bb 0 insn -1) }u58(26){ d50(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 134
;; live  kill	
;; rd  in  	(25)
1, 3, 5, 10, 13, 16, 17, 20, 21, 24, 43, 46, 49, 50, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265
;; rd  gen 	(1)
253
;; rd  kill	(4)
253, 254, 255, 256
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; rd  out 	(24)
1, 3, 5, 10, 13, 16, 17, 20, 21, 24, 43, 46, 49, 50, 253, 257, 258, 259, 260, 261, 262, 263, 264, 265
;;  UD chains for artificial uses
;;   reg 11 { d17(bb 0 insn -1) }
;;   reg 13 { d21(bb 0 insn -1) }
;;   reg 25 { d49(bb 0 insn -1) }
;;   reg 26 { d50(bb 0 insn -1) }

( 9 6 5 )->[10]->( 1 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u59(11){ d17(bb 0 insn -1) }u60(13){ d21(bb 0 insn -1) }u61(25){ d49(bb 0 insn -1) }u62(26){ d50(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(28)
1, 3, 5, 10, 13, 16, 17, 20, 21, 24, 43, 44, 46, 49, 50, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265
;; rd  gen 	(1)
0
;; rd  kill	(6)
0, 1, 2, 3, 4, 5
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(26)
0, 10, 13, 16, 17, 20, 21, 24, 43, 44, 46, 49, 50, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265
;;  UD chains for artificial uses
;;   reg 11 { d17(bb 0 insn -1) }
;;   reg 13 { d21(bb 0 insn -1) }
;;   reg 25 { d49(bb 0 insn -1) }
;;   reg 26 { d50(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 54
;;      reg 134 { d256(bb 3 insn 12) d255(bb 5 insn 25) d254(bb 7 insn 36) d253(bb 9 insn 47) }
;;   UD chains for insn luid 1 uid 60
;;      reg 0 { d0(bb 10 insn 54) }

( 10 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u65(0){ d0(bb 10 insn 54) }u66(11){ d17(bb 0 insn -1) }u67(13){ d21(bb 0 insn -1) }u68(14){ d24(bb 0 insn -1) }u69(25){ d49(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(26)
0, 10, 13, 16, 17, 20, 21, 24, 43, 44, 46, 49, 50, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(26)
0, 10, 13, 16, 17, 20, 21, 24, 43, 44, 46, 49, 50, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265
;;  UD chains for artificial uses
;;   reg 0 { d0(bb 10 insn 54) }
;;   reg 11 { d17(bb 0 insn -1) }
;;   reg 13 { d21(bb 0 insn -1) }
;;   reg 14 { d24(bb 0 insn -1) }
;;   reg 25 { d49(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 9 to worklist
  Adding insn 68 to worklist
  Adding insn 23 to worklist
  Adding insn 20 to worklist
  Adding insn 70 to worklist
  Adding insn 34 to worklist
  Adding insn 31 to worklist
  Adding insn 44 to worklist
  Adding insn 60 to worklist
Finished finding needed instructions:
  Adding insn 54 to worklist
Processing use of (reg 134 [ idx ]) in insn 54:
  Adding insn 12 to worklist
  Adding insn 25 to worklist
  Adding insn 36 to worklist
  Adding insn 47 to worklist
Processing use of (reg 134 [ idx ]) in insn 36:
Processing use of (reg 0 r0) in insn 60:
Processing use of (reg 24 cc) in insn 44:
  Adding insn 43 to worklist
Processing use of (reg 134 [ idx ]) in insn 43:
Processing use of (reg 144 [ <variable>.num_events ]) in insn 43:
  Adding insn 42 to worklist
Processing use of (reg 143 [ armpmu ]) in insn 42:
  Adding insn 41 to worklist
Processing use of (reg 147) in insn 41:
  Adding insn 40 to worklist
Processing use of (reg 13 sp) in insn 31:
Processing use of (reg 0 r0) in insn 31:
  Adding insn 29 to worklist
Processing use of (reg 1 r1) in insn 31:
  Adding insn 30 to worklist
Processing use of (reg 146) in insn 30:
  Adding insn 65 to worklist
Processing use of (reg 138 [ cpuc ]) in insn 65:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 134 [ idx ]) in insn 29:
Processing use of (reg 24 cc) in insn 34:
  Adding insn 33 to worklist
Processing use of (reg 135 [ D.26066 ]) in insn 33:
  Adding insn 32 to worklist
Processing use of (reg 0 r0) in insn 32:
Processing use of (reg 13 sp) in insn 20:
Processing use of (reg 0 r0) in insn 20:
  Adding insn 18 to worklist
Processing use of (reg 1 r1) in insn 20:
  Adding insn 19 to worklist
Processing use of (reg 146) in insn 19:
Processing use of (reg 24 cc) in insn 23:
  Adding insn 22 to worklist
Processing use of (reg 136 [ D.26062 ]) in insn 22:
  Adding insn 21 to worklist
Processing use of (reg 0 r0) in insn 21:
Processing use of (reg 24 cc) in insn 9:
  Adding insn 8 to worklist
Processing use of (reg 140 [ <variable>.D.23168.D.23159.config_base ]) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 139 [ event ]) in insn 7:
  Adding insn 3 to worklist
Processing use of (reg 1 r1) in insn 3:


armv7pmu_get_event_idx

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={6d,7u} r1={5d,3u} r2={3d} r3={3d} r11={1d,10u} r12={3d} r13={1d,12u} r14={3d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={6d,4u} r25={1d,10u} r26={1d,9u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r134={4d,4u} r135={1d,1u} r136={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r143={1d,1u} r144={1d,1u} r146={1d,2u} r147={1d,1u} 
;;    total ref usage 336{266d,70u,0e} in 31{29 regular + 2 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252
0[0,6] 1[6,5] 2[11,3] 3[14,3] 11[17,1] 12[18,3] 13[21,1] 14[22,3] 15[25,2] 16[27,2] 17[29,2] 18[31,2] 19[33,2] 20[35,2] 21[37,2] 22[39,2] 23[41,2] 24[43,6] 25[49,1] 26[50,1] 27[51,2] 28[53,2] 29[55,2] 30[57,2] 31[59,2] 32[61,2] 33[63,2] 34[65,2] 35[67,2] 36[69,2] 37[71,2] 38[73,2] 39[75,2] 40[77,2] 41[79,2] 42[81,2] 43[83,2] 44[85,2] 45[87,2] 46[89,2] 47[91,2] 48[93,2] 49[95,2] 50[97,2] 51[99,2] 52[101,2] 53[103,2] 54[105,2] 55[107,2] 56[109,2] 57[111,2] 58[113,2] 59[115,2] 60[117,2] 61[119,2] 62[121,2] 63[123,2] 64[125,2] 65[127,2] 66[129,2] 67[131,2] 68[133,2] 69[135,2] 70[137,2] 71[139,2] 72[141,2] 73[143,2] 74[145,2] 75[147,2] 76[149,2] 77[151,2] 78[153,2] 79[155,2] 80[157,2] 81[159,2] 82[161,2] 83[163,2] 84[165,2] 85[167,2] 86[169,2] 87[171,2] 88[173,2] 89[175,2] 90[177,2] 91[179,2] 92[181,2] 93[183,2] 94[185,2] 95[187,2] 96[189,2] 97[191,2] 98[193,2] 99[195,2] 100[197,2] 101[199,2] 102[201,2] 103[203,2] 104[205,2] 105[207,2] 106[209,2] 107[211,2] 108[213,2] 109[215,2] 110[217,2] 111[219,2] 112[221,2] 113[223,2] 114[225,2] 115[227,2] 116[229,2] 117[231,2] 118[233,2] 119[235,2] 120[237,2] 121[239,2] 122[241,2] 123[243,2] 124[245,2] 125[247,2] 126[249,2] 127[251,2] 134[253,4] 135[257,1] 136[258,1] 138[259,1] 139[260,1] 140[261,1] 143[262,1] 144[263,1] 146[264,1] 147[265,1] 
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 138 139 140 146
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 138 139 140 146
;; live  kill	
;; rd  in  	(10)
5, 10, 13, 16, 17, 20, 21, 24, 49, 50
;; rd  gen 	(5)
48, 259, 260, 261, 264
;; rd  kill	(10)
43, 44, 45, 46, 47, 48, 259, 260, 261, 264

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 5 3 2 arch/arm/kernel/perf_event_v7.c:1130 (set (reg/v/f:SI 138 [ cpuc ])
        (reg:SI 0 r0 [ cpuc ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ cpuc ])
        (nil)))

(insn 3 2 4 2 arch/arm/kernel/perf_event_v7.c:1130 (set (reg/v/f:SI 139 [ event ])
        (reg:SI 1 r1 [ event ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ event ])
        (nil)))

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 8 2 arch/arm/kernel/perf_event_v7.c:1134 (set (reg:SI 140 [ <variable>.D.23168.D.23159.config_base ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 139 [ event ])
                (const_int 16 [0x10])) [0 <variable>.D.23168.D.23159.config_base+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 139 [ event ])
        (nil)))

(insn 8 7 65 2 arch/arm/kernel/perf_event_v7.c:1134 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 140 [ <variable>.D.23168.D.23159.config_base ])
            (const_int 255 [0xff]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 140 [ <variable>.D.23168.D.23159.config_base ])
        (nil)))

(insn 65 8 9 2 (set (reg/f:SI 146)
        (plus:SI (reg/v/f:SI 138 [ cpuc ])
            (const_int 132 [0x84]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/v/f:SI 138 [ cpuc ])
        (nil)))

(jump_insn 9 65 10 2 arch/arm/kernel/perf_event_v7.c:1134 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 15)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 1371 [0x55b])
            (nil))))
;; End of basic block 2 -> ( 4 3)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146
;; rd  out 	(15)
5, 10, 13, 16, 17, 20, 21, 24, 48, 49, 50, 259, 260, 261, 264


;; Succ edge  4 [13.7%] 
;; Succ edge  3 [86.3%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u10(11){ }u11(13){ }u12(25){ }u13(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134 147
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146
;; live  gen 	 134 147
;; live  kill	
;; rd  in  	(15)
5, 10, 13, 16, 17, 20, 21, 24, 48, 49, 50, 259, 260, 261, 264
;; rd  gen 	(2)
256, 265
;; rd  kill	(5)
253, 254, 255, 256, 265

;; Pred edge  2 [86.3%]  (fallthru)
(note 10 9 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 12 10 40 3 arch/arm/kernel/perf_event_v7.c:1145 (set (reg/v:SI 134 [ idx ])
        (const_int 2 [0x2])) 167 {*arm_movsi_insn} (nil))

(insn 40 12 68 3 arch/arm/kernel/perf_event_v7.c:1144 (set (reg/f:SI 147)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(jump_insn 68 40 69 3 (set (pc)
        (label_ref 37)) -1 (nil))
;; End of basic block 3 -> ( 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 146 147
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 146 147
;; rd  out 	(17)
5, 10, 13, 16, 17, 20, 21, 24, 48, 49, 50, 256, 259, 260, 261, 264, 265


;; Succ edge  8 [100.0%] 

(barrier 69 68 15)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u14(11){ }u15(13){ }u16(25){ }u17(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 136
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 136
;; live  kill	 14 [lr]
;; rd  in  	(15)
5, 10, 13, 16, 17, 20, 21, 24, 48, 49, 50, 259, 260, 261, 264
;; rd  gen 	(3)
3, 46, 258
;; rd  kill	(16)
0, 1, 2, 3, 4, 5, 22, 23, 24, 43, 44, 45, 46, 47, 48, 258

;; Pred edge  2 [13.7%] 
(code_label 15 69 16 4 254 "" [1 uses])

(note 16 15 18 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 18 16 19 4 arch/arm/kernel/perf_event_v7.c:1135 (set (reg:SI 0 r0)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 19 18 20 4 arch/arm/kernel/perf_event_v7.c:1135 (set (reg:SI 1 r1)
        (reg/f:SI 146)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 146)
        (nil)))

(call_insn 20 19 21 4 arch/arm/kernel/perf_event_v7.c:1135 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("_test_and_set_bit") [flags 0x41] <function_decl 0x512e0180 _test_and_set_bit>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 21 20 22 4 arch/arm/kernel/perf_event_v7.c:1135 (set (reg:SI 136 [ D.26062 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 22 21 23 4 arch/arm/kernel/perf_event_v7.c:1135 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 136 [ D.26062 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 136 [ D.26062 ])
        (nil)))

(jump_insn 23 22 24 4 arch/arm/kernel/perf_event_v7.c:1135 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 45)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 4 -> ( 9 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(15)
3, 10, 13, 16, 17, 20, 21, 46, 49, 50, 258, 259, 260, 261, 264


;; Succ edge  9 [50.0%] 
;; Succ edge  5 [50.0%]  (fallthru)

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u25(11){ }u26(13){ }u27(25){ }u28(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 134
;; live  kill	
;; rd  in  	(15)
3, 10, 13, 16, 17, 20, 21, 46, 49, 50, 258, 259, 260, 261, 264
;; rd  gen 	(1)
255
;; rd  kill	(4)
253, 254, 255, 256

;; Pred edge  4 [50.0%]  (fallthru)
(note 24 23 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 25 24 70 5 arch/arm/kernel/perf_event_v7.c:1138 (set (reg/v:SI 134 [ idx ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(jump_insn 70 25 71 5 (set (pc)
        (label_ref 48)) -1 (nil))
;; End of basic block 5 -> ( 10)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; rd  out 	(16)
3, 10, 13, 16, 17, 20, 21, 46, 49, 50, 255, 258, 259, 260, 261, 264


;; Succ edge  10 [100.0%] 

(barrier 71 70 39)

;; Start of basic block ( 8) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u29(11){ }u30(13){ }u31(25){ }u32(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 146 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 146
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 135
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 146 147
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 135
;; live  kill	 14 [lr]
;; rd  in  	(22)
1, 5, 10, 13, 16, 17, 20, 21, 24, 43, 49, 50, 254, 256, 257, 259, 260, 261, 262, 263, 264, 265
;; rd  gen 	(3)
1, 44, 257
;; rd  kill	(16)
0, 1, 2, 3, 4, 5, 22, 23, 24, 43, 44, 45, 46, 47, 48, 257

;; Pred edge  8 [95.5%] 
(code_label 39 71 28 6 258 "" [1 uses])

(note 28 39 29 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 29 28 30 6 arch/arm/kernel/perf_event_v7.c:1145 (set (reg:SI 0 r0)
        (reg/v:SI 134 [ idx ])) 167 {*arm_movsi_insn} (nil))

(insn 30 29 31 6 arch/arm/kernel/perf_event_v7.c:1145 (set (reg:SI 1 r1)
        (reg/f:SI 146)) 167 {*arm_movsi_insn} (nil))

(call_insn 31 30 32 6 arch/arm/kernel/perf_event_v7.c:1145 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("_test_and_set_bit") [flags 0x41] <function_decl 0x512e0180 _test_and_set_bit>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 32 31 33 6 arch/arm/kernel/perf_event_v7.c:1145 (set (reg:SI 135 [ D.26066 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 33 32 34 6 arch/arm/kernel/perf_event_v7.c:1145 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 135 [ D.26066 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 135 [ D.26066 ])
        (nil)))

(jump_insn 34 33 35 6 arch/arm/kernel/perf_event_v7.c:1145 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 48)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 450 [0x1c2])
            (nil))))
;; End of basic block 6 -> ( 10 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 146 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 146 147
;; rd  out 	(20)
1, 10, 13, 16, 17, 20, 21, 44, 49, 50, 254, 256, 257, 259, 260, 261, 262, 263, 264, 265


;; Succ edge  10 [4.5%]  (loop_exit)
;; Succ edge  7 [95.5%]  (fallthru)

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u41(11){ }u42(13){ }u43(25){ }u44(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 146 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 134
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 146 147
;; live  gen 	 134
;; live  kill	
;; rd  in  	(20)
1, 10, 13, 16, 17, 20, 21, 44, 49, 50, 254, 256, 257, 259, 260, 261, 262, 263, 264, 265
;; rd  gen 	(1)
254
;; rd  kill	(4)
253, 254, 255, 256

;; Pred edge  6 [95.5%]  (fallthru)
(note 35 34 36 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 36 35 37 7 arch/arm/kernel/perf_event_v7.c:1144 (set (reg/v:SI 134 [ idx ])
        (plus:SI (reg/v:SI 134 [ idx ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))
;; End of basic block 7 -> ( 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 146 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 146 147
;; rd  out 	(19)
1, 10, 13, 16, 17, 20, 21, 44, 49, 50, 254, 257, 259, 260, 261, 262, 263, 264, 265


;; Succ edge  8 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 7 3) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u46(11){ }u47(13){ }u48(25){ }u49(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 146 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 147
;; lr  def 	 24 [cc] 143 144
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 146 147
;; live  gen 	 24 [cc] 143 144
;; live  kill	
;; rd  in  	(23)
1, 5, 10, 13, 16, 17, 20, 21, 24, 44, 48, 49, 50, 254, 256, 257, 259, 260, 261, 262, 263, 264, 265
;; rd  gen 	(3)
43, 262, 263
;; rd  kill	(8)
43, 44, 45, 46, 47, 48, 262, 263

;; Pred edge  7 [100.0%]  (fallthru,dfs_back)
;; Pred edge  3 [100.0%] 
(code_label 37 36 38 8 255 "" [1 uses])

(note 38 37 41 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 41 38 42 8 arch/arm/kernel/perf_event_v7.c:1144 (set (reg/f:SI 143 [ armpmu ])
        (mem/f/c/i:SI (reg/f:SI 147) [0 armpmu+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 armpmu+0 S4 A32])
        (nil)))

(insn 42 41 43 8 arch/arm/kernel/perf_event_v7.c:1144 (set (reg:SI 144 [ <variable>.num_events ])
        (mem/s/j:SI (plus:SI (reg/f:SI 143 [ armpmu ])
                (const_int 56 [0x38])) [0 <variable>.num_events+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 143 [ armpmu ])
        (nil)))

(insn 43 42 44 8 arch/arm/kernel/perf_event_v7.c:1144 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 134 [ idx ])
            (reg:SI 144 [ <variable>.num_events ]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 144 [ <variable>.num_events ])
        (nil)))

(jump_insn 44 43 45 8 arch/arm/kernel/perf_event_v7.c:1144 (set (pc)
        (if_then_else (le (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 39)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9550 [0x254e])
            (nil))))
;; End of basic block 8 -> ( 6 9)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 146 147
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 146 147
;; rd  out 	(22)
1, 5, 10, 13, 16, 17, 20, 21, 24, 43, 49, 50, 254, 256, 257, 259, 260, 261, 262, 263, 264, 265


;; Succ edge  6 [95.5%] 
;; Succ edge  9 [4.5%]  (fallthru,loop_exit)

;; Start of basic block ( 4 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u55(11){ }u56(13){ }u57(25){ }u58(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 134
;; live  kill	
;; rd  in  	(25)
1, 3, 5, 10, 13, 16, 17, 20, 21, 24, 43, 46, 49, 50, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265
;; rd  gen 	(1)
253
;; rd  kill	(4)
253, 254, 255, 256

;; Pred edge  4 [50.0%] 
;; Pred edge  8 [4.5%]  (fallthru,loop_exit)
(code_label 45 44 46 9 256 "" [1 uses])

(note 46 45 47 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 47 46 48 9 arch/arm/kernel/perf_event_v7.c:1136 (set (reg/v:SI 134 [ idx ])
        (const_int -11 [0xfffffffffffffff5])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 9 -> ( 10)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; rd  out 	(24)
1, 3, 5, 10, 13, 16, 17, 20, 21, 24, 43, 46, 49, 50, 253, 257, 258, 259, 260, 261, 262, 263, 264, 265


;; Succ edge  10 [100.0%]  (fallthru)

;; Start of basic block ( 9 6 5) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u59(11){ }u60(13){ }u61(25){ }u62(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(28)
1, 3, 5, 10, 13, 16, 17, 20, 21, 24, 43, 44, 46, 49, 50, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265
;; rd  gen 	(1)
0
;; rd  kill	(6)
0, 1, 2, 3, 4, 5

;; Pred edge  9 [100.0%]  (fallthru)
;; Pred edge  6 [4.5%]  (loop_exit)
;; Pred edge  5 [100.0%] 
(code_label 48 47 49 10 257 "" [2 uses])

(note 49 48 54 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 54 49 60 10 arch/arm/kernel/perf_event_v7.c:1152 (set (reg/i:SI 0 r0)
        (reg/v:SI 134 [ idx ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 134 [ idx ])
        (nil)))

(insn 60 54 0 10 arch/arm/kernel/perf_event_v7.c:1152 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 10 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(26)
0, 10, 13, 16, 17, 20, 21, 24, 43, 44, 46, 49, 50, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function armv7pmu_handle_irq (armv7pmu_handle_irq)[0:1347]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 20 n_edges 28 count 49 (  2.5)
df_worklist_dataflow_doublequeue:n_basic_blocks 20 n_edges 28 count 50 (  2.5)
df_worklist_dataflow_doublequeue:n_basic_blocks 20 n_edges 28 count 50 (  2.5)


armv7pmu_handle_irq

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={13d,9u} r1={12d,5u} r2={11d,4u} r3={8d,1u} r11={1d,19u} r12={7d} r13={1d,26u,1d} r14={7d,1u} r15={6d} r16={6d} r17={6d} r18={6d} r19={6d} r20={6d} r21={6d} r22={6d} r23={6d} r24={14d,9u} r25={1d,23u,1d} r26={1d,18u} r27={6d} r28={6d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={6d} r38={6d} r39={6d} r40={6d} r41={6d} r42={6d} r43={6d} r44={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r76={6d} r77={6d} r78={6d} r79={6d} r80={6d} r81={6d} r82={6d} r83={6d} r84={6d} r85={6d} r86={6d} r87={6d} r88={6d} r89={6d} r90={6d} r91={6d} r92={6d} r93={6d} r94={6d} r95={6d} r96={6d} r97={6d} r98={6d} r99={6d} r100={6d} r101={6d} r102={6d} r103={6d} r104={6d} r105={6d} r106={6d} r107={6d} r108={6d} r109={6d} r110={6d} r111={6d} r112={6d} r113={6d} r114={6d} r115={6d} r116={6d} r117={6d} r118={6d} r119={6d} r120={6d} r121={6d} r122={6d} r123={6d} r124={6d} r125={6d} r126={6d} r127={6d} r134={2d,1u} r138={1d,1u} r140={1d,1u} r142={1d,3u} r143={1d,5u,1d} r144={1d,1u} r145={2d,12u} r146={1d,1u} r147={1d,2u} r148={1d,5u} r149={1d,2u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={2d,1u} r157={1d,1u} r158={1d,1u} r159={1d,2u} r160={1d,1u} r161={1d,1u,1d} r162={1d,2u} r163={1d,1u} r164={1d,2u} r165={1d,1u} r173={1d,1u} r175={1d,1u} r176={1d,1u} r177={1d,1u} r178={1d,1u} r179={1d,1u,1d} r180={1d,1u} r184={1d,1u} r187={1d,1u} r188={1d,1u} r190={1d,1u} r192={1d,2u} r193={1d,1u} r194={1d,1u} r195={1d,1u} r197={1d,1u} 
;;    total ref usage 966{779d,182u,5e} in 92{86 regular + 6 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735
0[0,13] 1[13,12] 2[25,11] 3[36,8] 11[44,1] 12[45,7] 13[52,1] 14[53,7] 15[60,6] 16[66,6] 17[72,6] 18[78,6] 19[84,6] 20[90,6] 21[96,6] 22[102,6] 23[108,6] 24[114,14] 25[128,1] 26[129,1] 27[130,6] 28[136,6] 29[142,6] 30[148,6] 31[154,6] 32[160,6] 33[166,6] 34[172,6] 35[178,6] 36[184,6] 37[190,6] 38[196,6] 39[202,6] 40[208,6] 41[214,6] 42[220,6] 43[226,6] 44[232,6] 45[238,6] 46[244,6] 47[250,6] 48[256,6] 49[262,6] 50[268,6] 51[274,6] 52[280,6] 53[286,6] 54[292,6] 55[298,6] 56[304,6] 57[310,6] 58[316,6] 59[322,6] 60[328,6] 61[334,6] 62[340,6] 63[346,6] 64[352,6] 65[358,6] 66[364,6] 67[370,6] 68[376,6] 69[382,6] 70[388,6] 71[394,6] 72[400,6] 73[406,6] 74[412,6] 75[418,6] 76[424,6] 77[430,6] 78[436,6] 79[442,6] 80[448,6] 81[454,6] 82[460,6] 83[466,6] 84[472,6] 85[478,6] 86[484,6] 87[490,6] 88[496,6] 89[502,6] 90[508,6] 91[514,6] 92[520,6] 93[526,6] 94[532,6] 95[538,6] 96[544,6] 97[550,6] 98[556,6] 99[562,6] 100[568,6] 101[574,6] 102[580,6] 103[586,6] 104[592,6] 105[598,6] 106[604,6] 107[610,6] 108[616,6] 109[622,6] 110[628,6] 111[634,6] 112[640,6] 113[646,6] 114[652,6] 115[658,6] 116[664,6] 117[670,6] 118[676,6] 119[682,6] 120[688,6] 121[694,6] 122[700,6] 123[706,6] 124[712,6] 125[718,6] 126[724,6] 127[730,6] 134[736,2] 138[738,1] 140[739,1] 142[740,1] 143[741,1] 144[742,1] 145[743,2] 146[745,1] 147[746,1] 148[747,1] 149[748,1] 150[749,1] 151[750,1] 152[751,1] 153[752,2] 157[754,1] 158[755,1] 159[756,1] 160[757,1] 161[758,1] 162[759,1] 163[760,1] 164[761,1] 165[762,1] 173[763,1] 175[764,1] 176[765,1] 177[766,1] 178[767,1] 179[768,1] 180[769,1] 184[770,1] 187[771,1] 188[772,1] 190[773,1] 192[774,1] 193[775,1] 194[776,1] 195[777,1] 197[778,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d12(0){ }d24(1){ }d35(2){ }d43(3){ }d44(11){ }d51(12){ }d52(13){ }d59(14){ }d128(25){ }d129(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
12, 24, 35, 43, 44, 51, 52, 59, 128, 129
;; rd  kill	(62)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 128, 129
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
12, 24, 35, 43, 44, 51, 52, 59, 128, 129

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d44(bb 0 insn -1) }u1(13){ d52(bb 0 insn -1) }u2(25){ d128(bb 0 insn -1) }u3(26){ d129(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 148
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 148
;; live  kill	
;; rd  in  	(10)
12, 24, 35, 43, 44, 51, 52, 59, 128, 129
;; rd  gen 	(2)
127, 747
;; rd  kill	(15)
114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 747
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 148
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 148
;; rd  out 	(12)
12, 24, 35, 43, 44, 51, 52, 59, 127, 128, 129, 747
;;  UD chains for artificial uses
;;   reg 11 { d44(bb 0 insn -1) }
;;   reg 13 { d52(bb 0 insn -1) }
;;   reg 25 { d128(bb 0 insn -1) }
;;   reg 26 { d129(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 8
;;      reg 148 { d747(bb 2 insn 7) }
;;   UD chains for insn luid 2 uid 9
;;      reg 148 { d747(bb 2 insn 7) }
;;   UD chains for insn luid 3 uid 10
;;      reg 24 { d127(bb 2 insn 9) }

( 2 )->[3]->( 19 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u7(11){ d44(bb 0 insn -1) }u8(13){ d52(bb 0 insn -1) }u9(25){ d128(bb 0 insn -1) }u10(26){ d129(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148
;; lr  def 	 153
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 148
;; live  gen 	 153
;; live  kill	
;; rd  in  	(12)
12, 24, 35, 43, 44, 51, 52, 59, 127, 128, 129, 747
;; rd  gen 	(1)
752
;; rd  kill	(2)
752, 753
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 153
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 153
;; rd  out 	(13)
12, 24, 35, 43, 44, 51, 52, 59, 127, 128, 129, 747, 752
;;  UD chains for artificial uses
;;   reg 11 { d44(bb 0 insn -1) }
;;   reg 13 { d52(bb 0 insn -1) }
;;   reg 25 { d128(bb 0 insn -1) }
;;   reg 26 { d129(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 12
;;      reg 148 { d747(bb 2 insn 7) }

( 2 )->[4]->( 17 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u12(11){ d44(bb 0 insn -1) }u13(13){ d52(bb 0 insn -1) }u14(25){ d128(bb 0 insn -1) }u15(26){ d129(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148
;; lr  def 	 140 144 145 146 147 152 157 158 159 160 161 162 163 164 165 192 193 194 195 197
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148
;; live  gen 	 140 144 145 146 147 152 157 158 159 160 161 162 163 164 165 192 193 194 195 197
;; live  kill	
;; rd  in  	(12)
12, 24, 35, 43, 44, 51, 52, 59, 127, 128, 129, 747
;; rd  gen 	(20)
739, 742, 743, 745, 746, 751, 754, 755, 756, 757, 758, 759, 760, 761, 762, 774, 775, 776, 777, 778
;; rd  kill	(21)
739, 742, 743, 744, 745, 746, 751, 754, 755, 756, 757, 758, 759, 760, 761, 762, 774, 775, 776, 777, 778
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 148 152 159 192 193 194 195 197
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 148 152 159 192 193 194 195 197
;; rd  out 	(32)
12, 24, 35, 43, 44, 51, 52, 59, 127, 128, 129, 739, 742, 743, 745, 746, 747, 751, 754, 755, 756, 757, 758, 759, 760, 761, 762, 774, 775, 776, 777, 778
;;  UD chains for artificial uses
;;   reg 11 { d44(bb 0 insn -1) }
;;   reg 13 { d52(bb 0 insn -1) }
;;   reg 25 { d128(bb 0 insn -1) }
;;   reg 26 { d129(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 18
;;      reg 157 { d754(bb 4 insn 17) }
;;   UD chains for insn luid 3 uid 21
;;      reg 13 { d52(bb 0 insn -1) }
;;   UD chains for insn luid 4 uid 22
;;      reg 160 { d757(bb 4 insn 21) }
;;   eq_note reg 13 { }
;;   UD chains for insn luid 5 uid 23
;;      reg 159 { d756(bb 4 insn 22) }
;;   UD chains for insn luid 6 uid 24
;;      reg 158 { d755(bb 4 insn 20) }
;;      reg 161 { d758(bb 4 insn 23) }
;;   eq_note reg 161 { }
;;   UD chains for insn luid 7 uid 25
;;      reg 140 { d739(bb 4 insn 18) }
;;      reg 162 { d759(bb 4 insn 24) }
;;   UD chains for insn luid 9 uid 27
;;      reg 25 { d128(bb 0 insn -1) }
;;      reg 163 { d760(bb 4 insn 26) }
;;   UD chains for insn luid 11 uid 29
;;      reg 25 { d128(bb 0 insn -1) }
;;      reg 164 { d761(bb 4 insn 28) }
;;   UD chains for insn luid 13 uid 31
;;      reg 165 { d762(bb 4 insn 30) }
;;   UD chains for insn luid 14 uid 38
;;      reg 144 { d742(bb 4 insn 31) }
;;      reg 162 { d759(bb 4 insn 24) }
;;   UD chains for insn luid 15 uid 39
;;      reg 147 { d746(bb 4 insn 38) }
;;   UD chains for insn luid 16 uid 43
;;      reg 164 { d761(bb 4 insn 28) }
;;   UD chains for insn luid 20 uid 112
;;      reg 25 { d128(bb 0 insn -1) }
;;   UD chains for insn luid 21 uid 63
;;      reg 148 { d747(bb 2 insn 7) }

( 17 )->[5]->( 16 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u37(11){ d44(bb 0 insn -1) }u38(13){ d52(bb 0 insn -1) }u39(25){ d128(bb 0 insn -1) }u40(26){ d129(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 148 149 152 159 192 193 194 195 197
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 147 152
;; lr  def 	 24 [cc] 138 143 173 175 176 177
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 148 149 152 159 192 193 194 195 197
;; live  gen 	 24 [cc] 138 143 173 175 176 177
;; live  kill	
;; rd  in  	(55)
5, 7, 11, 12, 24, 35, 43, 44, 51, 52, 59, 117, 128, 129, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778
;; rd  gen 	(7)
126, 738, 741, 763, 764, 765, 766
;; rd  kill	(20)
114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 738, 741, 763, 764, 765, 766
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 145 146 147 148 149 152 159 192 193 194 195 197
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 145 146 147 148 149 152 159 192 193 194 195 197
;; rd  out 	(55)
5, 7, 11, 12, 24, 35, 43, 44, 51, 52, 59, 126, 128, 129, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778
;;  UD chains for artificial uses
;;   reg 11 { d44(bb 0 insn -1) }
;;   reg 13 { d52(bb 0 insn -1) }
;;   reg 25 { d128(bb 0 insn -1) }
;;   reg 26 { d129(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 49
;;      reg 145 { d744(bb 16 insn 129) d743(bb 4 insn 43) }
;;      reg 147 { d746(bb 4 insn 38) }
;;   UD chains for insn luid 1 uid 50
;;      reg 145 { d744(bb 16 insn 129) d743(bb 4 insn 43) }
;;   UD chains for insn luid 2 uid 53
;;      reg 152 { d751(bb 4 insn 39) }
;;      reg 173 { d763(bb 5 insn 50) }
;;   UD chains for insn luid 3 uid 54
;;      reg 145 { d744(bb 16 insn 129) d743(bb 4 insn 43) }
;;   UD chains for insn luid 4 uid 55
;;      reg 138 { d738(bb 5 insn 53) }
;;      reg 175 { d764(bb 5 insn 54) }
;;   UD chains for insn luid 5 uid 56
;;      reg 176 { d765(bb 5 insn 55) }
;;   UD chains for insn luid 6 uid 57
;;      reg 177 { d766(bb 5 insn 56) }
;;   UD chains for insn luid 7 uid 58
;;      reg 24 { d126(bb 5 insn 57) }

( 5 )->[6]->( 7 8 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u55(11){ d44(bb 0 insn -1) }u56(13){ d52(bb 0 insn -1) }u57(25){ d128(bb 0 insn -1) }u58(26){ d129(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 145 146 147 148 149 152 159 192 193 194 195 197
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 145 146 147 148 149 152 159 192 193 194 195 197
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(55)
5, 7, 11, 12, 24, 35, 43, 44, 51, 52, 59, 126, 128, 129, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778
;; rd  gen 	(1)
115
;; rd  kill	(14)
114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127
;; lr  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 143 145 146 147 148 149 152 159 192 193 194 195 197
;; live  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 143 145 146 147 148 149 152 159 192 193 194 195 197
;; rd  out 	(55)
5, 7, 11, 12, 24, 35, 43, 44, 51, 52, 59, 115, 128, 129, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778
;;  UD chains for artificial uses
;;   reg 11 { d44(bb 0 insn -1) }
;;   reg 13 { d52(bb 0 insn -1) }
;;   reg 25 { d128(bb 0 insn -1) }
;;   reg 26 { d129(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 60
;;      reg 145 { d744(bb 16 insn 129) d743(bb 4 insn 43) }
;;   UD chains for insn luid 1 uid 61
;;      reg 24 { d115(bb 6 insn 60) }

( 6 )->[7]->( 12 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u61(11){ d44(bb 0 insn -1) }u62(13){ d52(bb 0 insn -1) }u63(25){ d128(bb 0 insn -1) }u64(26){ d129(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 145 146 147 148 152 159 192 193 194 195 197
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 197
;; lr  def 	 134
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 145 146 147 148 152 159 192 193 194 195 197
;; live  gen 	 134
;; live  kill	
;; rd  in  	(55)
5, 7, 11, 12, 24, 35, 43, 44, 51, 52, 59, 115, 128, 129, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778
;; rd  gen 	(1)
736
;; rd  kill	(2)
736, 737
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 143 145 146 147 148 152 159 192 193 194 195 197
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 143 145 146 147 148 152 159 192 193 194 195 197
;; rd  out 	(54)
5, 7, 11, 12, 24, 35, 43, 44, 51, 52, 59, 115, 128, 129, 736, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778
;;  UD chains for artificial uses
;;   reg 11 { d44(bb 0 insn -1) }
;;   reg 13 { d52(bb 0 insn -1) }
;;   reg 25 { d128(bb 0 insn -1) }
;;   reg 26 { d129(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 164
;;      reg 197 { d778(bb 4 insn 63) }

( 6 )->[8]->( 9 11 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u66(11){ d44(bb 0 insn -1) }u67(13){ d52(bb 0 insn -1) }u68(25){ d128(bb 0 insn -1) }u69(26){ d129(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 143 145 146 147 148 149 152 159 192 193 194 195 197
;; lr  use 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 143 145 146 147 148 149 152 159 192 193 194 195 197
;; live  gen 	
;; live  kill	
;; rd  in  	(55)
5, 7, 11, 12, 24, 35, 43, 44, 51, 52, 59, 115, 128, 129, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 145 146 147 148 149 152 159 192 193 194 195 197
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 145 146 147 148 149 152 159 192 193 194 195 197
;; rd  out 	(55)
5, 7, 11, 12, 24, 35, 43, 44, 51, 52, 59, 115, 128, 129, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778
;;  UD chains for artificial uses
;;   reg 11 { d44(bb 0 insn -1) }
;;   reg 13 { d52(bb 0 insn -1) }
;;   reg 25 { d128(bb 0 insn -1) }
;;   reg 26 { d129(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 69
;;      reg 24 { d115(bb 6 insn 60) }

( 8 )->[9]->( 10 11 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u71(11){ d44(bb 0 insn -1) }u72(13){ d52(bb 0 insn -1) }u73(25){ d128(bb 0 insn -1) }u74(26){ d129(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 145 146 147 148 149 152 159 192 193 194 195 197
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 149
;; lr  def 	 24 [cc] 178
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 145 146 147 148 149 152 159 192 193 194 195 197
;; live  gen 	 24 [cc] 178
;; live  kill	
;; rd  in  	(55)
5, 7, 11, 12, 24, 35, 43, 44, 51, 52, 59, 115, 128, 129, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778
;; rd  gen 	(2)
114, 767
;; rd  kill	(15)
114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 767
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 145 146 147 148 152 159 192 193 194 195 197
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 145 146 147 148 152 159 192 193 194 195 197
;; rd  out 	(55)
5, 7, 11, 12, 24, 35, 43, 44, 51, 52, 59, 114, 128, 129, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778
;;  UD chains for artificial uses
;;   reg 11 { d44(bb 0 insn -1) }
;;   reg 13 { d52(bb 0 insn -1) }
;;   reg 25 { d128(bb 0 insn -1) }
;;   reg 26 { d129(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 71
;;      reg 149 { d748(bb 17 insn 134) }
;;   UD chains for insn luid 1 uid 72
;;      reg 145 { d744(bb 16 insn 129) d743(bb 4 insn 43) }
;;      reg 178 { d767(bb 9 insn 71) }
;;   UD chains for insn luid 2 uid 73
;;      reg 24 { d114(bb 9 insn 72) }

( 9 )->[10]->( 12 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u79(11){ d44(bb 0 insn -1) }u80(13){ d52(bb 0 insn -1) }u81(25){ d128(bb 0 insn -1) }u82(26){ d129(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 145 146 147 148 152 159 192 193 194 195 197
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 148 193
;; lr  def 	 134 179 180
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 145 146 147 148 152 159 192 193 194 195 197
;; live  gen 	 134 179 180
;; live  kill	
;; rd  in  	(55)
5, 7, 11, 12, 24, 35, 43, 44, 51, 52, 59, 114, 128, 129, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778
;; rd  gen 	(3)
737, 768, 769
;; rd  kill	(4)
736, 737, 768, 769
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 143 145 146 147 148 152 159 192 193 194 195 197
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 143 145 146 147 148 152 159 192 193 194 195 197
;; rd  out 	(54)
5, 7, 11, 12, 24, 35, 43, 44, 51, 52, 59, 114, 128, 129, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778
;;  UD chains for artificial uses
;;   reg 11 { d44(bb 0 insn -1) }
;;   reg 13 { d52(bb 0 insn -1) }
;;   reg 25 { d128(bb 0 insn -1) }
;;   reg 26 { d129(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 75
;;      reg 145 { d744(bb 16 insn 129) d743(bb 4 insn 43) }
;;   UD chains for insn luid 1 uid 77
;;      reg 179 { d768(bb 10 insn 75) }
;;      reg 193 { d775(bb 4 insn 99) }
;;   eq_note reg 179 { }
;;   UD chains for insn luid 2 uid 78
;;      reg 148 { d747(bb 2 insn 7) }
;;      reg 180 { d769(bb 10 insn 77) }

( 8 9 )->[11]->( 16 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u89(11){ d44(bb 0 insn -1) }u90(13){ d52(bb 0 insn -1) }u91(25){ d128(bb 0 insn -1) }u92(26){ d129(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 148 152 159 192 193 194 195 197
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 159
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 148 152 159 192 193 194 195 197
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	 14 [lr]
;; rd  in  	(56)
5, 7, 11, 12, 24, 35, 43, 44, 51, 52, 59, 114, 115, 128, 129, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778
;; rd  gen 	(1)
11
;; rd  kill	(20)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 53, 54, 55, 56, 57, 58, 59
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 148 152 159 192 193 194 195 197
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 148 152 159 192 193 194 195 197
;; rd  out 	(52)
11, 24, 35, 43, 44, 51, 52, 114, 115, 128, 129, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778
;;  UD chains for artificial uses
;;   reg 11 { d44(bb 0 insn -1) }
;;   reg 13 { d52(bb 0 insn -1) }
;;   reg 25 { d128(bb 0 insn -1) }
;;   reg 26 { d129(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 85
;;      reg 159 { d756(bb 4 insn 22) }
;;   UD chains for insn luid 2 uid 86
;;      reg 145 { d744(bb 16 insn 129) d743(bb 4 insn 43) }
;;   UD chains for insn luid 3 uid 87
;;      reg 13 { d52(bb 0 insn -1) }
;;      reg 0 { d0(bb 11 insn 162) }
;;      reg 1 { d14(bb 11 insn 85) }
;;      reg 2 { d25(bb 11 insn 86) }

( 7 10 )->[12]->( 16 13 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u99(11){ d44(bb 0 insn -1) }u100(13){ d52(bb 0 insn -1) }u101(25){ d128(bb 0 insn -1) }u102(26){ d129(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 143 145 146 147 148 152 159 192 193 194 195 197
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 143 145 146 147 148 152 159 192 193 194 195 197
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(56)
5, 7, 11, 12, 24, 35, 43, 44, 51, 52, 59, 114, 115, 128, 129, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778
;; rd  gen 	(1)
124
;; rd  kill	(14)
114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 145 146 147 148 152 159 192 193 194 195 197
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 145 146 147 148 152 159 192 193 194 195 197
;; rd  out 	(55)
5, 7, 11, 12, 24, 35, 43, 44, 51, 52, 59, 124, 128, 129, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778
;;  UD chains for artificial uses
;;   reg 11 { d44(bb 0 insn -1) }
;;   reg 13 { d52(bb 0 insn -1) }
;;   reg 25 { d128(bb 0 insn -1) }
;;   reg 26 { d129(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 92
;;      reg 134 { d737(bb 10 insn 78) d736(bb 7 insn 164) }
;;   UD chains for insn luid 1 uid 93
;;      reg 24 { d124(bb 12 insn 92) }

( 12 )->[13]->( 16 14 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u105(11){ d44(bb 0 insn -1) }u106(13){ d52(bb 0 insn -1) }u107(25){ d128(bb 0 insn -1) }u108(26){ d129(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 145 146 147 148 152 159 192 193 194 195 197
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 145 194
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 142 151 184
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 145 146 147 148 152 159 192 193 194 195 197
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc] 142 151 184
;; live  kill	 14 [lr]
;; rd  in  	(55)
5, 7, 11, 12, 24, 35, 43, 44, 51, 52, 59, 124, 128, 129, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778
;; rd  gen 	(5)
7, 121, 740, 750, 770
;; rd  kill	(37)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 53, 54, 55, 56, 57, 58, 59, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 740, 750, 770
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 145 146 147 148 152 159 192 193 194 195 197
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 145 146 147 148 152 159 192 193 194 195 197
;; rd  out 	(51)
7, 24, 35, 43, 44, 51, 52, 121, 128, 129, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778
;;  UD chains for artificial uses
;;   reg 11 { d44(bb 0 insn -1) }
;;   reg 13 { d52(bb 0 insn -1) }
;;   reg 25 { d128(bb 0 insn -1) }
;;   reg 26 { d129(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 95
;;      reg 143 { d741(bb 5 insn 49) }
;;   UD chains for insn luid 1 uid 96
;;      reg 143 { d741(bb 5 insn 49) }
;;   UD chains for insn luid 2 uid 97
;;      reg 142 { d740(bb 13 insn 95) }
;;   UD chains for insn luid 3 uid 98
;;      reg 145 { d744(bb 16 insn 129) d743(bb 4 insn 43) }
;;   UD chains for insn luid 5 uid 100
;;      reg 13 { d52(bb 0 insn -1) }
;;      reg 0 { d10(bb 13 insn 96) }
;;      reg 1 { d22(bb 13 insn 97) }
;;      reg 2 { d33(bb 13 insn 98) }
;;      reg 3 { d36(bb 13 insn 158) }
;;   UD chains for insn luid 6 uid 102
;;      reg 143 { d741(bb 5 insn 49) }
;;      reg 194 { d776(bb 4 insn 101) }
;;   eq_note reg 143 { }
;;   UD chains for insn luid 7 uid 103
;;      reg 25 { d128(bb 0 insn -1) }
;;      reg 184 { d770(bb 13 insn 102) }
;;   UD chains for insn luid 8 uid 104
;;      reg 143 { d741(bb 5 insn 49) }
;;   UD chains for insn luid 9 uid 105
;;      reg 142 { d740(bb 13 insn 95) }
;;   UD chains for insn luid 10 uid 106
;;      reg 145 { d744(bb 16 insn 129) d743(bb 4 insn 43) }
;;   UD chains for insn luid 11 uid 107
;;      reg 13 { d52(bb 0 insn -1) }
;;      reg 0 { d8(bb 13 insn 104) }
;;      reg 1 { d20(bb 13 insn 105) }
;;      reg 2 { d31(bb 13 insn 106) }
;;   UD chains for insn luid 12 uid 108
;;      reg 0 { d7(bb 13 insn 107) }
;;   UD chains for insn luid 13 uid 109
;;      reg 151 { d750(bb 13 insn 108) }
;;   UD chains for insn luid 14 uid 110
;;      reg 24 { d121(bb 13 insn 109) }

( 13 )->[14]->( 15 16 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u133(11){ d44(bb 0 insn -1) }u134(13){ d52(bb 0 insn -1) }u135(25){ d128(bb 0 insn -1) }u136(26){ d129(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 145 146 147 148 152 159 192 193 194 195 197
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 146 195
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 150
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 145 146 147 148 152 159 192 193 194 195 197
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 150
;; live  kill	 14 [lr]
;; rd  in  	(51)
7, 24, 35, 43, 44, 51, 52, 121, 128, 129, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778
;; rd  gen 	(3)
5, 119, 749
;; rd  kill	(35)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 53, 54, 55, 56, 57, 58, 59, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 749
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145 146 147 148 152 159 192 193 194 195 197
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145 146 147 148 152 159 192 193 194 195 197
;; rd  out 	(51)
5, 24, 35, 43, 44, 51, 52, 119, 128, 129, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778
;;  UD chains for artificial uses
;;   reg 11 { d44(bb 0 insn -1) }
;;   reg 13 { d52(bb 0 insn -1) }
;;   reg 25 { d128(bb 0 insn -1) }
;;   reg 26 { d129(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 113
;;      reg 143 { d741(bb 5 insn 49) }
;;   UD chains for insn luid 1 uid 114
;;      reg 195 { d777(bb 4 insn 112) }
;;   eq_note reg 25 { }
;;   UD chains for insn luid 2 uid 115
;;      reg 146 { d745(bb 4 insn 25) }
;;   UD chains for insn luid 3 uid 116
;;      reg 13 { d52(bb 0 insn -1) }
;;      reg 0 { d6(bb 14 insn 113) }
;;      reg 1 { d13(bb 14 insn 114) }
;;      reg 2 { d29(bb 14 insn 115) }
;;   UD chains for insn luid 4 uid 117
;;      reg 0 { d5(bb 14 insn 116) }
;;   UD chains for insn luid 5 uid 118
;;      reg 150 { d749(bb 14 insn 117) }
;;   UD chains for insn luid 6 uid 119
;;      reg 24 { d119(bb 14 insn 118) }

( 14 )->[15]->( 16 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u148(11){ d44(bb 0 insn -1) }u149(13){ d52(bb 0 insn -1) }u150(25){ d128(bb 0 insn -1) }u151(26){ d129(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145 146 147 148 152 159 192 193 194 195 197
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145 192
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 187 188
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145 146 147 148 152 159 192 193 194 195 197
;; live  gen 	 0 [r0] 1 [r1] 187 188
;; live  kill	 14 [lr]
;; rd  in  	(51)
5, 24, 35, 43, 44, 51, 52, 119, 128, 129, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778
;; rd  gen 	(2)
771, 772
;; rd  kill	(9)
53, 54, 55, 56, 57, 58, 59, 771, 772
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 148 152 159 192 193 194 195 197
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 148 152 159 192 193 194 195 197
;; rd  out 	(51)
5, 24, 35, 43, 44, 51, 52, 119, 128, 129, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778
;;  UD chains for artificial uses
;;   reg 11 { d44(bb 0 insn -1) }
;;   reg 13 { d52(bb 0 insn -1) }
;;   reg 25 { d128(bb 0 insn -1) }
;;   reg 26 { d129(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 122
;;      reg 192 { d774(bb 4 insn 132) }
;;   UD chains for insn luid 1 uid 123
;;      reg 187 { d771(bb 15 insn 122) }
;;   UD chains for insn luid 2 uid 124
;;      reg 142 { d740(bb 13 insn 95) }
;;   UD chains for insn luid 3 uid 125
;;      reg 145 { d744(bb 16 insn 129) d743(bb 4 insn 43) }
;;   UD chains for insn luid 4 uid 126
;;      reg 13 { d52(bb 0 insn -1) }
;;      reg 0 { d4(bb 15 insn 124) }
;;      reg 1 { d17(bb 15 insn 125) }
;;      reg 188 { d772(bb 15 insn 123) }

( 5 12 13 14 15 11 )->[16]->( 17 )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u160(11){ d44(bb 0 insn -1) }u161(13){ d52(bb 0 insn -1) }u162(25){ d128(bb 0 insn -1) }u163(26){ d129(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 148 152 159 192 193 194 195 197
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145
;; lr  def 	 145
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 148 152 159 192 193 194 195 197
;; live  gen 	 145
;; live  kill	
;; rd  in  	(60)
5, 7, 11, 12, 24, 35, 43, 44, 51, 52, 59, 114, 115, 119, 121, 124, 126, 128, 129, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778
;; rd  gen 	(1)
744
;; rd  kill	(2)
743, 744
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 148 152 159 192 193 194 195 197
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 148 152 159 192 193 194 195 197
;; rd  out 	(59)
5, 7, 11, 12, 24, 35, 43, 44, 51, 52, 59, 114, 115, 119, 121, 124, 126, 128, 129, 736, 737, 738, 739, 740, 741, 742, 744, 745, 746, 747, 748, 749, 750, 751, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778
;;  UD chains for artificial uses
;;   reg 11 { d44(bb 0 insn -1) }
;;   reg 13 { d52(bb 0 insn -1) }
;;   reg 25 { d128(bb 0 insn -1) }
;;   reg 26 { d129(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 129
;;      reg 145 { d744(bb 16 insn 129) d743(bb 4 insn 43) }

( 16 4 )->[17]->( 5 18 )
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u165(11){ d44(bb 0 insn -1) }u166(13){ d52(bb 0 insn -1) }u167(25){ d128(bb 0 insn -1) }u168(26){ d129(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 148 152 159 192 193 194 195 197
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 192
;; lr  def 	 24 [cc] 149 190
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 148 152 159 192 193 194 195 197
;; live  gen 	 24 [cc] 149 190
;; live  kill	
;; rd  in  	(61)
5, 7, 11, 12, 24, 35, 43, 44, 51, 52, 59, 114, 115, 119, 121, 124, 126, 127, 128, 129, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778
;; rd  gen 	(3)
117, 748, 773
;; rd  kill	(16)
114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 748, 773
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 148 149 152 159 192 193 194 195 197
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 148 149 152 159 192 193 194 195 197
;; rd  out 	(55)
5, 7, 11, 12, 24, 35, 43, 44, 51, 52, 59, 117, 128, 129, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778
;;  UD chains for artificial uses
;;   reg 11 { d44(bb 0 insn -1) }
;;   reg 13 { d52(bb 0 insn -1) }
;;   reg 25 { d128(bb 0 insn -1) }
;;   reg 26 { d129(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 133
;;      reg 192 { d774(bb 4 insn 132) }
;;   UD chains for insn luid 1 uid 134
;;      reg 190 { d773(bb 17 insn 133) }
;;   UD chains for insn luid 2 uid 136
;;      reg 145 { d744(bb 16 insn 129) d743(bb 4 insn 43) }
;;      reg 149 { d748(bb 17 insn 134) }
;;   UD chains for insn luid 3 uid 137
;;      reg 24 { d117(bb 17 insn 136) }

( 17 )->[18]->( 19 )
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u174(11){ d44(bb 0 insn -1) }u175(13){ d52(bb 0 insn -1) }u176(25){ d128(bb 0 insn -1) }u177(26){ d129(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 153
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 153
;; live  kill	 14 [lr]
;; rd  in  	(55)
5, 7, 11, 12, 24, 35, 43, 44, 51, 52, 59, 117, 128, 129, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778
;; rd  gen 	(1)
753
;; rd  kill	(9)
53, 54, 55, 56, 57, 58, 59, 752, 753
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 153
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153
;; rd  out 	(55)
5, 7, 11, 12, 24, 35, 43, 44, 51, 52, 117, 128, 129, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778
;;  UD chains for artificial uses
;;   reg 11 { d44(bb 0 insn -1) }
;;   reg 13 { d52(bb 0 insn -1) }
;;   reg 25 { d128(bb 0 insn -1) }
;;   reg 26 { d129(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 139
;;      reg 13 { d52(bb 0 insn -1) }

( 18 3 )->[19]->( 1 )
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u179(11){ d44(bb 0 insn -1) }u180(13){ d52(bb 0 insn -1) }u181(25){ d128(bb 0 insn -1) }u182(26){ d129(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 153
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 153
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(58)
5, 7, 11, 12, 24, 35, 43, 44, 51, 52, 59, 117, 127, 128, 129, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778
;; rd  gen 	(1)
1
;; rd  kill	(13)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(55)
1, 24, 35, 43, 44, 51, 52, 59, 117, 127, 128, 129, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778
;;  UD chains for artificial uses
;;   reg 11 { d44(bb 0 insn -1) }
;;   reg 13 { d52(bb 0 insn -1) }
;;   reg 25 { d128(bb 0 insn -1) }
;;   reg 26 { d129(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 147
;;      reg 153 { d753(bb 18 insn 140) d752(bb 3 insn 12) }
;;   UD chains for insn luid 1 uid 153
;;      reg 0 { d1(bb 19 insn 147) }

( 19 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u185(0){ d1(bb 19 insn 147) }u186(11){ d44(bb 0 insn -1) }u187(13){ d52(bb 0 insn -1) }u188(14){ d59(bb 0 insn -1) }u189(25){ d128(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(55)
1, 24, 35, 43, 44, 51, 52, 59, 117, 127, 128, 129, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(55)
1, 24, 35, 43, 44, 51, 52, 59, 117, 127, 128, 129, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778
;;  UD chains for artificial uses
;;   reg 0 { d1(bb 19 insn 147) }
;;   reg 11 { d44(bb 0 insn -1) }
;;   reg 13 { d52(bb 0 insn -1) }
;;   reg 14 { d59(bb 0 insn -1) }
;;   reg 25 { d128(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 10 to worklist
  Adding insn 8 to worklist
  Adding insn 7 to worklist
  Adding insn 165 to worklist
  Adding insn 167 to worklist
  Adding insn 29 to worklist
  Adding insn 27 to worklist
  Adding insn 58 to worklist
  Adding insn 53 to worklist
  Adding insn 61 to worklist
  Adding insn 169 to worklist
  Adding insn 69 to worklist
  Adding insn 73 to worklist
  Adding insn 171 to worklist
  Adding insn 173 to worklist
  Adding insn 87 to worklist
  Adding insn 93 to worklist
  Adding insn 110 to worklist
  Adding insn 107 to worklist
  Adding insn 103 to worklist
  Adding insn 100 to worklist
  Adding insn 119 to worklist
  Adding insn 116 to worklist
  Adding insn 126 to worklist
  Adding insn 137 to worklist
  Adding insn 139 to worklist
  Adding insn 153 to worklist
Finished finding needed instructions:
  Adding insn 147 to worklist
Processing use of (reg 153 [ D.25997 ]) in insn 147:
  Adding insn 140 to worklist
  Adding insn 12 to worklist
Processing use of (reg 148 [ pmnc ]) in insn 12:
Processing use of (reg 0 r0) in insn 153:
Processing use of (reg 13 sp) in insn 139:
Processing use of (reg 24 cc) in insn 137:
  Adding insn 136 to worklist
Processing use of (reg 145 [ idx ]) in insn 136:
  Adding insn 129 to worklist
  Adding insn 43 to worklist
Processing use of (reg 149 [ D.26022 ]) in insn 136:
  Adding insn 134 to worklist
Processing use of (reg 190 [ armpmu ]) in insn 134:
  Adding insn 133 to worklist
Processing use of (reg 192) in insn 133:
  Adding insn 132 to worklist
Processing use of (reg 164) in insn 43:
  Adding insn 28 to worklist
Processing use of (reg 145 [ idx ]) in insn 129:
Processing use of (reg 13 sp) in insn 126:
Processing use of (reg 0 r0) in insn 126:
  Adding insn 124 to worklist
Processing use of (reg 1 r1) in insn 126:
  Adding insn 125 to worklist
Processing use of (reg 188 [ <variable>.disable ]) in insn 126:
  Adding insn 123 to worklist
Processing use of (reg 187 [ armpmu ]) in insn 123:
  Adding insn 122 to worklist
Processing use of (reg 192) in insn 122:
Processing use of (reg 145 [ idx ]) in insn 125:
Processing use of (reg 142 [ hwc ]) in insn 124:
  Adding insn 95 to worklist
Processing use of (reg 143 [ event ]) in insn 95:
  Adding insn 49 to worklist
Processing use of (reg 145 [ idx ]) in insn 49:
Processing use of (reg 147 [ cpuc ]) in insn 49:
  Adding insn 38 to worklist
Processing use of (reg 144 [ __ptr ]) in insn 38:
  Adding insn 31 to worklist
Processing use of (reg 162) in insn 38:
  Adding insn 24 to worklist
Processing use of (reg 158) in insn 24:
  Adding insn 20 to worklist
Processing use of (reg 161 [ <variable>.cpu ]) in insn 24:
  Adding insn 23 to worklist
Processing use of (reg 159) in insn 23:
  Adding insn 22 to worklist
Processing use of (reg 160) in insn 22:
  Adding insn 21 to worklist
Processing use of (reg 13 sp) in insn 21:
Processing use of (reg 165) in insn 31:
  Adding insn 30 to worklist
Processing use of (reg 13 sp) in insn 116:
Processing use of (reg 0 r0) in insn 116:
  Adding insn 113 to worklist
Processing use of (reg 1 r1) in insn 116:
  Adding insn 114 to worklist
Processing use of (reg 2 r2) in insn 116:
  Adding insn 115 to worklist
Processing use of (reg 146 [ regs ]) in insn 115:
  Adding insn 25 to worklist
Processing use of (reg 140 [ __ptr ]) in insn 25:
  Adding insn 18 to worklist
Processing use of (reg 162) in insn 25:
Processing use of (reg 157) in insn 18:
  Adding insn 17 to worklist
Processing use of (reg 195) in insn 114:
  Adding insn 112 to worklist
Processing use of (reg 25 sfp) in insn 112:
Processing use of (reg 143 [ event ]) in insn 113:
Processing use of (reg 24 cc) in insn 119:
  Adding insn 118 to worklist
Processing use of (reg 150 [ D.26017 ]) in insn 118:
  Adding insn 117 to worklist
Processing use of (reg 0 r0) in insn 117:
Processing use of (reg 13 sp) in insn 100:
Processing use of (reg 0 r0) in insn 100:
  Adding insn 96 to worklist
Processing use of (reg 1 r1) in insn 100:
  Adding insn 97 to worklist
Processing use of (reg 2 r2) in insn 100:
  Adding insn 98 to worklist
Processing use of (reg 3 r3) in insn 100:
  Adding insn 158 to worklist
Processing use of (reg 145 [ idx ]) in insn 98:
Processing use of (reg 142 [ hwc ]) in insn 97:
Processing use of (reg 143 [ event ]) in insn 96:
Processing use of (reg 25 sfp) in insn 103:
Processing use of (reg 184 [ <variable>.hw.last_period ]) in insn 103:
  Adding insn 102 to worklist
Processing use of (reg 143 [ event ]) in insn 102:
Processing use of (reg 194) in insn 102:
  Adding insn 101 to worklist
Processing use of (reg 13 sp) in insn 107:
Processing use of (reg 0 r0) in insn 107:
  Adding insn 104 to worklist
Processing use of (reg 1 r1) in insn 107:
  Adding insn 105 to worklist
Processing use of (reg 2 r2) in insn 107:
  Adding insn 106 to worklist
Processing use of (reg 145 [ idx ]) in insn 106:
Processing use of (reg 142 [ hwc ]) in insn 105:
Processing use of (reg 143 [ event ]) in insn 104:
Processing use of (reg 24 cc) in insn 110:
  Adding insn 109 to worklist
Processing use of (reg 151 [ D.26014 ]) in insn 109:
  Adding insn 108 to worklist
Processing use of (reg 0 r0) in insn 108:
Processing use of (reg 24 cc) in insn 93:
  Adding insn 92 to worklist
Processing use of (reg 134 [ ret ]) in insn 92:
  Adding insn 78 to worklist
  Adding insn 164 to worklist
Processing use of (reg 197 [ ret ]) in insn 164:
  Adding insn 63 to worklist
Processing use of (reg 148 [ pmnc ]) in insn 63:
Processing use of (reg 148 [ pmnc ]) in insn 78:
Processing use of (reg 180) in insn 78:
  Adding insn 77 to worklist
Processing use of (reg 179) in insn 77:
  Adding insn 75 to worklist
Processing use of (reg 193) in insn 77:
  Adding insn 99 to worklist
Processing use of (reg 145 [ idx ]) in insn 75:
Processing use of (reg 13 sp) in insn 87:
Processing use of (reg 0 r0) in insn 87:
  Adding insn 162 to worklist
Processing use of (reg 1 r1) in insn 87:
  Adding insn 85 to worklist
Processing use of (reg 2 r2) in insn 87:
  Adding insn 86 to worklist
Processing use of (reg 145 [ idx ]) in insn 86:
Processing use of (reg 159) in insn 85:
Processing use of (reg 24 cc) in insn 73:
  Adding insn 72 to worklist
Processing use of (reg 145 [ idx ]) in insn 72:
Processing use of (reg 178) in insn 72:
  Adding insn 71 to worklist
Processing use of (reg 149 [ D.26022 ]) in insn 71:
Processing use of (reg 24 cc) in insn 69:
  Adding insn 60 to worklist
Processing use of (reg 145 [ idx ]) in insn 60:
Processing use of (reg 24 cc) in insn 61:
Processing use of (reg 152 [ D.26005 ]) in insn 53:
  Adding insn 39 to worklist
Processing use of (reg 173) in insn 53:
  Adding insn 50 to worklist
Processing use of (reg 145 [ idx ]) in insn 50:
Processing use of (reg 147 [ cpuc ]) in insn 39:
Processing use of (reg 24 cc) in insn 58:
  Adding insn 57 to worklist
Processing use of (reg 177) in insn 57:
  Adding insn 56 to worklist
Processing use of (reg 176) in insn 56:
  Adding insn 55 to worklist
Processing use of (reg 138 [ D.26785 ]) in insn 55:
Processing use of (reg 175) in insn 55:
  Adding insn 54 to worklist
Processing use of (reg 145 [ idx ]) in insn 54:
Processing use of (reg 25 sfp) in insn 27:
Processing use of (reg 163) in insn 27:
  Adding insn 26 to worklist
Processing use of (reg 25 sfp) in insn 29:
Processing use of (reg 164) in insn 29:
Processing use of (reg 148 [ pmnc ]) in insn 8:
Processing use of (reg 24 cc) in insn 10:
  Adding insn 9 to worklist
Processing use of (reg 148 [ pmnc ]) in insn 9:


armv7pmu_handle_irq

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={13d,9u} r1={12d,5u} r2={11d,4u} r3={8d,1u} r11={1d,19u} r12={7d} r13={1d,26u,1d} r14={7d,1u} r15={6d} r16={6d} r17={6d} r18={6d} r19={6d} r20={6d} r21={6d} r22={6d} r23={6d} r24={14d,9u} r25={1d,23u,1d} r26={1d,18u} r27={6d} r28={6d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={6d} r38={6d} r39={6d} r40={6d} r41={6d} r42={6d} r43={6d} r44={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r76={6d} r77={6d} r78={6d} r79={6d} r80={6d} r81={6d} r82={6d} r83={6d} r84={6d} r85={6d} r86={6d} r87={6d} r88={6d} r89={6d} r90={6d} r91={6d} r92={6d} r93={6d} r94={6d} r95={6d} r96={6d} r97={6d} r98={6d} r99={6d} r100={6d} r101={6d} r102={6d} r103={6d} r104={6d} r105={6d} r106={6d} r107={6d} r108={6d} r109={6d} r110={6d} r111={6d} r112={6d} r113={6d} r114={6d} r115={6d} r116={6d} r117={6d} r118={6d} r119={6d} r120={6d} r121={6d} r122={6d} r123={6d} r124={6d} r125={6d} r126={6d} r127={6d} r134={2d,1u} r138={1d,1u} r140={1d,1u} r142={1d,3u} r143={1d,5u,1d} r144={1d,1u} r145={2d,12u} r146={1d,1u} r147={1d,2u} r148={1d,5u} r149={1d,2u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={2d,1u} r157={1d,1u} r158={1d,1u} r159={1d,2u} r160={1d,1u} r161={1d,1u,1d} r162={1d,2u} r163={1d,1u} r164={1d,2u} r165={1d,1u} r173={1d,1u} r175={1d,1u} r176={1d,1u} r177={1d,1u} r178={1d,1u} r179={1d,1u,1d} r180={1d,1u} r184={1d,1u} r187={1d,1u} r188={1d,1u} r190={1d,1u} r192={1d,2u} r193={1d,1u} r194={1d,1u} r195={1d,1u} r197={1d,1u} 
;;    total ref usage 966{779d,182u,5e} in 92{86 regular + 6 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735
0[0,13] 1[13,12] 2[25,11] 3[36,8] 11[44,1] 12[45,7] 13[52,1] 14[53,7] 15[60,6] 16[66,6] 17[72,6] 18[78,6] 19[84,6] 20[90,6] 21[96,6] 22[102,6] 23[108,6] 24[114,14] 25[128,1] 26[129,1] 27[130,6] 28[136,6] 29[142,6] 30[148,6] 31[154,6] 32[160,6] 33[166,6] 34[172,6] 35[178,6] 36[184,6] 37[190,6] 38[196,6] 39[202,6] 40[208,6] 41[214,6] 42[220,6] 43[226,6] 44[232,6] 45[238,6] 46[244,6] 47[250,6] 48[256,6] 49[262,6] 50[268,6] 51[274,6] 52[280,6] 53[286,6] 54[292,6] 55[298,6] 56[304,6] 57[310,6] 58[316,6] 59[322,6] 60[328,6] 61[334,6] 62[340,6] 63[346,6] 64[352,6] 65[358,6] 66[364,6] 67[370,6] 68[376,6] 69[382,6] 70[388,6] 71[394,6] 72[400,6] 73[406,6] 74[412,6] 75[418,6] 76[424,6] 77[430,6] 78[436,6] 79[442,6] 80[448,6] 81[454,6] 82[460,6] 83[466,6] 84[472,6] 85[478,6] 86[484,6] 87[490,6] 88[496,6] 89[502,6] 90[508,6] 91[514,6] 92[520,6] 93[526,6] 94[532,6] 95[538,6] 96[544,6] 97[550,6] 98[556,6] 99[562,6] 100[568,6] 101[574,6] 102[580,6] 103[586,6] 104[592,6] 105[598,6] 106[604,6] 107[610,6] 108[616,6] 109[622,6] 110[628,6] 111[634,6] 112[640,6] 113[646,6] 114[652,6] 115[658,6] 116[664,6] 117[670,6] 118[676,6] 119[682,6] 120[688,6] 121[694,6] 122[700,6] 123[706,6] 124[712,6] 125[718,6] 126[724,6] 127[730,6] 134[736,2] 138[738,1] 140[739,1] 142[740,1] 143[741,1] 144[742,1] 145[743,2] 146[745,1] 147[746,1] 148[747,1] 149[748,1] 150[749,1] 151[750,1] 152[751,1] 153[752,2] 157[754,1] 158[755,1] 159[756,1] 160[757,1] 161[758,1] 162[759,1] 163[760,1] 164[761,1] 165[762,1] 173[763,1] 175[764,1] 176[765,1] 177[766,1] 178[767,1] 179[768,1] 180[769,1] 184[770,1] 187[771,1] 188[772,1] 190[773,1] 192[774,1] 193[775,1] 194[776,1] 195[777,1] 197[778,1] 
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 148
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 148
;; live  kill	
;; rd  in  	(10)
12, 24, 35, 43, 44, 51, 52, 59, 128, 129
;; rd  gen 	(2)
127, 747
;; rd  kill	(15)
114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 747

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 4 5 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 8 2 arch/arm/kernel/perf_event_v7.c:941 (set (reg/v:SI 148 [ pmnc ])
        (asm_operands/v:SI ("mrc p15, 0, %0, c9, c12, 3") ("=r") 0 []
             [] 8926418)) -1 (nil))

(insn 8 7 9 2 arch/arm/kernel/perf_event_v7.c:945 (asm_operands/v ("mcr p15, 0, %0, c9, c12, 3") ("") 0 [
            (reg/v:SI 148 [ pmnc ])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8926930) -1 (nil))

(insn 9 8 10 2 arch/arm/kernel/perf_event_v7.c:1061 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 148 [ pmnc ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 10 9 11 2 arch/arm/kernel/perf_event_v7.c:1061 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 15)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 148
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 148
;; rd  out 	(12)
12, 24, 35, 43, 44, 51, 52, 59, 127, 128, 129, 747


;; Succ edge  3 [39.0%]  (fallthru)
;; Succ edge  4 [61.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u7(11){ }u8(13){ }u9(25){ }u10(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148
;; lr  def 	 153
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 148
;; live  gen 	 153
;; live  kill	
;; rd  in  	(12)
12, 24, 35, 43, 44, 51, 52, 59, 127, 128, 129, 747
;; rd  gen 	(1)
752
;; rd  kill	(2)
752, 753

;; Pred edge  2 [39.0%]  (fallthru)
(note 11 10 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 12 11 165 3 arch/arm/kernel/perf_event_v7.c:1062 (set (reg:SI 153 [ D.25997 ])
        (reg/v:SI 148 [ pmnc ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 148 [ pmnc ])
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(jump_insn 165 12 166 3 (set (pc)
        (label_ref 141)) -1 (nil))
;; End of basic block 3 -> ( 19)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 153
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 153
;; rd  out 	(13)
12, 24, 35, 43, 44, 51, 52, 59, 127, 128, 129, 747, 752


;; Succ edge  19 [100.0%] 

(barrier 166 165 15)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u12(11){ }u13(13){ }u14(25){ }u15(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148
;; lr  def 	 140 144 145 146 147 152 157 158 159 160 161 162 163 164 165 192 193 194 195 197
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148
;; live  gen 	 140 144 145 146 147 152 157 158 159 160 161 162 163 164 165 192 193 194 195 197
;; live  kill	
;; rd  in  	(12)
12, 24, 35, 43, 44, 51, 52, 59, 127, 128, 129, 747
;; rd  gen 	(20)
739, 742, 743, 745, 746, 751, 754, 755, 756, 757, 758, 759, 760, 761, 762, 774, 775, 776, 777, 778
;; rd  kill	(21)
739, 742, 743, 744, 745, 746, 751, 754, 755, 756, 757, 758, 759, 760, 761, 762, 774, 775, 776, 777, 778

;; Pred edge  2 [61.0%] 
(code_label 15 166 16 4 263 "" [1 uses])

(note 16 15 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 17 16 18 4 include/asm-generic/irq_regs.h:25 discrim 4 (set (reg/f:SI 157)
        (symbol_ref:SI ("__irq_regs") [flags 0xc0] <var_decl 0x1147ac60 __irq_regs>)) 167 {*arm_movsi_insn} (nil))

(insn 18 17 20 4 include/asm-generic/irq_regs.h:25 discrim 4 (set (reg/v:SI 140 [ __ptr ])
        (asm_operands:SI ("") ("=r") 0 [
                (reg/f:SI 157)
            ]
             [
                (asm_input:SI ("0") 0)
            ] 8985755)) -1 (expr_list:REG_DEAD (reg/f:SI 157)
        (nil)))

(insn 20 18 21 4 include/asm-generic/irq_regs.h:25 discrim 4 (set (reg/f:SI 158)
        (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10b1cf60 __per_cpu_offset>)) 167 {*arm_movsi_insn} (nil))

(insn 21 20 22 4 include/asm-generic/irq_regs.h:25 discrim 4 (set (reg:SI 160)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 22 21 23 4 include/asm-generic/irq_regs.h:25 discrim 4 (set (reg:SI 159)
        (and:SI (reg:SI 160)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 160)
        (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
                (const_int -8192 [0xffffffffffffe000]))
            (nil))))

(insn 23 22 24 4 include/asm-generic/irq_regs.h:25 discrim 4 (set (reg:SI 161 [ <variable>.cpu ])
        (mem/s/j:SI (plus:SI (reg:SI 159)
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 24 23 25 4 include/asm-generic/irq_regs.h:25 discrim 4 (set (reg:SI 162)
        (mem/s/j:SI (plus:SI (mult:SI (reg:SI 161 [ <variable>.cpu ])
                    (const_int 4 [0x4]))
                (reg/f:SI 158)) [0 __per_cpu_offset S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 161 [ <variable>.cpu ])
        (expr_list:REG_DEAD (reg/f:SI 158)
            (expr_list:REG_EQUAL (mem/s/j:SI (plus:SI (mult:SI (reg:SI 161 [ <variable>.cpu ])
                            (const_int 4 [0x4]))
                        (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10b1cf60 __per_cpu_offset>)) [0 __per_cpu_offset S4 A32])
                (nil)))))

(insn 25 24 26 4 include/asm-generic/irq_regs.h:25 discrim 4 (set (reg/v/f:SI 146 [ regs ])
        (mem/f:SI (plus:SI (reg/v:SI 140 [ __ptr ])
                (reg:SI 162)) [0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 140 [ __ptr ])
        (nil)))

(insn 26 25 27 4 include/linux/perf_event.h:995 (set (reg:DI 163)
        (const_int 0 [0x0])) 163 {*arm_movdi} (nil))

(insn 27 26 28 4 include/linux/perf_event.h:995 (set (mem/s/j/c:DI (plus:SI (reg/f:SI 25 sfp)
                (const_int -48 [0xffffffffffffffd0])) [0 data.addr+0 S8 A64])
        (reg:DI 163)) 163 {*arm_movdi} (expr_list:REG_DEAD (reg:DI 163)
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn 28 27 29 4 include/linux/perf_event.h:996 (set (reg:SI 164)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 29 28 30 4 include/linux/perf_event.h:996 (set (mem/s/f/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 data.raw+0 S4 A32])
        (reg:SI 164)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 30 29 31 4 arch/arm/kernel/perf_event_v7.c:1071 (set (reg/f:SI 165)
        (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 31 30 38 4 arch/arm/kernel/perf_event_v7.c:1071 (set (reg/v:SI 144 [ __ptr ])
        (asm_operands:SI ("") ("=r") 0 [
                (reg/f:SI 165)
            ]
             [
                (asm_input:SI ("0") 0)
            ] 8943066)) -1 (expr_list:REG_DEAD (reg/f:SI 165)
        (nil)))

(insn 38 31 39 4 arch/arm/kernel/perf_event_v7.c:1071 (set (reg/v/f:SI 147 [ cpuc ])
        (plus:SI (reg/v:SI 144 [ __ptr ])
            (reg:SI 162))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 162)
        (expr_list:REG_DEAD (reg/v:SI 144 [ __ptr ])
            (nil))))

(insn 39 38 43 4 arch/arm/kernel/perf_event_v7.c:1076 (set (reg/f:SI 152 [ D.26005 ])
        (plus:SI (reg/v/f:SI 147 [ cpuc ])
            (const_int 140 [0x8c]))) 4 {*arm_addsi3} (nil))

(insn 43 39 132 4 arch/arm/kernel/perf_event_v7.c:1072 (set (reg/v:SI 145 [ idx ])
        (reg:SI 164)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 164)
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn 132 43 99 4 arch/arm/kernel/perf_event_v7.c:1072 discrim 1 (set (reg/f:SI 192)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 99 132 101 4 arch/arm/kernel/perf_event_v7.c:1087 (set (reg:SI 193)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 101 99 112 4 arch/arm/kernel/perf_event_v7.c:1088 (set (reg:SI 194)
        (const_int 296 [0x128])) 167 {*arm_movsi_insn} (nil))

(insn 112 101 63 4 arch/arm/kernel/perf_event_v7.c:1092 (set (reg/f:SI 195)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -80 [0xffffffffffffffb0]))) 4 {*arm_addsi3} (nil))

(insn 63 112 167 4 arch/arm/kernel/perf_event_v7.c:786 (set (reg:SI 197 [ ret ])
        (and:SI (reg/v:SI 148 [ pmnc ])
            (const_int -2147483648 [0xffffffff80000000]))) 67 {*arm_andsi3_insn} (nil))

(jump_insn 167 63 168 4 arch/arm/kernel/perf_event_v7.c:1072 (set (pc)
        (label_ref 130)) -1 (nil))
;; End of basic block 4 -> ( 17)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 148 152 159 192 193 194 195 197
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 148 152 159 192 193 194 195 197
;; rd  out 	(32)
12, 24, 35, 43, 44, 51, 52, 59, 127, 128, 129, 739, 742, 743, 745, 746, 747, 751, 754, 755, 756, 757, 758, 759, 760, 761, 762, 774, 775, 776, 777, 778


;; Succ edge  17 [100.0%] 

(barrier 168 167 135)

;; Start of basic block ( 17) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u37(11){ }u38(13){ }u39(25){ }u40(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 148 149 152 159 192 193 194 195 197
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 147 152
;; lr  def 	 24 [cc] 138 143 173 175 176 177
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 148 149 152 159 192 193 194 195 197
;; live  gen 	 24 [cc] 138 143 173 175 176 177
;; live  kill	
;; rd  in  	(55)
5, 7, 11, 12, 24, 35, 43, 44, 51, 52, 59, 117, 128, 129, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778
;; rd  gen 	(7)
126, 738, 741, 763, 764, 765, 766
;; rd  kill	(20)
114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 738, 741, 763, 764, 765, 766

;; Pred edge  17 [97.1%] 
(code_label 135 168 46 5 270 "" [1 uses])

(note 46 135 49 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 49 46 50 5 arch/arm/kernel/perf_event_v7.c:1073 (set (reg/v/f:SI 143 [ event ])
        (mem/s/f/j:SI (plus:SI (mult:SI (reg/v:SI 145 [ idx ])
                    (const_int 4 [0x4]))
                (reg/v/f:SI 147 [ cpuc ])) [0 <variable>.events S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 50 49 53 5 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 173)
        (ashiftrt:SI (reg/v:SI 145 [ idx ])
            (const_int 5 [0x5]))) 117 {*arm_shiftsi3} (nil))

(insn 53 50 54 5 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 138 [ D.26785 ])
        (mem/v:SI (plus:SI (mult:SI (reg:SI 173)
                    (const_int 4 [0x4]))
                (reg/f:SI 152 [ D.26005 ])) [0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 173)
        (nil)))

(insn 54 53 55 5 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 175)
        (and:SI (reg/v:SI 145 [ idx ])
            (const_int 31 [0x1f]))) 67 {*arm_andsi3_insn} (nil))

(insn 55 54 56 5 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 176)
        (lshiftrt:SI (reg:SI 138 [ D.26785 ])
            (reg:SI 175))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 175)
        (expr_list:REG_DEAD (reg:SI 138 [ D.26785 ])
            (nil))))

(insn 56 55 57 5 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 177)
        (and:SI (reg:SI 176)
            (const_int 1 [0x1]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 176)
        (nil)))

(insn 57 56 58 5 include/asm-generic/bitops/non-atomic.h:105 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 177)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 177)
        (nil)))

(jump_insn 58 57 59 5 include/asm-generic/bitops/non-atomic.h:105 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 127)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 5 -> ( 16 6)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 145 146 147 148 149 152 159 192 193 194 195 197
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 145 146 147 148 149 152 159 192 193 194 195 197
;; rd  out 	(55)
5, 7, 11, 12, 24, 35, 43, 44, 51, 52, 59, 126, 128, 129, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778


;; Succ edge  16 [50.0%] 
;; Succ edge  6 [50.0%]  (fallthru)

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u55(11){ }u56(13){ }u57(25){ }u58(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 145 146 147 148 149 152 159 192 193 194 195 197
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 145 146 147 148 149 152 159 192 193 194 195 197
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(55)
5, 7, 11, 12, 24, 35, 43, 44, 51, 52, 59, 126, 128, 129, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778
;; rd  gen 	(1)
115
;; rd  kill	(14)
114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127

;; Pred edge  5 [50.0%]  (fallthru)
(note 59 58 60 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 60 59 61 6 arch/arm/kernel/perf_event_v7.c:785 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 145 [ idx ])
            (const_int 1 [0x1]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 61 60 62 6 arch/arm/kernel/perf_event_v7.c:785 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 66)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
        (nil)))
;; End of basic block 6 -> ( 7 8)
;; lr  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 143 145 146 147 148 149 152 159 192 193 194 195 197
;; live  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 143 145 146 147 148 149 152 159 192 193 194 195 197
;; rd  out 	(55)
5, 7, 11, 12, 24, 35, 43, 44, 51, 52, 59, 115, 128, 129, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778


;; Succ edge  7 [28.0%]  (fallthru)
;; Succ edge  8 [72.0%] 

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u61(11){ }u62(13){ }u63(25){ }u64(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 145 146 147 148 152 159 192 193 194 195 197
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 197
;; lr  def 	 134
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 145 146 147 148 152 159 192 193 194 195 197
;; live  gen 	 134
;; live  kill	
;; rd  in  	(55)
5, 7, 11, 12, 24, 35, 43, 44, 51, 52, 59, 115, 128, 129, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778
;; rd  gen 	(1)
736
;; rd  kill	(2)
736, 737

;; Pred edge  6 [28.0%]  (fallthru)
(note 62 61 164 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 164 62 169 7 arch/arm/kernel/perf_event_v7.c:786 (set (reg/v:SI 134 [ ret ])
        (reg:SI 197 [ ret ])) -1 (nil))

(jump_insn 169 164 170 7 (set (pc)
        (label_ref 90)) -1 (nil))
;; End of basic block 7 -> ( 12)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 143 145 146 147 148 152 159 192 193 194 195 197
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 143 145 146 147 148 152 159 192 193 194 195 197
;; rd  out 	(54)
5, 7, 11, 12, 24, 35, 43, 44, 51, 52, 59, 115, 128, 129, 736, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778


;; Succ edge  12 [100.0%] 

(barrier 170 169 66)

;; Start of basic block ( 6) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u66(11){ }u67(13){ }u68(25){ }u69(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 143 145 146 147 148 149 152 159 192 193 194 195 197
;; lr  use 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 143 145 146 147 148 149 152 159 192 193 194 195 197
;; live  gen 	
;; live  kill	
;; rd  in  	(55)
5, 7, 11, 12, 24, 35, 43, 44, 51, 52, 59, 115, 128, 129, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  6 [72.0%] 
(code_label 66 170 67 8 267 "" [1 uses])

(note 67 66 69 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(jump_insn 69 67 70 8 arch/arm/kernel/perf_event_v7.c:787 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 81)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 4 [0x4])
            (nil))))
;; End of basic block 8 -> ( 9 11)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 145 146 147 148 149 152 159 192 193 194 195 197
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 145 146 147 148 149 152 159 192 193 194 195 197
;; rd  out 	(55)
5, 7, 11, 12, 24, 35, 43, 44, 51, 52, 59, 115, 128, 129, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778


;; Succ edge  9 [100.0%]  (fallthru)
;; Succ edge  11 [0.0%] 

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u71(11){ }u72(13){ }u73(25){ }u74(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 145 146 147 148 149 152 159 192 193 194 195 197
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 149
;; lr  def 	 24 [cc] 178
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 145 146 147 148 149 152 159 192 193 194 195 197
;; live  gen 	 24 [cc] 178
;; live  kill	
;; rd  in  	(55)
5, 7, 11, 12, 24, 35, 43, 44, 51, 52, 59, 115, 128, 129, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778
;; rd  gen 	(2)
114, 767
;; rd  kill	(15)
114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 767

;; Pred edge  8 [100.0%]  (fallthru)
(note 70 69 71 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 71 70 72 9 arch/arm/kernel/perf_event_v7.c:787 discrim 1 (set (reg:SI 178)
        (plus:SI (reg:SI 149 [ D.26022 ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 149 [ D.26022 ])
        (nil)))

(insn 72 71 73 9 arch/arm/kernel/perf_event_v7.c:787 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 145 [ idx ])
            (reg:SI 178))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 178)
        (nil)))

(jump_insn 73 72 74 9 arch/arm/kernel/perf_event_v7.c:787 discrim 1 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 81)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 4 [0x4])
            (nil))))
;; End of basic block 9 -> ( 10 11)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 145 146 147 148 152 159 192 193 194 195 197
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 145 146 147 148 152 159 192 193 194 195 197
;; rd  out 	(55)
5, 7, 11, 12, 24, 35, 43, 44, 51, 52, 59, 114, 128, 129, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778


;; Succ edge  10 [100.0%]  (fallthru)
;; Succ edge  11 [0.0%] 

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u79(11){ }u80(13){ }u81(25){ }u82(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 145 146 147 148 152 159 192 193 194 195 197
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 148 193
;; lr  def 	 134 179 180
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 145 146 147 148 152 159 192 193 194 195 197
;; live  gen 	 134 179 180
;; live  kill	
;; rd  in  	(55)
5, 7, 11, 12, 24, 35, 43, 44, 51, 52, 59, 114, 128, 129, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778
;; rd  gen 	(3)
737, 768, 769
;; rd  kill	(4)
736, 737, 768, 769

;; Pred edge  9 [100.0%]  (fallthru)
(note 74 73 75 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 75 74 77 10 arch/arm/kernel/perf_event_v7.c:788 (set (reg:SI 179)
        (plus:SI (reg/v:SI 145 [ idx ])
            (const_int -2 [0xfffffffffffffffe]))) 4 {*arm_addsi3} (nil))

(insn 77 75 78 10 arch/arm/kernel/perf_event_v7.c:788 (set (reg:SI 180)
        (ashift:SI (reg:SI 193)
            (reg:SI 179))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 179)
        (expr_list:REG_EQUAL (ashift:SI (const_int 1 [0x1])
                (reg:SI 179))
            (nil))))

(insn 78 77 171 10 arch/arm/kernel/perf_event_v7.c:788 (set (reg/v:SI 134 [ ret ])
        (and:SI (reg:SI 180)
            (reg/v:SI 148 [ pmnc ]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 180)
        (nil)))

(jump_insn 171 78 172 10 (set (pc)
        (label_ref 90)) -1 (nil))
;; End of basic block 10 -> ( 12)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 143 145 146 147 148 152 159 192 193 194 195 197
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 143 145 146 147 148 152 159 192 193 194 195 197
;; rd  out 	(54)
5, 7, 11, 12, 24, 35, 43, 44, 51, 52, 59, 114, 128, 129, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778


;; Succ edge  12 [100.0%] 

(barrier 172 171 81)

;; Start of basic block ( 8 9) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u89(11){ }u90(13){ }u91(25){ }u92(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 148 152 159 192 193 194 195 197
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 159
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 148 152 159 192 193 194 195 197
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	 14 [lr]
;; rd  in  	(56)
5, 7, 11, 12, 24, 35, 43, 44, 51, 52, 59, 114, 115, 128, 129, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778
;; rd  gen 	(1)
11
;; rd  kill	(20)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 53, 54, 55, 56, 57, 58, 59

;; Pred edge  8 [0.0%] 
;; Pred edge  9 [0.0%] 
(code_label 81 172 82 11 269 "" [2 uses])

(note 82 81 162 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 162 82 85 11 arch/arm/kernel/perf_event_v7.c:790 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC19") [flags 0x82] <string_cst 0x11737a20>)) 167 {*arm_movsi_insn} (nil))

(insn 85 162 86 11 arch/arm/kernel/perf_event_v7.c:790 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg:SI 159)
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 86 85 87 11 arch/arm/kernel/perf_event_v7.c:790 (set (reg:SI 2 r2)
        (reg/v:SI 145 [ idx ])) 167 {*arm_movsi_insn} (nil))

(call_insn 87 86 173 11 arch/arm/kernel/perf_event_v7.c:790 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(jump_insn 173 87 174 11 (set (pc)
        (label_ref 127)) -1 (nil))
;; End of basic block 11 -> ( 16)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 148 152 159 192 193 194 195 197
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 148 152 159 192 193 194 195 197
;; rd  out 	(52)
11, 24, 35, 43, 44, 51, 52, 114, 115, 128, 129, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778


;; Succ edge  16 [100.0%] 

(barrier 174 173 90)

;; Start of basic block ( 7 10) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u99(11){ }u100(13){ }u101(25){ }u102(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 143 145 146 147 148 152 159 192 193 194 195 197
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 143 145 146 147 148 152 159 192 193 194 195 197
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(56)
5, 7, 11, 12, 24, 35, 43, 44, 51, 52, 59, 114, 115, 128, 129, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778
;; rd  gen 	(1)
124
;; rd  kill	(14)
114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127

;; Pred edge  7 [100.0%] 
;; Pred edge  10 [100.0%] 
(code_label 90 174 91 12 268 "" [2 uses])

(note 91 90 92 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 92 91 93 12 arch/arm/kernel/perf_event_v7.c:1083 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 134 [ ret ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 134 [ ret ])
        (nil)))

(jump_insn 93 92 94 12 arch/arm/kernel/perf_event_v7.c:1083 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 127)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7098 [0x1bba])
            (nil))))
;; End of basic block 12 -> ( 16 13)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 145 146 147 148 152 159 192 193 194 195 197
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 145 146 147 148 152 159 192 193 194 195 197
;; rd  out 	(55)
5, 7, 11, 12, 24, 35, 43, 44, 51, 52, 59, 124, 128, 129, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778


;; Succ edge  16 [71.0%] 
;; Succ edge  13 [29.0%]  (fallthru)

;; Start of basic block ( 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u105(11){ }u106(13){ }u107(25){ }u108(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 145 146 147 148 152 159 192 193 194 195 197
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 145 194
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 142 151 184
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 145 146 147 148 152 159 192 193 194 195 197
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc] 142 151 184
;; live  kill	 14 [lr]
;; rd  in  	(55)
5, 7, 11, 12, 24, 35, 43, 44, 51, 52, 59, 124, 128, 129, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778
;; rd  gen 	(5)
7, 121, 740, 750, 770
;; rd  kill	(37)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 53, 54, 55, 56, 57, 58, 59, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 740, 750, 770

;; Pred edge  12 [29.0%]  (fallthru)
(note 94 93 95 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 95 94 96 13 arch/arm/kernel/perf_event_v7.c:1086 (set (reg/v/f:SI 142 [ hwc ])
        (plus:SI (reg/v/f:SI 143 [ event ])
            (const_int 200 [0xc8]))) 4 {*arm_addsi3} (nil))

(insn 96 95 97 13 arch/arm/kernel/perf_event_v7.c:1087 (set (reg:SI 0 r0)
        (reg/v/f:SI 143 [ event ])) 167 {*arm_movsi_insn} (nil))

(insn 97 96 98 13 arch/arm/kernel/perf_event_v7.c:1087 (set (reg:SI 1 r1)
        (reg/v/f:SI 142 [ hwc ])) 167 {*arm_movsi_insn} (nil))

(insn 98 97 158 13 arch/arm/kernel/perf_event_v7.c:1087 (set (reg:SI 2 r2)
        (reg/v:SI 145 [ idx ])) 167 {*arm_movsi_insn} (nil))

(insn 158 98 100 13 arch/arm/kernel/perf_event_v7.c:1087 (set (reg:SI 3 r3)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(call_insn 100 158 102 13 arch/arm/kernel/perf_event_v7.c:1087 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("armpmu_event_update") [flags 0x3] <function_decl 0x114a1680 armpmu_event_update>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_UNUSED (reg:DI 0 r0)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 102 100 103 13 arch/arm/kernel/perf_event_v7.c:1088 (set (reg:DI 184 [ <variable>.hw.last_period ])
        (mem/s/j:DI (plus:SI (reg/v/f:SI 143 [ event ])
                (reg:SI 194)) [0 <variable>.hw.last_period+0 S8 A64])) 163 {*arm_movdi} (expr_list:REG_EQUAL (mem/s/j:DI (plus:SI (reg/v/f:SI 143 [ event ])
                (const_int 296 [0x128])) [0 <variable>.hw.last_period+0 S8 A64])
        (nil)))

(insn 103 102 104 13 arch/arm/kernel/perf_event_v7.c:1088 (set (mem/s/j/c:DI (plus:SI (reg/f:SI 25 sfp)
                (const_int -16 [0xfffffffffffffff0])) [0 data.period+0 S8 A64])
        (reg:DI 184 [ <variable>.hw.last_period ])) 163 {*arm_movdi} (expr_list:REG_DEAD (reg:DI 184 [ <variable>.hw.last_period ])
        (nil)))

(insn 104 103 105 13 arch/arm/kernel/perf_event_v7.c:1089 (set (reg:SI 0 r0)
        (reg/v/f:SI 143 [ event ])) 167 {*arm_movsi_insn} (nil))

(insn 105 104 106 13 arch/arm/kernel/perf_event_v7.c:1089 (set (reg:SI 1 r1)
        (reg/v/f:SI 142 [ hwc ])) 167 {*arm_movsi_insn} (nil))

(insn 106 105 107 13 arch/arm/kernel/perf_event_v7.c:1089 (set (reg:SI 2 r2)
        (reg/v:SI 145 [ idx ])) 167 {*arm_movsi_insn} (nil))

(call_insn 107 106 108 13 arch/arm/kernel/perf_event_v7.c:1089 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("armpmu_event_set_period") [flags 0x3] <function_decl 0x114a1580 armpmu_event_set_period>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 108 107 109 13 arch/arm/kernel/perf_event_v7.c:1089 (set (reg:SI 151 [ D.26014 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 109 108 110 13 arch/arm/kernel/perf_event_v7.c:1089 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 151 [ D.26014 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 151 [ D.26014 ])
        (nil)))

(jump_insn 110 109 111 13 arch/arm/kernel/perf_event_v7.c:1089 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 127)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 13 -> ( 16 14)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 145 146 147 148 152 159 192 193 194 195 197
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 145 146 147 148 152 159 192 193 194 195 197
;; rd  out 	(51)
7, 24, 35, 43, 44, 51, 52, 121, 128, 129, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778


;; Succ edge  16 [71.0%] 
;; Succ edge  14 [29.0%]  (fallthru)

;; Start of basic block ( 13) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u133(11){ }u134(13){ }u135(25){ }u136(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 145 146 147 148 152 159 192 193 194 195 197
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 146 195
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 150
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 145 146 147 148 152 159 192 193 194 195 197
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 150
;; live  kill	 14 [lr]
;; rd  in  	(51)
7, 24, 35, 43, 44, 51, 52, 121, 128, 129, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778
;; rd  gen 	(3)
5, 119, 749
;; rd  kill	(35)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 53, 54, 55, 56, 57, 58, 59, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 749

;; Pred edge  13 [29.0%]  (fallthru)
(note 111 110 113 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 113 111 114 14 arch/arm/kernel/perf_event_v7.c:1092 (set (reg:SI 0 r0)
        (reg/v/f:SI 143 [ event ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 143 [ event ])
        (nil)))

(insn 114 113 115 14 arch/arm/kernel/perf_event_v7.c:1092 (set (reg:SI 1 r1)
        (reg/f:SI 195)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -80 [0xffffffffffffffb0]))
        (nil)))

(insn 115 114 116 14 arch/arm/kernel/perf_event_v7.c:1092 (set (reg:SI 2 r2)
        (reg/v/f:SI 146 [ regs ])) 167 {*arm_movsi_insn} (nil))

(call_insn 116 115 117 14 arch/arm/kernel/perf_event_v7.c:1092 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("perf_event_overflow") [flags 0x41] <function_decl 0x113da480 perf_event_overflow>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 117 116 118 14 arch/arm/kernel/perf_event_v7.c:1092 (set (reg:SI 150 [ D.26017 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 118 117 119 14 arch/arm/kernel/perf_event_v7.c:1092 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 150 [ D.26017 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 150 [ D.26017 ])
        (nil)))

(jump_insn 119 118 120 14 arch/arm/kernel/perf_event_v7.c:1092 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 127)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 14 -> ( 15 16)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145 146 147 148 152 159 192 193 194 195 197
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145 146 147 148 152 159 192 193 194 195 197
;; rd  out 	(51)
5, 24, 35, 43, 44, 51, 52, 119, 128, 129, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778


;; Succ edge  15 [29.0%]  (fallthru)
;; Succ edge  16 [71.0%] 

;; Start of basic block ( 14) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u148(11){ }u149(13){ }u150(25){ }u151(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145 146 147 148 152 159 192 193 194 195 197
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145 192
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 187 188
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145 146 147 148 152 159 192 193 194 195 197
;; live  gen 	 0 [r0] 1 [r1] 187 188
;; live  kill	 14 [lr]
;; rd  in  	(51)
5, 24, 35, 43, 44, 51, 52, 119, 128, 129, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778
;; rd  gen 	(2)
771, 772
;; rd  kill	(9)
53, 54, 55, 56, 57, 58, 59, 771, 772

;; Pred edge  14 [29.0%]  (fallthru)
(note 120 119 122 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 122 120 123 15 arch/arm/kernel/perf_event_v7.c:1093 (set (reg/f:SI 187 [ armpmu ])
        (mem/f/c/i:SI (reg/f:SI 192) [0 armpmu+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 armpmu+0 S4 A32])
        (nil)))

(insn 123 122 124 15 arch/arm/kernel/perf_event_v7.c:1093 (set (reg/f:SI 188 [ <variable>.disable ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 187 [ armpmu ])
                (const_int 16 [0x10])) [0 <variable>.disable+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 187 [ armpmu ])
        (nil)))

(insn 124 123 125 15 arch/arm/kernel/perf_event_v7.c:1093 (set (reg:SI 0 r0)
        (reg/v/f:SI 142 [ hwc ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 142 [ hwc ])
        (nil)))

(insn 125 124 126 15 arch/arm/kernel/perf_event_v7.c:1093 (set (reg:SI 1 r1)
        (reg/v:SI 145 [ idx ])) 167 {*arm_movsi_insn} (nil))

(call_insn 126 125 127 15 arch/arm/kernel/perf_event_v7.c:1093 (parallel [
            (call (mem:SI (reg/f:SI 188 [ <variable>.disable ]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 244 {*call_reg_armv5} (expr_list:REG_DEAD (reg/f:SI 188 [ <variable>.disable ])
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_DEAD (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 15 -> ( 16)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 148 152 159 192 193 194 195 197
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 148 152 159 192 193 194 195 197
;; rd  out 	(51)
5, 24, 35, 43, 44, 51, 52, 119, 128, 129, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778


;; Succ edge  16 [100.0%]  (fallthru)

;; Start of basic block ( 5 12 13 14 15 11) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u160(11){ }u161(13){ }u162(25){ }u163(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 148 152 159 192 193 194 195 197
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145
;; lr  def 	 145
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 148 152 159 192 193 194 195 197
;; live  gen 	 145
;; live  kill	
;; rd  in  	(60)
5, 7, 11, 12, 24, 35, 43, 44, 51, 52, 59, 114, 115, 119, 121, 124, 126, 128, 129, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778
;; rd  gen 	(1)
744
;; rd  kill	(2)
743, 744

;; Pred edge  5 [50.0%] 
;; Pred edge  12 [71.0%] 
;; Pred edge  13 [71.0%] 
;; Pred edge  14 [71.0%] 
;; Pred edge  15 [100.0%]  (fallthru)
;; Pred edge  11 [100.0%] 
(code_label 127 126 128 16 266 "" [5 uses])

(note 128 127 129 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 129 128 130 16 arch/arm/kernel/perf_event_v7.c:1072 (set (reg/v:SI 145 [ idx ])
        (plus:SI (reg/v:SI 145 [ idx ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))
;; End of basic block 16 -> ( 17)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 148 152 159 192 193 194 195 197
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 148 152 159 192 193 194 195 197
;; rd  out 	(59)
5, 7, 11, 12, 24, 35, 43, 44, 51, 52, 59, 114, 115, 119, 121, 124, 126, 128, 129, 736, 737, 738, 739, 740, 741, 742, 744, 745, 746, 747, 748, 749, 750, 751, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778


;; Succ edge  17 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 16 4) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u165(11){ }u166(13){ }u167(25){ }u168(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 148 152 159 192 193 194 195 197
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 192
;; lr  def 	 24 [cc] 149 190
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 148 152 159 192 193 194 195 197
;; live  gen 	 24 [cc] 149 190
;; live  kill	
;; rd  in  	(61)
5, 7, 11, 12, 24, 35, 43, 44, 51, 52, 59, 114, 115, 119, 121, 124, 126, 127, 128, 129, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778
;; rd  gen 	(3)
117, 748, 773
;; rd  kill	(16)
114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 748, 773

;; Pred edge  16 [100.0%]  (fallthru,dfs_back)
;; Pred edge  4 [100.0%] 
(code_label 130 129 131 17 265 "" [1 uses])

(note 131 130 133 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 133 131 134 17 arch/arm/kernel/perf_event_v7.c:1072 discrim 1 (set (reg/f:SI 190 [ armpmu ])
        (mem/f/c/i:SI (reg/f:SI 192) [0 armpmu+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 armpmu+0 S4 A32])
        (nil)))

(insn 134 133 136 17 arch/arm/kernel/perf_event_v7.c:1072 discrim 1 (set (reg:SI 149 [ D.26022 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 190 [ armpmu ])
                (const_int 56 [0x38])) [0 <variable>.num_events+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 190 [ armpmu ])
        (nil)))

(insn 136 134 137 17 arch/arm/kernel/perf_event_v7.c:1072 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 145 [ idx ])
            (reg:SI 149 [ D.26022 ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 137 136 138 17 arch/arm/kernel/perf_event_v7.c:1072 discrim 1 (set (pc)
        (if_then_else (le (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 135)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9706 [0x25ea])
            (nil))))
;; End of basic block 17 -> ( 5 18)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 148 149 152 159 192 193 194 195 197
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 148 149 152 159 192 193 194 195 197
;; rd  out 	(55)
5, 7, 11, 12, 24, 35, 43, 44, 51, 52, 59, 117, 128, 129, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778


;; Succ edge  5 [97.1%] 
;; Succ edge  18 [2.9%]  (fallthru,loop_exit)

;; Start of basic block ( 17) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u174(11){ }u175(13){ }u176(25){ }u177(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 153
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 153
;; live  kill	 14 [lr]
;; rd  in  	(55)
5, 7, 11, 12, 24, 35, 43, 44, 51, 52, 59, 117, 128, 129, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778
;; rd  gen 	(1)
753
;; rd  kill	(9)
53, 54, 55, 56, 57, 58, 59, 752, 753

;; Pred edge  17 [2.9%]  (fallthru,loop_exit)
(note 138 137 139 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(call_insn 139 138 140 18 arch/arm/kernel/perf_event_v7.c:1103 (parallel [
            (call (mem:SI (symbol_ref:SI ("irq_work_run") [flags 0x41] <function_decl 0x113ba780 irq_work_run>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(insn 140 139 141 18 arch/arm/kernel/perf_event_v7.c:1105 (set (reg:SI 153 [ D.25997 ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 18 -> ( 19)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 153
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153
;; rd  out 	(55)
5, 7, 11, 12, 24, 35, 43, 44, 51, 52, 117, 128, 129, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778


;; Succ edge  19 [100.0%]  (fallthru)

;; Start of basic block ( 18 3) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u179(11){ }u180(13){ }u181(25){ }u182(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 153
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 153
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(58)
5, 7, 11, 12, 24, 35, 43, 44, 51, 52, 59, 117, 127, 128, 129, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778
;; rd  gen 	(1)
1
;; rd  kill	(13)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12

;; Pred edge  18 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%] 
(code_label 141 140 142 19 264 "" [1 uses])

(note 142 141 147 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 147 142 153 19 arch/arm/kernel/perf_event_v7.c:1106 (set (reg/i:SI 0 r0)
        (reg:SI 153 [ D.25997 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 153 [ D.25997 ])
        (nil)))

(insn 153 147 0 19 arch/arm/kernel/perf_event_v7.c:1106 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 19 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(55)
1, 24, 35, 43, 44, 51, 52, 59, 117, 127, 128, 129, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function perf_callchain_kernel (perf_callchain_kernel)[0:1362]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


perf_callchain_kernel

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr]
;;  ref usage 	r0={3d,2u} r1={3d,2u} r2={3d,1u} r3={2d} r11={1d,2u} r12={2d} r13={1d,3u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,7u,1d} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,1u} r134={1d,4u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} 
;;    total ref usage 169{138d,30u,1e} in 16{15 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129
0[0,3] 1[3,3] 2[6,3] 3[9,2] 11[11,1] 12[12,2] 13[14,1] 14[15,2] 15[17,1] 16[18,1] 17[19,1] 18[20,1] 19[21,1] 20[22,1] 21[23,1] 22[24,1] 23[25,1] 24[26,1] 25[27,1] 26[28,1] 27[29,1] 28[30,1] 29[31,1] 30[32,1] 31[33,1] 32[34,1] 33[35,1] 34[36,1] 35[37,1] 36[38,1] 37[39,1] 38[40,1] 39[41,1] 40[42,1] 41[43,1] 42[44,1] 43[45,1] 44[46,1] 45[47,1] 46[48,1] 47[49,1] 48[50,1] 49[51,1] 50[52,1] 51[53,1] 52[54,1] 53[55,1] 54[56,1] 55[57,1] 56[58,1] 57[59,1] 58[60,1] 59[61,1] 60[62,1] 61[63,1] 62[64,1] 63[65,1] 64[66,1] 65[67,1] 66[68,1] 67[69,1] 68[70,1] 69[71,1] 70[72,1] 71[73,1] 72[74,1] 73[75,1] 74[76,1] 75[77,1] 76[78,1] 77[79,1] 78[80,1] 79[81,1] 80[82,1] 81[83,1] 82[84,1] 83[85,1] 84[86,1] 85[87,1] 86[88,1] 87[89,1] 88[90,1] 89[91,1] 90[92,1] 91[93,1] 92[94,1] 93[95,1] 94[96,1] 95[97,1] 96[98,1] 97[99,1] 98[100,1] 99[101,1] 100[102,1] 101[103,1] 102[104,1] 103[105,1] 104[106,1] 105[107,1] 106[108,1] 107[109,1] 108[110,1] 109[111,1] 110[112,1] 111[113,1] 112[114,1] 113[115,1] 114[116,1] 115[117,1] 116[118,1] 117[119,1] 118[120,1] 119[121,1] 120[122,1] 121[123,1] 122[124,1] 123[125,1] 124[126,1] 125[127,1] 126[128,1] 127[129,1] 133[130,1] 134[131,1] 135[132,1] 136[133,1] 137[134,1] 138[135,1] 139[136,1] 140[137,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d2(0){ }d5(1){ }d8(2){ }d10(3){ }d11(11){ }d13(12){ }d14(13){ }d16(14){ }d27(25){ }d28(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
2, 5, 8, 10, 11, 13, 14, 16, 27, 28
;; rd  kill	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 27, 28
;; lr  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(10)
2, 5, 8, 10, 11, 13, 14, 16, 27, 28

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d11(bb 0 insn -1) }u1(13){ d14(bb 0 insn -1) }u2(25){ d27(bb 0 insn -1) }u3(26){ d28(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134 135 136 137 138 139 140
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 133 134 135 136 137 138 139 140
;; live  kill	 14 [lr]
;; rd  in  	(10)
2, 5, 8, 10, 11, 13, 14, 16, 27, 28
;; rd  gen 	(8)
130, 131, 132, 133, 134, 135, 136, 137
;; rd  kill	(10)
15, 16, 130, 131, 132, 133, 134, 135, 136, 137
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(17)
2, 5, 8, 10, 11, 13, 14, 27, 28, 130, 131, 132, 133, 134, 135, 136, 137
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d2(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 3
;;      reg 1 { d5(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 7
;;      reg 134 { d131(bb 2 insn 3) }
;;   UD chains for insn luid 3 uid 8
;;      reg 25 { d27(bb 0 insn -1) }
;;      reg 135 { d132(bb 2 insn 7) }
;;   UD chains for insn luid 4 uid 9
;;      reg 134 { d131(bb 2 insn 3) }
;;   UD chains for insn luid 5 uid 10
;;      reg 25 { d27(bb 0 insn -1) }
;;      reg 136 { d133(bb 2 insn 9) }
;;   UD chains for insn luid 6 uid 11
;;      reg 134 { d131(bb 2 insn 3) }
;;   UD chains for insn luid 7 uid 12
;;      reg 25 { d27(bb 0 insn -1) }
;;      reg 137 { d134(bb 2 insn 11) }
;;   UD chains for insn luid 8 uid 13
;;      reg 134 { d131(bb 2 insn 3) }
;;   UD chains for insn luid 9 uid 14
;;      reg 25 { d27(bb 0 insn -1) }
;;      reg 138 { d135(bb 2 insn 13) }
;;   UD chains for insn luid 10 uid 15
;;      reg 25 { d27(bb 0 insn -1) }
;;   UD chains for insn luid 12 uid 17
;;      reg 139 { d136(bb 2 insn 15) }
;;   eq_note reg 25 { }
;;   UD chains for insn luid 13 uid 18
;;      reg 140 { d137(bb 2 insn 16) }
;;   UD chains for insn luid 14 uid 19
;;      reg 133 { d130(bb 2 insn 2) }
;;   UD chains for insn luid 15 uid 20
;;      reg 13 { d14(bb 0 insn -1) }
;;      reg 0 { d1(bb 2 insn 17) }
;;      reg 1 { d4(bb 2 insn 18) }
;;      reg 2 { d7(bb 2 insn 19) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u27(11){ d11(bb 0 insn -1) }u28(13){ d14(bb 0 insn -1) }u29(14){ }u30(25){ d27(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(17)
2, 5, 8, 10, 11, 13, 14, 27, 28, 130, 131, 132, 133, 134, 135, 136, 137
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(17)
2, 5, 8, 10, 11, 13, 14, 27, 28, 130, 131, 132, 133, 134, 135, 136, 137
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 14 { }
;;   reg 25 { d27(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 20 to worklist
  Adding insn 14 to worklist
  Adding insn 12 to worklist
  Adding insn 10 to worklist
  Adding insn 8 to worklist
Finished finding needed instructions:
Processing use of (reg 25 sfp) in insn 8:
Processing use of (reg 135 [ <variable>.uregs+44 ]) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 134 [ regs ]) in insn 7:
  Adding insn 3 to worklist
Processing use of (reg 1 r1) in insn 3:
Processing use of (reg 25 sfp) in insn 10:
Processing use of (reg 136 [ <variable>.uregs+52 ]) in insn 10:
  Adding insn 9 to worklist
Processing use of (reg 134 [ regs ]) in insn 9:
Processing use of (reg 25 sfp) in insn 12:
Processing use of (reg 137 [ <variable>.uregs+56 ]) in insn 12:
  Adding insn 11 to worklist
Processing use of (reg 134 [ regs ]) in insn 11:
Processing use of (reg 25 sfp) in insn 14:
Processing use of (reg 138 [ <variable>.uregs+60 ]) in insn 14:
  Adding insn 13 to worklist
Processing use of (reg 134 [ regs ]) in insn 13:
Processing use of (reg 13 sp) in insn 20:
Processing use of (reg 0 r0) in insn 20:
  Adding insn 17 to worklist
Processing use of (reg 1 r1) in insn 20:
  Adding insn 18 to worklist
Processing use of (reg 2 r2) in insn 20:
  Adding insn 19 to worklist
Processing use of (reg 133 [ entry ]) in insn 19:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 140) in insn 18:
  Adding insn 16 to worklist
Processing use of (reg 139) in insn 17:
  Adding insn 15 to worklist
Processing use of (reg 25 sfp) in insn 15:


perf_callchain_kernel

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr]
;;  ref usage 	r0={3d,2u} r1={3d,2u} r2={3d,1u} r3={2d} r11={1d,2u} r12={2d} r13={1d,3u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,7u,1d} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,1u} r134={1d,4u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} 
;;    total ref usage 169{138d,30u,1e} in 16{15 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129
0[0,3] 1[3,3] 2[6,3] 3[9,2] 11[11,1] 12[12,2] 13[14,1] 14[15,2] 15[17,1] 16[18,1] 17[19,1] 18[20,1] 19[21,1] 20[22,1] 21[23,1] 22[24,1] 23[25,1] 24[26,1] 25[27,1] 26[28,1] 27[29,1] 28[30,1] 29[31,1] 30[32,1] 31[33,1] 32[34,1] 33[35,1] 34[36,1] 35[37,1] 36[38,1] 37[39,1] 38[40,1] 39[41,1] 40[42,1] 41[43,1] 42[44,1] 43[45,1] 44[46,1] 45[47,1] 46[48,1] 47[49,1] 48[50,1] 49[51,1] 50[52,1] 51[53,1] 52[54,1] 53[55,1] 54[56,1] 55[57,1] 56[58,1] 57[59,1] 58[60,1] 59[61,1] 60[62,1] 61[63,1] 62[64,1] 63[65,1] 64[66,1] 65[67,1] 66[68,1] 67[69,1] 68[70,1] 69[71,1] 70[72,1] 71[73,1] 72[74,1] 73[75,1] 74[76,1] 75[77,1] 76[78,1] 77[79,1] 78[80,1] 79[81,1] 80[82,1] 81[83,1] 82[84,1] 83[85,1] 84[86,1] 85[87,1] 86[88,1] 87[89,1] 88[90,1] 89[91,1] 90[92,1] 91[93,1] 92[94,1] 93[95,1] 94[96,1] 95[97,1] 96[98,1] 97[99,1] 98[100,1] 99[101,1] 100[102,1] 101[103,1] 102[104,1] 103[105,1] 104[106,1] 105[107,1] 106[108,1] 107[109,1] 108[110,1] 109[111,1] 110[112,1] 111[113,1] 112[114,1] 113[115,1] 114[116,1] 115[117,1] 116[118,1] 117[119,1] 118[120,1] 119[121,1] 120[122,1] 121[123,1] 122[124,1] 123[125,1] 124[126,1] 125[127,1] 126[128,1] 127[129,1] 133[130,1] 134[131,1] 135[132,1] 136[133,1] 137[134,1] 138[135,1] 139[136,1] 140[137,1] 
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134 135 136 137 138 139 140
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 133 134 135 136 137 138 139 140
;; live  kill	 14 [lr]
;; rd  in  	(10)
2, 5, 8, 10, 11, 13, 14, 16, 27, 28
;; rd  gen 	(8)
130, 131, 132, 133, 134, 135, 136, 137
;; rd  kill	(10)
15, 16, 130, 131, 132, 133, 134, 135, 136, 137

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 5 3 2 arch/arm/kernel/perf_event.c:773 (set (reg/v/f:SI 133 [ entry ])
        (reg:SI 0 r0 [ entry ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ entry ])
        (nil)))

(insn 3 2 4 2 arch/arm/kernel/perf_event.c:773 (set (reg/v/f:SI 134 [ regs ])
        (reg:SI 1 r1 [ regs ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ regs ])
        (nil)))

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 8 2 arch/arm/kernel/perf_event.c:776 (set (reg:SI 135 [ <variable>.uregs+44 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 134 [ regs ])
                (const_int 44 [0x2c])) [0 <variable>.uregs+44 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 8 7 9 2 arch/arm/kernel/perf_event.c:776 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -16 [0xfffffffffffffff0])) [0 fr.fp+0 S4 A64])
        (reg:SI 135 [ <variable>.uregs+44 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 135 [ <variable>.uregs+44 ])
        (nil)))

(insn 9 8 10 2 arch/arm/kernel/perf_event.c:777 (set (reg:SI 136 [ <variable>.uregs+52 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 134 [ regs ])
                (const_int 52 [0x34])) [0 <variable>.uregs+52 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 10 9 11 2 arch/arm/kernel/perf_event.c:777 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -12 [0xfffffffffffffff4])) [0 fr.sp+0 S4 A32])
        (reg:SI 136 [ <variable>.uregs+52 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 136 [ <variable>.uregs+52 ])
        (nil)))

(insn 11 10 12 2 arch/arm/kernel/perf_event.c:778 (set (reg:SI 137 [ <variable>.uregs+56 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 134 [ regs ])
                (const_int 56 [0x38])) [0 <variable>.uregs+56 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 12 11 13 2 arch/arm/kernel/perf_event.c:778 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0 fr.lr+0 S4 A64])
        (reg:SI 137 [ <variable>.uregs+56 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 137 [ <variable>.uregs+56 ])
        (nil)))

(insn 13 12 14 2 arch/arm/kernel/perf_event.c:779 (set (reg:SI 138 [ <variable>.uregs+60 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 134 [ regs ])
                (const_int 60 [0x3c])) [0 <variable>.uregs+60 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 134 [ regs ])
        (nil)))

(insn 14 13 15 2 arch/arm/kernel/perf_event.c:779 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 fr.pc+0 S4 A32])
        (reg:SI 138 [ <variable>.uregs+60 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 138 [ <variable>.uregs+60 ])
        (nil)))

(insn 15 14 16 2 arch/arm/kernel/perf_event.c:780 (set (reg/f:SI 139)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -16 [0xfffffffffffffff0]))) 4 {*arm_addsi3} (nil))

(insn 16 15 17 2 arch/arm/kernel/perf_event.c:780 (set (reg/f:SI 140)
        (symbol_ref:SI ("callchain_trace") [flags 0x3] <function_decl 0x11532700 callchain_trace>)) 167 {*arm_movsi_insn} (nil))

(insn 17 16 18 2 arch/arm/kernel/perf_event.c:780 (set (reg:SI 0 r0)
        (reg/f:SI 139)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 139)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -16 [0xfffffffffffffff0]))
            (nil))))

(insn 18 17 19 2 arch/arm/kernel/perf_event.c:780 (set (reg:SI 1 r1)
        (reg/f:SI 140)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 140)
        (expr_list:REG_EQUAL (symbol_ref:SI ("callchain_trace") [flags 0x3] <function_decl 0x11532700 callchain_trace>)
            (nil))))

(insn 19 18 20 2 arch/arm/kernel/perf_event.c:780 (set (reg:SI 2 r2)
        (reg/v/f:SI 133 [ entry ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 133 [ entry ])
        (nil)))

(call_insn 20 19 0 2 arch/arm/kernel/perf_event.c:780 (parallel [
            (call (mem:SI (symbol_ref:SI ("walk_stackframe") [flags 0x41] <function_decl 0x1147bd00 walk_stackframe>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_DEAD (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(17)
2, 5, 8, 10, 11, 13, 14, 27, 28, 130, 131, 132, 133, 134, 135, 136, 137


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function perf_callchain_user (perf_callchain_user)[0:1360]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 19 n_edges 27 count 43 (  2.3)
df_worklist_dataflow_doublequeue:n_basic_blocks 19 n_edges 27 count 46 (  2.4)
df_worklist_dataflow_doublequeue:n_basic_blocks 19 n_edges 27 count 49 (  2.6)


perf_callchain_user

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={3d,3u} r1={3d,2u} r2={3d,1u} r3={2d} r11={1d,18u} r12={2d} r13={1d,20u,1d} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={13d,10u} r25={1d,21u,1d} r26={1d,17u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r135={4d,1u} r136={1d,1u} r137={1d,1u} r138={1d,2u} r139={1d,2u} r140={1d} r141={1d,1u} r143={1d,5u,1d} r144={2d,5u} r145={1d,1u} r146={1d,6u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r152={1d,2u} r153={1d,1u} r154={1d,1u} r157={1d,1u} r158={1d,1u} r159={2d,1u} r161={1d,1u} r163={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r171={1d,2u} r179={1d,1u} r181={1d,1u} 
;;    total ref usage 319{177d,139u,3e} in 63{62 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141
0[0,3] 1[3,3] 2[6,3] 3[9,2] 11[11,1] 12[12,2] 13[14,1] 14[15,2] 15[17,1] 16[18,1] 17[19,1] 18[20,1] 19[21,1] 20[22,1] 21[23,1] 22[24,1] 23[25,1] 24[26,13] 25[39,1] 26[40,1] 27[41,1] 28[42,1] 29[43,1] 30[44,1] 31[45,1] 32[46,1] 33[47,1] 34[48,1] 35[49,1] 36[50,1] 37[51,1] 38[52,1] 39[53,1] 40[54,1] 41[55,1] 42[56,1] 43[57,1] 44[58,1] 45[59,1] 46[60,1] 47[61,1] 48[62,1] 49[63,1] 50[64,1] 51[65,1] 52[66,1] 53[67,1] 54[68,1] 55[69,1] 56[70,1] 57[71,1] 58[72,1] 59[73,1] 60[74,1] 61[75,1] 62[76,1] 63[77,1] 64[78,1] 65[79,1] 66[80,1] 67[81,1] 68[82,1] 69[83,1] 70[84,1] 71[85,1] 72[86,1] 73[87,1] 74[88,1] 75[89,1] 76[90,1] 77[91,1] 78[92,1] 79[93,1] 80[94,1] 81[95,1] 82[96,1] 83[97,1] 84[98,1] 85[99,1] 86[100,1] 87[101,1] 88[102,1] 89[103,1] 90[104,1] 91[105,1] 92[106,1] 93[107,1] 94[108,1] 95[109,1] 96[110,1] 97[111,1] 98[112,1] 99[113,1] 100[114,1] 101[115,1] 102[116,1] 103[117,1] 104[118,1] 105[119,1] 106[120,1] 107[121,1] 108[122,1] 109[123,1] 110[124,1] 111[125,1] 112[126,1] 113[127,1] 114[128,1] 115[129,1] 116[130,1] 117[131,1] 118[132,1] 119[133,1] 120[134,1] 121[135,1] 122[136,1] 123[137,1] 124[138,1] 125[139,1] 126[140,1] 127[141,1] 135[142,4] 136[146,1] 137[147,1] 138[148,1] 139[149,1] 140[150,1] 141[151,1] 143[152,1] 144[153,2] 145[155,1] 146[156,1] 147[157,1] 148[158,1] 149[159,1] 150[160,1] 152[161,1] 153[162,1] 154[163,1] 157[164,1] 158[165,1] 159[166,2] 161[168,1] 163[169,1] 167[170,1] 168[171,1] 169[172,1] 170[173,1] 171[174,1] 179[175,1] 181[176,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d2(0){ }d5(1){ }d8(2){ }d10(3){ }d11(11){ }d13(12){ }d14(13){ }d16(14){ }d39(25){ }d40(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
2, 5, 8, 10, 11, 13, 14, 16, 39, 40
;; rd  kill	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 39, 40
;; lr  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
2, 5, 8, 10, 11, 13, 14, 16, 39, 40

( 0 )->[2]->( 12 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d11(bb 0 insn -1) }u1(13){ d14(bb 0 insn -1) }u2(25){ d39(bb 0 insn -1) }u3(26){ d40(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 135 141 146 147 148 149 179 181
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 135 141 146 147 148 149 179 181
;; live  kill	
;; rd  in  	(10)
2, 5, 8, 10, 11, 13, 14, 16, 39, 40
;; rd  gen 	(8)
145, 151, 156, 157, 158, 159, 175, 176
;; rd  kill	(11)
142, 143, 144, 145, 151, 156, 157, 158, 159, 175, 176
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 141 146 179 181
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 141 146 179 181
;; rd  out 	(18)
2, 5, 8, 10, 11, 13, 14, 16, 39, 40, 145, 151, 156, 157, 158, 159, 175, 176
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d39(bb 0 insn -1) }
;;   reg 26 { d40(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d2(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 3
;;      reg 1 { d5(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 7
;;      reg 147 { d157(bb 2 insn 3) }
;;   UD chains for insn luid 3 uid 8
;;      reg 148 { d158(bb 2 insn 7) }
;;   UD chains for insn luid 4 uid 10
;;      reg 13 { d14(bb 0 insn -1) }
;;   UD chains for insn luid 5 uid 11
;;      reg 149 { d159(bb 2 insn 10) }
;;   eq_note reg 13 { }
;;   UD chains for insn luid 6 uid 27
;;      reg 25 { d39(bb 0 insn -1) }

( 17 )->[3]->( 4 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u12(11){ d11(bb 0 insn -1) }u13(13){ d14(bb 0 insn -1) }u14(25){ d39(bb 0 insn -1) }u15(26){ d40(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 144 145 146 171 179 181
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144
;; lr  def 	 24 [cc] 139 140 150
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 144 145 146 171 179 181
;; live  gen 	 24 [cc] 139 140 150
;; live  kill	 24 [cc]
;; rd  in  	(47)
1, 2, 5, 8, 10, 11, 13, 14, 16, 27, 39, 40, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176
;; rd  gen 	(4)
37, 149, 150, 160
;; rd  kill	(16)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 149, 150, 160
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 141 144 145 146 171 179 181
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 141 144 145 146 171 179 181
;; rd  out 	(47)
1, 2, 5, 8, 10, 11, 13, 14, 16, 37, 39, 40, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d39(bb 0 insn -1) }
;;   reg 26 { d40(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 15
;;      reg 141 { d151(bb 2 insn 11) }
;;   UD chains for insn luid 1 uid 16
;;      reg 144 { d154(bb 15 insn 95) d153(bb 4 insn 143) }
;;      reg 150 { d160(bb 3 insn 15) }
;;   UD chains for insn luid 2 uid 18
;;      reg 139 { d149(bb 3 insn 16) }
;;   UD chains for insn luid 3 uid 19
;;      reg 24 { d37(bb 3 insn 18) }

( 3 )->[4]->( 16 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u21(11){ d11(bb 0 insn -1) }u22(13){ d14(bb 0 insn -1) }u23(25){ d39(bb 0 insn -1) }u24(26){ d40(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 145 146 171 179 181
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171
;; lr  def 	 144
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 145 146 171 179 181
;; live  gen 	 144
;; live  kill	
;; rd  in  	(47)
1, 2, 5, 8, 10, 11, 13, 14, 16, 37, 39, 40, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176
;; rd  gen 	(1)
153
;; rd  kill	(2)
153, 154
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 144 145 146 179 181
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 144 145 146 179 181
;; rd  out 	(46)
1, 2, 5, 8, 10, 11, 13, 14, 16, 37, 39, 40, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d39(bb 0 insn -1) }
;;   reg 26 { d40(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 143
;;      reg 171 { d174(bb 17 insn 108) }

( 3 )->[5]->( 12 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u26(11){ d11(bb 0 insn -1) }u27(13){ d14(bb 0 insn -1) }u28(25){ d39(bb 0 insn -1) }u29(26){ d40(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 144 146 179 181
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 144 179
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 135 136
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 144 146 179 181
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 135 136
;; live  kill	 14 [lr]
;; rd  in  	(47)
1, 2, 5, 8, 10, 11, 13, 14, 16, 37, 39, 40, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176
;; rd  gen 	(4)
1, 35, 143, 146
;; rd  kill	(23)
0, 1, 2, 15, 16, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 142, 143, 144, 145, 146
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 141 144 146 179 181
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 141 144 146 179 181
;; rd  out 	(42)
1, 5, 8, 10, 11, 13, 14, 35, 39, 40, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d39(bb 0 insn -1) }
;;   reg 26 { d40(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 28
;;      reg 179 { d175(bb 2 insn 27) }
;;   eq_note reg 25 { }
;;   UD chains for insn luid 1 uid 29
;;      reg 144 { d154(bb 15 insn 95) d153(bb 4 insn 143) }
;;   UD chains for insn luid 3 uid 31
;;      reg 13 { d14(bb 0 insn -1) }
;;      reg 0 { d0(bb 5 insn 28) }
;;      reg 1 { d3(bb 5 insn 29) }
;;      reg 2 { d6(bb 5 insn 145) }
;;   UD chains for insn luid 4 uid 32
;;      reg 0 { d1(bb 5 insn 31) }
;;   UD chains for insn luid 5 uid 33
;;      reg 139 { d149(bb 3 insn 16) }
;;   UD chains for insn luid 6 uid 34
;;      reg 136 { d146(bb 5 insn 32) }
;;   UD chains for insn luid 7 uid 35
;;      reg 24 { d35(bb 5 insn 34) }

( 5 )->[6]->( 9 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u41(11){ d11(bb 0 insn -1) }u42(13){ d14(bb 0 insn -1) }u43(25){ d39(bb 0 insn -1) }u44(26){ d40(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 144 146 179 181
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146
;; lr  def 	 24 [cc] 137 143
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144 146 179 181
;; live  gen 	 24 [cc] 137 143
;; live  kill	
;; rd  in  	(42)
1, 5, 8, 10, 11, 13, 14, 35, 39, 40, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176
;; rd  gen 	(3)
34, 147, 152
;; rd  kill	(15)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 147, 152
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 141 143 144 146 179 181
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 143 144 146 179 181
;; rd  out 	(42)
1, 5, 8, 10, 11, 13, 14, 34, 39, 40, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d39(bb 0 insn -1) }
;;   reg 26 { d40(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 37
;;      reg 25 { d39(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 38
;;      reg 146 { d156(bb 2 insn 2) }
;;   UD chains for insn luid 2 uid 39
;;      reg 143 { d152(bb 6 insn 38) }
;;   UD chains for insn luid 3 uid 40
;;      reg 24 { d34(bb 6 insn 39) }

( 6 )->[7]->( 9 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u49(11){ d11(bb 0 insn -1) }u50(13){ d14(bb 0 insn -1) }u51(25){ d39(bb 0 insn -1) }u52(26){ d40(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 141 143 144 146 179 181
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 143 144 146 179 181
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(42)
1, 5, 8, 10, 11, 13, 14, 34, 39, 40, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176
;; rd  gen 	(1)
33
;; rd  kill	(13)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 141 143 144 146 179 181
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 143 144 146 179 181
;; rd  out 	(42)
1, 5, 8, 10, 11, 13, 14, 33, 39, 40, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d39(bb 0 insn -1) }
;;   reg 26 { d40(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 43
;;      reg 143 { d152(bb 6 insn 38) }
;;   UD chains for insn luid 1 uid 44
;;      reg 24 { d33(bb 7 insn 43) }

( 7 )->[8]->( 9 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u55(11){ d11(bb 0 insn -1) }u56(13){ d14(bb 0 insn -1) }u57(25){ d39(bb 0 insn -1) }u58(26){ d40(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 141 143 144 146 179 181
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 143 146 181
;; lr  def 	 24 [cc] 152 153 154 157
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 143 144 146 179 181
;; live  gen 	 152 153 154 157
;; live  kill	 24 [cc]
;; rd  in  	(42)
1, 5, 8, 10, 11, 13, 14, 33, 39, 40, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176
;; rd  gen 	(4)
161, 162, 163, 164
;; rd  kill	(17)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 161, 162, 163, 164
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 144 146 179 181
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144 146 179 181
;; rd  out 	(41)
1, 5, 8, 10, 11, 13, 14, 39, 40, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d39(bb 0 insn -1) }
;;   reg 26 { d40(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 51
;;      reg 143 { d152(bb 6 insn 38) }
;;   UD chains for insn luid 1 uid 52
;;      reg 152 { d161(bb 8 insn 51) }
;;   UD chains for insn luid 2 uid 53
;;      reg 146 { d156(bb 2 insn 2) }
;;      reg 153 { d162(bb 8 insn 52) }
;;   UD chains for insn luid 3 uid 134
;;      reg 137 { d147(bb 6 insn 37) }
;;      reg 146 { d156(bb 2 insn 2) }
;;      reg 152 { d161(bb 8 insn 51) }
;;   UD chains for insn luid 4 uid 135
;;      reg 143 { d152(bb 6 insn 38) }
;;      reg 154 { d163(bb 8 insn 53) }
;;   UD chains for insn luid 5 uid 57
;;      reg 143 { d152(bb 6 insn 38) }
;;      reg 181 { d176(bb 2 insn 56) }
;;   eq_note reg 143 { }
;;   UD chains for insn luid 6 uid 58
;;      reg 146 { d156(bb 2 insn 2) }
;;      reg 157 { d164(bb 8 insn 57) }

( 8 6 7 )->[9]->( 10 11 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u72(11){ d11(bb 0 insn -1) }u73(13){ d14(bb 0 insn -1) }u74(25){ d39(bb 0 insn -1) }u75(26){ d40(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 144 146 179 181
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 24 [cc] 138 158
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144 146 179 181
;; live  gen 	 24 [cc] 138 158
;; live  kill	
;; rd  in  	(43)
1, 5, 8, 10, 11, 13, 14, 33, 34, 39, 40, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176
;; rd  gen 	(3)
32, 148, 165
;; rd  kill	(15)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 148, 165
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 141 146 179 181
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 141 146 179 181
;; rd  out 	(42)
1, 5, 8, 10, 11, 13, 14, 32, 39, 40, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d39(bb 0 insn -1) }
;;   reg 26 { d40(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 61
;;      reg 25 { d39(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 62
;;      reg 144 { d154(bb 15 insn 95) d153(bb 4 insn 143) }
;;   UD chains for insn luid 2 uid 63
;;      reg 138 { d148(bb 9 insn 61) }
;;      reg 158 { d165(bb 9 insn 62) }
;;   UD chains for insn luid 3 uid 64
;;      reg 24 { d32(bb 9 insn 63) }

( 9 )->[10]->( 12 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u81(11){ d11(bb 0 insn -1) }u82(13){ d14(bb 0 insn -1) }u83(25){ d39(bb 0 insn -1) }u84(26){ d40(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 146 179 181
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 135
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 146 179 181
;; live  gen 	 135
;; live  kill	
;; rd  in  	(42)
1, 5, 8, 10, 11, 13, 14, 32, 39, 40, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176
;; rd  gen 	(1)
142
;; rd  kill	(4)
142, 143, 144, 145
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 141 146 179 181
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 141 146 179 181
;; rd  out 	(42)
1, 5, 8, 10, 11, 13, 14, 32, 39, 40, 142, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d39(bb 0 insn -1) }
;;   reg 26 { d40(bb 0 insn -1) }

( 9 )->[11]->( 12 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u85(11){ d11(bb 0 insn -1) }u86(13){ d14(bb 0 insn -1) }u87(25){ d39(bb 0 insn -1) }u88(26){ d40(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 141 146 179 181
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 135
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 141 146 179 181
;; live  gen 	 135
;; live  kill	
;; rd  in  	(42)
1, 5, 8, 10, 11, 13, 14, 32, 39, 40, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176
;; rd  gen 	(1)
144
;; rd  kill	(4)
142, 143, 144, 145
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 141 146 179 181
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 141 146 179 181
;; rd  out 	(42)
1, 5, 8, 10, 11, 13, 14, 32, 39, 40, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d39(bb 0 insn -1) }
;;   reg 26 { d40(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 71
;;      reg 138 { d148(bb 9 insn 61) }

( 11 2 5 10 )->[12]->( 15 13 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u94(11){ d11(bb 0 insn -1) }u95(13){ d14(bb 0 insn -1) }u96(25){ d39(bb 0 insn -1) }u97(26){ d40(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 141 146 179 181
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146
;; lr  def 	 24 [cc] 159 161
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 141 146 179 181
;; live  gen 	 24 [cc] 159 161
;; live  kill	
;; rd  in  	(48)
1, 2, 5, 8, 10, 11, 13, 14, 16, 32, 35, 39, 40, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176
;; rd  gen 	(3)
31, 167, 168
;; rd  kill	(16)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 166, 167, 168
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 141 146 159 179 181
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 141 146 159 179 181
;; rd  out 	(46)
1, 2, 5, 8, 10, 11, 13, 14, 16, 31, 39, 40, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d39(bb 0 insn -1) }
;;   reg 26 { d40(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 76
;;      reg 146 { d156(bb 2 insn 2) }
;;   UD chains for insn luid 2 uid 77
;;      reg 161 { d168(bb 12 insn 76) }
;;   UD chains for insn luid 3 uid 78
;;      reg 24 { d31(bb 12 insn 77) }

( 12 )->[13]->( 15 14 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u101(11){ d11(bb 0 insn -1) }u102(13){ d14(bb 0 insn -1) }u103(25){ d39(bb 0 insn -1) }u104(26){ d40(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 141 146 159 179 181
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146
;; lr  def 	 24 [cc] 163
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 141 146 159 179 181
;; live  gen 	 24 [cc] 163
;; live  kill	
;; rd  in  	(46)
1, 2, 5, 8, 10, 11, 13, 14, 16, 31, 39, 40, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176
;; rd  gen 	(2)
30, 169
;; rd  kill	(14)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 169
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 141 146 159 179 181
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 141 146 159 179 181
;; rd  out 	(46)
1, 2, 5, 8, 10, 11, 13, 14, 16, 30, 39, 40, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d39(bb 0 insn -1) }
;;   reg 26 { d40(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 82
;;      reg 146 { d156(bb 2 insn 2) }
;;   UD chains for insn luid 1 uid 83
;;      reg 163 { d169(bb 13 insn 82) }
;;   UD chains for insn luid 2 uid 84
;;      reg 24 { d30(bb 13 insn 83) }

( 13 )->[14]->( 15 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u108(11){ d11(bb 0 insn -1) }u109(13){ d14(bb 0 insn -1) }u110(25){ d39(bb 0 insn -1) }u111(26){ d40(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 141 146 179 181
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 159
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 141 146 179 181
;; live  gen 	 159
;; live  kill	
;; rd  in  	(46)
1, 2, 5, 8, 10, 11, 13, 14, 16, 30, 39, 40, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176
;; rd  gen 	(1)
166
;; rd  kill	(2)
166, 167
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 141 146 159 179 181
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 141 146 159 179 181
;; rd  out 	(46)
1, 2, 5, 8, 10, 11, 13, 14, 16, 30, 39, 40, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d39(bb 0 insn -1) }
;;   reg 26 { d40(bb 0 insn -1) }

( 12 13 14 )->[15]->( 16 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u112(11){ d11(bb 0 insn -1) }u113(13){ d14(bb 0 insn -1) }u114(25){ d39(bb 0 insn -1) }u115(26){ d40(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 141 146 159 179 181
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 159
;; lr  def 	 144 145
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 141 146 159 179 181
;; live  gen 	 144 145
;; live  kill	
;; rd  in  	(48)
1, 2, 5, 8, 10, 11, 13, 14, 16, 30, 31, 39, 40, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176
;; rd  gen 	(2)
154, 155
;; rd  kill	(3)
153, 154, 155
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 144 145 146 179 181
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 144 145 146 179 181
;; rd  out 	(47)
1, 2, 5, 8, 10, 11, 13, 14, 16, 30, 31, 39, 40, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d39(bb 0 insn -1) }
;;   reg 26 { d40(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 94
;;      reg 159 { d167(bb 12 insn 140) d166(bb 14 insn 141) }
;;   UD chains for insn luid 1 uid 95
;;      reg 135 { d145(bb 2 insn 8) d144(bb 11 insn 71) d143(bb 5 insn 33) d142(bb 10 insn 146) }

( 15 4 )->[16]->( 17 18 )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u118(11){ d11(bb 0 insn -1) }u119(13){ d14(bb 0 insn -1) }u120(25){ d39(bb 0 insn -1) }u121(26){ d40(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 144 145 146 179 181
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145
;; lr  def 	 24 [cc] 167 168 169 170
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 144 145 146 179 181
;; live  gen 	 24 [cc] 167 168 169 170
;; live  kill	
;; rd  in  	(49)
1, 2, 5, 8, 10, 11, 13, 14, 16, 30, 31, 37, 39, 40, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176
;; rd  gen 	(5)
28, 170, 171, 172, 173
;; rd  kill	(17)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 170, 171, 172, 173
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 144 145 146 179 181
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 144 145 146 179 181
;; rd  out 	(47)
1, 2, 5, 8, 10, 11, 13, 14, 16, 28, 39, 40, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d39(bb 0 insn -1) }
;;   reg 26 { d40(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 98
;;      reg 144 { d154(bb 15 insn 95) d153(bb 4 insn 143) }
;;   UD chains for insn luid 1 uid 99
;;      reg 24 { d29(bb 16 insn 98) }
;;   UD chains for insn luid 2 uid 101
;;      reg 145 { d155(bb 15 insn 94) }
;;      reg 167 { d170(bb 16 insn 99) }
;;   UD chains for insn luid 3 uid 102
;;      reg 168 { d171(bb 16 insn 101) }
;;   UD chains for insn luid 4 uid 103
;;      reg 169 { d172(bb 16 insn 102) }
;;   UD chains for insn luid 5 uid 104
;;      reg 170 { d173(bb 16 insn 103) }
;;   UD chains for insn luid 6 uid 105
;;      reg 24 { d28(bb 16 insn 104) }

( 16 )->[17]->( 3 18 )
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u130(11){ d11(bb 0 insn -1) }u131(13){ d14(bb 0 insn -1) }u132(25){ d39(bb 0 insn -1) }u133(26){ d40(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 144 145 146 179 181
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 24 [cc] 171
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 144 145 146 179 181
;; live  gen 	 24 [cc] 171
;; live  kill	
;; rd  in  	(47)
1, 2, 5, 8, 10, 11, 13, 14, 16, 28, 39, 40, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176
;; rd  gen 	(2)
27, 174
;; rd  kill	(14)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 174
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 144 145 146 171 179 181
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 144 145 146 171 179 181
;; rd  out 	(47)
1, 2, 5, 8, 10, 11, 13, 14, 16, 27, 39, 40, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d39(bb 0 insn -1) }
;;   reg 26 { d40(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 108
;;      reg 144 { d154(bb 15 insn 95) d153(bb 4 insn 143) }
;;   UD chains for insn luid 1 uid 109
;;      reg 171 { d174(bb 17 insn 108) }
;;   UD chains for insn luid 2 uid 110
;;      reg 24 { d27(bb 17 insn 109) }

( 17 16 )->[18]->( 1 )
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u137(11){ d11(bb 0 insn -1) }u138(13){ d14(bb 0 insn -1) }u139(25){ d39(bb 0 insn -1) }u140(26){ d40(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(48)
1, 2, 5, 8, 10, 11, 13, 14, 16, 27, 28, 39, 40, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(48)
1, 2, 5, 8, 10, 11, 13, 14, 16, 27, 28, 39, 40, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d39(bb 0 insn -1) }
;;   reg 26 { d40(bb 0 insn -1) }

( 18 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u141(11){ d11(bb 0 insn -1) }u142(13){ d14(bb 0 insn -1) }u143(14){ d16(bb 0 insn -1) }u144(25){ d39(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(48)
1, 2, 5, 8, 10, 11, 13, 14, 16, 27, 28, 39, 40, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(48)
1, 2, 5, 8, 10, 11, 13, 14, 16, 27, 28, 39, 40, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 14 { d16(bb 0 insn -1) }
;;   reg 25 { d39(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 151 to worklist
  Adding insn 19 to worklist
  Adding insn 153 to worklist
  Adding insn 35 to worklist
  Adding insn 31 to worklist
  Adding insn 40 to worklist
  Adding insn 44 to worklist
  Adding insn 58 to worklist
  Adding insn 135 to worklist
  Adding insn 134 to worklist
  Adding insn 64 to worklist
  Adding insn 155 to worklist
  Adding insn 78 to worklist
  Adding insn 84 to worklist
  Adding insn 105 to worklist
  Adding insn 110 to worklist
Finished finding needed instructions:
Processing use of (reg 24 cc) in insn 110:
  Adding insn 109 to worklist
Processing use of (reg 171) in insn 109:
  Adding insn 108 to worklist
Processing use of (reg 144 [ tail ]) in insn 108:
  Adding insn 95 to worklist
  Adding insn 143 to worklist
Processing use of (reg 171) in insn 143:
Processing use of (reg 135 [ tail.1206 ]) in insn 95:
  Adding insn 8 to worklist
  Adding insn 71 to worklist
  Adding insn 33 to worklist
  Adding insn 146 to worklist
Processing use of (reg 139 [ flag ]) in insn 33:
  Adding insn 16 to worklist
Processing use of (reg 144 [ tail ]) in insn 16:
Processing use of (reg 150 [ <variable>.addr_limit ]) in insn 16:
  Adding insn 15 to worklist
Processing use of (reg 141 [ D.26832 ]) in insn 15:
  Adding insn 11 to worklist
Processing use of (reg 149) in insn 11:
  Adding insn 10 to worklist
Processing use of (reg 13 sp) in insn 10:
Processing use of (reg 138 [ D.26833 ]) in insn 71:
  Adding insn 61 to worklist
Processing use of (reg 25 sfp) in insn 61:
Processing use of (reg 148 [ <variable>.uregs+44 ]) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 147 [ regs ]) in insn 7:
  Adding insn 3 to worklist
Processing use of (reg 1 r1) in insn 3:
Processing use of (reg 24 cc) in insn 105:
  Adding insn 104 to worklist
Processing use of (reg 170) in insn 104:
  Adding insn 103 to worklist
Processing use of (reg 169) in insn 103:
  Adding insn 102 to worklist
Processing use of (subreg (reg 168) 0) in insn 102:
  Adding insn 101 to worklist
Processing use of (reg 145 [ D.26206 ]) in insn 101:
  Adding insn 94 to worklist
Processing use of (reg 167) in insn 101:
  Adding insn 99 to worklist
Processing use of (reg 24 cc) in insn 99:
  Adding insn 98 to worklist
Processing use of (reg 144 [ tail ]) in insn 98:
Processing use of (reg 159) in insn 94:
  Adding insn 140 to worklist
  Adding insn 141 to worklist
Processing use of (reg 24 cc) in insn 84:
  Adding insn 83 to worklist
Processing use of (reg 163 [ <variable>.nr ]) in insn 83:
  Adding insn 82 to worklist
Processing use of (reg 146 [ entry ]) in insn 82:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 24 cc) in insn 78:
  Adding insn 77 to worklist
Processing use of (reg 161 [ <variable>.nr+4 ]) in insn 77:
  Adding insn 76 to worklist
Processing use of (reg 146 [ entry ]) in insn 76:
Processing use of (reg 24 cc) in insn 64:
  Adding insn 63 to worklist
Processing use of (reg 138 [ D.26833 ]) in insn 63:
Processing use of (reg 158) in insn 63:
  Adding insn 62 to worklist
Processing use of (reg 144 [ tail ]) in insn 62:
Processing use of (reg 137 [ D.26836 ]) in insn 134:
  Adding insn 37 to worklist
Processing use of (reg 146 [ entry ]) in insn 134:
Processing use of (reg 152) in insn 134:
  Adding insn 51 to worklist
Processing use of (subreg (reg 143 [ D.26828 ]) 0) in insn 51:
  Adding insn 38 to worklist
Processing use of (reg 146 [ entry ]) in insn 38:
Processing use of (reg 25 sfp) in insn 37:
Processing use of (subreg (reg 143 [ D.26828 ]) 4) in insn 135:
Processing use of (reg 154) in insn 135:
  Adding insn 53 to worklist
Processing use of (reg 146 [ entry ]) in insn 53:
Processing use of (reg 153) in insn 53:
  Adding insn 52 to worklist
Processing use of (reg 152) in insn 52:
Processing use of (reg 146 [ entry ]) in insn 58:
Processing use of (reg 157) in insn 58:
  Adding insn 57 to worklist
Processing use of (reg 143 [ D.26828 ]) in insn 57:
Processing use of (reg 181) in insn 57:
  Adding insn 56 to worklist
Processing use of (reg 24 cc) in insn 44:
  Adding insn 43 to worklist
Processing use of (subreg (reg 143 [ D.26828 ]) 0) in insn 43:
Processing use of (reg 24 cc) in insn 40:
  Adding insn 39 to worklist
Processing use of (subreg (reg 143 [ D.26828 ]) 4) in insn 39:
Processing use of (reg 13 sp) in insn 31:
Processing use of (reg 0 r0) in insn 31:
  Adding insn 28 to worklist
Processing use of (reg 1 r1) in insn 31:
  Adding insn 29 to worklist
Processing use of (reg 2 r2) in insn 31:
  Adding insn 145 to worklist
Processing use of (reg 144 [ tail ]) in insn 29:
Processing use of (reg 179) in insn 28:
  Adding insn 27 to worklist
Processing use of (reg 25 sfp) in insn 27:
Processing use of (reg 24 cc) in insn 35:
  Adding insn 34 to worklist
Processing use of (reg 136 [ D.26837 ]) in insn 34:
  Adding insn 32 to worklist
Processing use of (reg 0 r0) in insn 32:
Processing use of (reg 24 cc) in insn 19:
  Adding insn 18 to worklist
Processing use of (reg 139 [ flag ]) in insn 18:


perf_callchain_user

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={3d,3u} r1={3d,2u} r2={3d,1u} r3={2d} r11={1d,18u} r12={2d} r13={1d,20u,1d} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={13d,10u} r25={1d,21u,1d} r26={1d,17u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r135={4d,1u} r136={1d,1u} r137={1d,1u} r138={1d,2u} r139={1d,2u} r140={1d} r141={1d,1u} r143={1d,5u,1d} r144={2d,5u} r145={1d,1u} r146={1d,6u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r152={1d,2u} r153={1d,1u} r154={1d,1u} r157={1d,1u} r158={1d,1u} r159={2d,1u} r161={1d,1u} r163={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r171={1d,2u} r179={1d,1u} r181={1d,1u} 
;;    total ref usage 319{177d,139u,3e} in 63{62 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141
0[0,3] 1[3,3] 2[6,3] 3[9,2] 11[11,1] 12[12,2] 13[14,1] 14[15,2] 15[17,1] 16[18,1] 17[19,1] 18[20,1] 19[21,1] 20[22,1] 21[23,1] 22[24,1] 23[25,1] 24[26,13] 25[39,1] 26[40,1] 27[41,1] 28[42,1] 29[43,1] 30[44,1] 31[45,1] 32[46,1] 33[47,1] 34[48,1] 35[49,1] 36[50,1] 37[51,1] 38[52,1] 39[53,1] 40[54,1] 41[55,1] 42[56,1] 43[57,1] 44[58,1] 45[59,1] 46[60,1] 47[61,1] 48[62,1] 49[63,1] 50[64,1] 51[65,1] 52[66,1] 53[67,1] 54[68,1] 55[69,1] 56[70,1] 57[71,1] 58[72,1] 59[73,1] 60[74,1] 61[75,1] 62[76,1] 63[77,1] 64[78,1] 65[79,1] 66[80,1] 67[81,1] 68[82,1] 69[83,1] 70[84,1] 71[85,1] 72[86,1] 73[87,1] 74[88,1] 75[89,1] 76[90,1] 77[91,1] 78[92,1] 79[93,1] 80[94,1] 81[95,1] 82[96,1] 83[97,1] 84[98,1] 85[99,1] 86[100,1] 87[101,1] 88[102,1] 89[103,1] 90[104,1] 91[105,1] 92[106,1] 93[107,1] 94[108,1] 95[109,1] 96[110,1] 97[111,1] 98[112,1] 99[113,1] 100[114,1] 101[115,1] 102[116,1] 103[117,1] 104[118,1] 105[119,1] 106[120,1] 107[121,1] 108[122,1] 109[123,1] 110[124,1] 111[125,1] 112[126,1] 113[127,1] 114[128,1] 115[129,1] 116[130,1] 117[131,1] 118[132,1] 119[133,1] 120[134,1] 121[135,1] 122[136,1] 123[137,1] 124[138,1] 125[139,1] 126[140,1] 127[141,1] 135[142,4] 136[146,1] 137[147,1] 138[148,1] 139[149,1] 140[150,1] 141[151,1] 143[152,1] 144[153,2] 145[155,1] 146[156,1] 147[157,1] 148[158,1] 149[159,1] 150[160,1] 152[161,1] 153[162,1] 154[163,1] 157[164,1] 158[165,1] 159[166,2] 161[168,1] 163[169,1] 167[170,1] 168[171,1] 169[172,1] 170[173,1] 171[174,1] 179[175,1] 181[176,1] 
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 135 141 146 147 148 149 179 181
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 135 141 146 147 148 149 179 181
;; live  kill	
;; rd  in  	(10)
2, 5, 8, 10, 11, 13, 14, 16, 39, 40
;; rd  gen 	(8)
145, 151, 156, 157, 158, 159, 175, 176
;; rd  kill	(11)
142, 143, 144, 145, 151, 156, 157, 158, 159, 175, 176

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 5 3 2 arch/arm/kernel/perf_event.c:746 (set (reg/v/f:SI 146 [ entry ])
        (reg:SI 0 r0 [ entry ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ entry ])
        (nil)))

(insn 3 2 4 2 arch/arm/kernel/perf_event.c:746 (set (reg/v/f:SI 147 [ regs ])
        (reg:SI 1 r1 [ regs ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ regs ])
        (nil)))

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 8 2 arch/arm/kernel/perf_event.c:750 (set (reg:SI 148 [ <variable>.uregs+44 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 147 [ regs ])
                (const_int 44 [0x2c])) [0 <variable>.uregs+44 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 147 [ regs ])
        (nil)))

(insn 8 7 10 2 arch/arm/kernel/perf_event.c:750 (set (reg/v/f:SI 135 [ tail.1206 ])
        (plus:SI (reg:SI 148 [ <variable>.uregs+44 ])
            (const_int -12 [0xfffffffffffffff4]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 148 [ <variable>.uregs+44 ])
        (nil)))

(insn 10 8 11 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 149)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 11 10 27 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 141 [ D.26832 ])
        (and:SI (reg:SI 149)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 149)
        (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
                (const_int -8192 [0xffffffffffffe000]))
            (nil))))

(insn 27 11 56 2 arch/arm/kernel/perf_event.c:729 (set (reg/f:SI 179)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -12 [0xfffffffffffffff4]))) 4 {*arm_addsi3} (nil))

(insn 56 27 151 2 include/linux/perf_event.h:1097 (set (reg:DI 181)
        (const_int 1 [0x1])) 163 {*arm_movdi} (nil))

(jump_insn 151 56 152 2 arch/arm/kernel/perf_event.c:752 (set (pc)
        (label_ref 150)) -1 (nil))
;; End of basic block 2 -> ( 12)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 141 146 179 181
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 141 146 179 181
;; rd  out 	(18)
2, 5, 8, 10, 11, 13, 14, 16, 39, 40, 145, 151, 156, 157, 158, 159, 175, 176


;; Succ edge  12 [100.0%] 

(barrier 152 151 107)

;; Start of basic block ( 17) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u12(11){ }u13(13){ }u14(25){ }u15(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 144 145 146 171 179 181
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144
;; lr  def 	 24 [cc] 139 140 150
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 144 145 146 171 179 181
;; live  gen 	 24 [cc] 139 140 150
;; live  kill	 24 [cc]
;; rd  in  	(47)
1, 2, 5, 8, 10, 11, 13, 14, 16, 27, 39, 40, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176
;; rd  gen 	(4)
37, 149, 150, 160
;; rd  kill	(16)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 149, 150, 160

;; Pred edge  17 [95.5%] 
(code_label 107 152 14 3 288 "" [1 uses])

(note 14 107 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 15 14 16 3 arch/arm/kernel/perf_event.c:727 (set (reg:SI 150 [ <variable>.addr_limit ])
        (mem/s/j:SI (plus:SI (reg/f:SI 141 [ D.26832 ])
                (const_int 8 [0x8])) [0 <variable>.addr_limit+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 16 15 18 3 arch/arm/kernel/perf_event.c:727 (parallel [
            (set (reg/v:SI 139 [ flag ])
                (asm_operands:SI ("adds %1, %2, %3; sbcccs %1, %1, %0; movcc %0, #0") ("=&r") 0 [
                        (reg/v/f:SI 144 [ tail ])
                        (const_int 12 [0xc])
                        (reg:SI 150 [ <variable>.addr_limit ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("Ir") 0)
                        (asm_input:SI ("0") 0)
                    ] 8978803))
            (set (reg/v:SI 140 [ roksum ])
                (asm_operands:SI ("adds %1, %2, %3; sbcccs %1, %1, %0; movcc %0, #0") ("=&r") 1 [
                        (reg/v/f:SI 144 [ tail ])
                        (const_int 12 [0xc])
                        (reg:SI 150 [ <variable>.addr_limit ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("Ir") 0)
                        (asm_input:SI ("0") 0)
                    ] 8978803))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg:SI 150 [ <variable>.addr_limit ])
        (expr_list:REG_UNUSED (reg/v:SI 140 [ roksum ])
            (expr_list:REG_UNUSED (reg:QI 24 cc)
                (nil)))))

(insn 18 16 19 3 arch/arm/kernel/perf_event.c:727 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 139 [ flag ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 19 18 20 3 arch/arm/kernel/perf_event.c:727 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 24)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
            (nil))))
;; End of basic block 3 -> ( 4 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 141 144 145 146 171 179 181
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 141 144 145 146 171 179 181
;; rd  out 	(47)
1, 2, 5, 8, 10, 11, 13, 14, 16, 37, 39, 40, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176


;; Succ edge  4 [71.0%]  (fallthru)
;; Succ edge  5 [29.0%]  (loop_exit)

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u21(11){ }u22(13){ }u23(25){ }u24(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 145 146 171 179 181
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171
;; lr  def 	 144
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 145 146 171 179 181
;; live  gen 	 144
;; live  kill	
;; rd  in  	(47)
1, 2, 5, 8, 10, 11, 13, 14, 16, 37, 39, 40, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176
;; rd  gen 	(1)
153
;; rd  kill	(2)
153, 154

;; Pred edge  3 [71.0%]  (fallthru)
(note 20 19 143 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 143 20 153 4 arch/arm/kernel/perf_event.c:728 (set (reg/v/f:SI 144 [ tail ])
        (reg:SI 171)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 171)
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(jump_insn 153 143 154 4 (set (pc)
        (label_ref 96)) -1 (nil))
;; End of basic block 4 -> ( 16)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 144 145 146 179 181
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 144 145 146 179 181
;; rd  out 	(46)
1, 2, 5, 8, 10, 11, 13, 14, 16, 37, 39, 40, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176


;; Succ edge  16 [100.0%]  (dfs_back)

(barrier 154 153 24)

;; Start of basic block ( 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u26(11){ }u27(13){ }u28(25){ }u29(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 144 146 179 181
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 144 179
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 135 136
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 144 146 179 181
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 135 136
;; live  kill	 14 [lr]
;; rd  in  	(47)
1, 2, 5, 8, 10, 11, 13, 14, 16, 37, 39, 40, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176
;; rd  gen 	(4)
1, 35, 143, 146
;; rd  kill	(23)
0, 1, 2, 15, 16, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 142, 143, 144, 145, 146

;; Pred edge  3 [29.0%]  (loop_exit)
(code_label 24 154 25 5 280 "" [1 uses])

(note 25 24 28 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 28 25 29 5 arch/arm/kernel/perf_event.c:729 (set (reg:SI 0 r0)
        (reg/f:SI 179)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -12 [0xfffffffffffffff4]))
        (nil)))

(insn 29 28 145 5 arch/arm/kernel/perf_event.c:729 (set (reg:SI 1 r1)
        (reg/v/f:SI 144 [ tail ])) 167 {*arm_movsi_insn} (nil))

(insn 145 29 31 5 arch/arm/kernel/perf_event.c:729 (set (reg:SI 2 r2)
        (const_int 12 [0xc])) 167 {*arm_movsi_insn} (nil))

(call_insn 31 145 32 5 arch/arm/kernel/perf_event.c:729 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__copy_from_user") [flags 0x41] <function_decl 0x11466780 __copy_from_user>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 32 31 33 5 arch/arm/kernel/perf_event.c:729 (set (reg:SI 136 [ D.26837 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 33 32 34 5 arch/arm/kernel/perf_event.c:730 (set (reg/v/f:SI 135 [ tail.1206 ])
        (reg/v:SI 139 [ flag ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 139 [ flag ])
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn 34 33 35 5 arch/arm/kernel/perf_event.c:729 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 136 [ D.26837 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 136 [ D.26837 ])
        (nil)))

(jump_insn 35 34 36 5 arch/arm/kernel/perf_event.c:729 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 150)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 5 -> ( 12 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 141 144 146 179 181
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 141 144 146 179 181
;; rd  out 	(42)
1, 5, 8, 10, 11, 13, 14, 35, 39, 40, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176


;; Succ edge  12 [50.0%]  (dfs_back)
;; Succ edge  6 [50.0%]  (fallthru)

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u41(11){ }u42(13){ }u43(25){ }u44(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 144 146 179 181
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146
;; lr  def 	 24 [cc] 137 143
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144 146 179 181
;; live  gen 	 24 [cc] 137 143
;; live  kill	
;; rd  in  	(42)
1, 5, 8, 10, 11, 13, 14, 35, 39, 40, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176
;; rd  gen 	(3)
34, 147, 152
;; rd  kill	(15)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 147, 152

;; Pred edge  5 [50.0%]  (fallthru)
(note 36 35 37 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 37 36 38 6 arch/arm/kernel/perf_event.c:732 (set (reg:SI 137 [ D.26836 ])
        (mem/s/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0+8 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 38 37 39 6 include/linux/perf_event.h:1096 (set (reg:DI 143 [ D.26828 ])
        (mem/s/j:DI (reg/v/f:SI 146 [ entry ]) [0 <variable>.nr+0 S8 A64])) 163 {*arm_movdi} (nil))

(insn 39 38 40 6 include/linux/perf_event.h:1096 (set (reg:CC 24 cc)
        (compare:CC (subreg:SI (reg:DI 143 [ D.26828 ]) 4)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 40 39 119 6 include/linux/perf_event.h:1096 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 59)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 6 -> ( 9 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 141 143 144 146 179 181
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 143 144 146 179 181
;; rd  out 	(42)
1, 5, 8, 10, 11, 13, 14, 34, 39, 40, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176


;; Succ edge  9 [50.0%] 
;; Succ edge  7 [50.0%]  (fallthru)

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u49(11){ }u50(13){ }u51(25){ }u52(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 141 143 144 146 179 181
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 143 144 146 179 181
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(42)
1, 5, 8, 10, 11, 13, 14, 34, 39, 40, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176
;; rd  gen 	(1)
33
;; rd  kill	(13)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38

;; Pred edge  6 [50.0%]  (fallthru)
(note 119 40 43 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 43 119 44 7 include/linux/perf_event.h:1096 (set (reg:CC 24 cc)
        (compare:CC (subreg:SI (reg:DI 143 [ D.26828 ]) 0)
            (const_int 254 [0xfe]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 44 43 120 7 include/linux/perf_event.h:1096 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 59)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 7 -> ( 9 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 141 143 144 146 179 181
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 143 144 146 179 181
;; rd  out 	(42)
1, 5, 8, 10, 11, 13, 14, 33, 39, 40, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176


;; Succ edge  9 [50.0%] 
;; Succ edge  8 [50.0%]  (fallthru)

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u55(11){ }u56(13){ }u57(25){ }u58(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 141 143 144 146 179 181
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 143 146 181
;; lr  def 	 24 [cc] 152 153 154 157
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 143 144 146 179 181
;; live  gen 	 152 153 154 157
;; live  kill	 24 [cc]
;; rd  in  	(42)
1, 5, 8, 10, 11, 13, 14, 33, 39, 40, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176
;; rd  gen 	(4)
161, 162, 163, 164
;; rd  kill	(17)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 161, 162, 163, 164

;; Pred edge  7 [50.0%]  (fallthru)
(note 120 44 51 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 51 120 52 8 include/linux/perf_event.h:1097 (set (reg:SI 152)
        (plus:SI (subreg:SI (reg:DI 143 [ D.26828 ]) 0)
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 52 51 53 8 include/linux/perf_event.h:1097 (set (reg:SI 153)
        (ashift:SI (reg:SI 152)
            (const_int 3 [0x3]))) 117 {*arm_shiftsi3} (nil))

(insn 53 52 134 8 include/linux/perf_event.h:1097 (set (reg/f:SI 154)
        (plus:SI (reg/v/f:SI 146 [ entry ])
            (reg:SI 153))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 153)
        (nil)))

(insn 134 53 135 8 include/linux/perf_event.h:1097 (set (mem/s/j:SI (plus:SI (mult:SI (reg:SI 152)
                    (const_int 8 [0x8]))
                (reg/v/f:SI 146 [ entry ])) [0 <variable>.ip S4 A64])
        (reg:SI 137 [ D.26836 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 152)
        (expr_list:REG_DEAD (reg:SI 137 [ D.26836 ])
            (nil))))

(insn 135 134 57 8 include/linux/perf_event.h:1097 (set (mem/s/j:SI (plus:SI (reg/f:SI 154)
                (const_int 4 [0x4])) [0 <variable>.ip S4 A32])
        (subreg:SI (reg:DI 143 [ D.26828 ]) 4)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 154)
        (nil)))

(insn 57 135 58 8 include/linux/perf_event.h:1097 (parallel [
            (set (reg:DI 157)
                (plus:DI (reg:DI 143 [ D.26828 ])
                    (reg:DI 181)))
            (clobber (reg:CC 24 cc))
        ]) 1 {*arm_adddi3} (expr_list:REG_DEAD (reg:DI 143 [ D.26828 ])
        (expr_list:REG_UNUSED (reg:CC 24 cc)
            (expr_list:REG_EQUAL (plus:DI (reg:DI 143 [ D.26828 ])
                    (const_int 1 [0x1]))
                (nil)))))

(insn 58 57 59 8 include/linux/perf_event.h:1097 (set (mem/s/j:DI (reg/v/f:SI 146 [ entry ]) [0 <variable>.nr+0 S8 A64])
        (reg:DI 157)) 163 {*arm_movdi} (expr_list:REG_DEAD (reg:DI 157)
        (nil)))
;; End of basic block 8 -> ( 9)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 144 146 179 181
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144 146 179 181
;; rd  out 	(41)
1, 5, 8, 10, 11, 13, 14, 39, 40, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176


;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 8 6 7) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u72(11){ }u73(13){ }u74(25){ }u75(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 144 146 179 181
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 24 [cc] 138 158
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144 146 179 181
;; live  gen 	 24 [cc] 138 158
;; live  kill	
;; rd  in  	(43)
1, 5, 8, 10, 11, 13, 14, 33, 34, 39, 40, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176
;; rd  gen 	(3)
32, 148, 165
;; rd  kill	(15)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 148, 165

;; Pred edge  8 [100.0%]  (fallthru)
;; Pred edge  6 [50.0%] 
;; Pred edge  7 [50.0%] 
(code_label 59 58 60 9 282 "" [2 uses])

(note 60 59 61 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 61 60 62 9 arch/arm/kernel/perf_event.c:738 (set (reg/f:SI 138 [ D.26833 ])
        (mem/s/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -12 [0xfffffffffffffff4])) [0+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 62 61 63 9 arch/arm/kernel/perf_event.c:738 (set (reg/f:SI 158)
        (plus:SI (reg/v/f:SI 144 [ tail ])
            (const_int 12 [0xc]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/v/f:SI 144 [ tail ])
        (nil)))

(insn 63 62 64 9 arch/arm/kernel/perf_event.c:738 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 138 [ D.26833 ])
            (reg/f:SI 158))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/f:SI 158)
        (nil)))

(jump_insn 64 63 65 9 arch/arm/kernel/perf_event.c:738 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 69)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 9 -> ( 10 11)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 141 146 179 181
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 141 146 179 181
;; rd  out 	(42)
1, 5, 8, 10, 11, 13, 14, 32, 39, 40, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176


;; Succ edge  10 [50.0%]  (fallthru)
;; Succ edge  11 [50.0%] 

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u81(11){ }u82(13){ }u83(25){ }u84(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 146 179 181
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 135
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 146 179 181
;; live  gen 	 135
;; live  kill	
;; rd  in  	(42)
1, 5, 8, 10, 11, 13, 14, 32, 39, 40, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176
;; rd  gen 	(1)
142
;; rd  kill	(4)
142, 143, 144, 145

;; Pred edge  9 [50.0%]  (fallthru)
(note 65 64 146 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 146 65 155 10 arch/arm/kernel/perf_event.c:739 (set (reg/v/f:SI 135 [ tail.1206 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(jump_insn 155 146 156 10 (set (pc)
        (label_ref 150)) -1 (nil))
;; End of basic block 10 -> ( 12)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 141 146 179 181
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 141 146 179 181
;; rd  out 	(42)
1, 5, 8, 10, 11, 13, 14, 32, 39, 40, 142, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176


;; Succ edge  12 [100.0%]  (dfs_back)

(barrier 156 155 69)

;; Start of basic block ( 9) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u85(11){ }u86(13){ }u87(25){ }u88(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 141 146 179 181
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 135
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 141 146 179 181
;; live  gen 	 135
;; live  kill	
;; rd  in  	(42)
1, 5, 8, 10, 11, 13, 14, 32, 39, 40, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176
;; rd  gen 	(1)
144
;; rd  kill	(4)
142, 143, 144, 145

;; Pred edge  9 [50.0%] 
(code_label 69 156 70 11 284 "" [1 uses])

(note 70 69 71 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 71 70 150 11 arch/arm/kernel/perf_event.c:741 (set (reg/v/f:SI 135 [ tail.1206 ])
        (plus:SI (reg/f:SI 138 [ D.26833 ])
            (const_int -12 [0xfffffffffffffff4]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 138 [ D.26833 ])
        (nil)))
;; End of basic block 11 -> ( 12)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 141 146 179 181
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 141 146 179 181
;; rd  out 	(42)
1, 5, 8, 10, 11, 13, 14, 32, 39, 40, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176


;; Succ edge  12 [100.0%]  (fallthru)

;; Start of basic block ( 11 2 5 10) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u94(11){ }u95(13){ }u96(25){ }u97(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 141 146 179 181
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146
;; lr  def 	 24 [cc] 159 161
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 141 146 179 181
;; live  gen 	 24 [cc] 159 161
;; live  kill	
;; rd  in  	(48)
1, 2, 5, 8, 10, 11, 13, 14, 16, 32, 35, 39, 40, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176
;; rd  gen 	(3)
31, 167, 168
;; rd  kill	(16)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 166, 167, 168

;; Pred edge  11 [100.0%]  (fallthru)
;; Pred edge  2 [100.0%] 
;; Pred edge  5 [50.0%]  (dfs_back)
;; Pred edge  10 [100.0%]  (dfs_back)
(code_label 150 71 149 12 293 "" [3 uses])

(note 149 150 140 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 140 149 76 12 arch/arm/kernel/perf_event.c:752 discrim 1 (set (reg:QI 159)
        (const_int 0 [0x0])) 178 {*arm_movqi_insn} (nil))

(insn 76 140 77 12 arch/arm/kernel/perf_event.c:752 discrim 1 (set (reg:SI 161 [ <variable>.nr+4 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 146 [ entry ])
                (const_int 4 [0x4])) [0 <variable>.nr+4 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 77 76 78 12 arch/arm/kernel/perf_event.c:752 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 161 [ <variable>.nr+4 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 161 [ <variable>.nr+4 ])
        (nil)))

(jump_insn 78 77 123 12 arch/arm/kernel/perf_event.c:752 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 93)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 12 -> ( 15 13)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 141 146 159 179 181
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 141 146 159 179 181
;; rd  out 	(46)
1, 2, 5, 8, 10, 11, 13, 14, 16, 31, 39, 40, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176


;; Succ edge  15 [50.0%] 
;; Succ edge  13 [50.0%]  (fallthru)

;; Start of basic block ( 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u101(11){ }u102(13){ }u103(25){ }u104(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 141 146 159 179 181
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146
;; lr  def 	 24 [cc] 163
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 141 146 159 179 181
;; live  gen 	 24 [cc] 163
;; live  kill	
;; rd  in  	(46)
1, 2, 5, 8, 10, 11, 13, 14, 16, 31, 39, 40, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176
;; rd  gen 	(2)
30, 169
;; rd  kill	(14)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 169

;; Pred edge  12 [50.0%]  (fallthru)
(note 123 78 82 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 82 123 83 13 arch/arm/kernel/perf_event.c:752 discrim 1 (set (reg:SI 163 [ <variable>.nr ])
        (mem/s/j:SI (reg/v/f:SI 146 [ entry ]) [0 <variable>.nr+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 83 82 84 13 arch/arm/kernel/perf_event.c:752 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 163 [ <variable>.nr ])
            (const_int 254 [0xfe]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 163 [ <variable>.nr ])
        (nil)))

(jump_insn 84 83 127 13 arch/arm/kernel/perf_event.c:752 discrim 1 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 93)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 13 -> ( 15 14)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 141 146 159 179 181
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 141 146 159 179 181
;; rd  out 	(46)
1, 2, 5, 8, 10, 11, 13, 14, 16, 30, 39, 40, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176


;; Succ edge  15 [50.0%] 
;; Succ edge  14 [50.0%]  (fallthru)

;; Start of basic block ( 13) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u108(11){ }u109(13){ }u110(25){ }u111(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 141 146 179 181
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 159
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 141 146 179 181
;; live  gen 	 159
;; live  kill	
;; rd  in  	(46)
1, 2, 5, 8, 10, 11, 13, 14, 16, 30, 39, 40, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176
;; rd  gen 	(1)
166
;; rd  kill	(2)
166, 167

;; Pred edge  13 [50.0%]  (fallthru)
(note 127 84 141 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 141 127 93 14 arch/arm/kernel/perf_event.c:752 discrim 1 (set (reg:QI 159)
        (const_int 1 [0x1])) 178 {*arm_movqi_insn} (nil))
;; End of basic block 14 -> ( 15)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 141 146 159 179 181
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 141 146 159 179 181
;; rd  out 	(46)
1, 2, 5, 8, 10, 11, 13, 14, 16, 30, 39, 40, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176


;; Succ edge  15 [100.0%]  (fallthru)

;; Start of basic block ( 12 13 14) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u112(11){ }u113(13){ }u114(25){ }u115(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 141 146 159 179 181
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 159
;; lr  def 	 144 145
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 141 146 159 179 181
;; live  gen 	 144 145
;; live  kill	
;; rd  in  	(48)
1, 2, 5, 8, 10, 11, 13, 14, 16, 30, 31, 39, 40, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176
;; rd  gen 	(2)
154, 155
;; rd  kill	(3)
153, 154, 155

;; Pred edge  12 [50.0%] 
;; Pred edge  13 [50.0%] 
;; Pred edge  14 [100.0%]  (fallthru)
(code_label 93 141 128 15 285 "" [2 uses])

(note 128 93 94 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 94 128 95 15 arch/arm/kernel/perf_event.c:752 discrim 1 (set (reg:SI 145 [ D.26206 ])
        (zero_extend:SI (reg:QI 159))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 159)
        (nil)))

(insn 95 94 96 15 arch/arm/kernel/perf_event.c:752 discrim 1 (set (reg/v/f:SI 144 [ tail ])
        (reg/v/f:SI 135 [ tail.1206 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 135 [ tail.1206 ])
        (nil)))
;; End of basic block 15 -> ( 16)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 144 145 146 179 181
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 144 145 146 179 181
;; rd  out 	(47)
1, 2, 5, 8, 10, 11, 13, 14, 16, 30, 31, 39, 40, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176


;; Succ edge  16 [100.0%]  (fallthru)

;; Start of basic block ( 15 4) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u118(11){ }u119(13){ }u120(25){ }u121(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 144 145 146 179 181
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145
;; lr  def 	 24 [cc] 167 168 169 170
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 144 145 146 179 181
;; live  gen 	 24 [cc] 167 168 169 170
;; live  kill	
;; rd  in  	(49)
1, 2, 5, 8, 10, 11, 13, 14, 16, 30, 31, 37, 39, 40, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176
;; rd  gen 	(5)
28, 170, 171, 172, 173
;; rd  kill	(17)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 170, 171, 172, 173

;; Pred edge  15 [100.0%]  (fallthru)
;; Pred edge  4 [100.0%]  (dfs_back)
(code_label 96 95 97 16 281 "" [1 uses])

(note 97 96 98 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 98 97 99 16 arch/arm/kernel/perf_event.c:753 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 144 [ tail ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn 99 98 101 16 arch/arm/kernel/perf_event.c:753 (set (reg:SI 167)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 101 99 102 16 arch/arm/kernel/perf_event.c:753 (set (reg:SI 168)
        (and:SI (reg:SI 145 [ D.26206 ])
            (reg:SI 167))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 167)
        (nil)))

(insn 102 101 103 16 arch/arm/kernel/perf_event.c:753 (set (reg:QI 169)
        (subreg:QI (reg:SI 168) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 168)
        (nil)))

(insn 103 102 104 16 arch/arm/kernel/perf_event.c:753 (set (reg:SI 170)
        (zero_extend:SI (reg:QI 169))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 169)
        (nil)))

(insn 104 103 105 16 arch/arm/kernel/perf_event.c:753 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 170)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 170)
        (nil)))

(jump_insn 105 104 106 16 arch/arm/kernel/perf_event.c:753 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 116)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 450 [0x1c2])
            (nil))))
;; End of basic block 16 -> ( 17 18)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 144 145 146 179 181
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 144 145 146 179 181
;; rd  out 	(47)
1, 2, 5, 8, 10, 11, 13, 14, 16, 28, 39, 40, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176


;; Succ edge  17 [95.5%]  (fallthru)
;; Succ edge  18 [4.5%]  (loop_exit)

;; Start of basic block ( 16) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u130(11){ }u131(13){ }u132(25){ }u133(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 144 145 146 179 181
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 24 [cc] 171
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 144 145 146 179 181
;; live  gen 	 24 [cc] 171
;; live  kill	
;; rd  in  	(47)
1, 2, 5, 8, 10, 11, 13, 14, 16, 28, 39, 40, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176
;; rd  gen 	(2)
27, 174
;; rd  kill	(14)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 174

;; Pred edge  16 [95.5%]  (fallthru)
(note 106 105 108 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 108 106 109 17 arch/arm/kernel/perf_event.c:753 (set (reg:SI 171)
        (and:SI (reg/v/f:SI 144 [ tail ])
            (const_int 3 [0x3]))) 67 {*arm_andsi3_insn} (nil))

(insn 109 108 110 17 arch/arm/kernel/perf_event.c:753 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 171)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 110 109 116 17 arch/arm/kernel/perf_event.c:753 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 107)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9550 [0x254e])
            (nil))))
;; End of basic block 17 -> ( 3 18)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 144 145 146 171 179 181
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 144 145 146 171 179 181
;; rd  out 	(47)
1, 2, 5, 8, 10, 11, 13, 14, 16, 27, 39, 40, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176


;; Succ edge  3 [95.5%] 
;; Succ edge  18 [4.5%]  (fallthru,loop_exit)

;; Start of basic block ( 17 16) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u137(11){ }u138(13){ }u139(25){ }u140(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(48)
1, 2, 5, 8, 10, 11, 13, 14, 16, 27, 28, 39, 40, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  17 [4.5%]  (fallthru,loop_exit)
;; Pred edge  16 [4.5%]  (loop_exit)
(code_label 116 110 130 18 289 "" [1 uses])

(note 130 116 0 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 18 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(48)
1, 2, 5, 8, 10, 11, 13, 14, 16, 27, 28, 39, 40, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns
