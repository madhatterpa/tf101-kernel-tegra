
;; Function readonly (readonly)[0:2703] (unlikely executed)


;; Generating RTL for gimple basic block 2

;; if (*str != 0)

(insn 6 5 7 init/do_mounts.c:44 (set (reg:SI 136)
        (zero_extend:SI (mem:QI (reg/v/f:SI 135 [ str ]) [0 S1 A8]))) -1 (nil))

(insn 7 6 8 init/do_mounts.c:44 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 136)
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 8 7 0 init/do_mounts.c:44 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
        (nil)))

;; Generating RTL for gimple basic block 3

;; D.52645 = 0;

(insn 10 9 0 init/do_mounts.c:45 (set (reg:SI 133 [ D.52645 ])
        (const_int 0 [0x0])) -1 (nil))

;; Generating RTL for gimple basic block 4

;; 

(code_label 13 12 14 2 "" [0 uses])

(note 14 13 0 NOTE_INSN_BASIC_BLOCK)

;; root_mountflags = [bit_ior_expr] root_mountflags | 1;

(insn 15 14 16 init/do_mounts.c:46 (set (reg/f:SI 137)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) -1 (nil))

(insn 16 15 17 init/do_mounts.c:46 (set (reg/f:SI 138)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) -1 (nil))

(insn 17 16 18 init/do_mounts.c:46 (set (reg:SI 139)
        (mem/c/i:SI (reg/f:SI 138) [0 root_mountflags+0 S4 A32])) -1 (nil))

(insn 18 17 19 init/do_mounts.c:46 (set (reg:SI 140)
        (ior:SI (reg:SI 139)
            (const_int 1 [0x1]))) -1 (nil))

(insn 19 18 0 init/do_mounts.c:46 (set (mem/c/i:SI (reg/f:SI 137) [0 root_mountflags+0 S4 A32])
        (reg:SI 140)) -1 (nil))

;; D.52645 = 1;

(insn 20 19 0 init/do_mounts.c:47 (set (reg:SI 133 [ D.52645 ])
        (const_int 1 [0x1])) -1 (nil))

;; Generating RTL for gimple basic block 5

;; 

(code_label 21 20 22 3 "" [0 uses])

(note 22 21 0 NOTE_INSN_BASIC_BLOCK)

;; return D.52645;

(insn 23 22 24 init/do_mounts.c:48 (set (reg:SI 134 [ <result> ])
        (reg:SI 133 [ D.52645 ])) -1 (nil))

(jump_insn 24 23 25 init/do_mounts.c:48 (set (pc)
        (label_ref 0)) -1 (nil))

(barrier 25 24 0)


;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 init/do_mounts.c:43 (set (reg/v/f:SI 135 [ str ])
        (reg:SI 0 r0 [ str ])) -1 (nil))

(note 3 2 5 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 3)

;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [100.0%]  (fallthru)
(note 5 3 6 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 6 5 7 3 init/do_mounts.c:44 (set (reg:SI 136)
        (zero_extend:SI (mem:QI (reg/v/f:SI 135 [ str ]) [0 S1 A8]))) -1 (nil))

(insn 7 6 8 3 init/do_mounts.c:44 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 136)
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 8 7 9 3 init/do_mounts.c:44 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 13)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
        (nil)))
;; End of basic block 3 -> ( 4 5)

;; Succ edge  4 [39.0%]  (fallthru)
;; Succ edge  5 [61.0%] 

;; Start of basic block ( 3) -> 4
;; Pred edge  3 [39.0%]  (fallthru)
(note 9 8 10 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 10 9 11 4 init/do_mounts.c:45 (set (reg:SI 133 [ D.52645 ])
        (const_int 0 [0x0])) -1 (nil))

(jump_insn 11 10 12 4 init/do_mounts.c:45 (set (pc)
        (label_ref 21)) -1 (nil))
;; End of basic block 4 -> ( 6)

;; Succ edge  6 [100.0%] 

(barrier 12 11 13)

;; Start of basic block ( 3) -> 5
;; Pred edge  3 [61.0%] 
(code_label 13 12 14 5 2 "" [1 uses])

(note 14 13 15 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 15 14 16 5 init/do_mounts.c:46 (set (reg/f:SI 137)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) -1 (nil))

(insn 16 15 17 5 init/do_mounts.c:46 (set (reg/f:SI 138)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) -1 (nil))

(insn 17 16 18 5 init/do_mounts.c:46 (set (reg:SI 139)
        (mem/c/i:SI (reg/f:SI 138) [0 root_mountflags+0 S4 A32])) -1 (nil))

(insn 18 17 19 5 init/do_mounts.c:46 (set (reg:SI 140)
        (ior:SI (reg:SI 139)
            (const_int 1 [0x1]))) -1 (nil))

(insn 19 18 20 5 init/do_mounts.c:46 (set (mem/c/i:SI (reg/f:SI 137) [0 root_mountflags+0 S4 A32])
        (reg:SI 140)) -1 (nil))

(insn 20 19 21 5 init/do_mounts.c:47 (set (reg:SI 133 [ D.52645 ])
        (const_int 1 [0x1])) -1 (nil))
;; End of basic block 5 -> ( 6)

;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 4 5) -> 6
;; Pred edge  4 [100.0%] 
;; Pred edge  5 [100.0%]  (fallthru)
(code_label 21 20 22 6 3 "" [1 uses])

(note 22 21 23 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 23 22 24 6 init/do_mounts.c:48 (set (reg:SI 134 [ <result> ])
        (reg:SI 133 [ D.52645 ])) -1 (nil))

(jump_insn 24 23 25 6 init/do_mounts.c:48 (set (pc)
        (label_ref 26)) -1 (nil))
;; End of basic block 6 -> ( 8)

;; Succ edge  8 [100.0%] 

(barrier 25 24 34)

;; Start of basic block () -> 7
(note 34 25 28 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 28 34 29 7 init/do_mounts.c:48 (clobber (reg/i:SI 0 r0)) -1 (nil))

(insn 29 28 30 7 init/do_mounts.c:48 (clobber (reg:SI 134 [ <result> ])) -1 (nil))

(jump_insn 30 29 31 7 init/do_mounts.c:48 (set (pc)
        (label_ref 32)) -1 (nil))
;; End of basic block 7 -> ( 9)

;; Succ edge  9 [100.0%] 

(barrier 31 30 26)

;; Start of basic block ( 6) -> 8
;; Pred edge  6 [100.0%] 
(code_label 26 31 35 8 1 "" [1 uses])

(note 35 26 27 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 27 35 32 8 init/do_mounts.c:48 (set (reg/i:SI 0 r0)
        (reg:SI 134 [ <result> ])) -1 (nil))
;; End of basic block 8 -> ( 9)

;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 7 8) -> 9
;; Pred edge  7 [100.0%] 
;; Pred edge  8 [100.0%]  (fallthru)
(code_label 32 27 36 9 4 "" [1 uses])

(note 36 32 33 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 33 36 0 9 init/do_mounts.c:48 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 9 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function readwrite (readwrite)[0:2704] (unlikely executed)


;; Generating RTL for gimple basic block 2

;; if (*str != 0)

(insn 6 5 7 init/do_mounts.c:52 (set (reg:SI 136)
        (zero_extend:SI (mem:QI (reg/v/f:SI 135 [ str ]) [0 S1 A8]))) -1 (nil))

(insn 7 6 8 init/do_mounts.c:52 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 136)
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 8 7 0 init/do_mounts.c:52 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
        (nil)))

;; Generating RTL for gimple basic block 3

;; D.52654 = 0;

(insn 10 9 0 init/do_mounts.c:53 (set (reg:SI 133 [ D.52654 ])
        (const_int 0 [0x0])) -1 (nil))

;; Generating RTL for gimple basic block 4

;; 

(code_label 13 12 14 8 "" [0 uses])

(note 14 13 0 NOTE_INSN_BASIC_BLOCK)

;; root_mountflags = [bit_and_expr] root_mountflags & -2;

(insn 15 14 16 init/do_mounts.c:54 (set (reg/f:SI 137)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) -1 (nil))

(insn 16 15 17 init/do_mounts.c:54 (set (reg/f:SI 138)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) -1 (nil))

(insn 17 16 18 init/do_mounts.c:54 (set (reg:SI 139)
        (mem/c/i:SI (reg/f:SI 138) [0 root_mountflags+0 S4 A32])) -1 (nil))

(insn 18 17 19 init/do_mounts.c:54 (set (reg:SI 140)
        (and:SI (reg:SI 139)
            (const_int -2 [0xfffffffffffffffe]))) -1 (nil))

(insn 19 18 0 init/do_mounts.c:54 (set (mem/c/i:SI (reg/f:SI 137) [0 root_mountflags+0 S4 A32])
        (reg:SI 140)) -1 (nil))

;; D.52654 = 1;

(insn 20 19 0 init/do_mounts.c:55 (set (reg:SI 133 [ D.52654 ])
        (const_int 1 [0x1])) -1 (nil))

;; Generating RTL for gimple basic block 5

;; 

(code_label 21 20 22 9 "" [0 uses])

(note 22 21 0 NOTE_INSN_BASIC_BLOCK)

;; return D.52654;

(insn 23 22 24 init/do_mounts.c:56 (set (reg:SI 134 [ <result> ])
        (reg:SI 133 [ D.52654 ])) -1 (nil))

(jump_insn 24 23 25 init/do_mounts.c:56 (set (pc)
        (label_ref 0)) -1 (nil))

(barrier 25 24 0)


;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 init/do_mounts.c:51 (set (reg/v/f:SI 135 [ str ])
        (reg:SI 0 r0 [ str ])) -1 (nil))

(note 3 2 5 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 3)

;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [100.0%]  (fallthru)
(note 5 3 6 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 6 5 7 3 init/do_mounts.c:52 (set (reg:SI 136)
        (zero_extend:SI (mem:QI (reg/v/f:SI 135 [ str ]) [0 S1 A8]))) -1 (nil))

(insn 7 6 8 3 init/do_mounts.c:52 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 136)
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 8 7 9 3 init/do_mounts.c:52 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 13)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
        (nil)))
;; End of basic block 3 -> ( 4 5)

;; Succ edge  4 [39.0%]  (fallthru)
;; Succ edge  5 [61.0%] 

;; Start of basic block ( 3) -> 4
;; Pred edge  3 [39.0%]  (fallthru)
(note 9 8 10 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 10 9 11 4 init/do_mounts.c:53 (set (reg:SI 133 [ D.52654 ])
        (const_int 0 [0x0])) -1 (nil))

(jump_insn 11 10 12 4 init/do_mounts.c:53 (set (pc)
        (label_ref 21)) -1 (nil))
;; End of basic block 4 -> ( 6)

;; Succ edge  6 [100.0%] 

(barrier 12 11 13)

;; Start of basic block ( 3) -> 5
;; Pred edge  3 [61.0%] 
(code_label 13 12 14 5 8 "" [1 uses])

(note 14 13 15 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 15 14 16 5 init/do_mounts.c:54 (set (reg/f:SI 137)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) -1 (nil))

(insn 16 15 17 5 init/do_mounts.c:54 (set (reg/f:SI 138)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) -1 (nil))

(insn 17 16 18 5 init/do_mounts.c:54 (set (reg:SI 139)
        (mem/c/i:SI (reg/f:SI 138) [0 root_mountflags+0 S4 A32])) -1 (nil))

(insn 18 17 19 5 init/do_mounts.c:54 (set (reg:SI 140)
        (and:SI (reg:SI 139)
            (const_int -2 [0xfffffffffffffffe]))) -1 (nil))

(insn 19 18 20 5 init/do_mounts.c:54 (set (mem/c/i:SI (reg/f:SI 137) [0 root_mountflags+0 S4 A32])
        (reg:SI 140)) -1 (nil))

(insn 20 19 21 5 init/do_mounts.c:55 (set (reg:SI 133 [ D.52654 ])
        (const_int 1 [0x1])) -1 (nil))
;; End of basic block 5 -> ( 6)

;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 4 5) -> 6
;; Pred edge  4 [100.0%] 
;; Pred edge  5 [100.0%]  (fallthru)
(code_label 21 20 22 6 9 "" [1 uses])

(note 22 21 23 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 23 22 24 6 init/do_mounts.c:56 (set (reg:SI 134 [ <result> ])
        (reg:SI 133 [ D.52654 ])) -1 (nil))

(jump_insn 24 23 25 6 init/do_mounts.c:56 (set (pc)
        (label_ref 26)) -1 (nil))
;; End of basic block 6 -> ( 8)

;; Succ edge  8 [100.0%] 

(barrier 25 24 34)

;; Start of basic block () -> 7
(note 34 25 28 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 28 34 29 7 init/do_mounts.c:56 (clobber (reg/i:SI 0 r0)) -1 (nil))

(insn 29 28 30 7 init/do_mounts.c:56 (clobber (reg:SI 134 [ <result> ])) -1 (nil))

(jump_insn 30 29 31 7 init/do_mounts.c:56 (set (pc)
        (label_ref 32)) -1 (nil))
;; End of basic block 7 -> ( 9)

;; Succ edge  9 [100.0%] 

(barrier 31 30 26)

;; Start of basic block ( 6) -> 8
;; Pred edge  6 [100.0%] 
(code_label 26 31 35 8 7 "" [1 uses])

(note 35 26 27 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 27 35 32 8 init/do_mounts.c:56 (set (reg/i:SI 0 r0)
        (reg:SI 134 [ <result> ])) -1 (nil))
;; End of basic block 8 -> ( 9)

;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 7 8) -> 9
;; Pred edge  7 [100.0%] 
;; Pred edge  8 [100.0%]  (fallthru)
(code_label 32 27 36 9 10 "" [1 uses])

(note 36 32 33 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 33 36 0 9 init/do_mounts.c:56 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 9 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function rootwait_setup (rootwait_setup)[0:2709] (unlikely executed)


;; Generating RTL for gimple basic block 2

;; if (*str != 0)

(insn 6 5 7 init/do_mounts.c:228 (set (reg:SI 136)
        (zero_extend:SI (mem:QI (reg/v/f:SI 135 [ str ]) [0 S1 A8]))) -1 (nil))

(insn 7 6 8 init/do_mounts.c:228 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 136)
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 8 7 0 init/do_mounts.c:228 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
        (nil)))

;; Generating RTL for gimple basic block 3

;; D.52778 = 0;

(insn 10 9 0 init/do_mounts.c:229 (set (reg:SI 133 [ D.52778 ])
        (const_int 0 [0x0])) -1 (nil))

;; Generating RTL for gimple basic block 4

;; 

(code_label 13 12 14 14 "" [0 uses])

(note 14 13 0 NOTE_INSN_BASIC_BLOCK)

;; root_wait = 1;

(insn 15 14 16 init/do_mounts.c:230 (set (reg/f:SI 137)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) -1 (nil))

(insn 16 15 17 init/do_mounts.c:230 (set (reg:SI 138)
        (const_int 1 [0x1])) -1 (nil))

(insn 17 16 0 init/do_mounts.c:230 (set (mem/c/i:SI (reg/f:SI 137) [0 root_wait+0 S4 A32])
        (reg:SI 138)) -1 (nil))

;; D.52778 = 1;

(insn 18 17 0 init/do_mounts.c:231 (set (reg:SI 133 [ D.52778 ])
        (const_int 1 [0x1])) -1 (nil))

;; Generating RTL for gimple basic block 5

;; 

(code_label 19 18 20 15 "" [0 uses])

(note 20 19 0 NOTE_INSN_BASIC_BLOCK)

;; return D.52778;

(insn 21 20 22 init/do_mounts.c:232 (set (reg:SI 134 [ <result> ])
        (reg:SI 133 [ D.52778 ])) -1 (nil))

(jump_insn 22 21 23 init/do_mounts.c:232 (set (pc)
        (label_ref 0)) -1 (nil))

(barrier 23 22 0)


;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 init/do_mounts.c:227 (set (reg/v/f:SI 135 [ str ])
        (reg:SI 0 r0 [ str ])) -1 (nil))

(note 3 2 5 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 3)

;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [100.0%]  (fallthru)
(note 5 3 6 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 6 5 7 3 init/do_mounts.c:228 (set (reg:SI 136)
        (zero_extend:SI (mem:QI (reg/v/f:SI 135 [ str ]) [0 S1 A8]))) -1 (nil))

(insn 7 6 8 3 init/do_mounts.c:228 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 136)
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 8 7 9 3 init/do_mounts.c:228 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 13)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
        (nil)))
;; End of basic block 3 -> ( 4 5)

;; Succ edge  4 [39.0%]  (fallthru)
;; Succ edge  5 [61.0%] 

;; Start of basic block ( 3) -> 4
;; Pred edge  3 [39.0%]  (fallthru)
(note 9 8 10 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 10 9 11 4 init/do_mounts.c:229 (set (reg:SI 133 [ D.52778 ])
        (const_int 0 [0x0])) -1 (nil))

(jump_insn 11 10 12 4 init/do_mounts.c:229 (set (pc)
        (label_ref 19)) -1 (nil))
;; End of basic block 4 -> ( 6)

;; Succ edge  6 [100.0%] 

(barrier 12 11 13)

;; Start of basic block ( 3) -> 5
;; Pred edge  3 [61.0%] 
(code_label 13 12 14 5 14 "" [1 uses])

(note 14 13 15 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 15 14 16 5 init/do_mounts.c:230 (set (reg/f:SI 137)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) -1 (nil))

(insn 16 15 17 5 init/do_mounts.c:230 (set (reg:SI 138)
        (const_int 1 [0x1])) -1 (nil))

(insn 17 16 18 5 init/do_mounts.c:230 (set (mem/c/i:SI (reg/f:SI 137) [0 root_wait+0 S4 A32])
        (reg:SI 138)) -1 (nil))

(insn 18 17 19 5 init/do_mounts.c:231 (set (reg:SI 133 [ D.52778 ])
        (const_int 1 [0x1])) -1 (nil))
;; End of basic block 5 -> ( 6)

;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 4 5) -> 6
;; Pred edge  4 [100.0%] 
;; Pred edge  5 [100.0%]  (fallthru)
(code_label 19 18 20 6 15 "" [1 uses])

(note 20 19 21 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 21 20 22 6 init/do_mounts.c:232 (set (reg:SI 134 [ <result> ])
        (reg:SI 133 [ D.52778 ])) -1 (nil))

(jump_insn 22 21 23 6 init/do_mounts.c:232 (set (pc)
        (label_ref 24)) -1 (nil))
;; End of basic block 6 -> ( 8)

;; Succ edge  8 [100.0%] 

(barrier 23 22 32)

;; Start of basic block () -> 7
(note 32 23 26 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 26 32 27 7 init/do_mounts.c:232 (clobber (reg/i:SI 0 r0)) -1 (nil))

(insn 27 26 28 7 init/do_mounts.c:232 (clobber (reg:SI 134 [ <result> ])) -1 (nil))

(jump_insn 28 27 29 7 init/do_mounts.c:232 (set (pc)
        (label_ref 30)) -1 (nil))
;; End of basic block 7 -> ( 9)

;; Succ edge  9 [100.0%] 

(barrier 29 28 24)

;; Start of basic block ( 6) -> 8
;; Pred edge  6 [100.0%] 
(code_label 24 29 33 8 13 "" [1 uses])

(note 33 24 25 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 25 33 30 8 init/do_mounts.c:232 (set (reg/i:SI 0 r0)
        (reg:SI 134 [ <result> ])) -1 (nil))
;; End of basic block 8 -> ( 9)

;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 7 8) -> 9
;; Pred edge  7 [100.0%] 
;; Pred edge  8 [100.0%]  (fallthru)
(code_label 30 25 34 9 16 "" [1 uses])

(note 34 30 31 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 31 34 0 9 init/do_mounts.c:232 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 9 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function root_data_setup (root_data_setup)[0:2710] (unlikely executed)


;; Generating RTL for gimple basic block 2

;; root_mount_data = str;

(insn 6 5 7 init/do_mounts.c:239 (set (reg/f:SI 135)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) -1 (nil))

(insn 7 6 0 init/do_mounts.c:239 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 135)
                (const_int 4 [0x4])) [0 root_mount_data+0 S4 A32])
        (reg/v/f:SI 134 [ str ])) -1 (nil))

;; return 1;

(insn 8 7 9 init/do_mounts.c:241 (set (reg:SI 133 [ <result> ])
        (const_int 1 [0x1])) -1 (nil))

(jump_insn 9 8 10 init/do_mounts.c:241 (set (pc)
        (label_ref 0)) -1 (nil))

(barrier 10 9 0)


;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 init/do_mounts.c:238 (set (reg/v/f:SI 134 [ str ])
        (reg:SI 0 r0 [ str ])) -1 (nil))

(note 3 2 5 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 3)

;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [100.0%]  (fallthru)
(note 5 3 6 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 6 5 7 3 init/do_mounts.c:239 (set (reg/f:SI 135)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) -1 (nil))

(insn 7 6 8 3 init/do_mounts.c:239 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 135)
                (const_int 4 [0x4])) [0 root_mount_data+0 S4 A32])
        (reg/v/f:SI 134 [ str ])) -1 (nil))

(insn 8 7 9 3 init/do_mounts.c:241 (set (reg:SI 133 [ <result> ])
        (const_int 1 [0x1])) -1 (nil))

(jump_insn 9 8 10 3 init/do_mounts.c:241 (set (pc)
        (label_ref 11)) -1 (nil))
;; End of basic block 3 -> ( 5)

;; Succ edge  5 [100.0%] 

(barrier 10 9 19)

;; Start of basic block () -> 4
(note 19 10 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 13 19 14 4 init/do_mounts.c:241 (clobber (reg/i:SI 0 r0)) -1 (nil))

(insn 14 13 15 4 init/do_mounts.c:241 (clobber (reg:SI 133 [ <result> ])) -1 (nil))

(jump_insn 15 14 16 4 init/do_mounts.c:241 (set (pc)
        (label_ref 17)) -1 (nil))
;; End of basic block 4 -> ( 6)

;; Succ edge  6 [100.0%] 

(barrier 16 15 11)

;; Start of basic block ( 3) -> 5
;; Pred edge  3 [100.0%] 
(code_label 11 16 20 5 19 "" [1 uses])

(note 20 11 12 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 12 20 17 5 init/do_mounts.c:241 (set (reg/i:SI 0 r0)
        (reg:SI 133 [ <result> ])) -1 (nil))
;; End of basic block 5 -> ( 6)

;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 4 5) -> 6
;; Pred edge  4 [100.0%] 
;; Pred edge  5 [100.0%]  (fallthru)
(code_label 17 12 21 6 20 "" [1 uses])

(note 21 17 18 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 18 21 0 6 init/do_mounts.c:241 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 6 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function fs_names_setup (fs_names_setup)[0:2711] (unlikely executed)


;; Generating RTL for gimple basic block 2

;; root_fs_names = str;

(insn 6 5 7 init/do_mounts.c:246 (set (reg/f:SI 135)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) -1 (nil))

(insn 7 6 0 init/do_mounts.c:246 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 135)
                (const_int 8 [0x8])) [0 root_fs_names+0 S4 A32])
        (reg/v/f:SI 134 [ str ])) -1 (nil))

;; return 1;

(insn 8 7 9 init/do_mounts.c:248 (set (reg:SI 133 [ <result> ])
        (const_int 1 [0x1])) -1 (nil))

(jump_insn 9 8 10 init/do_mounts.c:248 (set (pc)
        (label_ref 0)) -1 (nil))

(barrier 10 9 0)


;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 init/do_mounts.c:245 (set (reg/v/f:SI 134 [ str ])
        (reg:SI 0 r0 [ str ])) -1 (nil))

(note 3 2 5 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 3)

;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [100.0%]  (fallthru)
(note 5 3 6 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 6 5 7 3 init/do_mounts.c:246 (set (reg/f:SI 135)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) -1 (nil))

(insn 7 6 8 3 init/do_mounts.c:246 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 135)
                (const_int 8 [0x8])) [0 root_fs_names+0 S4 A32])
        (reg/v/f:SI 134 [ str ])) -1 (nil))

(insn 8 7 9 3 init/do_mounts.c:248 (set (reg:SI 133 [ <result> ])
        (const_int 1 [0x1])) -1 (nil))

(jump_insn 9 8 10 3 init/do_mounts.c:248 (set (pc)
        (label_ref 11)) -1 (nil))
;; End of basic block 3 -> ( 5)

;; Succ edge  5 [100.0%] 

(barrier 10 9 19)

;; Start of basic block () -> 4
(note 19 10 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 13 19 14 4 init/do_mounts.c:248 (clobber (reg/i:SI 0 r0)) -1 (nil))

(insn 14 13 15 4 init/do_mounts.c:248 (clobber (reg:SI 133 [ <result> ])) -1 (nil))

(jump_insn 15 14 16 4 init/do_mounts.c:248 (set (pc)
        (label_ref 17)) -1 (nil))
;; End of basic block 4 -> ( 6)

;; Succ edge  6 [100.0%] 

(barrier 16 15 11)

;; Start of basic block ( 3) -> 5
;; Pred edge  3 [100.0%] 
(code_label 11 16 20 5 23 "" [1 uses])

(note 20 11 12 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 12 20 17 5 init/do_mounts.c:248 (set (reg/i:SI 0 r0)
        (reg:SI 133 [ <result> ])) -1 (nil))
;; End of basic block 5 -> ( 6)

;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 4 5) -> 6
;; Pred edge  4 [100.0%] 
;; Pred edge  5 [100.0%]  (fallthru)
(code_label 17 12 21 6 24 "" [1 uses])

(note 21 17 18 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 18 21 0 6 init/do_mounts.c:248 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 6 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function load_ramdisk (load_ramdisk)[0:2702] (unlikely executed)


;; Generating RTL for gimple basic block 2

;; D.52634 = simple_strtol (str, 0B, 0);

(insn 6 5 7 init/do_mounts.c:37 (set (reg:SI 0 r0)
        (reg/v/f:SI 135 [ str ])) -1 (nil))

(insn 7 6 8 init/do_mounts.c:37 (set (reg:SI 1 r1)
        (const_int 0 [0x0])) -1 (nil))

(insn 8 7 9 init/do_mounts.c:37 (set (reg:SI 2 r2)
        (const_int 0 [0x0])) -1 (nil))

(call_insn 9 8 10 init/do_mounts.c:37 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("simple_strtol") [flags 0x41] <function_decl 0x10a77e80 simple_strtol>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 10 9 0 init/do_mounts.c:37 (set (reg:SI 133 [ D.52634 ])
        (reg:SI 0 r0)) -1 (nil))

;; rd_doload = [bit_and_expr] D.52634 & 3;

(insn 11 10 12 init/do_mounts.c:37 (set (reg/f:SI 136)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) -1 (nil))

(insn 12 11 13 init/do_mounts.c:37 (set (reg:SI 137)
        (and:SI (reg:SI 133 [ D.52634 ])
            (const_int 3 [0x3]))) -1 (nil))

(insn 13 12 0 init/do_mounts.c:37 (set (mem/c/i:SI (plus:SI (reg/f:SI 136)
                (const_int 12 [0xc])) [0 rd_doload+0 S4 A32])
        (reg:SI 137)) -1 (nil))

;; return 1;

(insn 14 13 15 init/do_mounts.c:39 (set (reg:SI 134 [ <result> ])
        (const_int 1 [0x1])) -1 (nil))

(jump_insn 15 14 16 init/do_mounts.c:39 (set (pc)
        (label_ref 0)) -1 (nil))

(barrier 16 15 0)


;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 init/do_mounts.c:36 (set (reg/v/f:SI 135 [ str ])
        (reg:SI 0 r0 [ str ])) -1 (nil))

(note 3 2 5 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 3)

;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [100.0%]  (fallthru)
(note 5 3 6 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 6 5 7 3 init/do_mounts.c:37 (set (reg:SI 0 r0)
        (reg/v/f:SI 135 [ str ])) -1 (nil))

(insn 7 6 8 3 init/do_mounts.c:37 (set (reg:SI 1 r1)
        (const_int 0 [0x0])) -1 (nil))

(insn 8 7 9 3 init/do_mounts.c:37 (set (reg:SI 2 r2)
        (const_int 0 [0x0])) -1 (nil))

(call_insn 9 8 10 3 init/do_mounts.c:37 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("simple_strtol") [flags 0x41] <function_decl 0x10a77e80 simple_strtol>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 10 9 11 3 init/do_mounts.c:37 (set (reg:SI 133 [ D.52634 ])
        (reg:SI 0 r0)) -1 (nil))

(insn 11 10 12 3 init/do_mounts.c:37 (set (reg/f:SI 136)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) -1 (nil))

(insn 12 11 13 3 init/do_mounts.c:37 (set (reg:SI 137)
        (and:SI (reg:SI 133 [ D.52634 ])
            (const_int 3 [0x3]))) -1 (nil))

(insn 13 12 14 3 init/do_mounts.c:37 (set (mem/c/i:SI (plus:SI (reg/f:SI 136)
                (const_int 12 [0xc])) [0 rd_doload+0 S4 A32])
        (reg:SI 137)) -1 (nil))

(insn 14 13 15 3 init/do_mounts.c:39 (set (reg:SI 134 [ <result> ])
        (const_int 1 [0x1])) -1 (nil))

(jump_insn 15 14 16 3 init/do_mounts.c:39 (set (pc)
        (label_ref 17)) -1 (nil))
;; End of basic block 3 -> ( 5)

;; Succ edge  5 [100.0%] 

(barrier 16 15 25)

;; Start of basic block () -> 4
(note 25 16 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 19 25 20 4 init/do_mounts.c:39 (clobber (reg/i:SI 0 r0)) -1 (nil))

(insn 20 19 21 4 init/do_mounts.c:39 (clobber (reg:SI 134 [ <result> ])) -1 (nil))

(jump_insn 21 20 22 4 init/do_mounts.c:39 (set (pc)
        (label_ref 23)) -1 (nil))
;; End of basic block 4 -> ( 6)

;; Succ edge  6 [100.0%] 

(barrier 22 21 17)

;; Start of basic block ( 3) -> 5
;; Pred edge  3 [100.0%] 
(code_label 17 22 26 5 27 "" [1 uses])

(note 26 17 18 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 18 26 23 5 init/do_mounts.c:39 (set (reg/i:SI 0 r0)
        (reg:SI 134 [ <result> ])) -1 (nil))
;; End of basic block 5 -> ( 6)

;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 4 5) -> 6
;; Pred edge  4 [100.0%] 
;; Pred edge  5 [100.0%]  (fallthru)
(code_label 23 18 27 6 28 "" [1 uses])

(note 27 23 24 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 24 27 0 6 init/do_mounts.c:39 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 6 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function root_dev_setup (root_dev_setup)[0:2708] (unlikely executed)


;; Generating RTL for gimple basic block 2

;; strlcpy (&saved_root_name, line, 64);

(insn 6 5 7 init/do_mounts.c:220 (set (reg/f:SI 135)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) -1 (nil))

(insn 7 6 8 init/do_mounts.c:220 (set (reg:SI 136)
        (plus:SI (reg/f:SI 135)
            (const_int 16 [0x10]))) -1 (nil))

(insn 8 7 9 init/do_mounts.c:220 (set (reg:SI 0 r0)
        (reg:SI 136)) -1 (nil))

(insn 9 8 10 init/do_mounts.c:220 (set (reg:SI 1 r1)
        (reg/v/f:SI 134 [ line ])) -1 (nil))

(insn 10 9 11 init/do_mounts.c:220 (set (reg:SI 2 r2)
        (const_int 64 [0x40])) -1 (nil))

(call_insn 11 10 0 init/do_mounts.c:220 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strlcpy") [flags 0x41] <function_decl 0x10bb1380 strlcpy>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

;; return 1;

(insn 12 11 13 init/do_mounts.c:222 (set (reg:SI 133 [ <result> ])
        (const_int 1 [0x1])) -1 (nil))

(jump_insn 13 12 14 init/do_mounts.c:222 (set (pc)
        (label_ref 0)) -1 (nil))

(barrier 14 13 0)


;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 init/do_mounts.c:219 (set (reg/v/f:SI 134 [ line ])
        (reg:SI 0 r0 [ line ])) -1 (nil))

(note 3 2 5 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 3)

;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [100.0%]  (fallthru)
(note 5 3 6 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 6 5 7 3 init/do_mounts.c:220 (set (reg/f:SI 135)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) -1 (nil))

(insn 7 6 8 3 init/do_mounts.c:220 (set (reg:SI 136)
        (plus:SI (reg/f:SI 135)
            (const_int 16 [0x10]))) -1 (nil))

(insn 8 7 9 3 init/do_mounts.c:220 (set (reg:SI 0 r0)
        (reg:SI 136)) -1 (nil))

(insn 9 8 10 3 init/do_mounts.c:220 (set (reg:SI 1 r1)
        (reg/v/f:SI 134 [ line ])) -1 (nil))

(insn 10 9 11 3 init/do_mounts.c:220 (set (reg:SI 2 r2)
        (const_int 64 [0x40])) -1 (nil))

(call_insn 11 10 12 3 init/do_mounts.c:220 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strlcpy") [flags 0x41] <function_decl 0x10bb1380 strlcpy>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 12 11 13 3 init/do_mounts.c:222 (set (reg:SI 133 [ <result> ])
        (const_int 1 [0x1])) -1 (nil))

(jump_insn 13 12 14 3 init/do_mounts.c:222 (set (pc)
        (label_ref 15)) -1 (nil))
;; End of basic block 3 -> ( 5)

;; Succ edge  5 [100.0%] 

(barrier 14 13 23)

;; Start of basic block () -> 4
(note 23 14 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 17 23 18 4 init/do_mounts.c:222 (clobber (reg/i:SI 0 r0)) -1 (nil))

(insn 18 17 19 4 init/do_mounts.c:222 (clobber (reg:SI 133 [ <result> ])) -1 (nil))

(jump_insn 19 18 20 4 init/do_mounts.c:222 (set (pc)
        (label_ref 21)) -1 (nil))
;; End of basic block 4 -> ( 6)

;; Succ edge  6 [100.0%] 

(barrier 20 19 15)

;; Start of basic block ( 3) -> 5
;; Pred edge  3 [100.0%] 
(code_label 15 20 24 5 31 "" [1 uses])

(note 24 15 16 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 16 24 21 5 init/do_mounts.c:222 (set (reg/i:SI 0 r0)
        (reg:SI 133 [ <result> ])) -1 (nil))
;; End of basic block 5 -> ( 6)

;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 4 5) -> 6
;; Pred edge  4 [100.0%] 
;; Pred edge  5 [100.0%]  (fallthru)
(code_label 21 16 25 6 32 "" [1 uses])

(note 25 21 22 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 22 25 0 6 init/do_mounts.c:222 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 6 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function root_delay_setup (root_delay_setup)[0:2712] (unlikely executed)


;; Generating RTL for gimple basic block 2

;; root_delay.888 = simple_strtoul (str, 0B, 0);

(insn 6 5 7 init/do_mounts.c:253 (set (reg:SI 0 r0)
        (reg/v/f:SI 135 [ str ])) -1 (nil))

(insn 7 6 8 init/do_mounts.c:253 (set (reg:SI 1 r1)
        (const_int 0 [0x0])) -1 (nil))

(insn 8 7 9 init/do_mounts.c:253 (set (reg:SI 2 r2)
        (const_int 0 [0x0])) -1 (nil))

(call_insn 9 8 10 init/do_mounts.c:253 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("simple_strtoul") [flags 0x41] <function_decl 0x10a77e00 simple_strtoul>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 10 9 0 init/do_mounts.c:253 (set (reg:SI 133 [ root_delay.888 ])
        (reg:SI 0 r0)) -1 (nil))

;; root_delay = root_delay.888;

(insn 11 10 12 init/do_mounts.c:253 (set (reg/f:SI 136)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) -1 (nil))

(insn 12 11 0 init/do_mounts.c:253 (set (mem/c/i:SI (plus:SI (reg/f:SI 136)
                (const_int 80 [0x50])) [0 root_delay+0 S4 A32])
        (reg:SI 133 [ root_delay.888 ])) -1 (nil))

;; return 1;

(insn 13 12 14 init/do_mounts.c:255 (set (reg:SI 134 [ <result> ])
        (const_int 1 [0x1])) -1 (nil))

(jump_insn 14 13 15 init/do_mounts.c:255 (set (pc)
        (label_ref 0)) -1 (nil))

(barrier 15 14 0)


;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 init/do_mounts.c:252 (set (reg/v/f:SI 135 [ str ])
        (reg:SI 0 r0 [ str ])) -1 (nil))

(note 3 2 5 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 3)

;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [100.0%]  (fallthru)
(note 5 3 6 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 6 5 7 3 init/do_mounts.c:253 (set (reg:SI 0 r0)
        (reg/v/f:SI 135 [ str ])) -1 (nil))

(insn 7 6 8 3 init/do_mounts.c:253 (set (reg:SI 1 r1)
        (const_int 0 [0x0])) -1 (nil))

(insn 8 7 9 3 init/do_mounts.c:253 (set (reg:SI 2 r2)
        (const_int 0 [0x0])) -1 (nil))

(call_insn 9 8 10 3 init/do_mounts.c:253 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("simple_strtoul") [flags 0x41] <function_decl 0x10a77e00 simple_strtoul>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 10 9 11 3 init/do_mounts.c:253 (set (reg:SI 133 [ root_delay.888 ])
        (reg:SI 0 r0)) -1 (nil))

(insn 11 10 12 3 init/do_mounts.c:253 (set (reg/f:SI 136)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) -1 (nil))

(insn 12 11 13 3 init/do_mounts.c:253 (set (mem/c/i:SI (plus:SI (reg/f:SI 136)
                (const_int 80 [0x50])) [0 root_delay+0 S4 A32])
        (reg:SI 133 [ root_delay.888 ])) -1 (nil))

(insn 13 12 14 3 init/do_mounts.c:255 (set (reg:SI 134 [ <result> ])
        (const_int 1 [0x1])) -1 (nil))

(jump_insn 14 13 15 3 init/do_mounts.c:255 (set (pc)
        (label_ref 16)) -1 (nil))
;; End of basic block 3 -> ( 5)

;; Succ edge  5 [100.0%] 

(barrier 15 14 24)

;; Start of basic block () -> 4
(note 24 15 18 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 18 24 19 4 init/do_mounts.c:255 (clobber (reg/i:SI 0 r0)) -1 (nil))

(insn 19 18 20 4 init/do_mounts.c:255 (clobber (reg:SI 134 [ <result> ])) -1 (nil))

(jump_insn 20 19 21 4 init/do_mounts.c:255 (set (pc)
        (label_ref 22)) -1 (nil))
;; End of basic block 4 -> ( 6)

;; Succ edge  6 [100.0%] 

(barrier 21 20 16)

;; Start of basic block ( 3) -> 5
;; Pred edge  3 [100.0%] 
(code_label 16 21 25 5 35 "" [1 uses])

(note 25 16 17 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 17 25 22 5 init/do_mounts.c:255 (set (reg/i:SI 0 r0)
        (reg:SI 134 [ <result> ])) -1 (nil))
;; End of basic block 5 -> ( 6)

;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 4 5) -> 6
;; Pred edge  4 [100.0%] 
;; Pred edge  5 [100.0%]  (fallthru)
(code_label 22 17 26 6 36 "" [1 uses])

(note 26 22 23 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 23 26 0 6 init/do_mounts.c:255 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 6 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function do_mount_root (do_mount_root)[0:2714] (unlikely executed)


;; Generating RTL for gimple basic block 2

;; err = sys_mount (name, &"/root"[0], fs, (long unsigned int) flags, data);

(insn 9 8 10 init/do_mounts.c:290 (set (reg:SI 145)
        (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x121b28c0>)) -1 (nil))

(insn 10 9 11 init/do_mounts.c:290 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg/v/f:SI 144 [ data ])) -1 (nil))

(insn 11 10 12 init/do_mounts.c:290 (set (reg:SI 0 r0)
        (reg/v/f:SI 141 [ name ])) -1 (nil))

(insn 12 11 13 init/do_mounts.c:290 (set (reg:SI 1 r1)
        (reg:SI 145)) -1 (nil))

(insn 13 12 14 init/do_mounts.c:290 (set (reg:SI 2 r2)
        (reg/v/f:SI 142 [ fs ])) -1 (nil))

(insn 14 13 15 init/do_mounts.c:290 (set (reg:SI 3 r3)
        (reg/v:SI 143 [ flags ])) -1 (nil))

(call_insn 15 14 16 init/do_mounts.c:290 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sys_mount") [flags 0x41] <function_decl 0x120f7880 sys_mount>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 16 15 0 init/do_mounts.c:290 (set (reg/v:SI 136 [ err ])
        (reg:SI 0 r0)) -1 (nil))

;; if (err != 0)

(insn 17 16 18 init/do_mounts.c:291 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 136 [ err ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 18 17 0 init/do_mounts.c:291 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))

;; Generating RTL for gimple basic block 3

;; sys_chdir (&"/root"[0]);

(insn 20 19 21 init/do_mounts.c:294 (set (reg:SI 146)
        (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x121b28c0>)) -1 (nil))

(insn 21 20 22 init/do_mounts.c:294 (set (reg:SI 0 r0)
        (reg:SI 146)) -1 (nil))

(call_insn 22 21 0 init/do_mounts.c:294 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sys_chdir") [flags 0x41] <function_decl 0x12110280 sys_chdir>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

;; sp.83 = sp;

(insn 23 22 0 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 135 [ sp.83 ])
        (reg/v:SI 13 sp [ sp ])) -1 (nil))

;; ROOT_DEV.894 = ((struct thread_info *) (sp.83 & 4294959104))->task->fs->pwd.mnt->mnt_sb->s_dev;

(insn 24 23 25 init/do_mounts.c:295 (set (reg:SI 148)
        (and:SI (reg:SI 135 [ sp.83 ])
            (const_int -8129 [0xffffffffffffe03f]))) -1 (nil))

(insn 25 24 26 init/do_mounts.c:295 (set (reg:SI 147)
        (and:SI (reg:SI 148)
            (const_int -64 [0xffffffffffffffc0]))) -1 (expr_list:REG_EQUAL (and:SI (reg:SI 135 [ sp.83 ])
            (const_int -8192 [0xffffffffffffe000]))
        (nil)))

(insn 26 25 27 init/do_mounts.c:295 (set (reg/f:SI 149)
        (mem/s/f/j:SI (plus:SI (reg:SI 147)
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) -1 (nil))

(insn 27 26 28 init/do_mounts.c:295 (set (reg/f:SI 150)
        (mem/s/f/j:SI (plus:SI (reg/f:SI 149)
                (const_int 924 [0x39c])) [0 <variable>.fs+0 S4 A32])) -1 (nil))

(insn 28 27 29 init/do_mounts.c:295 (set (reg/f:SI 151)
        (mem/s/f/j:SI (plus:SI (reg/f:SI 150)
                (const_int 32 [0x20])) [0 <variable>.pwd.mnt+0 S4 A32])) -1 (nil))

(insn 29 28 30 init/do_mounts.c:295 (set (reg/f:SI 152)
        (mem/s/f/j:SI (plus:SI (reg/f:SI 151)
                (const_int 20 [0x14])) [0 <variable>.mnt_sb+0 S4 A32])) -1 (nil))

(insn 30 29 0 init/do_mounts.c:295 (set (reg:SI 139 [ ROOT_DEV.894 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 152)
                (const_int 8 [0x8])) [0 <variable>.s_dev+0 S4 A64])) -1 (nil))

;; ROOT_DEV = ROOT_DEV.894;

(insn 31 30 32 init/do_mounts.c:295 (set (reg/f:SI 153)
        (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])) -1 (nil))

(insn 32 31 0 init/do_mounts.c:295 (set (mem/c/i:SI (reg/f:SI 153) [0 ROOT_DEV+0 S4 A32])
        (reg:SI 139 [ ROOT_DEV.894 ])) -1 (nil))

;; sp.83 = sp;

(insn 33 32 0 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 134 [ sp.83 ])
        (reg/v:SI 13 sp [ sp ])) -1 (nil))

;; D.52856 = ((struct thread_info *) (sp.83 & 4294959104))->task->fs->pwd.mnt->mnt_sb->s_type->name;

(insn 34 33 35 init/do_mounts.c:296 (set (reg:SI 155)
        (and:SI (reg:SI 134 [ sp.83 ])
            (const_int -8129 [0xffffffffffffe03f]))) -1 (nil))

(insn 35 34 36 init/do_mounts.c:296 (set (reg:SI 154)
        (and:SI (reg:SI 155)
            (const_int -64 [0xffffffffffffffc0]))) -1 (expr_list:REG_EQUAL (and:SI (reg:SI 134 [ sp.83 ])
            (const_int -8192 [0xffffffffffffe000]))
        (nil)))

(insn 36 35 37 init/do_mounts.c:296 (set (reg/f:SI 156)
        (mem/s/f/j:SI (plus:SI (reg:SI 154)
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) -1 (nil))

(insn 37 36 38 init/do_mounts.c:296 (set (reg/f:SI 157)
        (mem/s/f/j:SI (plus:SI (reg/f:SI 156)
                (const_int 924 [0x39c])) [0 <variable>.fs+0 S4 A32])) -1 (nil))

(insn 38 37 39 init/do_mounts.c:296 (set (reg/f:SI 158)
        (mem/s/f/j:SI (plus:SI (reg/f:SI 157)
                (const_int 32 [0x20])) [0 <variable>.pwd.mnt+0 S4 A32])) -1 (nil))

(insn 39 38 40 init/do_mounts.c:296 (set (reg/f:SI 159)
        (mem/s/f/j:SI (plus:SI (reg/f:SI 158)
                (const_int 20 [0x14])) [0 <variable>.mnt_sb+0 S4 A32])) -1 (nil))

(insn 40 39 41 init/do_mounts.c:296 (set (reg/f:SI 160)
        (mem/s/f/j:SI (plus:SI (reg/f:SI 159)
                (const_int 32 [0x20])) [0 <variable>.s_type+0 S4 A256])) -1 (nil))

(insn 41 40 0 init/do_mounts.c:296 (set (reg/f:SI 138 [ D.52856 ])
        (mem/s/f/j:SI (reg/f:SI 160) [0 <variable>.name+0 S4 A32])) -1 (nil))

;; sp.83 = sp;

(insn 42 41 0 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 133 [ sp.83 ])
        (reg/v:SI 13 sp [ sp ])) -1 (nil))

;; if ((int) ((struct thread_info *) (sp.83 & 4294959104))->task->fs->pwd.mnt->mnt_sb->s_flags & 1 != 0)

(insn 43 42 44 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 162)
        (and:SI (reg:SI 133 [ sp.83 ])
            (const_int -8129 [0xffffffffffffe03f]))) -1 (nil))

(insn 44 43 45 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 161)
        (and:SI (reg:SI 162)
            (const_int -64 [0xffffffffffffffc0]))) -1 (expr_list:REG_EQUAL (and:SI (reg:SI 133 [ sp.83 ])
            (const_int -8192 [0xffffffffffffe000]))
        (nil)))

(insn 45 44 46 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 163)
        (mem/s/f/j:SI (plus:SI (reg:SI 161)
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) -1 (nil))

(insn 46 45 47 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 164)
        (mem/s/f/j:SI (plus:SI (reg/f:SI 163)
                (const_int 924 [0x39c])) [0 <variable>.fs+0 S4 A32])) -1 (nil))

(insn 47 46 48 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 165)
        (mem/s/f/j:SI (plus:SI (reg/f:SI 164)
                (const_int 32 [0x20])) [0 <variable>.pwd.mnt+0 S4 A32])) -1 (nil))

(insn 48 47 49 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 166)
        (mem/s/f/j:SI (plus:SI (reg/f:SI 165)
                (const_int 20 [0x14])) [0 <variable>.mnt_sb+0 S4 A32])) -1 (nil))

(insn 49 48 50 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 168)
        (mem/s/j:SI (plus:SI (reg/f:SI 166)
                (const_int 52 [0x34])) [0 <variable>.s_flags+0 S4 A32])) -1 (nil))

(insn 50 49 51 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 167)
        (and:SI (reg:SI 168)
            (const_int 1 [0x1]))) -1 (nil))

(insn 51 50 52 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 167)
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 52 51 0 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

;; Generating RTL for gimple basic block 4

;; iftmp.895 = &""[0];

(insn 54 53 0 init/do_mounts.c:296 discrim 2 (set (reg/f:SI 137 [ iftmp.895 ])
        (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x121b9920>)) -1 (nil))

;; Generating RTL for gimple basic block 5

;; 

(code_label 57 56 58 41 "" [0 uses])

(note 58 57 0 NOTE_INSN_BASIC_BLOCK)

;; iftmp.895 = &" readonly"[0];

(insn 59 58 0 init/do_mounts.c:296 discrim 1 (set (reg/f:SI 137 [ iftmp.895 ])
        (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x1217b540>)) -1 (nil))

;; Generating RTL for gimple basic block 6

;; 

(code_label 60 59 61 42 "" [0 uses])

(note 61 60 0 NOTE_INSN_BASIC_BLOCK)

;; printk (&"<6>VFS: Mounted root (%s filesystem)%s on device %u:%u.\n"[0], D.52856, iftmp.895, ROOT_DEV.894 >> 20, ROOT_DEV.894 & 1048575);

(insn 62 61 63 init/do_mounts.c:296 discrim 3 (set (reg:SI 169)
        (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x10bf1ea0>)) -1 (nil))

(insn 63 62 64 init/do_mounts.c:296 discrim 3 (set (reg:SI 170)
        (lshiftrt:SI (reg:SI 139 [ ROOT_DEV.894 ])
            (const_int 20 [0x14]))) -1 (nil))

(insn 64 63 65 init/do_mounts.c:296 discrim 3 (set (reg:SI 172)
        (and:SI (reg:SI 139 [ ROOT_DEV.894 ])
            (const_int 16777215 [0xffffff]))) -1 (nil))

(insn 65 64 66 init/do_mounts.c:296 discrim 3 (set (reg:SI 171)
        (and:SI (reg:SI 172)
            (const_int -15728641 [0xffffffffff0fffff]))) -1 (expr_list:REG_EQUAL (and:SI (reg:SI 139 [ ROOT_DEV.894 ])
            (const_int 1048575 [0xfffff]))
        (nil)))

(insn 66 65 67 init/do_mounts.c:296 discrim 3 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg:SI 171)) -1 (nil))

(insn 67 66 68 init/do_mounts.c:296 discrim 3 (set (reg:SI 0 r0)
        (reg:SI 169)) -1 (nil))

(insn 68 67 69 init/do_mounts.c:296 discrim 3 (set (reg:SI 1 r1)
        (reg/f:SI 138 [ D.52856 ])) -1 (nil))

(insn 69 68 70 init/do_mounts.c:296 discrim 3 (set (reg:SI 2 r2)
        (reg/f:SI 137 [ iftmp.895 ])) -1 (nil))

(insn 70 69 71 init/do_mounts.c:296 discrim 3 (set (reg:SI 3 r3)
        (reg:SI 170)) -1 (nil))

(call_insn 71 70 0 init/do_mounts.c:296 discrim 3 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

;; Generating RTL for gimple basic block 7

;; 

(code_label 72 71 73 40 "" [0 uses])

(note 73 72 0 NOTE_INSN_BASIC_BLOCK)

;; return err;

(insn 74 73 75 init/do_mounts.c:302 (set (reg:SI 140 [ <result> ])
        (reg/v:SI 136 [ err ])) -1 (nil))

(jump_insn 75 74 76 init/do_mounts.c:302 (set (pc)
        (label_ref 0)) -1 (nil))

(barrier 76 75 0)


;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 7 3 2 init/do_mounts.c:289 (set (reg/v/f:SI 141 [ name ])
        (reg:SI 0 r0 [ name ])) -1 (nil))

(insn 3 2 4 2 init/do_mounts.c:289 (set (reg/v/f:SI 142 [ fs ])
        (reg:SI 1 r1 [ fs ])) -1 (nil))

(insn 4 3 5 2 init/do_mounts.c:289 (set (reg/v:SI 143 [ flags ])
        (reg:SI 2 r2 [ flags ])) -1 (nil))

(insn 5 4 6 2 init/do_mounts.c:289 (set (reg/v/f:SI 144 [ data ])
        (reg:SI 3 r3 [ data ])) -1 (nil))

(note 6 5 8 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 3)

;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [100.0%]  (fallthru)
(note 8 6 9 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 9 8 10 3 init/do_mounts.c:290 (set (reg:SI 145)
        (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x121b28c0>)) -1 (nil))

(insn 10 9 11 3 init/do_mounts.c:290 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg/v/f:SI 144 [ data ])) -1 (nil))

(insn 11 10 12 3 init/do_mounts.c:290 (set (reg:SI 0 r0)
        (reg/v/f:SI 141 [ name ])) -1 (nil))

(insn 12 11 13 3 init/do_mounts.c:290 (set (reg:SI 1 r1)
        (reg:SI 145)) -1 (nil))

(insn 13 12 14 3 init/do_mounts.c:290 (set (reg:SI 2 r2)
        (reg/v/f:SI 142 [ fs ])) -1 (nil))

(insn 14 13 15 3 init/do_mounts.c:290 (set (reg:SI 3 r3)
        (reg/v:SI 143 [ flags ])) -1 (nil))

(call_insn 15 14 16 3 init/do_mounts.c:290 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sys_mount") [flags 0x41] <function_decl 0x120f7880 sys_mount>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 16 15 17 3 init/do_mounts.c:290 (set (reg/v:SI 136 [ err ])
        (reg:SI 0 r0)) -1 (nil))

(insn 17 16 18 3 init/do_mounts.c:291 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 136 [ err ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 18 17 19 3 init/do_mounts.c:291 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 72)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 3 -> ( 8 4)

;; Succ edge  8 [100.0%] 
;; Succ edge  4 [0.0%]  (fallthru)

;; Start of basic block ( 3) -> 4
;; Pred edge  3 [0.0%]  (fallthru)
(note 19 18 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 20 19 21 4 init/do_mounts.c:294 (set (reg:SI 146)
        (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x121b28c0>)) -1 (nil))

(insn 21 20 22 4 init/do_mounts.c:294 (set (reg:SI 0 r0)
        (reg:SI 146)) -1 (nil))

(call_insn 22 21 23 4 init/do_mounts.c:294 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sys_chdir") [flags 0x41] <function_decl 0x12110280 sys_chdir>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 23 22 24 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 135 [ sp.83 ])
        (reg/v:SI 13 sp [ sp ])) -1 (nil))

(insn 24 23 25 4 init/do_mounts.c:295 (set (reg:SI 148)
        (and:SI (reg:SI 135 [ sp.83 ])
            (const_int -8129 [0xffffffffffffe03f]))) -1 (nil))

(insn 25 24 26 4 init/do_mounts.c:295 (set (reg:SI 147)
        (and:SI (reg:SI 148)
            (const_int -64 [0xffffffffffffffc0]))) -1 (expr_list:REG_EQUAL (and:SI (reg:SI 135 [ sp.83 ])
            (const_int -8192 [0xffffffffffffe000]))
        (nil)))

(insn 26 25 27 4 init/do_mounts.c:295 (set (reg/f:SI 149)
        (mem/s/f/j:SI (plus:SI (reg:SI 147)
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) -1 (nil))

(insn 27 26 28 4 init/do_mounts.c:295 (set (reg/f:SI 150)
        (mem/s/f/j:SI (plus:SI (reg/f:SI 149)
                (const_int 924 [0x39c])) [0 <variable>.fs+0 S4 A32])) -1 (nil))

(insn 28 27 29 4 init/do_mounts.c:295 (set (reg/f:SI 151)
        (mem/s/f/j:SI (plus:SI (reg/f:SI 150)
                (const_int 32 [0x20])) [0 <variable>.pwd.mnt+0 S4 A32])) -1 (nil))

(insn 29 28 30 4 init/do_mounts.c:295 (set (reg/f:SI 152)
        (mem/s/f/j:SI (plus:SI (reg/f:SI 151)
                (const_int 20 [0x14])) [0 <variable>.mnt_sb+0 S4 A32])) -1 (nil))

(insn 30 29 31 4 init/do_mounts.c:295 (set (reg:SI 139 [ ROOT_DEV.894 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 152)
                (const_int 8 [0x8])) [0 <variable>.s_dev+0 S4 A64])) -1 (nil))

(insn 31 30 32 4 init/do_mounts.c:295 (set (reg/f:SI 153)
        (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])) -1 (nil))

(insn 32 31 33 4 init/do_mounts.c:295 (set (mem/c/i:SI (reg/f:SI 153) [0 ROOT_DEV+0 S4 A32])
        (reg:SI 139 [ ROOT_DEV.894 ])) -1 (nil))

(insn 33 32 34 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 134 [ sp.83 ])
        (reg/v:SI 13 sp [ sp ])) -1 (nil))

(insn 34 33 35 4 init/do_mounts.c:296 (set (reg:SI 155)
        (and:SI (reg:SI 134 [ sp.83 ])
            (const_int -8129 [0xffffffffffffe03f]))) -1 (nil))

(insn 35 34 36 4 init/do_mounts.c:296 (set (reg:SI 154)
        (and:SI (reg:SI 155)
            (const_int -64 [0xffffffffffffffc0]))) -1 (expr_list:REG_EQUAL (and:SI (reg:SI 134 [ sp.83 ])
            (const_int -8192 [0xffffffffffffe000]))
        (nil)))

(insn 36 35 37 4 init/do_mounts.c:296 (set (reg/f:SI 156)
        (mem/s/f/j:SI (plus:SI (reg:SI 154)
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) -1 (nil))

(insn 37 36 38 4 init/do_mounts.c:296 (set (reg/f:SI 157)
        (mem/s/f/j:SI (plus:SI (reg/f:SI 156)
                (const_int 924 [0x39c])) [0 <variable>.fs+0 S4 A32])) -1 (nil))

(insn 38 37 39 4 init/do_mounts.c:296 (set (reg/f:SI 158)
        (mem/s/f/j:SI (plus:SI (reg/f:SI 157)
                (const_int 32 [0x20])) [0 <variable>.pwd.mnt+0 S4 A32])) -1 (nil))

(insn 39 38 40 4 init/do_mounts.c:296 (set (reg/f:SI 159)
        (mem/s/f/j:SI (plus:SI (reg/f:SI 158)
                (const_int 20 [0x14])) [0 <variable>.mnt_sb+0 S4 A32])) -1 (nil))

(insn 40 39 41 4 init/do_mounts.c:296 (set (reg/f:SI 160)
        (mem/s/f/j:SI (plus:SI (reg/f:SI 159)
                (const_int 32 [0x20])) [0 <variable>.s_type+0 S4 A256])) -1 (nil))

(insn 41 40 42 4 init/do_mounts.c:296 (set (reg/f:SI 138 [ D.52856 ])
        (mem/s/f/j:SI (reg/f:SI 160) [0 <variable>.name+0 S4 A32])) -1 (nil))

(insn 42 41 43 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 133 [ sp.83 ])
        (reg/v:SI 13 sp [ sp ])) -1 (nil))

(insn 43 42 44 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 162)
        (and:SI (reg:SI 133 [ sp.83 ])
            (const_int -8129 [0xffffffffffffe03f]))) -1 (nil))

(insn 44 43 45 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 161)
        (and:SI (reg:SI 162)
            (const_int -64 [0xffffffffffffffc0]))) -1 (expr_list:REG_EQUAL (and:SI (reg:SI 133 [ sp.83 ])
            (const_int -8192 [0xffffffffffffe000]))
        (nil)))

(insn 45 44 46 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 163)
        (mem/s/f/j:SI (plus:SI (reg:SI 161)
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) -1 (nil))

(insn 46 45 47 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 164)
        (mem/s/f/j:SI (plus:SI (reg/f:SI 163)
                (const_int 924 [0x39c])) [0 <variable>.fs+0 S4 A32])) -1 (nil))

(insn 47 46 48 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 165)
        (mem/s/f/j:SI (plus:SI (reg/f:SI 164)
                (const_int 32 [0x20])) [0 <variable>.pwd.mnt+0 S4 A32])) -1 (nil))

(insn 48 47 49 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 166)
        (mem/s/f/j:SI (plus:SI (reg/f:SI 165)
                (const_int 20 [0x14])) [0 <variable>.mnt_sb+0 S4 A32])) -1 (nil))

(insn 49 48 50 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 168)
        (mem/s/j:SI (plus:SI (reg/f:SI 166)
                (const_int 52 [0x34])) [0 <variable>.s_flags+0 S4 A32])) -1 (nil))

(insn 50 49 51 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 167)
        (and:SI (reg:SI 168)
            (const_int 1 [0x1]))) -1 (nil))

(insn 51 50 52 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 167)
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 52 51 53 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 57)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 4 -> ( 6 5)

;; Succ edge  6 [50.0%] 
;; Succ edge  5 [50.0%]  (fallthru)

;; Start of basic block ( 4) -> 5
;; Pred edge  4 [50.0%]  (fallthru)
(note 53 52 54 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 54 53 55 5 init/do_mounts.c:296 discrim 2 (set (reg/f:SI 137 [ iftmp.895 ])
        (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x121b9920>)) -1 (nil))

(jump_insn 55 54 56 5 init/do_mounts.c:296 discrim 2 (set (pc)
        (label_ref 60)) -1 (nil))
;; End of basic block 5 -> ( 7)

;; Succ edge  7 [100.0%] 

(barrier 56 55 57)

;; Start of basic block ( 4) -> 6
;; Pred edge  4 [50.0%] 
(code_label 57 56 58 6 41 "" [1 uses])

(note 58 57 59 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 59 58 60 6 init/do_mounts.c:296 discrim 1 (set (reg/f:SI 137 [ iftmp.895 ])
        (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x1217b540>)) -1 (nil))
;; End of basic block 6 -> ( 7)

;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 6 5) -> 7
;; Pred edge  6 [100.0%]  (fallthru)
;; Pred edge  5 [100.0%] 
(code_label 60 59 61 7 42 "" [1 uses])

(note 61 60 62 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 62 61 63 7 init/do_mounts.c:296 discrim 3 (set (reg:SI 169)
        (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x10bf1ea0>)) -1 (nil))

(insn 63 62 64 7 init/do_mounts.c:296 discrim 3 (set (reg:SI 170)
        (lshiftrt:SI (reg:SI 139 [ ROOT_DEV.894 ])
            (const_int 20 [0x14]))) -1 (nil))

(insn 64 63 65 7 init/do_mounts.c:296 discrim 3 (set (reg:SI 172)
        (and:SI (reg:SI 139 [ ROOT_DEV.894 ])
            (const_int 16777215 [0xffffff]))) -1 (nil))

(insn 65 64 66 7 init/do_mounts.c:296 discrim 3 (set (reg:SI 171)
        (and:SI (reg:SI 172)
            (const_int -15728641 [0xffffffffff0fffff]))) -1 (expr_list:REG_EQUAL (and:SI (reg:SI 139 [ ROOT_DEV.894 ])
            (const_int 1048575 [0xfffff]))
        (nil)))

(insn 66 65 67 7 init/do_mounts.c:296 discrim 3 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg:SI 171)) -1 (nil))

(insn 67 66 68 7 init/do_mounts.c:296 discrim 3 (set (reg:SI 0 r0)
        (reg:SI 169)) -1 (nil))

(insn 68 67 69 7 init/do_mounts.c:296 discrim 3 (set (reg:SI 1 r1)
        (reg/f:SI 138 [ D.52856 ])) -1 (nil))

(insn 69 68 70 7 init/do_mounts.c:296 discrim 3 (set (reg:SI 2 r2)
        (reg/f:SI 137 [ iftmp.895 ])) -1 (nil))

(insn 70 69 71 7 init/do_mounts.c:296 discrim 3 (set (reg:SI 3 r3)
        (reg:SI 170)) -1 (nil))

(call_insn 71 70 72 7 init/do_mounts.c:296 discrim 3 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 7 -> ( 8)

;; Succ edge  8 [100.0%]  (fallthru)

;; Start of basic block ( 3 7) -> 8
;; Pred edge  3 [100.0%] 
;; Pred edge  7 [100.0%]  (fallthru)
(code_label 72 71 73 8 40 "" [1 uses])

(note 73 72 74 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 74 73 75 8 init/do_mounts.c:302 (set (reg:SI 140 [ <result> ])
        (reg/v:SI 136 [ err ])) -1 (nil))

(jump_insn 75 74 76 8 init/do_mounts.c:302 (set (pc)
        (label_ref 77)) -1 (nil))
;; End of basic block 8 -> ( 10)

;; Succ edge  10 [100.0%] 

(barrier 76 75 85)

;; Start of basic block () -> 9
(note 85 76 79 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 79 85 80 9 init/do_mounts.c:302 (clobber (reg/i:SI 0 r0)) -1 (nil))

(insn 80 79 81 9 init/do_mounts.c:302 (clobber (reg:SI 140 [ <result> ])) -1 (nil))

(jump_insn 81 80 82 9 init/do_mounts.c:302 (set (pc)
        (label_ref 83)) -1 (nil))
;; End of basic block 9 -> ( 11)

;; Succ edge  11 [100.0%] 

(barrier 82 81 77)

;; Start of basic block ( 8) -> 10
;; Pred edge  8 [100.0%] 
(code_label 77 82 86 10 39 "" [1 uses])

(note 86 77 78 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 78 86 83 10 init/do_mounts.c:302 (set (reg/i:SI 0 r0)
        (reg:SI 140 [ <result> ])) -1 (nil))
;; End of basic block 10 -> ( 11)

;; Succ edge  11 [100.0%]  (fallthru)

;; Start of basic block ( 9 10) -> 11
;; Pred edge  9 [100.0%] 
;; Pred edge  10 [100.0%]  (fallthru)
(code_label 83 78 87 11 43 "" [1 uses])

(note 87 83 84 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 84 87 0 11 init/do_mounts.c:302 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 11 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function mount_block_root (mount_block_root)[0:2715] (unlikely executed)

Partition 0: size 32 align 4
	b, offset 0

;; Generating RTL for gimple basic block 2

;; D.52889 = kmem_cache_alloc (names_cachep, 208);

(insn 35 34 36 init/do_mounts.c:306 (set (reg/f:SI 181)
        (symbol_ref:SI ("names_cachep") [flags 0xc0] <var_decl 0x1114f6c0 names_cachep>)) -1 (nil))

(insn 36 35 37 init/do_mounts.c:306 (set (reg:SI 0 r0)
        (mem/f/c/i:SI (reg/f:SI 181) [0 names_cachep+0 S4 A32])) -1 (nil))

(insn 37 36 38 init/do_mounts.c:306 (set (reg:SI 1 r1)
        (const_int 208 [0xd0])) -1 (nil))

(call_insn 38 37 39 init/do_mounts.c:306 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("kmem_cache_alloc") [flags 0x41] <function_decl 0x11479e80 kmem_cache_alloc>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 39 38 0 init/do_mounts.c:306 (set (reg/f:SI 178 [ D.52889 ])
        (reg:SI 0 r0)) -1 (nil))

;; fs_names = (char *) D.52889;

(insn 40 39 0 init/do_mounts.c:306 (set (reg/v/f:SI 175 [ fs_names ])
        (reg/f:SI 178 [ D.52889 ])) -1 (nil))

;; root_fs_names.889 = root_fs_names;

(insn 41 40 42 init/do_mounts.c:265 (set (reg/f:SI 182)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) -1 (nil))

(insn 42 41 0 init/do_mounts.c:265 (set (reg/f:SI 169 [ root_fs_names.889 ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 182)
                (const_int 8 [0x8])) [0 root_fs_names+0 S4 A32])) -1 (nil))

;; if (root_fs_names.889 != 0B)

(insn 43 42 44 init/do_mounts.c:265 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 169 [ root_fs_names.889 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 44 43 0 init/do_mounts.c:265 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 4 [0x4])
        (nil)))

;; Generating RTL for gimple basic block 3

;; strcpy (fs_names, root_fs_names.889);

(insn 46 45 47 init/do_mounts.c:266 (set (reg:SI 0 r0)
        (reg/v/f:SI 175 [ fs_names ])) -1 (nil))

(insn 47 46 48 init/do_mounts.c:266 (set (reg:SI 1 r1)
        (reg/f:SI 169 [ root_fs_names.889 ])) -1 (nil))

(call_insn 48 47 0 init/do_mounts.c:266 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcpy") [flags 0x41] <function_decl 0x51157780 strcpy>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

;; fs_names.1168 = fs_names;

(insn 49 48 0 init/do_mounts.c:263 (set (reg/v/f:SI 166 [ fs_names.1168 ])
        (reg/v/f:SI 175 [ fs_names ])) -1 (nil))

;; Generating RTL for gimple basic block 4

;; if (D.53045 == 44)

(insn 53 52 54 init/do_mounts.c:268 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 170 [ D.53045 ])
            (const_int 44 [0x2c]))) -1 (nil))

(jump_insn 54 53 0 init/do_mounts.c:268 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
        (nil)))

;; Generating RTL for gimple basic block 5

;; MEM[base: fs_names.1168, offset: 4294967295] = 0;

(insn 56 55 57 init/do_mounts.c:269 (set (reg:SI 183)
        (const_int 0 [0x0])) -1 (nil))

(insn 57 56 58 init/do_mounts.c:269 (set (reg:QI 184)
        (subreg:QI (reg:SI 183) 0)) -1 (nil))

(insn 58 57 0 init/do_mounts.c:269 (set (mem:QI (plus:SI (reg/v/f:SI 166 [ fs_names.1168 ])
                (const_int -1 [0xffffffffffffffff])) [0 S1 A8])
        (reg:QI 184)) -1 (nil))

;; Generating RTL for gimple basic block 6

;; 

(code_label 59 58 60 49 "" [0 uses])

(note 60 59 0 NOTE_INSN_BASIC_BLOCK)

;; D.53045 = MEM[base: fs_names.1168];

(insn 61 60 0 init/do_mounts.c:267 discrim 1 (set (reg:SI 170 [ D.53045 ])
        (zero_extend:SI (mem:QI (reg/v/f:SI 166 [ fs_names.1168 ]) [0 S1 A8]))) -1 (nil))

;; fs_names.1168 = fs_names.1168 + 1;

(insn 62 61 0 init/do_mounts.c:267 discrim 1 (set (reg/v/f:SI 166 [ fs_names.1168 ])
        (plus:SI (reg/v/f:SI 166 [ fs_names.1168 ])
            (const_int 1 [0x1]))) -1 (nil))

;; if (D.53045 != 0)

(insn 64 62 65 6 init/do_mounts.c:267 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 170 [ D.53045 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 65 64 68 6 init/do_mounts.c:267 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 63)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
        (nil)))

(note 68 65 66 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(jump_insn 66 68 67 28 init/do_mounts.c:267 discrim 1 (set (pc)
        (label_ref 0)) -1 (nil))

(barrier 67 66 0)

;; Generating RTL for gimple basic block 7

;; 

(code_label 69 67 70 48 "" [0 uses])

(note 70 69 0 NOTE_INSN_BASIC_BLOCK)

;; len = get_filesystem_list (fs_names);

(insn 71 70 72 init/do_mounts.c:272 (set (reg:SI 0 r0)
        (reg/v/f:SI 175 [ fs_names ])) -1 (nil))

(call_insn 72 71 73 init/do_mounts.c:272 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("get_filesystem_list") [flags 0x41] <function_decl 0x1118fb80 get_filesystem_list>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 73 72 0 init/do_mounts.c:272 (set (reg/v:SI 171 [ len ])
        (reg:SI 0 r0)) -1 (nil))

;; *(fs_names + (unsigned int) len) = 0;

(insn 74 73 75 init/do_mounts.c:275 (set (reg:SI 185)
        (const_int 0 [0x0])) -1 (nil))

(insn 75 74 76 init/do_mounts.c:275 (set (reg:QI 186)
        (subreg:QI (reg:SI 185) 0)) -1 (nil))

(insn 76 75 0 init/do_mounts.c:275 (set (mem:QI (plus:SI (reg/v/f:SI 175 [ fs_names ])
                (reg/v:SI 171 [ len ])) [0 S1 A8])
        (reg:QI 186)) -1 (nil))

;; p = fs_names + -1;

(insn 77 76 0 init/do_mounts.c:276 (set (reg/v/f:SI 172 [ p ])
        (plus:SI (reg/v/f:SI 175 [ fs_names ])
            (const_int -1 [0xffffffffffffffff]))) -1 (nil))

;; fs_names.1168 = fs_names;

(insn 78 77 0 init/do_mounts.c:263 (set (reg/v/f:SI 166 [ fs_names.1168 ])
        (reg/v/f:SI 175 [ fs_names ])) -1 (nil))

;; Generating RTL for gimple basic block 8

;; p.1169 = p + 1;

(insn 82 81 0 init/do_mounts.c:277 (set (reg/v/f:SI 165 [ p.1169 ])
        (plus:SI (reg/v/f:SI 172 [ p ])
            (const_int 1 [0x1]))) -1 (nil))

;; p.1170 = strchr (p.1169, 10);

(insn 83 82 84 init/do_mounts.c:277 (set (reg:SI 0 r0)
        (reg/v/f:SI 165 [ p.1169 ])) -1 (nil))

(insn 84 83 85 init/do_mounts.c:277 (set (reg:SI 1 r1)
        (const_int 10 [0xa])) -1 (nil))

(call_insn/i 85 84 86 init/do_mounts.c:277 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strchr") [flags 0x41] <function_decl 0x51157580 strchr>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 86 85 87 init/do_mounts.c:277 (set (reg:SI 187)
        (reg:SI 0 r0)) -1 (nil))

(insn 87 86 0 init/do_mounts.c:277 (set (reg/v/f:SI 164 [ p.1170 ])
        (reg:SI 187)) -1 (nil))

;; if (*p.1169 != 9)

(insn 88 87 89 init/do_mounts.c:278 (set (reg:SI 188)
        (zero_extend:SI (mem:QI (reg/v/f:SI 165 [ p.1169 ]) [0 S1 A8]))) -1 (nil))

(insn 89 88 90 init/do_mounts.c:278 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 188)
            (const_int 9 [0x9]))) -1 (nil))

(jump_insn 90 89 0 init/do_mounts.c:278 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 2800 [0xaf0])
        (nil)))

;; Generating RTL for gimple basic block 9

;; fs_names.1172 = fs_names.1168;

(insn 92 91 0 init/do_mounts.c:278 (set (reg/v/f:SI 162 [ fs_names.1172 ])
        (reg/v/f:SI 166 [ fs_names.1168 ])) -1 (nil))

;; Generating RTL for gimple basic block 10

;; 

(code_label 95 94 96 53 "" [0 uses])

(note 96 95 0 NOTE_INSN_BASIC_BLOCK)

;; ivtmp.1163 = (unsigned int) p;

(insn 97 96 0 init/do_mounts.c:278 (set (reg:SI 168 [ ivtmp.1163 ])
        (reg/v/f:SI 172 [ p ])) -1 (nil))

;; Generating RTL for gimple basic block 11

;; temp.1171 = MEM[index: ivtmp.1163, offset: 2];

(insn 99 98 0 init/do_mounts.c:280 discrim 1 (set (reg:SI 163 [ temp.1171 ])
        (zero_extend:SI (mem:QI (plus:SI (reg:SI 168 [ ivtmp.1163 ])
                    (const_int 2 [0x2])) [0 S1 A8]))) -1 (nil))

;; MEM[base: fs_names.1168] = temp.1171;

(insn 100 99 101 init/do_mounts.c:280 discrim 1 (set (reg:QI 189)
        (subreg/s/u:QI (reg:SI 163 [ temp.1171 ]) 0)) -1 (nil))

(insn 101 100 0 init/do_mounts.c:280 discrim 1 (set (mem:QI (reg/v/f:SI 166 [ fs_names.1168 ]) [0 S1 A8])
        (reg:QI 189)) -1 (nil))

;; fs_names.1172 = fs_names.1168 + 1;

(insn 102 101 0 init/do_mounts.c:280 discrim 1 (set (reg/v/f:SI 162 [ fs_names.1172 ])
        (plus:SI (reg/v/f:SI 166 [ fs_names.1168 ])
            (const_int 1 [0x1]))) -1 (nil))

;; ivtmp.1163 = ivtmp.1163 + 1;

(insn 103 102 0 init/do_mounts.c:280 discrim 1 (set (reg:SI 168 [ ivtmp.1163 ])
        (plus:SI (reg:SI 168 [ ivtmp.1163 ])
            (const_int 1 [0x1]))) -1 (nil))

;; fs_names.1173 = fs_names.1168;

(insn 104 103 0 init/do_mounts.c:280 discrim 1 (set (reg/v/f:SI 161 [ fs_names.1173 ])
        (reg/v/f:SI 166 [ fs_names.1168 ])) -1 (nil))

;; fs_names.1168 = fs_names.1172;

(insn 105 104 0 init/do_mounts.c:280 discrim 1 (set (reg/v/f:SI 166 [ fs_names.1168 ])
        (reg/v/f:SI 162 [ fs_names.1172 ])) -1 (nil))

;; if (temp.1171 != 10)

(insn 107 105 108 init/do_mounts.c:280 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 163 [ temp.1171 ])
            (const_int 10 [0xa]))) -1 (nil))

(jump_insn 108 107 0 init/do_mounts.c:280 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 106)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 8600 [0x2198])
        (nil)))

;; Generating RTL for gimple basic block 12

;; fs_names.1168 = fs_names.1173;

(insn 110 109 0 init/do_mounts.c:280 discrim 1 (set (reg/v/f:SI 166 [ fs_names.1168 ])
        (reg/v/f:SI 161 [ fs_names.1173 ])) -1 (nil))

;; *fs_names.1168 = 0;

(insn 111 110 112 init/do_mounts.c:282 (set (reg:SI 190)
        (const_int 0 [0x0])) -1 (nil))

(insn 112 111 113 init/do_mounts.c:282 (set (reg:QI 191)
        (subreg:QI (reg:SI 190) 0)) -1 (nil))

(insn 113 112 0 init/do_mounts.c:282 (set (mem:QI (reg/v/f:SI 166 [ fs_names.1168 ]) [0 S1 A8])
        (reg:QI 191)) -1 (nil))

;; Generating RTL for gimple basic block 13

;; 

(code_label 114 113 115 54 "" [0 uses])

(note 115 114 0 NOTE_INSN_BASIC_BLOCK)

;; p = p.1170;

(insn 116 115 0 init/do_mounts.c:282 (set (reg/v/f:SI 172 [ p ])
        (reg/v/f:SI 164 [ p.1170 ])) -1 (nil))

;; fs_names.1168 = fs_names.1172;

(insn 117 116 0 init/do_mounts.c:282 (set (reg/v/f:SI 166 [ fs_names.1168 ])
        (reg/v/f:SI 162 [ fs_names.1172 ])) -1 (nil))

;; Generating RTL for gimple basic block 14

;; 

(code_label 118 117 119 52 "" [0 uses])

(note 119 118 0 NOTE_INSN_BASIC_BLOCK)

;; if (p != 0B)

(insn 121 119 122 init/do_mounts.c:276 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 172 [ p ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 122 121 0 init/do_mounts.c:276 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 120)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
        (nil)))

;; Generating RTL for gimple basic block 15

;; 

(code_label 123 122 124 51 "" [0 uses])

(note 124 123 0 NOTE_INSN_BASIC_BLOCK)

;; *fs_names.1168 = 0;

(insn 125 124 126 init/do_mounts.c:285 (set (reg:SI 192)
        (const_int 0 [0x0])) -1 (nil))

(insn 126 125 127 init/do_mounts.c:285 (set (reg:QI 193)
        (subreg:QI (reg:SI 192) 0)) -1 (nil))

(insn 127 126 0 init/do_mounts.c:285 (set (mem:QI (reg/v/f:SI 166 [ fs_names.1168 ]) [0 S1 A8])
        (reg:QI 193)) -1 (nil))

;; Generating RTL for gimple basic block 16

;; retry:

(code_label 128 127 129 57 ("retry") [0 uses])

(note 129 128 0 NOTE_INSN_BASIC_BLOCK)

;; p = fs_names;

(insn 130 129 0 init/do_mounts.c:317 (set (reg/v/f:SI 174 [ p ])
        (reg/v/f:SI 175 [ fs_names ])) -1 (nil))

;; Generating RTL for gimple basic block 17

;; err = do_mount_root (name, p, flags, root_mount_data);

(insn 134 133 135 init/do_mounts.c:318 (set (reg/f:SI 194)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) -1 (nil))

(insn 135 134 136 init/do_mounts.c:318 (set (reg:SI 0 r0)
        (reg/v/f:SI 179 [ name ])) -1 (nil))

(insn 136 135 137 init/do_mounts.c:318 (set (reg:SI 1 r1)
        (reg/v/f:SI 174 [ p ])) -1 (nil))

(insn 137 136 138 init/do_mounts.c:318 (set (reg:SI 2 r2)
        (reg/v:SI 180 [ flags ])) -1 (nil))

(insn 138 137 139 init/do_mounts.c:318 (set (reg:SI 3 r3)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 194)
                (const_int 4 [0x4])) [0 root_mount_data+0 S4 A32])) -1 (nil))

(call_insn 139 138 140 init/do_mounts.c:318 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("do_mount_root") [flags 0x3] <function_decl 0x12135c00 do_mount_root>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 140 139 0 init/do_mounts.c:318 (set (reg/v:SI 173 [ err ])
        (reg:SI 0 r0)) -1 (nil))

;; switch (err) <default: <L5>, case -22: <L4>, case -13: <L3>, case 0: out>

(insn 141 140 142 init/do_mounts.c:319 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 173 [ err ])
            (const_int -13 [0xfffffffffffffff3]))) -1 (nil))

(jump_insn 142 141 143 init/do_mounts.c:319 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (nil))

(insn 143 142 144 init/do_mounts.c:319 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 173 [ err ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 144 143 145 init/do_mounts.c:319 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (nil))

(insn 145 144 146 init/do_mounts.c:319 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 173 [ err ])
            (const_int -22 [0xffffffffffffffea]))) -1 (nil))

(jump_insn 146 145 147 init/do_mounts.c:319 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (nil))

(jump_insn 147 146 148 init/do_mounts.c:319 (set (pc)
        (label_ref 0)) -1 (nil))

(barrier 148 147 0)

;; Generating RTL for gimple basic block 18

;; <L3>:

(code_label 149 148 150 61 "" [0 uses])

(note 150 149 0 NOTE_INSN_BASIC_BLOCK)

;; flags = flags | 1;

(insn 151 150 0 init/do_mounts.c:323 (set (reg/v:SI 180 [ flags ])
        (ior:SI (reg/v:SI 180 [ flags ])
            (const_int 1 [0x1]))) -1 (nil))

;; Generating RTL for gimple basic block 19

;; <L4>:

(code_label 154 153 155 60 "" [0 uses])

(note 155 154 0 NOTE_INSN_BASIC_BLOCK)

;; D.52895 = strlen (p);

(insn 156 155 157 init/do_mounts.c:317 (set (reg:SI 0 r0)
        (reg/v/f:SI 174 [ p ])) -1 (nil))

(call_insn/i 157 156 158 init/do_mounts.c:317 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strlen") [flags 0x41] <function_decl 0x51157b80 strlen>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 158 157 159 init/do_mounts.c:317 (set (reg:SI 195)
        (reg:SI 0 r0)) -1 (nil))

(insn 159 158 0 init/do_mounts.c:317 (set (reg:SI 177 [ D.52895 ])
        (reg:SI 195)) -1 (nil))

;; p = p + (D.52895 + 1);

(insn 160 159 161 init/do_mounts.c:317 (set (reg:SI 196)
        (plus:SI (reg:SI 177 [ D.52895 ])
            (const_int 1 [0x1]))) -1 (nil))

(insn 161 160 0 init/do_mounts.c:317 (set (reg/v/f:SI 174 [ p ])
        (plus:SI (reg/v/f:SI 174 [ p ])
            (reg:SI 196))) -1 (nil))

;; Generating RTL for gimple basic block 20

;; <L5>:

(code_label 164 163 165 59 "" [0 uses])

(note 165 164 0 NOTE_INSN_BASIC_BLOCK)

;; __bdevname (ROOT_DEV, &b);

(insn 166 165 167 init/do_mounts.c:334 (set (reg/f:SI 197)
        (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])) -1 (nil))

(insn 167 166 168 init/do_mounts.c:334 (set (reg:SI 198)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -32 [0xffffffffffffffe0]))) -1 (nil))

(insn 168 167 169 init/do_mounts.c:334 (set (reg:SI 0 r0)
        (mem/c/i:SI (reg/f:SI 197) [0 ROOT_DEV+0 S4 A32])) -1 (nil))

(insn 169 168 170 init/do_mounts.c:334 (set (reg:SI 1 r1)
        (reg:SI 198)) -1 (nil))

(call_insn 170 169 0 init/do_mounts.c:334 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__bdevname") [flags 0x41] <function_decl 0x1115b800 __bdevname>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

;; printk (&"VFS: Cannot open root device \"%s\" or %s\n"[0], root_device_name, &b);

(insn 171 170 172 init/do_mounts.c:336 (set (reg:SI 199)
        (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x121779b0>)) -1 (nil))

(insn 172 171 173 init/do_mounts.c:336 (set (reg/f:SI 200)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) -1 (nil))

(insn 173 172 174 init/do_mounts.c:336 (set (reg:SI 201)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -32 [0xffffffffffffffe0]))) -1 (nil))

(insn 174 173 175 init/do_mounts.c:336 (set (reg:SI 0 r0)
        (reg:SI 199)) -1 (nil))

(insn 175 174 176 init/do_mounts.c:336 (set (reg:SI 1 r1)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 200)
                (const_int 84 [0x54])) [0 root_device_name+0 S4 A32])) -1 (nil))

(insn 176 175 177 init/do_mounts.c:336 (set (reg:SI 2 r2)
        (reg:SI 201)) -1 (nil))

(call_insn 177 176 0 init/do_mounts.c:336 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

;; printk (&"Please append a correct \"root=\" boot option; here are the available partitions:\n"[0]);

(insn 178 177 179 init/do_mounts.c:338 (set (reg:SI 202)
        (symbol_ref/v/f:SI ("*.LC5") [flags 0x82] <string_cst 0x121c2770>)) -1 (nil))

(insn 179 178 180 init/do_mounts.c:338 (set (reg:SI 0 r0)
        (reg:SI 202)) -1 (nil))

(call_insn 180 179 0 init/do_mounts.c:338 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

;; printk_all_partitions ();

(call_insn 181 180 0 init/do_mounts.c:340 (parallel [
            (call (mem:SI (symbol_ref:SI ("printk_all_partitions") [flags 0x41] <function_decl 0x115c3e80 printk_all_partitions>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (nil))

;; panic (&"VFS: Unable to mount root fs on %s"[0], &b);

(insn 182 181 183 init/do_mounts.c:345 (set (reg:SI 203)
        (symbol_ref/v/f:SI ("*.LC6") [flags 0x82] <string_cst 0x1218bb00>)) -1 (nil))

(insn 183 182 184 init/do_mounts.c:345 (set (reg:SI 204)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -32 [0xffffffffffffffe0]))) -1 (nil))

(insn 184 183 185 init/do_mounts.c:345 (set (reg:SI 0 r0)
        (reg:SI 203)) -1 (nil))

(insn 185 184 186 init/do_mounts.c:345 (set (reg:SI 1 r1)
        (reg:SI 204)) -1 (nil))

(call_insn 186 185 187 init/do_mounts.c:345 (parallel [
            (call (mem:SI (symbol_ref:SI ("panic") [flags 0x41] <function_decl 0x10a67680 panic>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (expr_list:REG_NORETURN (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(barrier 187 186 0)

;; Generating RTL for gimple basic block 21

;; 

(code_label 188 187 189 58 "" [0 uses])

(note 189 188 0 NOTE_INSN_BASIC_BLOCK)

;; if (*p != 0)

(insn 191 189 192 init/do_mounts.c:317 discrim 1 (set (reg:SI 205)
        (zero_extend:SI (mem:QI (reg/v/f:SI 174 [ p ]) [0 S1 A8]))) -1 (nil))

(insn 192 191 193 init/do_mounts.c:317 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 205)
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 193 192 0 init/do_mounts.c:317 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 190)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))

;; Generating RTL for gimple basic block 22

;; printk (&"List of all partitions:\n"[0]);

(insn 195 194 196 init/do_mounts.c:348 (set (reg:SI 206)
        (symbol_ref/v/f:SI ("*.LC7") [flags 0x82] <string_cst 0x1218bb40>)) -1 (nil))

(insn 196 195 197 init/do_mounts.c:348 (set (reg:SI 0 r0)
        (reg:SI 206)) -1 (nil))

(call_insn 197 196 0 init/do_mounts.c:348 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

;; printk_all_partitions ();

(call_insn 198 197 0 init/do_mounts.c:349 (parallel [
            (call (mem:SI (symbol_ref:SI ("printk_all_partitions") [flags 0x41] <function_decl 0x115c3e80 printk_all_partitions>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (nil))

;; printk (&"No filesystem could mount root, tried: "[0]);

(insn 199 198 200 init/do_mounts.c:350 (set (reg:SI 207)
        (symbol_ref/v/f:SI ("*.LC8") [flags 0x82] <string_cst 0x12177a00>)) -1 (nil))

(insn 200 199 201 init/do_mounts.c:350 (set (reg:SI 0 r0)
        (reg:SI 207)) -1 (nil))

(call_insn 201 200 0 init/do_mounts.c:350 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

;; p.1164 = fs_names;

(insn 202 201 0 init/do_mounts.c:351 (set (reg/v/f:SI 167 [ p.1164 ])
        (reg/v/f:SI 175 [ fs_names ])) -1 (nil))

;; Generating RTL for gimple basic block 23

;; printk (&" %s"[0], p.1164);

(insn 206 205 207 init/do_mounts.c:352 (set (reg:SI 208)
        (symbol_ref/v/f:SI ("*.LC9") [flags 0x82] <string_cst 0x121ccfe0>)) -1 (nil))

(insn 207 206 208 init/do_mounts.c:352 (set (reg:SI 0 r0)
        (reg:SI 208)) -1 (nil))

(insn 208 207 209 init/do_mounts.c:352 (set (reg:SI 1 r1)
        (reg/v/f:SI 167 [ p.1164 ])) -1 (nil))

(call_insn 209 208 0 init/do_mounts.c:352 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

;; D.52898 = strlen (p.1164);

(insn 210 209 211 init/do_mounts.c:351 discrim 2 (set (reg:SI 0 r0)
        (reg/v/f:SI 167 [ p.1164 ])) -1 (nil))

(call_insn/i 211 210 212 init/do_mounts.c:351 discrim 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strlen") [flags 0x41] <function_decl 0x51157b80 strlen>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 212 211 213 init/do_mounts.c:351 discrim 2 (set (reg:SI 209)
        (reg:SI 0 r0)) -1 (nil))

(insn 213 212 0 init/do_mounts.c:351 discrim 2 (set (reg:SI 176 [ D.52898 ])
        (reg:SI 209)) -1 (nil))

;; p.1164 = p.1164 + (D.52898 + 1);

(insn 214 213 215 init/do_mounts.c:351 discrim 2 (set (reg:SI 210)
        (plus:SI (reg:SI 176 [ D.52898 ])
            (const_int 1 [0x1]))) -1 (nil))

(insn 215 214 0 init/do_mounts.c:351 discrim 2 (set (reg/v/f:SI 167 [ p.1164 ])
        (plus:SI (reg/v/f:SI 167 [ p.1164 ])
            (reg:SI 210))) -1 (nil))

;; Generating RTL for gimple basic block 24

;; 

(code_label 216 215 217 64 "" [0 uses])

(note 217 216 0 NOTE_INSN_BASIC_BLOCK)

;; if (*p.1164 != 0)

(insn 219 217 220 init/do_mounts.c:351 discrim 1 (set (reg:SI 211)
        (zero_extend:SI (mem:QI (reg/v/f:SI 167 [ p.1164 ]) [0 S1 A8]))) -1 (nil))

(insn 220 219 221 init/do_mounts.c:351 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 211)
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 221 220 0 init/do_mounts.c:351 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 218)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 4 [0x4])
        (nil)))

;; Generating RTL for gimple basic block 25

;; printk (&"\n"[0]);

(insn 223 222 224 init/do_mounts.c:353 (set (reg:SI 212)
        (symbol_ref/v/f:SI ("*.LC10") [flags 0x82] <string_cst 0x121ccf60>)) -1 (nil))

(insn 224 223 225 init/do_mounts.c:353 (set (reg:SI 0 r0)
        (reg:SI 212)) -1 (nil))

(call_insn 225 224 0 init/do_mounts.c:353 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

;; __bdevname (ROOT_DEV, &b);

(insn 226 225 227 init/do_mounts.c:355 (set (reg/f:SI 213)
        (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])) -1 (nil))

(insn 227 226 228 init/do_mounts.c:355 (set (reg:SI 214)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -32 [0xffffffffffffffe0]))) -1 (nil))

(insn 228 227 229 init/do_mounts.c:355 (set (reg:SI 0 r0)
        (mem/c/i:SI (reg/f:SI 213) [0 ROOT_DEV+0 S4 A32])) -1 (nil))

(insn 229 228 230 init/do_mounts.c:355 (set (reg:SI 1 r1)
        (reg:SI 214)) -1 (nil))

(call_insn 230 229 0 init/do_mounts.c:355 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__bdevname") [flags 0x41] <function_decl 0x1115b800 __bdevname>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

;; panic (&"VFS: Unable to mount root fs on %s"[0], &b);

(insn 231 230 232 init/do_mounts.c:357 (set (reg:SI 215)
        (symbol_ref/v/f:SI ("*.LC6") [flags 0x82] <string_cst 0x1218bb00>)) -1 (nil))

(insn 232 231 233 init/do_mounts.c:357 (set (reg:SI 216)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -32 [0xffffffffffffffe0]))) -1 (nil))

(insn 233 232 234 init/do_mounts.c:357 (set (reg:SI 0 r0)
        (reg:SI 215)) -1 (nil))

(insn 234 233 235 init/do_mounts.c:357 (set (reg:SI 1 r1)
        (reg:SI 216)) -1 (nil))

(call_insn 235 234 236 init/do_mounts.c:357 (parallel [
            (call (mem:SI (symbol_ref:SI ("panic") [flags 0x41] <function_decl 0x10a67680 panic>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (expr_list:REG_NORETURN (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(barrier 236 235 0)

;; Generating RTL for gimple basic block 26

;; out:

(code_label 237 236 238 62 ("out") [0 uses])

(note 238 237 0 NOTE_INSN_BASIC_BLOCK)

;; kmem_cache_free (names_cachep, fs_names);

(insn 239 238 240 init/do_mounts.c:359 (set (reg/f:SI 217)
        (symbol_ref:SI ("names_cachep") [flags 0xc0] <var_decl 0x1114f6c0 names_cachep>)) -1 (nil))

(insn 240 239 241 init/do_mounts.c:359 (set (reg:SI 0 r0)
        (mem/f/c/i:SI (reg/f:SI 217) [0 names_cachep+0 S4 A32])) -1 (nil))

(insn 241 240 242 init/do_mounts.c:359 (set (reg:SI 1 r1)
        (reg/v/f:SI 175 [ fs_names ])) -1 (nil))

(call_insn 242 241 0 init/do_mounts.c:359 (parallel [
            (call (mem:SI (symbol_ref:SI ("kmem_cache_free") [flags 0x41] <function_decl 0x11460b00 kmem_cache_free>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
Purged edges from bb 32
Predictions for insn 142 bb 17
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  opcode values nonequal heuristics: 29.0%
Predictions for insn 144 bb 30
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for insn 146 bb 31
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  opcode values nonequal heuristics: 29.0%


;;
;; Full RTL generated for this function:
;;
(note 29 0 33 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 33 29 30 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 30 33 31 2 init/do_mounts.c:305 (set (reg/v/f:SI 179 [ name ])
        (reg:SI 0 r0 [ name ])) -1 (nil))

(insn 31 30 32 2 init/do_mounts.c:305 (set (reg/v:SI 180 [ flags ])
        (reg:SI 1 r1 [ flags ])) -1 (nil))

(note 32 31 34 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 3)

;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [100.0%]  (fallthru)
(note 34 32 35 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 35 34 36 3 init/do_mounts.c:306 (set (reg/f:SI 181)
        (symbol_ref:SI ("names_cachep") [flags 0xc0] <var_decl 0x1114f6c0 names_cachep>)) -1 (nil))

(insn 36 35 37 3 init/do_mounts.c:306 (set (reg:SI 0 r0)
        (mem/f/c/i:SI (reg/f:SI 181) [0 names_cachep+0 S4 A32])) -1 (nil))

(insn 37 36 38 3 init/do_mounts.c:306 (set (reg:SI 1 r1)
        (const_int 208 [0xd0])) -1 (nil))

(call_insn 38 37 39 3 init/do_mounts.c:306 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("kmem_cache_alloc") [flags 0x41] <function_decl 0x11479e80 kmem_cache_alloc>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 39 38 40 3 init/do_mounts.c:306 (set (reg/f:SI 178 [ D.52889 ])
        (reg:SI 0 r0)) -1 (nil))

(insn 40 39 41 3 init/do_mounts.c:306 (set (reg/v/f:SI 175 [ fs_names ])
        (reg/f:SI 178 [ D.52889 ])) -1 (nil))

(insn 41 40 42 3 init/do_mounts.c:265 (set (reg/f:SI 182)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) -1 (nil))

(insn 42 41 43 3 init/do_mounts.c:265 (set (reg/f:SI 169 [ root_fs_names.889 ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 182)
                (const_int 8 [0x8])) [0 root_fs_names+0 S4 A32])) -1 (nil))

(insn 43 42 44 3 init/do_mounts.c:265 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 169 [ root_fs_names.889 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 44 43 45 3 init/do_mounts.c:265 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 69)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 4 [0x4])
        (nil)))
;; End of basic block 3 -> ( 4 9)

;; Succ edge  4 [100.0%]  (fallthru)
;; Succ edge  9 [0.0%] 

;; Start of basic block ( 3) -> 4
;; Pred edge  3 [100.0%]  (fallthru)
(note 45 44 46 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 46 45 47 4 init/do_mounts.c:266 (set (reg:SI 0 r0)
        (reg/v/f:SI 175 [ fs_names ])) -1 (nil))

(insn 47 46 48 4 init/do_mounts.c:266 (set (reg:SI 1 r1)
        (reg/f:SI 169 [ root_fs_names.889 ])) -1 (nil))

(call_insn 48 47 49 4 init/do_mounts.c:266 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcpy") [flags 0x41] <function_decl 0x51157780 strcpy>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 49 48 50 4 init/do_mounts.c:263 (set (reg/v/f:SI 166 [ fs_names.1168 ])
        (reg/v/f:SI 175 [ fs_names ])) -1 (nil))

(jump_insn 50 49 51 4 init/do_mounts.c:263 (set (pc)
        (label_ref 59)) -1 (nil))
;; End of basic block 4 -> ( 7)

;; Succ edge  7 [100.0%] 

(barrier 51 50 63)

;; Start of basic block ( 7) -> 5
;; Pred edge  7 [91.0%] 
(code_label 63 51 52 5 50 "" [1 uses])

(note 52 63 53 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 53 52 54 5 init/do_mounts.c:268 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 170 [ D.53045 ])
            (const_int 44 [0x2c]))) -1 (nil))

(jump_insn 54 53 55 5 init/do_mounts.c:268 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 59)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
        (nil)))
;; End of basic block 5 -> ( 6 7)

;; Succ edge  6 [28.0%]  (fallthru)
;; Succ edge  7 [72.0%] 

;; Start of basic block ( 5) -> 6
;; Pred edge  5 [28.0%]  (fallthru)
(note 55 54 56 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 56 55 57 6 init/do_mounts.c:269 (set (reg:SI 183)
        (const_int 0 [0x0])) -1 (nil))

(insn 57 56 58 6 init/do_mounts.c:269 (set (reg:QI 184)
        (subreg:QI (reg:SI 183) 0)) -1 (nil))

(insn 58 57 59 6 init/do_mounts.c:269 (set (mem:QI (plus:SI (reg/v/f:SI 166 [ fs_names.1168 ])
                (const_int -1 [0xffffffffffffffff])) [0 S1 A8])
        (reg:QI 184)) -1 (nil))
;; End of basic block 6 -> ( 7)

;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 5 4 6) -> 7
;; Pred edge  5 [72.0%] 
;; Pred edge  4 [100.0%] 
;; Pred edge  6 [100.0%]  (fallthru)
(code_label 59 58 60 7 49 "" [2 uses])

(note 60 59 61 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 61 60 62 7 init/do_mounts.c:267 discrim 1 (set (reg:SI 170 [ D.53045 ])
        (zero_extend:SI (mem:QI (reg/v/f:SI 166 [ fs_names.1168 ]) [0 S1 A8]))) -1 (nil))

(insn 62 61 64 7 init/do_mounts.c:267 discrim 1 (set (reg/v/f:SI 166 [ fs_names.1168 ])
        (plus:SI (reg/v/f:SI 166 [ fs_names.1168 ])
            (const_int 1 [0x1]))) -1 (nil))

(insn 64 62 65 7 init/do_mounts.c:267 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 170 [ D.53045 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 65 64 68 7 init/do_mounts.c:267 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 63)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
        (nil)))
;; End of basic block 7 -> ( 5 8)

;; Succ edge  5 [91.0%] 
;; Succ edge  8 [9.0%]  (fallthru)

;; Start of basic block ( 7) -> 8
;; Pred edge  7 [9.0%]  (fallthru)
(note 68 65 66 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(jump_insn 66 68 67 8 init/do_mounts.c:267 discrim 1 (set (pc)
        (label_ref 123)) -1 (nil))
;; End of basic block 8 -> ( 17)

;; Succ edge  17 [100.0%] 

(barrier 67 66 69)

;; Start of basic block ( 3) -> 9
;; Pred edge  3 [0.0%] 
(code_label 69 67 70 9 48 "" [1 uses])

(note 70 69 71 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 71 70 72 9 init/do_mounts.c:272 (set (reg:SI 0 r0)
        (reg/v/f:SI 175 [ fs_names ])) -1 (nil))

(call_insn 72 71 73 9 init/do_mounts.c:272 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("get_filesystem_list") [flags 0x41] <function_decl 0x1118fb80 get_filesystem_list>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 73 72 74 9 init/do_mounts.c:272 (set (reg/v:SI 171 [ len ])
        (reg:SI 0 r0)) -1 (nil))

(insn 74 73 75 9 init/do_mounts.c:275 (set (reg:SI 185)
        (const_int 0 [0x0])) -1 (nil))

(insn 75 74 76 9 init/do_mounts.c:275 (set (reg:QI 186)
        (subreg:QI (reg:SI 185) 0)) -1 (nil))

(insn 76 75 77 9 init/do_mounts.c:275 (set (mem:QI (plus:SI (reg/v/f:SI 175 [ fs_names ])
                (reg/v:SI 171 [ len ])) [0 S1 A8])
        (reg:QI 186)) -1 (nil))

(insn 77 76 78 9 init/do_mounts.c:276 (set (reg/v/f:SI 172 [ p ])
        (plus:SI (reg/v/f:SI 175 [ fs_names ])
            (const_int -1 [0xffffffffffffffff]))) -1 (nil))

(insn 78 77 79 9 init/do_mounts.c:263 (set (reg/v/f:SI 166 [ fs_names.1168 ])
        (reg/v/f:SI 175 [ fs_names ])) -1 (nil))

(jump_insn 79 78 80 9 init/do_mounts.c:263 (set (pc)
        (label_ref 118)) -1 (nil))
;; End of basic block 9 -> ( 16)

;; Succ edge  16 [100.0%] 

(barrier 80 79 120)

;; Start of basic block ( 16) -> 10
;; Pred edge  16 [91.0%] 
(code_label 120 80 81 10 56 "" [1 uses])

(note 81 120 82 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 82 81 83 10 init/do_mounts.c:277 (set (reg/v/f:SI 165 [ p.1169 ])
        (plus:SI (reg/v/f:SI 172 [ p ])
            (const_int 1 [0x1]))) -1 (nil))

(insn 83 82 84 10 init/do_mounts.c:277 (set (reg:SI 0 r0)
        (reg/v/f:SI 165 [ p.1169 ])) -1 (nil))

(insn 84 83 85 10 init/do_mounts.c:277 (set (reg:SI 1 r1)
        (const_int 10 [0xa])) -1 (nil))

(call_insn/i 85 84 86 10 init/do_mounts.c:277 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strchr") [flags 0x41] <function_decl 0x51157580 strchr>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 86 85 87 10 init/do_mounts.c:277 (set (reg:SI 187)
        (reg:SI 0 r0)) -1 (nil))

(insn 87 86 88 10 init/do_mounts.c:277 (set (reg/v/f:SI 164 [ p.1170 ])
        (reg:SI 187)) -1 (nil))

(insn 88 87 89 10 init/do_mounts.c:278 (set (reg:SI 188)
        (zero_extend:SI (mem:QI (reg/v/f:SI 165 [ p.1169 ]) [0 S1 A8]))) -1 (nil))

(insn 89 88 90 10 init/do_mounts.c:278 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 188)
            (const_int 9 [0x9]))) -1 (nil))

(jump_insn 90 89 91 10 init/do_mounts.c:278 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 95)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 2800 [0xaf0])
        (nil)))
;; End of basic block 10 -> ( 11 12)

;; Succ edge  11 [72.0%]  (fallthru)
;; Succ edge  12 [28.0%] 

;; Start of basic block ( 10) -> 11
;; Pred edge  10 [72.0%]  (fallthru)
(note 91 90 92 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 92 91 93 11 init/do_mounts.c:278 (set (reg/v/f:SI 162 [ fs_names.1172 ])
        (reg/v/f:SI 166 [ fs_names.1168 ])) -1 (nil))

(jump_insn 93 92 94 11 init/do_mounts.c:278 (set (pc)
        (label_ref 114)) -1 (nil))
;; End of basic block 11 -> ( 15)

;; Succ edge  15 [100.0%] 

(barrier 94 93 95)

;; Start of basic block ( 10) -> 12
;; Pred edge  10 [28.0%] 
(code_label 95 94 96 12 53 "" [1 uses])

(note 96 95 97 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 97 96 106 12 init/do_mounts.c:278 (set (reg:SI 168 [ ivtmp.1163 ])
        (reg/v/f:SI 172 [ p ])) -1 (nil))
;; End of basic block 12 -> ( 13)

;; Succ edge  13 [100.0%]  (fallthru)

;; Start of basic block ( 12 13) -> 13
;; Pred edge  12 [100.0%]  (fallthru)
;; Pred edge  13 [86.0%]  (dfs_back)
(code_label 106 97 98 13 55 "" [1 uses])

(note 98 106 99 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 99 98 100 13 init/do_mounts.c:280 discrim 1 (set (reg:SI 163 [ temp.1171 ])
        (zero_extend:SI (mem:QI (plus:SI (reg:SI 168 [ ivtmp.1163 ])
                    (const_int 2 [0x2])) [0 S1 A8]))) -1 (nil))

(insn 100 99 101 13 init/do_mounts.c:280 discrim 1 (set (reg:QI 189)
        (subreg/s/u:QI (reg:SI 163 [ temp.1171 ]) 0)) -1 (nil))

(insn 101 100 102 13 init/do_mounts.c:280 discrim 1 (set (mem:QI (reg/v/f:SI 166 [ fs_names.1168 ]) [0 S1 A8])
        (reg:QI 189)) -1 (nil))

(insn 102 101 103 13 init/do_mounts.c:280 discrim 1 (set (reg/v/f:SI 162 [ fs_names.1172 ])
        (plus:SI (reg/v/f:SI 166 [ fs_names.1168 ])
            (const_int 1 [0x1]))) -1 (nil))

(insn 103 102 104 13 init/do_mounts.c:280 discrim 1 (set (reg:SI 168 [ ivtmp.1163 ])
        (plus:SI (reg:SI 168 [ ivtmp.1163 ])
            (const_int 1 [0x1]))) -1 (nil))

(insn 104 103 105 13 init/do_mounts.c:280 discrim 1 (set (reg/v/f:SI 161 [ fs_names.1173 ])
        (reg/v/f:SI 166 [ fs_names.1168 ])) -1 (nil))

(insn 105 104 107 13 init/do_mounts.c:280 discrim 1 (set (reg/v/f:SI 166 [ fs_names.1168 ])
        (reg/v/f:SI 162 [ fs_names.1172 ])) -1 (nil))

(insn 107 105 108 13 init/do_mounts.c:280 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 163 [ temp.1171 ])
            (const_int 10 [0xa]))) -1 (nil))

(jump_insn 108 107 109 13 init/do_mounts.c:280 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 106)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 8600 [0x2198])
        (nil)))
;; End of basic block 13 -> ( 13 14)

;; Succ edge  13 [86.0%]  (dfs_back)
;; Succ edge  14 [14.0%]  (fallthru)

;; Start of basic block ( 13) -> 14
;; Pred edge  13 [14.0%]  (fallthru)
(note 109 108 110 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 110 109 111 14 init/do_mounts.c:280 discrim 1 (set (reg/v/f:SI 166 [ fs_names.1168 ])
        (reg/v/f:SI 161 [ fs_names.1173 ])) -1 (nil))

(insn 111 110 112 14 init/do_mounts.c:282 (set (reg:SI 190)
        (const_int 0 [0x0])) -1 (nil))

(insn 112 111 113 14 init/do_mounts.c:282 (set (reg:QI 191)
        (subreg:QI (reg:SI 190) 0)) -1 (nil))

(insn 113 112 114 14 init/do_mounts.c:282 (set (mem:QI (reg/v/f:SI 166 [ fs_names.1168 ]) [0 S1 A8])
        (reg:QI 191)) -1 (nil))
;; End of basic block 14 -> ( 15)

;; Succ edge  15 [100.0%]  (fallthru)

;; Start of basic block ( 14 11) -> 15
;; Pred edge  14 [100.0%]  (fallthru)
;; Pred edge  11 [100.0%] 
(code_label 114 113 115 15 54 "" [1 uses])

(note 115 114 116 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 116 115 117 15 init/do_mounts.c:282 (set (reg/v/f:SI 172 [ p ])
        (reg/v/f:SI 164 [ p.1170 ])) -1 (nil))

(insn 117 116 118 15 init/do_mounts.c:282 (set (reg/v/f:SI 166 [ fs_names.1168 ])
        (reg/v/f:SI 162 [ fs_names.1172 ])) -1 (nil))
;; End of basic block 15 -> ( 16)

;; Succ edge  16 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 15 9) -> 16
;; Pred edge  15 [100.0%]  (fallthru,dfs_back)
;; Pred edge  9 [100.0%] 
(code_label 118 117 119 16 52 "" [1 uses])

(note 119 118 121 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 121 119 122 16 init/do_mounts.c:276 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 172 [ p ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 122 121 123 16 init/do_mounts.c:276 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 120)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
        (nil)))
;; End of basic block 16 -> ( 10 17)

;; Succ edge  10 [91.0%] 
;; Succ edge  17 [9.0%]  (fallthru)

;; Start of basic block ( 16 8) -> 17
;; Pred edge  16 [9.0%]  (fallthru)
;; Pred edge  8 [100.0%] 
(code_label 123 122 124 17 51 "" [1 uses])

(note 124 123 125 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 125 124 126 17 init/do_mounts.c:285 (set (reg:SI 192)
        (const_int 0 [0x0])) -1 (nil))

(insn 126 125 127 17 init/do_mounts.c:285 (set (reg:QI 193)
        (subreg:QI (reg:SI 192) 0)) -1 (nil))

(insn 127 126 128 17 init/do_mounts.c:285 (set (mem:QI (reg/v/f:SI 166 [ fs_names.1168 ]) [0 S1 A8])
        (reg:QI 193)) -1 (nil))
;; End of basic block 17 -> ( 18)

;; Succ edge  18 [100.0%]  (fallthru)

;; Start of basic block ( 17 23) -> 18
;; Pred edge  17 [100.0%]  (fallthru)
;; Pred edge  23 [100.0%]  (dfs_back)
(code_label 128 127 129 18 57 ("retry") [1 uses])

(note 129 128 130 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 130 129 131 18 init/do_mounts.c:317 (set (reg/v/f:SI 174 [ p ])
        (reg/v/f:SI 175 [ fs_names ])) -1 (nil))

(jump_insn 131 130 132 18 init/do_mounts.c:317 (set (pc)
        (label_ref 188)) -1 (nil))
;; End of basic block 18 -> ( 26)

;; Succ edge  26 [100.0%] 

(barrier 132 131 190)

;; Start of basic block ( 26) -> 19
;; Pred edge  26 [100.0%] 
(code_label 190 132 133 19 63 "" [1 uses])

(note 133 190 134 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 134 133 135 19 init/do_mounts.c:318 (set (reg/f:SI 194)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) -1 (nil))

(insn 135 134 136 19 init/do_mounts.c:318 (set (reg:SI 0 r0)
        (reg/v/f:SI 179 [ name ])) -1 (nil))

(insn 136 135 137 19 init/do_mounts.c:318 (set (reg:SI 1 r1)
        (reg/v/f:SI 174 [ p ])) -1 (nil))

(insn 137 136 138 19 init/do_mounts.c:318 (set (reg:SI 2 r2)
        (reg/v:SI 180 [ flags ])) -1 (nil))

(insn 138 137 139 19 init/do_mounts.c:318 (set (reg:SI 3 r3)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 194)
                (const_int 4 [0x4])) [0 root_mount_data+0 S4 A32])) -1 (nil))

(call_insn 139 138 140 19 init/do_mounts.c:318 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("do_mount_root") [flags 0x3] <function_decl 0x12135c00 do_mount_root>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 140 139 141 19 init/do_mounts.c:318 (set (reg/v:SI 173 [ err ])
        (reg:SI 0 r0)) -1 (nil))

(insn 141 140 142 19 init/do_mounts.c:319 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 173 [ err ])
            (const_int -13 [0xfffffffffffffff3]))) -1 (nil))

(jump_insn 142 141 248 19 init/do_mounts.c:319 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 149)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
        (nil)))
;; End of basic block 19 -> ( 23 20)

;; Succ edge  23 [29.0%] 
;; Succ edge  20 [71.0%]  (fallthru)

;; Start of basic block ( 19) -> 20
;; Pred edge  19 [71.0%]  (fallthru)
(note 248 142 143 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn 143 248 144 20 init/do_mounts.c:319 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 173 [ err ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 144 143 249 20 init/do_mounts.c:319 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 237)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 20 -> ( 31 21)

;; Succ edge  31 [50.0%] 
;; Succ edge  21 [50.0%]  (fallthru)

;; Start of basic block ( 20) -> 21
;; Pred edge  20 [50.0%]  (fallthru)
(note 249 144 145 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn 145 249 146 21 init/do_mounts.c:319 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 173 [ err ])
            (const_int -22 [0xffffffffffffffea]))) -1 (nil))

(jump_insn 146 145 250 21 init/do_mounts.c:319 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 154)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
        (nil)))
;; End of basic block 21 -> ( 24 22)

;; Succ edge  24 [29.0%] 
;; Succ edge  22 [71.0%]  (fallthru)

;; Start of basic block ( 21) -> 22
;; Pred edge  21 [71.0%]  (fallthru)
(note 250 146 147 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(jump_insn 147 250 148 22 init/do_mounts.c:319 (set (pc)
        (label_ref 164)) -1 (nil))
;; End of basic block 22 -> ( 25)

;; Succ edge  25 [100.0%] 

(barrier 148 147 149)

;; Start of basic block ( 19) -> 23
;; Pred edge  19 [29.0%] 
(code_label 149 148 150 23 61 "" [1 uses])

(note 150 149 151 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(insn 151 150 152 23 init/do_mounts.c:323 (set (reg/v:SI 180 [ flags ])
        (ior:SI (reg/v:SI 180 [ flags ])
            (const_int 1 [0x1]))) -1 (nil))

(jump_insn 152 151 153 23 init/do_mounts.c:324 (set (pc)
        (label_ref 128)) -1 (nil))
;; End of basic block 23 -> ( 18)

;; Succ edge  18 [100.0%]  (dfs_back)

(barrier 153 152 154)

;; Start of basic block ( 21) -> 24
;; Pred edge  21 [29.0%] 
(code_label 154 153 155 24 60 "" [1 uses])

(note 155 154 156 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(insn 156 155 157 24 init/do_mounts.c:317 (set (reg:SI 0 r0)
        (reg/v/f:SI 174 [ p ])) -1 (nil))

(call_insn/i 157 156 158 24 init/do_mounts.c:317 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strlen") [flags 0x41] <function_decl 0x51157b80 strlen>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 158 157 159 24 init/do_mounts.c:317 (set (reg:SI 195)
        (reg:SI 0 r0)) -1 (nil))

(insn 159 158 160 24 init/do_mounts.c:317 (set (reg:SI 177 [ D.52895 ])
        (reg:SI 195)) -1 (nil))

(insn 160 159 161 24 init/do_mounts.c:317 (set (reg:SI 196)
        (plus:SI (reg:SI 177 [ D.52895 ])
            (const_int 1 [0x1]))) -1 (nil))

(insn 161 160 162 24 init/do_mounts.c:317 (set (reg/v/f:SI 174 [ p ])
        (plus:SI (reg/v/f:SI 174 [ p ])
            (reg:SI 196))) -1 (nil))

(jump_insn 162 161 163 24 init/do_mounts.c:317 (set (pc)
        (label_ref 188)) -1 (nil))
;; End of basic block 24 -> ( 26)

;; Succ edge  26 [100.0%]  (dfs_back)

(barrier 163 162 164)

;; Start of basic block ( 22) -> 25
;; Pred edge  22 [100.0%] 
(code_label 164 163 165 25 59 "" [1 uses])

(note 165 164 166 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(insn 166 165 167 25 init/do_mounts.c:334 (set (reg/f:SI 197)
        (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])) -1 (nil))

(insn 167 166 168 25 init/do_mounts.c:334 (set (reg:SI 198)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -32 [0xffffffffffffffe0]))) -1 (nil))

(insn 168 167 169 25 init/do_mounts.c:334 (set (reg:SI 0 r0)
        (mem/c/i:SI (reg/f:SI 197) [0 ROOT_DEV+0 S4 A32])) -1 (nil))

(insn 169 168 170 25 init/do_mounts.c:334 (set (reg:SI 1 r1)
        (reg:SI 198)) -1 (nil))

(call_insn 170 169 171 25 init/do_mounts.c:334 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__bdevname") [flags 0x41] <function_decl 0x1115b800 __bdevname>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 171 170 172 25 init/do_mounts.c:336 (set (reg:SI 199)
        (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x121779b0>)) -1 (nil))

(insn 172 171 173 25 init/do_mounts.c:336 (set (reg/f:SI 200)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) -1 (nil))

(insn 173 172 174 25 init/do_mounts.c:336 (set (reg:SI 201)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -32 [0xffffffffffffffe0]))) -1 (nil))

(insn 174 173 175 25 init/do_mounts.c:336 (set (reg:SI 0 r0)
        (reg:SI 199)) -1 (nil))

(insn 175 174 176 25 init/do_mounts.c:336 (set (reg:SI 1 r1)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 200)
                (const_int 84 [0x54])) [0 root_device_name+0 S4 A32])) -1 (nil))

(insn 176 175 177 25 init/do_mounts.c:336 (set (reg:SI 2 r2)
        (reg:SI 201)) -1 (nil))

(call_insn 177 176 178 25 init/do_mounts.c:336 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 178 177 179 25 init/do_mounts.c:338 (set (reg:SI 202)
        (symbol_ref/v/f:SI ("*.LC5") [flags 0x82] <string_cst 0x121c2770>)) -1 (nil))

(insn 179 178 180 25 init/do_mounts.c:338 (set (reg:SI 0 r0)
        (reg:SI 202)) -1 (nil))

(call_insn 180 179 181 25 init/do_mounts.c:338 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(call_insn 181 180 182 25 init/do_mounts.c:340 (parallel [
            (call (mem:SI (symbol_ref:SI ("printk_all_partitions") [flags 0x41] <function_decl 0x115c3e80 printk_all_partitions>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (nil))

(insn 182 181 183 25 init/do_mounts.c:345 (set (reg:SI 203)
        (symbol_ref/v/f:SI ("*.LC6") [flags 0x82] <string_cst 0x1218bb00>)) -1 (nil))

(insn 183 182 184 25 init/do_mounts.c:345 (set (reg:SI 204)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -32 [0xffffffffffffffe0]))) -1 (nil))

(insn 184 183 185 25 init/do_mounts.c:345 (set (reg:SI 0 r0)
        (reg:SI 203)) -1 (nil))

(insn 185 184 186 25 init/do_mounts.c:345 (set (reg:SI 1 r1)
        (reg:SI 204)) -1 (nil))

(call_insn 186 185 187 25 init/do_mounts.c:345 (parallel [
            (call (mem:SI (symbol_ref:SI ("panic") [flags 0x41] <function_decl 0x10a67680 panic>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (expr_list:REG_NORETURN (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 25 -> ()


(barrier 187 186 188)

;; Start of basic block ( 18 24) -> 26
;; Pred edge  18 [100.0%] 
;; Pred edge  24 [100.0%]  (dfs_back)
(code_label 188 187 189 26 58 "" [2 uses])

(note 189 188 191 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(insn 191 189 192 26 init/do_mounts.c:317 discrim 1 (set (reg:SI 205)
        (zero_extend:SI (mem:QI (reg/v/f:SI 174 [ p ]) [0 S1 A8]))) -1 (nil))

(insn 192 191 193 26 init/do_mounts.c:317 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 205)
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 193 192 194 26 init/do_mounts.c:317 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 190)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 26 -> ( 19 27)

;; Succ edge  19 [100.0%] 
;; Succ edge  27 [0.0%]  (fallthru)

;; Start of basic block ( 26) -> 27
;; Pred edge  26 [0.0%]  (fallthru)
(note 194 193 195 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(insn 195 194 196 27 init/do_mounts.c:348 (set (reg:SI 206)
        (symbol_ref/v/f:SI ("*.LC7") [flags 0x82] <string_cst 0x1218bb40>)) -1 (nil))

(insn 196 195 197 27 init/do_mounts.c:348 (set (reg:SI 0 r0)
        (reg:SI 206)) -1 (nil))

(call_insn 197 196 198 27 init/do_mounts.c:348 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(call_insn 198 197 199 27 init/do_mounts.c:349 (parallel [
            (call (mem:SI (symbol_ref:SI ("printk_all_partitions") [flags 0x41] <function_decl 0x115c3e80 printk_all_partitions>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (nil))

(insn 199 198 200 27 init/do_mounts.c:350 (set (reg:SI 207)
        (symbol_ref/v/f:SI ("*.LC8") [flags 0x82] <string_cst 0x12177a00>)) -1 (nil))

(insn 200 199 201 27 init/do_mounts.c:350 (set (reg:SI 0 r0)
        (reg:SI 207)) -1 (nil))

(call_insn 201 200 202 27 init/do_mounts.c:350 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 202 201 203 27 init/do_mounts.c:351 (set (reg/v/f:SI 167 [ p.1164 ])
        (reg/v/f:SI 175 [ fs_names ])) -1 (nil))

(jump_insn 203 202 204 27 init/do_mounts.c:351 (set (pc)
        (label_ref 216)) -1 (nil))
;; End of basic block 27 -> ( 29)

;; Succ edge  29 [100.0%] 

(barrier 204 203 218)

;; Start of basic block ( 29) -> 28
;; Pred edge  29 [0.0%] 
(code_label 218 204 205 28 65 "" [1 uses])

(note 205 218 206 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(insn 206 205 207 28 init/do_mounts.c:352 (set (reg:SI 208)
        (symbol_ref/v/f:SI ("*.LC9") [flags 0x82] <string_cst 0x121ccfe0>)) -1 (nil))

(insn 207 206 208 28 init/do_mounts.c:352 (set (reg:SI 0 r0)
        (reg:SI 208)) -1 (nil))

(insn 208 207 209 28 init/do_mounts.c:352 (set (reg:SI 1 r1)
        (reg/v/f:SI 167 [ p.1164 ])) -1 (nil))

(call_insn 209 208 210 28 init/do_mounts.c:352 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 210 209 211 28 init/do_mounts.c:351 discrim 2 (set (reg:SI 0 r0)
        (reg/v/f:SI 167 [ p.1164 ])) -1 (nil))

(call_insn/i 211 210 212 28 init/do_mounts.c:351 discrim 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strlen") [flags 0x41] <function_decl 0x51157b80 strlen>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 212 211 213 28 init/do_mounts.c:351 discrim 2 (set (reg:SI 209)
        (reg:SI 0 r0)) -1 (nil))

(insn 213 212 214 28 init/do_mounts.c:351 discrim 2 (set (reg:SI 176 [ D.52898 ])
        (reg:SI 209)) -1 (nil))

(insn 214 213 215 28 init/do_mounts.c:351 discrim 2 (set (reg:SI 210)
        (plus:SI (reg:SI 176 [ D.52898 ])
            (const_int 1 [0x1]))) -1 (nil))

(insn 215 214 216 28 init/do_mounts.c:351 discrim 2 (set (reg/v/f:SI 167 [ p.1164 ])
        (plus:SI (reg/v/f:SI 167 [ p.1164 ])
            (reg:SI 210))) -1 (nil))
;; End of basic block 28 -> ( 29)

;; Succ edge  29 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 27 28) -> 29
;; Pred edge  27 [100.0%] 
;; Pred edge  28 [100.0%]  (fallthru,dfs_back)
(code_label 216 215 217 29 64 "" [1 uses])

(note 217 216 219 29 [bb 29] NOTE_INSN_BASIC_BLOCK)

(insn 219 217 220 29 init/do_mounts.c:351 discrim 1 (set (reg:SI 211)
        (zero_extend:SI (mem:QI (reg/v/f:SI 167 [ p.1164 ]) [0 S1 A8]))) -1 (nil))

(insn 220 219 221 29 init/do_mounts.c:351 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 211)
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 221 220 222 29 init/do_mounts.c:351 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 218)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 4 [0x4])
        (nil)))
;; End of basic block 29 -> ( 28 30)

;; Succ edge  28 [0.0%] 
;; Succ edge  30 [100.0%]  (fallthru)

;; Start of basic block ( 29) -> 30
;; Pred edge  29 [100.0%]  (fallthru)
(note 222 221 223 30 [bb 30] NOTE_INSN_BASIC_BLOCK)

(insn 223 222 224 30 init/do_mounts.c:353 (set (reg:SI 212)
        (symbol_ref/v/f:SI ("*.LC10") [flags 0x82] <string_cst 0x121ccf60>)) -1 (nil))

(insn 224 223 225 30 init/do_mounts.c:353 (set (reg:SI 0 r0)
        (reg:SI 212)) -1 (nil))

(call_insn 225 224 226 30 init/do_mounts.c:353 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 226 225 227 30 init/do_mounts.c:355 (set (reg/f:SI 213)
        (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])) -1 (nil))

(insn 227 226 228 30 init/do_mounts.c:355 (set (reg:SI 214)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -32 [0xffffffffffffffe0]))) -1 (nil))

(insn 228 227 229 30 init/do_mounts.c:355 (set (reg:SI 0 r0)
        (mem/c/i:SI (reg/f:SI 213) [0 ROOT_DEV+0 S4 A32])) -1 (nil))

(insn 229 228 230 30 init/do_mounts.c:355 (set (reg:SI 1 r1)
        (reg:SI 214)) -1 (nil))

(call_insn 230 229 231 30 init/do_mounts.c:355 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__bdevname") [flags 0x41] <function_decl 0x1115b800 __bdevname>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 231 230 232 30 init/do_mounts.c:357 (set (reg:SI 215)
        (symbol_ref/v/f:SI ("*.LC6") [flags 0x82] <string_cst 0x1218bb00>)) -1 (nil))

(insn 232 231 233 30 init/do_mounts.c:357 (set (reg:SI 216)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -32 [0xffffffffffffffe0]))) -1 (nil))

(insn 233 232 234 30 init/do_mounts.c:357 (set (reg:SI 0 r0)
        (reg:SI 215)) -1 (nil))

(insn 234 233 235 30 init/do_mounts.c:357 (set (reg:SI 1 r1)
        (reg:SI 216)) -1 (nil))

(call_insn 235 234 236 30 init/do_mounts.c:357 (parallel [
            (call (mem:SI (symbol_ref:SI ("panic") [flags 0x41] <function_decl 0x10a67680 panic>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (expr_list:REG_NORETURN (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 30 -> ()


(barrier 236 235 237)

;; Start of basic block ( 20) -> 31
;; Pred edge  20 [50.0%] 
(code_label 237 236 238 31 62 ("out") [1 uses])

(note 238 237 239 31 [bb 31] NOTE_INSN_BASIC_BLOCK)

(insn 239 238 240 31 init/do_mounts.c:359 (set (reg/f:SI 217)
        (symbol_ref:SI ("names_cachep") [flags 0xc0] <var_decl 0x1114f6c0 names_cachep>)) -1 (nil))

(insn 240 239 241 31 init/do_mounts.c:359 (set (reg:SI 0 r0)
        (mem/f/c/i:SI (reg/f:SI 217) [0 names_cachep+0 S4 A32])) -1 (nil))

(insn 241 240 242 31 init/do_mounts.c:359 (set (reg:SI 1 r1)
        (reg/v/f:SI 175 [ fs_names ])) -1 (nil))

(call_insn 242 241 247 31 init/do_mounts.c:359 (parallel [
            (call (mem:SI (symbol_ref:SI ("kmem_cache_free") [flags 0x41] <function_decl 0x11460b00 kmem_cache_free>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 31 -> ( 32)

;; Succ edge  32 [100.0%]  (fallthru)

;; Start of basic block ( 31) -> 32
;; Pred edge  31 [100.0%]  (fallthru)
(note 247 242 244 32 [bb 32] NOTE_INSN_BASIC_BLOCK)

(jump_insn 244 247 245 32 init/do_mounts.c:360 (set (pc)
        (label_ref 246)) -1 (nil))
;; End of basic block 32 -> ( 34)

;; Succ edge  34 [100.0%] 

(barrier 245 244 243)

;; Start of basic block () -> 33
(code_label 243 245 251 33 47 "" [0 uses])

(note 251 243 246 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 33 -> ( 34)

;; Succ edge  34 [100.0%]  (fallthru)

;; Start of basic block ( 32 33) -> 34
;; Pred edge  32 [100.0%] 
;; Pred edge  33 [100.0%]  (fallthru)
(code_label 246 251 252 34 66 "" [1 uses])

(note 252 246 0 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 34 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function mount_root (mount_root)[0:2717] (unlikely executed)

Partition 0: size 4 align 4
	root_dev, offset 0
Partition 1: size 4 align 4
	root_data, offset 0

;; Generating RTL for gimple basic block 2

;; if (ROOT_DEV >> 20 == 0)

(insn 5 4 6 init/do_mounts.c:435 (set (reg/f:SI 140)
        (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])) -1 (nil))

(insn 6 5 7 init/do_mounts.c:435 (set (reg:SI 142)
        (mem/c/i:SI (reg/f:SI 140) [0 ROOT_DEV+0 S4 A32])) -1 (nil))

(insn 7 6 8 init/do_mounts.c:435 (set (reg:SI 141)
        (lshiftrt:SI (reg:SI 142)
            (const_int 20 [0x14]))) -1 (nil))

(insn 8 7 9 init/do_mounts.c:435 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 141)
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 9 8 0 init/do_mounts.c:435 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

;; Generating RTL for gimple basic block 3

;; err = nfs_root_data (&root_dev, &root_data);

(insn 11 10 12 init/do_mounts.c:374 (set (reg:SI 143)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -4 [0xfffffffffffffffc]))) -1 (nil))

(insn 12 11 13 init/do_mounts.c:374 (set (reg:SI 144)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -8 [0xfffffffffffffff8]))) -1 (nil))

(insn 13 12 14 init/do_mounts.c:374 (set (reg:SI 0 r0)
        (reg:SI 143)) -1 (nil))

(insn 14 13 15 init/do_mounts.c:374 (set (reg:SI 1 r1)
        (reg:SI 144)) -1 (nil))

(call_insn 15 14 16 init/do_mounts.c:374 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("nfs_root_data") [flags 0x41] <function_decl 0x11f60f00 nfs_root_data>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 16 15 0 init/do_mounts.c:374 (set (reg/v:SI 139 [ err ])
        (reg:SI 0 r0)) -1 (nil))

;; if (err != 0)

(insn 17 16 18 init/do_mounts.c:375 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 139 [ err ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 18 17 0 init/do_mounts.c:375 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))

;; Generating RTL for gimple basic block 4

;; try = 1;

(insn 20 19 0 init/do_mounts.c:375 (set (reg/v:SI 138 [ try ])
        (const_int 1 [0x1])) -1 (nil))

;; timeout = 5;

(insn 21 20 0 init/do_mounts.c:375 (set (reg/v:SI 137 [ timeout ])
        (const_int 5 [0x5])) -1 (nil))

;; Generating RTL for gimple basic block 5

;; err.1212 = do_mount_root (root_dev, &"nfs"[0], root_mountflags, root_data);

(insn 23 22 24 init/do_mounts.c:385 (set (reg:SI 145)
        (symbol_ref/v/f:SI ("*.LC11") [flags 0x82] <string_cst 0x121e0cc0>)) -1 (nil))

(insn 24 23 25 init/do_mounts.c:385 (set (reg/f:SI 146)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) -1 (nil))

(insn 25 24 26 init/do_mounts.c:385 (set (reg:SI 0 r0)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 root_dev+0 S4 A32])) -1 (nil))

(insn 26 25 27 init/do_mounts.c:385 (set (reg:SI 1 r1)
        (reg:SI 145)) -1 (nil))

(insn 27 26 28 init/do_mounts.c:385 (set (reg:SI 2 r2)
        (mem/c/i:SI (reg/f:SI 146) [0 root_mountflags+0 S4 A32])) -1 (nil))

(insn 28 27 29 init/do_mounts.c:385 (set (reg:SI 3 r3)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 root_data+0 S4 A64])) -1 (nil))

(call_insn 29 28 30 init/do_mounts.c:385 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("do_mount_root") [flags 0x3] <function_decl 0x12135c00 do_mount_root>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 30 29 0 init/do_mounts.c:385 (set (reg/v:SI 134 [ err.1212 ])
        (reg:SI 0 r0)) -1 (nil))

;; if (err.1212 == 0)

(insn 31 30 32 init/do_mounts.c:387 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 134 [ err.1212 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 32 31 0 init/do_mounts.c:387 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 450 [0x1c2])
        (nil)))

;; Generating RTL for gimple basic block 6

;; if (try == 6)

(insn 34 33 35 init/do_mounts.c:389 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 138 [ try ])
            (const_int 6 [0x6]))) -1 (nil))

(jump_insn 35 34 0 init/do_mounts.c:389 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 1667 [0x683])
        (nil)))

;; Generating RTL for gimple basic block 7

;; msleep (timeout * 1000);

(insn 37 36 38 include/linux/delay.h:52 (set (reg:SI 148)
        (const_int 1000 [0x3e8])) -1 (nil))

(insn 38 37 39 include/linux/delay.h:52 (set (reg:SI 147)
        (mult:SI (reg:SI 148)
            (reg/v:SI 137 [ timeout ]))) -1 (nil))

(insn 39 38 40 include/linux/delay.h:52 (set (reg:SI 0 r0)
        (reg:SI 147)) -1 (nil))

(call_insn 40 39 0 include/linux/delay.h:52 (parallel [
            (call (mem:SI (symbol_ref:SI ("msleep") [flags 0x41] <function_decl 0x11595a80 msleep>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

;; timeout.1213 = timeout << 1;

(insn 41 40 0 init/do_mounts.c:394 (set (reg/v:SI 133 [ timeout.1213 ])
        (ashift:SI (reg/v:SI 137 [ timeout ])
            (const_int 1 [0x1]))) -1 (nil))

;; timeout = MIN_EXPR <timeout.1213, 30>;

(insn 42 41 0 init/do_mounts.c:394 (parallel [
            (set (reg/v:SI 137 [ timeout ])
                (umin:SI (reg/v:SI 133 [ timeout.1213 ])
                    (const_int 30 [0x1e])))
            (clobber (reg:CC 24 cc))
        ]) -1 (nil))

;; try = try + 1;

(insn 43 42 0 init/do_mounts.c:384 (set (reg/v:SI 138 [ try ])
        (plus:SI (reg/v:SI 138 [ try ])
            (const_int 1 [0x1]))) -1 (nil))

;; Generating RTL for gimple basic block 8

;; 

(code_label 47 46 48 79 "" [0 uses])

(note 48 47 0 NOTE_INSN_BASIC_BLOCK)

;; printk (&"<3>VFS: Unable to mount root fs via NFS, trying floppy.\n"[0]);

(insn 49 48 50 init/do_mounts.c:439 (set (reg:SI 149)
        (symbol_ref/v/f:SI ("*.LC12") [flags 0x82] <string_cst 0x10c70d80>)) -1 (nil))

(insn 50 49 51 init/do_mounts.c:439 (set (reg:SI 0 r0)
        (reg:SI 149)) -1 (nil))

(call_insn 51 50 0 init/do_mounts.c:439 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

;; ROOT_DEV = 2097152;

(insn 52 51 53 init/do_mounts.c:440 (set (reg/f:SI 150)
        (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])) -1 (nil))

(insn 53 52 54 init/do_mounts.c:440 (set (reg:SI 151)
        (const_int 2097152 [0x200000])) -1 (nil))

(insn 54 53 0 init/do_mounts.c:440 (set (mem/c/i:SI (reg/f:SI 150) [0 ROOT_DEV+0 S4 A32])
        (reg:SI 151)) -1 (nil))

;; Generating RTL for gimple basic block 9

;; 

(code_label 55 54 56 78 "" [0 uses])

(note 56 55 0 NOTE_INSN_BASIC_BLOCK)

;; ROOT_DEV.1211 = ROOT_DEV;

(insn 57 56 58 init/do_mounts.c:456 (set (reg/f:SI 152)
        (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])) -1 (nil))

(insn 58 57 0 init/do_mounts.c:456 (set (reg:SI 135 [ ROOT_DEV.1211 ])
        (mem/c/i:SI (reg/f:SI 152) [0 ROOT_DEV+0 S4 A32])) -1 (nil))

;; sys_unlink (&"/dev/root"[0]);

(insn 59 58 60 init/do_mounts.h:18 (set (reg:SI 153)
        (symbol_ref/v/f:SI ("*.LC13") [flags 0x82] <string_cst 0x121e4690>)) -1 (nil))

(insn 60 59 61 init/do_mounts.h:18 (set (reg:SI 0 r0)
        (reg:SI 153)) -1 (nil))

(call_insn 61 60 0 init/do_mounts.h:18 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sys_unlink") [flags 0x41] <function_decl 0x12103280 sys_unlink>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

;; minor = ROOT_DEV.1211 & 1048575;

(insn 62 61 63 include/linux/kdev_t.h:44 (set (reg:SI 154)
        (and:SI (reg:SI 135 [ ROOT_DEV.1211 ])
            (const_int 16777215 [0xffffff]))) -1 (nil))

(insn 63 62 0 include/linux/kdev_t.h:44 (set (reg/v:SI 136 [ minor ])
        (and:SI (reg:SI 154)
            (const_int -15728641 [0xffffffffff0fffff]))) -1 (expr_list:REG_EQUAL (and:SI (reg:SI 135 [ ROOT_DEV.1211 ])
            (const_int 1048575 [0xfffff]))
        (nil)))

;; sys_mknod (&"/dev/root"[0], 24960, ((ROOT_DEV.1211 >> 20) << 8 | minor & 255) | (minor & 4294967040) << 12);

(insn 64 63 65 init/do_mounts.h:19 (set (reg:SI 155)
        (symbol_ref/v/f:SI ("*.LC13") [flags 0x82] <string_cst 0x121e4690>)) -1 (nil))

(insn 65 64 66 init/do_mounts.h:19 (set (reg:SI 156)
        (const_int 24960 [0x6180])) -1 (nil))

(insn 66 65 67 init/do_mounts.h:19 (set (reg:SI 157)
        (lshiftrt:SI (reg:SI 135 [ ROOT_DEV.1211 ])
            (const_int 20 [0x14]))) -1 (nil))

(insn 67 66 68 init/do_mounts.h:19 (set (reg:SI 158)
        (ashift:SI (reg:SI 157)
            (const_int 8 [0x8]))) -1 (nil))

(insn 68 67 69 init/do_mounts.h:19 (set (reg:SI 159)
        (and:SI (reg/v:SI 136 [ minor ])
            (const_int 255 [0xff]))) -1 (nil))

(insn 69 68 70 init/do_mounts.h:19 (set (reg:SI 160)
        (ior:SI (reg:SI 158)
            (reg:SI 159))) -1 (nil))

(insn 70 69 71 init/do_mounts.h:19 (set (reg:SI 161)
        (and:SI (reg/v:SI 136 [ minor ])
            (const_int -256 [0xffffffffffffff00]))) -1 (nil))

(insn 71 70 72 init/do_mounts.h:19 (set (reg:SI 162)
        (ashift:SI (reg:SI 161)
            (const_int 12 [0xc]))) -1 (nil))

(insn 72 71 73 init/do_mounts.h:19 (set (reg:SI 163)
        (ior:SI (reg:SI 160)
            (reg:SI 162))) -1 (nil))

(insn 73 72 74 init/do_mounts.h:19 (set (reg:SI 0 r0)
        (reg:SI 155)) -1 (nil))

(insn 74 73 75 init/do_mounts.h:19 (set (reg:SI 1 r1)
        (reg:SI 156)) -1 (nil))

(insn 75 74 76 init/do_mounts.h:19 (set (reg:SI 2 r2)
        (reg:SI 163)) -1 (nil))

(call_insn 76 75 0 init/do_mounts.h:19 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sys_mknod") [flags 0x41] <function_decl 0x12103100 sys_mknod>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

;; mount_block_root (&"/dev/root"[0], root_mountflags);

(insn 77 76 78 init/do_mounts.c:457 (set (reg:SI 164)
        (symbol_ref/v/f:SI ("*.LC13") [flags 0x82] <string_cst 0x121e4690>)) -1 (nil))

(insn 78 77 79 init/do_mounts.c:457 (set (reg/f:SI 165)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) -1 (nil))

(insn 79 78 80 init/do_mounts.c:457 (set (reg:SI 0 r0)
        (reg:SI 164)) -1 (nil))

(insn 80 79 81 init/do_mounts.c:457 (set (reg:SI 1 r1)
        (mem/c/i:SI (reg/f:SI 165) [0 root_mountflags+0 S4 A32])) -1 (nil))

(call_insn 81 80 0 init/do_mounts.c:457 (parallel [
            (call (mem:SI (symbol_ref:SI ("mount_block_root") [flags 0x3] <function_decl 0x1212c900 mount_block_root>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

;; Generating RTL for gimple basic block 10

;; 

(code_label 82 81 83 80 "" [0 uses])

(note 83 82 0 NOTE_INSN_BASIC_BLOCK)


;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 4 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 3)

;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [100.0%]  (fallthru)
(note 4 2 5 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 5 4 6 3 init/do_mounts.c:435 (set (reg/f:SI 140)
        (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])) -1 (nil))

(insn 6 5 7 3 init/do_mounts.c:435 (set (reg:SI 142)
        (mem/c/i:SI (reg/f:SI 140) [0 ROOT_DEV+0 S4 A32])) -1 (nil))

(insn 7 6 8 3 init/do_mounts.c:435 (set (reg:SI 141)
        (lshiftrt:SI (reg:SI 142)
            (const_int 20 [0x14]))) -1 (nil))

(insn 8 7 9 3 init/do_mounts.c:435 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 141)
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 9 8 10 3 init/do_mounts.c:435 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 55)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 3 -> ( 4 10)

;; Succ edge  4 [50.0%]  (fallthru)
;; Succ edge  10 [50.0%] 

;; Start of basic block ( 3) -> 4
;; Pred edge  3 [50.0%]  (fallthru)
(note 10 9 11 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 11 10 12 4 init/do_mounts.c:374 (set (reg:SI 143)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -4 [0xfffffffffffffffc]))) -1 (nil))

(insn 12 11 13 4 init/do_mounts.c:374 (set (reg:SI 144)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -8 [0xfffffffffffffff8]))) -1 (nil))

(insn 13 12 14 4 init/do_mounts.c:374 (set (reg:SI 0 r0)
        (reg:SI 143)) -1 (nil))

(insn 14 13 15 4 init/do_mounts.c:374 (set (reg:SI 1 r1)
        (reg:SI 144)) -1 (nil))

(call_insn 15 14 16 4 init/do_mounts.c:374 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("nfs_root_data") [flags 0x41] <function_decl 0x11f60f00 nfs_root_data>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 16 15 17 4 init/do_mounts.c:374 (set (reg/v:SI 139 [ err ])
        (reg:SI 0 r0)) -1 (nil))

(insn 17 16 18 4 init/do_mounts.c:375 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 139 [ err ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 18 17 19 4 init/do_mounts.c:375 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 47)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 4 -> ( 9 5)

;; Succ edge  9 [100.0%] 
;; Succ edge  5 [0.0%]  (fallthru)

;; Start of basic block ( 4) -> 5
;; Pred edge  4 [0.0%]  (fallthru)
(note 19 18 20 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 20 19 21 5 init/do_mounts.c:375 (set (reg/v:SI 138 [ try ])
        (const_int 1 [0x1])) -1 (nil))

(insn 21 20 44 5 init/do_mounts.c:375 (set (reg/v:SI 137 [ timeout ])
        (const_int 5 [0x5])) -1 (nil))
;; End of basic block 5 -> ( 6)

;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 5 8) -> 6
;; Pred edge  5 [100.0%]  (fallthru)
;; Pred edge  8 [100.0%]  (dfs_back)
(code_label 44 21 22 6 81 "" [1 uses])

(note 22 44 23 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 23 22 24 6 init/do_mounts.c:385 (set (reg:SI 145)
        (symbol_ref/v/f:SI ("*.LC11") [flags 0x82] <string_cst 0x121e0cc0>)) -1 (nil))

(insn 24 23 25 6 init/do_mounts.c:385 (set (reg/f:SI 146)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) -1 (nil))

(insn 25 24 26 6 init/do_mounts.c:385 (set (reg:SI 0 r0)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 root_dev+0 S4 A32])) -1 (nil))

(insn 26 25 27 6 init/do_mounts.c:385 (set (reg:SI 1 r1)
        (reg:SI 145)) -1 (nil))

(insn 27 26 28 6 init/do_mounts.c:385 (set (reg:SI 2 r2)
        (mem/c/i:SI (reg/f:SI 146) [0 root_mountflags+0 S4 A32])) -1 (nil))

(insn 28 27 29 6 init/do_mounts.c:385 (set (reg:SI 3 r3)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 root_data+0 S4 A64])) -1 (nil))

(call_insn 29 28 30 6 init/do_mounts.c:385 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("do_mount_root") [flags 0x3] <function_decl 0x12135c00 do_mount_root>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 30 29 31 6 init/do_mounts.c:385 (set (reg/v:SI 134 [ err.1212 ])
        (reg:SI 0 r0)) -1 (nil))

(insn 31 30 32 6 init/do_mounts.c:387 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 134 [ err.1212 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 32 31 33 6 init/do_mounts.c:387 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 82)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 450 [0x1c2])
        (nil)))
;; End of basic block 6 -> ( 11 7)

;; Succ edge  11 [4.5%] 
;; Succ edge  7 [95.5%]  (fallthru)

;; Start of basic block ( 6) -> 7
;; Pred edge  6 [95.5%]  (fallthru)
(note 33 32 34 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 34 33 35 7 init/do_mounts.c:389 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 138 [ try ])
            (const_int 6 [0x6]))) -1 (nil))

(jump_insn 35 34 36 7 init/do_mounts.c:389 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 47)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 1667 [0x683])
        (nil)))
;; End of basic block 7 -> ( 9 8)

;; Succ edge  9 [16.7%] 
;; Succ edge  8 [83.3%]  (fallthru)

;; Start of basic block ( 7) -> 8
;; Pred edge  7 [83.3%]  (fallthru)
(note 36 35 37 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 37 36 38 8 include/linux/delay.h:52 (set (reg:SI 148)
        (const_int 1000 [0x3e8])) -1 (nil))

(insn 38 37 39 8 include/linux/delay.h:52 (set (reg:SI 147)
        (mult:SI (reg:SI 148)
            (reg/v:SI 137 [ timeout ]))) -1 (nil))

(insn 39 38 40 8 include/linux/delay.h:52 (set (reg:SI 0 r0)
        (reg:SI 147)) -1 (nil))

(call_insn 40 39 41 8 include/linux/delay.h:52 (parallel [
            (call (mem:SI (symbol_ref:SI ("msleep") [flags 0x41] <function_decl 0x11595a80 msleep>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 41 40 42 8 init/do_mounts.c:394 (set (reg/v:SI 133 [ timeout.1213 ])
        (ashift:SI (reg/v:SI 137 [ timeout ])
            (const_int 1 [0x1]))) -1 (nil))

(insn 42 41 43 8 init/do_mounts.c:394 (parallel [
            (set (reg/v:SI 137 [ timeout ])
                (umin:SI (reg/v:SI 133 [ timeout.1213 ])
                    (const_int 30 [0x1e])))
            (clobber (reg:CC 24 cc))
        ]) -1 (nil))

(insn 43 42 45 8 init/do_mounts.c:384 (set (reg/v:SI 138 [ try ])
        (plus:SI (reg/v:SI 138 [ try ])
            (const_int 1 [0x1]))) -1 (nil))

(jump_insn 45 43 46 8 init/do_mounts.c:384 (set (pc)
        (label_ref 44)) -1 (nil))
;; End of basic block 8 -> ( 6)

;; Succ edge  6 [100.0%]  (dfs_back)

(barrier 46 45 47)

;; Start of basic block ( 4 7) -> 9
;; Pred edge  4 [100.0%] 
;; Pred edge  7 [16.7%] 
(code_label 47 46 48 9 79 "" [2 uses])

(note 48 47 49 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 49 48 50 9 init/do_mounts.c:439 (set (reg:SI 149)
        (symbol_ref/v/f:SI ("*.LC12") [flags 0x82] <string_cst 0x10c70d80>)) -1 (nil))

(insn 50 49 51 9 init/do_mounts.c:439 (set (reg:SI 0 r0)
        (reg:SI 149)) -1 (nil))

(call_insn 51 50 52 9 init/do_mounts.c:439 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 52 51 53 9 init/do_mounts.c:440 (set (reg/f:SI 150)
        (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])) -1 (nil))

(insn 53 52 54 9 init/do_mounts.c:440 (set (reg:SI 151)
        (const_int 2097152 [0x200000])) -1 (nil))

(insn 54 53 55 9 init/do_mounts.c:440 (set (mem/c/i:SI (reg/f:SI 150) [0 ROOT_DEV+0 S4 A32])
        (reg:SI 151)) -1 (nil))
;; End of basic block 9 -> ( 10)

;; Succ edge  10 [100.0%]  (fallthru)

;; Start of basic block ( 3 9) -> 10
;; Pred edge  3 [50.0%] 
;; Pred edge  9 [100.0%]  (fallthru)
(code_label 55 54 56 10 78 "" [1 uses])

(note 56 55 57 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 57 56 58 10 init/do_mounts.c:456 (set (reg/f:SI 152)
        (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])) -1 (nil))

(insn 58 57 59 10 init/do_mounts.c:456 (set (reg:SI 135 [ ROOT_DEV.1211 ])
        (mem/c/i:SI (reg/f:SI 152) [0 ROOT_DEV+0 S4 A32])) -1 (nil))

(insn 59 58 60 10 init/do_mounts.h:18 (set (reg:SI 153)
        (symbol_ref/v/f:SI ("*.LC13") [flags 0x82] <string_cst 0x121e4690>)) -1 (nil))

(insn 60 59 61 10 init/do_mounts.h:18 (set (reg:SI 0 r0)
        (reg:SI 153)) -1 (nil))

(call_insn 61 60 62 10 init/do_mounts.h:18 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sys_unlink") [flags 0x41] <function_decl 0x12103280 sys_unlink>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 62 61 63 10 include/linux/kdev_t.h:44 (set (reg:SI 154)
        (and:SI (reg:SI 135 [ ROOT_DEV.1211 ])
            (const_int 16777215 [0xffffff]))) -1 (nil))

(insn 63 62 64 10 include/linux/kdev_t.h:44 (set (reg/v:SI 136 [ minor ])
        (and:SI (reg:SI 154)
            (const_int -15728641 [0xffffffffff0fffff]))) -1 (expr_list:REG_EQUAL (and:SI (reg:SI 135 [ ROOT_DEV.1211 ])
            (const_int 1048575 [0xfffff]))
        (nil)))

(insn 64 63 65 10 init/do_mounts.h:19 (set (reg:SI 155)
        (symbol_ref/v/f:SI ("*.LC13") [flags 0x82] <string_cst 0x121e4690>)) -1 (nil))

(insn 65 64 66 10 init/do_mounts.h:19 (set (reg:SI 156)
        (const_int 24960 [0x6180])) -1 (nil))

(insn 66 65 67 10 init/do_mounts.h:19 (set (reg:SI 157)
        (lshiftrt:SI (reg:SI 135 [ ROOT_DEV.1211 ])
            (const_int 20 [0x14]))) -1 (nil))

(insn 67 66 68 10 init/do_mounts.h:19 (set (reg:SI 158)
        (ashift:SI (reg:SI 157)
            (const_int 8 [0x8]))) -1 (nil))

(insn 68 67 69 10 init/do_mounts.h:19 (set (reg:SI 159)
        (and:SI (reg/v:SI 136 [ minor ])
            (const_int 255 [0xff]))) -1 (nil))

(insn 69 68 70 10 init/do_mounts.h:19 (set (reg:SI 160)
        (ior:SI (reg:SI 158)
            (reg:SI 159))) -1 (nil))

(insn 70 69 71 10 init/do_mounts.h:19 (set (reg:SI 161)
        (and:SI (reg/v:SI 136 [ minor ])
            (const_int -256 [0xffffffffffffff00]))) -1 (nil))

(insn 71 70 72 10 init/do_mounts.h:19 (set (reg:SI 162)
        (ashift:SI (reg:SI 161)
            (const_int 12 [0xc]))) -1 (nil))

(insn 72 71 73 10 init/do_mounts.h:19 (set (reg:SI 163)
        (ior:SI (reg:SI 160)
            (reg:SI 162))) -1 (nil))

(insn 73 72 74 10 init/do_mounts.h:19 (set (reg:SI 0 r0)
        (reg:SI 155)) -1 (nil))

(insn 74 73 75 10 init/do_mounts.h:19 (set (reg:SI 1 r1)
        (reg:SI 156)) -1 (nil))

(insn 75 74 76 10 init/do_mounts.h:19 (set (reg:SI 2 r2)
        (reg:SI 163)) -1 (nil))

(call_insn 76 75 77 10 init/do_mounts.h:19 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sys_mknod") [flags 0x41] <function_decl 0x12103100 sys_mknod>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 77 76 78 10 init/do_mounts.c:457 (set (reg:SI 164)
        (symbol_ref/v/f:SI ("*.LC13") [flags 0x82] <string_cst 0x121e4690>)) -1 (nil))

(insn 78 77 79 10 init/do_mounts.c:457 (set (reg/f:SI 165)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) -1 (nil))

(insn 79 78 80 10 init/do_mounts.c:457 (set (reg:SI 0 r0)
        (reg:SI 164)) -1 (nil))

(insn 80 79 81 10 init/do_mounts.c:457 (set (reg:SI 1 r1)
        (mem/c/i:SI (reg/f:SI 165) [0 root_mountflags+0 S4 A32])) -1 (nil))

(call_insn 81 80 82 10 init/do_mounts.c:457 (parallel [
            (call (mem:SI (symbol_ref:SI ("mount_block_root") [flags 0x3] <function_decl 0x1212c900 mount_block_root>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 10 -> ( 11)

;; Succ edge  11 [100.0%]  (fallthru)

;; Start of basic block ( 6 10) -> 11
;; Pred edge  6 [4.5%] 
;; Pred edge  10 [100.0%]  (fallthru)
(code_label 82 81 83 11 80 "" [1 uses])

(note 83 82 88 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 11 -> ( 12)

;; Succ edge  12 [100.0%]  (fallthru)

;; Start of basic block ( 11) -> 12
;; Pred edge  11 [100.0%]  (fallthru)
(note 88 83 85 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(jump_insn 85 88 86 12 init/do_mounts.c:459 (set (pc)
        (label_ref 87)) -1 (nil))
;; End of basic block 12 -> ( 14)

;; Succ edge  14 [100.0%] 

(barrier 86 85 84)

;; Start of basic block () -> 13
(code_label 84 86 89 13 77 "" [0 uses])

(note 89 84 87 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 13 -> ( 14)

;; Succ edge  14 [100.0%]  (fallthru)

;; Start of basic block ( 12 13) -> 14
;; Pred edge  12 [100.0%] 
;; Pred edge  13 [100.0%]  (fallthru)
(code_label 87 89 90 14 82 "" [1 uses])

(note 90 87 0 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 14 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function name_to_dev_t (name_to_dev_t)[0:2707]

Partition 1: size 4 align 4
	p, offset 0
Partition 3: size 4 align 4
	maj, offset 0
Partition 4: size 4 align 4
	min, offset 0
Partition 2: size 16 align 4
	uuid, offset 0
Partition 0: size 32 align 4
	s, offset 0

;; Generating RTL for gimple basic block 2

;; D.52704 = strncmp (name, &"PARTUUID="[0], 9);

(insn 7 6 8 init/do_mounts.c:144 (set (reg:SI 162)
        (symbol_ref/v/f:SI ("*.LC14") [flags 0x82] <string_cst 0x121f8870>)) -1 (nil))

(insn 8 7 9 init/do_mounts.c:144 (set (reg:SI 0 r0)
        (reg/v/f:SI 161 [ name ])) -1 (nil))

(insn 9 8 10 init/do_mounts.c:144 (set (reg:SI 1 r1)
        (reg:SI 162)) -1 (nil))

(insn 10 9 11 init/do_mounts.c:144 (set (reg:SI 2 r2)
        (const_int 9 [0x9])) -1 (nil))

(call_insn/i 11 10 12 init/do_mounts.c:144 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strncmp") [flags 0x41] <function_decl 0x51157e80 strncmp>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 12 11 13 init/do_mounts.c:144 (set (reg:SI 163)
        (reg:SI 0 r0)) -1 (nil))

(insn 13 12 0 init/do_mounts.c:144 (set (reg:SI 159 [ D.52704 ])
        (reg:SI 163)) -1 (nil))

;; if (D.52704 == 0)

(insn 14 13 15 init/do_mounts.c:144 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 159 [ D.52704 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 15 14 0 init/do_mounts.c:144 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

;; Generating RTL for gimple basic block 3

;; name.1256 = name + 9;

(insn 17 16 0 init/do_mounts.c:145 (set (reg/v/f:SI 134 [ name.1256 ])
        (plus:SI (reg/v/f:SI 161 [ name ])
            (const_int 9 [0x9]))) -1 (nil))

;; D.52707 = strlen (name.1256);

(insn 18 17 19 init/do_mounts.c:146 (set (reg:SI 0 r0)
        (reg/v/f:SI 134 [ name.1256 ])) -1 (nil))

(call_insn/i 19 18 20 init/do_mounts.c:146 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strlen") [flags 0x41] <function_decl 0x51157b80 strlen>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 20 19 21 init/do_mounts.c:146 (set (reg:SI 164)
        (reg:SI 0 r0)) -1 (nil))

(insn 21 20 0 init/do_mounts.c:146 (set (reg:SI 158 [ D.52707 ])
        (reg:SI 164)) -1 (nil))

;; if (D.52707 != 36)

(insn 22 21 23 init/do_mounts.c:146 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 158 [ D.52707 ])
            (const_int 36 [0x24]))) -1 (nil))

(jump_insn 23 22 0 init/do_mounts.c:146 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 6218 [0x184a])
        (nil)))

;; Generating RTL for gimple basic block 4

;; i = 0;

(insn 25 24 0 init/do_mounts.c:146 (set (reg/v:SI 143 [ i ])
        (const_int 0 [0x0])) -1 (nil))

;; Generating RTL for gimple basic block 5

;; D.53098 = hex_to_bin (*name.1256);

(insn 27 26 28 include/linux/genhd.h:210 (set (reg:SI 165)
        (zero_extend:SI (mem:QI (reg/v/f:SI 134 [ name.1256 ]) [0 S1 A8]))) -1 (nil))

(insn 28 27 29 include/linux/genhd.h:210 (set (reg:SI 0 r0)
        (reg:SI 165)) -1 (nil))

(call_insn 29 28 30 include/linux/genhd.h:210 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("hex_to_bin") [flags 0x41] <function_decl 0x10a82e00 hex_to_bin>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 30 29 0 include/linux/genhd.h:210 (set (reg:SI 145 [ D.53098 ])
        (reg:SI 0 r0)) -1 (nil))

;; D.53103 = hex_to_bin (*(name.1256 + 1));

(insn 31 30 32 include/linux/genhd.h:211 (set (reg:SI 166)
        (zero_extend:SI (mem:QI (plus:SI (reg/v/f:SI 134 [ name.1256 ])
                    (const_int 1 [0x1])) [0 S1 A8]))) -1 (nil))

(insn 32 31 33 include/linux/genhd.h:211 (set (reg:SI 0 r0)
        (reg:SI 166)) -1 (nil))

(call_insn 33 32 34 include/linux/genhd.h:211 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("hex_to_bin") [flags 0x41] <function_decl 0x10a82e00 hex_to_bin>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 34 33 0 include/linux/genhd.h:211 (set (reg:SI 144 [ D.53103 ])
        (reg:SI 0 r0)) -1 (nil))

;; MEM[base: &uuid, index: (unsigned int) i] = (u8) (u8) ((signed char) (D.53098 << 4) | (signed char) D.53103);

(insn 35 34 36 include/linux/genhd.h:210 (set (reg:SI 167)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -28 [0xffffffffffffffe4]))) -1 (nil))

(insn 36 35 37 include/linux/genhd.h:210 (set (reg:SI 168)
        (ashift:SI (reg:SI 145 [ D.53098 ])
            (const_int 4 [0x4]))) -1 (nil))

(insn 37 36 38 include/linux/genhd.h:210 (set (reg:QI 169)
        (subreg:QI (reg:SI 168) 0)) -1 (nil))

(insn 38 37 39 include/linux/genhd.h:210 (set (reg:QI 170)
        (subreg:QI (reg:SI 144 [ D.53103 ]) 0)) -1 (nil))

(insn 39 38 40 include/linux/genhd.h:210 (set (reg:SI 171)
        (ior:SI (subreg:SI (reg:QI 169) 0)
            (subreg:SI (reg:QI 170) 0))) -1 (nil))

(insn 40 39 41 include/linux/genhd.h:210 (set (reg:QI 172)
        (subreg:QI (reg:SI 171) 0)) -1 (nil))

(insn 41 40 0 include/linux/genhd.h:210 (set (mem:QI (plus:SI (reg:SI 167)
                (reg/v:SI 143 [ i ])) [0 S1 A8])
        (reg:QI 172)) -1 (nil))

;; name.1256 = name.1256 + 2;

(insn 42 41 0 include/linux/genhd.h:212 (set (reg/v/f:SI 134 [ name.1256 ])
        (plus:SI (reg/v/f:SI 134 [ name.1256 ])
            (const_int 2 [0x2]))) -1 (nil))

;; switch (i) <default: <L37>, case 3: <L36>, case 5: <L36>, case 7: <L36>, case 9: <L36>>

(insn 43 42 44 include/linux/genhd.h:213 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 143 [ i ])
            (const_int 9 [0x9]))) -1 (nil))

(jump_insn 44 43 45 include/linux/genhd.h:213 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (nil))

(insn 45 44 46 include/linux/genhd.h:213 (set (reg:SI 174)
        (const_int 1 [0x1])) -1 (nil))

(insn 46 45 47 include/linux/genhd.h:213 (set (reg:SI 173)
        (ashift:SI (reg:SI 174)
            (reg/v:SI 143 [ i ]))) -1 (nil))

(insn 47 46 48 include/linux/genhd.h:213 (set (reg:SI 175)
        (and:SI (reg:SI 173)
            (const_int 680 [0x2a8]))) -1 (nil))

(insn 48 47 49 include/linux/genhd.h:213 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 175)
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 49 48 50 include/linux/genhd.h:213 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (nil))

(jump_insn 50 49 51 include/linux/genhd.h:213 (set (pc)
        (label_ref 0)) -1 (nil))

(barrier 51 50 0)

;; Generating RTL for gimple basic block 6

;; <L36>:

(code_label 52 51 53 89 "" [0 uses])

(note 53 52 0 NOTE_INSN_BASIC_BLOCK)

;; name.1256 = name.1256 + 1;

(insn 54 53 0 include/linux/genhd.h:218 (set (reg/v/f:SI 134 [ name.1256 ])
        (plus:SI (reg/v/f:SI 134 [ name.1256 ])
            (const_int 1 [0x1]))) -1 (nil))

;; Generating RTL for gimple basic block 7

;; <L37>:

(code_label 55 54 56 88 "" [0 uses])

(note 56 55 0 NOTE_INSN_BASIC_BLOCK)

;; i = i + 1;

(insn 57 56 0 include/linux/genhd.h:209 (set (reg/v:SI 143 [ i ])
        (plus:SI (reg/v:SI 143 [ i ])
            (const_int 1 [0x1]))) -1 (nil))

;; if (i != 16)

(insn 59 57 60 include/linux/genhd.h:209 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 143 [ i ])
            (const_int 16 [0x10]))) -1 (nil))

(jump_insn 60 59 0 include/linux/genhd.h:209 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 58)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 9375 [0x249f])
        (nil)))

;; Generating RTL for gimple basic block 8

;; dev = class_find_device (&block_class, 0B, &uuid, match_dev_by_uuid);

(insn 62 61 63 init/do_mounts.c:105 (set (reg:SI 176)
        (symbol_ref:SI ("block_class") [flags 0xc0] <var_decl 0x11593de0 block_class>)) -1 (nil))

(insn 63 62 64 init/do_mounts.c:105 (set (reg:SI 177)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -28 [0xffffffffffffffe4]))) -1 (nil))

(insn 64 63 65 init/do_mounts.c:105 (set (reg:SI 178)
        (symbol_ref:SI ("match_dev_by_uuid") [flags 0x3] <function_decl 0x12135300 match_dev_by_uuid>)) -1 (nil))

(insn 65 64 66 init/do_mounts.c:105 (set (reg:SI 0 r0)
        (reg:SI 176)) -1 (nil))

(insn 66 65 67 init/do_mounts.c:105 (set (reg:SI 1 r1)
        (const_int 0 [0x0])) -1 (nil))

(insn 67 66 68 init/do_mounts.c:105 (set (reg:SI 2 r2)
        (reg:SI 177)) -1 (nil))

(insn 68 67 69 init/do_mounts.c:105 (set (reg:SI 3 r3)
        (reg:SI 178)) -1 (nil))

(call_insn 69 68 70 init/do_mounts.c:105 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("class_find_device") [flags 0x41] <function_decl 0x11201980 class_find_device>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 70 69 0 init/do_mounts.c:105 (set (reg/v/f:SI 142 [ dev ])
        (reg:SI 0 r0)) -1 (nil))

;; if (dev == 0B)

(insn 71 70 72 init/do_mounts.c:106 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 142 [ dev ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 72 71 0 init/do_mounts.c:106 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 3017 [0xbc9])
        (nil)))

;; Generating RTL for gimple basic block 9

;; res = dev->devt;

(insn 74 73 0 init/do_mounts.c:109 (set (reg/v:SI 147 [ res ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 142 [ dev ])
                (const_int 308 [0x134])) [0 <variable>.devt+0 S4 A32])) -1 (nil))

;; put_device (dev);

(insn 75 74 76 init/do_mounts.c:110 (set (reg:SI 0 r0)
        (reg/v/f:SI 142 [ dev ])) -1 (nil))

(call_insn 76 75 0 init/do_mounts.c:110 (parallel [
            (call (mem:SI (symbol_ref:SI ("put_device") [flags 0x41] <function_decl 0x11229c80 put_device>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

;; Generating RTL for gimple basic block 10

;; 

(code_label 79 78 80 86 "" [0 uses])

(note 80 79 0 NOTE_INSN_BASIC_BLOCK)

;; D.52711 = strncmp (name, &"/dev/"[0], 5);

(insn 81 80 82 init/do_mounts.c:155 (set (reg:SI 179)
        (symbol_ref/v/f:SI ("*.LC15") [flags 0x82] <string_cst 0x121f9900>)) -1 (nil))

(insn 82 81 83 init/do_mounts.c:155 (set (reg:SI 0 r0)
        (reg/v/f:SI 161 [ name ])) -1 (nil))

(insn 83 82 84 init/do_mounts.c:155 (set (reg:SI 1 r1)
        (reg:SI 179)) -1 (nil))

(insn 84 83 85 init/do_mounts.c:155 (set (reg:SI 2 r2)
        (const_int 5 [0x5])) -1 (nil))

(call_insn/i 85 84 86 init/do_mounts.c:155 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strncmp") [flags 0x41] <function_decl 0x51157e80 strncmp>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 86 85 87 init/do_mounts.c:155 (set (reg:SI 180)
        (reg:SI 0 r0)) -1 (nil))

(insn 87 86 0 init/do_mounts.c:155 (set (reg:SI 157 [ D.52711 ])
        (reg:SI 180)) -1 (nil))

;; if (D.52711 != 0)

(insn 88 87 89 init/do_mounts.c:155 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 157 [ D.52711 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 89 88 0 init/do_mounts.c:155 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))

;; Generating RTL for gimple basic block 11

;; D.52714 = sscanf (name, &"%u:%u"[0], &maj, &min);

(insn 91 90 92 init/do_mounts.c:158 (set (reg:SI 181)
        (symbol_ref/v/f:SI ("*.LC16") [flags 0x82] <string_cst 0x121f9960>)) -1 (nil))

(insn 92 91 93 init/do_mounts.c:158 (set (reg:SI 182)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -8 [0xfffffffffffffff8]))) -1 (nil))

(insn 93 92 94 init/do_mounts.c:158 (set (reg:SI 183)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -12 [0xfffffffffffffff4]))) -1 (nil))

(insn 94 93 95 init/do_mounts.c:158 (set (reg:SI 0 r0)
        (reg/v/f:SI 161 [ name ])) -1 (nil))

(insn 95 94 96 init/do_mounts.c:158 (set (reg:SI 1 r1)
        (reg:SI 181)) -1 (nil))

(insn 96 95 97 init/do_mounts.c:158 (set (reg:SI 2 r2)
        (reg:SI 182)) -1 (nil))

(insn 97 96 98 init/do_mounts.c:158 (set (reg:SI 3 r3)
        (reg:SI 183)) -1 (nil))

(call_insn 98 97 99 init/do_mounts.c:158 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sscanf") [flags 0x41] <function_decl 0x5115e880 sscanf>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 99 98 0 init/do_mounts.c:158 (set (reg:SI 156 [ D.52714 ])
        (reg:SI 0 r0)) -1 (nil))

;; if (D.52714 == 2)

(insn 100 99 101 init/do_mounts.c:158 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 156 [ D.52714 ])
            (const_int 2 [0x2]))) -1 (nil))

(jump_insn 101 100 0 init/do_mounts.c:158 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 5123 [0x1403])
        (nil)))

;; Generating RTL for gimple basic block 12

;; maj.879 = maj;

(insn 103 102 0 init/do_mounts.c:159 (set (reg:SI 155 [ maj.879 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 maj+0 S4 A64])) -1 (nil))

;; min.880 = min;

(insn 104 103 0 init/do_mounts.c:159 (set (reg:SI 154 [ min.880 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 min+0 S4 A32])) -1 (nil))

;; res = maj.879 << 20 | min.880;

(insn 105 104 106 init/do_mounts.c:159 (set (reg:SI 184)
        (ashift:SI (reg:SI 155 [ maj.879 ])
            (const_int 20 [0x14]))) -1 (nil))

(insn 106 105 0 init/do_mounts.c:159 (set (reg/v:SI 147 [ res ])
        (ior:SI (reg:SI 184)
            (reg:SI 154 [ min.880 ]))) -1 (nil))

;; if (maj.879 != res >> 20)

(insn 107 106 108 init/do_mounts.c:160 (set (reg:SI 185)
        (lshiftrt:SI (reg/v:SI 147 [ res ])
            (const_int 20 [0x14]))) -1 (nil))

(insn 108 107 109 init/do_mounts.c:160 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 155 [ maj.879 ])
            (reg:SI 185))) -1 (nil))

(jump_insn 109 108 0 init/do_mounts.c:160 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 6218 [0x184a])
        (nil)))

;; Generating RTL for gimple basic block 13

;; if (min.880 != res & 1048575)

(insn 111 110 112 13 init/do_mounts.c:160 discrim 1 (set (reg:SI 187)
        (and:SI (reg/v:SI 147 [ res ])
            (const_int 16777215 [0xffffff]))) -1 (nil))

(insn 112 111 113 13 init/do_mounts.c:160 discrim 1 (set (reg:SI 186)
        (and:SI (reg:SI 187)
            (const_int -15728641 [0xffffffffff0fffff]))) -1 (expr_list:REG_EQUAL (and:SI (reg/v:SI 147 [ res ])
            (const_int 1048575 [0xfffff]))
        (nil)))

(insn 113 112 114 13 init/do_mounts.c:160 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 154 [ min.880 ])
            (reg:SI 186))) -1 (nil))

(jump_insn 114 113 117 13 init/do_mounts.c:160 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 6218 [0x184a])
        (nil)))

(note 117 114 115 41 [bb 41] NOTE_INSN_BASIC_BLOCK)

(jump_insn 115 117 116 41 init/do_mounts.c:160 discrim 1 (set (pc)
        (label_ref 0)) -1 (nil))

(barrier 116 115 0)

;; Generating RTL for gimple basic block 14

;; 

(code_label 118 116 119 93 "" [0 uses])

(note 119 118 0 NOTE_INSN_BASIC_BLOCK)

;; D.52725 = simple_strtoul (name, &p, 16);

(insn 120 119 121 init/do_mounts.c:163 (set (reg:SI 188)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -4 [0xfffffffffffffffc]))) -1 (nil))

(insn 121 120 122 init/do_mounts.c:163 (set (reg:SI 0 r0)
        (reg/v/f:SI 161 [ name ])) -1 (nil))

(insn 122 121 123 init/do_mounts.c:163 (set (reg:SI 1 r1)
        (reg:SI 188)) -1 (nil))

(insn 123 122 124 init/do_mounts.c:163 (set (reg:SI 2 r2)
        (const_int 16 [0x10])) -1 (nil))

(call_insn 124 123 125 init/do_mounts.c:163 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("simple_strtoul") [flags 0x41] <function_decl 0x10a77e00 simple_strtoul>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 125 124 0 init/do_mounts.c:163 (set (reg:SI 153 [ D.52725 ])
        (reg:SI 0 r0)) -1 (nil))

;; if (*p != 0)

(insn 126 125 127 14 init/do_mounts.c:164 (set (reg/f:SI 189)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 p+0 S4 A32])) -1 (nil))

(insn 127 126 128 14 init/do_mounts.c:164 (set (reg:SI 190)
        (zero_extend:SI (mem:QI (reg/f:SI 189) [0 S1 A8]))) -1 (nil))

(insn 128 127 129 14 init/do_mounts.c:164 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 190)
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 129 128 132 14 init/do_mounts.c:164 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))

(note 132 129 130 42 [bb 42] NOTE_INSN_BASIC_BLOCK)

(jump_insn 130 132 131 42 init/do_mounts.c:164 (set (pc)
        (label_ref 0)) -1 (nil))

(barrier 131 130 0)

;; Generating RTL for gimple basic block 15

;; 

(code_label 133 131 134 92 "" [0 uses])

(note 134 133 0 NOTE_INSN_BASIC_BLOCK)

;; name.1246 = name + 5;

(insn 135 134 0 init/do_mounts.c:170 (set (reg/v/f:SI 141 [ name.1246 ])
        (plus:SI (reg/v/f:SI 161 [ name ])
            (const_int 5 [0x5]))) -1 (nil))

;; D.52730 = strcmp (name.1246, &"nfs"[0]);

(insn 136 135 137 init/do_mounts.c:172 (set (reg:SI 191)
        (symbol_ref/v/f:SI ("*.LC11") [flags 0x82] <string_cst 0x121e0cc0>)) -1 (nil))

(insn 137 136 138 init/do_mounts.c:172 (set (reg:SI 0 r0)
        (reg/v/f:SI 141 [ name.1246 ])) -1 (nil))

(insn 138 137 139 init/do_mounts.c:172 (set (reg:SI 1 r1)
        (reg:SI 191)) -1 (nil))

(call_insn/i 139 138 140 init/do_mounts.c:172 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcmp") [flags 0x41] <function_decl 0x51157680 strcmp>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 140 139 141 init/do_mounts.c:172 (set (reg:SI 192)
        (reg:SI 0 r0)) -1 (nil))

(insn 141 140 0 init/do_mounts.c:172 (set (reg:SI 152 [ D.52730 ])
        (reg:SI 192)) -1 (nil))

;; if (D.52730 == 0)

(insn 142 141 143 init/do_mounts.c:172 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 152 [ D.52730 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 143 142 0 init/do_mounts.c:172 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

;; Generating RTL for gimple basic block 16

;; res = 255;

(insn 145 144 0 init/do_mounts.c:171 (set (reg/v:SI 147 [ res ])
        (const_int 255 [0xff])) -1 (nil))

;; Generating RTL for gimple basic block 17

;; 

(code_label 148 147 149 95 "" [0 uses])

(note 149 148 0 NOTE_INSN_BASIC_BLOCK)

;; D.52732 = strcmp (name.1246, &"ram"[0]);

(insn 150 149 151 init/do_mounts.c:175 (set (reg:SI 193)
        (symbol_ref/v/f:SI ("*.LC17") [flags 0x82] <string_cst 0x121ff060>)) -1 (nil))

(insn 151 150 152 init/do_mounts.c:175 (set (reg:SI 0 r0)
        (reg/v/f:SI 141 [ name.1246 ])) -1 (nil))

(insn 152 151 153 init/do_mounts.c:175 (set (reg:SI 1 r1)
        (reg:SI 193)) -1 (nil))

(call_insn/i 153 152 154 init/do_mounts.c:175 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcmp") [flags 0x41] <function_decl 0x51157680 strcmp>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 154 153 155 init/do_mounts.c:175 (set (reg:SI 194)
        (reg:SI 0 r0)) -1 (nil))

(insn 155 154 0 init/do_mounts.c:175 (set (reg:SI 151 [ D.52732 ])
        (reg:SI 194)) -1 (nil))

;; if (D.52732 == 0)

(insn 156 155 157 init/do_mounts.c:175 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 151 [ D.52732 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 157 156 0 init/do_mounts.c:175 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

;; Generating RTL for gimple basic block 18

;; res = 1048576;

(insn 159 158 0 init/do_mounts.c:174 (set (reg/v:SI 147 [ res ])
        (const_int 1048576 [0x100000])) -1 (nil))

;; Generating RTL for gimple basic block 19

;; 

(code_label 162 161 163 96 "" [0 uses])

(note 163 162 0 NOTE_INSN_BASIC_BLOCK)

;; D.52734 = strlen (name.1246);

(insn 164 163 165 init/do_mounts.c:178 (set (reg:SI 0 r0)
        (reg/v/f:SI 141 [ name.1246 ])) -1 (nil))

(call_insn/i 165 164 166 init/do_mounts.c:178 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strlen") [flags 0x41] <function_decl 0x51157b80 strlen>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 166 165 167 init/do_mounts.c:178 (set (reg:SI 195)
        (reg:SI 0 r0)) -1 (nil))

(insn 167 166 0 init/do_mounts.c:178 (set (reg:SI 150 [ D.52734 ])
        (reg:SI 195)) -1 (nil))

;; if (D.52734 > 31)

(insn 168 167 169 init/do_mounts.c:178 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 150 [ D.52734 ])
            (const_int 31 [0x1f]))) -1 (nil))

(jump_insn 169 168 0 init/do_mounts.c:178 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 6102 [0x17d6])
        (nil)))

;; Generating RTL for gimple basic block 20

;; strcpy (&s, name.1246);

(insn 171 170 172 init/do_mounts.c:180 (set (reg:SI 196)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -60 [0xffffffffffffffc4]))) -1 (nil))

(insn 172 171 173 init/do_mounts.c:180 (set (reg:SI 0 r0)
        (reg:SI 196)) -1 (nil))

(insn 173 172 174 init/do_mounts.c:180 (set (reg:SI 1 r1)
        (reg/v/f:SI 141 [ name.1246 ])) -1 (nil))

(call_insn 174 173 0 init/do_mounts.c:180 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcpy") [flags 0x41] <function_decl 0x51157780 strcpy>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

;; p = &s;

(insn 175 174 176 init/do_mounts.c:181 (set (reg:SI 197)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -60 [0xffffffffffffffc4]))) -1 (nil))

(insn 176 175 0 init/do_mounts.c:181 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 p+0 S4 A32])
        (reg:SI 197)) -1 (nil))

;; Generating RTL for gimple basic block 21

;; if (temp.1248 == 47)

(insn 180 179 181 init/do_mounts.c:182 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 139 [ temp.1248 ])
            (const_int 47 [0x2f]))) -1 (nil))

(jump_insn 181 180 0 init/do_mounts.c:182 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
        (nil)))

;; Generating RTL for gimple basic block 22

;; *p.1247 = 33;

(insn 183 182 184 init/do_mounts.c:183 (set (reg:SI 198)
        (const_int 33 [0x21])) -1 (nil))

(insn 184 183 185 init/do_mounts.c:183 (set (reg:QI 199)
        (subreg:QI (reg:SI 198) 0)) -1 (nil))

(insn 185 184 0 init/do_mounts.c:183 (set (mem:QI (reg/f:SI 140 [ p.1247 ]) [0 S1 A8])
        (reg:QI 199)) -1 (nil))

;; Generating RTL for gimple basic block 23

;; 

(code_label 186 185 187 98 "" [0 uses])

(note 187 186 0 NOTE_INSN_BASIC_BLOCK)

;; p = [pointer_plus_expr] p + 1;

(insn 188 187 189 init/do_mounts.c:181 (set (reg:SI 200)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 p+0 S4 A32])) -1 (nil))

(insn 189 188 190 init/do_mounts.c:181 (set (reg:SI 201)
        (plus:SI (reg:SI 200)
            (const_int 1 [0x1]))) -1 (nil))

(insn 190 189 0 init/do_mounts.c:181 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 p+0 S4 A32])
        (reg:SI 201)) -1 (nil))

;; Generating RTL for gimple basic block 24

;; 

(code_label 191 190 192 97 "" [0 uses])

(note 192 191 0 NOTE_INSN_BASIC_BLOCK)

;; p.1247 = p;

(insn 193 192 0 init/do_mounts.c:181 discrim 1 (set (reg/f:SI 140 [ p.1247 ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 p+0 S4 A32])) -1 (nil))

;; temp.1248 = *p.1247;

(insn 194 193 0 init/do_mounts.c:181 discrim 1 (set (reg:SI 139 [ temp.1248 ])
        (zero_extend:SI (mem:QI (reg/f:SI 140 [ p.1247 ]) [0 S1 A8]))) -1 (nil))

;; if (temp.1248 != 0)

(insn 196 194 197 init/do_mounts.c:181 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 139 [ temp.1248 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 197 196 0 init/do_mounts.c:181 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 195)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
        (nil)))

;; Generating RTL for gimple basic block 25

;; res = blk_lookup_devt (&s, 0);

(insn 199 198 200 init/do_mounts.c:184 (set (reg:SI 202)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -60 [0xffffffffffffffc4]))) -1 (nil))

(insn 200 199 201 init/do_mounts.c:184 (set (reg:SI 0 r0)
        (reg:SI 202)) -1 (nil))

(insn 201 200 202 init/do_mounts.c:184 (set (reg:SI 1 r1)
        (const_int 0 [0x0])) -1 (nil))

(call_insn 202 201 203 init/do_mounts.c:184 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("blk_lookup_devt") [flags 0x41] <function_decl 0x115c3b00 blk_lookup_devt>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 203 202 0 init/do_mounts.c:184 (set (reg/v:SI 147 [ res ])
        (reg:SI 0 r0)) -1 (nil))

;; if (res != 0)

(insn 204 203 205 25 init/do_mounts.c:185 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 147 [ res ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 205 204 208 25 init/do_mounts.c:185 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

(note 208 205 206 43 [bb 43] NOTE_INSN_BASIC_BLOCK)

(jump_insn 206 208 207 43 init/do_mounts.c:185 (set (pc)
        (label_ref 0)) -1 (nil))

(barrier 207 206 0)

;; Generating RTL for gimple basic block 26

;; p = p.885;

(insn 210 209 0 init/do_mounts.c:193 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 p+0 S4 A32])
        (reg/f:SI 149 [ p.885 ])) -1 (nil))

;; Generating RTL for gimple basic block 27

;; 

(code_label 211 210 212 100 "" [0 uses])

(note 212 211 0 NOTE_INSN_BASIC_BLOCK)

;; p.1250 = p;

(insn 213 212 0 init/do_mounts.c:192 discrim 1 (set (reg/f:SI 138 [ p.1250 ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 p+0 S4 A32])) -1 (nil))

;; if (p.1250 > &s)

(insn 214 213 215 init/do_mounts.c:192 discrim 1 (set (reg:SI 203)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -60 [0xffffffffffffffc4]))) -1 (nil))

(insn 215 214 216 init/do_mounts.c:192 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 138 [ p.1250 ])
            (reg:SI 203))) -1 (nil))

(jump_insn 216 215 0 init/do_mounts.c:192 discrim 1 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 450 [0x1c2])
        (nil)))

;; Generating RTL for gimple basic block 28

;; p.885 = p.1250 + -1;

(insn 218 217 0 init/do_mounts.c:192 discrim 2 (set (reg/f:SI 149 [ p.885 ])
        (plus:SI (reg/f:SI 138 [ p.1250 ])
            (const_int -1 [0xffffffffffffffff]))) -1 (nil))

;; if ((int) _ctype[(int) *p.885] & 4 != 0)

(insn 220 218 221 init/do_mounts.c:192 discrim 2 (set (reg/f:SI 204)
        (symbol_ref:SI ("_ctype") [flags 0xc0] <var_decl 0x10fff720 _ctype>)) -1 (nil))

(insn 221 220 222 init/do_mounts.c:192 discrim 2 (set (reg:SI 205)
        (zero_extend:SI (mem:QI (reg/f:SI 149 [ p.885 ]) [0 S1 A8]))) -1 (nil))

(insn 222 221 223 init/do_mounts.c:192 discrim 2 (set (reg:SI 206)
        (zero_extend:SI (mem/s/u/j:QI (plus:SI (reg/f:SI 204)
                    (reg:SI 205)) [0 _ctype S1 A8]))) -1 (nil))

(insn 223 222 224 init/do_mounts.c:192 discrim 2 (set (reg:SI 207)
        (and:SI (reg:SI 206)
            (const_int 4 [0x4]))) -1 (nil))

(insn 224 223 225 init/do_mounts.c:192 discrim 2 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 207)
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 225 224 0 init/do_mounts.c:192 discrim 2 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 219)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 9550 [0x254e])
        (nil)))

;; Generating RTL for gimple basic block 29

;; 

(code_label 226 225 227 101 "" [0 uses])

(note 227 226 0 NOTE_INSN_BASIC_BLOCK)

;; if (p.1250 == &s)

(insn 228 227 229 init/do_mounts.c:194 (set (reg:SI 208)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -60 [0xffffffffffffffc4]))) -1 (nil))

(insn 229 228 230 init/do_mounts.c:194 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 138 [ p.1250 ])
            (reg:SI 208))) -1 (nil))

(jump_insn 230 229 0 init/do_mounts.c:194 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 1014 [0x3f6])
        (nil)))

;; Generating RTL for gimple basic block 30

;; temp.1251 = *p.1250;

(insn 232 231 0 init/do_mounts.c:194 discrim 1 (set (reg:SI 137 [ temp.1251 ])
        (zero_extend:SI (mem:QI (reg/f:SI 138 [ p.1250 ]) [0 S1 A8]))) -1 (nil))

;; if (temp.1251 == 0)

(insn 233 232 234 init/do_mounts.c:194 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 137 [ temp.1251 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 234 233 0 init/do_mounts.c:194 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))

;; Generating RTL for gimple basic block 31

;; if (temp.1251 == 48)

(insn 236 235 237 init/do_mounts.c:194 discrim 2 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 137 [ temp.1251 ])
            (const_int 48 [0x30]))) -1 (nil))

(jump_insn 237 236 0 init/do_mounts.c:194 discrim 2 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 3784 [0xec8])
        (nil)))

;; Generating RTL for gimple basic block 32

;; D.52751 = simple_strtoul (p.1250, 0B, 10);

(insn 239 238 240 init/do_mounts.c:198 (set (reg:SI 0 r0)
        (reg/f:SI 138 [ p.1250 ])) -1 (nil))

(insn 240 239 241 init/do_mounts.c:198 (set (reg:SI 1 r1)
        (const_int 0 [0x0])) -1 (nil))

(insn 241 240 242 init/do_mounts.c:198 (set (reg:SI 2 r2)
        (const_int 10 [0xa])) -1 (nil))

(call_insn 242 241 243 init/do_mounts.c:198 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("simple_strtoul") [flags 0x41] <function_decl 0x10a77e00 simple_strtoul>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 243 242 0 init/do_mounts.c:198 (set (reg:SI 148 [ D.52751 ])
        (reg:SI 0 r0)) -1 (nil))

;; part = (int) D.52751;

(insn 244 243 0 init/do_mounts.c:198 (set (reg/v:SI 146 [ part ])
        (reg:SI 148 [ D.52751 ])) -1 (nil))

;; *p = 0;

(insn 245 244 246 init/do_mounts.c:199 (set (reg/f:SI 209)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 p+0 S4 A32])) -1 (nil))

(insn 246 245 247 init/do_mounts.c:199 (set (reg:SI 210)
        (const_int 0 [0x0])) -1 (nil))

(insn 247 246 248 init/do_mounts.c:199 (set (reg:QI 211)
        (subreg:QI (reg:SI 210) 0)) -1 (nil))

(insn 248 247 0 init/do_mounts.c:199 (set (mem:QI (reg/f:SI 209) [0 S1 A8])
        (reg:QI 211)) -1 (nil))

;; res = blk_lookup_devt (&s, part);

(insn 249 248 250 init/do_mounts.c:200 (set (reg:SI 212)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -60 [0xffffffffffffffc4]))) -1 (nil))

(insn 250 249 251 init/do_mounts.c:200 (set (reg:SI 0 r0)
        (reg:SI 212)) -1 (nil))

(insn 251 250 252 init/do_mounts.c:200 (set (reg:SI 1 r1)
        (reg/v:SI 146 [ part ])) -1 (nil))

(call_insn 252 251 253 init/do_mounts.c:200 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("blk_lookup_devt") [flags 0x41] <function_decl 0x115c3b00 blk_lookup_devt>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 253 252 0 init/do_mounts.c:200 (set (reg/v:SI 147 [ res ])
        (reg:SI 0 r0)) -1 (nil))

;; if (res != 0)

(insn 254 253 255 init/do_mounts.c:201 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 147 [ res ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 255 254 0 init/do_mounts.c:201 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

;; Generating RTL for gimple basic block 33

;; p.1253 = p;

(insn 257 256 0 init/do_mounts.c:205 (set (reg/f:SI 136 [ p.1253 ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 p+0 S4 A32])) -1 (nil))

;; if (p.1253 < &s[2])

(insn 258 257 259 init/do_mounts.c:205 (set (reg:SI 213)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -60 [0xffffffffffffffc4]))) -1 (nil))

(insn 259 258 260 init/do_mounts.c:205 (set (reg:SI 214)
        (plus:SI (reg:SI 213)
            (const_int 2 [0x2]))) -1 (nil))

(insn 260 259 261 init/do_mounts.c:205 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 136 [ p.1253 ])
            (reg:SI 214))) -1 (nil))

(jump_insn 261 260 0 init/do_mounts.c:205 (set (pc)
        (if_then_else (ltu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))

;; Generating RTL for gimple basic block 34

;; if ((int) _ctype[(int) *(p.1253 + -2)] & 4 == 0)

(insn 263 262 264 init/do_mounts.c:205 discrim 1 (set (reg/f:SI 215)
        (symbol_ref:SI ("_ctype") [flags 0xc0] <var_decl 0x10fff720 _ctype>)) -1 (nil))

(insn 264 263 265 init/do_mounts.c:205 discrim 1 (set (reg:SI 216)
        (zero_extend:SI (mem:QI (plus:SI (reg/f:SI 136 [ p.1253 ])
                    (const_int -2 [0xfffffffffffffffe])) [0 S1 A8]))) -1 (nil))

(insn 265 264 266 init/do_mounts.c:205 discrim 1 (set (reg:SI 217)
        (zero_extend:SI (mem/s/u/j:QI (plus:SI (reg/f:SI 215)
                    (reg:SI 216)) [0 _ctype S1 A8]))) -1 (nil))

(insn 266 265 267 init/do_mounts.c:205 discrim 1 (set (reg:SI 218)
        (and:SI (reg:SI 217)
            (const_int 4 [0x4]))) -1 (nil))

(insn 267 266 268 init/do_mounts.c:205 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 218)
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 268 267 0 init/do_mounts.c:205 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))

;; Generating RTL for gimple basic block 35

;; p.1254 = p.1253 + -1;

(insn 270 269 0 init/do_mounts.c:205 discrim 2 (set (reg/f:SI 135 [ p.1254 ])
        (plus:SI (reg/f:SI 136 [ p.1253 ])
            (const_int -1 [0xffffffffffffffff]))) -1 (nil))

;; if (*p.1254 != 112)

(insn 271 270 272 init/do_mounts.c:205 discrim 2 (set (reg:SI 219)
        (zero_extend:SI (mem:QI (reg/f:SI 135 [ p.1254 ]) [0 S1 A8]))) -1 (nil))

(insn 272 271 273 init/do_mounts.c:205 discrim 2 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 219)
            (const_int 112 [0x70]))) -1 (nil))

(jump_insn 273 272 0 init/do_mounts.c:205 discrim 2 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 8010 [0x1f4a])
        (nil)))

;; Generating RTL for gimple basic block 36

;; *p.1254 = 0;

(insn 275 274 276 init/do_mounts.c:207 (set (reg:SI 220)
        (const_int 0 [0x0])) -1 (nil))

(insn 276 275 277 init/do_mounts.c:207 (set (reg:QI 221)
        (subreg:QI (reg:SI 220) 0)) -1 (nil))

(insn 277 276 0 init/do_mounts.c:207 (set (mem:QI (reg/f:SI 135 [ p.1254 ]) [0 S1 A8])
        (reg:QI 221)) -1 (nil))

;; res = blk_lookup_devt (&s, part);

(insn 278 277 279 init/do_mounts.c:208 (set (reg:SI 222)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -60 [0xffffffffffffffc4]))) -1 (nil))

(insn 279 278 280 init/do_mounts.c:208 (set (reg:SI 0 r0)
        (reg:SI 222)) -1 (nil))

(insn 280 279 281 init/do_mounts.c:208 (set (reg:SI 1 r1)
        (reg/v:SI 146 [ part ])) -1 (nil))

(call_insn 281 280 282 init/do_mounts.c:208 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("blk_lookup_devt") [flags 0x41] <function_decl 0x115c3b00 blk_lookup_devt>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 282 281 0 init/do_mounts.c:208 (set (reg/v:SI 147 [ res ])
        (reg:SI 0 r0)) -1 (nil))

;; Generating RTL for gimple basic block 37

;; 

(code_label 285 284 286 94 "" [0 uses])

(note 286 285 0 NOTE_INSN_BASIC_BLOCK)

;; res = (D.52725 >> 12 & 1048320 | D.52725 & 255) | ((D.52725 & 1048320) >> 8) << 20;

(insn 287 286 288 include/linux/kdev_t.h:52 (set (reg:SI 223)
        (lshiftrt:SI (reg:SI 153 [ D.52725 ])
            (const_int 12 [0xc]))) -1 (nil))

(insn 288 287 289 include/linux/kdev_t.h:52 (set (reg:SI 225)
        (const_int 1048320 [0xfff00])) -1 (nil))

(insn 289 288 290 include/linux/kdev_t.h:52 (set (reg:SI 224)
        (and:SI (reg:SI 223)
            (reg:SI 225))) -1 (expr_list:REG_EQUAL (and:SI (reg:SI 223)
            (const_int 1048320 [0xfff00]))
        (nil)))

(insn 290 289 291 include/linux/kdev_t.h:52 (set (reg:SI 226)
        (and:SI (reg:SI 153 [ D.52725 ])
            (const_int 255 [0xff]))) -1 (nil))

(insn 291 290 292 include/linux/kdev_t.h:52 (set (reg:SI 227)
        (ior:SI (reg:SI 224)
            (reg:SI 226))) -1 (nil))

(insn 292 291 293 include/linux/kdev_t.h:52 (set (reg:SI 229)
        (const_int 1048320 [0xfff00])) -1 (nil))

(insn 293 292 294 include/linux/kdev_t.h:52 (set (reg:SI 228)
        (and:SI (reg:SI 153 [ D.52725 ])
            (reg:SI 229))) -1 (expr_list:REG_EQUAL (and:SI (reg:SI 153 [ D.52725 ])
            (const_int 1048320 [0xfff00]))
        (nil)))

(insn 294 293 295 include/linux/kdev_t.h:52 (set (reg:SI 230)
        (lshiftrt:SI (reg:SI 228)
            (const_int 8 [0x8]))) -1 (nil))

(insn 295 294 296 include/linux/kdev_t.h:52 (set (reg:SI 231)
        (ashift:SI (reg:SI 230)
            (const_int 20 [0x14]))) -1 (nil))

(insn 296 295 0 include/linux/kdev_t.h:52 (set (reg/v:SI 147 [ res ])
        (ior:SI (reg:SI 227)
            (reg:SI 231))) -1 (nil))

;; Generating RTL for gimple basic block 38

;; 

(code_label 299 298 300 87 "" [0 uses])

(note 300 299 0 NOTE_INSN_BASIC_BLOCK)

;; res = 0;

(insn 301 300 0 init/do_mounts.c:213 (set (reg/v:SI 147 [ res ])
        (const_int 0 [0x0])) -1 (nil))

;; Generating RTL for gimple basic block 39

;; 

(code_label 302 301 303 91 "" [0 uses])

(note 303 302 0 NOTE_INSN_BASIC_BLOCK)

;; return res;

(insn 304 303 305 init/do_mounts.c:216 (set (reg:SI 160 [ <result> ])
        (reg/v:SI 147 [ res ])) -1 (nil))

(jump_insn 305 304 306 init/do_mounts.c:216 (set (pc)
        (label_ref 0)) -1 (nil))

(barrier 306 305 0)
Purged edges from bb 46
Predictions for insn 44 bb 5
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for insn 49 bb 45
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%


;;
;; Full RTL generated for this function:
;;
(note 2 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 2 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 3 5 4 2 init/do_mounts.c:137 (set (reg/v/f:SI 161 [ name ])
        (reg:SI 0 r0 [ name ])) -1 (nil))

(note 4 3 6 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 3)

;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [100.0%]  (fallthru)
(note 6 4 7 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 7 6 8 3 init/do_mounts.c:144 (set (reg:SI 162)
        (symbol_ref/v/f:SI ("*.LC14") [flags 0x82] <string_cst 0x121f8870>)) -1 (nil))

(insn 8 7 9 3 init/do_mounts.c:144 (set (reg:SI 0 r0)
        (reg/v/f:SI 161 [ name ])) -1 (nil))

(insn 9 8 10 3 init/do_mounts.c:144 (set (reg:SI 1 r1)
        (reg:SI 162)) -1 (nil))

(insn 10 9 11 3 init/do_mounts.c:144 (set (reg:SI 2 r2)
        (const_int 9 [0x9])) -1 (nil))

(call_insn/i 11 10 12 3 init/do_mounts.c:144 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strncmp") [flags 0x41] <function_decl 0x51157e80 strncmp>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 12 11 13 3 init/do_mounts.c:144 (set (reg:SI 163)
        (reg:SI 0 r0)) -1 (nil))

(insn 13 12 14 3 init/do_mounts.c:144 (set (reg:SI 159 [ D.52704 ])
        (reg:SI 163)) -1 (nil))

(insn 14 13 15 3 init/do_mounts.c:144 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 159 [ D.52704 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 15 14 16 3 init/do_mounts.c:144 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 79)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 3 -> ( 4 13)

;; Succ edge  4 [50.0%]  (fallthru)
;; Succ edge  13 [50.0%] 

;; Start of basic block ( 3) -> 4
;; Pred edge  3 [50.0%]  (fallthru)
(note 16 15 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 17 16 18 4 init/do_mounts.c:145 (set (reg/v/f:SI 134 [ name.1256 ])
        (plus:SI (reg/v/f:SI 161 [ name ])
            (const_int 9 [0x9]))) -1 (nil))

(insn 18 17 19 4 init/do_mounts.c:146 (set (reg:SI 0 r0)
        (reg/v/f:SI 134 [ name.1256 ])) -1 (nil))

(call_insn/i 19 18 20 4 init/do_mounts.c:146 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strlen") [flags 0x41] <function_decl 0x51157b80 strlen>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 20 19 21 4 init/do_mounts.c:146 (set (reg:SI 164)
        (reg:SI 0 r0)) -1 (nil))

(insn 21 20 22 4 init/do_mounts.c:146 (set (reg:SI 158 [ D.52707 ])
        (reg:SI 164)) -1 (nil))

(insn 22 21 23 4 init/do_mounts.c:146 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 158 [ D.52707 ])
            (const_int 36 [0x24]))) -1 (nil))

(jump_insn 23 22 24 4 init/do_mounts.c:146 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 299)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 6218 [0x184a])
        (nil)))
;; End of basic block 4 -> ( 44 5)

;; Succ edge  44 [62.2%] 
;; Succ edge  5 [37.8%]  (fallthru)

;; Start of basic block ( 4) -> 5
;; Pred edge  4 [37.8%]  (fallthru)
(note 24 23 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 25 24 58 5 init/do_mounts.c:146 (set (reg/v:SI 143 [ i ])
        (const_int 0 [0x0])) -1 (nil))
;; End of basic block 5 -> ( 6)

;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 5 10) -> 6
;; Pred edge  5 [100.0%]  (fallthru)
;; Pred edge  10 [93.8%]  (dfs_back)
(code_label 58 25 26 6 90 "" [1 uses])

(note 26 58 27 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 27 26 28 6 include/linux/genhd.h:210 (set (reg:SI 165)
        (zero_extend:SI (mem:QI (reg/v/f:SI 134 [ name.1256 ]) [0 S1 A8]))) -1 (nil))

(insn 28 27 29 6 include/linux/genhd.h:210 (set (reg:SI 0 r0)
        (reg:SI 165)) -1 (nil))

(call_insn 29 28 30 6 include/linux/genhd.h:210 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("hex_to_bin") [flags 0x41] <function_decl 0x10a82e00 hex_to_bin>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 30 29 31 6 include/linux/genhd.h:210 (set (reg:SI 145 [ D.53098 ])
        (reg:SI 0 r0)) -1 (nil))

(insn 31 30 32 6 include/linux/genhd.h:211 (set (reg:SI 166)
        (zero_extend:SI (mem:QI (plus:SI (reg/v/f:SI 134 [ name.1256 ])
                    (const_int 1 [0x1])) [0 S1 A8]))) -1 (nil))

(insn 32 31 33 6 include/linux/genhd.h:211 (set (reg:SI 0 r0)
        (reg:SI 166)) -1 (nil))

(call_insn 33 32 34 6 include/linux/genhd.h:211 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("hex_to_bin") [flags 0x41] <function_decl 0x10a82e00 hex_to_bin>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 34 33 35 6 include/linux/genhd.h:211 (set (reg:SI 144 [ D.53103 ])
        (reg:SI 0 r0)) -1 (nil))

(insn 35 34 36 6 include/linux/genhd.h:210 (set (reg:SI 167)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -28 [0xffffffffffffffe4]))) -1 (nil))

(insn 36 35 37 6 include/linux/genhd.h:210 (set (reg:SI 168)
        (ashift:SI (reg:SI 145 [ D.53098 ])
            (const_int 4 [0x4]))) -1 (nil))

(insn 37 36 38 6 include/linux/genhd.h:210 (set (reg:QI 169)
        (subreg:QI (reg:SI 168) 0)) -1 (nil))

(insn 38 37 39 6 include/linux/genhd.h:210 (set (reg:QI 170)
        (subreg:QI (reg:SI 144 [ D.53103 ]) 0)) -1 (nil))

(insn 39 38 40 6 include/linux/genhd.h:210 (set (reg:SI 171)
        (ior:SI (subreg:SI (reg:QI 169) 0)
            (subreg:SI (reg:QI 170) 0))) -1 (nil))

(insn 40 39 41 6 include/linux/genhd.h:210 (set (reg:QI 172)
        (subreg:QI (reg:SI 171) 0)) -1 (nil))

(insn 41 40 42 6 include/linux/genhd.h:210 (set (mem:QI (plus:SI (reg:SI 167)
                (reg/v:SI 143 [ i ])) [0 S1 A8])
        (reg:QI 172)) -1 (nil))

(insn 42 41 43 6 include/linux/genhd.h:212 (set (reg/v/f:SI 134 [ name.1256 ])
        (plus:SI (reg/v/f:SI 134 [ name.1256 ])
            (const_int 2 [0x2]))) -1 (nil))

(insn 43 42 44 6 include/linux/genhd.h:213 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 143 [ i ])
            (const_int 9 [0x9]))) -1 (nil))

(jump_insn 44 43 316 6 include/linux/genhd.h:213 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 55)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 6 -> ( 10 7)

;; Succ edge  10 [50.0%] 
;; Succ edge  7 [50.0%]  (fallthru)

;; Start of basic block ( 6) -> 7
;; Pred edge  6 [50.0%]  (fallthru)
(note 316 44 45 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 45 316 46 7 include/linux/genhd.h:213 (set (reg:SI 174)
        (const_int 1 [0x1])) -1 (nil))

(insn 46 45 47 7 include/linux/genhd.h:213 (set (reg:SI 173)
        (ashift:SI (reg:SI 174)
            (reg/v:SI 143 [ i ]))) -1 (nil))

(insn 47 46 48 7 include/linux/genhd.h:213 (set (reg:SI 175)
        (and:SI (reg:SI 173)
            (const_int 680 [0x2a8]))) -1 (nil))

(insn 48 47 49 7 include/linux/genhd.h:213 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 175)
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 49 48 317 7 include/linux/genhd.h:213 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 52)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 7 -> ( 9 8)

;; Succ edge  9 [50.0%] 
;; Succ edge  8 [50.0%]  (fallthru)

;; Start of basic block ( 7) -> 8
;; Pred edge  7 [50.0%]  (fallthru)
(note 317 49 50 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(jump_insn 50 317 51 8 include/linux/genhd.h:213 (set (pc)
        (label_ref 55)) -1 (nil))
;; End of basic block 8 -> ( 10)

;; Succ edge  10 [100.0%] 

(barrier 51 50 52)

;; Start of basic block ( 7) -> 9
;; Pred edge  7 [50.0%] 
(code_label 52 51 53 9 89 "" [1 uses])

(note 53 52 54 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 54 53 55 9 include/linux/genhd.h:218 (set (reg/v/f:SI 134 [ name.1256 ])
        (plus:SI (reg/v/f:SI 134 [ name.1256 ])
            (const_int 1 [0x1]))) -1 (nil))
;; End of basic block 9 -> ( 10)

;; Succ edge  10 [100.0%]  (fallthru)

;; Start of basic block ( 8 9 6) -> 10
;; Pred edge  8 [100.0%] 
;; Pred edge  9 [100.0%]  (fallthru)
;; Pred edge  6 [50.0%] 
(code_label 55 54 56 10 88 "" [2 uses])

(note 56 55 57 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 57 56 59 10 include/linux/genhd.h:209 (set (reg/v:SI 143 [ i ])
        (plus:SI (reg/v:SI 143 [ i ])
            (const_int 1 [0x1]))) -1 (nil))

(insn 59 57 60 10 include/linux/genhd.h:209 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 143 [ i ])
            (const_int 16 [0x10]))) -1 (nil))

(jump_insn 60 59 61 10 include/linux/genhd.h:209 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 58)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 9375 [0x249f])
        (nil)))
;; End of basic block 10 -> ( 6 11)

;; Succ edge  6 [93.8%]  (dfs_back)
;; Succ edge  11 [6.2%]  (fallthru)

;; Start of basic block ( 10) -> 11
;; Pred edge  10 [6.2%]  (fallthru)
(note 61 60 62 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 62 61 63 11 init/do_mounts.c:105 (set (reg:SI 176)
        (symbol_ref:SI ("block_class") [flags 0xc0] <var_decl 0x11593de0 block_class>)) -1 (nil))

(insn 63 62 64 11 init/do_mounts.c:105 (set (reg:SI 177)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -28 [0xffffffffffffffe4]))) -1 (nil))

(insn 64 63 65 11 init/do_mounts.c:105 (set (reg:SI 178)
        (symbol_ref:SI ("match_dev_by_uuid") [flags 0x3] <function_decl 0x12135300 match_dev_by_uuid>)) -1 (nil))

(insn 65 64 66 11 init/do_mounts.c:105 (set (reg:SI 0 r0)
        (reg:SI 176)) -1 (nil))

(insn 66 65 67 11 init/do_mounts.c:105 (set (reg:SI 1 r1)
        (const_int 0 [0x0])) -1 (nil))

(insn 67 66 68 11 init/do_mounts.c:105 (set (reg:SI 2 r2)
        (reg:SI 177)) -1 (nil))

(insn 68 67 69 11 init/do_mounts.c:105 (set (reg:SI 3 r3)
        (reg:SI 178)) -1 (nil))

(call_insn 69 68 70 11 init/do_mounts.c:105 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("class_find_device") [flags 0x41] <function_decl 0x11201980 class_find_device>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 70 69 71 11 init/do_mounts.c:105 (set (reg/v/f:SI 142 [ dev ])
        (reg:SI 0 r0)) -1 (nil))

(insn 71 70 72 11 init/do_mounts.c:106 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 142 [ dev ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 72 71 73 11 init/do_mounts.c:106 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 299)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 3017 [0xbc9])
        (nil)))
;; End of basic block 11 -> ( 44 12)

;; Succ edge  44 [30.2%] 
;; Succ edge  12 [69.8%]  (fallthru)

;; Start of basic block ( 11) -> 12
;; Pred edge  11 [69.8%]  (fallthru)
(note 73 72 74 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 74 73 75 12 init/do_mounts.c:109 (set (reg/v:SI 147 [ res ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 142 [ dev ])
                (const_int 308 [0x134])) [0 <variable>.devt+0 S4 A32])) -1 (nil))

(insn 75 74 76 12 init/do_mounts.c:110 (set (reg:SI 0 r0)
        (reg/v/f:SI 142 [ dev ])) -1 (nil))

(call_insn 76 75 77 12 init/do_mounts.c:110 (parallel [
            (call (mem:SI (symbol_ref:SI ("put_device") [flags 0x41] <function_decl 0x11229c80 put_device>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(jump_insn 77 76 78 12 init/do_mounts.c:110 (set (pc)
        (label_ref 302)) -1 (nil))
;; End of basic block 12 -> ( 45)

;; Succ edge  45 [100.0%] 

(barrier 78 77 79)

;; Start of basic block ( 3) -> 13
;; Pred edge  3 [50.0%] 
(code_label 79 78 80 13 86 "" [1 uses])

(note 80 79 81 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 81 80 82 13 init/do_mounts.c:155 (set (reg:SI 179)
        (symbol_ref/v/f:SI ("*.LC15") [flags 0x82] <string_cst 0x121f9900>)) -1 (nil))

(insn 82 81 83 13 init/do_mounts.c:155 (set (reg:SI 0 r0)
        (reg/v/f:SI 161 [ name ])) -1 (nil))

(insn 83 82 84 13 init/do_mounts.c:155 (set (reg:SI 1 r1)
        (reg:SI 179)) -1 (nil))

(insn 84 83 85 13 init/do_mounts.c:155 (set (reg:SI 2 r2)
        (const_int 5 [0x5])) -1 (nil))

(call_insn/i 85 84 86 13 init/do_mounts.c:155 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strncmp") [flags 0x41] <function_decl 0x51157e80 strncmp>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 86 85 87 13 init/do_mounts.c:155 (set (reg:SI 180)
        (reg:SI 0 r0)) -1 (nil))

(insn 87 86 88 13 init/do_mounts.c:155 (set (reg:SI 157 [ D.52711 ])
        (reg:SI 180)) -1 (nil))

(insn 88 87 89 13 init/do_mounts.c:155 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 157 [ D.52711 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 89 88 90 13 init/do_mounts.c:155 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 133)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))
;; End of basic block 13 -> ( 14 20)

;; Succ edge  14 [29.0%]  (fallthru)
;; Succ edge  20 [71.0%] 

;; Start of basic block ( 13) -> 14
;; Pred edge  13 [29.0%]  (fallthru)
(note 90 89 91 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 91 90 92 14 init/do_mounts.c:158 (set (reg:SI 181)
        (symbol_ref/v/f:SI ("*.LC16") [flags 0x82] <string_cst 0x121f9960>)) -1 (nil))

(insn 92 91 93 14 init/do_mounts.c:158 (set (reg:SI 182)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -8 [0xfffffffffffffff8]))) -1 (nil))

(insn 93 92 94 14 init/do_mounts.c:158 (set (reg:SI 183)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -12 [0xfffffffffffffff4]))) -1 (nil))

(insn 94 93 95 14 init/do_mounts.c:158 (set (reg:SI 0 r0)
        (reg/v/f:SI 161 [ name ])) -1 (nil))

(insn 95 94 96 14 init/do_mounts.c:158 (set (reg:SI 1 r1)
        (reg:SI 181)) -1 (nil))

(insn 96 95 97 14 init/do_mounts.c:158 (set (reg:SI 2 r2)
        (reg:SI 182)) -1 (nil))

(insn 97 96 98 14 init/do_mounts.c:158 (set (reg:SI 3 r3)
        (reg:SI 183)) -1 (nil))

(call_insn 98 97 99 14 init/do_mounts.c:158 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sscanf") [flags 0x41] <function_decl 0x5115e880 sscanf>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 99 98 100 14 init/do_mounts.c:158 (set (reg:SI 156 [ D.52714 ])
        (reg:SI 0 r0)) -1 (nil))

(insn 100 99 101 14 init/do_mounts.c:158 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 156 [ D.52714 ])
            (const_int 2 [0x2]))) -1 (nil))

(jump_insn 101 100 102 14 init/do_mounts.c:158 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 118)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 5123 [0x1403])
        (nil)))
;; End of basic block 14 -> ( 15 18)

;; Succ edge  15 [48.8%]  (fallthru)
;; Succ edge  18 [51.2%] 

;; Start of basic block ( 14) -> 15
;; Pred edge  14 [48.8%]  (fallthru)
(note 102 101 103 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 103 102 104 15 init/do_mounts.c:159 (set (reg:SI 155 [ maj.879 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 maj+0 S4 A64])) -1 (nil))

(insn 104 103 105 15 init/do_mounts.c:159 (set (reg:SI 154 [ min.880 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 min+0 S4 A32])) -1 (nil))

(insn 105 104 106 15 init/do_mounts.c:159 (set (reg:SI 184)
        (ashift:SI (reg:SI 155 [ maj.879 ])
            (const_int 20 [0x14]))) -1 (nil))

(insn 106 105 107 15 init/do_mounts.c:159 (set (reg/v:SI 147 [ res ])
        (ior:SI (reg:SI 184)
            (reg:SI 154 [ min.880 ]))) -1 (nil))

(insn 107 106 108 15 init/do_mounts.c:160 (set (reg:SI 185)
        (lshiftrt:SI (reg/v:SI 147 [ res ])
            (const_int 20 [0x14]))) -1 (nil))

(insn 108 107 109 15 init/do_mounts.c:160 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 155 [ maj.879 ])
            (reg:SI 185))) -1 (nil))

(jump_insn 109 108 110 15 init/do_mounts.c:160 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 299)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 6218 [0x184a])
        (nil)))
;; End of basic block 15 -> ( 44 16)

;; Succ edge  44 [62.2%] 
;; Succ edge  16 [37.8%]  (fallthru)

;; Start of basic block ( 15) -> 16
;; Pred edge  15 [37.8%]  (fallthru)
(note 110 109 111 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 111 110 112 16 init/do_mounts.c:160 discrim 1 (set (reg:SI 187)
        (and:SI (reg/v:SI 147 [ res ])
            (const_int 16777215 [0xffffff]))) -1 (nil))

(insn 112 111 113 16 init/do_mounts.c:160 discrim 1 (set (reg:SI 186)
        (and:SI (reg:SI 187)
            (const_int -15728641 [0xffffffffff0fffff]))) -1 (expr_list:REG_EQUAL (and:SI (reg/v:SI 147 [ res ])
            (const_int 1048575 [0xfffff]))
        (nil)))

(insn 113 112 114 16 init/do_mounts.c:160 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 154 [ min.880 ])
            (reg:SI 186))) -1 (nil))

(jump_insn 114 113 117 16 init/do_mounts.c:160 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 299)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 6218 [0x184a])
        (nil)))
;; End of basic block 16 -> ( 44 17)

;; Succ edge  44 [62.2%] 
;; Succ edge  17 [37.8%]  (fallthru)

;; Start of basic block ( 16) -> 17
;; Pred edge  16 [37.8%]  (fallthru)
(note 117 114 115 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(jump_insn 115 117 116 17 init/do_mounts.c:160 discrim 1 (set (pc)
        (label_ref 302)) -1 (nil))
;; End of basic block 17 -> ( 45)

;; Succ edge  45 [100.0%] 

(barrier 116 115 118)

;; Start of basic block ( 14) -> 18
;; Pred edge  14 [51.2%] 
(code_label 118 116 119 18 93 "" [1 uses])

(note 119 118 120 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 120 119 121 18 init/do_mounts.c:163 (set (reg:SI 188)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -4 [0xfffffffffffffffc]))) -1 (nil))

(insn 121 120 122 18 init/do_mounts.c:163 (set (reg:SI 0 r0)
        (reg/v/f:SI 161 [ name ])) -1 (nil))

(insn 122 121 123 18 init/do_mounts.c:163 (set (reg:SI 1 r1)
        (reg:SI 188)) -1 (nil))

(insn 123 122 124 18 init/do_mounts.c:163 (set (reg:SI 2 r2)
        (const_int 16 [0x10])) -1 (nil))

(call_insn 124 123 125 18 init/do_mounts.c:163 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("simple_strtoul") [flags 0x41] <function_decl 0x10a77e00 simple_strtoul>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 125 124 126 18 init/do_mounts.c:163 (set (reg:SI 153 [ D.52725 ])
        (reg:SI 0 r0)) -1 (nil))

(insn 126 125 127 18 init/do_mounts.c:164 (set (reg/f:SI 189)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 p+0 S4 A32])) -1 (nil))

(insn 127 126 128 18 init/do_mounts.c:164 (set (reg:SI 190)
        (zero_extend:SI (mem:QI (reg/f:SI 189) [0 S1 A8]))) -1 (nil))

(insn 128 127 129 18 init/do_mounts.c:164 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 190)
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 129 128 132 18 init/do_mounts.c:164 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 299)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))
;; End of basic block 18 -> ( 44 19)

;; Succ edge  44 [39.0%] 
;; Succ edge  19 [61.0%]  (fallthru)

;; Start of basic block ( 18) -> 19
;; Pred edge  18 [61.0%]  (fallthru)
(note 132 129 130 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(jump_insn 130 132 131 19 init/do_mounts.c:164 (set (pc)
        (label_ref 285)) -1 (nil))
;; End of basic block 19 -> ( 43)

;; Succ edge  43 [100.0%] 

(barrier 131 130 133)

;; Start of basic block ( 13) -> 20
;; Pred edge  13 [71.0%] 
(code_label 133 131 134 20 92 "" [1 uses])

(note 134 133 135 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn 135 134 136 20 init/do_mounts.c:170 (set (reg/v/f:SI 141 [ name.1246 ])
        (plus:SI (reg/v/f:SI 161 [ name ])
            (const_int 5 [0x5]))) -1 (nil))

(insn 136 135 137 20 init/do_mounts.c:172 (set (reg:SI 191)
        (symbol_ref/v/f:SI ("*.LC11") [flags 0x82] <string_cst 0x121e0cc0>)) -1 (nil))

(insn 137 136 138 20 init/do_mounts.c:172 (set (reg:SI 0 r0)
        (reg/v/f:SI 141 [ name.1246 ])) -1 (nil))

(insn 138 137 139 20 init/do_mounts.c:172 (set (reg:SI 1 r1)
        (reg:SI 191)) -1 (nil))

(call_insn/i 139 138 140 20 init/do_mounts.c:172 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcmp") [flags 0x41] <function_decl 0x51157680 strcmp>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 140 139 141 20 init/do_mounts.c:172 (set (reg:SI 192)
        (reg:SI 0 r0)) -1 (nil))

(insn 141 140 142 20 init/do_mounts.c:172 (set (reg:SI 152 [ D.52730 ])
        (reg:SI 192)) -1 (nil))

(insn 142 141 143 20 init/do_mounts.c:172 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 152 [ D.52730 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 143 142 144 20 init/do_mounts.c:172 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 148)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 20 -> ( 21 22)

;; Succ edge  21 [50.0%]  (fallthru)
;; Succ edge  22 [50.0%] 

;; Start of basic block ( 20) -> 21
;; Pred edge  20 [50.0%]  (fallthru)
(note 144 143 145 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn 145 144 146 21 init/do_mounts.c:171 (set (reg/v:SI 147 [ res ])
        (const_int 255 [0xff])) -1 (nil))

(jump_insn 146 145 147 21 init/do_mounts.c:171 (set (pc)
        (label_ref 302)) -1 (nil))
;; End of basic block 21 -> ( 45)

;; Succ edge  45 [100.0%] 

(barrier 147 146 148)

;; Start of basic block ( 20) -> 22
;; Pred edge  20 [50.0%] 
(code_label 148 147 149 22 95 "" [1 uses])

(note 149 148 150 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(insn 150 149 151 22 init/do_mounts.c:175 (set (reg:SI 193)
        (symbol_ref/v/f:SI ("*.LC17") [flags 0x82] <string_cst 0x121ff060>)) -1 (nil))

(insn 151 150 152 22 init/do_mounts.c:175 (set (reg:SI 0 r0)
        (reg/v/f:SI 141 [ name.1246 ])) -1 (nil))

(insn 152 151 153 22 init/do_mounts.c:175 (set (reg:SI 1 r1)
        (reg:SI 193)) -1 (nil))

(call_insn/i 153 152 154 22 init/do_mounts.c:175 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcmp") [flags 0x41] <function_decl 0x51157680 strcmp>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 154 153 155 22 init/do_mounts.c:175 (set (reg:SI 194)
        (reg:SI 0 r0)) -1 (nil))

(insn 155 154 156 22 init/do_mounts.c:175 (set (reg:SI 151 [ D.52732 ])
        (reg:SI 194)) -1 (nil))

(insn 156 155 157 22 init/do_mounts.c:175 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 151 [ D.52732 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 157 156 158 22 init/do_mounts.c:175 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 162)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 22 -> ( 23 24)

;; Succ edge  23 [50.0%]  (fallthru)
;; Succ edge  24 [50.0%] 

;; Start of basic block ( 22) -> 23
;; Pred edge  22 [50.0%]  (fallthru)
(note 158 157 159 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(insn 159 158 160 23 init/do_mounts.c:174 (set (reg/v:SI 147 [ res ])
        (const_int 1048576 [0x100000])) -1 (nil))

(jump_insn 160 159 161 23 init/do_mounts.c:174 (set (pc)
        (label_ref 302)) -1 (nil))
;; End of basic block 23 -> ( 45)

;; Succ edge  45 [100.0%] 

(barrier 161 160 162)

;; Start of basic block ( 22) -> 24
;; Pred edge  22 [50.0%] 
(code_label 162 161 163 24 96 "" [1 uses])

(note 163 162 164 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(insn 164 163 165 24 init/do_mounts.c:178 (set (reg:SI 0 r0)
        (reg/v/f:SI 141 [ name.1246 ])) -1 (nil))

(call_insn/i 165 164 166 24 init/do_mounts.c:178 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strlen") [flags 0x41] <function_decl 0x51157b80 strlen>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 166 165 167 24 init/do_mounts.c:178 (set (reg:SI 195)
        (reg:SI 0 r0)) -1 (nil))

(insn 167 166 168 24 init/do_mounts.c:178 (set (reg:SI 150 [ D.52734 ])
        (reg:SI 195)) -1 (nil))

(insn 168 167 169 24 init/do_mounts.c:178 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 150 [ D.52734 ])
            (const_int 31 [0x1f]))) -1 (nil))

(jump_insn 169 168 170 24 init/do_mounts.c:178 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 299)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 6102 [0x17d6])
        (nil)))
;; End of basic block 24 -> ( 44 25)

;; Succ edge  44 [61.0%] 
;; Succ edge  25 [39.0%]  (fallthru)

;; Start of basic block ( 24) -> 25
;; Pred edge  24 [39.0%]  (fallthru)
(note 170 169 171 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(insn 171 170 172 25 init/do_mounts.c:180 (set (reg:SI 196)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -60 [0xffffffffffffffc4]))) -1 (nil))

(insn 172 171 173 25 init/do_mounts.c:180 (set (reg:SI 0 r0)
        (reg:SI 196)) -1 (nil))

(insn 173 172 174 25 init/do_mounts.c:180 (set (reg:SI 1 r1)
        (reg/v/f:SI 141 [ name.1246 ])) -1 (nil))

(call_insn 174 173 175 25 init/do_mounts.c:180 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcpy") [flags 0x41] <function_decl 0x51157780 strcpy>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 175 174 176 25 init/do_mounts.c:181 (set (reg:SI 197)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -60 [0xffffffffffffffc4]))) -1 (nil))

(insn 176 175 177 25 init/do_mounts.c:181 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 p+0 S4 A32])
        (reg:SI 197)) -1 (nil))

(jump_insn 177 176 178 25 init/do_mounts.c:181 (set (pc)
        (label_ref 191)) -1 (nil))
;; End of basic block 25 -> ( 29)

;; Succ edge  29 [100.0%] 

(barrier 178 177 195)

;; Start of basic block ( 29) -> 26
;; Pred edge  29 [91.0%] 
(code_label 195 178 179 26 99 "" [1 uses])

(note 179 195 180 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(insn 180 179 181 26 init/do_mounts.c:182 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 139 [ temp.1248 ])
            (const_int 47 [0x2f]))) -1 (nil))

(jump_insn 181 180 182 26 init/do_mounts.c:182 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 186)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
        (nil)))
;; End of basic block 26 -> ( 27 28)

;; Succ edge  27 [28.0%]  (fallthru)
;; Succ edge  28 [72.0%] 

;; Start of basic block ( 26) -> 27
;; Pred edge  26 [28.0%]  (fallthru)
(note 182 181 183 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(insn 183 182 184 27 init/do_mounts.c:183 (set (reg:SI 198)
        (const_int 33 [0x21])) -1 (nil))

(insn 184 183 185 27 init/do_mounts.c:183 (set (reg:QI 199)
        (subreg:QI (reg:SI 198) 0)) -1 (nil))

(insn 185 184 186 27 init/do_mounts.c:183 (set (mem:QI (reg/f:SI 140 [ p.1247 ]) [0 S1 A8])
        (reg:QI 199)) -1 (nil))
;; End of basic block 27 -> ( 28)

;; Succ edge  28 [100.0%]  (fallthru)

;; Start of basic block ( 26 27) -> 28
;; Pred edge  26 [72.0%] 
;; Pred edge  27 [100.0%]  (fallthru)
(code_label 186 185 187 28 98 "" [1 uses])

(note 187 186 188 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(insn 188 187 189 28 init/do_mounts.c:181 (set (reg:SI 200)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 p+0 S4 A32])) -1 (nil))

(insn 189 188 190 28 init/do_mounts.c:181 (set (reg:SI 201)
        (plus:SI (reg:SI 200)
            (const_int 1 [0x1]))) -1 (nil))

(insn 190 189 191 28 init/do_mounts.c:181 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 p+0 S4 A32])
        (reg:SI 201)) -1 (nil))
;; End of basic block 28 -> ( 29)

;; Succ edge  29 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 25 28) -> 29
;; Pred edge  25 [100.0%] 
;; Pred edge  28 [100.0%]  (fallthru,dfs_back)
(code_label 191 190 192 29 97 "" [1 uses])

(note 192 191 193 29 [bb 29] NOTE_INSN_BASIC_BLOCK)

(insn 193 192 194 29 init/do_mounts.c:181 discrim 1 (set (reg/f:SI 140 [ p.1247 ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 p+0 S4 A32])) -1 (nil))

(insn 194 193 196 29 init/do_mounts.c:181 discrim 1 (set (reg:SI 139 [ temp.1248 ])
        (zero_extend:SI (mem:QI (reg/f:SI 140 [ p.1247 ]) [0 S1 A8]))) -1 (nil))

(insn 196 194 197 29 init/do_mounts.c:181 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 139 [ temp.1248 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 197 196 198 29 init/do_mounts.c:181 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 195)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
        (nil)))
;; End of basic block 29 -> ( 26 30)

;; Succ edge  26 [91.0%] 
;; Succ edge  30 [9.0%]  (fallthru)

;; Start of basic block ( 29) -> 30
;; Pred edge  29 [9.0%]  (fallthru)
(note 198 197 199 30 [bb 30] NOTE_INSN_BASIC_BLOCK)

(insn 199 198 200 30 init/do_mounts.c:184 (set (reg:SI 202)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -60 [0xffffffffffffffc4]))) -1 (nil))

(insn 200 199 201 30 init/do_mounts.c:184 (set (reg:SI 0 r0)
        (reg:SI 202)) -1 (nil))

(insn 201 200 202 30 init/do_mounts.c:184 (set (reg:SI 1 r1)
        (const_int 0 [0x0])) -1 (nil))

(call_insn 202 201 203 30 init/do_mounts.c:184 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("blk_lookup_devt") [flags 0x41] <function_decl 0x115c3b00 blk_lookup_devt>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 203 202 204 30 init/do_mounts.c:184 (set (reg/v:SI 147 [ res ])
        (reg:SI 0 r0)) -1 (nil))

(insn 204 203 205 30 init/do_mounts.c:185 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 147 [ res ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 205 204 208 30 init/do_mounts.c:185 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 302)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 30 -> ( 45 31)

;; Succ edge  45 [50.0%] 
;; Succ edge  31 [50.0%]  (fallthru)

;; Start of basic block ( 30) -> 31
;; Pred edge  30 [50.0%]  (fallthru)
(note 208 205 206 31 [bb 31] NOTE_INSN_BASIC_BLOCK)

(jump_insn 206 208 207 31 init/do_mounts.c:185 (set (pc)
        (label_ref 211)) -1 (nil))
;; End of basic block 31 -> ( 33)

;; Succ edge  33 [100.0%] 

(barrier 207 206 219)

;; Start of basic block ( 34) -> 32
;; Pred edge  34 [95.5%] 
(code_label 219 207 209 32 102 "" [1 uses])

(note 209 219 210 32 [bb 32] NOTE_INSN_BASIC_BLOCK)

(insn 210 209 211 32 init/do_mounts.c:193 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 p+0 S4 A32])
        (reg/f:SI 149 [ p.885 ])) -1 (nil))
;; End of basic block 32 -> ( 33)

;; Succ edge  33 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 32 31) -> 33
;; Pred edge  32 [100.0%]  (fallthru,dfs_back)
;; Pred edge  31 [100.0%] 
(code_label 211 210 212 33 100 "" [1 uses])

(note 212 211 213 33 [bb 33] NOTE_INSN_BASIC_BLOCK)

(insn 213 212 214 33 init/do_mounts.c:192 discrim 1 (set (reg/f:SI 138 [ p.1250 ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 p+0 S4 A32])) -1 (nil))

(insn 214 213 215 33 init/do_mounts.c:192 discrim 1 (set (reg:SI 203)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -60 [0xffffffffffffffc4]))) -1 (nil))

(insn 215 214 216 33 init/do_mounts.c:192 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 138 [ p.1250 ])
            (reg:SI 203))) -1 (nil))

(jump_insn 216 215 217 33 init/do_mounts.c:192 discrim 1 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 226)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 450 [0x1c2])
        (nil)))
;; End of basic block 33 -> ( 34 35)

;; Succ edge  34 [95.5%]  (fallthru)
;; Succ edge  35 [4.5%] 

;; Start of basic block ( 33) -> 34
;; Pred edge  33 [95.5%]  (fallthru)
(note 217 216 218 34 [bb 34] NOTE_INSN_BASIC_BLOCK)

(insn 218 217 220 34 init/do_mounts.c:192 discrim 2 (set (reg/f:SI 149 [ p.885 ])
        (plus:SI (reg/f:SI 138 [ p.1250 ])
            (const_int -1 [0xffffffffffffffff]))) -1 (nil))

(insn 220 218 221 34 init/do_mounts.c:192 discrim 2 (set (reg/f:SI 204)
        (symbol_ref:SI ("_ctype") [flags 0xc0] <var_decl 0x10fff720 _ctype>)) -1 (nil))

(insn 221 220 222 34 init/do_mounts.c:192 discrim 2 (set (reg:SI 205)
        (zero_extend:SI (mem:QI (reg/f:SI 149 [ p.885 ]) [0 S1 A8]))) -1 (nil))

(insn 222 221 223 34 init/do_mounts.c:192 discrim 2 (set (reg:SI 206)
        (zero_extend:SI (mem/s/u/j:QI (plus:SI (reg/f:SI 204)
                    (reg:SI 205)) [0 _ctype S1 A8]))) -1 (nil))

(insn 223 222 224 34 init/do_mounts.c:192 discrim 2 (set (reg:SI 207)
        (and:SI (reg:SI 206)
            (const_int 4 [0x4]))) -1 (nil))

(insn 224 223 225 34 init/do_mounts.c:192 discrim 2 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 207)
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 225 224 226 34 init/do_mounts.c:192 discrim 2 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 219)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 9550 [0x254e])
        (nil)))
;; End of basic block 34 -> ( 32 35)

;; Succ edge  32 [95.5%] 
;; Succ edge  35 [4.5%]  (fallthru)

;; Start of basic block ( 33 34) -> 35
;; Pred edge  33 [4.5%] 
;; Pred edge  34 [4.5%]  (fallthru)
(code_label 226 225 227 35 101 "" [1 uses])

(note 227 226 228 35 [bb 35] NOTE_INSN_BASIC_BLOCK)

(insn 228 227 229 35 init/do_mounts.c:194 (set (reg:SI 208)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -60 [0xffffffffffffffc4]))) -1 (nil))

(insn 229 228 230 35 init/do_mounts.c:194 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 138 [ p.1250 ])
            (reg:SI 208))) -1 (nil))

(jump_insn 230 229 231 35 init/do_mounts.c:194 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 302)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 1014 [0x3f6])
        (nil)))
;; End of basic block 35 -> ( 45 36)

;; Succ edge  45 [10.1%] 
;; Succ edge  36 [89.9%]  (fallthru)

;; Start of basic block ( 35) -> 36
;; Pred edge  35 [89.9%]  (fallthru)
(note 231 230 232 36 [bb 36] NOTE_INSN_BASIC_BLOCK)

(insn 232 231 233 36 init/do_mounts.c:194 discrim 1 (set (reg:SI 137 [ temp.1251 ])
        (zero_extend:SI (mem:QI (reg/f:SI 138 [ p.1250 ]) [0 S1 A8]))) -1 (nil))

(insn 233 232 234 36 init/do_mounts.c:194 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 137 [ temp.1251 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 234 233 235 36 init/do_mounts.c:194 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 302)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))
;; End of basic block 36 -> ( 45 37)

;; Succ edge  45 [39.0%] 
;; Succ edge  37 [61.0%]  (fallthru)

;; Start of basic block ( 36) -> 37
;; Pred edge  36 [61.0%]  (fallthru)
(note 235 234 236 37 [bb 37] NOTE_INSN_BASIC_BLOCK)

(insn 236 235 237 37 init/do_mounts.c:194 discrim 2 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 137 [ temp.1251 ])
            (const_int 48 [0x30]))) -1 (nil))

(jump_insn 237 236 238 37 init/do_mounts.c:194 discrim 2 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 302)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 3784 [0xec8])
        (nil)))
;; End of basic block 37 -> ( 45 38)

;; Succ edge  45 [37.8%] 
;; Succ edge  38 [62.2%]  (fallthru)

;; Start of basic block ( 37) -> 38
;; Pred edge  37 [62.2%]  (fallthru)
(note 238 237 239 38 [bb 38] NOTE_INSN_BASIC_BLOCK)

(insn 239 238 240 38 init/do_mounts.c:198 (set (reg:SI 0 r0)
        (reg/f:SI 138 [ p.1250 ])) -1 (nil))

(insn 240 239 241 38 init/do_mounts.c:198 (set (reg:SI 1 r1)
        (const_int 0 [0x0])) -1 (nil))

(insn 241 240 242 38 init/do_mounts.c:198 (set (reg:SI 2 r2)
        (const_int 10 [0xa])) -1 (nil))

(call_insn 242 241 243 38 init/do_mounts.c:198 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("simple_strtoul") [flags 0x41] <function_decl 0x10a77e00 simple_strtoul>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 243 242 244 38 init/do_mounts.c:198 (set (reg:SI 148 [ D.52751 ])
        (reg:SI 0 r0)) -1 (nil))

(insn 244 243 245 38 init/do_mounts.c:198 (set (reg/v:SI 146 [ part ])
        (reg:SI 148 [ D.52751 ])) -1 (nil))

(insn 245 244 246 38 init/do_mounts.c:199 (set (reg/f:SI 209)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 p+0 S4 A32])) -1 (nil))

(insn 246 245 247 38 init/do_mounts.c:199 (set (reg:SI 210)
        (const_int 0 [0x0])) -1 (nil))

(insn 247 246 248 38 init/do_mounts.c:199 (set (reg:QI 211)
        (subreg:QI (reg:SI 210) 0)) -1 (nil))

(insn 248 247 249 38 init/do_mounts.c:199 (set (mem:QI (reg/f:SI 209) [0 S1 A8])
        (reg:QI 211)) -1 (nil))

(insn 249 248 250 38 init/do_mounts.c:200 (set (reg:SI 212)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -60 [0xffffffffffffffc4]))) -1 (nil))

(insn 250 249 251 38 init/do_mounts.c:200 (set (reg:SI 0 r0)
        (reg:SI 212)) -1 (nil))

(insn 251 250 252 38 init/do_mounts.c:200 (set (reg:SI 1 r1)
        (reg/v:SI 146 [ part ])) -1 (nil))

(call_insn 252 251 253 38 init/do_mounts.c:200 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("blk_lookup_devt") [flags 0x41] <function_decl 0x115c3b00 blk_lookup_devt>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 253 252 254 38 init/do_mounts.c:200 (set (reg/v:SI 147 [ res ])
        (reg:SI 0 r0)) -1 (nil))

(insn 254 253 255 38 init/do_mounts.c:201 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 147 [ res ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 255 254 256 38 init/do_mounts.c:201 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 302)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 38 -> ( 45 39)

;; Succ edge  45 [50.0%] 
;; Succ edge  39 [50.0%]  (fallthru)

;; Start of basic block ( 38) -> 39
;; Pred edge  38 [50.0%]  (fallthru)
(note 256 255 257 39 [bb 39] NOTE_INSN_BASIC_BLOCK)

(insn 257 256 258 39 init/do_mounts.c:205 (set (reg/f:SI 136 [ p.1253 ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 p+0 S4 A32])) -1 (nil))

(insn 258 257 259 39 init/do_mounts.c:205 (set (reg:SI 213)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -60 [0xffffffffffffffc4]))) -1 (nil))

(insn 259 258 260 39 init/do_mounts.c:205 (set (reg:SI 214)
        (plus:SI (reg:SI 213)
            (const_int 2 [0x2]))) -1 (nil))

(insn 260 259 261 39 init/do_mounts.c:205 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 136 [ p.1253 ])
            (reg:SI 214))) -1 (nil))

(jump_insn 261 260 262 39 init/do_mounts.c:205 (set (pc)
        (if_then_else (ltu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 302)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))
;; End of basic block 39 -> ( 45 40)

;; Succ edge  45 [39.0%] 
;; Succ edge  40 [61.0%]  (fallthru)

;; Start of basic block ( 39) -> 40
;; Pred edge  39 [61.0%]  (fallthru)
(note 262 261 263 40 [bb 40] NOTE_INSN_BASIC_BLOCK)

(insn 263 262 264 40 init/do_mounts.c:205 discrim 1 (set (reg/f:SI 215)
        (symbol_ref:SI ("_ctype") [flags 0xc0] <var_decl 0x10fff720 _ctype>)) -1 (nil))

(insn 264 263 265 40 init/do_mounts.c:205 discrim 1 (set (reg:SI 216)
        (zero_extend:SI (mem:QI (plus:SI (reg/f:SI 136 [ p.1253 ])
                    (const_int -2 [0xfffffffffffffffe])) [0 S1 A8]))) -1 (nil))

(insn 265 264 266 40 init/do_mounts.c:205 discrim 1 (set (reg:SI 217)
        (zero_extend:SI (mem/s/u/j:QI (plus:SI (reg/f:SI 215)
                    (reg:SI 216)) [0 _ctype S1 A8]))) -1 (nil))

(insn 266 265 267 40 init/do_mounts.c:205 discrim 1 (set (reg:SI 218)
        (and:SI (reg:SI 217)
            (const_int 4 [0x4]))) -1 (nil))

(insn 267 266 268 40 init/do_mounts.c:205 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 218)
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 268 267 269 40 init/do_mounts.c:205 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 302)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))
;; End of basic block 40 -> ( 45 41)

;; Succ edge  45 [39.0%] 
;; Succ edge  41 [61.0%]  (fallthru)

;; Start of basic block ( 40) -> 41
;; Pred edge  40 [61.0%]  (fallthru)
(note 269 268 270 41 [bb 41] NOTE_INSN_BASIC_BLOCK)

(insn 270 269 271 41 init/do_mounts.c:205 discrim 2 (set (reg/f:SI 135 [ p.1254 ])
        (plus:SI (reg/f:SI 136 [ p.1253 ])
            (const_int -1 [0xffffffffffffffff]))) -1 (nil))

(insn 271 270 272 41 init/do_mounts.c:205 discrim 2 (set (reg:SI 219)
        (zero_extend:SI (mem:QI (reg/f:SI 135 [ p.1254 ]) [0 S1 A8]))) -1 (nil))

(insn 272 271 273 41 init/do_mounts.c:205 discrim 2 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 219)
            (const_int 112 [0x70]))) -1 (nil))

(jump_insn 273 272 274 41 init/do_mounts.c:205 discrim 2 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 302)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 8010 [0x1f4a])
        (nil)))
;; End of basic block 41 -> ( 45 42)

;; Succ edge  45 [80.1%] 
;; Succ edge  42 [19.9%]  (fallthru)

;; Start of basic block ( 41) -> 42
;; Pred edge  41 [19.9%]  (fallthru)
(note 274 273 275 42 [bb 42] NOTE_INSN_BASIC_BLOCK)

(insn 275 274 276 42 init/do_mounts.c:207 (set (reg:SI 220)
        (const_int 0 [0x0])) -1 (nil))

(insn 276 275 277 42 init/do_mounts.c:207 (set (reg:QI 221)
        (subreg:QI (reg:SI 220) 0)) -1 (nil))

(insn 277 276 278 42 init/do_mounts.c:207 (set (mem:QI (reg/f:SI 135 [ p.1254 ]) [0 S1 A8])
        (reg:QI 221)) -1 (nil))

(insn 278 277 279 42 init/do_mounts.c:208 (set (reg:SI 222)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -60 [0xffffffffffffffc4]))) -1 (nil))

(insn 279 278 280 42 init/do_mounts.c:208 (set (reg:SI 0 r0)
        (reg:SI 222)) -1 (nil))

(insn 280 279 281 42 init/do_mounts.c:208 (set (reg:SI 1 r1)
        (reg/v:SI 146 [ part ])) -1 (nil))

(call_insn 281 280 282 42 init/do_mounts.c:208 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("blk_lookup_devt") [flags 0x41] <function_decl 0x115c3b00 blk_lookup_devt>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 282 281 283 42 init/do_mounts.c:208 (set (reg/v:SI 147 [ res ])
        (reg:SI 0 r0)) -1 (nil))

(jump_insn 283 282 284 42 init/do_mounts.c:208 (set (pc)
        (label_ref 302)) -1 (nil))
;; End of basic block 42 -> ( 45)

;; Succ edge  45 [100.0%] 

(barrier 284 283 285)

;; Start of basic block ( 19) -> 43
;; Pred edge  19 [100.0%] 
(code_label 285 284 286 43 94 "" [1 uses])

(note 286 285 287 43 [bb 43] NOTE_INSN_BASIC_BLOCK)

(insn 287 286 288 43 include/linux/kdev_t.h:52 (set (reg:SI 223)
        (lshiftrt:SI (reg:SI 153 [ D.52725 ])
            (const_int 12 [0xc]))) -1 (nil))

(insn 288 287 289 43 include/linux/kdev_t.h:52 (set (reg:SI 225)
        (const_int 1048320 [0xfff00])) -1 (nil))

(insn 289 288 290 43 include/linux/kdev_t.h:52 (set (reg:SI 224)
        (and:SI (reg:SI 223)
            (reg:SI 225))) -1 (expr_list:REG_EQUAL (and:SI (reg:SI 223)
            (const_int 1048320 [0xfff00]))
        (nil)))

(insn 290 289 291 43 include/linux/kdev_t.h:52 (set (reg:SI 226)
        (and:SI (reg:SI 153 [ D.52725 ])
            (const_int 255 [0xff]))) -1 (nil))

(insn 291 290 292 43 include/linux/kdev_t.h:52 (set (reg:SI 227)
        (ior:SI (reg:SI 224)
            (reg:SI 226))) -1 (nil))

(insn 292 291 293 43 include/linux/kdev_t.h:52 (set (reg:SI 229)
        (const_int 1048320 [0xfff00])) -1 (nil))

(insn 293 292 294 43 include/linux/kdev_t.h:52 (set (reg:SI 228)
        (and:SI (reg:SI 153 [ D.52725 ])
            (reg:SI 229))) -1 (expr_list:REG_EQUAL (and:SI (reg:SI 153 [ D.52725 ])
            (const_int 1048320 [0xfff00]))
        (nil)))

(insn 294 293 295 43 include/linux/kdev_t.h:52 (set (reg:SI 230)
        (lshiftrt:SI (reg:SI 228)
            (const_int 8 [0x8]))) -1 (nil))

(insn 295 294 296 43 include/linux/kdev_t.h:52 (set (reg:SI 231)
        (ashift:SI (reg:SI 230)
            (const_int 20 [0x14]))) -1 (nil))

(insn 296 295 297 43 include/linux/kdev_t.h:52 (set (reg/v:SI 147 [ res ])
        (ior:SI (reg:SI 227)
            (reg:SI 231))) -1 (nil))

(jump_insn 297 296 298 43 include/linux/kdev_t.h:52 (set (pc)
        (label_ref 302)) -1 (nil))
;; End of basic block 43 -> ( 45)

;; Succ edge  45 [100.0%] 

(barrier 298 297 299)

;; Start of basic block ( 11 15 4 16 18 24) -> 44
;; Pred edge  11 [30.2%] 
;; Pred edge  15 [62.2%] 
;; Pred edge  4 [62.2%] 
;; Pred edge  16 [62.2%] 
;; Pred edge  18 [39.0%] 
;; Pred edge  24 [61.0%] 
(code_label 299 298 300 44 87 "" [6 uses])

(note 300 299 301 44 [bb 44] NOTE_INSN_BASIC_BLOCK)

(insn 301 300 302 44 init/do_mounts.c:213 (set (reg/v:SI 147 [ res ])
        (const_int 0 [0x0])) -1 (nil))
;; End of basic block 44 -> ( 45)

;; Succ edge  45 [100.0%]  (fallthru)

;; Start of basic block ( 44 43 23 30 38 42 37 12 21 41 40 39 35 36 17) -> 45
;; Pred edge  44 [100.0%]  (fallthru)
;; Pred edge  43 [100.0%] 
;; Pred edge  23 [100.0%] 
;; Pred edge  30 [50.0%] 
;; Pred edge  38 [50.0%] 
;; Pred edge  42 [100.0%] 
;; Pred edge  37 [37.8%] 
;; Pred edge  12 [100.0%] 
;; Pred edge  21 [100.0%] 
;; Pred edge  41 [80.1%] 
;; Pred edge  40 [39.0%] 
;; Pred edge  39 [39.0%] 
;; Pred edge  35 [10.1%] 
;; Pred edge  36 [39.0%] 
;; Pred edge  17 [100.0%] 
(code_label 302 301 303 45 91 "" [14 uses])

(note 303 302 304 45 [bb 45] NOTE_INSN_BASIC_BLOCK)

(insn 304 303 305 45 init/do_mounts.c:216 (set (reg:SI 160 [ <result> ])
        (reg/v:SI 147 [ res ])) -1 (nil))

(jump_insn 305 304 306 45 init/do_mounts.c:216 (set (pc)
        (label_ref 307)) -1 (nil))
;; End of basic block 45 -> ( 47)

;; Succ edge  47 [100.0%] 

(barrier 306 305 315)

;; Start of basic block () -> 46
(note 315 306 309 46 [bb 46] NOTE_INSN_BASIC_BLOCK)

(insn 309 315 310 46 init/do_mounts.c:216 (clobber (reg/i:SI 0 r0)) -1 (nil))

(insn 310 309 311 46 init/do_mounts.c:216 (clobber (reg:SI 160 [ <result> ])) -1 (nil))

(jump_insn 311 310 312 46 init/do_mounts.c:216 (set (pc)
        (label_ref 313)) -1 (nil))
;; End of basic block 46 -> ( 48)

;; Succ edge  48 [100.0%] 

(barrier 312 311 307)

;; Start of basic block ( 45) -> 47
;; Pred edge  45 [100.0%] 
(code_label 307 312 318 47 85 "" [1 uses])

(note 318 307 308 47 [bb 47] NOTE_INSN_BASIC_BLOCK)

(insn 308 318 313 47 init/do_mounts.c:216 (set (reg/i:SI 0 r0)
        (reg:SI 160 [ <result> ])) -1 (nil))
;; End of basic block 47 -> ( 48)

;; Succ edge  48 [100.0%]  (fallthru)

;; Start of basic block ( 46 47) -> 48
;; Pred edge  46 [100.0%] 
;; Pred edge  47 [100.0%]  (fallthru)
(code_label 313 308 319 48 103 "" [1 uses])

(note 319 313 314 48 [bb 48] NOTE_INSN_BASIC_BLOCK)

(insn 314 319 0 48 init/do_mounts.c:216 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 48 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function prepare_namespace (prepare_namespace)[0:2718] (unlikely executed)


;; Generating RTL for gimple basic block 2

;; root_delay.909 = root_delay;

(insn 5 4 6 init/do_mounts.c:468 (set (reg/f:SI 142)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) -1 (nil))

(insn 6 5 0 init/do_mounts.c:468 (set (reg:SI 141 [ root_delay.909 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 142)
                (const_int 80 [0x50])) [0 root_delay+0 S4 A32])) -1 (nil))

;; if (root_delay.909 != 0)

(insn 7 6 8 init/do_mounts.c:468 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 141 [ root_delay.909 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 8 7 0 init/do_mounts.c:468 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))

;; Generating RTL for gimple basic block 3

;; printk (&"<6>Waiting %dsec before mounting root device...\n"[0], root_delay.909);

(insn 10 9 11 init/do_mounts.c:469 (set (reg:SI 143)
        (symbol_ref/v/f:SI ("*.LC18") [flags 0x82] <string_cst 0x12177c80>)) -1 (nil))

(insn 11 10 12 init/do_mounts.c:469 (set (reg:SI 0 r0)
        (reg:SI 143)) -1 (nil))

(insn 12 11 13 init/do_mounts.c:469 (set (reg:SI 1 r1)
        (reg:SI 141 [ root_delay.909 ])) -1 (nil))

(call_insn 13 12 0 init/do_mounts.c:469 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

;; msleep (root_delay * 1000);

(insn 14 13 15 include/linux/delay.h:52 (set (reg/f:SI 144)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) -1 (nil))

(insn 15 14 16 include/linux/delay.h:52 (set (reg:SI 146)
        (mem/c/i:SI (plus:SI (reg/f:SI 144)
                (const_int 80 [0x50])) [0 root_delay+0 S4 A32])) -1 (nil))

(insn 16 15 17 include/linux/delay.h:52 (set (reg:SI 147)
        (const_int 1000 [0x3e8])) -1 (nil))

(insn 17 16 18 include/linux/delay.h:52 (set (reg:SI 145)
        (mult:SI (reg:SI 147)
            (reg:SI 146))) -1 (nil))

(insn 18 17 19 include/linux/delay.h:52 (set (reg:SI 0 r0)
        (reg:SI 145)) -1 (nil))

(call_insn 19 18 0 include/linux/delay.h:52 (parallel [
            (call (mem:SI (symbol_ref:SI ("msleep") [flags 0x41] <function_decl 0x11595a80 msleep>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

;; Generating RTL for gimple basic block 4

;; 

(code_label 20 19 21 113 "" [0 uses])

(note 21 20 0 NOTE_INSN_BASIC_BLOCK)

;; wait_for_device_probe ();

(call_insn 22 21 0 init/do_mounts.c:481 (parallel [
            (call (mem:SI (symbol_ref:SI ("wait_for_device_probe") [flags 0x41] <function_decl 0x11201180 wait_for_device_probe>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (nil))

;; if (saved_root_name[0] != 0)

(insn 23 22 24 init/do_mounts.c:485 (set (reg/f:SI 148)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) -1 (nil))

(insn 24 23 25 init/do_mounts.c:485 (set (reg:SI 149)
        (zero_extend:SI (mem/s/j:QI (plus:SI (reg/f:SI 148)
                    (const_int 16 [0x10])) [0 saved_root_name+0 S1 A32]))) -1 (nil))

(insn 25 24 26 init/do_mounts.c:485 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 149)
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 26 25 0 init/do_mounts.c:485 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 4 [0x4])
        (nil)))

;; Generating RTL for gimple basic block 5

;; root_device_name = &saved_root_name;

(insn 28 27 29 init/do_mounts.c:486 (set (reg/f:SI 150)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) -1 (nil))

(insn 29 28 30 init/do_mounts.c:486 (set (reg/f:SI 151)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) -1 (nil))

(insn 30 29 31 init/do_mounts.c:486 (set (reg:SI 152)
        (plus:SI (reg/f:SI 151)
            (const_int 16 [0x10]))) -1 (nil))

(insn 31 30 0 init/do_mounts.c:486 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 150)
                (const_int 84 [0x54])) [0 root_device_name+0 S4 A32])
        (reg:SI 152)) -1 (nil))

;; D.52951 = strncmp (&saved_root_name, &"mtd"[0], 3);

(insn 32 31 33 init/do_mounts.c:487 (set (reg/f:SI 153)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) -1 (nil))

(insn 33 32 34 init/do_mounts.c:487 (set (reg:SI 154)
        (plus:SI (reg/f:SI 153)
            (const_int 16 [0x10]))) -1 (nil))

(insn 34 33 35 init/do_mounts.c:487 (set (reg:SI 155)
        (symbol_ref/v/f:SI ("*.LC19") [flags 0x82] <string_cst 0x12215340>)) -1 (nil))

(insn 35 34 36 init/do_mounts.c:487 (set (reg:SI 0 r0)
        (reg:SI 154)) -1 (nil))

(insn 36 35 37 init/do_mounts.c:487 (set (reg:SI 1 r1)
        (reg:SI 155)) -1 (nil))

(insn 37 36 38 init/do_mounts.c:487 (set (reg:SI 2 r2)
        (const_int 3 [0x3])) -1 (nil))

(call_insn/i 38 37 39 init/do_mounts.c:487 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strncmp") [flags 0x41] <function_decl 0x51157e80 strncmp>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 39 38 40 init/do_mounts.c:487 (set (reg:SI 156)
        (reg:SI 0 r0)) -1 (nil))

(insn 40 39 0 init/do_mounts.c:487 (set (reg:SI 139 [ D.52951 ])
        (reg:SI 156)) -1 (nil))

;; if (D.52951 == 0)

(insn 41 40 42 init/do_mounts.c:487 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 139 [ D.52951 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 42 41 0 init/do_mounts.c:487 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 4 [0x4])
        (nil)))

;; Generating RTL for gimple basic block 6

;; D.52953 = strncmp (&saved_root_name, &"ubi"[0], 3);

(insn 44 43 45 init/do_mounts.c:488 (set (reg/f:SI 157)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) -1 (nil))

(insn 45 44 46 init/do_mounts.c:488 (set (reg:SI 158)
        (plus:SI (reg/f:SI 157)
            (const_int 16 [0x10]))) -1 (nil))

(insn 46 45 47 init/do_mounts.c:488 (set (reg:SI 159)
        (symbol_ref/v/f:SI ("*.LC20") [flags 0x82] <string_cst 0x122153c0>)) -1 (nil))

(insn 47 46 48 init/do_mounts.c:488 (set (reg:SI 0 r0)
        (reg:SI 158)) -1 (nil))

(insn 48 47 49 init/do_mounts.c:488 (set (reg:SI 1 r1)
        (reg:SI 159)) -1 (nil))

(insn 49 48 50 init/do_mounts.c:488 (set (reg:SI 2 r2)
        (const_int 3 [0x3])) -1 (nil))

(call_insn/i 50 49 51 init/do_mounts.c:488 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strncmp") [flags 0x41] <function_decl 0x51157e80 strncmp>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 51 50 52 init/do_mounts.c:488 (set (reg:SI 160)
        (reg:SI 0 r0)) -1 (nil))

(insn 52 51 0 init/do_mounts.c:488 (set (reg:SI 138 [ D.52953 ])
        (reg:SI 160)) -1 (nil))

;; if (D.52953 == 0)

(insn 53 52 54 init/do_mounts.c:487 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 138 [ D.52953 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 54 53 0 init/do_mounts.c:487 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 4285 [0x10bd])
        (nil)))

;; Generating RTL for gimple basic block 7

;; 

(code_label 55 54 56 115 "" [0 uses])

(note 56 55 0 NOTE_INSN_BASIC_BLOCK)

;; mount_block_root (&saved_root_name, root_mountflags);

(insn 57 56 58 init/do_mounts.c:489 (set (reg/f:SI 161)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) -1 (nil))

(insn 58 57 59 init/do_mounts.c:489 (set (reg:SI 162)
        (plus:SI (reg/f:SI 161)
            (const_int 16 [0x10]))) -1 (nil))

(insn 59 58 60 init/do_mounts.c:489 (set (reg/f:SI 163)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) -1 (nil))

(insn 60 59 61 init/do_mounts.c:489 (set (reg:SI 0 r0)
        (reg:SI 162)) -1 (nil))

(insn 61 60 62 init/do_mounts.c:489 (set (reg:SI 1 r1)
        (mem/c/i:SI (reg/f:SI 163) [0 root_mountflags+0 S4 A32])) -1 (nil))

(call_insn 62 61 0 init/do_mounts.c:489 (parallel [
            (call (mem:SI (symbol_ref:SI ("mount_block_root") [flags 0x3] <function_decl 0x1212c900 mount_block_root>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

;; Generating RTL for gimple basic block 8

;; 

(code_label 65 64 66 116 "" [0 uses])

(note 66 65 0 NOTE_INSN_BASIC_BLOCK)

;; ROOT_DEV.912 = name_to_dev_t (&saved_root_name);

(insn 67 66 68 init/do_mounts.c:492 (set (reg/f:SI 164)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) -1 (nil))

(insn 68 67 69 init/do_mounts.c:492 (set (reg:SI 165)
        (plus:SI (reg/f:SI 164)
            (const_int 16 [0x10]))) -1 (nil))

(insn 69 68 70 init/do_mounts.c:492 (set (reg:SI 0 r0)
        (reg:SI 165)) -1 (nil))

(call_insn 70 69 71 init/do_mounts.c:492 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("name_to_dev_t") [flags 0x3] <function_decl 0x115cbe00 name_to_dev_t>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 71 70 0 init/do_mounts.c:492 (set (reg:SI 137 [ ROOT_DEV.912 ])
        (reg:SI 0 r0)) -1 (nil))

;; ROOT_DEV = ROOT_DEV.912;

(insn 72 71 73 init/do_mounts.c:492 (set (reg/f:SI 166)
        (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])) -1 (nil))

(insn 73 72 0 init/do_mounts.c:492 (set (mem/c/i:SI (reg/f:SI 166) [0 ROOT_DEV+0 S4 A32])
        (reg:SI 137 [ ROOT_DEV.912 ])) -1 (nil))

;; root_device_name.910 = root_device_name;

(insn 74 73 75 init/do_mounts.c:493 (set (reg/f:SI 167)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) -1 (nil))

(insn 75 74 0 init/do_mounts.c:493 (set (reg/f:SI 140 [ root_device_name.910 ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 167)
                (const_int 84 [0x54])) [0 root_device_name+0 S4 A32])) -1 (nil))

;; D.52956 = strncmp (root_device_name.910, &"/dev/"[0], 5);

(insn 76 75 77 init/do_mounts.c:493 (set (reg:SI 168)
        (symbol_ref/v/f:SI ("*.LC15") [flags 0x82] <string_cst 0x121f9900>)) -1 (nil))

(insn 77 76 78 init/do_mounts.c:493 (set (reg:SI 0 r0)
        (reg/f:SI 140 [ root_device_name.910 ])) -1 (nil))

(insn 78 77 79 init/do_mounts.c:493 (set (reg:SI 1 r1)
        (reg:SI 168)) -1 (nil))

(insn 79 78 80 init/do_mounts.c:493 (set (reg:SI 2 r2)
        (const_int 5 [0x5])) -1 (nil))

(call_insn/i 80 79 81 init/do_mounts.c:493 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strncmp") [flags 0x41] <function_decl 0x51157e80 strncmp>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 81 80 82 init/do_mounts.c:493 (set (reg:SI 169)
        (reg:SI 0 r0)) -1 (nil))

(insn 82 81 0 init/do_mounts.c:493 (set (reg:SI 136 [ D.52956 ])
        (reg:SI 169)) -1 (nil))

;; if (D.52956 == 0)

(insn 83 82 84 init/do_mounts.c:493 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 136 [ D.52956 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 84 83 0 init/do_mounts.c:493 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

;; Generating RTL for gimple basic block 9

;; root_device_name = [pointer_plus_expr] root_device_name.910 + 5;

(insn 86 85 87 init/do_mounts.c:494 (set (reg/f:SI 170)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) -1 (nil))

(insn 87 86 88 init/do_mounts.c:494 (set (reg:SI 171)
        (plus:SI (reg/f:SI 140 [ root_device_name.910 ])
            (const_int 5 [0x5]))) -1 (nil))

(insn 88 87 0 init/do_mounts.c:494 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 170)
                (const_int 84 [0x54])) [0 root_device_name+0 S4 A32])
        (reg:SI 171)) -1 (nil))

;; Generating RTL for gimple basic block 10

;; 

(code_label 89 88 90 114 "" [0 uses])

(note 90 89 0 NOTE_INSN_BASIC_BLOCK)

;; D.52960 = initrd_load ();

(call_insn 91 90 92 init/do_mounts.c:497 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("initrd_load") [flags 0x41] <function_decl 0x1212ce00 initrd_load>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (nil))

(insn 92 91 0 init/do_mounts.c:497 (set (reg:SI 135 [ D.52960 ])
        (reg:SI 0 r0)) -1 (nil))

;; if (D.52960 != 0)

(insn 93 92 94 init/do_mounts.c:497 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 135 [ D.52960 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 94 93 0 init/do_mounts.c:497 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))

;; Generating RTL for gimple basic block 11

;; if (ROOT_DEV == 0)

(insn 96 95 97 init/do_mounts.c:501 (set (reg/f:SI 172)
        (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])) -1 (nil))

(insn 97 96 98 init/do_mounts.c:501 (set (reg:SI 173)
        (mem/c/i:SI (reg/f:SI 172) [0 ROOT_DEV+0 S4 A32])) -1 (nil))

(insn 98 97 99 init/do_mounts.c:501 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 173)
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 99 98 0 init/do_mounts.c:501 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

;; Generating RTL for gimple basic block 12

;; if (root_wait != 0)

(insn 101 100 102 init/do_mounts.c:501 discrim 1 (set (reg/f:SI 174)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) -1 (nil))

(insn 102 101 103 init/do_mounts.c:501 discrim 1 (set (reg:SI 175)
        (mem/c/i:SI (reg/f:SI 174) [0 root_wait+0 S4 A32])) -1 (nil))

(insn 103 102 104 init/do_mounts.c:501 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 175)
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 104 103 0 init/do_mounts.c:501 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))

;; Generating RTL for gimple basic block 13

;; printk (&"<6>Waiting for root device %s...\n"[0], &saved_root_name);

(insn 106 105 107 init/do_mounts.c:502 (set (reg:SI 176)
        (symbol_ref/v/f:SI ("*.LC21") [flags 0x82] <string_cst 0x12216340>)) -1 (nil))

(insn 107 106 108 init/do_mounts.c:502 (set (reg/f:SI 177)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) -1 (nil))

(insn 108 107 109 init/do_mounts.c:502 (set (reg:SI 178)
        (plus:SI (reg/f:SI 177)
            (const_int 16 [0x10]))) -1 (nil))

(insn 109 108 110 init/do_mounts.c:502 (set (reg:SI 0 r0)
        (reg:SI 176)) -1 (nil))

(insn 110 109 111 init/do_mounts.c:502 (set (reg:SI 1 r1)
        (reg:SI 178)) -1 (nil))

(call_insn 111 110 0 init/do_mounts.c:502 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

;; Generating RTL for gimple basic block 14

;; msleep (100);

(insn 115 114 116 init/do_mounts.c:506 (set (reg:SI 0 r0)
        (const_int 100 [0x64])) -1 (nil))

(call_insn 116 115 0 init/do_mounts.c:506 (parallel [
            (call (mem:SI (symbol_ref:SI ("msleep") [flags 0x41] <function_decl 0x11595a80 msleep>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

;; Generating RTL for gimple basic block 15

;; 

(code_label 117 116 118 119 "" [0 uses])

(note 118 117 0 NOTE_INSN_BASIC_BLOCK)

;; D.52968 = driver_probe_done ();

(call_insn 119 118 120 init/do_mounts.c:504 discrim 1 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("driver_probe_done") [flags 0x41] <function_decl 0x11201100 driver_probe_done>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (nil))

(insn 120 119 0 init/do_mounts.c:504 discrim 1 (set (reg:SI 134 [ D.52968 ])
        (reg:SI 0 r0)) -1 (nil))

;; if (D.52968 != 0)

(insn 122 120 123 init/do_mounts.c:504 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 134 [ D.52968 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 123 122 0 init/do_mounts.c:504 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 121)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
        (nil)))

;; Generating RTL for gimple basic block 16

;; ROOT_DEV.916 = name_to_dev_t (&saved_root_name);

(insn 125 124 126 init/do_mounts.c:505 (set (reg/f:SI 179)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) -1 (nil))

(insn 126 125 127 init/do_mounts.c:505 (set (reg:SI 180)
        (plus:SI (reg/f:SI 179)
            (const_int 16 [0x10]))) -1 (nil))

(insn 127 126 128 init/do_mounts.c:505 (set (reg:SI 0 r0)
        (reg:SI 180)) -1 (nil))

(call_insn 128 127 129 init/do_mounts.c:505 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("name_to_dev_t") [flags 0x3] <function_decl 0x115cbe00 name_to_dev_t>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 129 128 0 init/do_mounts.c:505 (set (reg:SI 133 [ ROOT_DEV.916 ])
        (reg:SI 0 r0)) -1 (nil))

;; ROOT_DEV = ROOT_DEV.916;

(insn 130 129 131 init/do_mounts.c:504 discrim 2 (set (reg/f:SI 181)
        (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])) -1 (nil))

(insn 131 130 0 init/do_mounts.c:504 discrim 2 (set (mem/c/i:SI (reg/f:SI 181) [0 ROOT_DEV+0 S4 A32])
        (reg:SI 133 [ ROOT_DEV.916 ])) -1 (nil))

;; if (ROOT_DEV.916 == 0)

(insn 132 131 133 init/do_mounts.c:504 discrim 2 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 133 [ ROOT_DEV.916 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 133 132 0 init/do_mounts.c:504 discrim 2 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 121)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
        (nil)))

;; Generating RTL for gimple basic block 17

;; async_synchronize_full ();

(call_insn 135 134 0 init/do_mounts.c:507 (parallel [
            (call (mem:SI (symbol_ref:SI ("async_synchronize_full") [flags 0x41] <function_decl 0x115d7000 async_synchronize_full>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (nil))

;; Generating RTL for gimple basic block 18

;; 

(code_label 136 135 137 118 "" [0 uses])

(note 137 136 0 NOTE_INSN_BASIC_BLOCK)

;; mount_root ();

(call_insn 138 137 0 init/do_mounts.c:515 (parallel [
            (call (mem:SI (symbol_ref:SI ("mount_root") [flags 0x3] <function_decl 0x1212c980 mount_root>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))

;; Generating RTL for gimple basic block 19

;; 

(code_label 139 138 140 117 "" [0 uses])

(note 140 139 0 NOTE_INSN_BASIC_BLOCK)

;; sys_mount (&"."[0], &"/"[0], 0B, 8192, 0B);

(insn 141 140 142 init/do_mounts.c:518 (set (reg:SI 182)
        (symbol_ref/v/f:SI ("*.LC22") [flags 0x82] <string_cst 0x12223080>)) -1 (nil))

(insn 142 141 143 init/do_mounts.c:518 (set (reg:SI 183)
        (symbol_ref/v/f:SI ("*.LC23") [flags 0x82] <string_cst 0x122230e0>)) -1 (nil))

(insn 143 142 144 init/do_mounts.c:518 (set (reg:SI 184)
        (const_int 0 [0x0])) -1 (nil))

(insn 144 143 145 init/do_mounts.c:518 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg:SI 184)) -1 (nil))

(insn 145 144 146 init/do_mounts.c:518 (set (reg:SI 0 r0)
        (reg:SI 182)) -1 (nil))

(insn 146 145 147 init/do_mounts.c:518 (set (reg:SI 1 r1)
        (reg:SI 183)) -1 (nil))

(insn 147 146 148 init/do_mounts.c:518 (set (reg:SI 2 r2)
        (const_int 0 [0x0])) -1 (nil))

(insn 148 147 149 init/do_mounts.c:518 (set (reg:SI 3 r3)
        (const_int 8192 [0x2000])) -1 (nil))

(call_insn 149 148 0 init/do_mounts.c:518 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sys_mount") [flags 0x41] <function_decl 0x120f7880 sys_mount>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

;; sys_chroot (&"."[0]); [tail call]

(insn 150 149 151 19 init/do_mounts.c:519 (set (reg:SI 185)
        (symbol_ref/v/f:SI ("*.LC22") [flags 0x82] <string_cst 0x12223080>)) -1 (nil))

(insn 151 150 152 19 init/do_mounts.c:519 (set (reg:SI 0 r0)
        (reg:SI 185)) -1 (nil))

(call_insn/j 152 151 153 19 init/do_mounts.c:519 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sys_chroot") [flags 0x41] <function_decl 0x12103080 sys_chroot>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(barrier 153 152 0)


;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 4 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 3)

;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [100.0%]  (fallthru)
(note 4 2 5 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 5 4 6 3 init/do_mounts.c:468 (set (reg/f:SI 142)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) -1 (nil))

(insn 6 5 7 3 init/do_mounts.c:468 (set (reg:SI 141 [ root_delay.909 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 142)
                (const_int 80 [0x50])) [0 root_delay+0 S4 A32])) -1 (nil))

(insn 7 6 8 3 init/do_mounts.c:468 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 141 [ root_delay.909 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 8 7 9 3 init/do_mounts.c:468 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 20)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 3 -> ( 4 5)

;; Succ edge  4 [0.0%]  (fallthru)
;; Succ edge  5 [100.0%] 

;; Start of basic block ( 3) -> 4
;; Pred edge  3 [0.0%]  (fallthru)
(note 9 8 10 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 10 9 11 4 init/do_mounts.c:469 (set (reg:SI 143)
        (symbol_ref/v/f:SI ("*.LC18") [flags 0x82] <string_cst 0x12177c80>)) -1 (nil))

(insn 11 10 12 4 init/do_mounts.c:469 (set (reg:SI 0 r0)
        (reg:SI 143)) -1 (nil))

(insn 12 11 13 4 init/do_mounts.c:469 (set (reg:SI 1 r1)
        (reg:SI 141 [ root_delay.909 ])) -1 (nil))

(call_insn 13 12 14 4 init/do_mounts.c:469 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 14 13 15 4 include/linux/delay.h:52 (set (reg/f:SI 144)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) -1 (nil))

(insn 15 14 16 4 include/linux/delay.h:52 (set (reg:SI 146)
        (mem/c/i:SI (plus:SI (reg/f:SI 144)
                (const_int 80 [0x50])) [0 root_delay+0 S4 A32])) -1 (nil))

(insn 16 15 17 4 include/linux/delay.h:52 (set (reg:SI 147)
        (const_int 1000 [0x3e8])) -1 (nil))

(insn 17 16 18 4 include/linux/delay.h:52 (set (reg:SI 145)
        (mult:SI (reg:SI 147)
            (reg:SI 146))) -1 (nil))

(insn 18 17 19 4 include/linux/delay.h:52 (set (reg:SI 0 r0)
        (reg:SI 145)) -1 (nil))

(call_insn 19 18 20 4 include/linux/delay.h:52 (parallel [
            (call (mem:SI (symbol_ref:SI ("msleep") [flags 0x41] <function_decl 0x11595a80 msleep>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 4 -> ( 5)

;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 3 4) -> 5
;; Pred edge  3 [100.0%] 
;; Pred edge  4 [100.0%]  (fallthru)
(code_label 20 19 21 5 113 "" [1 uses])

(note 21 20 22 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(call_insn 22 21 23 5 init/do_mounts.c:481 (parallel [
            (call (mem:SI (symbol_ref:SI ("wait_for_device_probe") [flags 0x41] <function_decl 0x11201180 wait_for_device_probe>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (nil))

(insn 23 22 24 5 init/do_mounts.c:485 (set (reg/f:SI 148)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) -1 (nil))

(insn 24 23 25 5 init/do_mounts.c:485 (set (reg:SI 149)
        (zero_extend:SI (mem/s/j:QI (plus:SI (reg/f:SI 148)
                    (const_int 16 [0x10])) [0 saved_root_name+0 S1 A32]))) -1 (nil))

(insn 25 24 26 5 init/do_mounts.c:485 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 149)
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 26 25 27 5 init/do_mounts.c:485 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 89)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 4 [0x4])
        (nil)))
;; End of basic block 5 -> ( 6 11)

;; Succ edge  6 [100.0%]  (fallthru)
;; Succ edge  11 [0.0%] 

;; Start of basic block ( 5) -> 6
;; Pred edge  5 [100.0%]  (fallthru)
(note 27 26 28 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 28 27 29 6 init/do_mounts.c:486 (set (reg/f:SI 150)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) -1 (nil))

(insn 29 28 30 6 init/do_mounts.c:486 (set (reg/f:SI 151)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) -1 (nil))

(insn 30 29 31 6 init/do_mounts.c:486 (set (reg:SI 152)
        (plus:SI (reg/f:SI 151)
            (const_int 16 [0x10]))) -1 (nil))

(insn 31 30 32 6 init/do_mounts.c:486 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 150)
                (const_int 84 [0x54])) [0 root_device_name+0 S4 A32])
        (reg:SI 152)) -1 (nil))

(insn 32 31 33 6 init/do_mounts.c:487 (set (reg/f:SI 153)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) -1 (nil))

(insn 33 32 34 6 init/do_mounts.c:487 (set (reg:SI 154)
        (plus:SI (reg/f:SI 153)
            (const_int 16 [0x10]))) -1 (nil))

(insn 34 33 35 6 init/do_mounts.c:487 (set (reg:SI 155)
        (symbol_ref/v/f:SI ("*.LC19") [flags 0x82] <string_cst 0x12215340>)) -1 (nil))

(insn 35 34 36 6 init/do_mounts.c:487 (set (reg:SI 0 r0)
        (reg:SI 154)) -1 (nil))

(insn 36 35 37 6 init/do_mounts.c:487 (set (reg:SI 1 r1)
        (reg:SI 155)) -1 (nil))

(insn 37 36 38 6 init/do_mounts.c:487 (set (reg:SI 2 r2)
        (const_int 3 [0x3])) -1 (nil))

(call_insn/i 38 37 39 6 init/do_mounts.c:487 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strncmp") [flags 0x41] <function_decl 0x51157e80 strncmp>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 39 38 40 6 init/do_mounts.c:487 (set (reg:SI 156)
        (reg:SI 0 r0)) -1 (nil))

(insn 40 39 41 6 init/do_mounts.c:487 (set (reg:SI 139 [ D.52951 ])
        (reg:SI 156)) -1 (nil))

(insn 41 40 42 6 init/do_mounts.c:487 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 139 [ D.52951 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 42 41 43 6 init/do_mounts.c:487 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 55)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 4 [0x4])
        (nil)))
;; End of basic block 6 -> ( 8 7)

;; Succ edge  8 [0.0%] 
;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 6) -> 7
;; Pred edge  6 [100.0%]  (fallthru)
(note 43 42 44 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 44 43 45 7 init/do_mounts.c:488 (set (reg/f:SI 157)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) -1 (nil))

(insn 45 44 46 7 init/do_mounts.c:488 (set (reg:SI 158)
        (plus:SI (reg/f:SI 157)
            (const_int 16 [0x10]))) -1 (nil))

(insn 46 45 47 7 init/do_mounts.c:488 (set (reg:SI 159)
        (symbol_ref/v/f:SI ("*.LC20") [flags 0x82] <string_cst 0x122153c0>)) -1 (nil))

(insn 47 46 48 7 init/do_mounts.c:488 (set (reg:SI 0 r0)
        (reg:SI 158)) -1 (nil))

(insn 48 47 49 7 init/do_mounts.c:488 (set (reg:SI 1 r1)
        (reg:SI 159)) -1 (nil))

(insn 49 48 50 7 init/do_mounts.c:488 (set (reg:SI 2 r2)
        (const_int 3 [0x3])) -1 (nil))

(call_insn/i 50 49 51 7 init/do_mounts.c:488 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strncmp") [flags 0x41] <function_decl 0x51157e80 strncmp>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 51 50 52 7 init/do_mounts.c:488 (set (reg:SI 160)
        (reg:SI 0 r0)) -1 (nil))

(insn 52 51 53 7 init/do_mounts.c:488 (set (reg:SI 138 [ D.52953 ])
        (reg:SI 160)) -1 (nil))

(insn 53 52 54 7 init/do_mounts.c:487 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 138 [ D.52953 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 54 53 55 7 init/do_mounts.c:487 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 65)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 4285 [0x10bd])
        (nil)))
;; End of basic block 7 -> ( 8 9)

;; Succ edge  8 [57.1%]  (fallthru)
;; Succ edge  9 [42.9%] 

;; Start of basic block ( 6 7) -> 8
;; Pred edge  6 [0.0%] 
;; Pred edge  7 [57.1%]  (fallthru)
(code_label 55 54 56 8 115 "" [1 uses])

(note 56 55 57 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 57 56 58 8 init/do_mounts.c:489 (set (reg/f:SI 161)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) -1 (nil))

(insn 58 57 59 8 init/do_mounts.c:489 (set (reg:SI 162)
        (plus:SI (reg/f:SI 161)
            (const_int 16 [0x10]))) -1 (nil))

(insn 59 58 60 8 init/do_mounts.c:489 (set (reg/f:SI 163)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) -1 (nil))

(insn 60 59 61 8 init/do_mounts.c:489 (set (reg:SI 0 r0)
        (reg:SI 162)) -1 (nil))

(insn 61 60 62 8 init/do_mounts.c:489 (set (reg:SI 1 r1)
        (mem/c/i:SI (reg/f:SI 163) [0 root_mountflags+0 S4 A32])) -1 (nil))

(call_insn 62 61 63 8 init/do_mounts.c:489 (parallel [
            (call (mem:SI (symbol_ref:SI ("mount_block_root") [flags 0x3] <function_decl 0x1212c900 mount_block_root>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(jump_insn 63 62 64 8 init/do_mounts.c:490 (set (pc)
        (label_ref 139)) -1 (nil))
;; End of basic block 8 -> ( 20)

;; Succ edge  20 [100.0%] 

(barrier 64 63 65)

;; Start of basic block ( 7) -> 9
;; Pred edge  7 [42.9%] 
(code_label 65 64 66 9 116 "" [1 uses])

(note 66 65 67 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 67 66 68 9 init/do_mounts.c:492 (set (reg/f:SI 164)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) -1 (nil))

(insn 68 67 69 9 init/do_mounts.c:492 (set (reg:SI 165)
        (plus:SI (reg/f:SI 164)
            (const_int 16 [0x10]))) -1 (nil))

(insn 69 68 70 9 init/do_mounts.c:492 (set (reg:SI 0 r0)
        (reg:SI 165)) -1 (nil))

(call_insn 70 69 71 9 init/do_mounts.c:492 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("name_to_dev_t") [flags 0x3] <function_decl 0x115cbe00 name_to_dev_t>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 71 70 72 9 init/do_mounts.c:492 (set (reg:SI 137 [ ROOT_DEV.912 ])
        (reg:SI 0 r0)) -1 (nil))

(insn 72 71 73 9 init/do_mounts.c:492 (set (reg/f:SI 166)
        (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])) -1 (nil))

(insn 73 72 74 9 init/do_mounts.c:492 (set (mem/c/i:SI (reg/f:SI 166) [0 ROOT_DEV+0 S4 A32])
        (reg:SI 137 [ ROOT_DEV.912 ])) -1 (nil))

(insn 74 73 75 9 init/do_mounts.c:493 (set (reg/f:SI 167)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) -1 (nil))

(insn 75 74 76 9 init/do_mounts.c:493 (set (reg/f:SI 140 [ root_device_name.910 ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 167)
                (const_int 84 [0x54])) [0 root_device_name+0 S4 A32])) -1 (nil))

(insn 76 75 77 9 init/do_mounts.c:493 (set (reg:SI 168)
        (symbol_ref/v/f:SI ("*.LC15") [flags 0x82] <string_cst 0x121f9900>)) -1 (nil))

(insn 77 76 78 9 init/do_mounts.c:493 (set (reg:SI 0 r0)
        (reg/f:SI 140 [ root_device_name.910 ])) -1 (nil))

(insn 78 77 79 9 init/do_mounts.c:493 (set (reg:SI 1 r1)
        (reg:SI 168)) -1 (nil))

(insn 79 78 80 9 init/do_mounts.c:493 (set (reg:SI 2 r2)
        (const_int 5 [0x5])) -1 (nil))

(call_insn/i 80 79 81 9 init/do_mounts.c:493 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strncmp") [flags 0x41] <function_decl 0x51157e80 strncmp>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 81 80 82 9 init/do_mounts.c:493 (set (reg:SI 169)
        (reg:SI 0 r0)) -1 (nil))

(insn 82 81 83 9 init/do_mounts.c:493 (set (reg:SI 136 [ D.52956 ])
        (reg:SI 169)) -1 (nil))

(insn 83 82 84 9 init/do_mounts.c:493 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 136 [ D.52956 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 84 83 85 9 init/do_mounts.c:493 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 89)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 9 -> ( 10 11)

;; Succ edge  10 [50.0%]  (fallthru)
;; Succ edge  11 [50.0%] 

;; Start of basic block ( 9) -> 10
;; Pred edge  9 [50.0%]  (fallthru)
(note 85 84 86 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 86 85 87 10 init/do_mounts.c:494 (set (reg/f:SI 170)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) -1 (nil))

(insn 87 86 88 10 init/do_mounts.c:494 (set (reg:SI 171)
        (plus:SI (reg/f:SI 140 [ root_device_name.910 ])
            (const_int 5 [0x5]))) -1 (nil))

(insn 88 87 89 10 init/do_mounts.c:494 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 170)
                (const_int 84 [0x54])) [0 root_device_name+0 S4 A32])
        (reg:SI 171)) -1 (nil))
;; End of basic block 10 -> ( 11)

;; Succ edge  11 [100.0%]  (fallthru)

;; Start of basic block ( 5 9 10) -> 11
;; Pred edge  5 [0.0%] 
;; Pred edge  9 [50.0%] 
;; Pred edge  10 [100.0%]  (fallthru)
(code_label 89 88 90 11 114 "" [2 uses])

(note 90 89 91 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(call_insn 91 90 92 11 init/do_mounts.c:497 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("initrd_load") [flags 0x41] <function_decl 0x1212ce00 initrd_load>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (nil))

(insn 92 91 93 11 init/do_mounts.c:497 (set (reg:SI 135 [ D.52960 ])
        (reg:SI 0 r0)) -1 (nil))

(insn 93 92 94 11 init/do_mounts.c:497 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 135 [ D.52960 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 94 93 95 11 init/do_mounts.c:497 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 139)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 11 -> ( 20 12)

;; Succ edge  20 [100.0%] 
;; Succ edge  12 [0.0%]  (fallthru)

;; Start of basic block ( 11) -> 12
;; Pred edge  11 [0.0%]  (fallthru)
(note 95 94 96 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 96 95 97 12 init/do_mounts.c:501 (set (reg/f:SI 172)
        (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])) -1 (nil))

(insn 97 96 98 12 init/do_mounts.c:501 (set (reg:SI 173)
        (mem/c/i:SI (reg/f:SI 172) [0 ROOT_DEV+0 S4 A32])) -1 (nil))

(insn 98 97 99 12 init/do_mounts.c:501 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 173)
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 99 98 100 12 init/do_mounts.c:501 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 136)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 12 -> ( 13 19)

;; Succ edge  13 [50.0%]  (fallthru)
;; Succ edge  19 [50.0%] 

;; Start of basic block ( 12) -> 13
;; Pred edge  12 [50.0%]  (fallthru)
(note 100 99 101 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 101 100 102 13 init/do_mounts.c:501 discrim 1 (set (reg/f:SI 174)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) -1 (nil))

(insn 102 101 103 13 init/do_mounts.c:501 discrim 1 (set (reg:SI 175)
        (mem/c/i:SI (reg/f:SI 174) [0 root_wait+0 S4 A32])) -1 (nil))

(insn 103 102 104 13 init/do_mounts.c:501 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 175)
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 104 103 105 13 init/do_mounts.c:501 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 136)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 13 -> ( 14 19)

;; Succ edge  14 [0.0%]  (fallthru)
;; Succ edge  19 [100.0%] 

;; Start of basic block ( 13) -> 14
;; Pred edge  13 [0.0%]  (fallthru)
(note 105 104 106 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 106 105 107 14 init/do_mounts.c:502 (set (reg:SI 176)
        (symbol_ref/v/f:SI ("*.LC21") [flags 0x82] <string_cst 0x12216340>)) -1 (nil))

(insn 107 106 108 14 init/do_mounts.c:502 (set (reg/f:SI 177)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) -1 (nil))

(insn 108 107 109 14 init/do_mounts.c:502 (set (reg:SI 178)
        (plus:SI (reg/f:SI 177)
            (const_int 16 [0x10]))) -1 (nil))

(insn 109 108 110 14 init/do_mounts.c:502 (set (reg:SI 0 r0)
        (reg:SI 176)) -1 (nil))

(insn 110 109 111 14 init/do_mounts.c:502 (set (reg:SI 1 r1)
        (reg:SI 178)) -1 (nil))

(call_insn 111 110 112 14 init/do_mounts.c:502 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(jump_insn 112 111 113 14 init/do_mounts.c:504 (set (pc)
        (label_ref 117)) -1 (nil))
;; End of basic block 14 -> ( 16)

;; Succ edge  16 [100.0%] 

(barrier 113 112 121)

;; Start of basic block ( 16 17) -> 15
;; Pred edge  16 [29.0%] 
;; Pred edge  17 [91.0%] 
(code_label 121 113 114 15 120 "" [2 uses])

(note 114 121 115 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 115 114 116 15 init/do_mounts.c:506 (set (reg:SI 0 r0)
        (const_int 100 [0x64])) -1 (nil))

(call_insn 116 115 117 15 init/do_mounts.c:506 (parallel [
            (call (mem:SI (symbol_ref:SI ("msleep") [flags 0x41] <function_decl 0x11595a80 msleep>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 15 -> ( 16)

;; Succ edge  16 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 14 15) -> 16
;; Pred edge  14 [100.0%] 
;; Pred edge  15 [100.0%]  (fallthru,dfs_back)
(code_label 117 116 118 16 119 "" [1 uses])

(note 118 117 119 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(call_insn 119 118 120 16 init/do_mounts.c:504 discrim 1 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("driver_probe_done") [flags 0x41] <function_decl 0x11201100 driver_probe_done>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (nil))

(insn 120 119 122 16 init/do_mounts.c:504 discrim 1 (set (reg:SI 134 [ D.52968 ])
        (reg:SI 0 r0)) -1 (nil))

(insn 122 120 123 16 init/do_mounts.c:504 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 134 [ D.52968 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 123 122 124 16 init/do_mounts.c:504 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 121)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
        (nil)))
;; End of basic block 16 -> ( 15 17)

;; Succ edge  15 [29.0%] 
;; Succ edge  17 [71.0%]  (fallthru)

;; Start of basic block ( 16) -> 17
;; Pred edge  16 [71.0%]  (fallthru)
(note 124 123 125 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 125 124 126 17 init/do_mounts.c:505 (set (reg/f:SI 179)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) -1 (nil))

(insn 126 125 127 17 init/do_mounts.c:505 (set (reg:SI 180)
        (plus:SI (reg/f:SI 179)
            (const_int 16 [0x10]))) -1 (nil))

(insn 127 126 128 17 init/do_mounts.c:505 (set (reg:SI 0 r0)
        (reg:SI 180)) -1 (nil))

(call_insn 128 127 129 17 init/do_mounts.c:505 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("name_to_dev_t") [flags 0x3] <function_decl 0x115cbe00 name_to_dev_t>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 129 128 130 17 init/do_mounts.c:505 (set (reg:SI 133 [ ROOT_DEV.916 ])
        (reg:SI 0 r0)) -1 (nil))

(insn 130 129 131 17 init/do_mounts.c:504 discrim 2 (set (reg/f:SI 181)
        (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])) -1 (nil))

(insn 131 130 132 17 init/do_mounts.c:504 discrim 2 (set (mem/c/i:SI (reg/f:SI 181) [0 ROOT_DEV+0 S4 A32])
        (reg:SI 133 [ ROOT_DEV.916 ])) -1 (nil))

(insn 132 131 133 17 init/do_mounts.c:504 discrim 2 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 133 [ ROOT_DEV.916 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 133 132 134 17 init/do_mounts.c:504 discrim 2 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 121)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
        (nil)))
;; End of basic block 17 -> ( 15 18)

;; Succ edge  15 [91.0%] 
;; Succ edge  18 [9.0%]  (fallthru)

;; Start of basic block ( 17) -> 18
;; Pred edge  17 [9.0%]  (fallthru)
(note 134 133 135 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(call_insn 135 134 136 18 init/do_mounts.c:507 (parallel [
            (call (mem:SI (symbol_ref:SI ("async_synchronize_full") [flags 0x41] <function_decl 0x115d7000 async_synchronize_full>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (nil))
;; End of basic block 18 -> ( 19)

;; Succ edge  19 [100.0%]  (fallthru)

;; Start of basic block ( 12 13 18) -> 19
;; Pred edge  12 [50.0%] 
;; Pred edge  13 [100.0%] 
;; Pred edge  18 [100.0%]  (fallthru)
(code_label 136 135 137 19 118 "" [2 uses])

(note 137 136 138 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(call_insn 138 137 139 19 init/do_mounts.c:515 (parallel [
            (call (mem:SI (symbol_ref:SI ("mount_root") [flags 0x3] <function_decl 0x1212c980 mount_root>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))
;; End of basic block 19 -> ( 20)

;; Succ edge  20 [100.0%]  (fallthru)

;; Start of basic block ( 11 8 19) -> 20
;; Pred edge  11 [100.0%] 
;; Pred edge  8 [100.0%] 
;; Pred edge  19 [100.0%]  (fallthru)
(code_label 139 138 140 20 117 "" [2 uses])

(note 140 139 141 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn 141 140 142 20 init/do_mounts.c:518 (set (reg:SI 182)
        (symbol_ref/v/f:SI ("*.LC22") [flags 0x82] <string_cst 0x12223080>)) -1 (nil))

(insn 142 141 143 20 init/do_mounts.c:518 (set (reg:SI 183)
        (symbol_ref/v/f:SI ("*.LC23") [flags 0x82] <string_cst 0x122230e0>)) -1 (nil))

(insn 143 142 144 20 init/do_mounts.c:518 (set (reg:SI 184)
        (const_int 0 [0x0])) -1 (nil))

(insn 144 143 145 20 init/do_mounts.c:518 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg:SI 184)) -1 (nil))

(insn 145 144 146 20 init/do_mounts.c:518 (set (reg:SI 0 r0)
        (reg:SI 182)) -1 (nil))

(insn 146 145 147 20 init/do_mounts.c:518 (set (reg:SI 1 r1)
        (reg:SI 183)) -1 (nil))

(insn 147 146 148 20 init/do_mounts.c:518 (set (reg:SI 2 r2)
        (const_int 0 [0x0])) -1 (nil))

(insn 148 147 149 20 init/do_mounts.c:518 (set (reg:SI 3 r3)
        (const_int 8192 [0x2000])) -1 (nil))

(call_insn 149 148 150 20 init/do_mounts.c:518 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sys_mount") [flags 0x41] <function_decl 0x120f7880 sys_mount>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 150 149 151 20 init/do_mounts.c:519 (set (reg:SI 185)
        (symbol_ref/v/f:SI ("*.LC22") [flags 0x82] <string_cst 0x12223080>)) -1 (nil))

(insn 151 150 152 20 init/do_mounts.c:519 (set (reg:SI 0 r0)
        (reg:SI 185)) -1 (nil))

(call_insn/j 152 151 153 20 init/do_mounts.c:519 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sys_chroot") [flags 0x41] <function_decl 0x12103080 sys_chroot>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 20 -> ( 1)

;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 153 152 158)

;; Start of basic block () -> 21
(note 158 153 155 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(jump_insn 155 158 156 21 init/do_mounts.c:520 (set (pc)
        (label_ref 157)) -1 (nil))
;; End of basic block 21 -> ( 23)

;; Succ edge  23 [100.0%] 

(barrier 156 155 154)

;; Start of basic block () -> 22
(code_label 154 156 159 22 112 "" [0 uses])

(note 159 154 157 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 22 -> ( 23)

;; Succ edge  23 [100.0%]  (fallthru)

;; Start of basic block ( 21 22) -> 23
;; Pred edge  21 [100.0%] 
;; Pred edge  22 [100.0%]  (fallthru)
(code_label 157 159 160 23 121 "" [1 uses])

(note 160 157 0 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 23 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function match_dev_by_uuid (match_dev_by_uuid)[0:2705]


;; Generating RTL for gimple basic block 2

;; D.52671 = ((struct hd_struct *) dev + -32)->info;

(insn 7 6 0 init/do_mounts.c:74 (set (reg/f:SI 135 [ D.52671 ])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 137 [ dev ])
                (const_int 372 [0x174])) [0 <variable>.info+0 S4 A32])) -1 (nil))

;; if (D.52671 == 0B)

(insn 8 7 9 init/do_mounts.c:74 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 135 [ D.52671 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 9 8 0 init/do_mounts.c:74 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 8500 [0x2134])
        (nil)))

;; Generating RTL for gimple basic block 3

;; D.52676 = 0;

(insn 11 10 0 init/do_mounts.c:82 (set (reg:SI 133 [ D.52676 ])
        (const_int 0 [0x0])) -1 (nil))

;; Generating RTL for gimple basic block 4

;; 

(code_label 14 13 15 125 "" [0 uses])

(note 15 14 0 NOTE_INSN_BASIC_BLOCK)

;; D.52674 = memcmp ((u8 *) data, &D.52671->uuid, 16);

(insn 16 15 17 init/do_mounts.c:77 (set (reg:SI 0 r0)
        (reg/v/f:SI 138 [ data ])) -1 (nil))

(insn 17 16 18 init/do_mounts.c:77 (set (reg:SI 1 r1)
        (reg/f:SI 135 [ D.52671 ])) -1 (nil))

(insn 18 17 19 init/do_mounts.c:77 (set (reg:SI 2 r2)
        (const_int 16 [0x10])) -1 (nil))

(call_insn/i 19 18 20 init/do_mounts.c:77 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcmp") [flags 0x41] <function_decl 0x51154b80 memcmp>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 20 19 21 init/do_mounts.c:77 (set (reg:SI 139)
        (reg:SI 0 r0)) -1 (nil))

(insn 21 20 0 init/do_mounts.c:77 (set (reg:SI 134 [ D.52674 ])
        (reg:SI 139)) -1 (nil))

;; D.52676 = (int) (D.52674 == 0);

(insn 22 21 23 init/do_mounts.c:80 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 134 [ D.52674 ])
            (const_int 0 [0x0]))) -1 (nil))

(insn 23 22 24 init/do_mounts.c:80 (set (reg:SI 141)
        (eq:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) -1 (nil))

(insn 24 23 0 init/do_mounts.c:80 (set (reg:SI 133 [ D.52676 ])
        (reg:SI 141)) -1 (nil))

;; Generating RTL for gimple basic block 5

;; 

(code_label 25 24 26 126 "" [0 uses])

(note 26 25 0 NOTE_INSN_BASIC_BLOCK)

;; return D.52676;

(insn 27 26 28 init/do_mounts.c:83 (set (reg:SI 136 [ <result> ])
        (reg:SI 133 [ D.52676 ])) -1 (nil))

(jump_insn 28 27 29 init/do_mounts.c:83 (set (pc)
        (label_ref 0)) -1 (nil))

(barrier 29 28 0)


;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 5 3 2 init/do_mounts.c:70 (set (reg/v/f:SI 137 [ dev ])
        (reg:SI 0 r0 [ dev ])) -1 (nil))

(insn 3 2 4 2 init/do_mounts.c:70 (set (reg/v/f:SI 138 [ data ])
        (reg:SI 1 r1 [ data ])) -1 (nil))

(note 4 3 6 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 3)

;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [100.0%]  (fallthru)
(note 6 4 7 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 7 6 8 3 init/do_mounts.c:74 (set (reg/f:SI 135 [ D.52671 ])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 137 [ dev ])
                (const_int 372 [0x174])) [0 <variable>.info+0 S4 A32])) -1 (nil))

(insn 8 7 9 3 init/do_mounts.c:74 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 135 [ D.52671 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 9 8 10 3 init/do_mounts.c:74 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 14)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 8500 [0x2134])
        (nil)))
;; End of basic block 3 -> ( 4 5)

;; Succ edge  4 [15.0%]  (fallthru)
;; Succ edge  5 [85.0%] 

;; Start of basic block ( 3) -> 4
;; Pred edge  3 [15.0%]  (fallthru)
(note 10 9 11 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 11 10 12 4 init/do_mounts.c:82 (set (reg:SI 133 [ D.52676 ])
        (const_int 0 [0x0])) -1 (nil))

(jump_insn 12 11 13 4 init/do_mounts.c:82 (set (pc)
        (label_ref 25)) -1 (nil))
;; End of basic block 4 -> ( 6)

;; Succ edge  6 [100.0%] 

(barrier 13 12 14)

;; Start of basic block ( 3) -> 5
;; Pred edge  3 [85.0%] 
(code_label 14 13 15 5 125 "" [1 uses])

(note 15 14 16 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 16 15 17 5 init/do_mounts.c:77 (set (reg:SI 0 r0)
        (reg/v/f:SI 138 [ data ])) -1 (nil))

(insn 17 16 18 5 init/do_mounts.c:77 (set (reg:SI 1 r1)
        (reg/f:SI 135 [ D.52671 ])) -1 (nil))

(insn 18 17 19 5 init/do_mounts.c:77 (set (reg:SI 2 r2)
        (const_int 16 [0x10])) -1 (nil))

(call_insn/i 19 18 20 5 init/do_mounts.c:77 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcmp") [flags 0x41] <function_decl 0x51154b80 memcmp>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 20 19 21 5 init/do_mounts.c:77 (set (reg:SI 139)
        (reg:SI 0 r0)) -1 (nil))

(insn 21 20 22 5 init/do_mounts.c:77 (set (reg:SI 134 [ D.52674 ])
        (reg:SI 139)) -1 (nil))

(insn 22 21 23 5 init/do_mounts.c:80 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 134 [ D.52674 ])
            (const_int 0 [0x0]))) -1 (nil))

(insn 23 22 24 5 init/do_mounts.c:80 (set (reg:SI 141)
        (eq:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) -1 (nil))

(insn 24 23 25 5 init/do_mounts.c:80 (set (reg:SI 133 [ D.52676 ])
        (reg:SI 141)) -1 (nil))
;; End of basic block 5 -> ( 6)

;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 4 5) -> 6
;; Pred edge  4 [100.0%] 
;; Pred edge  5 [100.0%]  (fallthru)
(code_label 25 24 26 6 126 "" [1 uses])

(note 26 25 27 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 27 26 28 6 init/do_mounts.c:83 (set (reg:SI 136 [ <result> ])
        (reg:SI 133 [ D.52676 ])) -1 (nil))

(jump_insn 28 27 29 6 init/do_mounts.c:83 (set (pc)
        (label_ref 30)) -1 (nil))
;; End of basic block 6 -> ( 8)

;; Succ edge  8 [100.0%] 

(barrier 29 28 38)

;; Start of basic block () -> 7
(note 38 29 32 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 32 38 33 7 init/do_mounts.c:83 (clobber (reg/i:SI 0 r0)) -1 (nil))

(insn 33 32 34 7 init/do_mounts.c:83 (clobber (reg:SI 136 [ <result> ])) -1 (nil))

(jump_insn 34 33 35 7 init/do_mounts.c:83 (set (pc)
        (label_ref 36)) -1 (nil))
;; End of basic block 7 -> ( 9)

;; Succ edge  9 [100.0%] 

(barrier 35 34 30)

;; Start of basic block ( 6) -> 8
;; Pred edge  6 [100.0%] 
(code_label 30 35 39 8 124 "" [1 uses])

(note 39 30 31 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 31 39 36 8 init/do_mounts.c:83 (set (reg/i:SI 0 r0)
        (reg:SI 136 [ <result> ])) -1 (nil))
;; End of basic block 8 -> ( 9)

;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 7 8) -> 9
;; Pred edge  7 [100.0%] 
;; Pred edge  8 [100.0%]  (fallthru)
(code_label 36 31 40 9 127 "" [1 uses])

(note 40 36 37 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 37 40 0 9 init/do_mounts.c:83 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 9 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)

