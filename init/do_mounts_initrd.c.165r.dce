
;; Function no_initrd (no_initrd)[0:1559] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


no_initrd

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r3={1d} r11={1d,2u} r12={1d} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r133={1d,1u} r135={1d,1u} r136={1d,1u} 
;;    total ref usage 27{14d,13u,0e} in 6{6 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 6, 8
0[0,2] 1[2,1] 2[3,1] 3[4,1] 11[5,1] 12[6,1] 13[7,1] 14[8,1] 25[9,1] 26[10,1] 133[11,1] 135[12,1] 136[13,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d1(0){ }d2(1){ }d3(2){ }d4(3){ }d5(11){ }d6(12){ }d7(13){ }d8(14){ }d9(25){ }d10(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10
;; rd  kill	(11)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d5(bb 0 insn -1) }u1(13){ d7(bb 0 insn -1) }u2(25){ d9(bb 0 insn -1) }u3(26){ d10(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 133 135 136
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 133 135 136
;; live  kill	
;; rd  in  	(10)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10
;; rd  gen 	(4)
0, 11, 12, 13
;; rd  kill	(5)
0, 1, 11, 12, 13
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13
;;  UD chains for artificial uses
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 25 { d9(bb 0 insn -1) }
;;   reg 26 { d10(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 8
;;      reg 135 { d12(bb 2 insn 6) }
;;      reg 136 { d13(bb 2 insn 7) }
;;   UD chains for insn luid 4 uid 13
;;      reg 133 { d11(bb 2 insn 9) }
;;   UD chains for insn luid 5 uid 19
;;      reg 0 { d0(bb 2 insn 13) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u8(0){ d0(bb 2 insn 13) }u9(11){ d5(bb 0 insn -1) }u10(13){ d7(bb 0 insn -1) }u11(14){ d8(bb 0 insn -1) }u12(25){ d9(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(13)
0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13
;;  UD chains for artificial uses
;;   reg 0 { d0(bb 2 insn 13) }
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 14 { d8(bb 0 insn -1) }
;;   reg 25 { d9(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 19 to worklist
  Adding insn 8 to worklist
Finished finding needed instructions:
  Adding insn 13 to worklist
Processing use of (reg 133 [ <result> ]) in insn 13:
  Adding insn 9 to worklist
Processing use of (reg 135) in insn 8:
  Adding insn 6 to worklist
Processing use of (reg 136) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 0 r0) in insn 19:


no_initrd

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r3={1d} r11={1d,2u} r12={1d} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r133={1d,1u} r135={1d,1u} r136={1d,1u} 
;;    total ref usage 27{14d,13u,0e} in 6{6 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 6, 8
0[0,2] 1[2,1] 2[3,1] 3[4,1] 11[5,1] 12[6,1] 13[7,1] 14[8,1] 25[9,1] 26[10,1] 133[11,1] 135[12,1] 136[13,1] 
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 133 135 136
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 133 135 136
;; live  kill	
;; rd  in  	(10)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10
;; rd  gen 	(4)
0, 11, 12, 13
;; rd  kill	(5)
0, 1, 11, 12, 13

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 3 7 2 init/do_mounts_initrd.c:21 (set (reg/f:SI 135)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 7 6 8 2 init/do_mounts_initrd.c:21 (set (reg:SI 136)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 8 7 9 2 init/do_mounts_initrd.c:21 (set (mem/c/i:SI (reg/f:SI 135) [0 mount_initrd+0 S4 A32])
        (reg:SI 136)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 136)
        (expr_list:REG_DEAD (reg/f:SI 135)
            (expr_list:REG_EQUAL (const_int 0 [0x0])
                (nil)))))

(insn 9 8 13 2 init/do_mounts_initrd.c:23 (set (reg:SI 133 [ <result> ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 13 9 19 2 init/do_mounts_initrd.c:23 (set (reg/i:SI 0 r0)
        (reg:SI 133 [ <result> ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 133 [ <result> ])
        (expr_list:REG_EQUAL (const_int 1 [0x1])
            (nil))))

(insn 19 13 0 2 init/do_mounts_initrd.c:23 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function initrd_load (initrd_load)[0:1562] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 8 (  1.6)


initrd_load

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={8d,5u} r1={5d,1u} r2={5d,1u} r3={4d} r11={1d,4u} r12={4d} r13={1d,7u} r14={4d,1u} r15={3d} r16={3d} r17={3d} r18={3d} r19={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={4d,1u} r25={1d,4u} r26={1d,3u} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r81={3d} r82={3d} r83={3d} r84={3d} r85={3d} r86={3d} r87={3d} r88={3d} r89={3d} r90={3d} r91={3d} r92={3d} r93={3d} r94={3d} r95={3d} r96={3d} r97={3d} r98={3d} r99={3d} r100={3d} r101={3d} r102={3d} r103={3d} r104={3d} r105={3d} r106={3d} r107={3d} r108={3d} r109={3d} r110={3d} r111={3d} r112={3d} r113={3d} r114={3d} r115={3d} r116={3d} r117={3d} r118={3d} r119={3d} r120={3d} r121={3d} r122={3d} r123={3d} r124={3d} r125={3d} r126={3d} r127={3d} r134={1d,1u} r135={1d,1u} 
;;    total ref usage 399{370d,29u,0e} in 14{11 regular + 3 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367
0[0,8] 1[8,5] 2[13,5] 3[18,4] 11[22,1] 12[23,4] 13[27,1] 14[28,4] 15[32,3] 16[35,3] 17[38,3] 18[41,3] 19[44,3] 20[47,3] 21[50,3] 22[53,3] 23[56,3] 24[59,4] 25[63,1] 26[64,1] 27[65,3] 28[68,3] 29[71,3] 30[74,3] 31[77,3] 32[80,3] 33[83,3] 34[86,3] 35[89,3] 36[92,3] 37[95,3] 38[98,3] 39[101,3] 40[104,3] 41[107,3] 42[110,3] 43[113,3] 44[116,3] 45[119,3] 46[122,3] 47[125,3] 48[128,3] 49[131,3] 50[134,3] 51[137,3] 52[140,3] 53[143,3] 54[146,3] 55[149,3] 56[152,3] 57[155,3] 58[158,3] 59[161,3] 60[164,3] 61[167,3] 62[170,3] 63[173,3] 64[176,3] 65[179,3] 66[182,3] 67[185,3] 68[188,3] 69[191,3] 70[194,3] 71[197,3] 72[200,3] 73[203,3] 74[206,3] 75[209,3] 76[212,3] 77[215,3] 78[218,3] 79[221,3] 80[224,3] 81[227,3] 82[230,3] 83[233,3] 84[236,3] 85[239,3] 86[242,3] 87[245,3] 88[248,3] 89[251,3] 90[254,3] 91[257,3] 92[260,3] 93[263,3] 94[266,3] 95[269,3] 96[272,3] 97[275,3] 98[278,3] 99[281,3] 100[284,3] 101[287,3] 102[290,3] 103[293,3] 104[296,3] 105[299,3] 106[302,3] 107[305,3] 108[308,3] 109[311,3] 110[314,3] 111[317,3] 112[320,3] 113[323,3] 114[326,3] 115[329,3] 116[332,3] 117[335,3] 118[338,3] 119[341,3] 120[344,3] 121[347,3] 122[350,3] 123[353,3] 124[356,3] 125[359,3] 126[362,3] 127[365,3] 134[368,1] 135[369,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d7(0){ }d12(1){ }d17(2){ }d21(3){ }d22(11){ }d26(12){ }d27(13){ }d31(14){ }d63(25){ }d64(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
7, 12, 17, 21, 22, 26, 27, 31, 63, 64
;; rd  kill	(34)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 63, 64
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(10)
7, 12, 17, 21, 22, 26, 27, 31, 63, 64

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d22(bb 0 insn -1) }u1(13){ d27(bb 0 insn -1) }u2(25){ d63(bb 0 insn -1) }u3(26){ d64(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 134 135
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 134 135
;; live  kill	
;; rd  in  	(10)
7, 12, 17, 21, 22, 26, 27, 31, 63, 64
;; rd  gen 	(3)
62, 368, 369
;; rd  kill	(6)
59, 60, 61, 62, 368, 369
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(13)
7, 12, 17, 21, 22, 26, 27, 31, 62, 63, 64, 368, 369
;;  UD chains for artificial uses
;;   reg 11 { d22(bb 0 insn -1) }
;;   reg 13 { d27(bb 0 insn -1) }
;;   reg 25 { d63(bb 0 insn -1) }
;;   reg 26 { d64(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 6
;;      reg 134 { d368(bb 2 insn 5) }
;;   UD chains for insn luid 2 uid 7
;;      reg 135 { d369(bb 2 insn 6) }
;;   UD chains for insn luid 3 uid 8
;;      reg 24 { d62(bb 2 insn 7) }

( 2 )->[3]->( 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u7(11){ d22(bb 0 insn -1) }u8(13){ d27(bb 0 insn -1) }u9(25){ d63(bb 0 insn -1) }u10(26){ d64(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	 14 [lr]
;; rd  in  	(13)
7, 12, 17, 21, 22, 26, 27, 31, 62, 63, 64, 368, 369
;; rd  gen 	(1)
5
;; rd  kill	(12)
0, 1, 2, 3, 4, 5, 6, 7, 28, 29, 30, 31
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(12)
5, 12, 17, 21, 22, 26, 27, 62, 63, 64, 368, 369
;;  UD chains for artificial uses
;;   reg 11 { d22(bb 0 insn -1) }
;;   reg 13 { d27(bb 0 insn -1) }
;;   reg 25 { d63(bb 0 insn -1) }
;;   reg 26 { d64(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 12
;;      reg 13 { d27(bb 0 insn -1) }
;;      reg 0 { d3(bb 3 insn 11) }
;;   UD chains for insn luid 5 uid 18
;;      reg 13 { d27(bb 0 insn -1) }
;;      reg 0 { d2(bb 3 insn 15) }
;;      reg 1 { d8(bb 3 insn 16) }
;;      reg 2 { d15(bb 3 insn 17) }

( 2 3 )->[4]->( 1 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u17(11){ d22(bb 0 insn -1) }u18(13){ d27(bb 0 insn -1) }u19(25){ d63(bb 0 insn -1) }u20(26){ d64(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]
;; rd  in  	(14)
5, 7, 12, 17, 21, 22, 26, 27, 31, 62, 63, 64, 368, 369
;; rd  gen 	(1)
0
;; rd  kill	(12)
0, 1, 2, 3, 4, 5, 6, 7, 28, 29, 30, 31
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(12)
0, 12, 17, 21, 22, 26, 27, 62, 63, 64, 368, 369
;;  UD chains for artificial uses
;;   reg 11 { d22(bb 0 insn -1) }
;;   reg 13 { d27(bb 0 insn -1) }
;;   reg 25 { d63(bb 0 insn -1) }
;;   reg 26 { d64(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 23
;;      reg 13 { d27(bb 0 insn -1) }
;;      reg 0 { d1(bb 4 insn 22) }
;;   UD chains for insn luid 3 uid 34
;;      reg 0 { d0(bb 4 insn 28) }

( 4 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u24(0){ d0(bb 4 insn 28) }u25(11){ d22(bb 0 insn -1) }u26(13){ d27(bb 0 insn -1) }u27(14){ }u28(25){ d63(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(12)
0, 12, 17, 21, 22, 26, 27, 62, 63, 64, 368, 369
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(12)
0, 12, 17, 21, 22, 26, 27, 62, 63, 64, 368, 369
;;  UD chains for artificial uses
;;   reg 0 { d0(bb 4 insn 28) }
;;   reg 11 { d22(bb 0 insn -1) }
;;   reg 13 { d27(bb 0 insn -1) }
;;   reg 14 { }
;;   reg 25 { d63(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 8 to worklist
  Adding insn 18 to worklist
  Adding insn 12 to worklist
  Adding insn 34 to worklist
  Adding insn 23 to worklist
Finished finding needed instructions:
  Adding insn 28 to worklist
Processing use of (reg 13 sp) in insn 23:
Processing use of (reg 0 r0) in insn 23:
  Adding insn 22 to worklist
Processing use of (reg 0 r0) in insn 34:
Processing use of (reg 13 sp) in insn 12:
Processing use of (reg 0 r0) in insn 12:
  Adding insn 11 to worklist
Processing use of (reg 13 sp) in insn 18:
Processing use of (reg 0 r0) in insn 18:
  Adding insn 15 to worklist
Processing use of (reg 1 r1) in insn 18:
  Adding insn 16 to worklist
Processing use of (reg 2 r2) in insn 18:
  Adding insn 17 to worklist
Processing use of (reg 24 cc) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 135 [ mount_initrd ]) in insn 7:
  Adding insn 6 to worklist
Processing use of (reg 134) in insn 6:
  Adding insn 5 to worklist


initrd_load

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={8d,5u} r1={5d,1u} r2={5d,1u} r3={4d} r11={1d,4u} r12={4d} r13={1d,7u} r14={4d,1u} r15={3d} r16={3d} r17={3d} r18={3d} r19={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={4d,1u} r25={1d,4u} r26={1d,3u} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r81={3d} r82={3d} r83={3d} r84={3d} r85={3d} r86={3d} r87={3d} r88={3d} r89={3d} r90={3d} r91={3d} r92={3d} r93={3d} r94={3d} r95={3d} r96={3d} r97={3d} r98={3d} r99={3d} r100={3d} r101={3d} r102={3d} r103={3d} r104={3d} r105={3d} r106={3d} r107={3d} r108={3d} r109={3d} r110={3d} r111={3d} r112={3d} r113={3d} r114={3d} r115={3d} r116={3d} r117={3d} r118={3d} r119={3d} r120={3d} r121={3d} r122={3d} r123={3d} r124={3d} r125={3d} r126={3d} r127={3d} r134={1d,1u} r135={1d,1u} 
;;    total ref usage 399{370d,29u,0e} in 14{11 regular + 3 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367
0[0,8] 1[8,5] 2[13,5] 3[18,4] 11[22,1] 12[23,4] 13[27,1] 14[28,4] 15[32,3] 16[35,3] 17[38,3] 18[41,3] 19[44,3] 20[47,3] 21[50,3] 22[53,3] 23[56,3] 24[59,4] 25[63,1] 26[64,1] 27[65,3] 28[68,3] 29[71,3] 30[74,3] 31[77,3] 32[80,3] 33[83,3] 34[86,3] 35[89,3] 36[92,3] 37[95,3] 38[98,3] 39[101,3] 40[104,3] 41[107,3] 42[110,3] 43[113,3] 44[116,3] 45[119,3] 46[122,3] 47[125,3] 48[128,3] 49[131,3] 50[134,3] 51[137,3] 52[140,3] 53[143,3] 54[146,3] 55[149,3] 56[152,3] 57[155,3] 58[158,3] 59[161,3] 60[164,3] 61[167,3] 62[170,3] 63[173,3] 64[176,3] 65[179,3] 66[182,3] 67[185,3] 68[188,3] 69[191,3] 70[194,3] 71[197,3] 72[200,3] 73[203,3] 74[206,3] 75[209,3] 76[212,3] 77[215,3] 78[218,3] 79[221,3] 80[224,3] 81[227,3] 82[230,3] 83[233,3] 84[236,3] 85[239,3] 86[242,3] 87[245,3] 88[248,3] 89[251,3] 90[254,3] 91[257,3] 92[260,3] 93[263,3] 94[266,3] 95[269,3] 96[272,3] 97[275,3] 98[278,3] 99[281,3] 100[284,3] 101[287,3] 102[290,3] 103[293,3] 104[296,3] 105[299,3] 106[302,3] 107[305,3] 108[308,3] 109[311,3] 110[314,3] 111[317,3] 112[320,3] 113[323,3] 114[326,3] 115[329,3] 116[332,3] 117[335,3] 118[338,3] 119[341,3] 120[344,3] 121[347,3] 122[350,3] 123[353,3] 124[356,3] 125[359,3] 126[362,3] 127[365,3] 134[368,1] 135[369,1] 
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 134 135
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 134 135
;; live  kill	
;; rd  in  	(10)
7, 12, 17, 21, 22, 26, 27, 31, 63, 64
;; rd  gen 	(3)
62, 368, 369
;; rd  kill	(6)
59, 60, 61, 62, 368, 369

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)

(insn 5 2 6 2 init/do_mounts_initrd.c:110 (set (reg/f:SI 134)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 6 5 7 2 init/do_mounts_initrd.c:110 (set (reg:SI 135 [ mount_initrd ])
        (mem/c/i:SI (reg/f:SI 134) [0 mount_initrd+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 134)
        (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 mount_initrd+0 S4 A32])
            (nil))))

(insn 7 6 8 2 init/do_mounts_initrd.c:110 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 135 [ mount_initrd ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 135 [ mount_initrd ])
        (nil)))

(jump_insn 8 7 9 2 init/do_mounts_initrd.c:110 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 19)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6102 [0x17d6])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(13)
7, 12, 17, 21, 22, 26, 27, 31, 62, 63, 64, 368, 369


;; Succ edge  3 [39.0%]  (fallthru)
;; Succ edge  4 [61.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u7(11){ }u8(13){ }u9(25){ }u10(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	 14 [lr]
;; rd  in  	(13)
7, 12, 17, 21, 22, 26, 27, 31, 62, 63, 64, 368, 369
;; rd  gen 	(1)
5
;; rd  kill	(12)
0, 1, 2, 3, 4, 5, 6, 7, 28, 29, 30, 31

;; Pred edge  2 [39.0%]  (fallthru)
(note 9 8 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 11 9 12 3 init/do_mounts.h:18 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x117baea0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x117baea0>)
        (nil)))

(call_insn 12 11 15 3 init/do_mounts.h:18 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sys_unlink") [flags 0x41] <function_decl 0x11767300 sys_unlink>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_UNUSED (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 15 12 16 3 init/do_mounts.h:19 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x117baea0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x117baea0>)
        (nil)))

(insn 16 15 17 3 init/do_mounts.h:19 (set (reg:SI 1 r1)
        (const_int 24960 [0x6180])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 24960 [0x6180])
        (nil)))

(insn 17 16 18 3 init/do_mounts.h:19 (set (reg:SI 2 r2)
        (const_int 256 [0x100])) 167 {*arm_movsi_insn} (nil))

(call_insn 18 17 19 3 init/do_mounts.h:19 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sys_mknod") [flags 0x41] <function_decl 0x11767180 sys_mknod>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(12)
5, 12, 17, 21, 22, 26, 27, 62, 63, 64, 368, 369


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u17(11){ }u18(13){ }u19(25){ }u20(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]
;; rd  in  	(14)
5, 7, 12, 17, 21, 22, 26, 27, 31, 62, 63, 64, 368, 369
;; rd  gen 	(1)
0
;; rd  kill	(12)
0, 1, 2, 3, 4, 5, 6, 7, 28, 29, 30, 31

;; Pred edge  2 [61.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 19 18 20 4 6 "" [1 uses])

(note 20 19 22 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 22 20 23 4 init/do_mounts_initrd.c:124 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x117c3f90>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x117c3f90>)
        (nil)))

(call_insn 23 22 28 4 init/do_mounts_initrd.c:124 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sys_unlink") [flags 0x41] <function_decl 0x11767300 sys_unlink>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_UNUSED (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 28 23 34 4 init/do_mounts_initrd.c:126 (set (reg/i:SI 0 r0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 34 28 0 4 init/do_mounts_initrd.c:126 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 4 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(12)
0, 12, 17, 21, 22, 26, 27, 62, 63, 64, 368, 369


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function do_linuxrc (do_linuxrc)[0:1560] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


do_linuxrc

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr]
;;  ref usage 	r0={8d,5u} r1={6d,1u} r2={6d,1u} r3={5d} r11={1d,2u} r12={5d} r13={1d,6u} r14={4d,1u} r15={4d} r16={4d} r17={4d} r18={4d} r19={4d} r20={4d} r21={4d} r22={4d} r23={4d} r24={4d} r25={1d,2u} r26={1d,1u} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r81={4d} r82={4d} r83={4d} r84={4d} r85={4d} r86={4d} r87={4d} r88={4d} r89={4d} r90={4d} r91={4d} r92={4d} r93={4d} r94={4d} r95={4d} r96={4d} r97={4d} r98={4d} r99={4d} r100={4d} r101={4d} r102={4d} r103={4d} r104={4d} r105={4d} r106={4d} r107={4d} r108={4d} r109={4d} r110={4d} r111={4d} r112={4d} r113={4d} r114={4d} r115={4d} r116={4d} r117={4d} r118={4d} r119={4d} r120={4d} r121={4d} r122={4d} r123={4d} r124={4d} r125={4d} r126={4d} r127={4d} r135={1d,1u} r136={1d,2u} r138={1d,1u} r139={1d,1u} 
;;    total ref usage 510{486d,24u,0e} in 13{9 regular + 4 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481
0[0,8] 1[8,6] 2[14,6] 3[20,5] 11[25,1] 12[26,5] 13[31,1] 14[32,4] 15[36,4] 16[40,4] 17[44,4] 18[48,4] 19[52,4] 20[56,4] 21[60,4] 22[64,4] 23[68,4] 24[72,4] 25[76,1] 26[77,1] 27[78,4] 28[82,4] 29[86,4] 30[90,4] 31[94,4] 32[98,4] 33[102,4] 34[106,4] 35[110,4] 36[114,4] 37[118,4] 38[122,4] 39[126,4] 40[130,4] 41[134,4] 42[138,4] 43[142,4] 44[146,4] 45[150,4] 46[154,4] 47[158,4] 48[162,4] 49[166,4] 50[170,4] 51[174,4] 52[178,4] 53[182,4] 54[186,4] 55[190,4] 56[194,4] 57[198,4] 58[202,4] 59[206,4] 60[210,4] 61[214,4] 62[218,4] 63[222,4] 64[226,4] 65[230,4] 66[234,4] 67[238,4] 68[242,4] 69[246,4] 70[250,4] 71[254,4] 72[258,4] 73[262,4] 74[266,4] 75[270,4] 76[274,4] 77[278,4] 78[282,4] 79[286,4] 80[290,4] 81[294,4] 82[298,4] 83[302,4] 84[306,4] 85[310,4] 86[314,4] 87[318,4] 88[322,4] 89[326,4] 90[330,4] 91[334,4] 92[338,4] 93[342,4] 94[346,4] 95[350,4] 96[354,4] 97[358,4] 98[362,4] 99[366,4] 100[370,4] 101[374,4] 102[378,4] 103[382,4] 104[386,4] 105[390,4] 106[394,4] 107[398,4] 108[402,4] 109[406,4] 110[410,4] 111[414,4] 112[418,4] 113[422,4] 114[426,4] 115[430,4] 116[434,4] 117[438,4] 118[442,4] 119[446,4] 120[450,4] 121[454,4] 122[458,4] 123[462,4] 124[466,4] 125[470,4] 126[474,4] 127[478,4] 135[482,1] 136[483,1] 138[484,1] 139[485,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d7(0){ }d13(1){ }d19(2){ }d24(3){ }d25(11){ }d30(12){ }d31(13){ }d35(14){ }d76(25){ }d77(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
7, 13, 19, 24, 25, 30, 31, 35, 76, 77
;; rd  kill	(38)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 76, 77
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(10)
7, 13, 19, 24, 25, 30, 31, 35, 76, 77

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d25(bb 0 insn -1) }u1(13){ d31(bb 0 insn -1) }u2(25){ d76(bb 0 insn -1) }u3(26){ d77(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 135 136 138 139
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 135 136 138 139
;; live  kill	 14 [lr]
;; rd  in  	(10)
7, 13, 19, 24, 25, 30, 31, 35, 76, 77
;; rd  gen 	(5)
1, 482, 483, 484, 485
;; rd  kill	(16)
0, 1, 2, 3, 4, 5, 6, 7, 32, 33, 34, 35, 482, 483, 484, 485
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(13)
1, 13, 19, 24, 25, 30, 31, 76, 77, 482, 483, 484, 485
;;  UD chains for artificial uses
;;   reg 11 { d25(bb 0 insn -1) }
;;   reg 13 { d31(bb 0 insn -1) }
;;   reg 25 { d76(bb 0 insn -1) }
;;   reg 26 { d77(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d7(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 7
;;      reg 136 { d483(bb 2 insn 6) }
;;   UD chains for insn luid 3 uid 8
;;      reg 13 { d31(bb 0 insn -1) }
;;      reg 0 { d6(bb 2 insn 7) }
;;   UD chains for insn luid 4 uid 10
;;      reg 136 { d483(bb 2 insn 6) }
;;   UD chains for insn luid 5 uid 11
;;      reg 13 { d31(bb 0 insn -1) }
;;      reg 0 { d0(bb 2 insn 10) }
;;   UD chains for insn luid 6 uid 12
;;      reg 13 { d31(bb 0 insn -1) }
;;   UD chains for insn luid 9 uid 15
;;      reg 135 { d482(bb 2 insn 2) }
;;   UD chains for insn luid 10 uid 16
;;      reg 138 { d484(bb 2 insn 13) }
;;   UD chains for insn luid 11 uid 17
;;      reg 139 { d485(bb 2 insn 14) }
;;   UD chains for insn luid 12 uid 18
;;      reg 13 { d31(bb 0 insn -1) }
;;      reg 0 { d2(bb 2 insn 15) }
;;      reg 1 { d9(bb 2 insn 16) }
;;      reg 2 { d15(bb 2 insn 17) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u19(0){ d1(bb 2 insn 18) }u20(11){ d25(bb 0 insn -1) }u21(13){ d31(bb 0 insn -1) }u22(14){ }u23(25){ d76(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
1, 13, 19, 24, 25, 30, 31, 76, 77, 482, 483, 484, 485
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(13)
1, 13, 19, 24, 25, 30, 31, 76, 77, 482, 483, 484, 485
;;  UD chains for artificial uses
;;   reg 0 { d1(bb 2 insn 18) }
;;   reg 11 { d25(bb 0 insn -1) }
;;   reg 13 { d31(bb 0 insn -1) }
;;   reg 14 { }
;;   reg 25 { d76(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 18 to worklist
  Adding insn 12 to worklist
  Adding insn 11 to worklist
  Adding insn 8 to worklist
Finished finding needed instructions:
Processing use of (reg 13 sp) in insn 8:
Processing use of (reg 0 r0) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 136) in insn 7:
  Adding insn 6 to worklist
Processing use of (reg 13 sp) in insn 11:
Processing use of (reg 0 r0) in insn 11:
  Adding insn 10 to worklist
Processing use of (reg 136) in insn 10:
Processing use of (reg 13 sp) in insn 12:
Processing use of (reg 13 sp) in insn 18:
Processing use of (reg 0 r0) in insn 18:
  Adding insn 15 to worklist
Processing use of (reg 1 r1) in insn 18:
  Adding insn 16 to worklist
Processing use of (reg 2 r2) in insn 18:
  Adding insn 17 to worklist
Processing use of (reg 139) in insn 17:
  Adding insn 14 to worklist
Processing use of (reg 138) in insn 16:
  Adding insn 13 to worklist
Processing use of (reg 135 [ _shell ]) in insn 15:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:


do_linuxrc

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr]
;;  ref usage 	r0={8d,5u} r1={6d,1u} r2={6d,1u} r3={5d} r11={1d,2u} r12={5d} r13={1d,6u} r14={4d,1u} r15={4d} r16={4d} r17={4d} r18={4d} r19={4d} r20={4d} r21={4d} r22={4d} r23={4d} r24={4d} r25={1d,2u} r26={1d,1u} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r81={4d} r82={4d} r83={4d} r84={4d} r85={4d} r86={4d} r87={4d} r88={4d} r89={4d} r90={4d} r91={4d} r92={4d} r93={4d} r94={4d} r95={4d} r96={4d} r97={4d} r98={4d} r99={4d} r100={4d} r101={4d} r102={4d} r103={4d} r104={4d} r105={4d} r106={4d} r107={4d} r108={4d} r109={4d} r110={4d} r111={4d} r112={4d} r113={4d} r114={4d} r115={4d} r116={4d} r117={4d} r118={4d} r119={4d} r120={4d} r121={4d} r122={4d} r123={4d} r124={4d} r125={4d} r126={4d} r127={4d} r135={1d,1u} r136={1d,2u} r138={1d,1u} r139={1d,1u} 
;;    total ref usage 510{486d,24u,0e} in 13{9 regular + 4 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481
0[0,8] 1[8,6] 2[14,6] 3[20,5] 11[25,1] 12[26,5] 13[31,1] 14[32,4] 15[36,4] 16[40,4] 17[44,4] 18[48,4] 19[52,4] 20[56,4] 21[60,4] 22[64,4] 23[68,4] 24[72,4] 25[76,1] 26[77,1] 27[78,4] 28[82,4] 29[86,4] 30[90,4] 31[94,4] 32[98,4] 33[102,4] 34[106,4] 35[110,4] 36[114,4] 37[118,4] 38[122,4] 39[126,4] 40[130,4] 41[134,4] 42[138,4] 43[142,4] 44[146,4] 45[150,4] 46[154,4] 47[158,4] 48[162,4] 49[166,4] 50[170,4] 51[174,4] 52[178,4] 53[182,4] 54[186,4] 55[190,4] 56[194,4] 57[198,4] 58[202,4] 59[206,4] 60[210,4] 61[214,4] 62[218,4] 63[222,4] 64[226,4] 65[230,4] 66[234,4] 67[238,4] 68[242,4] 69[246,4] 70[250,4] 71[254,4] 72[258,4] 73[262,4] 74[266,4] 75[270,4] 76[274,4] 77[278,4] 78[282,4] 79[286,4] 80[290,4] 81[294,4] 82[298,4] 83[302,4] 84[306,4] 85[310,4] 86[314,4] 87[318,4] 88[322,4] 89[326,4] 90[330,4] 91[334,4] 92[338,4] 93[342,4] 94[346,4] 95[350,4] 96[354,4] 97[358,4] 98[362,4] 99[366,4] 100[370,4] 101[374,4] 102[378,4] 103[382,4] 104[386,4] 105[390,4] 106[394,4] 107[398,4] 108[402,4] 109[406,4] 110[410,4] 111[414,4] 112[418,4] 113[422,4] 114[426,4] 115[430,4] 116[434,4] 117[438,4] 118[442,4] 119[446,4] 120[450,4] 121[454,4] 122[458,4] 123[462,4] 124[466,4] 125[470,4] 126[474,4] 127[478,4] 135[482,1] 136[483,1] 138[484,1] 139[485,1] 
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 135 136 138 139
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 135 136 138 139
;; live  kill	 14 [lr]
;; rd  in  	(10)
7, 13, 19, 24, 25, 30, 31, 35, 76, 77
;; rd  gen 	(5)
1, 482, 483, 484, 485
;; rd  kill	(16)
0, 1, 2, 3, 4, 5, 6, 7, 32, 33, 34, 35, 482, 483, 484, 485

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 init/do_mounts_initrd.c:28 (set (reg/v/f:SI 135 [ _shell ])
        (reg:SI 0 r0 [ _shell ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ _shell ])
        (nil)))

(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 3 7 2 init/do_mounts_initrd.c:33 (set (reg/f:SI 136)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 7 6 8 2 init/do_mounts_initrd.c:33 (set (reg:SI 0 r0)
        (mem/c/i:SI (plus:SI (reg/f:SI 136)
                (const_int 4 [0x4])) [0 old_fd+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn 8 7 10 2 init/do_mounts_initrd.c:33 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sys_close") [flags 0x41] <function_decl 0x11767f00 sys_close>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_UNUSED (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 10 8 11 2 init/do_mounts_initrd.c:33 (set (reg:SI 0 r0)
        (mem/c/i:SI (plus:SI (reg/f:SI 136)
                (const_int 8 [0x8])) [0 root_fd+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 136)
        (nil)))

(call_insn 11 10 12 2 init/do_mounts_initrd.c:33 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sys_close") [flags 0x41] <function_decl 0x11767f00 sys_close>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_UNUSED (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(call_insn 12 11 13 2 init/do_mounts_initrd.c:34 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sys_setsid") [flags 0x41] <function_decl 0x1174da00 sys_setsid>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_UNUSED (reg:SI 0 r0)
        (nil))
    (nil))

(insn 13 12 14 2 init/do_mounts_initrd.c:35 (set (reg/f:SI 138)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 14 13 15 2 init/do_mounts_initrd.c:35 (set (reg/f:SI 139)
        (symbol_ref:SI ("envp_init") [flags 0xc0] <var_decl 0x1179d840 envp_init>)) 167 {*arm_movsi_insn} (nil))

(insn 15 14 16 2 init/do_mounts_initrd.c:35 (set (reg:SI 0 r0)
        (reg/v/f:SI 135 [ _shell ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 135 [ _shell ])
        (nil)))

(insn 16 15 17 2 init/do_mounts_initrd.c:35 (set (reg:SI 1 r1)
        (reg/f:SI 138)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 138)
        (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
            (nil))))

(insn 17 16 18 2 init/do_mounts_initrd.c:35 (set (reg:SI 2 r2)
        (reg/f:SI 139)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 139)
        (expr_list:REG_EQUAL (symbol_ref:SI ("envp_init") [flags 0xc0] <var_decl 0x1179d840 envp_init>)
            (nil))))

(call_insn/j 18 17 19 2 init/do_mounts_initrd.c:35 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("kernel_execve") [flags 0x41] <function_decl 0x1178e580 kernel_execve>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(13)
1, 13, 19, 24, 25, 30, 31, 76, 77, 482, 483, 484, 485


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 19 18 0)

starting the processing of deferred insns
ending the processing of deferred insns
