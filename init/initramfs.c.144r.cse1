
;; Function error (error)[0:1311] (unlikely executed)


5 basic blocks, 5 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, probably never executed.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(11){ }d-1(12){ }d-1(13){ }d-1(14){ }d-1(25){ }d-1(26){ }}
;; bb 0 artificial_uses: { }

Successors:  2 [100.0%]  (fallthru)


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, probably never executed.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  3 [21.6%]  (fallthru) 4 [78.4%] 


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 2163, probably never executed.
Predecessors:  2 [21.6%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  4 [100.0%]  (fallthru)


Basic block 4 , prev 3, next 1, loop_depth 0, count 0, freq 10000, probably never executed.
Predecessors:  3 [100.0%]  (fallthru) 2 [78.4%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  EXIT [100.0%]  (fallthru)


Basic block 1 , prev 4, loop_depth 0, count 0, freq 10000, probably never executed.
Predecessors:  4 [100.0%]  (fallthru)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(11){ }u-1(13){ }u-1(14){ }u-1(25){ }}

Successors: 


starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 8 (  1.6)


error

Dataflow summary:
def_info->table_size = 0, use_info->table_size = 0
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 24[cc]
;;  ref usage 	r0={1d,1u} r1={1d} r2={1d} r3={1d} r11={1d,4u} r12={1d} r13={1d,4u} r14={1d,1u} r24={1d,1u} r25={1d,4u} r26={1d,3u} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} 
;;    total ref usage 37{15d,22u,0e} in 7{7 regular + 0 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(11){ }d-1(12){ }d-1(13){ }d-1(14){ }d-1(25){ }d-1(26){ }}
;; bb 0 artificial_uses: { }

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 2 )->[3]->( 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 3 2 )->[4]->( 1 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 4 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(11){ }u-1(13){ }u-1(14){ }u-1(25){ }}

Finding needed instructions:
  Adding insn 9 to worklist
  Adding insn 12 to worklist
Finished finding needed instructions:
processing block 4 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
processing block 3 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 11 to worklist
processing block 2 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
  Adding insn 8 to worklist
  Adding insn 7 to worklist
  Adding insn 6 to worklist
  Adding insn 2 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 8 (  1.6)
;; Following path with 7 sets: 2 3 
deferring rescan insn with uid = 11.
deferring rescan insn with uid = 12.


try_optimize_cfg iteration 1



error

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 24[cc]
;;  ref usage 	r0={1d,1u} r1={1d} r2={1d} r3={1d} r11={1d,4u} r12={1d} r13={1d,4u} r14={1d,1u} r24={1d,1u} r25={1d,4u} r26={1d,3u} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} 
;;    total ref usage 37{15d,22u,0e} in 7{7 regular + 0 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 133 134 135
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 133 134 135
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 init/initramfs.c:14 (set (reg/v/f:SI 133 [ x ])
        (reg:SI 0 r0 [ x ])) 167 {*arm_movsi_insn} (nil))

(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 3 7 2 init/initramfs.c:15 (set (reg/f:SI 134)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 7 6 8 2 init/initramfs.c:15 (set (reg/f:SI 135 [ message ])
        (mem/f/c/i:SI (reg/f:SI 134) [0 message+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 8 7 9 2 init/initramfs.c:15 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 135 [ message ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 9 8 10 2 init/initramfs.c:15 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 18)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7837 [0x1e9d])
        (nil)))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133


;; Succ edge  3 [21.6%]  (fallthru)
;; Succ edge  4 [78.4%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 136
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  gen 	 136
;; live  kill	

;; Pred edge  2 [21.6%]  (fallthru)
(note 10 9 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 11 10 12 3 init/initramfs.c:16 (set (reg/f:SI 136)
        (reg/f:SI 134)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 12 11 18 3 init/initramfs.c:16 (set (mem/f/c/i:SI (reg/f:SI 134) [0 message+0 S4 A32])
        (reg/v/f:SI 133 [ x ])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 3 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	

;; Pred edge  3 [100.0%]  (fallthru)
;; Pred edge  2 [78.4%] 
(code_label 18 12 21 4 3 "" [1 uses])

(note 21 18 0 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 4 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
rescanning insn with uid = 11.
deleting insn with uid = 11.
rescanning insn with uid = 12.
deleting insn with uid = 12.
ending the processing of deferred insns

;; Function do_start (do_start)[0:1321] (unlikely executed)


6 basic blocks, 6 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, probably never executed.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(11){ }d-1(12){ }d-1(13){ }d-1(14){ }d-1(25){ }d-1(26){ }}
;; bb 0 artificial_uses: { }

Successors:  2 [100.0%]  (fallthru)


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, probably never executed.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  3 [0.0%]  (fallthru) 4 [100.0%] 


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 4, probably never executed.
Predecessors:  2 [0.0%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  5 [100.0%]  (fallthru)


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 9996, probably never executed.
Predecessors:  2 [100.0%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  5 [100.0%]  (fallthru)


Basic block 5 , prev 4, next 1, loop_depth 0, count 0, freq 10000, probably never executed.
Predecessors:  4 [100.0%]  (fallthru) 3 [100.0%]  (fallthru)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  EXIT [100.0%]  (fallthru)


Basic block 1 , prev 5, loop_depth 0, count 0, freq 10000, probably never executed.
Predecessors:  5 [100.0%]  (fallthru)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(11){ }u-1(13){ }u-1(14){ }u-1(25){ }}

Successors: 


starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 10 (  1.7)


do_start

Dataflow summary:
def_info->table_size = 0, use_info->table_size = 0
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 24[cc]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r3={1d} r11={1d,5u} r12={1d} r13={1d,5u} r14={1d,1u} r24={2d,1u} r25={1d,5u} r26={1d,4u} r133={1d,2u} r134={1d,2u} r135={1d,2u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} 
;;    total ref usage 93{40d,53u,0e} in 41{41 regular + 0 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(11){ }d-1(12){ }d-1(13){ }d-1(14){ }d-1(25){ }d-1(26){ }}
;; bb 0 artificial_uses: { }

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 2 )->[3]->( 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 2 )->[4]->( 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 4 3 )->[5]->( 1 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 5 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(11){ }u-1(13){ }u-1(14){ }u-1(25){ }}

Finding needed instructions:
  Adding insn 10 to worklist
  Adding insn 30 to worklist
  Adding insn 27 to worklist
  Adding insn 24 to worklist
  Adding insn 18 to worklist
  Adding insn 15 to worklist
  Adding insn 47 to worklist
  Adding insn 44 to worklist
  Adding insn 41 to worklist
  Adding insn 38 to worklist
  Adding insn 36 to worklist
  Adding insn 60 to worklist
Finished finding needed instructions:
processing block 5 lr out =  0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 54 to worklist
  Adding insn 50 to worklist
processing block 3 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 29 to worklist
  Adding insn 28 to worklist
  Adding insn 26 to worklist
  Adding insn 25 to worklist
  Adding insn 23 to worklist
  Adding insn 22 to worklist
  Adding insn 21 to worklist
  Adding insn 20 to worklist
  Adding insn 19 to worklist
  Adding insn 17 to worklist
  Adding insn 16 to worklist
  Adding insn 14 to worklist
  Adding insn 13 to worklist
  Adding insn 12 to worklist
processing block 4 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 46 to worklist
  Adding insn 45 to worklist
  Adding insn 43 to worklist
  Adding insn 42 to worklist
  Adding insn 40 to worklist
  Adding insn 39 to worklist
  Adding insn 37 to worklist
  Adding insn 35 to worklist
processing block 2 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 135
  Adding insn 9 to worklist
  Adding insn 8 to worklist
  Adding insn 7 to worklist
  Adding insn 6 to worklist
  Adding insn 5 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 10 (  1.7)
;; Following path with 19 sets: 2 4 
deferring rescan insn with uid = 7.
deferring rescan insn with uid = 8.
deferring rescan insn with uid = 35.
deferring rescan insn with uid = 36.
deferring rescan insn with uid = 37.
deferring rescan insn with uid = 38.
deferring rescan insn with uid = 39.
deferring rescan insn with uid = 41.
deferring rescan insn with uid = 42.
deferring rescan insn with uid = 44.
deferring rescan insn with uid = 45.
deferring rescan insn with uid = 47.
;; Following path with 26 sets: 2 3 
deferring rescan insn with uid = 12.
deferring rescan insn with uid = 13.
deferring rescan insn with uid = 14.
deferring rescan insn with uid = 15.
deferring rescan insn with uid = 16.
deferring rescan insn with uid = 18.
deferring rescan insn with uid = 19.
deferring rescan insn with uid = 20.
deferring rescan insn with uid = 21.
deferring rescan insn with uid = 24.
deferring rescan insn with uid = 25.
deferring rescan insn with uid = 27.
deferring rescan insn with uid = 28.
deferring rescan insn with uid = 30.
;; Following path with 3 sets: 5 


try_optimize_cfg iteration 1



do_start

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 24[cc]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r3={1d} r11={1d,5u} r12={1d} r13={1d,5u} r14={1d,1u} r24={2d,1u} r25={1d,5u} r26={1d,4u} r133={1d,2u} r134={1d,2u} r135={1d,2u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} 
;;    total ref usage 93{40d,53u,0e} in 41{41 regular + 0 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 133 135 137 138
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 133 135 137 138
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)

(insn 5 2 6 2 init/initramfs.c:200 (set (reg/f:SI 137)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 6 5 7 2 init/initramfs.c:200 (set (reg/f:SI 135 [ header_buf.335 ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 137)
                (const_int 4 [0x4])) [0 header_buf+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 7 6 8 2 init/initramfs.c:184 (set (reg/f:SI 138)
        (reg/f:SI 137)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 8 7 9 2 init/initramfs.c:184 (set (reg:SI 133 [ count.331 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 137)
                (const_int 8 [0x8])) [0 count+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 9 8 10 2 init/initramfs.c:184 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 133 [ count.331 ])
            (const_int 109 [0x6d]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 10 9 11 2 init/initramfs.c:184 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 33)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 135
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 135


;; Succ edge  3 [0.0%]  (fallthru)
;; Succ edge  4 [100.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc] 134 139 140 141 142 143 144 145 146 147 148 149 150 151
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  gen 	 134 139 140 141 142 143 144 145 146 147 148 149 150 151
;; live  kill	 24 [cc]

;; Pred edge  2 [0.0%]  (fallthru)
(note 11 10 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 12 11 13 3 init/initramfs.c:185 (set (reg/f:SI 139)
        (reg/f:SI 137)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 13 12 14 3 init/initramfs.c:185 (set (reg/f:SI 134 [ victim.332 ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 137)
                (const_int 12 [0xc])) [0 victim+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 14 13 15 3 init/initramfs.c:185 (set (reg/f:SI 140)
        (reg/f:SI 137)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 15 14 16 3 init/initramfs.c:185 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 137)
                (const_int 16 [0x10])) [0 collected+0 S4 A32])
        (reg/f:SI 134 [ victim.332 ])) 167 {*arm_movsi_insn} (nil))

(insn 16 15 17 3 init/initramfs.c:172 (set (reg/f:SI 141)
        (reg/f:SI 137)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 17 16 18 3 init/initramfs.c:172 (set (reg/f:SI 142)
        (plus:SI (reg/f:SI 134 [ victim.332 ])
            (const_int 110 [0x6e]))) 4 {*arm_addsi3} (nil))

(insn 18 17 19 3 init/initramfs.c:172 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 137)
                (const_int 12 [0xc])) [0 victim+0 S4 A32])
        (reg/f:SI 142)) 167 {*arm_movsi_insn} (nil))

(insn 19 18 20 3 init/initramfs.c:173 (set (reg/f:SI 143)
        (reg/f:SI 137)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 20 19 21 3 init/initramfs.c:173 (set (reg/f:SI 144)
        (reg/f:SI 137)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 21 20 22 3 init/initramfs.c:173 (set (reg:DI 145 [ this_header ])
        (mem/c/i:DI (plus:SI (reg/f:SI 137)
                (const_int 24 [0x18])) [0 this_header+0 S8 A64])) 163 {*arm_movdi} (nil))

(insn 22 21 23 3 init/initramfs.c:173 (set (reg:DI 146)
        (const_int 110 [0x6e])) 163 {*arm_movdi} (nil))

(insn 23 22 24 3 init/initramfs.c:173 (parallel [
            (set (reg:DI 147)
                (plus:DI (reg:DI 145 [ this_header ])
                    (reg:DI 146)))
            (clobber (reg:CC 24 cc))
        ]) 1 {*arm_adddi3} (nil))

(insn 24 23 25 3 init/initramfs.c:173 (set (mem/c/i:DI (plus:SI (reg/f:SI 137)
                (const_int 24 [0x18])) [0 this_header+0 S8 A64])
        (reg:DI 147)) 163 {*arm_movdi} (nil))

(insn 25 24 26 3 init/initramfs.c:174 (set (reg/f:SI 148)
        (reg/f:SI 137)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 26 25 27 3 init/initramfs.c:174 (set (reg:SI 149)
        (plus:SI (reg:SI 133 [ count.331 ])
            (const_int -110 [0xffffffffffffff92]))) 4 {*arm_addsi3} (nil))

(insn 27 26 28 3 init/initramfs.c:174 (set (mem/c/i:SI (plus:SI (reg/f:SI 137)
                (const_int 8 [0x8])) [0 count+0 S4 A32])
        (reg:SI 149)) 167 {*arm_movsi_insn} (nil))

(insn 28 27 29 3 init/initramfs.c:187 (set (reg/f:SI 150)
        (reg/f:SI 137)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 29 28 30 3 init/initramfs.c:187 (set (reg:SI 151)
        (const_int 2 [0x2])) 167 {*arm_movsi_insn} (nil))

(insn 30 29 33 3 init/initramfs.c:187 (set (mem/c/i:SI (plus:SI (reg/f:SI 137)
                (const_int 32 [0x20])) [0 state+0 S4 A32])
        (reg:SI 151)) 167 {*arm_movsi_insn} (nil))
;; End of basic block 3 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 152 153 154 155 156 157 158 159
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  gen 	 152 153 154 155 156 157 158 159
;; live  kill	

;; Pred edge  2 [100.0%] 
(code_label 33 30 34 4 7 "" [1 uses])

(note 34 33 35 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 35 34 36 4 init/initramfs.c:189 (set (reg/f:SI 152)
        (reg/f:SI 137)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 36 35 37 4 init/initramfs.c:189 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 137)
                (const_int 16 [0x10])) [0 collected+0 S4 A32])
        (reg/f:SI 135 [ header_buf.335 ])) 167 {*arm_movsi_insn} (nil))

(insn 37 36 38 4 init/initramfs.c:189 (set (reg/f:SI 153)
        (reg/f:SI 137)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 38 37 39 4 init/initramfs.c:189 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 137)
                (const_int 36 [0x24])) [0 collect+0 S4 A32])
        (reg/f:SI 135 [ header_buf.335 ])) 167 {*arm_movsi_insn} (nil))

(insn 39 38 40 4 init/initramfs.c:190 (set (reg/f:SI 154)
        (reg/f:SI 137)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 40 39 41 4 init/initramfs.c:190 (set (reg:SI 155)
        (const_int 110 [0x6e])) 167 {*arm_movsi_insn} (nil))

(insn 41 40 42 4 init/initramfs.c:190 (set (mem/c/i:SI (plus:SI (reg/f:SI 137)
                (const_int 40 [0x28])) [0 remains+0 S4 A32])
        (reg:SI 155)) 167 {*arm_movsi_insn} (nil))

(insn 42 41 43 4 init/initramfs.c:191 (set (reg/f:SI 156)
        (reg/f:SI 137)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 43 42 44 4 init/initramfs.c:191 (set (reg:SI 157)
        (const_int 2 [0x2])) 167 {*arm_movsi_insn} (nil))

(insn 44 43 45 4 init/initramfs.c:191 (set (mem/c/i:SI (plus:SI (reg/f:SI 137)
                (const_int 44 [0x2c])) [0 next_state+0 S4 A32])
        (reg:SI 157)) 167 {*arm_movsi_insn} (nil))

(insn 45 44 46 4 init/initramfs.c:192 (set (reg/f:SI 158)
        (reg/f:SI 137)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 46 45 47 4 init/initramfs.c:192 (set (reg:SI 159)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 47 46 48 4 init/initramfs.c:192 (set (mem/c/i:SI (plus:SI (reg/f:SI 137)
                (const_int 32 [0x20])) [0 state+0 S4 A32])
        (reg:SI 159)) 167 {*arm_movsi_insn} (nil))
;; End of basic block 4 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 136
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 136
;; live  kill	

;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 48 47 49 5 8 "" [0 uses])

(note 49 48 50 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 50 49 54 5 init/initramfs.c:202 (set (reg:SI 136 [ <result> ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 54 50 60 5 init/initramfs.c:202 (set (reg/i:SI 0 r0)
        (reg:SI 136 [ <result> ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 60 54 0 5 init/initramfs.c:202 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 5 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
rescanning insn with uid = 7.
deleting insn with uid = 7.
rescanning insn with uid = 8.
deleting insn with uid = 8.
rescanning insn with uid = 12.
deleting insn with uid = 12.
rescanning insn with uid = 13.
deleting insn with uid = 13.
rescanning insn with uid = 14.
deleting insn with uid = 14.
rescanning insn with uid = 15.
deleting insn with uid = 15.
rescanning insn with uid = 16.
deleting insn with uid = 16.
rescanning insn with uid = 18.
deleting insn with uid = 18.
rescanning insn with uid = 19.
deleting insn with uid = 19.
rescanning insn with uid = 20.
deleting insn with uid = 20.
rescanning insn with uid = 21.
deleting insn with uid = 21.
rescanning insn with uid = 24.
deleting insn with uid = 24.
rescanning insn with uid = 25.
deleting insn with uid = 25.
rescanning insn with uid = 27.
deleting insn with uid = 27.
rescanning insn with uid = 28.
deleting insn with uid = 28.
rescanning insn with uid = 30.
deleting insn with uid = 30.
rescanning insn with uid = 35.
deleting insn with uid = 35.
rescanning insn with uid = 36.
deleting insn with uid = 36.
rescanning insn with uid = 37.
deleting insn with uid = 37.
rescanning insn with uid = 38.
deleting insn with uid = 38.
rescanning insn with uid = 39.
deleting insn with uid = 39.
rescanning insn with uid = 41.
deleting insn with uid = 41.
rescanning insn with uid = 42.
deleting insn with uid = 42.
rescanning insn with uid = 44.
deleting insn with uid = 44.
rescanning insn with uid = 45.
deleting insn with uid = 45.
rescanning insn with uid = 47.
deleting insn with uid = 47.
ending the processing of deferred insns

;; Function do_skip (do_skip)[0:1324] (unlikely executed)


9 basic blocks, 11 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, probably never executed.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(11){ }d-1(12){ }d-1(13){ }d-1(14){ }d-1(25){ }d-1(26){ }}
;; bb 0 artificial_uses: { }

Successors:  2 [100.0%]  (fallthru)


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, probably never executed.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  6 [50.0%]  3 [50.0%]  (fallthru)


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 5000, probably never executed.
Predecessors:  2 [50.0%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  7 [71.0%]  4 [29.0%]  (fallthru)


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 1450, probably never executed.
Predecessors:  3 [29.0%]  (fallthru)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  6 [50.0%]  5 [50.0%]  (fallthru)


Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 725, probably never executed.
Predecessors:  4 [50.0%]  (fallthru)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  7 [100.0%]  (fallthru)


Basic block 6 , prev 5, next 7, loop_depth 0, count 0, freq 4000, probably never executed.
Predecessors:  4 [50.0%]  2 [50.0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  8 [100.0%]  (fallthru)

Invalid sum of incoming frequencies 5725, should be 4000

Basic block 7 , prev 6, next 8, loop_depth 0, count 0, freq 6000, probably never executed.
Predecessors:  3 [71.0%]  5 [100.0%]  (fallthru)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  8 [100.0%]  (fallthru)

Invalid sum of incoming frequencies 4275, should be 6000

Basic block 8 , prev 7, next 1, loop_depth 0, count 0, freq 10000, probably never executed.
Predecessors:  6 [100.0%]  (fallthru) 7 [100.0%]  (fallthru)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  EXIT [100.0%]  (fallthru)


Basic block 1 , prev 8, loop_depth 0, count 0, freq 10000, probably never executed.
Predecessors:  8 [100.0%]  (fallthru)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(11){ }u-1(13){ }u-1(14){ }u-1(25){ }}

Successors: 


starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 9 n_edges 11 count 16 (  1.8)


do_skip

Dataflow summary:
def_info->table_size = 0, use_info->table_size = 0
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 24[cc]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r3={1d} r11={1d,8u} r12={1d} r13={1d,8u} r14={1d,1u} r24={6d,3u} r25={1d,8u} r26={1d,7u} r133={1d,3u} r134={2d,1u} r136={1d,5u} r137={1d,3u} r138={1d,3u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,2u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r164={1d,3u} r165={1d,2u} 
;;    total ref usage 131{49d,82u,0e} in 48{48 regular + 0 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(11){ }d-1(12){ }d-1(13){ }d-1(14){ }d-1(25){ }d-1(26){ }}
;; bb 0 artificial_uses: { }

( 0 )->[2]->( 6 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 2 )->[3]->( 7 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 3 )->[4]->( 6 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 4 )->[5]->( 7 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 4 2 )->[6]->( 8 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 3 5 )->[7]->( 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 6 7 )->[8]->( 1 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 8 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(11){ }u-1(13){ }u-1(14){ }u-1(25){ }}

Finding needed instructions:
  Adding insn 14 to worklist
  Adding insn 16 to worklist
  Adding insn 18 to worklist
  Adding insn 34 to worklist
  Adding insn 31 to worklist
  Adding insn 29 to worklist
  Adding insn 56 to worklist
  Adding insn 52 to worklist
  Adding insn 49 to worklist
  Adding insn 45 to worklist
  Adding insn 70 to worklist
Finished finding needed instructions:
processing block 8 lr out =  0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 64 to worklist
  Adding insn 60 to worklist
processing block 6 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
  Adding insn 35 to worklist
  Adding insn 33 to worklist
  Adding insn 32 to worklist
  Adding insn 30 to worklist
  Adding insn 28 to worklist
  Adding insn 27 to worklist
  Adding insn 26 to worklist
  Adding insn 25 to worklist
processing block 7 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
  Adding insn 57 to worklist
  Adding insn 55 to worklist
  Adding insn 54 to worklist
  Adding insn 53 to worklist
  Adding insn 51 to worklist
  Adding insn 50 to worklist
  Adding insn 48 to worklist
  Adding insn 47 to worklist
  Adding insn 46 to worklist
  Adding insn 44 to worklist
  Adding insn 43 to worklist
  Adding insn 42 to worklist
  Adding insn 41 to worklist
  Adding insn 40 to worklist
processing block 5 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 164
processing block 4 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137 138 164
  Adding insn 17 to worklist
processing block 3 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137 138 164
  Adding insn 15 to worklist
processing block 2 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137 138 164 165
  Adding insn 13 to worklist
  Adding insn 81 to worklist
  Adding insn 80 to worklist
  Adding insn 11 to worklist
  Adding insn 10 to worklist
  Adding insn 9 to worklist
  Adding insn 8 to worklist
  Adding insn 7 to worklist
  Adding insn 6 to worklist
  Adding insn 5 to worklist
DCE: Deleting insn 19
deleting insn with uid = 19.
df_worklist_dataflow_doublequeue:n_basic_blocks 9 n_edges 11 count 16 (  1.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 9 n_edges 11 count 16 (  1.8)
;; Following path with 16 sets: 2 3 4 5 
deferring rescan insn with uid = 7.
deferring rescan insn with uid = 8.
deferring rescan insn with uid = 11.
deferring rescan insn with uid = 80.
deferring rescan insn with uid = 81.
deferring rescan insn with uid = 15.
;; Following path with 19 sets: 7 
deferring rescan insn with uid = 42.
deferring rescan insn with uid = 43.
deferring rescan insn with uid = 46.
deferring rescan insn with uid = 49.
deferring rescan insn with uid = 50.
deferring rescan insn with uid = 52.
deferring rescan insn with uid = 53.
deferring rescan insn with uid = 54.
deferring rescan insn with uid = 55.
deferring rescan insn with uid = 56.
;; Following path with 11 sets: 6 
deferring rescan insn with uid = 26.
deferring rescan insn with uid = 27.
deferring rescan insn with uid = 30.
deferring rescan insn with uid = 31.
deferring rescan insn with uid = 32.
deferring rescan insn with uid = 34.
;; Following path with 3 sets: 8 
deferring rescan insn with uid = 64.


try_optimize_cfg iteration 1

Fallthru edge 4->7 redirected to 7
Deleting block 5.
deferring deletion of insn with uid = 74.
deleting block 5


try_optimize_cfg iteration 2



try_optimize_cfg iteration 1



do_skip

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 24[cc]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r3={1d} r11={1d,7u} r12={1d} r13={1d,7u} r14={1d,1u} r24={5d,3u} r25={1d,7u} r26={1d,6u} r133={1d,3u} r134={2d,1u} r136={1d,4u} r137={1d,3u} r138={1d,3u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,2u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r164={1d,2u} r165={1d,2u} 
;;    total ref usage 124{48d,76u,0e} in 47{47 regular + 0 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 136 137 138 140 141 142 143 164 165
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 136 137 138 140 141 142 143 164 165
;; live  kill	 24 [cc]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)

(insn 5 2 6 2 init/initramfs.c:250 (set (reg/f:SI 140)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 6 5 7 2 init/initramfs.c:250 (set (reg:DI 138 [ this_header.355 ])
        (mem/c/i:DI (plus:SI (reg/f:SI 140)
                (const_int 24 [0x18])) [0 this_header+0 S8 A64])) 163 {*arm_movdi} (nil))

(insn 7 6 8 2 init/initramfs.c:250 (set (reg/f:SI 141)
        (reg/f:SI 140)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 8 7 9 2 init/initramfs.c:250 (set (reg:SI 137 [ count.356 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 140)
                (const_int 8 [0x8])) [0 count+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 9 8 10 2 init/initramfs.c:250 (set (reg:DI 142 [ count.356 ])
        (zero_extend:DI (reg:SI 137 [ count.356 ]))) 138 {*arm_zero_extendsidi2} (nil))

(insn 10 9 11 2 init/initramfs.c:250 (parallel [
            (set (reg:DI 136 [ D.25909 ])
                (plus:DI (reg:DI 142 [ count.356 ])
                    (reg:DI 138 [ this_header.355 ])))
            (clobber (reg:CC 24 cc))
        ]) 1 {*arm_adddi3} (nil))

(insn 11 10 80 2 init/initramfs.c:250 (set (reg/f:SI 143)
        (reg/f:SI 140)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 80 11 81 2 init/initramfs.c:250 (set (reg:SI 164 [ next_header.357 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 140)
                (const_int 48 [0x30])) [0 next_header+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 81 80 13 2 init/initramfs.c:250 (set (reg:SI 165 [ next_header.357+4 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 140)
                (const_int 52 [0x34])) [0 next_header+4 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 13 81 14 2 init/initramfs.c:250 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 165 [ next_header.357+4 ])
            (subreg:SI (reg:DI 136 [ D.25909 ]) 4))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 14 13 72 2 init/initramfs.c:250 (set (pc)
        (if_then_else (gt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 79)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 2 -> ( 6 3)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137 138 164 165
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137 138 164 165


;; Succ edge  6 [50.0%] 
;; Succ edge  3 [50.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137 138 164 165
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 165
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137 138 164 165
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  2 [50.0%]  (fallthru)
(note 72 14 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 15 72 16 3 init/initramfs.c:250 (set (reg:CC 24 cc)
        (reg:CC 24 cc)) 226 {*deleted_compare} (nil))

(jump_insn 16 15 73 3 init/initramfs.c:250 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 38)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))
;; End of basic block 3 -> ( 7 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137 138 164
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137 138 164


;; Succ edge  7 [71.0%] 
;; Succ edge  4 [29.0%]  (fallthru)

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137 138 164
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 164
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137 138 164
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  3 [29.0%]  (fallthru)
(note 73 16 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 17 73 18 4 init/initramfs.c:250 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 164 [ next_header.357 ])
            (subreg:SI (reg:DI 136 [ D.25909 ]) 0))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 18 17 79 4 init/initramfs.c:250 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 79)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 4 -> ( 6 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137 138 164
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137 138 164


;; Succ edge  6 [50.0%] 
;; Succ edge  7 [50.0%]  (fallthru)

;; Start of basic block ( 4 2) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137
;; lr  def 	 134 144 145 146 147 148 149 150
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137
;; live  gen 	 134 144 145 146 147 148 149 150
;; live  kill	

;; Pred edge  4 [50.0%] 
;; Pred edge  2 [50.0%] 
(code_label 79 18 24 6 19 "" [2 uses])

(note 24 79 25 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 25 24 26 6 init/initramfs.c:172 (set (reg/f:SI 144)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 26 25 27 6 init/initramfs.c:172 (set (reg/f:SI 145)
        (reg/f:SI 144)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 27 26 28 6 init/initramfs.c:172 (set (reg/f:SI 146 [ victim ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 144)
                (const_int 12 [0xc])) [0 victim+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 28 27 29 6 init/initramfs.c:172 (set (reg:SI 147)
        (plus:SI (reg/f:SI 146 [ victim ])
            (reg:SI 137 [ count.356 ]))) 4 {*arm_addsi3} (nil))

(insn 29 28 30 6 init/initramfs.c:172 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 144)
                (const_int 12 [0xc])) [0 victim+0 S4 A32])
        (reg:SI 147)) 167 {*arm_movsi_insn} (nil))

(insn 30 29 31 6 init/initramfs.c:173 (set (reg/f:SI 148)
        (reg/f:SI 144)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 31 30 32 6 init/initramfs.c:173 (set (mem/c/i:DI (plus:SI (reg/f:SI 144)
                (const_int 24 [0x18])) [0 this_header+0 S8 A64])
        (reg:DI 136 [ D.25909 ])) 163 {*arm_movdi} (nil))

(insn 32 31 33 6 init/initramfs.c:174 (set (reg/f:SI 149)
        (reg/f:SI 144)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 33 32 34 6 init/initramfs.c:174 (set (reg:SI 150)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 34 33 35 6 init/initramfs.c:174 (set (mem/c/i:SI (plus:SI (reg/f:SI 144)
                (const_int 8 [0x8])) [0 count+0 S4 A32])
        (reg:SI 150)) 167 {*arm_movsi_insn} (nil))

(insn 35 34 38 6 init/initramfs.c:252 (set (reg:SI 134 [ D.25913 ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 6 -> ( 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134


;; Succ edge  8 [100.0%]  (fallthru)

;; Start of basic block ( 3 4) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 164
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 164
;; lr  def 	 24 [cc] 133 134 151 152 153 154 155 156 157 158 159 160 161 162
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 164
;; live  gen 	 133 134 151 152 153 154 155 156 157 158 159 160 161 162
;; live  kill	 24 [cc]

;; Pred edge  3 [71.0%] 
;; Pred edge  4 [50.0%]  (fallthru)
(code_label 38 35 39 7 15 "" [1 uses])

(note 39 38 40 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 40 39 41 7 init/initramfs.c:254 (set (reg:SI 133 [ D.25916 ])
        (minus:SI (reg:SI 164 [ next_header.357 ])
            (subreg:SI (reg:DI 138 [ this_header.355 ]) 0))) 28 {*arm_subsi3_insn} (nil))

(insn 41 40 42 7 init/initramfs.c:172 (set (reg/f:SI 151)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 42 41 43 7 init/initramfs.c:172 (set (reg/f:SI 152)
        (reg/f:SI 151)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 43 42 44 7 init/initramfs.c:172 (set (reg/f:SI 153 [ victim ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 151)
                (const_int 12 [0xc])) [0 victim+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 44 43 45 7 init/initramfs.c:172 (set (reg:SI 154)
        (plus:SI (reg/f:SI 153 [ victim ])
            (reg:SI 133 [ D.25916 ]))) 4 {*arm_addsi3} (nil))

(insn 45 44 46 7 init/initramfs.c:172 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 151)
                (const_int 12 [0xc])) [0 victim+0 S4 A32])
        (reg:SI 154)) 167 {*arm_movsi_insn} (nil))

(insn 46 45 47 7 init/initramfs.c:173 (set (reg/f:SI 155)
        (reg/f:SI 151)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 47 46 48 7 init/initramfs.c:173 (set (reg:DI 156 [ D.25916 ])
        (zero_extend:DI (reg:SI 133 [ D.25916 ]))) 138 {*arm_zero_extendsidi2} (nil))

(insn 48 47 49 7 init/initramfs.c:173 (parallel [
            (set (reg:DI 157)
                (plus:DI (reg:DI 156 [ D.25916 ])
                    (reg:DI 138 [ this_header.355 ])))
            (clobber (reg:CC 24 cc))
        ]) 1 {*arm_adddi3} (nil))

(insn 49 48 50 7 init/initramfs.c:173 (set (mem/c/i:DI (plus:SI (reg/f:SI 151)
                (const_int 24 [0x18])) [0 this_header+0 S8 A64])
        (reg:DI 157)) 163 {*arm_movdi} (nil))

(insn 50 49 51 7 init/initramfs.c:174 (set (reg/f:SI 158)
        (reg/f:SI 151)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 51 50 52 7 init/initramfs.c:174 (set (reg:SI 159)
        (minus:SI (reg:SI 137 [ count.356 ])
            (reg:SI 133 [ D.25916 ]))) 28 {*arm_subsi3_insn} (nil))

(insn 52 51 53 7 init/initramfs.c:174 (set (mem/c/i:SI (plus:SI (reg/f:SI 151)
                (const_int 8 [0x8])) [0 count+0 S4 A32])
        (reg:SI 159)) 167 {*arm_movsi_insn} (nil))

(insn 53 52 54 7 init/initramfs.c:255 (set (reg/f:SI 160)
        (reg/f:SI 151)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 54 53 55 7 init/initramfs.c:255 (set (reg/f:SI 161)
        (reg/f:SI 151)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 55 54 56 7 init/initramfs.c:255 (set (reg:SI 162 [ next_state ])
        (mem/c/i:SI (plus:SI (reg/f:SI 151)
                (const_int 44 [0x2c])) [0 next_state+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 56 55 57 7 init/initramfs.c:255 (set (mem/c/i:SI (plus:SI (reg/f:SI 151)
                (const_int 32 [0x20])) [0 state+0 S4 A32])
        (reg:SI 162 [ next_state ])) 167 {*arm_movsi_insn} (nil))

(insn 57 56 58 7 init/initramfs.c:256 (set (reg:SI 134 [ D.25913 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 7 -> ( 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134


;; Succ edge  8 [100.0%]  (fallthru)

;; Start of basic block ( 6 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 0 [r0] 139
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	 0 [r0] 139
;; live  kill	

;; Pred edge  6 [100.0%]  (fallthru)
;; Pred edge  7 [100.0%]  (fallthru)
(code_label 58 57 59 8 17 "" [0 uses])

(note 59 58 60 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 60 59 64 8 init/initramfs.c:258 (set (reg:SI 139 [ <result> ])
        (reg:SI 134 [ D.25913 ])) 167 {*arm_movsi_insn} (nil))

(insn 64 60 70 8 init/initramfs.c:258 (set (reg/i:SI 0 r0)
        (reg:SI 134 [ D.25913 ])) 167 {*arm_movsi_insn} (nil))

(insn 70 64 0 8 init/initramfs.c:258 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 8 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
deleting insn with uid = 74.
rescanning insn with uid = 7.
deleting insn with uid = 7.
rescanning insn with uid = 8.
deleting insn with uid = 8.
rescanning insn with uid = 11.
deleting insn with uid = 11.
rescanning insn with uid = 15.
deleting insn with uid = 15.
rescanning insn with uid = 26.
deleting insn with uid = 26.
rescanning insn with uid = 27.
deleting insn with uid = 27.
rescanning insn with uid = 30.
deleting insn with uid = 30.
rescanning insn with uid = 31.
deleting insn with uid = 31.
rescanning insn with uid = 32.
deleting insn with uid = 32.
rescanning insn with uid = 34.
deleting insn with uid = 34.
rescanning insn with uid = 42.
deleting insn with uid = 42.
rescanning insn with uid = 43.
deleting insn with uid = 43.
rescanning insn with uid = 46.
deleting insn with uid = 46.
rescanning insn with uid = 49.
deleting insn with uid = 49.
rescanning insn with uid = 50.
deleting insn with uid = 50.
rescanning insn with uid = 52.
deleting insn with uid = 52.
rescanning insn with uid = 53.
deleting insn with uid = 53.
rescanning insn with uid = 54.
deleting insn with uid = 54.
rescanning insn with uid = 55.
deleting insn with uid = 55.
rescanning insn with uid = 56.
deleting insn with uid = 56.
rescanning insn with uid = 64.
deleting insn with uid = 64.
rescanning insn with uid = 80.
deleting insn with uid = 80.
rescanning insn with uid = 81.
deleting insn with uid = 81.
ending the processing of deferred insns

;; Function do_reset (do_reset)[0:1325] (unlikely executed)


11 basic blocks, 15 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 9996, probably never executed.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(11){ }d-1(12){ }d-1(13){ }d-1(14){ }d-1(25){ }d-1(26){ }}
;; bb 0 artificial_uses: { }

Successors:  2 [100.0%]  (fallthru)


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 9996, probably never executed.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  3 [100.0%]  (fallthru)


Basic block 3 , prev 2, next 4, loop_depth 1, count 0, freq 10000, probably never executed.
Predecessors:  2 [100.0%]  (fallthru) 6 [0.0%]  (dfs_back)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  6 [71.0%]  4 [29.0%]  (fallthru)


Basic block 4 , prev 3, next 5, loop_depth 1, count 0, freq 2900, probably never executed.
Predecessors:  3 [29.0%]  (fallthru)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  6 [71.0%]  5 [29.0%]  (fallthru)


Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 450, probably never executed.
Predecessors:  4 [29.0%]  (fallthru)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  9 [100.0%]  (fallthru)

Invalid sum of incoming frequencies 841, should be 450

Basic block 6 , prev 5, next 7, loop_depth 1, count 0, freq 9550, probably never executed.
Predecessors:  4 [71.0%]  3 [71.0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  3 [0.0%]  (dfs_back) 10 [100.0%]  (fallthru)

Invalid sum of incoming frequencies 9159, should be 9550

Basic block 7 , prev 6, next 8, loop_depth 0, count 0, freq 2, probably never executed.
Predecessors:  10 [0.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  8 [21.6%]  (fallthru) 9 [78.4%] 


Basic block 8 , prev 7, next 9, loop_depth 0, count 0, freq 1, probably never executed.
Predecessors:  7 [21.6%]  (fallthru)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  9 [100.0%]  (fallthru)


Basic block 9 , prev 8, next 10, loop_depth 0, count 0, freq 9996, probably never executed.
Predecessors:  5 [100.0%]  (fallthru) 8 [100.0%]  (fallthru) 7 [78.4%]  10 [100.0%]  (fallthru)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  EXIT [100.0%]  (fallthru)


Basic block 10 , prev 9, next 1, loop_depth 0, count 0, freq 9546, probably never executed.
Predecessors:  6 [100.0%]  (fallthru)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  7 [0.0%]  9 [100.0%]  (fallthru)


Basic block 1 , prev 10, loop_depth 0, count 0, freq 9996, probably never executed.
Predecessors:  9 [100.0%]  (fallthru)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(11){ }u-1(13){ }u-1(14){ }u-1(25){ }}

Successors: 


starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 11 n_edges 15 count 22 (    2)


do_reset

Dataflow summary:
def_info->table_size = 0, use_info->table_size = 0
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 24[cc]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r3={1d} r11={1d,10u} r12={1d} r13={1d,10u} r14={1d,1u} r24={9d,5u} r25={1d,10u} r26={1d,9u} r227={1d,2u} r228={1d,2u} r230={1d,1u} r231={1d,1u} r232={2d,4u} r233={2d,6u} r234={1d,3u} r235={1d,2u} r236={1d,1u} r237={1d,1u} r238={1d,1u} r239={1d,1u} r240={1d,1u} r241={1d,1u} r242={1d,1u} r243={1d,1u} r244={1d,1u} r245={1d,1u} r246={1d,1u} r247={1d,1u} r248={1d,1u} r249={1d,1u} r251={1d,1u} r252={1d,1u} r253={1d,1u} r254={1d,1u} r255={1d,1u} r256={1d,1u} r257={1d,2u} r258={1d,1u} r259={2d,2u} r260={1d,1u} r261={1d,1u} 
;;    total ref usage 151{56d,95u,0e} in 55{55 regular + 0 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(11){ }d-1(12){ }d-1(13){ }d-1(14){ }d-1(25){ }d-1(26){ }}
;; bb 0 artificial_uses: { }

( 0 )->[2]->( 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 2 6 )->[3]->( 6 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 3 )->[4]->( 6 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 4 )->[5]->( 9 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 4 3 )->[6]->( 3 10 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 10 )->[7]->( 8 9 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 7 )->[8]->( 9 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 5 8 7 10 )->[9]->( 1 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 6 )->[10]->( 7 9 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 9 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(11){ }u-1(13){ }u-1(14){ }u-1(25){ }}

Finding needed instructions:
  Adding insn 109 to worklist
  Adding insn 111 to worklist
  Adding insn 120 to worklist
  Adding insn 117 to worklist
  Adding insn 115 to worklist
  Adding insn 131 to worklist
  Adding insn 139 to worklist
  Adding insn 143 to worklist
  Adding insn 180 to worklist
  Adding insn 169 to worklist
  Adding insn 162 to worklist
  Adding insn 159 to worklist
  Adding insn 157 to worklist
Finished finding needed instructions:
processing block 9 lr out =  0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 174 to worklist
  Adding insn 146 to worklist
processing block 8 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 142 to worklist
  Adding insn 141 to worklist
processing block 7 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 138 to worklist
  Adding insn 137 to worklist
  Adding insn 136 to worklist
processing block 10 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 168 to worklist
  Adding insn 167 to worklist
  Adding insn 166 to worklist
  Adding insn 165 to worklist
  Adding insn 164 to worklist
  Adding insn 161 to worklist
  Adding insn 160 to worklist
  Adding insn 158 to worklist
  Adding insn 156 to worklist
  Adding insn 155 to worklist
  Adding insn 154 to worklist
  Adding insn 153 to worklist
  Adding insn 152 to worklist
  Adding insn 151 to worklist
processing block 6 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 232 233 234 235 260 261
  Adding insn 130 to worklist
  Adding insn 128 to worklist
  Adding insn 127 to worklist
  Adding insn 126 to worklist
  Adding insn 125 to worklist
processing block 5 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 119 to worklist
  Adding insn 118 to worklist
  Adding insn 116 to worklist
  Adding insn 114 to worklist
  Adding insn 113 to worklist
processing block 4 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 232 233 234 235 260 261
  Adding insn 110 to worklist
processing block 3 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 232 233 234 235 260 261
  Adding insn 108 to worklist
processing block 2 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 232 233 234 235 260 261
  Adding insn 106 to worklist
  Adding insn 186 to worklist
  Adding insn 185 to worklist
  Adding insn 104 to worklist
  Adding insn 103 to worklist
  Adding insn 102 to worklist
  Adding insn 101 to worklist
  Adding insn 100 to worklist
  Adding insn 99 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 11 n_edges 15 count 25 (  2.3)
;; Following path with 9 sets: 2 
deferring rescan insn with uid = 101.
deferring rescan insn with uid = 102.
deferring rescan insn with uid = 103.
deferring rescan insn with uid = 104.
;; Following path with 13 sets: 3 4 5 
deferring rescan insn with uid = 116.
deferring rescan insn with uid = 117.
deferring rescan insn with uid = 118.
deferring rescan insn with uid = 120.
;; Following path with 34 sets: 6 10 7 8 
deferring rescan insn with uid = 152.
deferring rescan insn with uid = 158.
deferring rescan insn with uid = 159.
deferring rescan insn with uid = 160.
deferring rescan insn with uid = 162.
deferring rescan insn with uid = 165.
deferring rescan insn with uid = 136.
deferring rescan insn with uid = 137.
deferring rescan insn with uid = 141.
deferring rescan insn with uid = 143.
;; Following path with 3 sets: 9 


try_optimize_cfg iteration 1



do_reset

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 24[cc]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r3={1d} r11={1d,10u} r12={1d} r13={1d,10u} r14={1d,1u} r24={9d,5u} r25={1d,10u} r26={1d,9u} r227={1d,2u} r228={1d,2u} r230={1d,1u} r231={1d,1u} r232={2d,4u} r233={2d,6u} r234={1d,3u} r235={1d,2u} r236={1d,1u} r237={1d,1u} r238={1d,1u} r239={1d,1u} r240={1d,1u} r241={1d,1u} r242={1d,1u} r243={1d,1u} r244={1d,1u} r245={1d,1u} r246={1d,1u} r247={1d,1u} r248={1d,1u} r249={1d,1u} r251={1d,1u} r252={1d,1u} r253={1d,1u} r254={1d,1u} r255={1d,1u} r256={1d,1u} r257={1d,2u} r258={1d,1u} r259={2d,2u} r260={1d,1u} r261={1d,1u} 
;;    total ref usage 151{56d,95u,0e} in 55{55 regular + 0 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 232 233 234 235 238 239 240 260 261
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 232 233 234 235 238 239 240 260 261
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 97 0 96 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 96 97 99 2 NOTE_INSN_FUNCTION_BEG)

(insn 99 96 100 2 init/initramfs.c:261 (set (reg/f:SI 238)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 100 99 101 2 init/initramfs.c:261 (set (reg:DI 235 [ this_header_lsm.527 ])
        (mem/c/i:DI (plus:SI (reg/f:SI 238)
                (const_int 24 [0x18])) [0 this_header+0 S8 A64])) 163 {*arm_movdi} (nil))

(insn 101 100 102 2 init/initramfs.c:261 (set (reg/f:SI 239)
        (reg/f:SI 238)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 102 101 103 2 init/initramfs.c:261 (set (reg:SI 234 [ count_lsm.528 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 238)
                (const_int 8 [0x8])) [0 count+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 103 102 104 2 init/initramfs.c:261 (set (reg/f:SI 240)
        (reg/f:SI 238)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 104 103 185 2 init/initramfs.c:261 (set (reg:SI 232 [ ivtmp.535 ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 238)
                (const_int 12 [0xc])) [0 victim+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 185 104 186 2 init/initramfs.c:260 (set (reg:SI 260 [ D.26684 ])
        (reg:SI 234 [ count_lsm.528 ])) 167 {*arm_movsi_insn} (nil))

(insn 186 185 106 2 init/initramfs.c:260 (set (reg:SI 261 [ D.26684+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 106 186 129 2 init/initramfs.c:260 (set (reg:DI 233 [ ivtmp.533 ])
        (const_int 0 [0x0])) 163 {*arm_movdi} (nil))
;; End of basic block 2 -> ( 3)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 232 233 234 235 260 261
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 232 233 234 235 260 261


;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2 6) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 232 233 234 235 260 261
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 233 260
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 232 233 234 235 260 261
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  2 [100.0%]  (fallthru)
;; Pred edge  6 [0.0%]  (dfs_back)
(code_label 129 106 107 3 25 "" [1 uses])

(note 107 129 108 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 108 107 109 3 init/initramfs.c:262 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (subreg:SI (reg:DI 233 [ ivtmp.533 ]) 0)
            (reg:SI 260 [ D.26684 ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 109 108 182 3 init/initramfs.c:262 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 123)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))
;; End of basic block 3 -> ( 6 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 232 233 234 235 260 261
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 232 233 234 235 260 261


;; Succ edge  6 [71.0%] 
;; Succ edge  4 [29.0%]  (fallthru)

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 232 233 234 235 260 261
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 233 261
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 232 233 234 235 260 261
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  3 [29.0%]  (fallthru)
(note 182 109 110 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 110 182 111 4 init/initramfs.c:262 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (subreg:SI (reg:DI 233 [ ivtmp.533 ]) 4)
            (reg:SI 261 [ D.26684+4 ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 111 110 112 4 init/initramfs.c:262 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 123)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))
;; End of basic block 4 -> ( 6 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 232 233 234 235 260 261
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 232 233 234 235 260 261


;; Succ edge  6 [71.0%] 
;; Succ edge  5 [29.0%]  (fallthru)

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 232 233 234 235
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 232 233 234 235
;; lr  def 	 24 [cc] 230 241 242 243 244
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 232 233 234 235
;; live  gen 	 230 241 242 243 244
;; live  kill	 24 [cc]

;; Pred edge  4 [29.0%]  (fallthru)
(note 112 111 113 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 113 112 114 5 init/initramfs.c:260 (parallel [
            (set (reg:DI 230 [ D.26681 ])
                (plus:DI (reg:DI 233 [ ivtmp.533 ])
                    (reg:DI 235 [ this_header_lsm.527 ])))
            (clobber (reg:CC 24 cc))
        ]) 1 {*arm_adddi3} (nil))

(insn 114 113 115 5 init/initramfs.c:260 (set (reg/f:SI 241)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 115 114 116 5 init/initramfs.c:260 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 241)
                (const_int 12 [0xc])) [0 victim+0 S4 A32])
        (reg:SI 232 [ ivtmp.535 ])) 167 {*arm_movsi_insn} (nil))

(insn 116 115 117 5 init/initramfs.c:260 (set (reg/f:SI 242)
        (reg/f:SI 241)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 117 116 118 5 init/initramfs.c:260 (set (mem/c/i:DI (plus:SI (reg/f:SI 241)
                (const_int 24 [0x18])) [0 this_header+0 S8 A64])
        (reg:DI 230 [ D.26681 ])) 163 {*arm_movdi} (nil))

(insn 118 117 119 5 init/initramfs.c:260 (set (reg/f:SI 243)
        (reg/f:SI 241)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 119 118 120 5 init/initramfs.c:260 (set (reg:SI 244)
        (minus:SI (reg:SI 234 [ count_lsm.528 ])
            (subreg:SI (reg:DI 233 [ ivtmp.533 ]) 0))) 28 {*arm_subsi3_insn} (nil))

(insn 120 119 123 5 init/initramfs.c:260 (set (mem/c/i:SI (plus:SI (reg/f:SI 241)
                (const_int 8 [0x8])) [0 count+0 S4 A32])
        (reg:SI 244)) 167 {*arm_movsi_insn} (nil))
;; End of basic block 5 -> ( 9)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 232 233 234 235 260 261
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 232 233
;; lr  def 	 24 [cc] 232 233 236 245
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 232 233 234 235 260 261
;; live  gen 	 24 [cc] 232 233 236 245
;; live  kill	 24 [cc]

;; Pred edge  4 [71.0%] 
;; Pred edge  3 [71.0%] 
(code_label 123 120 124 6 23 "" [2 uses])

(note 124 123 125 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 125 124 126 6 init/initramfs.c:262 discrim 2 (set (reg:SI 236 [ D.25927 ])
        (zero_extend:SI (mem:QI (reg:SI 232 [ ivtmp.535 ]) [0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 126 125 127 6 init/initramfs.c:262 discrim 2 (set (reg:DI 245)
        (const_int 1 [0x1])) 163 {*arm_movdi} (nil))

(insn 127 126 128 6 init/initramfs.c:262 discrim 2 (parallel [
            (set (reg:DI 233 [ ivtmp.533 ])
                (plus:DI (reg:DI 233 [ ivtmp.533 ])
                    (reg:DI 245)))
            (clobber (reg:CC 24 cc))
        ]) 1 {*arm_adddi3} (nil))

(insn 128 127 130 6 init/initramfs.c:262 discrim 2 (set (reg:SI 232 [ ivtmp.535 ])
        (plus:SI (reg:SI 232 [ ivtmp.535 ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 130 128 131 6 init/initramfs.c:262 discrim 2 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 236 [ D.25927 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 131 130 163 6 init/initramfs.c:262 discrim 2 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 129)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 4 [0x4])
        (nil)))
;; End of basic block 6 -> ( 3 10)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 232 233 234 235 260 261
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 232 233 234 235 260 261


;; Succ edge  3 [0.0%]  (dfs_back)
;; Succ edge  10 [100.0%]  (fallthru)

;; Start of basic block ( 10) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 246 247
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 246 247
;; live  kill	

;; Pred edge  10 [0.0%] 
(code_label 163 131 135 7 27 "" [1 uses])

(note 135 163 136 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 136 135 137 7 init/initramfs.c:15 (set (reg/f:SI 246)
        (reg/f:SI 252)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 137 136 138 7 init/initramfs.c:15 (set (reg/f:SI 247 [ message ])
        (mem/f/c/i:SI (reg/f:SI 252) [0 message+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 138 137 139 7 init/initramfs.c:15 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 247 [ message ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 139 138 140 7 init/initramfs.c:15 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 144)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7837 [0x1e9d])
        (nil)))
;; End of basic block 7 -> ( 8 9)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  8 [21.6%]  (fallthru)
;; Succ edge  9 [78.4%] 

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 248 249
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 248 249
;; live  kill	

;; Pred edge  7 [21.6%]  (fallthru)
(note 140 139 141 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 141 140 142 8 init/initramfs.c:16 (set (reg/f:SI 248)
        (reg/f:SI 252)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 142 141 143 8 init/initramfs.c:16 (set (reg/f:SI 249)
        (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x11561d50>)) 167 {*arm_movsi_insn} (nil))

(insn 143 142 144 8 init/initramfs.c:16 (set (mem/f/c/i:SI (reg/f:SI 252) [0 message+0 S4 A32])
        (reg/f:SI 249)) 167 {*arm_movsi_insn} (nil))
;; End of basic block 8 -> ( 9)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 5 8 7 10) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 237
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 237
;; live  kill	

;; Pred edge  5 [100.0%]  (fallthru)
;; Pred edge  8 [100.0%]  (fallthru)
;; Pred edge  7 [78.4%] 
;; Pred edge  10 [100.0%]  (fallthru)
(code_label 144 143 145 9 24 "" [1 uses])

(note 145 144 146 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 146 145 174 9 init/initramfs.c:267 (set (reg:SI 237 [ <result> ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 174 146 180 9 init/initramfs.c:267 (set (reg/i:SI 0 r0)
        (reg:SI 237 [ <result> ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(insn 180 174 150 9 init/initramfs.c:267 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 9 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

;; Start of basic block ( 6) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 232 233 234 235
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 232 233 234 235
;; lr  def 	 24 [cc] 227 228 231 251 252 253 254 255 256 257 258 259
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 232 233 234 235
;; live  gen 	 24 [cc] 227 228 231 251 252 253 254 255 256 257 258 259
;; live  kill	 24 [cc]

;; Pred edge  6 [100.0%]  (fallthru)
(note 150 180 151 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 151 150 152 10 init/initramfs.c:267 (set (reg:DI 251)
        (const_int -1 [0xffffffffffffffff])) 163 {*arm_movdi} (nil))

(insn 152 151 153 10 init/initramfs.c:267 (parallel [
            (set (reg:DI 227 [ ivtmp.554 ])
                (minus:DI (reg:DI 233 [ ivtmp.533 ])
                    (reg:DI 245)))
            (clobber (reg:CC 24 cc))
        ]) 20 {*arm_subdi3} (nil))

(insn 153 152 154 10 init/initramfs.c:260 (parallel [
            (set (reg:DI 231 [ D.26679 ])
                (plus:DI (reg:DI 227 [ ivtmp.554 ])
                    (reg:DI 235 [ this_header_lsm.527 ])))
            (clobber (reg:CC 24 cc))
        ]) 1 {*arm_adddi3} (nil))

(insn 154 153 155 10 init/initramfs.c:260 (set (reg:DI 228 [ this_header_lsm.549 ])
        (reg:DI 231 [ D.26679 ])) 163 {*arm_movdi} (nil))

(insn 155 154 156 10 init/initramfs.c:260 (set (reg/f:SI 252)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 156 155 157 10 init/initramfs.c:260 (set (reg:SI 253)
        (plus:SI (reg:SI 232 [ ivtmp.535 ])
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (nil))

(insn 157 156 158 10 init/initramfs.c:260 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 252)
                (const_int 12 [0xc])) [0 victim+0 S4 A32])
        (reg:SI 253)) 167 {*arm_movsi_insn} (nil))

(insn 158 157 159 10 init/initramfs.c:260 (set (reg/f:SI 254)
        (reg/f:SI 252)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 159 158 160 10 init/initramfs.c:260 (set (mem/c/i:DI (plus:SI (reg/f:SI 252)
                (const_int 24 [0x18])) [0 this_header+0 S8 A64])
        (reg:DI 231 [ D.26679 ])) 163 {*arm_movdi} (nil))

(insn 160 159 161 10 init/initramfs.c:260 (set (reg/f:SI 255)
        (reg/f:SI 252)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 161 160 162 10 init/initramfs.c:260 (set (reg:SI 256)
        (minus:SI (reg:SI 234 [ count_lsm.528 ])
            (subreg:SI (reg:DI 227 [ ivtmp.554 ]) 0))) 28 {*arm_subsi3_insn} (nil))

(insn 162 161 164 10 init/initramfs.c:260 (set (mem/c/i:SI (plus:SI (reg/f:SI 252)
                (const_int 8 [0x8])) [0 count+0 S4 A32])
        (reg:SI 256)) 167 {*arm_movsi_insn} (nil))

(insn 164 162 165 10 init/initramfs.c:264 discrim 1 (set (reg:DI 258)
        (const_int 3 [0x3])) 163 {*arm_movdi} (nil))

(insn 165 164 166 10 init/initramfs.c:264 discrim 1 (set (reg:DI 257)
        (and:DI (reg:DI 231 [ D.26679 ])
            (reg:DI 258))) 64 {anddi3} (nil))

(insn 166 165 167 10 init/initramfs.c:264 discrim 1 (set (reg:SI 259)
        (subreg:SI (reg:DI 257) 0)) 167 {*arm_movsi_insn} (nil))

(insn 167 166 168 10 init/initramfs.c:264 discrim 1 (set (reg:SI 259)
        (ior:SI (reg:SI 259)
            (subreg:SI (reg:DI 257) 4))) 89 {*arm_iorsi3} (nil))

(insn 168 167 169 10 init/initramfs.c:264 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 259)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 169 168 0 10 init/initramfs.c:264 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 163)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 4 [0x4])
        (nil)))
;; End of basic block 10 -> ( 7 9)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  7 [0.0%] 
;; Succ edge  9 [100.0%]  (fallthru)

starting the processing of deferred insns
rescanning insn with uid = 101.
deleting insn with uid = 101.
rescanning insn with uid = 102.
deleting insn with uid = 102.
rescanning insn with uid = 103.
deleting insn with uid = 103.
rescanning insn with uid = 104.
deleting insn with uid = 104.
rescanning insn with uid = 116.
deleting insn with uid = 116.
rescanning insn with uid = 117.
deleting insn with uid = 117.
rescanning insn with uid = 118.
deleting insn with uid = 118.
rescanning insn with uid = 120.
deleting insn with uid = 120.
rescanning insn with uid = 136.
deleting insn with uid = 136.
rescanning insn with uid = 137.
deleting insn with uid = 137.
rescanning insn with uid = 141.
deleting insn with uid = 141.
rescanning insn with uid = 143.
deleting insn with uid = 143.
rescanning insn with uid = 152.
deleting insn with uid = 152.
rescanning insn with uid = 158.
deleting insn with uid = 158.
rescanning insn with uid = 159.
deleting insn with uid = 159.
rescanning insn with uid = 160.
deleting insn with uid = 160.
rescanning insn with uid = 162.
deleting insn with uid = 162.
rescanning insn with uid = 165.
deleting insn with uid = 165.
ending the processing of deferred insns

;; Function flush_buffer (flush_buffer)[0:1332] (unlikely executed)


15 basic blocks, 20 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, probably never executed.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(11){ }d-1(12){ }d-1(13){ }d-1(14){ }d-1(25){ }d-1(26){ }}
;; bb 0 artificial_uses: { }

Successors:  2 [100.0%]  (fallthru)


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, probably never executed.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  3 [100.0%]  (fallthru) 4 [0.0%] 


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 9996, probably never executed.
Predecessors:  2 [100.0%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  14 [100.0%]  (fallthru)


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 4, probably never executed.
Predecessors:  2 [0.0%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  10 [100.0%]  (fallthru)


Basic block 5 , prev 4, next 6, loop_depth 1, count 0, freq 0, probably never executed.
Predecessors:  13 [0.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  6 [28.0%]  (fallthru) 7 [72.0%] 


Basic block 6 , prev 5, next 7, loop_depth 1, count 0, freq 0, probably never executed.
Predecessors:  5 [28.0%]  (fallthru)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  10 [100.0%]  (fallthru)


Basic block 7 , prev 6, next 8, loop_depth 1, count 0, freq 0, probably never executed.
Predecessors:  5 [72.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  8 [100.0%]  (fallthru) 9 [0.0%] 


Basic block 8 , prev 7, next 9, loop_depth 1, count 0, freq 0, probably never executed.
Predecessors:  7 [100.0%]  (fallthru)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  10 [100.0%]  (fallthru)


Basic block 9 , prev 8, next 10, loop_depth 1, count 0, freq 0, probably never executed.
Predecessors:  7 [0.0%] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  10 [100.0%]  (fallthru)


Basic block 10 , prev 9, next 11, loop_depth 1, count 0, freq 4, probably never executed.
Predecessors:  4 [100.0%]  (fallthru) 6 [100.0%]  (fallthru) 8 [100.0%]  (fallthru) 9 [100.0%]  (fallthru)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  11 [100.0%]  (fallthru)


Basic block 11 , prev 10, next 12, loop_depth 2, count 0, freq 29, probably never executed.
Predecessors:  10 [100.0%]  (fallthru) 11 [86.0%]  (dfs_back)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  11 [86.0%]  (dfs_back) 12 [14.0%]  (fallthru)


Basic block 12 , prev 11, next 13, loop_depth 1, count 0, freq 4, probably never executed.
Predecessors:  11 [14.0%]  (fallthru)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  13 [95.5%]  (fallthru) 14 [4.5%] 


Basic block 13 , prev 12, next 14, loop_depth 1, count 0, freq 4, probably never executed.
Predecessors:  12 [95.5%]  (fallthru)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  5 [0.0%]  14 [100.0%]  (fallthru)


Basic block 14 , prev 13, next 1, loop_depth 0, count 0, freq 10000, probably never executed.
Predecessors:  3 [100.0%]  (fallthru) 13 [100.0%]  (fallthru) 12 [4.5%] 
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  EXIT [100.0%]  (fallthru)


Basic block 1 , prev 14, loop_depth 0, count 0, freq 10000, probably never executed.
Predecessors:  14 [100.0%]  (fallthru)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(11){ }u-1(13){ }u-1(14){ }u-1(25){ }}

Successors: 


starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 15 n_edges 20 count 31 (  2.1)


flush_buffer

Dataflow summary:
def_info->table_size = 0, use_info->table_size = 0
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={3d,4u} r1={2d,1u} r2={2d} r3={2d} r11={1d,14u} r12={2d} r13={1d,15u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={7d,6u} r25={1d,14u} r26={1d,13u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,3u} r134={1d,1u} r135={1d,4u} r136={1d,2u} r137={2d,1u} r138={3d,2u} r139={1d,1u} r140={1d,1u} r141={3d,6u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} 
;;    total ref usage 281{170d,111u,0e} in 56{55 regular + 1 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(11){ }d-1(12){ }d-1(13){ }d-1(14){ }d-1(25){ }d-1(26){ }}
;; bb 0 artificial_uses: { }

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 2 )->[3]->( 14 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 2 )->[4]->( 10 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 13 )->[5]->( 6 7 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 5 )->[6]->( 10 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 5 )->[7]->( 8 9 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 7 )->[8]->( 10 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 7 )->[9]->( 10 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 4 6 8 9 )->[10]->( 11 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 10 11 )->[11]->( 11 12 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 11 )->[12]->( 13 14 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 12 )->[13]->( 5 14 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 3 13 12 )->[14]->( 1 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 14 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(11){ }u-1(13){ }u-1(14){ }u-1(25){ }}

Finding needed instructions:
  Adding insn 11 to worklist
  Adding insn 25 to worklist
  Adding insn 30 to worklist
  Adding insn 37 to worklist
  Adding insn 42 to worklist
  Adding insn 50 to worklist
  Adding insn 56 to worklist
  Adding insn 54 to worklist
  Adding insn 70 to worklist
  Adding insn 66 to worklist
  Adding insn 76 to worklist
  Adding insn 82 to worklist
  Adding insn 95 to worklist
Finished finding needed instructions:
processing block 14 lr out =  0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 89 to worklist
  Adding insn 85 to worklist
processing block 3 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
  Adding insn 13 to worklist
processing block 6 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 141
  Adding insn 31 to worklist
  Adding insn 29 to worklist
  Adding insn 28 to worklist
  Adding insn 27 to worklist
processing block 8 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 141
  Adding insn 43 to worklist
  Adding insn 41 to worklist
  Adding insn 40 to worklist
  Adding insn 39 to worklist
processing block 9 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 141
  Adding insn 49 to worklist
  Adding insn 48 to worklist
processing block 7 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 137 138 141
  Adding insn 36 to worklist
processing block 5 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 136 137 138 141
  Adding insn 24 to worklist
  Adding insn 23 to worklist
  Adding insn 22 to worklist
processing block 13 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 137 138 141
  Adding insn 81 to worklist
  Adding insn 80 to worklist
  Adding insn 79 to worklist
processing block 12 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 137 138 141
  Adding insn 75 to worklist
  Adding insn 74 to worklist
  Adding insn 73 to worklist
  Adding insn 72 to worklist
processing block 11 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 141
  Adding insn 69 to worklist
  Adding insn 67 to worklist
  Adding insn 65 to worklist
  Adding insn 64 to worklist
  Adding insn 63 to worklist
  Adding insn 62 to worklist
  Adding insn 61 to worklist
  Adding insn 60 to worklist
  Adding insn 59 to worklist
  Adding insn 58 to worklist
processing block 10 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 141
  Adding insn 55 to worklist
  Adding insn 53 to worklist
processing block 4 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 141
  Adding insn 18 to worklist
processing block 2 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 140 141
  Adding insn 10 to worklist
  Adding insn 9 to worklist
  Adding insn 8 to worklist
  Adding insn 7 to worklist
  Adding insn 3 to worklist
  Adding insn 2 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 15 n_edges 20 count 32 (  2.1)
;; Following path with 8 sets: 2 4 
;; Following path with 8 sets: 2 3 
deferring rescan insn with uid = 3.
deferring rescan insn with uid = 7.
;; Following path with 4 sets: 10 
deferring rescan insn with uid = 55.
deferring rescan insn with uid = 56.
;; Following path with 32 sets: 11 12 13 5 7 9 
deferring rescan insn with uid = 59.
deferring rescan insn with uid = 60.
deferring rescan insn with uid = 64.
deferring rescan insn with uid = 72.
deferring rescan insn with uid = 73.
deferring rescan insn with uid = 79.
deferring rescan insn with uid = 80.
deferring rescan insn with uid = 48.
deferring rescan insn with uid = 50.
;; Following path with 34 sets: 11 12 13 5 7 8 
deferring rescan insn with uid = 40.
deferring rescan insn with uid = 42.
;; Following path with 32 sets: 11 12 13 5 6 
deferring rescan insn with uid = 28.
deferring rescan insn with uid = 29.
deferring rescan insn with uid = 30.
;; Following path with 3 sets: 14 
deferring rescan insn with uid = 89.


try_optimize_cfg iteration 1



flush_buffer

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={3d,4u} r1={2d,1u} r2={2d} r3={2d} r11={1d,14u} r12={2d} r13={1d,15u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={7d,6u} r25={1d,14u} r26={1d,13u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,3u} r134={1d,1u} r135={1d,4u} r136={1d,2u} r137={2d,1u} r138={3d,2u} r139={1d,1u} r140={1d,1u} r141={3d,6u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} 
;;    total ref usage 281{170d,111u,0e} in 56{55 regular + 1 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 137 140 141 142 143
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 137 140 141 142 143
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 5 3 2 init/initramfs.c:388 (set (reg/v/f:SI 140 [ bufv ])
        (reg:SI 0 r0 [ bufv ])) 167 {*arm_movsi_insn} (nil))

(insn 3 2 4 2 init/initramfs.c:388 (set (reg/v:SI 137 [ origLen ])
        (reg:SI 1 r1 [ len ])) 167 {*arm_movsi_insn} (nil))

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 8 2 init/initramfs.c:391 (set (reg/v:SI 141 [ len ])
        (reg/v:SI 137 [ origLen ])) 167 {*arm_movsi_insn} (nil))

(insn 8 7 9 2 init/initramfs.c:392 (set (reg/f:SI 142)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 9 8 10 2 init/initramfs.c:392 (set (reg/f:SI 143 [ message ])
        (mem/f/c/i:SI (reg/f:SI 142) [0 message+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 10 9 11 2 init/initramfs.c:392 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 143 [ message ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 11 10 12 2 init/initramfs.c:392 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 16)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 4 [0x4])
        (nil)))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 140 141
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 140 141


;; Succ edge  3 [100.0%]  (fallthru)
;; Succ edge  4 [0.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 137
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 137
;; live  kill	

;; Pred edge  2 [100.0%]  (fallthru)
(note 12 11 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 13 12 16 3 init/initramfs.c:393 (set (reg/v:SI 137 [ origLen ])
        (const_int -1 [0xffffffffffffffff])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 3 -> ( 14)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137


;; Succ edge  14 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 140 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 138
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 140 141
;; live  gen 	 138
;; live  kill	

;; Pred edge  2 [0.0%] 
(code_label 16 13 17 4 36 "" [1 uses])

(note 17 16 18 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 18 17 78 4 init/initramfs.c:389 (set (reg/v/f:SI 138 [ buf ])
        (reg/v/f:SI 140 [ bufv ])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 4 -> ( 10)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 141


;; Succ edge  10 [100.0%]  (fallthru)

;; Start of basic block ( 13) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 138 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 138
;; lr  def 	 24 [cc] 133 136
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 138 141
;; live  gen 	 24 [cc] 133 136
;; live  kill	

;; Pred edge  13 [0.0%] 
(code_label 78 18 21 5 42 "" [1 uses])

(note 21 78 22 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 22 21 23 5 init/initramfs.c:395 (set (reg/v/f:SI 133 [ buf.581 ])
        (plus:SI (reg/v/f:SI 138 [ buf ])
            (reg:SI 135 [ D.26319 ]))) 4 {*arm_addsi3} (nil))

(insn 23 22 24 5 init/initramfs.c:395 (set (reg/v:SI 136 [ c ])
        (zero_extend:SI (mem:QI (reg/v/f:SI 133 [ buf.581 ]) [0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 24 23 25 5 init/initramfs.c:396 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 136 [ c ])
            (const_int 48 [0x30]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 25 24 26 5 init/initramfs.c:396 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 34)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
        (nil)))
;; End of basic block 5 -> ( 6 7)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 136 137 138 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 136 137 138 141


;; Succ edge  6 [28.0%]  (fallthru)
;; Succ edge  7 [72.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 137 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 141
;; lr  def 	 138 141 144 145
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 137 141
;; live  gen 	 138 141 144 145
;; live  kill	

;; Pred edge  5 [28.0%]  (fallthru)
(note 26 25 27 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 27 26 28 6 init/initramfs.c:398 (set (reg/v:SI 141 [ len ])
        (minus:SI (reg/v:SI 141 [ len ])
            (reg:SI 135 [ D.26319 ]))) 28 {*arm_subsi3_insn} (nil))

(insn 28 27 29 6 init/initramfs.c:399 (set (reg/f:SI 144)
        (reg/f:SI 152)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 29 28 30 6 init/initramfs.c:399 (set (reg:SI 145)
        (reg/f:SI 163 [ message ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 30 29 31 6 init/initramfs.c:399 (set (mem/c/i:SI (plus:SI (reg/f:SI 152)
                (const_int 32 [0x20])) [0 state+0 S4 A32])
        (reg/f:SI 163 [ message ])) 167 {*arm_movsi_insn} (nil))

(insn 31 30 34 6 init/initramfs.c:397 (set (reg/v/f:SI 138 [ buf ])
        (reg/v/f:SI 133 [ buf.581 ])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 6 -> ( 10)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 141


;; Succ edge  10 [100.0%]  (fallthru)

;; Start of basic block ( 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 136 137 138 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 136 137 138 141
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  5 [72.0%] 
(code_label 34 31 35 7 39 "" [1 uses])

(note 35 34 36 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 36 35 37 7 init/initramfs.c:400 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 136 [ c ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 37 36 38 7 init/initramfs.c:400 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 46)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 4 [0x4])
        (nil)))
;; End of basic block 7 -> ( 8 9)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 137 138 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 137 138 141


;; Succ edge  8 [100.0%]  (fallthru)
;; Succ edge  9 [0.0%] 

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 137 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 141
;; lr  def 	 138 141 146 147
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 137 141
;; live  gen 	 138 141 146 147
;; live  kill	

;; Pred edge  7 [100.0%]  (fallthru)
(note 38 37 39 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 39 38 40 8 init/initramfs.c:402 (set (reg/v:SI 141 [ len ])
        (minus:SI (reg/v:SI 141 [ len ])
            (reg:SI 135 [ D.26319 ]))) 28 {*arm_subsi3_insn} (nil))

(insn 40 39 41 8 init/initramfs.c:403 (set (reg/f:SI 146)
        (reg/f:SI 152)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 41 40 42 8 init/initramfs.c:403 (set (reg:SI 147)
        (const_int 7 [0x7])) 167 {*arm_movsi_insn} (nil))

(insn 42 41 43 8 init/initramfs.c:403 (set (mem/c/i:SI (plus:SI (reg/f:SI 152)
                (const_int 32 [0x20])) [0 state+0 S4 A32])
        (reg:SI 147)) 167 {*arm_movsi_insn} (nil))

(insn 43 42 46 8 init/initramfs.c:401 (set (reg/v/f:SI 138 [ buf ])
        (reg/v/f:SI 133 [ buf.581 ])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 8 -> ( 10)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 141


;; Succ edge  10 [100.0%]  (fallthru)

;; Start of basic block ( 7) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 148 149
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 141
;; live  gen 	 148 149
;; live  kill	

;; Pred edge  7 [0.0%] 
(code_label 46 43 47 9 40 "" [1 uses])

(note 47 46 48 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 48 47 49 9 init/initramfs.c:16 (set (reg/f:SI 148)
        (reg/f:SI 152)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 49 48 50 9 init/initramfs.c:16 (set (reg/f:SI 149)
        (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x11505e40>)) 167 {*arm_movsi_insn} (nil))

(insn 50 49 51 9 init/initramfs.c:16 (set (mem/f/c/i:SI (reg/f:SI 152) [0 message+0 S4 A32])
        (reg/f:SI 149)) 167 {*arm_movsi_insn} (nil))
;; End of basic block 9 -> ( 10)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 141


;; Succ edge  10 [100.0%]  (fallthru)

;; Start of basic block ( 4 6 8 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 141
;; lr  def 	 150 151
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 141
;; live  gen 	 150 151
;; live  kill	

;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  6 [100.0%]  (fallthru)
;; Pred edge  8 [100.0%]  (fallthru)
;; Pred edge  9 [100.0%]  (fallthru)
(code_label 51 50 52 10 38 "" [0 uses])

(note 52 51 53 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 53 52 54 10 init/initramfs.c:379 (set (reg/f:SI 150)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 54 53 55 10 init/initramfs.c:379 (set (mem/c/i:SI (plus:SI (reg/f:SI 150)
                (const_int 8 [0x8])) [0 count+0 S4 A32])
        (reg/v:SI 141 [ len ])) 167 {*arm_movsi_insn} (nil))

(insn 55 54 56 10 init/initramfs.c:380 (set (reg/f:SI 151)
        (reg/f:SI 150)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 56 55 68 10 init/initramfs.c:380 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 150)
                (const_int 12 [0xc])) [0 victim+0 S4 A32])
        (reg/v/f:SI 138 [ buf ])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 10 -> ( 11)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 141


;; Succ edge  11 [100.0%]  (fallthru)

;; Start of basic block ( 10 11) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 152 153 154 155 156 157 158 159
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 141
;; live  gen 	 0 [r0] 24 [cc] 134 152 153 154 155 156 157 158 159
;; live  kill	 14 [lr]

;; Pred edge  10 [100.0%]  (fallthru)
;; Pred edge  11 [86.0%]  (dfs_back)
(code_label 68 56 57 11 41 "" [1 uses])

(note 57 68 58 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 58 57 59 11 init/initramfs.c:382 discrim 1 (set (reg/f:SI 152)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 59 58 60 11 init/initramfs.c:382 discrim 1 (set (reg/f:SI 153)
        (reg/f:SI 152)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 60 59 61 11 init/initramfs.c:382 discrim 1 (set (reg:SI 154 [ state ])
        (mem/c/i:SI (plus:SI (reg/f:SI 152)
                (const_int 32 [0x20])) [0 state+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 61 60 62 11 init/initramfs.c:382 discrim 1 (set (reg:SI 155)
        (const_int 56 [0x38])) 167 {*arm_movsi_insn} (nil))

(insn 62 61 63 11 init/initramfs.c:382 discrim 1 (set (reg:SI 156)
        (ashift:SI (reg:SI 154 [ state ])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (nil))

(insn 63 62 64 11 init/initramfs.c:382 discrim 1 (set (reg:SI 157)
        (plus:SI (reg/f:SI 152)
            (reg:SI 156))) 4 {*arm_addsi3} (nil))

(insn 64 63 65 11 init/initramfs.c:382 discrim 1 (set (reg/f:SI 158)
        (plus:SI (reg:SI 157)
            (const_int 56 [0x38]))) 4 {*arm_addsi3} (nil))

(insn 65 64 66 11 init/initramfs.c:382 discrim 1 (set (reg/f:SI 159)
        (mem/s/f/j:SI (reg/f:SI 158) [0 actions S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn 66 65 67 11 init/initramfs.c:382 discrim 1 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (reg/f:SI 159) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 249 {*call_value_reg_armv5} (nil)
    (nil))

(insn 67 66 69 11 init/initramfs.c:382 discrim 1 (set (reg:SI 134 [ D.26322 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 69 67 70 11 init/initramfs.c:382 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 134 [ D.26322 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 70 69 71 11 init/initramfs.c:382 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 68)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 8600 [0x2198])
        (nil)))
;; End of basic block 11 -> ( 11 12)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 141


;; Succ edge  11 [86.0%]  (dfs_back)
;; Succ edge  12 [14.0%]  (fallthru)

;; Start of basic block ( 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 24 [cc] 135 160 161
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 141
;; live  gen 	 24 [cc] 135 160 161
;; live  kill	

;; Pred edge  11 [14.0%]  (fallthru)
(note 71 70 72 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 72 71 73 12 init/initramfs.c:384 (set (reg/f:SI 160)
        (reg/f:SI 152)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 73 72 74 12 init/initramfs.c:384 (set (reg:SI 161 [ count ])
        (mem/c/i:SI (plus:SI (reg/f:SI 152)
                (const_int 8 [0x8])) [0 count+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 74 73 75 12 init/initramfs.c:384 (set (reg:SI 135 [ D.26319 ])
        (minus:SI (reg/v:SI 141 [ len ])
            (reg:SI 161 [ count ]))) 28 {*arm_subsi3_insn} (nil))

(insn 75 74 76 12 init/initramfs.c:394 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 135 [ D.26319 ])
            (reg/v:SI 141 [ len ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 76 75 77 12 init/initramfs.c:394 discrim 1 (set (pc)
        (if_then_else (geu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 83)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 450 [0x1c2])
        (nil)))
;; End of basic block 12 -> ( 13 14)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 137 138 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 138 141


;; Succ edge  13 [95.5%]  (fallthru)
;; Succ edge  14 [4.5%] 

;; Start of basic block ( 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 137 138 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 162 163
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 138 141
;; live  gen 	 24 [cc] 162 163
;; live  kill	

;; Pred edge  12 [95.5%]  (fallthru)
(note 77 76 79 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 79 77 80 13 init/initramfs.c:394 discrim 2 (set (reg/f:SI 162)
        (reg/f:SI 152)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 80 79 81 13 init/initramfs.c:394 discrim 2 (set (reg/f:SI 163 [ message ])
        (mem/f/c/i:SI (reg/f:SI 152) [0 message+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 81 80 82 13 init/initramfs.c:394 discrim 2 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 163 [ message ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 82 81 83 13 init/initramfs.c:394 discrim 2 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 78)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 4 [0x4])
        (nil)))
;; End of basic block 13 -> ( 5 14)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 137 138 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 138 141


;; Succ edge  5 [0.0%] 
;; Succ edge  14 [100.0%]  (fallthru)

;; Start of basic block ( 3 13 12) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 0 [r0] 139
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; live  gen 	 0 [r0] 139
;; live  kill	

;; Pred edge  3 [100.0%]  (fallthru)
;; Pred edge  13 [100.0%]  (fallthru)
;; Pred edge  12 [4.5%] 
(code_label 83 82 84 14 37 "" [1 uses])

(note 84 83 85 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 85 84 89 14 init/initramfs.c:408 (set (reg:SI 139 [ <result> ])
        (reg/v:SI 137 [ origLen ])) 167 {*arm_movsi_insn} (nil))

(insn 89 85 95 14 init/initramfs.c:408 (set (reg/i:SI 0 r0)
        (reg/v:SI 137 [ origLen ])) 167 {*arm_movsi_insn} (nil))

(insn 95 89 0 14 init/initramfs.c:408 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 14 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
rescanning insn with uid = 3.
deleting insn with uid = 3.
rescanning insn with uid = 7.
deleting insn with uid = 7.
rescanning insn with uid = 28.
deleting insn with uid = 28.
rescanning insn with uid = 29.
deleting insn with uid = 29.
rescanning insn with uid = 30.
deleting insn with uid = 30.
rescanning insn with uid = 40.
deleting insn with uid = 40.
rescanning insn with uid = 42.
deleting insn with uid = 42.
rescanning insn with uid = 48.
deleting insn with uid = 48.
rescanning insn with uid = 50.
deleting insn with uid = 50.
rescanning insn with uid = 55.
deleting insn with uid = 55.
rescanning insn with uid = 56.
deleting insn with uid = 56.
rescanning insn with uid = 59.
deleting insn with uid = 59.
rescanning insn with uid = 60.
deleting insn with uid = 60.
rescanning insn with uid = 64.
deleting insn with uid = 64.
rescanning insn with uid = 72.
deleting insn with uid = 72.
rescanning insn with uid = 73.
deleting insn with uid = 73.
rescanning insn with uid = 79.
deleting insn with uid = 79.
rescanning insn with uid = 80.
deleting insn with uid = 80.
rescanning insn with uid = 89.
deleting insn with uid = 89.
ending the processing of deferred insns

;; Function retain_initrd_param (retain_initrd_param)[0:1334] (unlikely executed)


6 basic blocks, 6 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, probably never executed.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(11){ }d-1(12){ }d-1(13){ }d-1(14){ }d-1(25){ }d-1(26){ }}
;; bb 0 artificial_uses: { }

Successors:  2 [100.0%]  (fallthru)


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, probably never executed.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  3 [39.0%]  (fallthru) 4 [61.0%] 


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 3900, probably never executed.
Predecessors:  2 [39.0%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  5 [100.0%]  (fallthru)


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 6100, probably never executed.
Predecessors:  2 [61.0%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  5 [100.0%]  (fallthru)


Basic block 5 , prev 4, next 1, loop_depth 0, count 0, freq 10000, probably never executed.
Predecessors:  3 [100.0%]  (fallthru) 4 [100.0%]  (fallthru)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  EXIT [100.0%]  (fallthru)


Basic block 1 , prev 5, loop_depth 0, count 0, freq 10000, probably never executed.
Predecessors:  5 [100.0%]  (fallthru)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(11){ }u-1(13){ }u-1(14){ }u-1(25){ }}

Successors: 


starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 10 (  1.7)


retain_initrd_param

Dataflow summary:
def_info->table_size = 0, use_info->table_size = 0
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 24[cc]
;;  ref usage 	r0={2d,3u} r1={1d} r2={1d} r3={1d} r11={1d,5u} r12={1d} r13={1d,5u} r14={1d,1u} r24={1d,1u} r25={1d,5u} r26={1d,4u} r133={2d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} 
;;    total ref usage 49{19d,30u,0e} in 12{12 regular + 0 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(11){ }d-1(12){ }d-1(13){ }d-1(14){ }d-1(25){ }d-1(26){ }}
;; bb 0 artificial_uses: { }

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 2 )->[3]->( 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 2 )->[4]->( 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 3 4 )->[5]->( 1 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 5 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(11){ }u-1(13){ }u-1(14){ }u-1(25){ }}

Finding needed instructions:
  Adding insn 8 to worklist
  Adding insn 17 to worklist
  Adding insn 31 to worklist
Finished finding needed instructions:
processing block 5 lr out =  0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 25 to worklist
  Adding insn 21 to worklist
processing block 3 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
  Adding insn 10 to worklist
processing block 4 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
  Adding insn 18 to worklist
  Adding insn 16 to worklist
  Adding insn 15 to worklist
processing block 2 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 7 to worklist
  Adding insn 6 to worklist
  Adding insn 2 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 10 (  1.7)
;; Following path with 8 sets: 2 4 
deferring rescan insn with uid = 18.
;; Following path with 5 sets: 2 3 
;; Following path with 3 sets: 5 
deferring rescan insn with uid = 25.


try_optimize_cfg iteration 1



retain_initrd_param

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 24[cc]
;;  ref usage 	r0={2d,3u} r1={1d} r2={1d} r3={1d} r11={1d,5u} r12={1d} r13={1d,5u} r14={1d,1u} r24={1d,1u} r25={1d,5u} r26={1d,4u} r133={2d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} 
;;    total ref usage 49{19d,30u,0e} in 12{12 regular + 0 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 135 136
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 135 136
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 init/initramfs.c:478 (set (reg/v/f:SI 135 [ str ])
        (reg:SI 0 r0 [ str ])) 167 {*arm_movsi_insn} (nil))

(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 3 7 2 init/initramfs.c:479 (set (reg:SI 136)
        (zero_extend:SI (mem:QI (reg/v/f:SI 135 [ str ]) [0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 7 6 8 2 init/initramfs.c:479 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 136)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 8 7 9 2 init/initramfs.c:479 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 13)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
        (nil)))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  3 [39.0%]  (fallthru)
;; Succ edge  4 [61.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	

;; Pred edge  2 [39.0%]  (fallthru)
(note 9 8 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 10 9 13 3 init/initramfs.c:480 (set (reg:SI 133 [ D.26190 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 3 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133 137 138
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133 137 138
;; live  kill	

;; Pred edge  2 [61.0%] 
(code_label 13 10 14 4 50 "" [1 uses])

(note 14 13 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 15 14 16 4 init/initramfs.c:481 (set (reg/f:SI 137)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 16 15 17 4 init/initramfs.c:481 (set (reg:SI 138)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 17 16 18 4 init/initramfs.c:481 (set (mem/c/i:SI (plus:SI (reg/f:SI 137)
                (const_int 88 [0x58])) [0 do_retain_initrd+0 S4 A32])
        (reg:SI 138)) 167 {*arm_movsi_insn} (nil))

(insn 18 17 19 4 init/initramfs.c:482 (set (reg:SI 133 [ D.26190 ])
        (reg:SI 138)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
;; End of basic block 4 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 3 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 0 [r0] 134
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  gen 	 0 [r0] 134
;; live  kill	

;; Pred edge  3 [100.0%]  (fallthru)
;; Pred edge  4 [100.0%]  (fallthru)
(code_label 19 18 20 5 51 "" [0 uses])

(note 20 19 21 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 21 20 25 5 init/initramfs.c:483 (set (reg:SI 134 [ <result> ])
        (reg:SI 133 [ D.26190 ])) 167 {*arm_movsi_insn} (nil))

(insn 25 21 31 5 init/initramfs.c:483 (set (reg/i:SI 0 r0)
        (reg:SI 133 [ D.26190 ])) 167 {*arm_movsi_insn} (nil))

(insn 31 25 0 5 init/initramfs.c:483 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 5 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
rescanning insn with uid = 18.
deleting insn with uid = 18.
rescanning insn with uid = 25.
deleting insn with uid = 25.
ending the processing of deferred insns

;; Function clean_path (clean_path)[0:1327] (unlikely executed)


8 basic blocks, 10 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, probably never executed.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(11){ }d-1(12){ }d-1(13){ }d-1(14){ }d-1(25){ }d-1(26){ }}
;; bb 0 artificial_uses: { }

Successors:  2 [100.0%]  (fallthru)


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, probably never executed.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  3 [61.0%]  (fallthru) 7 [39.0%] 


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 6100, probably never executed.
Predecessors:  2 [61.0%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  4 [61.0%]  (fallthru) 7 [39.0%] 


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 3721, probably never executed.
Predecessors:  3 [61.0%]  (fallthru)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  5 [19.9%]  (fallthru) 6 [80.1%] 


Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 741, probably never executed.
Predecessors:  4 [19.9%]  (fallthru)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  7 [100.0%]  (fallthru)


Basic block 6 , prev 5, next 7, loop_depth 0, count 0, freq 2980, probably never executed.
Predecessors:  4 [80.1%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  7 [100.0%]  (fallthru)


Basic block 7 , prev 6, next 1, loop_depth 0, count 0, freq 10000, probably never executed.
Predecessors:  6 [100.0%]  (fallthru) 2 [39.0%]  3 [39.0%]  5 [100.0%]  (fallthru)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  EXIT [100.0%]  (fallthru)


Basic block 1 , prev 7, loop_depth 0, count 0, freq 10000, probably never executed.
Predecessors:  7 [100.0%]  (fallthru)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(11){ }u-1(13){ }u-1(14){ }u-1(25){ }}

Successors: 


starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 10 count 12 (  1.5)


clean_path

Dataflow summary:
def_info->table_size = 0, use_info->table_size = 0
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={7d,5u} r1={5d,2u} r2={4d} r3={4d} r11={1d,7u} r12={4d} r13={1d,10u} r14={4d,1u} r15={3d} r16={3d} r17={3d} r18={3d} r19={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={6d,3u} r25={1d,9u} r26={1d,6u} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r81={3d} r82={3d} r83={3d} r84={3d} r85={3d} r86={3d} r87={3d} r88={3d} r89={3d} r90={3d} r91={3d} r92={3d} r93={3d} r94={3d} r95={3d} r96={3d} r97={3d} r98={3d} r99={3d} r100={3d} r101={3d} r102={3d} r103={3d} r104={3d} r105={3d} r106={3d} r107={3d} r108={3d} r109={3d} r110={3d} r111={3d} r112={3d} r113={3d} r114={3d} r115={3d} r116={3d} r117={3d} r118={3d} r119={3d} r120={3d} r121={3d} r122={3d} r123={3d} r124={3d} r125={3d} r126={3d} r127={3d} r133={1d,2u} r134={1d,1u} r135={1d,3u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} 
;;    total ref usage 432{377d,55u,0e} in 22{19 regular + 3 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(11){ }d-1(12){ }d-1(13){ }d-1(14){ }d-1(25){ }d-1(26){ }}
;; bb 0 artificial_uses: { }

( 0 )->[2]->( 3 7 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 2 )->[3]->( 4 7 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 3 )->[4]->( 5 6 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 4 )->[5]->( 7 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 4 )->[6]->( 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 6 2 3 5 )->[7]->( 1 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 7 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(11){ }u-1(13){ }u-1(14){ }u-1(25){ }}

Finding needed instructions:
  Adding insn 13 to worklist
  Adding insn 10 to worklist
  Adding insn 20 to worklist
  Adding insn 24 to worklist
  Adding insn 27 to worklist
  Adding insn 33 to worklist
Finished finding needed instructions:
processing block 7 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
processing block 5 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 26 to worklist
processing block 6 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 32 to worklist
processing block 4 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
  Adding insn 23 to worklist
  Adding insn 22 to worklist
processing block 3 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 135
  Adding insn 19 to worklist
  Adding insn 18 to worklist
  Adding insn 17 to worklist
  Adding insn 16 to worklist
  Adding insn 15 to worklist
processing block 2 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 136
  Adding insn 12 to worklist
  Adding insn 11 to worklist
  Adding insn 9 to worklist
  Adding insn 8 to worklist
  Adding insn 7 to worklist
  Adding insn 3 to worklist
  Adding insn 2 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 10 count 14 (  1.8)
;; Following path with 24 sets: 2 3 4 6 
deferring rescan insn with uid = 8.
;; Following path with 24 sets: 2 3 4 5 


try_optimize_cfg iteration 1



clean_path

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={7d,5u} r1={5d,2u} r2={4d} r3={4d} r11={1d,7u} r12={4d} r13={1d,10u} r14={4d,1u} r15={3d} r16={3d} r17={3d} r18={3d} r19={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={6d,3u} r25={1d,9u} r26={1d,6u} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r81={3d} r82={3d} r83={3d} r84={3d} r85={3d} r86={3d} r87={3d} r88={3d} r89={3d} r90={3d} r91={3d} r92={3d} r93={3d} r94={3d} r95={3d} r96={3d} r97={3d} r98={3d} r99={3d} r100={3d} r101={3d} r102={3d} r103={3d} r104={3d} r105={3d} r106={3d} r107={3d} r108={3d} r109={3d} r110={3d} r111={3d} r112={3d} r113={3d} r114={3d} r115={3d} r116={3d} r117={3d} r118={3d} r119={3d} r120={3d} r121={3d} r122={3d} r123={3d} r124={3d} r125={3d} r126={3d} r127={3d} r133={1d,2u} r134={1d,1u} r135={1d,3u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} 
;;    total ref usage 432{377d,55u,0e} in 22{19 regular + 3 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 135 136 137
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 134 135 136 137
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 5 3 2 init/initramfs.c:280 (set (reg/v/f:SI 135 [ path ])
        (reg:SI 0 r0 [ path ])) 167 {*arm_movsi_insn} (nil))

(insn 3 2 4 2 init/initramfs.c:280 (set (reg/v:SI 136 [ mode ])
        (reg:SI 1 r1 [ mode ])) 167 {*arm_movsi_insn} (nil))

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 8 2 init/initramfs.c:283 (set (reg/f:SI 137)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -64 [0xffffffffffffffc0]))) 4 {*arm_addsi3} (nil))

(insn 8 7 9 2 init/initramfs.c:283 (set (reg:SI 0 r0)
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 9 8 10 2 init/initramfs.c:283 (set (reg:SI 1 r1)
        (reg/f:SI 137)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -64 [0xffffffffffffffc0]))
        (nil)))

(call_insn 10 9 11 2 init/initramfs.c:283 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sys_newlstat") [flags 0x41] <function_decl 0x11452980 sys_newlstat>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 11 10 12 2 init/initramfs.c:283 (set (reg:SI 134 [ D.25964 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 12 11 13 2 init/initramfs.c:283 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 134 [ D.25964 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 13 12 14 2 init/initramfs.c:283 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 39)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))
;; End of basic block 2 -> ( 3 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 136
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136


;; Succ edge  3 [61.0%]  (fallthru)
;; Succ edge  7 [39.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 136
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 24 [cc] 133 138 139 140
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136
;; live  gen 	 24 [cc] 133 138 139 140
;; live  kill	

;; Pred edge  2 [61.0%]  (fallthru)
(note 14 13 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 15 14 16 3 init/initramfs.c:283 discrim 1 (set (reg:SI 133 [ D.25967 ])
        (zero_extend:SI (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                    (const_int -56 [0xffffffffffffffc8])) [0 st.st_mode+0 S2 A64]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 16 15 17 3 init/initramfs.c:283 discrim 1 (set (reg:SI 138)
        (xor:SI (reg/v:SI 136 [ mode ])
            (reg:SI 133 [ D.25967 ]))) 96 {*arm_xorsi3} (nil))

(insn 17 16 18 3 init/initramfs.c:283 discrim 1 (set (reg:SI 139)
        (zero_extend:SI (subreg:HI (reg:SI 138) 0))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 18 17 19 3 init/initramfs.c:283 discrim 1 (set (reg:SI 140)
        (and:SI (reg:SI 139)
            (const_int 61440 [0xf000]))) 67 {*arm_andsi3_insn} (nil))

(insn 19 18 20 3 init/initramfs.c:283 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 140)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 20 19 21 3 init/initramfs.c:283 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 39)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))
;; End of basic block 3 -> ( 4 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 135
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135


;; Succ edge  4 [61.0%]  (fallthru)
;; Succ edge  7 [39.0%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc] 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135
;; live  gen 	 24 [cc] 141
;; live  kill	

;; Pred edge  3 [61.0%]  (fallthru)
(note 21 20 22 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 22 21 23 4 init/initramfs.c:284 (set (reg:SI 141)
        (and:SI (reg:SI 133 [ D.25967 ])
            (const_int 61440 [0xf000]))) 67 {*arm_andsi3_insn} (nil))

(insn 23 22 24 4 init/initramfs.c:284 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 141)
            (const_int 16384 [0x4000]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 24 23 25 4 init/initramfs.c:284 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 30)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 8009 [0x1f49])
        (nil)))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135


;; Succ edge  5 [19.9%]  (fallthru)
;; Succ edge  6 [80.1%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  4 [19.9%]  (fallthru)
(note 25 24 26 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 26 25 27 5 init/initramfs.c:285 (set (reg:SI 0 r0)
        (reg/v/f:SI 135 [ path ])) 167 {*arm_movsi_insn} (nil))

(call_insn 27 26 30 5 init/initramfs.c:285 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sys_rmdir") [flags 0x41] <function_decl 0x11464e00 sys_rmdir>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 5 -> ( 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  4 [80.1%] 
(code_label 30 27 31 6 57 "" [1 uses])

(note 31 30 32 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 32 31 33 6 init/initramfs.c:287 (set (reg:SI 0 r0)
        (reg/v/f:SI 135 [ path ])) 167 {*arm_movsi_insn} (nil))

(call_insn 33 32 39 6 init/initramfs.c:287 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sys_unlink") [flags 0x41] <function_decl 0x11458d00 sys_unlink>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 6 -> ( 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 6 2 3 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	

;; Pred edge  6 [100.0%]  (fallthru)
;; Pred edge  2 [39.0%] 
;; Pred edge  3 [39.0%] 
;; Pred edge  5 [100.0%]  (fallthru)
(code_label 39 33 42 7 58 "" [2 uses])

(note 42 39 0 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 7 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
rescanning insn with uid = 8.
deleting insn with uid = 8.
ending the processing of deferred insns

;; Function do_utime (do_utime)[0:1315] (unlikely executed)


3 basic blocks, 2 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, probably never executed.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(11){ }d-1(12){ }d-1(13){ }d-1(14){ }d-1(25){ }d-1(26){ }}
;; bb 0 artificial_uses: { }

Successors:  2 [100.0%]  (fallthru)


Basic block 2 , prev 0, next 1, loop_depth 0, count 0, freq 10000, probably never executed.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  EXIT [100.0%]  (fallthru)


Basic block 1 , prev 2, loop_depth 0, count 0, freq 10000, probably never executed.
Predecessors:  2 [100.0%]  (fallthru)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(11){ }u-1(13){ }u-1(14){ }u-1(25){ }}

Successors: 


starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


do_utime

Dataflow summary:
def_info->table_size = 0, use_info->table_size = 0
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr]
;;  ref usage 	r0={4d,5u} r1={3d,2u} r2={3d,1u} r3={3d,1u} r11={1d,2u} r12={2d} r13={1d,3u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,7u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,2u} r137={1d,1u} r138={1d,1u} r139={1d,1u} 
;;    total ref usage 170{139d,31u,0e} in 18{17 regular + 1 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(11){ }d-1(12){ }d-1(13){ }d-1(14){ }d-1(25){ }d-1(26){ }}
;; bb 0 artificial_uses: { }

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(11){ }u-1(13){ }u-1(14){ }u-1(25){ }}

Finding needed instructions:
  Adding insn 30 to worklist
  Adding insn 18 to worklist
  Adding insn 12 to worklist
  Adding insn 10 to worklist
  Adding insn 9 to worklist
  Adding insn 7 to worklist
Finished finding needed instructions:
processing block 2 lr out =  0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 24 to worklist
  Adding insn 20 to worklist
  Adding insn 19 to worklist
  Adding insn 17 to worklist
  Adding insn 16 to worklist
  Adding insn 15 to worklist
  Adding insn 14 to worklist
  Adding insn 13 to worklist
  Adding insn 11 to worklist
  Adding insn 8 to worklist
  Adding insn 3 to worklist
  Adding insn 2 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)
;; Following path with 20 sets: 2 
deferring rescan insn with uid = 11.
deferring rescan insn with uid = 12.
deferring rescan insn with uid = 24.
deferring rescan insn with uid = 24.


try_optimize_cfg iteration 1



do_utime

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr]
;;  ref usage 	r0={4d,5u} r1={3d,2u} r2={3d,1u} r3={3d,1u} r11={1d,2u} r12={2d} r13={1d,3u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,7u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,2u} r137={1d,1u} r138={1d,1u} r139={1d,1u} 
;;    total ref usage 170{139d,31u,0e} in 18{17 regular + 1 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134 135 136 137 138 139
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 133 134 135 136 137 138 139
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 5 3 2 init/initramfs.c:78 (set (reg/v/f:SI 135 [ filename ])
        (reg:SI 0 r0 [ filename ])) 167 {*arm_movsi_insn} (nil))

(insn 3 2 4 2 init/initramfs.c:78 (set (reg/v:SI 136 [ mtime ])
        (reg:SI 1 r1 [ mtime ])) 167 {*arm_movsi_insn} (nil))

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 8 2 init/initramfs.c:81 (set (mem/s/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -16 [0xfffffffffffffff0])) [0 <variable>.tv_sec+0 S4 A64])
        (reg/v:SI 136 [ mtime ])) 167 {*arm_movsi_insn} (nil))

(insn 8 7 9 2 init/initramfs.c:82 (set (reg:SI 137)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 9 8 10 2 init/initramfs.c:82 (set (mem/s/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -12 [0xfffffffffffffff4])) [0 <variable>.tv_nsec+0 S4 A32])
        (reg:SI 137)) 167 {*arm_movsi_insn} (nil))

(insn 10 9 11 2 init/initramfs.c:83 (set (mem/s/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0 <variable>.tv_sec+0 S4 A64])
        (reg/v:SI 136 [ mtime ])) 167 {*arm_movsi_insn} (nil))

(insn 11 10 12 2 init/initramfs.c:84 (set (reg:SI 138)
        (reg:SI 137)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 12 11 13 2 init/initramfs.c:84 (set (mem/s/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 <variable>.tv_nsec+0 S4 A32])
        (reg:SI 137)) 167 {*arm_movsi_insn} (nil))

(insn 13 12 14 2 init/initramfs.c:86 (set (reg/f:SI 139)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -16 [0xfffffffffffffff0]))) 4 {*arm_addsi3} (nil))

(insn 14 13 15 2 init/initramfs.c:86 (set (reg:SI 0 r0)
        (const_int -100 [0xffffffffffffff9c])) 167 {*arm_movsi_insn} (nil))

(insn 15 14 16 2 init/initramfs.c:86 (set (reg:SI 1 r1)
        (reg/v/f:SI 135 [ filename ])) 167 {*arm_movsi_insn} (nil))

(insn 16 15 17 2 init/initramfs.c:86 (set (reg:SI 2 r2)
        (reg/f:SI 139)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -16 [0xfffffffffffffff0]))
        (nil)))

(insn 17 16 18 2 init/initramfs.c:86 (set (reg:SI 3 r3)
        (const_int 256 [0x100])) 167 {*arm_movsi_insn} (nil))

(call_insn 18 17 19 2 init/initramfs.c:86 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("do_utimes") [flags 0x41] <function_decl 0x10c9bf80 do_utimes>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 19 18 20 2 init/initramfs.c:86 (set (reg:SI 133 [ D.25721 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 20 19 24 2 init/initramfs.c:87 (set (reg:SI 134 [ <result> ])
        (reg:SI 133 [ D.25721 ])) 167 {*arm_movsi_insn} (nil))

(insn 24 20 30 2 init/initramfs.c:87 (set (reg/i:SI 0 r0)
        (reg/i:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 30 24 0 2 init/initramfs.c:87 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
rescanning insn with uid = 11.
deleting insn with uid = 11.
rescanning insn with uid = 12.
deleting insn with uid = 12.
rescanning insn with uid = 24.
deleting insn with uid = 24.
ending the processing of deferred insns

;; Function do_symlink (do_symlink)[0:1330] (unlikely executed)


3 basic blocks, 2 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, probably never executed.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(11){ }d-1(12){ }d-1(13){ }d-1(14){ }d-1(25){ }d-1(26){ }}
;; bb 0 artificial_uses: { }

Successors:  2 [100.0%]  (fallthru)


Basic block 2 , prev 0, next 1, loop_depth 0, count 0, freq 10000, probably never executed.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  EXIT [100.0%]  (fallthru)


Basic block 1 , prev 2, loop_depth 0, count 0, freq 10000, probably never executed.
Predecessors:  2 [100.0%]  (fallthru)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(11){ }u-1(13){ }u-1(14){ }u-1(25){ }}

Successors: 


starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


do_symlink

Dataflow summary:
def_info->table_size = 0, use_info->table_size = 0
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr]
;;  ref usage 	r0={10d,6u} r1={9d,4u} r2={6d,1u} r3={5d} r11={1d,2u} r12={5d} r13={1d,6u} r14={5d,1u} r15={4d} r16={4d} r17={4d} r18={4d} r19={4d} r20={4d} r21={4d} r22={4d} r23={4d} r24={4d} r25={1d,2u} r26={1d,1u} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r81={4d} r82={4d} r83={4d} r84={4d} r85={4d} r86={4d} r87={4d} r88={4d} r89={4d} r90={4d} r91={4d} r92={4d} r93={4d} r94={4d} r95={4d} r96={4d} r97={4d} r98={4d} r99={4d} r100={4d} r101={4d} r102={4d} r103={4d} r104={4d} r105={4d} r106={4d} r107={4d} r108={4d} r109={4d} r110={4d} r111={4d} r112={4d} r113={4d} r114={4d} r115={4d} r116={4d} r117={4d} r118={4d} r119={4d} r120={4d} r121={4d} r122={4d} r123={4d} r124={4d} r125={4d} r126={4d} r127={4d} r133={1d,2u} r134={1d,2u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} 
;;    total ref usage 577{520d,57u,0e} in 50{46 regular + 4 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(11){ }d-1(12){ }d-1(13){ }d-1(14){ }d-1(25){ }d-1(26){ }}
;; bb 0 artificial_uses: { }

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(11){ }u-1(13){ }u-1(14){ }u-1(25){ }}

Finding needed instructions:
  Adding insn 62 to worklist
  Adding insn 51 to worklist
  Adding insn 48 to worklist
  Adding insn 45 to worklist
  Adding insn 40 to worklist
  Adding insn 33 to worklist
  Adding insn 22 to worklist
  Adding insn 19 to worklist
Finished finding needed instructions:
processing block 2 lr out =  0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 56 to worklist
  Adding insn 52 to worklist
  Adding insn 50 to worklist
  Adding insn 49 to worklist
  Adding insn 47 to worklist
  Adding insn 46 to worklist
  Adding insn 44 to worklist
  Adding insn 43 to worklist
  Adding insn 42 to worklist
  Adding insn 41 to worklist
  Adding insn 39 to worklist
  Adding insn 38 to worklist
  Adding insn 37 to worklist
  Adding insn 36 to worklist
  Adding insn 35 to worklist
  Adding insn 34 to worklist
  Adding insn 32 to worklist
  Adding insn 31 to worklist
  Adding insn 30 to worklist
  Adding insn 29 to worklist
  Adding insn 28 to worklist
  Adding insn 27 to worklist
  Adding insn 26 to worklist
  Adding insn 25 to worklist
  Adding insn 24 to worklist
  Adding insn 23 to worklist
  Adding insn 21 to worklist
  Adding insn 20 to worklist
  Adding insn 18 to worklist
  Adding insn 17 to worklist
  Adding insn 16 to worklist
  Adding insn 15 to worklist
  Adding insn 14 to worklist
  Adding insn 13 to worklist
  Adding insn 12 to worklist
  Adding insn 11 to worklist
  Adding insn 10 to worklist
  Adding insn 9 to worklist
  Adding insn 8 to worklist
  Adding insn 7 to worklist
  Adding insn 6 to worklist
  Adding insn 5 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)
;; Following path with 58 sets: 2 
deferring rescan insn with uid = 7.
deferring rescan insn with uid = 8.
deferring rescan insn with uid = 9.
deferring rescan insn with uid = 12.
deferring rescan insn with uid = 16.
deferring rescan insn with uid = 19.
deferring rescan insn with uid = 21.
deferring rescan insn with uid = 23.
deferring rescan insn with uid = 24.
deferring rescan insn with uid = 25.
deferring rescan insn with uid = 26.
deferring rescan insn with uid = 34.
deferring rescan insn with uid = 35.
deferring rescan insn with uid = 36.
deferring rescan insn with uid = 37.
deferring rescan insn with uid = 38.
deferring rescan insn with uid = 39.
deferring rescan insn with uid = 41.
deferring rescan insn with uid = 42.
deferring rescan insn with uid = 43.
deferring rescan insn with uid = 44.
deferring rescan insn with uid = 46.
deferring rescan insn with uid = 48.
deferring rescan insn with uid = 49.
deferring rescan insn with uid = 51.
deferring rescan insn with uid = 52.
deferring rescan insn with uid = 56.


try_optimize_cfg iteration 1



do_symlink

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr]
;;  ref usage 	r0={10d,6u} r1={9d,4u} r2={6d,1u} r3={5d} r11={1d,2u} r12={5d} r13={1d,6u} r14={5d,1u} r15={4d} r16={4d} r17={4d} r18={4d} r19={4d} r20={4d} r21={4d} r22={4d} r23={4d} r24={4d} r25={1d,2u} r26={1d,1u} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r81={4d} r82={4d} r83={4d} r84={4d} r85={4d} r86={4d} r87={4d} r88={4d} r89={4d} r90={4d} r91={4d} r92={4d} r93={4d} r94={4d} r95={4d} r96={4d} r97={4d} r98={4d} r99={4d} r100={4d} r101={4d} r102={4d} r103={4d} r104={4d} r105={4d} r106={4d} r107={4d} r108={4d} r109={4d} r110={4d} r111={4d} r112={4d} r113={4d} r114={4d} r115={4d} r116={4d} r117={4d} r118={4d} r119={4d} r120={4d} r121={4d} r122={4d} r123={4d} r124={4d} r125={4d} r126={4d} r127={4d} r133={1d,2u} r134={1d,2u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} 
;;    total ref usage 577{520d,57u,0e} in 50{46 regular + 4 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)

(insn 5 2 6 2 init/initramfs.c:356 (set (reg/f:SI 136)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 6 5 7 2 init/initramfs.c:356 (set (reg/f:SI 134 [ collected.393 ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 136)
                (const_int 16 [0x10])) [0 collected+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 7 6 8 2 init/initramfs.c:356 (set (reg/f:SI 137)
        (reg/f:SI 136)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 8 7 9 2 init/initramfs.c:356 (set (reg/f:SI 138)
        (reg/f:SI 136)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 9 8 10 2 init/initramfs.c:356 (set (reg:SI 140 [ name_len ])
        (mem/c/i:SI (plus:SI (reg/f:SI 136)
                (const_int 96 [0x60])) [0 name_len+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 10 9 11 2 init/initramfs.c:356 (set (reg:SI 139)
        (plus:SI (reg:SI 140 [ name_len ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 11 10 12 2 init/initramfs.c:356 (set (reg:SI 141)
        (and:SI (reg:SI 139)
            (const_int -4 [0xfffffffffffffffc]))) 67 {*arm_andsi3_insn} (nil))

(insn 12 11 13 2 init/initramfs.c:356 (set (reg:SI 142 [ body_len ])
        (mem/c/i:SI (plus:SI (reg/f:SI 136)
                (const_int 92 [0x5c])) [0 body_len+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 13 12 14 2 init/initramfs.c:356 (set (reg:SI 143)
        (const_int 2 [0x2])) 167 {*arm_movsi_insn} (nil))

(insn 14 13 15 2 init/initramfs.c:356 (set (reg:SI 144)
        (plus:SI (reg/f:SI 134 [ collected.393 ])
            (reg:SI 141))) 4 {*arm_addsi3} (nil))

(insn 15 14 16 2 init/initramfs.c:356 (set (reg:SI 145)
        (plus:SI (reg:SI 144)
            (reg:SI 142 [ body_len ]))) 4 {*arm_addsi3} (nil))

(insn 16 15 17 2 init/initramfs.c:356 (set (reg/f:SI 146)
        (plus:SI (reg:SI 145)
            (const_int 2 [0x2]))) 4 {*arm_addsi3} (nil))

(insn 17 16 18 2 init/initramfs.c:356 (set (reg:SI 147)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 18 17 19 2 init/initramfs.c:356 (set (reg:QI 148)
        (subreg:QI (reg:SI 147) 0)) 178 {*arm_movqi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 19 18 20 2 init/initramfs.c:356 (set (mem:QI (reg/f:SI 146) [0 S1 A8])
        (subreg:QI (reg:SI 147) 0)) 178 {*arm_movqi_insn} (nil))

(insn 20 19 21 2 init/initramfs.c:357 (set (reg:SI 0 r0)
        (reg/f:SI 134 [ collected.393 ])) 167 {*arm_movsi_insn} (nil))

(insn 21 20 22 2 init/initramfs.c:357 (set (reg:SI 1 r1)
        (reg:SI 147)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(call_insn 22 21 23 2 init/initramfs.c:357 (parallel [
            (call (mem:SI (symbol_ref:SI ("clean_path") [flags 0x3] <function_decl 0x114ad300 clean_path>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 23 22 24 2 init/initramfs.c:358 (set (reg/f:SI 149)
        (reg/f:SI 136)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 24 23 25 2 init/initramfs.c:358 (set (reg/f:SI 133 [ collected.674 ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 136)
                (const_int 16 [0x10])) [0 collected+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 25 24 26 2 init/initramfs.c:358 (set (reg/f:SI 150)
        (reg/f:SI 136)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 26 25 27 2 init/initramfs.c:358 (set (reg:SI 152 [ name_len ])
        (mem/c/i:SI (plus:SI (reg/f:SI 136)
                (const_int 96 [0x60])) [0 name_len+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 27 26 28 2 init/initramfs.c:358 (set (reg:SI 151)
        (plus:SI (reg:SI 152 [ name_len ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 28 27 29 2 init/initramfs.c:358 (set (reg:SI 153)
        (and:SI (reg:SI 151)
            (const_int -4 [0xfffffffffffffffc]))) 67 {*arm_andsi3_insn} (nil))

(insn 29 28 30 2 init/initramfs.c:358 (set (reg:SI 154)
        (plus:SI (reg:SI 153)
            (const_int 2 [0x2]))) 4 {*arm_addsi3} (nil))

(insn 30 29 31 2 init/initramfs.c:358 (set (reg:SI 155)
        (plus:SI (reg/f:SI 133 [ collected.674 ])
            (reg:SI 154))) 4 {*arm_addsi3} (nil))

(insn 31 30 32 2 init/initramfs.c:358 (set (reg:SI 0 r0)
        (reg:SI 155)) 167 {*arm_movsi_insn} (nil))

(insn 32 31 33 2 init/initramfs.c:358 (set (reg:SI 1 r1)
        (reg/f:SI 133 [ collected.674 ])) 167 {*arm_movsi_insn} (nil))

(call_insn 33 32 34 2 init/initramfs.c:358 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sys_symlink") [flags 0x41] <function_decl 0x11458c80 sys_symlink>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 34 33 35 2 init/initramfs.c:359 (set (reg/f:SI 156)
        (reg/f:SI 136)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 35 34 36 2 init/initramfs.c:359 (set (reg/f:SI 157)
        (reg/f:SI 136)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 36 35 37 2 init/initramfs.c:359 (set (reg/f:SI 158)
        (reg/f:SI 136)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 37 36 38 2 init/initramfs.c:359 (set (reg:SI 0 r0)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 136)
                (const_int 16 [0x10])) [0 collected+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 38 37 39 2 init/initramfs.c:359 (set (reg:SI 1 r1)
        (mem/c/i:SI (plus:SI (reg/f:SI 136)
                (const_int 100 [0x64])) [0 uid+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 39 38 40 2 init/initramfs.c:359 (set (reg:SI 2 r2)
        (mem/c/i:SI (plus:SI (reg/f:SI 136)
                (const_int 104 [0x68])) [0 gid+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn 40 39 41 2 init/initramfs.c:359 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sys_lchown") [flags 0x41] <function_decl 0x1145eb00 sys_lchown>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 41 40 42 2 init/initramfs.c:360 (set (reg/f:SI 159)
        (reg/f:SI 136)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 42 41 43 2 init/initramfs.c:360 (set (reg/f:SI 160)
        (reg/f:SI 136)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 43 42 44 2 init/initramfs.c:360 (set (reg:SI 0 r0)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 136)
                (const_int 16 [0x10])) [0 collected+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 44 43 45 2 init/initramfs.c:360 (set (reg:SI 1 r1)
        (mem/c/i:SI (plus:SI (reg/f:SI 136)
                (const_int 108 [0x6c])) [0 mtime+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn 45 44 46 2 init/initramfs.c:360 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("do_utime") [flags 0x3] <function_decl 0x11487700 do_utime>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 46 45 47 2 init/initramfs.c:361 (set (reg/f:SI 161)
        (reg/f:SI 136)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 47 46 48 2 init/initramfs.c:361 (set (reg:SI 162)
        (const_int 3 [0x3])) 167 {*arm_movsi_insn} (nil))

(insn 48 47 49 2 init/initramfs.c:361 (set (mem/c/i:SI (plus:SI (reg/f:SI 136)
                (const_int 32 [0x20])) [0 state+0 S4 A32])
        (reg:SI 162)) 167 {*arm_movsi_insn} (nil))

(insn 49 48 50 2 init/initramfs.c:362 (set (reg/f:SI 163)
        (reg/f:SI 136)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 50 49 51 2 init/initramfs.c:362 (set (reg:SI 164)
        (const_int 7 [0x7])) 167 {*arm_movsi_insn} (nil))

(insn 51 50 52 2 init/initramfs.c:362 (set (mem/c/i:SI (plus:SI (reg/f:SI 136)
                (const_int 44 [0x2c])) [0 next_state+0 S4 A32])
        (reg:SI 164)) 167 {*arm_movsi_insn} (nil))

(insn 52 51 56 2 init/initramfs.c:364 (set (reg:SI 135 [ <result> ])
        (reg:SI 147)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 56 52 62 2 init/initramfs.c:364 (set (reg/i:SI 0 r0)
        (reg:SI 147)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 62 56 0 2 init/initramfs.c:364 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
rescanning insn with uid = 7.
deleting insn with uid = 7.
rescanning insn with uid = 8.
deleting insn with uid = 8.
rescanning insn with uid = 9.
deleting insn with uid = 9.
rescanning insn with uid = 12.
deleting insn with uid = 12.
rescanning insn with uid = 16.
deleting insn with uid = 16.
rescanning insn with uid = 19.
deleting insn with uid = 19.
rescanning insn with uid = 21.
deleting insn with uid = 21.
rescanning insn with uid = 23.
deleting insn with uid = 23.
rescanning insn with uid = 24.
deleting insn with uid = 24.
rescanning insn with uid = 25.
deleting insn with uid = 25.
rescanning insn with uid = 26.
deleting insn with uid = 26.
rescanning insn with uid = 34.
deleting insn with uid = 34.
rescanning insn with uid = 35.
deleting insn with uid = 35.
rescanning insn with uid = 36.
deleting insn with uid = 36.
rescanning insn with uid = 37.
deleting insn with uid = 37.
rescanning insn with uid = 38.
deleting insn with uid = 38.
rescanning insn with uid = 39.
deleting insn with uid = 39.
rescanning insn with uid = 41.
deleting insn with uid = 41.
rescanning insn with uid = 42.
deleting insn with uid = 42.
rescanning insn with uid = 43.
deleting insn with uid = 43.
rescanning insn with uid = 44.
deleting insn with uid = 44.
rescanning insn with uid = 46.
deleting insn with uid = 46.
rescanning insn with uid = 48.
deleting insn with uid = 48.
rescanning insn with uid = 49.
deleting insn with uid = 49.
rescanning insn with uid = 51.
deleting insn with uid = 51.
rescanning insn with uid = 52.
deleting insn with uid = 52.
rescanning insn with uid = 56.
deleting insn with uid = 56.
ending the processing of deferred insns

;; Function unpack_to_rootfs (unpack_to_rootfs)[0:1333] (unlikely executed)


32 basic blocks, 47 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 901, probably never executed.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(11){ }d-1(12){ }d-1(13){ }d-1(14){ }d-1(25){ }d-1(26){ }}
;; bb 0 artificial_uses: { }

Successors:  2 [100.0%]  (fallthru)


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 901, probably never executed.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  5 [0.0%]  3 [100.0%]  (fallthru)


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 901, probably never executed.
Predecessors:  2 [100.0%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  5 [0.0%]  4 [100.0%]  (fallthru)


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 900, probably never executed.
Predecessors:  3 [100.0%]  (fallthru)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  5 [0.0%]  (fallthru) 6 [100.0%] 


Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 1, probably never executed.
Predecessors:  2 [0.0%]  3 [0.0%]  4 [0.0%]  (fallthru)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors: 


Basic block 6 , prev 5, next 7, loop_depth 0, count 0, freq 900, probably never executed.
Predecessors:  4 [100.0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  27 [100.0%]  (fallthru)


Basic block 7 , prev 6, next 8, loop_depth 1, count 0, freq 9100, probably never executed.
Predecessors:  27 [91.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  8 [28.0%]  (fallthru) 12 [72.0%] 


Basic block 8 , prev 7, next 9, loop_depth 1, count 0, freq 2548, probably never executed.
Predecessors:  7 [28.0%]  (fallthru)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  9 [0.0%]  (fallthru) 14 [100.0%] 


Basic block 9 , prev 8, next 10, loop_depth 1, count 0, freq 1, probably never executed.
Predecessors:  8 [0.0%]  (fallthru)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  10 [100.0%]  (fallthru)


Basic block 10 , prev 9, next 11, loop_depth 2, count 0, freq 7, probably never executed.
Predecessors:  9 [100.0%]  (fallthru) 10 [86.0%]  (dfs_back)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  10 [86.0%]  (dfs_back) 11 [14.0%]  (fallthru)


Basic block 11 , prev 10, next 12, loop_depth 1, count 0, freq 1, probably never executed.
Predecessors:  10 [14.0%]  (fallthru)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  27 [100.0%]  (fallthru)


Basic block 12 , prev 11, next 13, loop_depth 1, count 0, freq 6552, probably never executed.
Predecessors:  7 [72.0%] 
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  13 [98.6%]  (fallthru) 14 [1.4%] 


Basic block 13 , prev 12, next 14, loop_depth 1, count 0, freq 6460, probably never executed.
Predecessors:  12 [98.6%]  (fallthru)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  27 [100.0%]  (fallthru)


Basic block 14 , prev 13, next 15, loop_depth 1, count 0, freq 2639, probably never executed.
Predecessors:  12 [1.4%]  8 [100.0%] 
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  15 [69.8%]  (fallthru) 18 [30.2%] 


Basic block 15 , prev 14, next 16, loop_depth 1, count 0, freq 1843, probably never executed.
Predecessors:  14 [69.8%]  (fallthru)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  16 [0.0%]  (fallthru) 23 [100.0%] 


Basic block 16 , prev 15, next 17, loop_depth 1, count 0, freq 1, probably never executed.
Predecessors:  15 [0.0%]  (fallthru)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  17 [15.0%]  (fallthru) 23 [85.0%] 


Basic block 17 , prev 16, next 18, loop_depth 1, count 0, freq 0, probably never executed.
Predecessors:  16 [15.0%]  (fallthru)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  23 [100.0%]  (fallthru)


Basic block 18 , prev 17, next 19, loop_depth 1, count 0, freq 796, probably never executed.
Predecessors:  14 [30.2%] 
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  19 [100.0%]  (fallthru) 21 [0.0%] 


Basic block 19 , prev 18, next 20, loop_depth 1, count 0, freq 796, probably never executed.
Predecessors:  18 [100.0%]  (fallthru)
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  20 [6.7%]  (fallthru) 23 [93.3%] 


Basic block 20 , prev 19, next 21, loop_depth 1, count 0, freq 53, probably never executed.
Predecessors:  19 [6.7%]  (fallthru)
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  23 [100.0%]  (fallthru)


Basic block 21 , prev 20, next 22, loop_depth 1, count 0, freq 0, probably never executed.
Predecessors:  18 [0.0%] 
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  22 [15.0%]  (fallthru) 23 [85.0%] 


Basic block 22 , prev 21, next 23, loop_depth 1, count 0, freq 0, probably never executed.
Predecessors:  21 [15.0%]  (fallthru)
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  23 [100.0%]  (fallthru)


Basic block 23 , prev 22, next 24, loop_depth 1, count 0, freq 2639, probably never executed.
Predecessors:  16 [85.0%]  20 [100.0%]  (fallthru) 21 [85.0%]  15 [100.0%]  19 [93.3%]  17 [100.0%]  (fallthru) 22 [100.0%]  (fallthru)
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  24 [0.0%]  (fallthru) 26 [100.0%] 


Basic block 24 , prev 23, next 25, loop_depth 1, count 0, freq 1, probably never executed.
Predecessors:  23 [0.0%]  (fallthru)
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  25 [15.0%]  (fallthru) 26 [85.0%] 


Basic block 25 , prev 24, next 26, loop_depth 1, count 0, freq 0, probably never executed.
Predecessors:  24 [15.0%]  (fallthru)
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  26 [100.0%]  (fallthru)


Basic block 26 , prev 25, next 27, loop_depth 1, count 0, freq 2639, probably never executed.
Predecessors:  23 [100.0%]  24 [85.0%]  25 [100.0%]  (fallthru)
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  27 [100.0%]  (fallthru)


Basic block 27 , prev 26, next 28, loop_depth 1, count 0, freq 10000, probably never executed.
Predecessors:  13 [100.0%]  (fallthru) 6 [100.0%]  (fallthru) 11 [100.0%]  (fallthru) 26 [100.0%]  (fallthru)
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  7 [91.0%]  28 [9.0%]  (fallthru)


Basic block 28 , prev 27, next 29, loop_depth 0, count 0, freq 900, probably never executed.
Predecessors:  27 [9.0%]  (fallthru)
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  30 [100.0%]  (fallthru)


Basic block 29 , prev 28, next 30, loop_depth 1, count 0, freq 0, probably never executed.
Predecessors:  30 [0.0%] 
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  30 [100.0%]  (fallthru,dfs_back)


Basic block 30 , prev 29, next 31, loop_depth 1, count 0, freq 900, probably never executed.
Predecessors:  28 [100.0%]  (fallthru) 29 [100.0%]  (fallthru,dfs_back)
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  29 [0.0%]  31 [100.0%]  (fallthru)


Basic block 31 , prev 30, next 1, loop_depth 0, count 0, freq 900, probably never executed.
Predecessors:  30 [100.0%]  (fallthru)
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  EXIT [100.0%]  (fallthru)


Basic block 1 , prev 31, loop_depth 0, count 0, freq 900, probably never executed.
Predecessors:  31 [100.0%]  (fallthru)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(11){ }u-1(13){ }u-1(14){ }u-1(25){ }}

Successors: 


starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 32 n_edges 47 count 58 (  1.8)


unpack_to_rootfs

Dataflow summary:
def_info->table_size = 0, use_info->table_size = 0
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={29d,22u} r1={22d,8u} r2={18d,3u} r3={17d,2u} r11={1d,31u} r12={15d} r13={1d,48u} r14={15d,1u} r15={14d} r16={14d} r17={14d} r18={14d} r19={14d} r20={14d} r21={14d} r22={14d} r23={14d} r24={35d,19u} r25={1d,33u} r26={1d,30u} r27={14d} r28={14d} r29={14d} r30={14d} r31={14d} r32={14d} r33={14d} r34={14d} r35={14d} r36={14d} r37={14d} r38={14d} r39={14d} r40={14d} r41={14d} r42={14d} r43={14d} r44={14d} r45={14d} r46={14d} r47={14d} r48={14d} r49={14d} r50={14d} r51={14d} r52={14d} r53={14d} r54={14d} r55={14d} r56={14d} r57={14d} r58={14d} r59={14d} r60={14d} r61={14d} r62={14d} r63={14d} r64={14d} r65={14d} r66={14d} r67={14d} r68={14d} r69={14d} r70={14d} r71={14d} r72={14d} r73={14d} r74={14d} r75={14d} r76={14d} r77={14d} r78={14d} r79={14d} r80={14d} r81={14d} r82={14d} r83={14d} r84={14d} r85={14d} r86={14d} r87={14d} r88={14d} r89={14d} r90={14d} r91={14d} r92={14d} r93={14d} r94={14d} r95={14d} r96={14d} r97={14d} r98={14d} r99={14d} r100={14d} r101={14d} r102={14d} r103={14d} r104={14d} r105={14d} r106={14d} r107={14d} r108={14d} r109={14d} r110={14d} r111={14d} r112={14d} r113={14d} r114={14d} r115={14d} r116={14d} r117={14d} r118={14d} r119={14d} r120={14d} r121={14d} r122={14d} r123={14d} r124={14d} r125={14d} r126={14d} r127={14d} r133={1d,1u} r134={2d,2u} r135={2d,10u} r136={1d,1u} r137={1d,1u} r138={1d,2u} r139={1d,2u} r140={1d,1u} r141={1d,2u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,3u} r146={1d,2u} r147={1d,1u} r148={1d,3u} r149={1d,2u} r150={1d,2u} r151={1d,2u} r152={1d,2u} r153={1d,1u} r154={4d,7u} r155={4d,7u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r171={1d,1u} r172={1d,1u} r173={1d,1u} r174={1d,2u} r175={1d,1u} r176={2d,2u} r177={1d,1u} r178={1d,1u} r179={1d,1u} r180={1d,1u} r181={1d,1u} r182={1d,1u} r183={1d,1u} r184={1d,1u} r185={1d,1u} r186={1d,1u} r187={1d,1u} r188={1d,1u} r189={1d,1u} r190={1d,1u} r191={1d,1u} r192={1d,1u} r193={1d,1u} r194={1d,1u} r195={1d,1u} r196={1d,1u} r197={1d,1u} r198={1d,1u} r199={1d,1u} r200={1d,1u} r201={1d,1u} r202={1d,1u} r203={1d,1u} r204={1d,1u} r205={1d,1u} r206={1d,1u} r207={1d,1u} r208={1d,1u} r209={1d,1u} r210={1d,1u} r211={1d,1u} r212={1d,1u} r213={1d,1u} r214={1d,1u} r215={1d,1u} r216={1d,1u} r217={1d,1u} r218={1d,1u} r219={1d,1u} r220={1d,1u} r221={1d,1u} r222={1d,1u} r223={1d,1u} r224={1d,1u} r225={1d,1u} r226={1d,1u} r227={1d,1u} r228={1d,1u} r229={1d,1u} r230={1d,1u} r231={1d,1u} r232={1d,1u} r233={1d,1u} r234={1d,1u} r235={1d,1u} r236={1d,1u} r237={1d,1u} r238={1d,1u} r239={1d,1u} r240={1d,1u} r241={1d,1u} r242={1d,1u} r243={1d,1u} r245={1d,1u} r246={1d,1u} 
;;    total ref usage 2163{1817d,346u,0e} in 222{208 regular + 14 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(11){ }d-1(12){ }d-1(13){ }d-1(14){ }d-1(25){ }d-1(26){ }}
;; bb 0 artificial_uses: { }

( 0 )->[2]->( 5 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 2 )->[3]->( 5 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 3 )->[4]->( 5 6 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 2 3 4 )->[5]->( )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 4 )->[6]->( 27 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 27 )->[7]->( 8 12 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 7 )->[8]->( 9 14 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 8 )->[9]->( 10 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 9 10 )->[10]->( 10 11 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 10 )->[11]->( 27 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 7 )->[12]->( 13 14 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 12 )->[13]->( 27 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 12 8 )->[14]->( 15 18 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 14 )->[15]->( 16 23 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 15 )->[16]->( 17 23 )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 16 )->[17]->( 23 )
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 14 )->[18]->( 19 21 )
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 18 )->[19]->( 20 23 )
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 19 )->[20]->( 23 )
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 18 )->[21]->( 22 23 )
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 21 )->[22]->( 23 )
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 16 20 21 15 19 17 22 )->[23]->( 24 26 )
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 23 )->[24]->( 25 26 )
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 24 )->[25]->( 26 )
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 23 24 25 )->[26]->( 27 )
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 13 6 11 26 )->[27]->( 7 28 )
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 27 )->[28]->( 30 )
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 30 )->[29]->( 30 )
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 28 29 )->[30]->( 29 31 )
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 30 )->[31]->( 1 )
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 31 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(11){ }u-1(13){ }u-1(14){ }u-1(25){ }}

Finding needed instructions:
  Adding insn 38 to worklist
  Adding insn 34 to worklist
  Adding insn 30 to worklist
  Adding insn 24 to worklist
  Adding insn 21 to worklist
  Adding insn 15 to worklist
  Adding insn 12 to worklist
  Adding insn 43 to worklist
  Adding insn 46 to worklist
  Adding insn 51 to worklist
  Adding insn 63 to worklist
  Adding insn 60 to worklist
  Adding insn 57 to worklist
  Adding insn 71 to worklist
  Adding insn 78 to worklist
  Adding insn 86 to worklist
  Adding insn 84 to worklist
  Adding insn 82 to worklist
  Adding insn 100 to worklist
  Adding insn 96 to worklist
  Adding insn 112 to worklist
  Adding insn 119 to worklist
  Adding insn 135 to worklist
  Adding insn 132 to worklist
  Adding insn 126 to worklist
  Adding insn 151 to worklist
  Adding insn 148 to worklist
  Adding insn 143 to worklist
  Adding insn 141 to worklist
  Adding insn 139 to worklist
  Adding insn 156 to worklist
  Adding insn 160 to worklist
  Adding insn 167 to worklist
  Adding insn 172 to worklist
  Adding insn 185 to worklist
  Adding insn 181 to worklist
  Adding insn 193 to worklist
  Adding insn 197 to worklist
  Adding insn 203 to worklist
  Adding insn 208 to worklist
  Adding insn 212 to worklist
  Adding insn 220 to worklist
  Adding insn 238 to worklist
  Adding insn 261 to worklist
  Adding insn 259 to worklist
  Adding insn 257 to worklist
  Adding insn 254 to worklist
  Adding insn 252 to worklist
  Adding insn 250 to worklist
  Adding insn 249 to worklist
  Adding insn 272 to worklist
  Adding insn 295 to worklist
  Adding insn 282 to worklist
  Adding insn 279 to worklist
  Adding insn 276 to worklist
Finished finding needed instructions:
processing block 5 lr out =  13 [sp] 25 [sfp] 26 [afp]
  Adding insn 50 to worklist
  Adding insn 49 to worklist
processing block 11 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155
  Adding insn 106 to worklist
  Adding insn 105 to worklist
  Adding insn 104 to worklist
  Adding insn 103 to worklist
  Adding insn 102 to worklist
processing block 10 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155
  Adding insn 99 to worklist
  Adding insn 97 to worklist
  Adding insn 95 to worklist
  Adding insn 94 to worklist
  Adding insn 93 to worklist
  Adding insn 92 to worklist
  Adding insn 91 to worklist
  Adding insn 90 to worklist
  Adding insn 89 to worklist
  Adding insn 88 to worklist
processing block 9 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155
  Adding insn 85 to worklist
  Adding insn 83 to worklist
  Adding insn 81 to worklist
  Adding insn 80 to worklist
processing block 26 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155
  Adding insn 222 to worklist
  Adding insn 221 to worklist
  Adding insn 219 to worklist
  Adding insn 218 to worklist
  Adding insn 217 to worklist
  Adding insn 216 to worklist
  Adding insn 215 to worklist
processing block 25 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155
  Adding insn 211 to worklist
  Adding insn 210 to worklist
processing block 24 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155
  Adding insn 207 to worklist
  Adding insn 206 to worklist
  Adding insn 205 to worklist
processing block 23 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155
  Adding insn 202 to worklist
  Adding insn 201 to worklist
  Adding insn 200 to worklist
processing block 17 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155
  Adding insn 159 to worklist
  Adding insn 158 to worklist
processing block 16 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155
  Adding insn 155 to worklist
  Adding insn 154 to worklist
  Adding insn 153 to worklist
processing block 15 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155
  Adding insn 150 to worklist
  Adding insn 149 to worklist
  Adding insn 147 to worklist
  Adding insn 146 to worklist
  Adding insn 145 to worklist
  Adding insn 144 to worklist
  Adding insn 142 to worklist
  Adding insn 140 to worklist
  Adding insn 138 to worklist
  Adding insn 137 to worklist
processing block 20 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155
  Adding insn 184 to worklist
  Adding insn 183 to worklist
  Adding insn 182 to worklist
  Adding insn 180 to worklist
  Adding insn 179 to worklist
  Adding insn 178 to worklist
  Adding insn 177 to worklist
  Adding insn 176 to worklist
  Adding insn 175 to worklist
  Adding insn 174 to worklist
processing block 19 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 149 154 155
  Adding insn 171 to worklist
  Adding insn 170 to worklist
  Adding insn 169 to worklist
processing block 22 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155
  Adding insn 196 to worklist
  Adding insn 195 to worklist
processing block 21 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155
  Adding insn 192 to worklist
  Adding insn 191 to worklist
  Adding insn 190 to worklist
processing block 18 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 149 154 155
  Adding insn 166 to worklist
  Adding insn 165 to worklist
processing block 14 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 150 154 155
  Adding insn 134 to worklist
  Adding insn 133 to worklist
  Adding insn 131 to worklist
  Adding insn 130 to worklist
  Adding insn 129 to worklist
  Adding insn 128 to worklist
  Adding insn 127 to worklist
  Adding insn 125 to worklist
  Adding insn 124 to worklist
processing block 8 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155
  Adding insn 77 to worklist
  Adding insn 76 to worklist
  Adding insn 75 to worklist
  Adding insn 74 to worklist
  Adding insn 73 to worklist
processing block 13 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155
  Adding insn 118 to worklist
  Adding insn 117 to worklist
  Adding insn 116 to worklist
  Adding insn 115 to worklist
  Adding insn 114 to worklist
processing block 12 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155
  Adding insn 111 to worklist
processing block 7 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 151 154 155
  Adding insn 70 to worklist
  Adding insn 69 to worklist
  Adding insn 68 to worklist
  Adding insn 67 to worklist
processing block 29 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135
  Adding insn 265 to worklist
  Adding insn 264 to worklist
  Adding insn 263 to worklist
  Adding insn 262 to worklist
  Adding insn 260 to worklist
  Adding insn 258 to worklist
  Adding insn 256 to worklist
  Adding insn 255 to worklist
  Adding insn 253 to worklist
  Adding insn 251 to worklist
  Adding insn 248 to worklist
  Adding insn 247 to worklist
processing block 31 lr out =  0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 289 to worklist
  Adding insn 285 to worklist
  Adding insn 284 to worklist
  Adding insn 283 to worklist
  Adding insn 281 to worklist
  Adding insn 280 to worklist
  Adding insn 278 to worklist
  Adding insn 277 to worklist
  Adding insn 275 to worklist
  Adding insn 274 to worklist
processing block 30 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135
  Adding insn 271 to worklist
  Adding insn 270 to worklist
  Adding insn 269 to worklist
processing block 28 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135
  Adding insn 243 to worklist
  Adding insn 242 to worklist
  Adding insn 241 to worklist
  Adding insn 240 to worklist
processing block 27 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155
  Adding insn 237 to worklist
  Adding insn 236 to worklist
  Adding insn 235 to worklist
  Adding insn 234 to worklist
  Adding insn 233 to worklist
  Adding insn 232 to worklist
  Adding insn 231 to worklist
  Adding insn 230 to worklist
  Adding insn 229 to worklist
  Adding insn 228 to worklist
  Adding insn 227 to worklist
  Adding insn 226 to worklist
processing block 6 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155
  Adding insn 62 to worklist
  Adding insn 61 to worklist
  Adding insn 59 to worklist
  Adding insn 58 to worklist
  Adding insn 56 to worklist
  Adding insn 55 to worklist
processing block 4 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155
  Adding insn 45 to worklist
processing block 3 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 154 155
  Adding insn 42 to worklist
  Adding insn 41 to worklist
  Adding insn 40 to worklist
processing block 2 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 154 155
  Adding insn 37 to worklist
  Adding insn 36 to worklist
  Adding insn 35 to worklist
  Adding insn 33 to worklist
  Adding insn 32 to worklist
  Adding insn 31 to worklist
  Adding insn 29 to worklist
  Adding insn 28 to worklist
  Adding insn 27 to worklist
  Adding insn 23 to worklist
  Adding insn 22 to worklist
  Adding insn 20 to worklist
  Adding insn 19 to worklist
  Adding insn 18 to worklist
  Adding insn 14 to worklist
  Adding insn 13 to worklist
  Adding insn 11 to worklist
  Adding insn 10 to worklist
  Adding insn 9 to worklist
  Adding insn 3 to worklist
  Adding insn 2 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 32 n_edges 47 count 86 (  2.7)
;; Following path with 49 sets: 2 3 4 6 
deferring rescan insn with uid = 18.
deferring rescan insn with uid = 19.
deferring rescan insn with uid = 23.
deferring rescan insn with uid = 24.
deferring rescan insn with uid = 27.
deferring rescan insn with uid = 28.
deferring rescan insn with uid = 33.
deferring rescan insn with uid = 34.
deferring rescan insn with uid = 35.
deferring rescan insn with uid = 36.
deferring rescan insn with uid = 40.
deferring rescan insn with uid = 41.
deferring rescan insn with uid = 45.
deferring rescan insn with uid = 55.
deferring rescan insn with uid = 57.
deferring rescan insn with uid = 58.
deferring rescan insn with uid = 60.
deferring rescan insn with uid = 61.
deferring rescan insn with uid = 62.
deferring rescan insn with uid = 63.
;; Following path with 27 sets: 27 7 12 13 
deferring rescan insn with uid = 67.
deferring rescan insn with uid = 68.
deferring rescan insn with uid = 116.
deferring rescan insn with uid = 119.
;; Following path with 31 sets: 27 7 8 9 
deferring rescan insn with uid = 80.
deferring rescan insn with uid = 81.
deferring rescan insn with uid = 82.
deferring rescan insn with uid = 83.
deferring rescan insn with uid = 84.
deferring rescan insn with uid = 85.
deferring rescan insn with uid = 86.
;; Following path with 17 sets: 27 28 
deferring rescan insn with uid = 240.
deferring rescan insn with uid = 241.
deferring rescan insn with uid = 242.
deferring rescan insn with uid = 243.
;; Following path with 29 sets: 30 29 
deferring rescan insn with uid = 265.
;; Following path with 24 sets: 30 31 
deferring rescan insn with uid = 274.
deferring rescan insn with uid = 275.
deferring rescan insn with uid = 277.
deferring rescan insn with uid = 278.
deferring rescan insn with uid = 280.
deferring rescan insn with uid = 281.
deferring rescan insn with uid = 283.
deferring rescan insn with uid = 284.
deferring rescan insn with uid = 289.
;; Following path with 24 sets: 14 18 21 22 
deferring rescan insn with uid = 130.
deferring rescan insn with uid = 190.
deferring rescan insn with uid = 191.
deferring rescan insn with uid = 195.
deferring rescan insn with uid = 197.
;; Following path with 35 sets: 14 18 19 20 
deferring rescan insn with uid = 169.
deferring rescan insn with uid = 170.
deferring rescan insn with uid = 174.
deferring rescan insn with uid = 175.
deferring rescan insn with uid = 182.
deferring rescan insn with uid = 183.
deferring rescan insn with uid = 184.
deferring rescan insn with uid = 184.
deferring rescan insn with uid = 185.
;; Following path with 38 sets: 14 15 16 17 
deferring rescan insn with uid = 145.
deferring rescan insn with uid = 146.
deferring rescan insn with uid = 153.
deferring rescan insn with uid = 154.
deferring rescan insn with uid = 158.
deferring rescan insn with uid = 160.
;; Following path with 11 sets: 23 24 25 
deferring rescan insn with uid = 205.
deferring rescan insn with uid = 206.
deferring rescan insn with uid = 210.
deferring rescan insn with uid = 212.
;; Following path with 9 sets: 26 
;; Following path with 19 sets: 10 11 
deferring rescan insn with uid = 89.
deferring rescan insn with uid = 90.
deferring rescan insn with uid = 94.
deferring rescan insn with uid = 102.
deferring rescan insn with uid = 103.
;; Following path with 5 sets: 5 


try_optimize_cfg iteration 1



unpack_to_rootfs

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={29d,22u} r1={22d,8u} r2={18d,3u} r3={17d,2u} r11={1d,31u} r12={15d} r13={1d,48u} r14={15d,1u} r15={14d} r16={14d} r17={14d} r18={14d} r19={14d} r20={14d} r21={14d} r22={14d} r23={14d} r24={35d,19u} r25={1d,33u} r26={1d,30u} r27={14d} r28={14d} r29={14d} r30={14d} r31={14d} r32={14d} r33={14d} r34={14d} r35={14d} r36={14d} r37={14d} r38={14d} r39={14d} r40={14d} r41={14d} r42={14d} r43={14d} r44={14d} r45={14d} r46={14d} r47={14d} r48={14d} r49={14d} r50={14d} r51={14d} r52={14d} r53={14d} r54={14d} r55={14d} r56={14d} r57={14d} r58={14d} r59={14d} r60={14d} r61={14d} r62={14d} r63={14d} r64={14d} r65={14d} r66={14d} r67={14d} r68={14d} r69={14d} r70={14d} r71={14d} r72={14d} r73={14d} r74={14d} r75={14d} r76={14d} r77={14d} r78={14d} r79={14d} r80={14d} r81={14d} r82={14d} r83={14d} r84={14d} r85={14d} r86={14d} r87={14d} r88={14d} r89={14d} r90={14d} r91={14d} r92={14d} r93={14d} r94={14d} r95={14d} r96={14d} r97={14d} r98={14d} r99={14d} r100={14d} r101={14d} r102={14d} r103={14d} r104={14d} r105={14d} r106={14d} r107={14d} r108={14d} r109={14d} r110={14d} r111={14d} r112={14d} r113={14d} r114={14d} r115={14d} r116={14d} r117={14d} r118={14d} r119={14d} r120={14d} r121={14d} r122={14d} r123={14d} r124={14d} r125={14d} r126={14d} r127={14d} r133={1d,1u} r134={2d,2u} r135={2d,10u} r136={1d,1u} r137={1d,1u} r138={1d,2u} r139={1d,2u} r140={1d,1u} r141={1d,2u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,3u} r146={1d,2u} r147={1d,1u} r148={1d,3u} r149={1d,2u} r150={1d,2u} r151={1d,2u} r152={1d,2u} r153={1d,1u} r154={4d,7u} r155={4d,7u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r171={1d,1u} r172={1d,1u} r173={1d,1u} r174={1d,2u} r175={1d,1u} r176={2d,2u} r177={1d,1u} r178={1d,1u} r179={1d,1u} r180={1d,1u} r181={1d,1u} r182={1d,1u} r183={1d,1u} r184={1d,1u} r185={1d,1u} r186={1d,1u} r187={1d,1u} r188={1d,1u} r189={1d,1u} r190={1d,1u} r191={1d,1u} r192={1d,1u} r193={1d,1u} r194={1d,1u} r195={1d,1u} r196={1d,1u} r197={1d,1u} r198={1d,1u} r199={1d,1u} r200={1d,1u} r201={1d,1u} r202={1d,1u} r203={1d,1u} r204={1d,1u} r205={1d,1u} r206={1d,1u} r207={1d,1u} r208={1d,1u} r209={1d,1u} r210={1d,1u} r211={1d,1u} r212={1d,1u} r213={1d,1u} r214={1d,1u} r215={1d,1u} r216={1d,1u} r217={1d,1u} r218={1d,1u} r219={1d,1u} r220={1d,1u} r221={1d,1u} r222={1d,1u} r223={1d,1u} r224={1d,1u} r225={1d,1u} r226={1d,1u} r227={1d,1u} r228={1d,1u} r229={1d,1u} r230={1d,1u} r231={1d,1u} r232={1d,1u} r233={1d,1u} r234={1d,1u} r235={1d,1u} r236={1d,1u} r237={1d,1u} r238={1d,1u} r239={1d,1u} r240={1d,1u} r241={1d,1u} r242={1d,1u} r243={1d,1u} r245={1d,1u} r246={1d,1u} 
;;    total ref usage 2163{1817d,346u,0e} in 222{208 regular + 14 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 142 143 144 152 154 155 156 157 158 159 160 161 162 163
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 142 143 144 152 154 155 156 157 158 159 160 161 162 163
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 5 3 2 init/initramfs.c:415 (set (reg/v/f:SI 154 [ buf ])
        (reg:SI 0 r0 [ buf ])) 167 {*arm_movsi_insn} (nil))

(insn 3 2 4 2 init/initramfs.c:415 (set (reg/v:SI 155 [ len ])
        (reg:SI 1 r1 [ len ])) 167 {*arm_movsi_insn} (nil))

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(note 7 4 9 2 ("found") NOTE_INSN_DELETED_LABEL 66)

(insn 9 7 10 2 include/linux/slab_def.h:122 (set (reg/f:SI 156)
        (symbol_ref:SI ("malloc_sizes") [flags 0xc0] <var_decl 0x10efe840 malloc_sizes>)) 167 {*arm_movsi_insn} (nil))

(insn 10 9 11 2 include/linux/slab_def.h:122 (set (reg:SI 0 r0)
        (mem/s/f/j:SI (plus:SI (reg/f:SI 156)
                (const_int 28 [0x1c])) [0 <variable>.cs_cachep+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 11 10 12 2 include/linux/slab_def.h:122 (set (reg:SI 1 r1)
        (const_int 208 [0xd0])) 167 {*arm_movsi_insn} (nil))

(call_insn 12 11 13 2 include/linux/slab_def.h:122 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("kmem_cache_alloc") [flags 0x41] <function_decl 0x10efa480 kmem_cache_alloc>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 13 12 14 2 include/linux/slab_def.h:122 (set (reg/v/f:SI 144 [ ret ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 14 13 15 2 init/initramfs.c:421 (set (reg/f:SI 157)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 15 14 16 2 init/initramfs.c:421 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 157)
                (const_int 4 [0x4])) [0 header_buf+0 S4 A32])
        (reg/v/f:SI 144 [ ret ])) 167 {*arm_movsi_insn} (nil))

(note 16 15 18 2 ("found") NOTE_INSN_DELETED_LABEL 67)

(insn 18 16 19 2 include/linux/slab_def.h:122 (set (reg/f:SI 158)
        (reg/f:SI 156)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("malloc_sizes") [flags 0xc0] <var_decl 0x10efe840 malloc_sizes>)
        (nil)))

(insn 19 18 20 2 include/linux/slab_def.h:122 (set (reg:SI 0 r0)
        (mem/s/f/j:SI (plus:SI (reg/f:SI 156)
                (const_int 92 [0x5c])) [0 <variable>.cs_cachep+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 20 19 21 2 include/linux/slab_def.h:122 (set (reg:SI 1 r1)
        (const_int 208 [0xd0])) 167 {*arm_movsi_insn} (nil))

(call_insn 21 20 22 2 include/linux/slab_def.h:122 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("kmem_cache_alloc") [flags 0x41] <function_decl 0x10efa480 kmem_cache_alloc>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 22 21 23 2 include/linux/slab_def.h:122 (set (reg/v/f:SI 143 [ ret ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 23 22 24 2 init/initramfs.c:422 (set (reg/f:SI 159)
        (reg/f:SI 157)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 24 23 25 2 init/initramfs.c:422 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 157)
                (const_int 112 [0x70])) [0 symlink_buf+0 S4 A32])
        (reg/v/f:SI 143 [ ret ])) 167 {*arm_movsi_insn} (nil))

(note 25 24 27 2 ("found") NOTE_INSN_DELETED_LABEL 68)

(insn 27 25 28 2 include/linux/slab_def.h:122 (set (reg/f:SI 160)
        (reg/f:SI 156)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("malloc_sizes") [flags 0xc0] <var_decl 0x10efe840 malloc_sizes>)
        (nil)))

(insn 28 27 29 2 include/linux/slab_def.h:122 (set (reg:SI 0 r0)
        (mem/s/f/j:SI (plus:SI (reg/f:SI 156)
                (const_int 84 [0x54])) [0 <variable>.cs_cachep+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 29 28 30 2 include/linux/slab_def.h:122 (set (reg:SI 1 r1)
        (const_int 208 [0xd0])) 167 {*arm_movsi_insn} (nil))

(call_insn 30 29 31 2 include/linux/slab_def.h:122 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("kmem_cache_alloc") [flags 0x41] <function_decl 0x10efa480 kmem_cache_alloc>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 31 30 32 2 include/linux/slab_def.h:122 (set (reg/v/f:SI 142 [ ret ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 32 31 33 2 init/initramfs.c:423 (set (reg/f:SI 152 [ name_buf.407 ])
        (reg/v/f:SI 142 [ ret ])) 167 {*arm_movsi_insn} (nil))

(insn 33 32 34 2 init/initramfs.c:423 (set (reg/f:SI 161)
        (reg/f:SI 157)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 34 33 35 2 init/initramfs.c:423 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 157)
                (const_int 116 [0x74])) [0 name_buf+0 S4 A32])
        (reg/v/f:SI 142 [ ret ])) 167 {*arm_movsi_insn} (nil))

(insn 35 34 36 2 init/initramfs.c:425 (set (reg/f:SI 162)
        (reg/f:SI 157)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 36 35 37 2 init/initramfs.c:425 (set (reg/f:SI 163 [ header_buf ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 157)
                (const_int 4 [0x4])) [0 header_buf+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 37 36 38 2 init/initramfs.c:425 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 163 [ header_buf ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 38 37 39 2 init/initramfs.c:425 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 47)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 4 [0x4])
        (nil)))
;; End of basic block 2 -> ( 5 3)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 154 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 154 155


;; Succ edge  5 [0.0%] 
;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 154 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 164 165
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 154 155
;; live  gen 	 24 [cc] 164 165
;; live  kill	

;; Pred edge  2 [100.0%]  (fallthru)
(note 39 38 40 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 40 39 41 3 init/initramfs.c:425 discrim 1 (set (reg/f:SI 164)
        (reg/f:SI 157)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 41 40 42 3 init/initramfs.c:425 discrim 1 (set (reg/f:SI 165 [ symlink_buf ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 157)
                (const_int 112 [0x70])) [0 symlink_buf+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 42 41 43 3 init/initramfs.c:425 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 165 [ symlink_buf ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 43 42 44 3 init/initramfs.c:425 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 47)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 4 [0x4])
        (nil)))
;; End of basic block 3 -> ( 5 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 154 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 154 155


;; Succ edge  5 [0.0%] 
;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 154 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 154 155
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  3 [100.0%]  (fallthru)
(note 44 43 45 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 45 44 46 4 init/initramfs.c:425 discrim 2 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 142 [ ret ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 46 45 47 4 init/initramfs.c:425 discrim 2 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 53)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155


;; Succ edge  5 [0.0%]  (fallthru)
;; Succ edge  6 [100.0%] 

;; Start of basic block ( 2 3 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 166
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 166
;; live  kill	 14 [lr]

;; Pred edge  2 [0.0%] 
;; Pred edge  3 [0.0%] 
;; Pred edge  4 [0.0%]  (fallthru)
(code_label 47 46 48 5 69 "" [2 uses])

(note 48 47 49 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 49 48 50 5 init/initramfs.c:426 (set (reg/f:SI 166)
        (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x1151e780>)) 167 {*arm_movsi_insn} (nil))

(insn 50 49 51 5 init/initramfs.c:426 (set (reg:SI 0 r0)
        (reg/f:SI 166)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x1151e780>)
        (nil)))

(call_insn 51 50 53 5 init/initramfs.c:426 (parallel [
            (call (mem:SI (symbol_ref:SI ("panic") [flags 0x41] <function_decl 0x10a86f00 panic>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_NORETURN (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 5 -> ()
;; lr  out 	 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 13 [sp] 25 [sfp] 26 [afp]



;; Start of basic block ( 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 167 168 169 170 171 172
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155
;; live  gen 	 167 168 169 170 171 172
;; live  kill	

;; Pred edge  4 [100.0%] 
(code_label 53 51 54 6 70 "" [1 uses])

(note 54 53 55 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 55 54 56 6 init/initramfs.c:428 (set (reg/f:SI 167)
        (reg/f:SI 157)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 56 55 57 6 init/initramfs.c:428 (set (reg:SI 168)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 57 56 58 6 init/initramfs.c:428 (set (mem/c/i:SI (plus:SI (reg/f:SI 157)
                (const_int 32 [0x20])) [0 state+0 S4 A32])
        (reg:SI 168)) 167 {*arm_movsi_insn} (nil))

(insn 58 57 59 6 init/initramfs.c:429 (set (reg/f:SI 169)
        (reg/f:SI 157)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 59 58 60 6 init/initramfs.c:429 (set (reg:DI 170)
        (const_int 0 [0x0])) 163 {*arm_movdi} (nil))

(insn 60 59 61 6 init/initramfs.c:429 (set (mem/c/i:DI (plus:SI (reg/f:SI 157)
                (const_int 24 [0x18])) [0 this_header+0 S8 A64])
        (reg:DI 170)) 163 {*arm_movdi} (nil))

(insn 61 60 62 6 init/initramfs.c:430 (set (reg/f:SI 171)
        (reg/f:SI 157)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 62 61 63 6 init/initramfs.c:430 (set (reg:SI 172)
        (reg:SI 168)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 63 62 225 6 init/initramfs.c:430 (set (mem/f/c/i:SI (reg/f:SI 157) [0 message+0 S4 A32])
        (reg:SI 168)) 167 {*arm_movsi_insn} (nil))
;; End of basic block 6 -> ( 27)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155


;; Succ edge  27 [100.0%]  (fallthru)

;; Start of basic block ( 27) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154
;; lr  def 	 24 [cc] 145 151 173
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155
;; live  gen 	 24 [cc] 145 151 173
;; live  kill	

;; Pred edge  27 [91.0%] 
(code_label 225 63 66 7 79 "" [1 uses])

(note 66 225 67 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 67 66 68 7 init/initramfs.c:432 (set (reg/f:SI 173)
        (reg/f:SI 229)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 68 67 69 7 init/initramfs.c:432 (set (reg/v:DI 145 [ saved_offset ])
        (mem/c/i:DI (plus:SI (reg/f:SI 229)
                (const_int 24 [0x18])) [0 this_header+0 S8 A64])) 163 {*arm_movdi} (nil))

(insn 69 68 70 7 init/initramfs.c:433 (set (reg:SI 151 [ D.26144 ])
        (zero_extend:SI (mem:QI (reg/v/f:SI 154 [ buf ]) [0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 70 69 71 7 init/initramfs.c:433 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 151 [ D.26144 ])
            (const_int 48 [0x30]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 71 70 72 7 init/initramfs.c:433 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 109)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
        (nil)))
;; End of basic block 7 -> ( 8 12)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 151 154 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 151 154 155


;; Succ edge  8 [28.0%]  (fallthru)
;; Succ edge  12 [72.0%] 

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145
;; lr  def 	 24 [cc] 174 175 176
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155
;; live  gen 	 24 [cc] 174 175 176
;; live  kill	

;; Pred edge  7 [28.0%]  (fallthru)
(note 72 71 73 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 73 72 74 8 init/initramfs.c:433 discrim 1 (set (reg:DI 175)
        (const_int 3 [0x3])) 163 {*arm_movdi} (nil))

(insn 74 73 75 8 init/initramfs.c:433 discrim 1 (set (reg:DI 174)
        (and:DI (reg/v:DI 145 [ saved_offset ])
            (reg:DI 175))) 64 {anddi3} (nil))

(insn 75 74 76 8 init/initramfs.c:433 discrim 1 (set (reg:SI 176)
        (subreg:SI (reg:DI 174) 0)) 167 {*arm_movsi_insn} (nil))

(insn 76 75 77 8 init/initramfs.c:433 discrim 1 (set (reg:SI 176)
        (ior:SI (reg:SI 176)
            (subreg:SI (reg:DI 174) 4))) 89 {*arm_iorsi3} (nil))

(insn 77 76 78 8 init/initramfs.c:433 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 176)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 78 77 79 8 init/initramfs.c:433 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 122)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 8 -> ( 9 14)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155


;; Succ edge  9 [0.0%]  (fallthru)
;; Succ edge  14 [100.0%] 

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155
;; lr  def 	 177 178 179 180
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155
;; live  gen 	 177 178 179 180
;; live  kill	

;; Pred edge  8 [0.0%]  (fallthru)
(note 79 78 80 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 80 79 81 9 init/initramfs.c:434 (set (reg/f:SI 177)
        (reg/f:SI 229)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 81 80 82 9 init/initramfs.c:434 (set (reg:SI 178)
        (reg:SI 176)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 82 81 83 9 init/initramfs.c:434 (set (mem/c/i:SI (plus:SI (reg/f:SI 229)
                (const_int 32 [0x20])) [0 state+0 S4 A32])
        (reg:SI 176)) 167 {*arm_movsi_insn} (nil))

(insn 83 82 84 9 init/initramfs.c:379 (set (reg/f:SI 179)
        (reg/f:SI 229)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 84 83 85 9 init/initramfs.c:379 (set (mem/c/i:SI (plus:SI (reg/f:SI 229)
                (const_int 8 [0x8])) [0 count+0 S4 A32])
        (reg/v:SI 155 [ len ])) 167 {*arm_movsi_insn} (nil))

(insn 85 84 86 9 init/initramfs.c:380 (set (reg/f:SI 180)
        (reg/f:SI 229)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 86 85 98 9 init/initramfs.c:380 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 229)
                (const_int 12 [0xc])) [0 victim+0 S4 A32])
        (reg/v/f:SI 154 [ buf ])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 9 -> ( 10)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155


;; Succ edge  10 [100.0%]  (fallthru)

;; Start of basic block ( 9 10) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 140 181 182 183 184 185 186 187 188
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155
;; live  gen 	 0 [r0] 24 [cc] 140 181 182 183 184 185 186 187 188
;; live  kill	 14 [lr]

;; Pred edge  9 [100.0%]  (fallthru)
;; Pred edge  10 [86.0%]  (dfs_back)
(code_label 98 86 87 10 74 "" [1 uses])

(note 87 98 88 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 88 87 89 10 init/initramfs.c:382 discrim 1 (set (reg/f:SI 181)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 89 88 90 10 init/initramfs.c:382 discrim 1 (set (reg/f:SI 182)
        (reg/f:SI 181)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 90 89 91 10 init/initramfs.c:382 discrim 1 (set (reg:SI 183 [ state ])
        (mem/c/i:SI (plus:SI (reg/f:SI 181)
                (const_int 32 [0x20])) [0 state+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 91 90 92 10 init/initramfs.c:382 discrim 1 (set (reg:SI 184)
        (const_int 56 [0x38])) 167 {*arm_movsi_insn} (nil))

(insn 92 91 93 10 init/initramfs.c:382 discrim 1 (set (reg:SI 185)
        (ashift:SI (reg:SI 183 [ state ])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (nil))

(insn 93 92 94 10 init/initramfs.c:382 discrim 1 (set (reg:SI 186)
        (plus:SI (reg/f:SI 181)
            (reg:SI 185))) 4 {*arm_addsi3} (nil))

(insn 94 93 95 10 init/initramfs.c:382 discrim 1 (set (reg/f:SI 187)
        (plus:SI (reg:SI 186)
            (const_int 56 [0x38]))) 4 {*arm_addsi3} (nil))

(insn 95 94 96 10 init/initramfs.c:382 discrim 1 (set (reg/f:SI 188)
        (mem/s/f/j:SI (reg/f:SI 187) [0 actions S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn 96 95 97 10 init/initramfs.c:382 discrim 1 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (reg/f:SI 188) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 249 {*call_value_reg_armv5} (nil)
    (nil))

(insn 97 96 99 10 init/initramfs.c:382 discrim 1 (set (reg:SI 140 [ D.26370 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 99 97 100 10 init/initramfs.c:382 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 140 [ D.26370 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 100 99 101 10 init/initramfs.c:382 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 98)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 8600 [0x2198])
        (nil)))
;; End of basic block 10 -> ( 10 11)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155


;; Succ edge  10 [86.0%]  (dfs_back)
;; Succ edge  11 [14.0%]  (fallthru)

;; Start of basic block ( 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155
;; lr  def 	 141 154 155 189 190
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155
;; live  gen 	 141 154 155 189 190
;; live  kill	

;; Pred edge  10 [14.0%]  (fallthru)
(note 101 100 102 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 102 101 103 11 init/initramfs.c:384 (set (reg/f:SI 189)
        (reg/f:SI 181)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 103 102 104 11 init/initramfs.c:384 (set (reg:SI 190 [ count ])
        (mem/c/i:SI (plus:SI (reg/f:SI 181)
                (const_int 8 [0x8])) [0 count+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 104 103 105 11 init/initramfs.c:384 (set (reg:SI 141 [ D.26367 ])
        (minus:SI (reg/v:SI 155 [ len ])
            (reg:SI 190 [ count ]))) 28 {*arm_subsi3_insn} (nil))

(insn 105 104 106 11 init/initramfs.c:436 (set (reg/v/f:SI 154 [ buf ])
        (plus:SI (reg/v/f:SI 154 [ buf ])
            (reg:SI 141 [ D.26367 ]))) 4 {*arm_addsi3} (nil))

(insn 106 105 109 11 init/initramfs.c:437 (set (reg/v:SI 155 [ len ])
        (minus:SI (reg/v:SI 155 [ len ])
            (reg:SI 141 [ D.26367 ]))) 28 {*arm_subsi3_insn} (nil))
;; End of basic block 11 -> ( 27)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155


;; Succ edge  27 [100.0%]  (fallthru)

;; Start of basic block ( 7) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 151 154 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 151 154 155
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  7 [72.0%] 
(code_label 109 106 110 12 72 "" [1 uses])

(note 110 109 111 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 111 110 112 12 init/initramfs.c:440 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 151 [ D.26144 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 112 111 113 12 init/initramfs.c:440 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 122)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 140 [0x8c])
        (nil)))
;; End of basic block 12 -> ( 13 14)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155


;; Succ edge  13 [98.6%]  (fallthru)
;; Succ edge  14 [1.4%] 

;; Start of basic block ( 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155
;; lr  def 	 24 [cc] 154 155 191 192 193
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155
;; live  gen 	 154 155 191 192 193
;; live  kill	 24 [cc]

;; Pred edge  12 [98.6%]  (fallthru)
(note 113 112 114 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 114 113 115 13 init/initramfs.c:441 (set (reg/v/f:SI 154 [ buf ])
        (plus:SI (reg/v/f:SI 154 [ buf ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 115 114 116 13 init/initramfs.c:442 (set (reg/v:SI 155 [ len ])
        (plus:SI (reg/v:SI 155 [ len ])
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (nil))

(insn 116 115 117 13 init/initramfs.c:443 (set (reg/f:SI 191)
        (reg/f:SI 229)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 117 116 118 13 init/initramfs.c:443 (set (reg:DI 192)
        (const_int 1 [0x1])) 163 {*arm_movdi} (nil))

(insn 118 117 119 13 init/initramfs.c:443 (parallel [
            (set (reg:DI 193)
                (plus:DI (reg/v:DI 145 [ saved_offset ])
                    (reg:DI 192)))
            (clobber (reg:CC 24 cc))
        ]) 1 {*arm_adddi3} (nil))

(insn 119 118 122 13 init/initramfs.c:443 (set (mem/c/i:DI (plus:SI (reg/f:SI 229)
                (const_int 24 [0x18])) [0 this_header+0 S8 A64])
        (reg:DI 193)) 163 {*arm_movdi} (nil))
;; End of basic block 13 -> ( 27)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155


;; Succ edge  27 [100.0%]  (fallthru)

;; Start of basic block ( 12 8) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 146 150 194 195 196
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 146 150 194 195 196
;; live  kill	 14 [lr]

;; Pred edge  12 [1.4%] 
;; Pred edge  8 [100.0%] 
(code_label 122 119 123 14 73 "" [2 uses])

(note 123 122 124 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 124 123 125 14 init/initramfs.c:446 (set (reg/f:SI 194)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 125 124 126 14 init/initramfs.c:446 (set (reg:DI 195)
        (const_int 0 [0x0])) 163 {*arm_movdi} (nil))

(insn 126 125 127 14 init/initramfs.c:446 (set (mem/c/i:DI (plus:SI (reg/f:SI 194)
                (const_int 24 [0x18])) [0 this_header+0 S8 A64])
        (reg:DI 195)) 163 {*arm_movdi} (nil))

(insn 127 126 128 14 init/initramfs.c:447 (set (reg:SI 150 [ len.416 ])
        (reg/v:SI 155 [ len ])) 167 {*arm_movsi_insn} (nil))

(insn 128 127 129 14 init/initramfs.c:447 (set (reg/f:SI 196)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -4 [0xfffffffffffffffc]))) 4 {*arm_addsi3} (nil))

(insn 129 128 130 14 init/initramfs.c:447 (set (reg:SI 0 r0)
        (reg/v/f:SI 154 [ buf ])) 167 {*arm_movsi_insn} (nil))

(insn 130 129 131 14 init/initramfs.c:447 (set (reg:SI 1 r1)
        (reg/v:SI 155 [ len ])) 167 {*arm_movsi_insn} (nil))

(insn 131 130 132 14 init/initramfs.c:447 (set (reg:SI 2 r2)
        (reg/f:SI 196)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -4 [0xfffffffffffffffc]))
        (nil)))

(call_insn 132 131 133 14 init/initramfs.c:447 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("decompress_method") [flags 0x41] <function_decl 0x114ad900 decompress_method>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 133 132 134 14 init/initramfs.c:447 (set (reg/v/f:SI 146 [ decompress ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 134 133 135 14 init/initramfs.c:448 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 146 [ decompress ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 135 134 136 14 init/initramfs.c:448 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 163)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 3017 [0xbc9])
        (nil)))
;; End of basic block 14 -> ( 15 18)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 150 154 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 150 154 155


;; Succ edge  15 [69.8%]  (fallthru)
;; Succ edge  18 [30.2%] 

;; Start of basic block ( 14) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 150 154 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 150 154
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 147 197 198 199 200
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 150 154 155
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc] 147 197 198 199 200
;; live  kill	 14 [lr]

;; Pred edge  14 [69.8%]  (fallthru)
(note 136 135 137 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 137 136 138 15 init/initramfs.c:449 (set (reg/f:SI 197)
        (symbol_ref:SI ("flush_buffer") [flags 0x3] <function_decl 0x114ad800 flush_buffer>)) 167 {*arm_movsi_insn} (nil))

(insn 138 137 139 15 init/initramfs.c:449 (set (reg:SI 198)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 139 138 140 15 init/initramfs.c:449 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg:SI 198)) 167 {*arm_movsi_insn} (nil))

(insn 140 139 141 15 init/initramfs.c:449 (set (reg/f:SI 199)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 141 140 142 15 init/initramfs.c:449 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 199)) 167 {*arm_movsi_insn} (nil))

(insn 142 141 143 15 init/initramfs.c:449 (set (reg/f:SI 200)
        (symbol_ref:SI ("error") [flags 0x3] <function_decl 0x11487300 error>)) 167 {*arm_movsi_insn} (nil))

(insn 143 142 144 15 init/initramfs.c:449 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 200)) 167 {*arm_movsi_insn} (nil))

(insn 144 143 145 15 init/initramfs.c:449 (set (reg:SI 0 r0)
        (reg/v/f:SI 154 [ buf ])) 167 {*arm_movsi_insn} (nil))

(insn 145 144 146 15 init/initramfs.c:449 (set (reg:SI 1 r1)
        (reg/v:SI 155 [ len ])) 167 {*arm_movsi_insn} (nil))

(insn 146 145 147 15 init/initramfs.c:449 (set (reg:SI 2 r2)
        (reg:SI 198)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 147 146 148 15 init/initramfs.c:449 (set (reg:SI 3 r3)
        (reg/f:SI 197)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("flush_buffer") [flags 0x3] <function_decl 0x114ad800 flush_buffer>)
        (nil)))

(call_insn 148 147 149 15 init/initramfs.c:449 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (reg/v/f:SI 146 [ decompress ]) [0 S4 A32])
                    (const_int 16 [0x10])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 249 {*call_value_reg_armv5} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 149 148 150 15 init/initramfs.c:449 (set (reg/v:SI 147 [ res ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 150 149 151 15 init/initramfs.c:451 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 147 [ res ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 151 150 152 15 init/initramfs.c:451 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 198)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 15 -> ( 16 23)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155


;; Succ edge  16 [0.0%]  (fallthru)
;; Succ edge  23 [100.0%] 

;; Start of basic block ( 15) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 201 202
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155
;; live  gen 	 24 [cc] 201 202
;; live  kill	

;; Pred edge  15 [0.0%]  (fallthru)
(note 152 151 153 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 153 152 154 16 init/initramfs.c:15 (set (reg/f:SI 201)
        (reg/f:SI 194)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 154 153 155 16 init/initramfs.c:15 (set (reg/f:SI 202 [ message ])
        (mem/f/c/i:SI (reg/f:SI 194) [0 message+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 155 154 156 16 init/initramfs.c:15 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 202 [ message ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 156 155 157 16 init/initramfs.c:15 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 198)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 8500 [0x2134])
        (nil)))
;; End of basic block 16 -> ( 17 23)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155


;; Succ edge  17 [15.0%]  (fallthru)
;; Succ edge  23 [85.0%] 

;; Start of basic block ( 16) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 203 204
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155
;; live  gen 	 203 204
;; live  kill	

;; Pred edge  16 [15.0%]  (fallthru)
(note 157 156 158 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 158 157 159 17 init/initramfs.c:16 (set (reg/f:SI 203)
        (reg/f:SI 194)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 159 158 160 17 init/initramfs.c:16 (set (reg/f:SI 204)
        (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x115a92d0>)) 167 {*arm_movsi_insn} (nil))

(insn 160 159 163 17 init/initramfs.c:16 (set (mem/f/c/i:SI (reg/f:SI 194) [0 message+0 S4 A32])
        (reg/f:SI 204)) 167 {*arm_movsi_insn} (nil))
;; End of basic block 17 -> ( 23)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155


;; Succ edge  23 [100.0%]  (fallthru)

;; Start of basic block ( 14) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 149
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155
;; live  gen 	 24 [cc] 149
;; live  kill	

;; Pred edge  14 [30.2%] 
(code_label 163 160 164 18 75 "" [1 uses])

(note 164 163 165 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 165 164 166 18 init/initramfs.c:453 (set (reg/f:SI 149 [ compress_name.420 ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 compress_name+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 166 165 167 18 init/initramfs.c:453 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 149 [ compress_name.420 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 167 166 168 18 init/initramfs.c:453 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 188)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 4 [0x4])
        (nil)))
;; End of basic block 18 -> ( 19 21)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 149 154 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 149 154 155


;; Succ edge  19 [100.0%]  (fallthru)
;; Succ edge  21 [0.0%] 

;; Start of basic block ( 18) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 149 154 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 205 206
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 149 154 155
;; live  gen 	 24 [cc] 205 206
;; live  kill	

;; Pred edge  18 [100.0%]  (fallthru)
(note 168 167 169 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 169 168 170 19 init/initramfs.c:454 (set (reg/f:SI 205)
        (reg/f:SI 194)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 170 169 171 19 init/initramfs.c:454 (set (reg/f:SI 206 [ message ])
        (mem/f/c/i:SI (reg/f:SI 194) [0 message+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 171 170 172 19 init/initramfs.c:454 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 206 [ message ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 172 171 173 19 init/initramfs.c:454 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 198)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9328 [0x2470])
        (nil)))
;; End of basic block 19 -> ( 20 23)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 149 154 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 149 154 155


;; Succ edge  20 [6.7%]  (fallthru)
;; Succ edge  23 [93.3%] 

;; Start of basic block ( 19) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 149 154 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 207 208 209 210 211 212
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 149 154 155
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 207 208 209 210 211 212
;; live  kill	 14 [lr]

;; Pred edge  19 [6.7%]  (fallthru)
(note 173 172 174 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn 174 173 175 20 init/initramfs.c:455 (set (reg/f:SI 207)
        (reg/f:SI 194)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 175 174 176 20 init/initramfs.c:455 (set (reg/f:SI 208)
        (plus:SI (reg/f:SI 194)
            (const_int 120 [0x78]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 120 [0x78])))
        (nil)))

(insn 176 175 177 20 init/initramfs.c:455 (set (reg/f:SI 209)
        (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x114fc3c0>)) 167 {*arm_movsi_insn} (nil))

(insn 177 176 178 20 init/initramfs.c:455 (set (reg:SI 0 r0)
        (reg/f:SI 208)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 120 [0x78])))
        (nil)))

(insn 178 177 179 20 init/initramfs.c:455 (set (reg:SI 1 r1)
        (const_int 64 [0x40])) 167 {*arm_movsi_insn} (nil))

(insn 179 178 180 20 init/initramfs.c:455 (set (reg:SI 2 r2)
        (reg/f:SI 209)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x114fc3c0>)
        (nil)))

(insn 180 179 181 20 init/initramfs.c:455 (set (reg:SI 3 r3)
        (reg/f:SI 149 [ compress_name.420 ])) 167 {*arm_movsi_insn} (nil))

(call_insn 181 180 182 20 init/initramfs.c:455 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("snprintf") [flags 0x41] <function_decl 0x5115e680 snprintf>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 182 181 183 20 init/initramfs.c:458 (set (reg/f:SI 210)
        (reg/f:SI 194)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 183 182 184 20 init/initramfs.c:458 (set (reg/f:SI 211)
        (reg/f:SI 194)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 184 183 185 20 init/initramfs.c:458 (set (reg/f:SI 212)
        (reg/f:SI 208)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 120 [0x78])))
        (nil)))

(insn 185 184 188 20 init/initramfs.c:458 (set (mem/f/c/i:SI (reg/f:SI 194) [0 message+0 S4 A32])
        (reg/f:SI 208)) 167 {*arm_movsi_insn} (nil))
;; End of basic block 20 -> ( 23)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155


;; Succ edge  23 [100.0%]  (fallthru)

;; Start of basic block ( 18) -> 21
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 213 214
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155
;; live  gen 	 24 [cc] 213 214
;; live  kill	

;; Pred edge  18 [0.0%] 
(code_label 188 185 189 21 77 "" [1 uses])

(note 189 188 190 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn 190 189 191 21 init/initramfs.c:15 (set (reg/f:SI 213)
        (reg/f:SI 194)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 191 190 192 21 init/initramfs.c:15 (set (reg/f:SI 214 [ message ])
        (mem/f/c/i:SI (reg/f:SI 194) [0 message+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 192 191 193 21 init/initramfs.c:15 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 214 [ message ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 193 192 194 21 init/initramfs.c:15 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 198)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 8500 [0x2134])
        (nil)))
;; End of basic block 21 -> ( 22 23)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155


;; Succ edge  22 [15.0%]  (fallthru)
;; Succ edge  23 [85.0%] 

;; Start of basic block ( 21) -> 22
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 215 216
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155
;; live  gen 	 215 216
;; live  kill	

;; Pred edge  21 [15.0%]  (fallthru)
(note 194 193 195 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(insn 195 194 196 22 init/initramfs.c:16 (set (reg/f:SI 215)
        (reg/f:SI 194)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 196 195 197 22 init/initramfs.c:16 (set (reg/f:SI 216)
        (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x11505e40>)) 167 {*arm_movsi_insn} (nil))

(insn 197 196 198 22 init/initramfs.c:16 (set (mem/f/c/i:SI (reg/f:SI 194) [0 message+0 S4 A32])
        (reg/f:SI 216)) 167 {*arm_movsi_insn} (nil))
;; End of basic block 22 -> ( 23)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155


;; Succ edge  23 [100.0%]  (fallthru)

;; Start of basic block ( 16 20 21 15 19 17 22) -> 23
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 217 218
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155
;; live  gen 	 24 [cc] 217 218
;; live  kill	

;; Pred edge  16 [85.0%] 
;; Pred edge  20 [100.0%]  (fallthru)
;; Pred edge  21 [85.0%] 
;; Pred edge  15 [100.0%] 
;; Pred edge  19 [93.3%] 
;; Pred edge  17 [100.0%]  (fallthru)
;; Pred edge  22 [100.0%]  (fallthru)
(code_label 198 197 199 23 76 "" [4 uses])

(note 199 198 200 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(insn 200 199 201 23 init/initramfs.c:462 (set (reg/f:SI 217)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 201 200 202 23 init/initramfs.c:462 (set (reg:SI 218 [ state ])
        (mem/c/i:SI (plus:SI (reg/f:SI 217)
                (const_int 32 [0x20])) [0 state+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 202 201 203 23 init/initramfs.c:462 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 218 [ state ])
            (const_int 7 [0x7]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 203 202 204 23 init/initramfs.c:462 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 213)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 23 -> ( 24 26)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155


;; Succ edge  24 [0.0%]  (fallthru)
;; Succ edge  26 [100.0%] 

;; Start of basic block ( 23) -> 24
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 219 220
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155
;; live  gen 	 24 [cc] 219 220
;; live  kill	

;; Pred edge  23 [0.0%]  (fallthru)
(note 204 203 205 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(insn 205 204 206 24 init/initramfs.c:15 (set (reg/f:SI 219)
        (reg/f:SI 217)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 206 205 207 24 init/initramfs.c:15 (set (reg/f:SI 220 [ message ])
        (mem/f/c/i:SI (reg/f:SI 217) [0 message+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 207 206 208 24 init/initramfs.c:15 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 220 [ message ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 208 207 209 24 init/initramfs.c:15 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 213)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 8500 [0x2134])
        (nil)))
;; End of basic block 24 -> ( 25 26)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155


;; Succ edge  25 [15.0%]  (fallthru)
;; Succ edge  26 [85.0%] 

;; Start of basic block ( 24) -> 25
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 221 222
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155
;; live  gen 	 221 222
;; live  kill	

;; Pred edge  24 [15.0%]  (fallthru)
(note 209 208 210 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(insn 210 209 211 25 init/initramfs.c:16 (set (reg/f:SI 221)
        (reg/f:SI 217)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 211 210 212 25 init/initramfs.c:16 (set (reg/f:SI 222)
        (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x11505e40>)) 167 {*arm_movsi_insn} (nil))

(insn 212 211 213 25 init/initramfs.c:16 (set (mem/f/c/i:SI (reg/f:SI 217) [0 message+0 S4 A32])
        (reg/f:SI 222)) 167 {*arm_movsi_insn} (nil))
;; End of basic block 25 -> ( 26)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155


;; Succ edge  26 [100.0%]  (fallthru)

;; Start of basic block ( 23 24 25) -> 26
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155
;; lr  def 	 24 [cc] 148 154 155 223 224 225 226
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155
;; live  gen 	 148 154 155 223 224 225 226
;; live  kill	 24 [cc]

;; Pred edge  23 [100.0%] 
;; Pred edge  24 [85.0%] 
;; Pred edge  25 [100.0%]  (fallthru)
(code_label 213 212 214 26 78 "" [2 uses])

(note 214 213 215 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(insn 215 214 216 26 init/initramfs.c:464 (set (reg/f:SI 223)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 216 215 217 26 init/initramfs.c:464 (set (reg:SI 148 [ my_inptr.423 ])
        (mem/c/i:SI (reg/f:SI 223) [0 my_inptr+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 217 216 218 26 init/initramfs.c:464 (set (reg/f:SI 224)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 218 217 219 26 init/initramfs.c:464 (set (reg:DI 225 [ my_inptr.423 ])
        (zero_extend:DI (reg:SI 148 [ my_inptr.423 ]))) 138 {*arm_zero_extendsidi2} (nil))

(insn 219 218 220 26 init/initramfs.c:464 (parallel [
            (set (reg:DI 226)
                (plus:DI (reg:DI 225 [ my_inptr.423 ])
                    (reg/v:DI 145 [ saved_offset ])))
            (clobber (reg:CC 24 cc))
        ]) 1 {*arm_adddi3} (nil))

(insn 220 219 221 26 init/initramfs.c:464 (set (mem/c/i:DI (plus:SI (reg/f:SI 224)
                (const_int 24 [0x18])) [0 this_header+0 S8 A64])
        (reg:DI 226)) 163 {*arm_movdi} (nil))

(insn 221 220 222 26 init/initramfs.c:465 (set (reg/v/f:SI 154 [ buf ])
        (plus:SI (reg/v/f:SI 154 [ buf ])
            (reg:SI 148 [ my_inptr.423 ]))) 4 {*arm_addsi3} (nil))

(insn 222 221 223 26 init/initramfs.c:466 (set (reg/v:SI 155 [ len ])
        (minus:SI (reg/v:SI 155 [ len ])
            (reg:SI 148 [ my_inptr.423 ]))) 28 {*arm_subsi3_insn} (nil))
;; End of basic block 26 -> ( 27)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155


;; Succ edge  27 [100.0%]  (fallthru)

;; Start of basic block ( 13 6 11 26) -> 27
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 155
;; lr  def 	 24 [cc] 227 228 229 230 231 232 233 234 235
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155
;; live  gen 	 24 [cc] 227 228 229 230 231 232 233 234 235
;; live  kill	

;; Pred edge  13 [100.0%]  (fallthru)
;; Pred edge  6 [100.0%]  (fallthru)
;; Pred edge  11 [100.0%]  (fallthru)
;; Pred edge  26 [100.0%]  (fallthru)
(code_label 223 222 224 27 71 "" [0 uses])

(note 224 223 226 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(insn 226 224 227 27 init/initramfs.c:431 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 155 [ len ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn 227 226 228 27 init/initramfs.c:431 discrim 1 (set (reg:SI 228)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (nil))

(insn 228 227 229 27 init/initramfs.c:431 discrim 1 (set (reg:QI 227)
        (subreg:QI (reg:SI 228) 0)) 178 {*arm_movqi_insn} (nil))

(insn 229 228 230 27 init/initramfs.c:431 discrim 1 (set (reg/f:SI 229)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 230 229 231 27 init/initramfs.c:431 discrim 1 (set (reg/f:SI 231 [ message ])
        (mem/f/c/i:SI (reg/f:SI 229) [0 message+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 231 230 232 27 init/initramfs.c:431 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 231 [ message ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn 232 231 233 27 init/initramfs.c:431 discrim 1 (set (reg:SI 232)
        (eq:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (nil))

(insn 233 232 234 27 init/initramfs.c:431 discrim 1 (set (reg:QI 230)
        (subreg:QI (reg:SI 232) 0)) 178 {*arm_movqi_insn} (nil))

(insn 234 233 235 27 init/initramfs.c:431 discrim 1 (set (reg:SI 233)
        (and:SI (subreg:SI (reg:QI 227) 0)
            (subreg:SI (reg:QI 230) 0))) 67 {*arm_andsi3_insn} (nil))

(insn 235 234 236 27 init/initramfs.c:431 discrim 1 (set (reg:QI 234)
        (subreg:QI (reg:SI 233) 0)) 178 {*arm_movqi_insn} (nil))

(insn 236 235 237 27 init/initramfs.c:431 discrim 1 (set (reg:SI 235)
        (zero_extend:SI (reg:QI 234))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 237 236 238 27 init/initramfs.c:431 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 235)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 238 237 239 27 init/initramfs.c:431 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 225)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
        (nil)))
;; End of basic block 27 -> ( 7 28)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155


;; Succ edge  7 [91.0%] 
;; Succ edge  28 [9.0%]  (fallthru)

;; Start of basic block ( 27) -> 28
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134 135 136 236
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 134 135 136 236
;; live  kill	

;; Pred edge  27 [9.0%]  (fallthru)
(note 239 238 240 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(insn 240 239 241 28 init/initramfs.c:110 (set (reg/f:SI 236)
        (reg/f:SI 229)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 241 240 242 28 init/initramfs.c:110 (set (reg/v/f:SI 135 [ de ])
        (mem/s/f/j/c:SI (plus:SI (reg/f:SI 229)
                (const_int 184 [0xb8])) [0 dir_list.next+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 242 241 243 28 init/initramfs.c:110 (set (reg/v/f:SI 134 [ de.751 ])
        (mem/s/f/j:SI (reg/v/f:SI 135 [ de ]) [0 <variable>.list.next+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 243 242 268 28 init/initramfs.c:110 (set (reg/v/f:SI 136 [ __mptr ])
        (reg/v/f:SI 134 [ de.751 ])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 28 -> ( 30)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135


;; Succ edge  30 [100.0%]  (fallthru)

;; Start of basic block ( 30) -> 29
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134 135 137 138 139 237 238
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135
;; live  gen 	 0 [r0] 1 [r1] 133 134 135 137 138 139 237 238
;; live  kill	 14 [lr]

;; Pred edge  30 [0.0%] 
(code_label 268 243 246 29 81 "" [1 uses])

(note 246 268 247 29 [bb 29] NOTE_INSN_BASIC_BLOCK)

(insn 247 246 248 29 include/linux/list.h:106 (set (reg/f:SI 139 [ D.26385 ])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 135 [ de ])
                (const_int 4 [0x4])) [0 <variable>.list.prev+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 248 247 249 29 include/linux/list.h:106 (set (reg/f:SI 138 [ D.26386 ])
        (mem/s/f/j:SI (reg/v/f:SI 135 [ de ]) [0 <variable>.list.next+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 249 248 250 29 include/linux/list.h:88 (set (mem/s/f/j:SI (plus:SI (reg/f:SI 138 [ D.26386 ])
                (const_int 4 [0x4])) [0 <variable>.prev+0 S4 A32])
        (reg/f:SI 139 [ D.26385 ])) 167 {*arm_movsi_insn} (nil))

(insn 250 249 251 29 include/linux/list.h:89 (set (mem/s/f/j:SI (reg/f:SI 139 [ D.26385 ]) [0 <variable>.next+0 S4 A32])
        (reg/f:SI 138 [ D.26386 ])) 167 {*arm_movsi_insn} (nil))

(insn 251 250 252 29 include/linux/list.h:107 (set (reg:SI 237)
        (const_int 1048832 [0x100100])) 167 {*arm_movsi_insn} (nil))

(insn 252 251 253 29 include/linux/list.h:107 (set (mem/s/f/j:SI (reg/v/f:SI 135 [ de ]) [0 <variable>.list.next+0 S4 A32])
        (reg:SI 237)) 167 {*arm_movsi_insn} (nil))

(insn 253 252 254 29 include/linux/list.h:108 (set (reg:SI 238)
        (const_int 2097664 [0x200200])) 167 {*arm_movsi_insn} (nil))

(insn 254 253 255 29 include/linux/list.h:108 (set (mem/s/f/j:SI (plus:SI (reg/v/f:SI 135 [ de ])
                (const_int 4 [0x4])) [0 <variable>.list.prev+0 S4 A32])
        (reg:SI 238)) 167 {*arm_movsi_insn} (nil))

(insn 255 254 256 29 init/initramfs.c:112 (set (reg:SI 0 r0)
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 135 [ de ])
                (const_int 8 [0x8])) [0 <variable>.name+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 256 255 257 29 init/initramfs.c:112 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 135 [ de ])
                (const_int 12 [0xc])) [0 <variable>.mtime+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn 257 256 258 29 init/initramfs.c:112 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("do_utime") [flags 0x3] <function_decl 0x11487700 do_utime>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 258 257 259 29 init/initramfs.c:113 (set (reg:SI 0 r0)
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 135 [ de ])
                (const_int 8 [0x8])) [0 <variable>.name+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn 259 258 260 29 init/initramfs.c:113 (parallel [
            (call (mem:SI (symbol_ref:SI ("kfree") [flags 0x41] <function_decl 0x10c2b080 kfree>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 260 259 261 29 init/initramfs.c:114 (set (reg:SI 0 r0)
        (reg/v/f:SI 135 [ de ])) 167 {*arm_movsi_insn} (nil))

(call_insn 261 260 262 29 init/initramfs.c:114 (parallel [
            (call (mem:SI (symbol_ref:SI ("kfree") [flags 0x41] <function_decl 0x10c2b080 kfree>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 262 261 263 29 init/initramfs.c:110 discrim 2 (set (reg/v/f:SI 137 [ __mptr ])
        (mem/s/f/j:SI (reg/v/f:SI 134 [ de.751 ]) [0 <variable>.list.next+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 263 262 264 29 init/initramfs.c:110 discrim 2 (set (reg/v/f:SI 133 [ de.752 ])
        (reg/v/f:SI 137 [ __mptr ])) 167 {*arm_movsi_insn} (nil))

(insn 264 263 265 29 init/initramfs.c:110 discrim 2 (set (reg/v/f:SI 135 [ de ])
        (reg/v/f:SI 134 [ de.751 ])) 167 {*arm_movsi_insn} (nil))

(insn 265 264 266 29 init/initramfs.c:110 discrim 2 (set (reg/v/f:SI 134 [ de.751 ])
        (reg/v/f:SI 137 [ __mptr ])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 29 -> ( 30)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135


;; Succ edge  30 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 28 29) -> 30
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc] 239 240
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135
;; live  gen 	 24 [cc] 239 240
;; live  kill	

;; Pred edge  28 [100.0%]  (fallthru)
;; Pred edge  29 [100.0%]  (fallthru,dfs_back)
(code_label 266 265 267 30 80 "" [0 uses])

(note 267 266 269 30 [bb 30] NOTE_INSN_BASIC_BLOCK)

(insn 269 267 270 30 init/initramfs.c:110 (set (reg/f:SI 239)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 270 269 271 30 init/initramfs.c:110 (set (reg/f:SI 240)
        (plus:SI (reg/f:SI 239)
            (const_int 184 [0xb8]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 184 [0xb8])))
        (nil)))

(insn 271 270 272 30 init/initramfs.c:110 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 135 [ de ])
            (reg/f:SI 240))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 272 271 273 30 init/initramfs.c:110 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 268)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 4 [0x4])
        (nil)))
;; End of basic block 30 -> ( 29 31)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135


;; Succ edge  29 [0.0%] 
;; Succ edge  31 [100.0%]  (fallthru)

;; Start of basic block ( 30) -> 31
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 153 241 242 243 245 246
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 153 241 242 243 245 246
;; live  kill	 14 [lr]

;; Pred edge  30 [100.0%]  (fallthru)
(note 273 272 274 31 [bb 31] NOTE_INSN_BASIC_BLOCK)

(insn 274 273 275 31 init/initramfs.c:469 (set (reg/f:SI 241)
        (reg/f:SI 239)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 275 274 276 31 init/initramfs.c:469 (set (reg:SI 0 r0)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 239)
                (const_int 116 [0x74])) [0 name_buf+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn 276 275 277 31 init/initramfs.c:469 (parallel [
            (call (mem:SI (symbol_ref:SI ("kfree") [flags 0x41] <function_decl 0x10c2b080 kfree>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 277 276 278 31 init/initramfs.c:470 (set (reg/f:SI 242)
        (reg/f:SI 239)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 278 277 279 31 init/initramfs.c:470 (set (reg:SI 0 r0)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 239)
                (const_int 112 [0x70])) [0 symlink_buf+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn 279 278 280 31 init/initramfs.c:470 (parallel [
            (call (mem:SI (symbol_ref:SI ("kfree") [flags 0x41] <function_decl 0x10c2b080 kfree>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 280 279 281 31 init/initramfs.c:471 (set (reg/f:SI 243)
        (reg/f:SI 239)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 281 280 282 31 init/initramfs.c:471 (set (reg:SI 0 r0)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 239)
                (const_int 4 [0x4])) [0 header_buf+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn 282 281 283 31 init/initramfs.c:471 (parallel [
            (call (mem:SI (symbol_ref:SI ("kfree") [flags 0x41] <function_decl 0x10c2b080 kfree>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 283 282 284 31 init/initramfs.c:473 (set (reg/f:SI 245)
        (reg/f:SI 239)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 284 283 285 31 init/initramfs.c:473 (set (reg/f:SI 246 [ message ])
        (mem/f/c/i:SI (reg/f:SI 239) [0 message+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 285 284 289 31 init/initramfs.c:473 (set (reg/f:SI 153 [ <result> ])
        (reg/f:SI 246 [ message ])) 167 {*arm_movsi_insn} (nil))

(insn 289 285 295 31 init/initramfs.c:473 (set (reg/i:SI 0 r0)
        (reg/f:SI 246 [ message ])) 167 {*arm_movsi_insn} (nil))

(insn 295 289 0 31 init/initramfs.c:473 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 31 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
rescanning insn with uid = 18.
deleting insn with uid = 18.
rescanning insn with uid = 19.
deleting insn with uid = 19.
rescanning insn with uid = 23.
deleting insn with uid = 23.
rescanning insn with uid = 24.
deleting insn with uid = 24.
rescanning insn with uid = 27.
deleting insn with uid = 27.
rescanning insn with uid = 28.
deleting insn with uid = 28.
rescanning insn with uid = 33.
deleting insn with uid = 33.
rescanning insn with uid = 34.
deleting insn with uid = 34.
rescanning insn with uid = 35.
deleting insn with uid = 35.
rescanning insn with uid = 36.
deleting insn with uid = 36.
rescanning insn with uid = 40.
deleting insn with uid = 40.
rescanning insn with uid = 41.
deleting insn with uid = 41.
rescanning insn with uid = 45.
deleting insn with uid = 45.
rescanning insn with uid = 55.
deleting insn with uid = 55.
rescanning insn with uid = 57.
deleting insn with uid = 57.
rescanning insn with uid = 58.
deleting insn with uid = 58.
rescanning insn with uid = 60.
deleting insn with uid = 60.
rescanning insn with uid = 61.
deleting insn with uid = 61.
rescanning insn with uid = 62.
deleting insn with uid = 62.
rescanning insn with uid = 63.
deleting insn with uid = 63.
rescanning insn with uid = 67.
deleting insn with uid = 67.
rescanning insn with uid = 68.
deleting insn with uid = 68.
rescanning insn with uid = 80.
deleting insn with uid = 80.
rescanning insn with uid = 81.
deleting insn with uid = 81.
rescanning insn with uid = 82.
deleting insn with uid = 82.
rescanning insn with uid = 83.
deleting insn with uid = 83.
rescanning insn with uid = 84.
deleting insn with uid = 84.
rescanning insn with uid = 85.
deleting insn with uid = 85.
rescanning insn with uid = 86.
deleting insn with uid = 86.
rescanning insn with uid = 89.
deleting insn with uid = 89.
rescanning insn with uid = 90.
deleting insn with uid = 90.
rescanning insn with uid = 94.
deleting insn with uid = 94.
rescanning insn with uid = 102.
deleting insn with uid = 102.
rescanning insn with uid = 103.
deleting insn with uid = 103.
rescanning insn with uid = 116.
deleting insn with uid = 116.
rescanning insn with uid = 119.
deleting insn with uid = 119.
rescanning insn with uid = 130.
deleting insn with uid = 130.
rescanning insn with uid = 145.
deleting insn with uid = 145.
rescanning insn with uid = 146.
deleting insn with uid = 146.
rescanning insn with uid = 153.
deleting insn with uid = 153.
rescanning insn with uid = 154.
deleting insn with uid = 154.
rescanning insn with uid = 158.
deleting insn with uid = 158.
rescanning insn with uid = 160.
deleting insn with uid = 160.
rescanning insn with uid = 169.
deleting insn with uid = 169.
rescanning insn with uid = 170.
deleting insn with uid = 170.
rescanning insn with uid = 174.
deleting insn with uid = 174.
rescanning insn with uid = 175.
deleting insn with uid = 175.
rescanning insn with uid = 182.
deleting insn with uid = 182.
rescanning insn with uid = 183.
deleting insn with uid = 183.
rescanning insn with uid = 184.
deleting insn with uid = 184.
rescanning insn with uid = 185.
deleting insn with uid = 185.
rescanning insn with uid = 190.
deleting insn with uid = 190.
rescanning insn with uid = 191.
deleting insn with uid = 191.
rescanning insn with uid = 195.
deleting insn with uid = 195.
rescanning insn with uid = 197.
deleting insn with uid = 197.
rescanning insn with uid = 205.
deleting insn with uid = 205.
rescanning insn with uid = 206.
deleting insn with uid = 206.
rescanning insn with uid = 210.
deleting insn with uid = 210.
rescanning insn with uid = 212.
deleting insn with uid = 212.
rescanning insn with uid = 240.
deleting insn with uid = 240.
rescanning insn with uid = 241.
deleting insn with uid = 241.
rescanning insn with uid = 242.
deleting insn with uid = 242.
rescanning insn with uid = 243.
deleting insn with uid = 243.
rescanning insn with uid = 265.
deleting insn with uid = 265.
rescanning insn with uid = 274.
deleting insn with uid = 274.
rescanning insn with uid = 275.
deleting insn with uid = 275.
rescanning insn with uid = 277.
deleting insn with uid = 277.
rescanning insn with uid = 278.
deleting insn with uid = 278.
rescanning insn with uid = 280.
deleting insn with uid = 280.
rescanning insn with uid = 281.
deleting insn with uid = 281.
rescanning insn with uid = 283.
deleting insn with uid = 283.
rescanning insn with uid = 284.
deleting insn with uid = 284.
rescanning insn with uid = 289.
deleting insn with uid = 289.
ending the processing of deferred insns

;; Function do_copy (do_copy)[0:1329] (unlikely executed)


6 basic blocks, 6 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, probably never executed.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(11){ }d-1(12){ }d-1(13){ }d-1(14){ }d-1(25){ }d-1(26){ }}
;; bb 0 artificial_uses: { }

Successors:  2 [100.0%]  (fallthru)


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, probably never executed.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  3 [0.0%]  (fallthru) 4 [100.0%] 


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 3, probably never executed.
Predecessors:  2 [0.0%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  5 [100.0%]  (fallthru)


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 9997, probably never executed.
Predecessors:  2 [100.0%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  5 [100.0%]  (fallthru)


Basic block 5 , prev 4, next 1, loop_depth 0, count 0, freq 10000, probably never executed.
Predecessors:  3 [100.0%]  (fallthru) 4 [100.0%]  (fallthru)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  EXIT [100.0%]  (fallthru)


Basic block 1 , prev 5, loop_depth 0, count 0, freq 10000, probably never executed.
Predecessors:  5 [100.0%]  (fallthru)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(11){ }u-1(13){ }u-1(14){ }u-1(25){ }}

Successors: 


starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 8 (  1.3)


do_copy

Dataflow summary:
def_info->table_size = 0, use_info->table_size = 0
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={12d,7u} r1={9d,3u} r2={8d,2u} r3={6d} r11={1d,5u} r12={6d} r13={1d,10u} r14={6d,1u} r15={5d} r16={5d} r17={5d} r18={5d} r19={5d} r20={5d} r21={5d} r22={5d} r23={5d} r24={8d,1u} r25={1d,5u} r26={1d,4u} r27={5d} r28={5d} r29={5d} r30={5d} r31={5d} r32={5d} r33={5d} r34={5d} r35={5d} r36={5d} r37={5d} r38={5d} r39={5d} r40={5d} r41={5d} r42={5d} r43={5d} r44={5d} r45={5d} r46={5d} r47={5d} r48={5d} r49={5d} r50={5d} r51={5d} r52={5d} r53={5d} r54={5d} r55={5d} r56={5d} r57={5d} r58={5d} r59={5d} r60={5d} r61={5d} r62={5d} r63={5d} r64={5d} r65={5d} r66={5d} r67={5d} r68={5d} r69={5d} r70={5d} r71={5d} r72={5d} r73={5d} r74={5d} r75={5d} r76={5d} r77={5d} r78={5d} r79={5d} r80={5d} r81={5d} r82={5d} r83={5d} r84={5d} r85={5d} r86={5d} r87={5d} r88={5d} r89={5d} r90={5d} r91={5d} r92={5d} r93={5d} r94={5d} r95={5d} r96={5d} r97={5d} r98={5d} r99={5d} r100={5d} r101={5d} r102={5d} r103={5d} r104={5d} r105={5d} r106={5d} r107={5d} r108={5d} r109={5d} r110={5d} r111={5d} r112={5d} r113={5d} r114={5d} r115={5d} r116={5d} r117={5d} r118={5d} r119={5d} r120={5d} r121={5d} r122={5d} r123={5d} r124={5d} r125={5d} r126={5d} r127={5d} r133={1d,3u} r134={1d,3u} r135={2d,1u} r136={1d,2u} r137={1d,2u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r171={1d,1u} r172={1d,1u} r173={1d,1u} r174={1d,1u} r175={1d,1u} r176={1d,1u} r177={1d,1u} r178={1d,1u} r179={1d,1u} r180={1d,1u} 
;;    total ref usage 750{658d,92u,0e} in 76{71 regular + 5 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(11){ }d-1(12){ }d-1(13){ }d-1(14){ }d-1(25){ }d-1(26){ }}
;; bb 0 artificial_uses: { }

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 2 )->[3]->( 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 2 )->[4]->( 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 3 4 )->[5]->( 1 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 5 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(11){ }u-1(13){ }u-1(14){ }u-1(25){ }}

Finding needed instructions:
  Adding insn 10 to worklist
  Adding insn 49 to worklist
  Adding insn 46 to worklist
  Adding insn 41 to worklist
  Adding insn 35 to worklist
  Adding insn 28 to worklist
  Adding insn 25 to worklist
  Adding insn 20 to worklist
  Adding insn 17 to worklist
  Adding insn 81 to worklist
  Adding insn 78 to worklist
  Adding insn 72 to worklist
  Adding insn 67 to worklist
  Adding insn 60 to worklist
  Adding insn 95 to worklist
Finished finding needed instructions:
processing block 5 lr out =  0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 89 to worklist
  Adding insn 85 to worklist
processing block 3 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
  Adding insn 50 to worklist
  Adding insn 48 to worklist
  Adding insn 47 to worklist
  Adding insn 45 to worklist
  Adding insn 44 to worklist
  Adding insn 43 to worklist
  Adding insn 42 to worklist
  Adding insn 40 to worklist
  Adding insn 39 to worklist
  Adding insn 38 to worklist
  Adding insn 37 to worklist
  Adding insn 36 to worklist
  Adding insn 34 to worklist
  Adding insn 33 to worklist
  Adding insn 32 to worklist
  Adding insn 31 to worklist
  Adding insn 30 to worklist
  Adding insn 29 to worklist
  Adding insn 27 to worklist
  Adding insn 26 to worklist
  Adding insn 24 to worklist
  Adding insn 23 to worklist
  Adding insn 22 to worklist
  Adding insn 21 to worklist
  Adding insn 19 to worklist
  Adding insn 18 to worklist
  Adding insn 16 to worklist
  Adding insn 15 to worklist
  Adding insn 14 to worklist
  Adding insn 13 to worklist
  Adding insn 12 to worklist
processing block 4 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
  Adding insn 82 to worklist
  Adding insn 80 to worklist
  Adding insn 79 to worklist
  Adding insn 77 to worklist
  Adding insn 76 to worklist
  Adding insn 75 to worklist
  Adding insn 74 to worklist
  Adding insn 73 to worklist
  Adding insn 71 to worklist
  Adding insn 70 to worklist
  Adding insn 69 to worklist
  Adding insn 68 to worklist
  Adding insn 66 to worklist
  Adding insn 65 to worklist
  Adding insn 64 to worklist
  Adding insn 63 to worklist
  Adding insn 62 to worklist
  Adding insn 61 to worklist
  Adding insn 59 to worklist
  Adding insn 58 to worklist
  Adding insn 57 to worklist
  Adding insn 56 to worklist
  Adding insn 55 to worklist
processing block 2 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137
  Adding insn 9 to worklist
  Adding insn 8 to worklist
  Adding insn 7 to worklist
  Adding insn 6 to worklist
  Adding insn 5 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 10 (  1.7)
;; Following path with 37 sets: 2 4 
deferring rescan insn with uid = 7.
deferring rescan insn with uid = 8.
deferring rescan insn with uid = 55.
deferring rescan insn with uid = 56.
deferring rescan insn with uid = 57.
deferring rescan insn with uid = 58.
deferring rescan insn with uid = 61.
deferring rescan insn with uid = 62.
deferring rescan insn with uid = 63.
deferring rescan insn with uid = 64.
deferring rescan insn with uid = 65.
deferring rescan insn with uid = 67.
deferring rescan insn with uid = 68.
deferring rescan insn with uid = 69.
deferring rescan insn with uid = 70.
deferring rescan insn with uid = 72.
deferring rescan insn with uid = 73.
deferring rescan insn with uid = 75.
deferring rescan insn with uid = 76.
deferring rescan insn with uid = 78.
deferring rescan insn with uid = 79.
deferring rescan insn with uid = 81.
;; Following path with 54 sets: 2 3 
deferring rescan insn with uid = 12.
deferring rescan insn with uid = 13.
deferring rescan insn with uid = 14.
deferring rescan insn with uid = 15.
deferring rescan insn with uid = 18.
deferring rescan insn with uid = 19.
deferring rescan insn with uid = 21.
deferring rescan insn with uid = 22.
deferring rescan insn with uid = 23.
deferring rescan insn with uid = 24.
deferring rescan insn with uid = 26.
deferring rescan insn with uid = 27.
deferring rescan insn with uid = 29.
deferring rescan insn with uid = 30.
deferring rescan insn with uid = 31.
deferring rescan insn with uid = 32.
deferring rescan insn with uid = 33.
deferring rescan insn with uid = 35.
deferring rescan insn with uid = 36.
deferring rescan insn with uid = 38.
deferring rescan insn with uid = 39.
deferring rescan insn with uid = 41.
deferring rescan insn with uid = 42.
deferring rescan insn with uid = 43.
deferring rescan insn with uid = 44.
deferring rescan insn with uid = 46.
deferring rescan insn with uid = 47.
deferring rescan insn with uid = 49.
;; Following path with 3 sets: 5 
deferring rescan insn with uid = 89.


try_optimize_cfg iteration 1



do_copy

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={12d,7u} r1={9d,3u} r2={8d,2u} r3={6d} r11={1d,5u} r12={6d} r13={1d,10u} r14={6d,1u} r15={5d} r16={5d} r17={5d} r18={5d} r19={5d} r20={5d} r21={5d} r22={5d} r23={5d} r24={8d,1u} r25={1d,5u} r26={1d,4u} r27={5d} r28={5d} r29={5d} r30={5d} r31={5d} r32={5d} r33={5d} r34={5d} r35={5d} r36={5d} r37={5d} r38={5d} r39={5d} r40={5d} r41={5d} r42={5d} r43={5d} r44={5d} r45={5d} r46={5d} r47={5d} r48={5d} r49={5d} r50={5d} r51={5d} r52={5d} r53={5d} r54={5d} r55={5d} r56={5d} r57={5d} r58={5d} r59={5d} r60={5d} r61={5d} r62={5d} r63={5d} r64={5d} r65={5d} r66={5d} r67={5d} r68={5d} r69={5d} r70={5d} r71={5d} r72={5d} r73={5d} r74={5d} r75={5d} r76={5d} r77={5d} r78={5d} r79={5d} r80={5d} r81={5d} r82={5d} r83={5d} r84={5d} r85={5d} r86={5d} r87={5d} r88={5d} r89={5d} r90={5d} r91={5d} r92={5d} r93={5d} r94={5d} r95={5d} r96={5d} r97={5d} r98={5d} r99={5d} r100={5d} r101={5d} r102={5d} r103={5d} r104={5d} r105={5d} r106={5d} r107={5d} r108={5d} r109={5d} r110={5d} r111={5d} r112={5d} r113={5d} r114={5d} r115={5d} r116={5d} r117={5d} r118={5d} r119={5d} r120={5d} r121={5d} r122={5d} r123={5d} r124={5d} r125={5d} r126={5d} r127={5d} r133={1d,3u} r134={1d,3u} r135={2d,1u} r136={1d,2u} r137={1d,2u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r171={1d,1u} r172={1d,1u} r173={1d,1u} r174={1d,1u} r175={1d,1u} r176={1d,1u} r177={1d,1u} r178={1d,1u} r179={1d,1u} r180={1d,1u} 
;;    total ref usage 750{658d,92u,0e} in 76{71 regular + 5 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 136 137 139 140
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 136 137 139 140
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)

(insn 5 2 6 2 init/initramfs.c:338 (set (reg/f:SI 139)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 6 5 7 2 init/initramfs.c:338 (set (reg:SI 137 [ count.385 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 139)
                (const_int 8 [0x8])) [0 count+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 7 6 8 2 init/initramfs.c:338 (set (reg/f:SI 140)
        (reg/f:SI 139)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 8 7 9 2 init/initramfs.c:338 (set (reg:SI 136 [ body_len.386 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 139)
                (const_int 92 [0x5c])) [0 body_len+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 9 8 10 2 init/initramfs.c:338 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 137 [ count.385 ])
            (reg:SI 136 [ body_len.386 ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 10 9 11 2 init/initramfs.c:338 (set (pc)
        (if_then_else (ltu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 53)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9997 [0x270d])
        (nil)))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137


;; Succ edge  3 [0.0%]  (fallthru)
;; Succ edge  4 [100.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 135 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 134 135 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162
;; live  kill	 14 [lr] 24 [cc]

;; Pred edge  2 [0.0%]  (fallthru)
(note 11 10 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 12 11 13 3 init/initramfs.c:339 (set (reg/f:SI 141)
        (reg/f:SI 139)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 13 12 14 3 init/initramfs.c:339 (set (reg/f:SI 142)
        (reg/f:SI 139)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 14 13 15 3 init/initramfs.c:339 (set (reg:SI 0 r0)
        (mem/c/i:SI (plus:SI (reg/f:SI 139)
                (const_int 192 [0xc0])) [0 wfd+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 15 14 16 3 init/initramfs.c:339 (set (reg:SI 1 r1)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 139)
                (const_int 12 [0xc])) [0 victim+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 16 15 17 3 init/initramfs.c:339 (set (reg:SI 2 r2)
        (reg:SI 136 [ body_len.386 ])) 167 {*arm_movsi_insn} (nil))

(call_insn 17 16 18 3 init/initramfs.c:339 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sys_write") [flags 0x41] <function_decl 0x11464900 sys_write>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 18 17 19 3 init/initramfs.c:340 (set (reg/f:SI 143)
        (reg/f:SI 139)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 19 18 20 3 init/initramfs.c:340 (set (reg:SI 0 r0)
        (mem/c/i:SI (plus:SI (reg/f:SI 139)
                (const_int 192 [0xc0])) [0 wfd+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn 20 19 21 3 init/initramfs.c:340 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sys_close") [flags 0x41] <function_decl 0x1145e900 sys_close>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 21 20 22 3 init/initramfs.c:341 (set (reg/f:SI 144)
        (reg/f:SI 139)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 22 21 23 3 init/initramfs.c:341 (set (reg/f:SI 145)
        (reg/f:SI 139)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 23 22 24 3 init/initramfs.c:341 (set (reg:SI 0 r0)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 139)
                (const_int 196 [0xc4])) [0 vcollected+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 24 23 25 3 init/initramfs.c:341 (set (reg:SI 1 r1)
        (mem/c/i:SI (plus:SI (reg/f:SI 139)
                (const_int 108 [0x6c])) [0 mtime+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn 25 24 26 3 init/initramfs.c:341 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("do_utime") [flags 0x3] <function_decl 0x11487700 do_utime>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 26 25 27 3 init/initramfs.c:342 (set (reg/f:SI 146)
        (reg/f:SI 139)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 27 26 28 3 init/initramfs.c:342 (set (reg:SI 0 r0)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 139)
                (const_int 196 [0xc4])) [0 vcollected+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn 28 27 29 3 init/initramfs.c:342 (parallel [
            (call (mem:SI (symbol_ref:SI ("kfree") [flags 0x41] <function_decl 0x10c2b080 kfree>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 29 28 30 3 init/initramfs.c:343 (set (reg/f:SI 147)
        (reg/f:SI 139)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 30 29 31 3 init/initramfs.c:343 (set (reg:SI 134 [ body_len.779 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 139)
                (const_int 92 [0x5c])) [0 body_len+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 31 30 32 3 init/initramfs.c:172 (set (reg/f:SI 148)
        (reg/f:SI 139)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 32 31 33 3 init/initramfs.c:172 (set (reg/f:SI 149)
        (reg/f:SI 139)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 33 32 34 3 init/initramfs.c:172 (set (reg/f:SI 150 [ victim ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 139)
                (const_int 12 [0xc])) [0 victim+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 34 33 35 3 init/initramfs.c:172 (set (reg:SI 151)
        (plus:SI (reg/f:SI 150 [ victim ])
            (reg:SI 134 [ body_len.779 ]))) 4 {*arm_addsi3} (nil))

(insn 35 34 36 3 init/initramfs.c:172 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 139)
                (const_int 12 [0xc])) [0 victim+0 S4 A32])
        (reg:SI 151)) 167 {*arm_movsi_insn} (nil))

(insn 36 35 37 3 init/initramfs.c:173 (set (reg/f:SI 152)
        (reg/f:SI 139)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 37 36 38 3 init/initramfs.c:173 (set (reg:DI 153 [ body_len.779 ])
        (zero_extend:DI (reg:SI 134 [ body_len.779 ]))) 138 {*arm_zero_extendsidi2} (nil))

(insn 38 37 39 3 init/initramfs.c:173 (set (reg/f:SI 154)
        (reg/f:SI 139)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 39 38 40 3 init/initramfs.c:173 (set (reg:DI 155 [ this_header ])
        (mem/c/i:DI (plus:SI (reg/f:SI 139)
                (const_int 24 [0x18])) [0 this_header+0 S8 A64])) 163 {*arm_movdi} (nil))

(insn 40 39 41 3 init/initramfs.c:173 (parallel [
            (set (reg:DI 156)
                (plus:DI (reg:DI 153 [ body_len.779 ])
                    (reg:DI 155 [ this_header ])))
            (clobber (reg:CC 24 cc))
        ]) 1 {*arm_adddi3} (nil))

(insn 41 40 42 3 init/initramfs.c:173 (set (mem/c/i:DI (plus:SI (reg/f:SI 139)
                (const_int 24 [0x18])) [0 this_header+0 S8 A64])
        (reg:DI 156)) 163 {*arm_movdi} (nil))

(insn 42 41 43 3 init/initramfs.c:174 (set (reg/f:SI 157)
        (reg/f:SI 139)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 43 42 44 3 init/initramfs.c:174 (set (reg/f:SI 158)
        (reg/f:SI 139)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 44 43 45 3 init/initramfs.c:174 (set (reg:SI 159 [ count ])
        (mem/c/i:SI (plus:SI (reg/f:SI 139)
                (const_int 8 [0x8])) [0 count+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 45 44 46 3 init/initramfs.c:174 (set (reg:SI 160)
        (minus:SI (reg:SI 159 [ count ])
            (reg:SI 134 [ body_len.779 ]))) 28 {*arm_subsi3_insn} (nil))

(insn 46 45 47 3 init/initramfs.c:174 (set (mem/c/i:SI (plus:SI (reg/f:SI 139)
                (const_int 8 [0x8])) [0 count+0 S4 A32])
        (reg:SI 160)) 167 {*arm_movsi_insn} (nil))

(insn 47 46 48 3 init/initramfs.c:344 (set (reg/f:SI 161)
        (reg/f:SI 139)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 48 47 49 3 init/initramfs.c:344 (set (reg:SI 162)
        (const_int 3 [0x3])) 167 {*arm_movsi_insn} (nil))

(insn 49 48 50 3 init/initramfs.c:344 (set (mem/c/i:SI (plus:SI (reg/f:SI 139)
                (const_int 32 [0x20])) [0 state+0 S4 A32])
        (reg:SI 162)) 167 {*arm_movsi_insn} (nil))

(insn 50 49 53 3 init/initramfs.c:345 (set (reg:SI 135 [ D.26039 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 3 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 135 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 133 135 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180
;; live  kill	 14 [lr] 24 [cc]

;; Pred edge  2 [100.0%] 
(code_label 53 50 54 4 88 "" [1 uses])

(note 54 53 55 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 55 54 56 4 init/initramfs.c:347 (set (reg/f:SI 163)
        (reg/f:SI 139)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 56 55 57 4 init/initramfs.c:347 (set (reg/f:SI 164)
        (reg/f:SI 139)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 57 56 58 4 init/initramfs.c:347 (set (reg:SI 0 r0)
        (mem/c/i:SI (plus:SI (reg/f:SI 139)
                (const_int 192 [0xc0])) [0 wfd+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 58 57 59 4 init/initramfs.c:347 (set (reg:SI 1 r1)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 139)
                (const_int 12 [0xc])) [0 victim+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 59 58 60 4 init/initramfs.c:347 (set (reg:SI 2 r2)
        (reg:SI 137 [ count.385 ])) 167 {*arm_movsi_insn} (nil))

(call_insn 60 59 61 4 init/initramfs.c:347 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sys_write") [flags 0x41] <function_decl 0x11464900 sys_write>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 61 60 62 4 init/initramfs.c:348 (set (reg/f:SI 165)
        (reg/f:SI 139)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 62 61 63 4 init/initramfs.c:348 (set (reg:SI 133 [ count.784 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 139)
                (const_int 8 [0x8])) [0 count+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 63 62 64 4 init/initramfs.c:348 (set (reg/f:SI 166)
        (reg/f:SI 139)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 64 63 65 4 init/initramfs.c:348 (set (reg/f:SI 167)
        (reg/f:SI 139)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 65 64 66 4 init/initramfs.c:348 (set (reg:SI 168 [ body_len ])
        (mem/c/i:SI (plus:SI (reg/f:SI 139)
                (const_int 92 [0x5c])) [0 body_len+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 66 65 67 4 init/initramfs.c:348 (set (reg:SI 169)
        (minus:SI (reg:SI 168 [ body_len ])
            (reg:SI 133 [ count.784 ]))) 28 {*arm_subsi3_insn} (nil))

(insn 67 66 68 4 init/initramfs.c:348 (set (mem/c/i:SI (plus:SI (reg/f:SI 139)
                (const_int 92 [0x5c])) [0 body_len+0 S4 A32])
        (reg:SI 169)) 167 {*arm_movsi_insn} (nil))

(insn 68 67 69 4 init/initramfs.c:172 (set (reg/f:SI 170)
        (reg/f:SI 139)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 69 68 70 4 init/initramfs.c:172 (set (reg/f:SI 171)
        (reg/f:SI 139)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 70 69 71 4 init/initramfs.c:172 (set (reg/f:SI 172 [ victim ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 139)
                (const_int 12 [0xc])) [0 victim+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 71 70 72 4 init/initramfs.c:172 (set (reg:SI 173)
        (plus:SI (reg/f:SI 172 [ victim ])
            (reg:SI 133 [ count.784 ]))) 4 {*arm_addsi3} (nil))

(insn 72 71 73 4 init/initramfs.c:172 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 139)
                (const_int 12 [0xc])) [0 victim+0 S4 A32])
        (reg:SI 173)) 167 {*arm_movsi_insn} (nil))

(insn 73 72 74 4 init/initramfs.c:173 (set (reg/f:SI 174)
        (reg/f:SI 139)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 74 73 75 4 init/initramfs.c:173 (set (reg:DI 175 [ count.784 ])
        (zero_extend:DI (reg:SI 133 [ count.784 ]))) 138 {*arm_zero_extendsidi2} (nil))

(insn 75 74 76 4 init/initramfs.c:173 (set (reg/f:SI 176)
        (reg/f:SI 139)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 76 75 77 4 init/initramfs.c:173 (set (reg:DI 177 [ this_header ])
        (mem/c/i:DI (plus:SI (reg/f:SI 139)
                (const_int 24 [0x18])) [0 this_header+0 S8 A64])) 163 {*arm_movdi} (nil))

(insn 77 76 78 4 init/initramfs.c:173 (parallel [
            (set (reg:DI 178)
                (plus:DI (reg:DI 175 [ count.784 ])
                    (reg:DI 177 [ this_header ])))
            (clobber (reg:CC 24 cc))
        ]) 1 {*arm_adddi3} (nil))

(insn 78 77 79 4 init/initramfs.c:173 (set (mem/c/i:DI (plus:SI (reg/f:SI 139)
                (const_int 24 [0x18])) [0 this_header+0 S8 A64])
        (reg:DI 178)) 163 {*arm_movdi} (nil))

(insn 79 78 80 4 init/initramfs.c:174 (set (reg/f:SI 179)
        (reg/f:SI 139)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 80 79 81 4 init/initramfs.c:174 (set (reg:SI 180)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 81 80 82 4 init/initramfs.c:174 (set (mem/c/i:SI (plus:SI (reg/f:SI 139)
                (const_int 8 [0x8])) [0 count+0 S4 A32])
        (reg:SI 180)) 167 {*arm_movsi_insn} (nil))

(insn 82 81 83 4 init/initramfs.c:350 (set (reg:SI 135 [ D.26039 ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 4 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 3 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 0 [r0] 138
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; live  gen 	 0 [r0] 138
;; live  kill	

;; Pred edge  3 [100.0%]  (fallthru)
;; Pred edge  4 [100.0%]  (fallthru)
(code_label 83 82 84 5 89 "" [0 uses])

(note 84 83 85 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 85 84 89 5 init/initramfs.c:352 (set (reg:SI 138 [ <result> ])
        (reg:SI 135 [ D.26039 ])) 167 {*arm_movsi_insn} (nil))

(insn 89 85 95 5 init/initramfs.c:352 (set (reg/i:SI 0 r0)
        (reg:SI 135 [ D.26039 ])) 167 {*arm_movsi_insn} (nil))

(insn 95 89 0 5 init/initramfs.c:352 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 5 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
rescanning insn with uid = 7.
deleting insn with uid = 7.
rescanning insn with uid = 8.
deleting insn with uid = 8.
rescanning insn with uid = 12.
deleting insn with uid = 12.
rescanning insn with uid = 13.
deleting insn with uid = 13.
rescanning insn with uid = 14.
deleting insn with uid = 14.
rescanning insn with uid = 15.
deleting insn with uid = 15.
rescanning insn with uid = 18.
deleting insn with uid = 18.
rescanning insn with uid = 19.
deleting insn with uid = 19.
rescanning insn with uid = 21.
deleting insn with uid = 21.
rescanning insn with uid = 22.
deleting insn with uid = 22.
rescanning insn with uid = 23.
deleting insn with uid = 23.
rescanning insn with uid = 24.
deleting insn with uid = 24.
rescanning insn with uid = 26.
deleting insn with uid = 26.
rescanning insn with uid = 27.
deleting insn with uid = 27.
rescanning insn with uid = 29.
deleting insn with uid = 29.
rescanning insn with uid = 30.
deleting insn with uid = 30.
rescanning insn with uid = 31.
deleting insn with uid = 31.
rescanning insn with uid = 32.
deleting insn with uid = 32.
rescanning insn with uid = 33.
deleting insn with uid = 33.
rescanning insn with uid = 35.
deleting insn with uid = 35.
rescanning insn with uid = 36.
deleting insn with uid = 36.
rescanning insn with uid = 38.
deleting insn with uid = 38.
rescanning insn with uid = 39.
deleting insn with uid = 39.
rescanning insn with uid = 41.
deleting insn with uid = 41.
rescanning insn with uid = 42.
deleting insn with uid = 42.
rescanning insn with uid = 43.
deleting insn with uid = 43.
rescanning insn with uid = 44.
deleting insn with uid = 44.
rescanning insn with uid = 46.
deleting insn with uid = 46.
rescanning insn with uid = 47.
deleting insn with uid = 47.
rescanning insn with uid = 49.
deleting insn with uid = 49.
rescanning insn with uid = 55.
deleting insn with uid = 55.
rescanning insn with uid = 56.
deleting insn with uid = 56.
rescanning insn with uid = 57.
deleting insn with uid = 57.
rescanning insn with uid = 58.
deleting insn with uid = 58.
rescanning insn with uid = 61.
deleting insn with uid = 61.
rescanning insn with uid = 62.
deleting insn with uid = 62.
rescanning insn with uid = 63.
deleting insn with uid = 63.
rescanning insn with uid = 64.
deleting insn with uid = 64.
rescanning insn with uid = 65.
deleting insn with uid = 65.
rescanning insn with uid = 67.
deleting insn with uid = 67.
rescanning insn with uid = 68.
deleting insn with uid = 68.
rescanning insn with uid = 69.
deleting insn with uid = 69.
rescanning insn with uid = 70.
deleting insn with uid = 70.
rescanning insn with uid = 72.
deleting insn with uid = 72.
rescanning insn with uid = 73.
deleting insn with uid = 73.
rescanning insn with uid = 75.
deleting insn with uid = 75.
rescanning insn with uid = 76.
deleting insn with uid = 76.
rescanning insn with uid = 78.
deleting insn with uid = 78.
rescanning insn with uid = 79.
deleting insn with uid = 79.
rescanning insn with uid = 81.
deleting insn with uid = 81.
rescanning insn with uid = 89.
deleting insn with uid = 89.
ending the processing of deferred insns

;; Function maybe_link (maybe_link)[0:1326] (unlikely executed)


18 basic blocks, 24 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, probably never executed.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(11){ }d-1(12){ }d-1(13){ }d-1(14){ }d-1(25){ }d-1(26){ }}
;; bb 0 artificial_uses: { }

Successors:  2 [100.0%]  (fallthru)


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, probably never executed.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  4 [0.0%]  3 [100.0%]  (fallthru)


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 9996, probably never executed.
Predecessors:  2 [100.0%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  17 [100.0%]  (fallthru)


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 4, probably never executed.
Predecessors:  2 [0.0%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  12 [100.0%]  (fallthru)


Basic block 5 , prev 4, next 6, loop_depth 1, count 0, freq 69, probably never executed.
Predecessors:  12 [95.5%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  11 [72.0%]  6 [28.0%]  (fallthru)


Basic block 6 , prev 5, next 7, loop_depth 1, count 0, freq 19, probably never executed.
Predecessors:  5 [28.0%]  (fallthru)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  11 [72.0%]  7 [28.0%]  (fallthru)


Basic block 7 , prev 6, next 8, loop_depth 1, count 0, freq 5, probably never executed.
Predecessors:  6 [28.0%]  (fallthru)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  11 [72.0%]  8 [28.0%]  (fallthru)


Basic block 8 , prev 7, next 9, loop_depth 1, count 0, freq 2, probably never executed.
Predecessors:  7 [28.0%]  (fallthru)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  11 [50.0%]  9 [50.0%]  (fallthru)


Basic block 9 , prev 8, next 10, loop_depth 0, count 0, freq 1, probably never executed.
Predecessors:  8 [50.0%]  (fallthru)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  16 [27.0%]  10 [73.0%]  (fallthru)


Basic block 10 , prev 9, next 11, loop_depth 0, count 0, freq 1, probably never executed.
Predecessors:  9 [73.0%]  (fallthru)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  17 [100.0%]  (fallthru)


Basic block 11 , prev 10, next 12, loop_depth 1, count 0, freq 68, probably never executed.
Predecessors:  5 [72.0%]  6 [72.0%]  7 [72.0%]  8 [50.0%] 
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  12 [100.0%]  (fallthru,dfs_back)


Basic block 12 , prev 11, next 13, loop_depth 1, count 0, freq 72, probably never executed.
Predecessors:  4 [100.0%]  (fallthru) 11 [100.0%]  (fallthru,dfs_back)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  5 [95.5%]  13 [4.5%]  (fallthru)


Basic block 13 , prev 12, next 14, loop_depth 0, count 0, freq 3, probably never executed.
Predecessors:  12 [4.5%]  (fallthru)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  14 [0.0%]  (fallthru) 15 [100.0%] 


Basic block 14 , prev 13, next 15, loop_depth 0, count 0, freq 0, probably never executed.
Predecessors:  13 [0.0%]  (fallthru)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors: 


Basic block 15 , prev 14, next 16, loop_depth 0, count 0, freq 3, probably never executed.
Predecessors:  13 [100.0%] 
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  17 [100.0%]  (fallthru)


Basic block 16 , prev 15, next 17, loop_depth 0, count 0, freq 1, probably never executed.
Predecessors:  9 [27.0%] 
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  17 [100.0%]  (fallthru)


Basic block 17 , prev 16, next 1, loop_depth 0, count 0, freq 10000, probably never executed.
Predecessors:  10 [100.0%]  (fallthru) 15 [100.0%]  (fallthru) 3 [100.0%]  (fallthru) 16 [100.0%]  (fallthru)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  EXIT [100.0%]  (fallthru)


Basic block 1 , prev 17, loop_depth 0, count 0, freq 10000, probably never executed.
Predecessors:  17 [100.0%]  (fallthru)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(11){ }u-1(13){ }u-1(14){ }u-1(25){ }}

Successors: 


starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 18 n_edges 24 count 36 (    2)


maybe_link

Dataflow summary:
def_info->table_size = 0, use_info->table_size = 0
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={10d,8u} r1={8d,3u} r2={5d} r3={5d} r11={1d,17u} r12={5d} r13={1d,21u} r14={5d,1u} r15={4d} r16={4d} r17={4d} r18={4d} r19={4d} r20={4d} r21={4d} r22={4d} r23={4d} r24={12d,8u} r25={1d,17u} r26={1d,16u} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r81={4d} r82={4d} r83={4d} r84={4d} r85={4d} r86={4d} r87={4d} r88={4d} r89={4d} r90={4d} r91={4d} r92={4d} r93={4d} r94={4d} r95={4d} r96={4d} r97={4d} r98={4d} r99={4d} r100={4d} r101={4d} r102={4d} r103={4d} r104={4d} r105={4d} r106={4d} r107={4d} r108={4d} r109={4d} r110={4d} r111={4d} r112={4d} r113={4d} r114={4d} r115={4d} r116={4d} r117={4d} r118={4d} r119={4d} r120={4d} r121={4d} r122={4d} r123={4d} r124={4d} r125={4d} r126={4d} r127={4d} r133={1d,7u} r134={2d,2u} r135={1d,8u} r136={1d,2u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={4d,1u} r141={1d,2u} r142={1d,2u} r143={1d,3u} r144={1d,3u} r145={1d,3u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r171={1d,1u} r172={1d,1u} r173={1d,1u} 
;;    total ref usage 694{539d,155u,0e} in 80{76 regular + 4 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(11){ }d-1(12){ }d-1(13){ }d-1(14){ }d-1(25){ }d-1(26){ }}
;; bb 0 artificial_uses: { }

( 0 )->[2]->( 4 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 2 )->[3]->( 17 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 2 )->[4]->( 12 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 12 )->[5]->( 11 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 5 )->[6]->( 11 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 6 )->[7]->( 11 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 7 )->[8]->( 11 9 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 8 )->[9]->( 16 10 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 9 )->[10]->( 17 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 5 6 7 8 )->[11]->( 12 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 4 11 )->[12]->( 5 13 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 12 )->[13]->( 14 15 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 13 )->[14]->( )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 13 )->[15]->( 17 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 9 )->[16]->( 17 )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 10 15 3 16 )->[17]->( 1 )
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 17 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(11){ }u-1(13){ }u-1(14){ }u-1(25){ }}

Finding needed instructions:
  Adding insn 8 to worklist
  Adding insn 40 to worklist
  Adding insn 44 to worklist
  Adding insn 48 to worklist
  Adding insn 56 to worklist
  Adding insn 64 to worklist
  Adding insn 61 to worklist
  Adding insn 77 to worklist
  Adding insn 87 to worklist
  Adding insn 83 to worklist
  Adding insn 91 to worklist
  Adding insn 105 to worklist
  Adding insn 104 to worklist
  Adding insn 102 to worklist
  Adding insn 98 to worklist
  Adding insn 97 to worklist
  Adding insn 96 to worklist
  Adding insn 95 to worklist
  Adding insn 124 to worklist
Finished finding needed instructions:
processing block 11 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 141 142 143 144 145
  Adding insn 71 to worklist
processing block 17 lr out =  0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 118 to worklist
  Adding insn 114 to worklist
processing block 16 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
  Adding insn 111 to worklist
processing block 10 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
  Adding insn 66 to worklist
processing block 9 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 63 to worklist
  Adding insn 62 to worklist
  Adding insn 60 to worklist
  Adding insn 59 to worklist
  Adding insn 58 to worklist
processing block 8 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 143 144 145
  Adding insn 55 to worklist
  Adding insn 54 to worklist
  Adding insn 53 to worklist
  Adding insn 52 to worklist
  Adding insn 51 to worklist
  Adding insn 50 to worklist
processing block 7 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 143 144 145
  Adding insn 47 to worklist
  Adding insn 46 to worklist
processing block 6 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 143 144 145
  Adding insn 43 to worklist
  Adding insn 42 to worklist
processing block 5 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 143 144 145
  Adding insn 39 to worklist
  Adding insn 38 to worklist
processing block 14 lr out =  13 [sp] 25 [sfp] 26 [afp]
  Adding insn 90 to worklist
  Adding insn 89 to worklist
processing block 15 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
  Adding insn 106 to worklist
  Adding insn 103 to worklist
  Adding insn 101 to worklist
  Adding insn 100 to worklist
  Adding insn 99 to worklist
processing block 13 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 142 143 144 145
  Adding insn 86 to worklist
  Adding insn 85 to worklist
  Adding insn 84 to worklist
  Adding insn 82 to worklist
  Adding insn 81 to worklist
  Adding insn 80 to worklist
processing block 12 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 141 142 143 144 145
  Adding insn 76 to worklist
  Adding insn 74 to worklist
processing block 4 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 141 142 143 144 145
  Adding insn 34 to worklist
  Adding insn 33 to worklist
  Adding insn 32 to worklist
  Adding insn 31 to worklist
  Adding insn 30 to worklist
  Adding insn 29 to worklist
  Adding insn 28 to worklist
  Adding insn 27 to worklist
  Adding insn 26 to worklist
  Adding insn 25 to worklist
  Adding insn 24 to worklist
  Adding insn 23 to worklist
  Adding insn 22 to worklist
  Adding insn 21 to worklist
  Adding insn 20 to worklist
  Adding insn 19 to worklist
  Adding insn 18 to worklist
  Adding insn 17 to worklist
  Adding insn 16 to worklist
  Adding insn 15 to worklist
processing block 3 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
  Adding insn 10 to worklist
processing block 2 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 7 to worklist
  Adding insn 6 to worklist
  Adding insn 5 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 18 n_edges 24 count 35 (  1.9)
;; Following path with 24 sets: 2 4 
deferring rescan insn with uid = 15.
deferring rescan insn with uid = 16.
deferring rescan insn with uid = 17.
deferring rescan insn with uid = 18.
deferring rescan insn with uid = 19.
deferring rescan insn with uid = 20.
deferring rescan insn with uid = 21.
deferring rescan insn with uid = 22.
deferring rescan insn with uid = 23.
deferring rescan insn with uid = 24.
deferring rescan insn with uid = 29.
deferring rescan insn with uid = 30.
;; Following path with 5 sets: 2 3 
;; Following path with 29 sets: 12 5 6 7 8 9 16 
;; Following path with 29 sets: 12 5 6 7 8 9 10 
;; Following path with 27 sets: 12 13 15 
deferring rescan insn with uid = 86.
deferring rescan insn with uid = 95.
deferring rescan insn with uid = 96.
deferring rescan insn with uid = 97.
deferring rescan insn with uid = 98.
deferring rescan insn with uid = 99.
deferring rescan insn with uid = 103.
deferring rescan insn with uid = 104.
deferring rescan insn with uid = 105.
deferring rescan insn with uid = 106.
;; Following path with 18 sets: 12 13 14 
;; Following path with 3 sets: 17 
deferring rescan insn with uid = 118.
;; Following path with 1 sets: 11 


try_optimize_cfg iteration 1



maybe_link

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={10d,8u} r1={8d,3u} r2={5d} r3={5d} r11={1d,17u} r12={5d} r13={1d,21u} r14={5d,1u} r15={4d} r16={4d} r17={4d} r18={4d} r19={4d} r20={4d} r21={4d} r22={4d} r23={4d} r24={12d,8u} r25={1d,17u} r26={1d,16u} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r81={4d} r82={4d} r83={4d} r84={4d} r85={4d} r86={4d} r87={4d} r88={4d} r89={4d} r90={4d} r91={4d} r92={4d} r93={4d} r94={4d} r95={4d} r96={4d} r97={4d} r98={4d} r99={4d} r100={4d} r101={4d} r102={4d} r103={4d} r104={4d} r105={4d} r106={4d} r107={4d} r108={4d} r109={4d} r110={4d} r111={4d} r112={4d} r113={4d} r114={4d} r115={4d} r116={4d} r117={4d} r118={4d} r119={4d} r120={4d} r121={4d} r122={4d} r123={4d} r124={4d} r125={4d} r126={4d} r127={4d} r133={1d,7u} r134={2d,2u} r135={1d,8u} r136={1d,2u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={4d,1u} r141={1d,2u} r142={1d,2u} r143={1d,3u} r144={1d,3u} r145={1d,3u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r171={1d,1u} r172={1d,1u} r173={1d,1u} 
;;    total ref usage 694{539d,155u,0e} in 80{76 regular + 4 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 147 148
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 147 148
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)

(insn 5 2 6 2 init/initramfs.c:271 (set (reg/f:SI 147)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 6 5 7 2 init/initramfs.c:271 (set (reg:SI 148 [ nlink ])
        (mem/c/i:SI (plus:SI (reg/f:SI 147)
                (const_int 200 [0xc8])) [0 nlink+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 7 6 8 2 init/initramfs.c:271 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 148 [ nlink ])
            (const_int 1 [0x1]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 8 7 9 2 init/initramfs.c:271 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 13)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 4 [0x4])
        (nil)))
;; End of basic block 2 -> ( 4 3)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  4 [0.0%] 
;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 140
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 140
;; live  kill	

;; Pred edge  2 [100.0%]  (fallthru)
(note 9 8 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 10 9 13 3 init/initramfs.c:276 (set (reg:SI 140 [ D.25953 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 3 -> ( 17)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140


;; Succ edge  17 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134 136 137 141 142 143 144 145 149 150 151 152 153 154 155 156 157 158 159 160
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 134 136 137 141 142 143 144 145 149 150 151 152 153 154 155 156 157 158 159 160
;; live  kill	

;; Pred edge  2 [0.0%] 
(code_label 13 10 14 4 94 "" [1 uses])

(note 14 13 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 15 14 16 4 init/initramfs.c:272 (set (reg/f:SI 149)
        (reg/f:SI 147)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 16 15 17 4 init/initramfs.c:272 (set (reg:SI 145 [ major.364 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 147)
                (const_int 204 [0xcc])) [0 major+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 17 16 18 4 init/initramfs.c:272 (set (reg/f:SI 150)
        (reg/f:SI 147)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 18 17 19 4 init/initramfs.c:272 (set (reg:SI 144 [ minor.366 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 147)
                (const_int 208 [0xd0])) [0 minor+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 19 18 20 4 init/initramfs.c:272 (set (reg/f:SI 151)
        (reg/f:SI 147)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 20 19 21 4 init/initramfs.c:272 (set (reg:SI 143 [ ino.368 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 147)
                (const_int 212 [0xd4])) [0 ino+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 21 20 22 4 init/initramfs.c:272 (set (reg/f:SI 152)
        (reg/f:SI 147)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 22 21 23 4 init/initramfs.c:272 (set (reg:SI 142 [ mode.369 ])
        (zero_extend:SI (mem/c/i:HI (plus:SI (reg/f:SI 147)
                    (const_int 216 [0xd8])) [0 mode+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 23 22 24 4 init/initramfs.c:272 (set (reg/f:SI 153)
        (reg/f:SI 147)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 24 23 25 4 init/initramfs.c:272 (set (reg/f:SI 141 [ collected.370 ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 147)
                (const_int 16 [0x10])) [0 collected+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 25 24 26 4 init/initramfs.c:32 (set (reg:SI 154)
        (plus:SI (reg:SI 143 [ ino.368 ])
            (reg:SI 144 [ minor.366 ]))) 4 {*arm_addsi3} (nil))

(insn 26 25 27 4 init/initramfs.c:32 (set (reg:SI 155)
        (ashift:SI (reg:SI 145 [ major.364 ])
            (const_int 3 [0x3]))) 117 {*arm_shiftsi3} (nil))

(insn 27 26 28 4 init/initramfs.c:32 (set (reg/v:SI 136 [ tmp ])
        (plus:SI (reg:SI 154)
            (reg:SI 155))) 4 {*arm_addsi3} (nil))

(insn 28 27 29 4 init/initramfs.c:33 (set (reg:SI 137 [ D.26460 ])
        (lshiftrt:SI (reg/v:SI 136 [ tmp ])
            (const_int 5 [0x5]))) 117 {*arm_shiftsi3} (nil))

(insn 29 28 30 4 init/initramfs.c:41 (set (reg/f:SI 156)
        (reg/f:SI 147)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 30 29 31 4 init/initramfs.c:41 (set (reg/f:SI 157)
        (plus:SI (reg/f:SI 147)
            (const_int 220 [0xdc]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 220 [0xdc])))
        (nil)))

(insn 31 30 32 4 init/initramfs.c:41 (set (reg:SI 158)
        (plus:SI (reg:SI 137 [ D.26460 ])
            (reg/v:SI 136 [ tmp ]))) 4 {*arm_addsi3} (nil))

(insn 32 31 33 4 init/initramfs.c:41 (set (reg:SI 159)
        (and:SI (reg:SI 158)
            (const_int 31 [0x1f]))) 67 {*arm_andsi3_insn} (nil))

(insn 33 32 34 4 init/initramfs.c:41 (set (reg:SI 160)
        (ashift:SI (reg:SI 159)
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (nil))

(insn 34 33 75 4 init/initramfs.c:41 (set (reg/v/f:SI 134 [ p ])
        (plus:SI (reg/f:SI 157)
            (reg:SI 160))) 4 {*arm_addsi3} (nil))
;; End of basic block 4 -> ( 12)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 141 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 141 142 143 144 145


;; Succ edge  12 [100.0%]  (fallthru)

;; Start of basic block ( 12) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 143
;; lr  def 	 24 [cc] 161
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 143 144 145
;; live  gen 	 24 [cc] 161
;; live  kill	

;; Pred edge  12 [95.5%] 
(code_label 75 34 37 5 99 "" [1 uses])

(note 37 75 38 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 38 37 39 5 init/initramfs.c:42 (set (reg:SI 161 [ <variable>.ino ])
        (mem/s/j:SI (reg/f:SI 133 [ D.26472 ]) [0 <variable>.ino+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 39 38 40 5 init/initramfs.c:42 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 161 [ <variable>.ino ])
            (reg:SI 143 [ ino.368 ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 40 39 41 5 init/initramfs.c:42 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 69)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
        (nil)))
;; End of basic block 5 -> ( 11 6)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 143 144 145


;; Succ edge  11 [72.0%] 
;; Succ edge  6 [28.0%]  (fallthru)

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 144
;; lr  def 	 24 [cc] 162
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 143 144 145
;; live  gen 	 24 [cc] 162
;; live  kill	

;; Pred edge  5 [28.0%]  (fallthru)
(note 41 40 42 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 42 41 43 6 init/initramfs.c:44 (set (reg:SI 162 [ <variable>.minor ])
        (mem/s/j:SI (plus:SI (reg/f:SI 133 [ D.26472 ])
                (const_int 4 [0x4])) [0 <variable>.minor+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 43 42 44 6 init/initramfs.c:44 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 162 [ <variable>.minor ])
            (reg:SI 144 [ minor.366 ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 44 43 45 6 init/initramfs.c:44 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 69)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
        (nil)))
;; End of basic block 6 -> ( 11 7)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 143 144 145


;; Succ edge  11 [72.0%] 
;; Succ edge  7 [28.0%]  (fallthru)

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 145
;; lr  def 	 24 [cc] 163
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 143 144 145
;; live  gen 	 24 [cc] 163
;; live  kill	

;; Pred edge  6 [28.0%]  (fallthru)
(note 45 44 46 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 46 45 47 7 init/initramfs.c:46 (set (reg:SI 163 [ <variable>.major ])
        (mem/s/j:SI (plus:SI (reg/f:SI 133 [ D.26472 ])
                (const_int 8 [0x8])) [0 <variable>.major+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 47 46 48 7 init/initramfs.c:46 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 163 [ <variable>.major ])
            (reg:SI 145 [ major.364 ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 48 47 49 7 init/initramfs.c:46 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 69)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
        (nil)))
;; End of basic block 7 -> ( 11 8)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 143 144 145


;; Succ edge  11 [72.0%] 
;; Succ edge  8 [28.0%]  (fallthru)

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 142
;; lr  def 	 24 [cc] 164 165 166 167 168
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 143 144 145
;; live  gen 	 24 [cc] 164 165 166 167 168
;; live  kill	

;; Pred edge  7 [28.0%]  (fallthru)
(note 49 48 50 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 50 49 51 8 init/initramfs.c:48 (set (reg:SI 165 [ <variable>.mode ])
        (zero_extend:SI (mem/s/j:HI (plus:SI (reg/f:SI 133 [ D.26472 ])
                    (const_int 12 [0xc])) [0 <variable>.mode+0 S2 A32]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 51 50 52 8 init/initramfs.c:48 (set (reg:HI 164 [ <variable>.mode ])
        (subreg:HI (reg:SI 165 [ <variable>.mode ]) 0)) 176 {*movhi_insn_arch4} (nil))

(insn 52 51 53 8 init/initramfs.c:48 (set (reg:SI 166)
        (xor:SI (reg:SI 142 [ mode.369 ])
            (subreg:SI (reg:HI 164 [ <variable>.mode ]) 0))) 96 {*arm_xorsi3} (nil))

(insn 53 52 54 8 init/initramfs.c:48 (set (reg:SI 167)
        (zero_extend:SI (subreg:HI (reg:SI 166) 0))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 54 53 55 8 init/initramfs.c:48 (set (reg:SI 168)
        (and:SI (reg:SI 167)
            (const_int 61440 [0xf000]))) 67 {*arm_andsi3_insn} (nil))

(insn 55 54 56 8 init/initramfs.c:48 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 168)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 56 55 57 8 init/initramfs.c:48 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 69)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 8 -> ( 11 9)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 143 144 145


;; Succ edge  11 [50.0%] 
;; Succ edge  9 [50.0%]  (fallthru)

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 139 169
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 139 169
;; live  kill	 14 [lr]

;; Pred edge  8 [50.0%]  (fallthru)
(note 57 56 58 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 58 57 59 9 init/initramfs.c:274 (set (reg/f:SI 169)
        (plus:SI (reg/f:SI 133 [ D.26472 ])
            (const_int 20 [0x14]))) 4 {*arm_addsi3} (nil))

(insn 59 58 60 9 init/initramfs.c:274 (set (reg:SI 0 r0)
        (reg/f:SI 169)) 167 {*arm_movsi_insn} (nil))

(insn 60 59 61 9 init/initramfs.c:274 (set (reg:SI 1 r1)
        (reg/f:SI 141 [ collected.370 ])) 167 {*arm_movsi_insn} (nil))

(call_insn 61 60 62 9 init/initramfs.c:274 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sys_link") [flags 0x41] <function_decl 0x11458c00 sys_link>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 62 61 63 9 init/initramfs.c:274 (set (reg:SI 139 [ D.25955 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 63 62 64 9 init/initramfs.c:274 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 139 [ D.25955 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 64 63 65 9 init/initramfs.c:274 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 109)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 2700 [0xa8c])
        (nil)))
;; End of basic block 9 -> ( 16 10)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  16 [27.0%] 
;; Succ edge  10 [73.0%]  (fallthru)

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 140
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 140
;; live  kill	

;; Pred edge  9 [73.0%]  (fallthru)
(note 65 64 66 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 66 65 69 10 init/initramfs.c:274 discrim 2 (set (reg:SI 140 [ D.25953 ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 10 -> ( 17)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140


;; Succ edge  17 [100.0%]  (fallthru)

;; Start of basic block ( 5 6 7 8) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 134
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 143 144 145
;; live  gen 	 134
;; live  kill	

;; Pred edge  5 [72.0%] 
;; Pred edge  6 [72.0%] 
;; Pred edge  7 [72.0%] 
;; Pred edge  8 [50.0%] 
(code_label 69 66 70 11 97 "" [4 uses])

(note 70 69 71 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 71 70 72 11 init/initramfs.c:41 (set (reg/v/f:SI 134 [ p ])
        (plus:SI (reg/f:SI 133 [ D.26472 ])
            (const_int 16 [0x10]))) 4 {*arm_addsi3} (nil))
;; End of basic block 11 -> ( 12)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 141 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 141 142 143 144 145


;; Succ edge  12 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 4 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 141 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 24 [cc] 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 141 142 143 144 145
;; live  gen 	 24 [cc] 133
;; live  kill	

;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  11 [100.0%]  (fallthru,dfs_back)
(code_label 72 71 73 12 96 "" [0 uses])

(note 73 72 74 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 74 73 76 12 init/initramfs.c:41 discrim 1 (set (reg/f:SI 133 [ D.26472 ])
        (mem/f:SI (reg/v/f:SI 134 [ p ]) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 76 74 77 12 init/initramfs.c:41 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 133 [ D.26472 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 77 76 79 12 init/initramfs.c:41 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 75)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9550 [0x254e])
        (nil)))
;; End of basic block 12 -> ( 5 13)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 141 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 141 142 143 144 145


;; Succ edge  5 [95.5%] 
;; Succ edge  13 [4.5%]  (fallthru)

;; Start of basic block ( 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 141 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 135 138 170
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 141 142 143 144 145
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 135 138 170
;; live  kill	 14 [lr]

;; Pred edge  12 [4.5%]  (fallthru)
(note 79 77 78 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(note 78 79 80 13 ("found") NOTE_INSN_DELETED_LABEL 100)

(insn 80 78 81 13 include/linux/slab_def.h:122 (set (reg/f:SI 170)
        (symbol_ref:SI ("malloc_sizes") [flags 0xc0] <var_decl 0x10efe840 malloc_sizes>)) 167 {*arm_movsi_insn} (nil))

(insn 81 80 82 13 include/linux/slab_def.h:122 (set (reg:SI 0 r0)
        (mem/s/f/j:SI (plus:SI (reg/f:SI 170)
                (const_int 84 [0x54])) [0 <variable>.cs_cachep+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 82 81 83 13 include/linux/slab_def.h:122 (set (reg:SI 1 r1)
        (const_int 208 [0xd0])) 167 {*arm_movsi_insn} (nil))

(call_insn 83 82 84 13 include/linux/slab_def.h:122 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("kmem_cache_alloc") [flags 0x41] <function_decl 0x10efa480 kmem_cache_alloc>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 84 83 85 13 include/linux/slab_def.h:122 (set (reg/v/f:SI 138 [ ret ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 85 84 86 13 init/initramfs.c:52 (set (reg/v/f:SI 135 [ q ])
        (reg/v/f:SI 138 [ ret ])) 167 {*arm_movsi_insn} (nil))

(insn 86 85 87 13 init/initramfs.c:53 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 138 [ ret ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 87 86 88 13 init/initramfs.c:53 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 93)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 13 -> ( 14 15)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 142 143 144 145


;; Succ edge  14 [0.0%]  (fallthru)
;; Succ edge  15 [100.0%] 

;; Start of basic block ( 13) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 171
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 171
;; live  kill	 14 [lr]

;; Pred edge  13 [0.0%]  (fallthru)
(note 88 87 89 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 89 88 90 14 init/initramfs.c:54 (set (reg/f:SI 171)
        (symbol_ref/v/f:SI ("*.LC5") [flags 0x82] <string_cst 0x115c7780>)) 167 {*arm_movsi_insn} (nil))

(insn 90 89 91 14 init/initramfs.c:54 (set (reg:SI 0 r0)
        (reg/f:SI 171)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC5") [flags 0x82] <string_cst 0x115c7780>)
        (nil)))

(call_insn 91 90 93 14 init/initramfs.c:54 (parallel [
            (call (mem:SI (symbol_ref:SI ("panic") [flags 0x41] <function_decl 0x10a86f00 panic>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_NORETURN (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 14 -> ()
;; lr  out 	 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 13 [sp] 25 [sfp] 26 [afp]



;; Start of basic block ( 13) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 142 143 144 145
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 140 172 173
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 142 143 144 145
;; live  gen 	 0 [r0] 1 [r1] 140 172 173
;; live  kill	 14 [lr]

;; Pred edge  13 [100.0%] 
(code_label 93 91 94 15 101 "" [1 uses])

(note 94 93 95 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 95 94 96 15 init/initramfs.c:55 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 138 [ ret ])
                (const_int 8 [0x8])) [0 <variable>.major+0 S4 A32])
        (reg:SI 145 [ major.364 ])) 167 {*arm_movsi_insn} (nil))

(insn 96 95 97 15 init/initramfs.c:56 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 138 [ ret ])
                (const_int 4 [0x4])) [0 <variable>.minor+0 S4 A32])
        (reg:SI 144 [ minor.366 ])) 167 {*arm_movsi_insn} (nil))

(insn 97 96 98 15 init/initramfs.c:57 (set (mem/s/j:SI (reg/v/f:SI 138 [ ret ]) [0 <variable>.ino+0 S4 A32])
        (reg:SI 143 [ ino.368 ])) 167 {*arm_movsi_insn} (nil))

(insn 98 97 99 15 init/initramfs.c:58 (set (mem/s/j:HI (plus:SI (reg/v/f:SI 138 [ ret ])
                (const_int 12 [0xc])) [0 <variable>.mode+0 S2 A32])
        (subreg/s/u:HI (reg:SI 142 [ mode.369 ]) 0)) 176 {*movhi_insn_arch4} (nil))

(insn 99 98 100 15 init/initramfs.c:59 (set (reg/f:SI 172)
        (plus:SI (reg/v/f:SI 138 [ ret ])
            (const_int 20 [0x14]))) 4 {*arm_addsi3} (nil))

(insn 100 99 101 15 init/initramfs.c:59 (set (reg:SI 0 r0)
        (reg/f:SI 172)) 167 {*arm_movsi_insn} (nil))

(insn 101 100 102 15 init/initramfs.c:59 (set (reg:SI 1 r1)
        (reg/f:SI 141 [ collected.370 ])) 167 {*arm_movsi_insn} (nil))

(call_insn 102 101 103 15 init/initramfs.c:59 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcpy") [flags 0x41] <function_decl 0x51157780 strcpy>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 103 102 104 15 init/initramfs.c:60 (set (reg:SI 173)
        (reg/f:SI 133 [ D.26472 ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 104 103 105 15 init/initramfs.c:60 (set (mem/s/f/j:SI (plus:SI (reg/v/f:SI 138 [ ret ])
                (const_int 16 [0x10])) [0 <variable>.next+0 S4 A32])
        (reg/f:SI 133 [ D.26472 ])) 167 {*arm_movsi_insn} (nil))

(insn 105 104 106 15 init/initramfs.c:61 (set (mem/f:SI (reg/v/f:SI 134 [ p ]) [0 S4 A32])
        (reg/v/f:SI 138 [ ret ])) 167 {*arm_movsi_insn} (nil))

(insn 106 105 109 15 init/initramfs.c:276 (set (reg:SI 140 [ D.25953 ])
        (reg/f:SI 133 [ D.26472 ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))
;; End of basic block 15 -> ( 17)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140


;; Succ edge  17 [100.0%]  (fallthru)

;; Start of basic block ( 9) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 140
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 140
;; live  kill	

;; Pred edge  9 [27.0%] 
(code_label 109 106 110 16 98 "" [1 uses])

(note 110 109 111 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 111 110 112 16 init/initramfs.c:274 discrim 1 (set (reg:SI 140 [ D.25953 ])
        (const_int -1 [0xffffffffffffffff])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 16 -> ( 17)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140


;; Succ edge  17 [100.0%]  (fallthru)

;; Start of basic block ( 10 15 3 16) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 0 [r0] 146
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
;; live  gen 	 0 [r0] 146
;; live  kill	

;; Pred edge  10 [100.0%]  (fallthru)
;; Pred edge  15 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%]  (fallthru)
;; Pred edge  16 [100.0%]  (fallthru)
(code_label 112 111 113 17 95 "" [0 uses])

(note 113 112 114 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 114 113 118 17 init/initramfs.c:277 (set (reg:SI 146 [ <result> ])
        (reg:SI 140 [ D.25953 ])) 167 {*arm_movsi_insn} (nil))

(insn 118 114 124 17 init/initramfs.c:277 (set (reg/i:SI 0 r0)
        (reg:SI 140 [ D.25953 ])) 167 {*arm_movsi_insn} (nil))

(insn 124 118 0 17 init/initramfs.c:277 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 17 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
rescanning insn with uid = 15.
deleting insn with uid = 15.
rescanning insn with uid = 16.
deleting insn with uid = 16.
rescanning insn with uid = 17.
deleting insn with uid = 17.
rescanning insn with uid = 18.
deleting insn with uid = 18.
rescanning insn with uid = 19.
deleting insn with uid = 19.
rescanning insn with uid = 20.
deleting insn with uid = 20.
rescanning insn with uid = 21.
deleting insn with uid = 21.
rescanning insn with uid = 22.
deleting insn with uid = 22.
rescanning insn with uid = 23.
deleting insn with uid = 23.
rescanning insn with uid = 24.
deleting insn with uid = 24.
rescanning insn with uid = 29.
deleting insn with uid = 29.
rescanning insn with uid = 30.
deleting insn with uid = 30.
rescanning insn with uid = 86.
deleting insn with uid = 86.
rescanning insn with uid = 95.
deleting insn with uid = 95.
rescanning insn with uid = 96.
deleting insn with uid = 96.
rescanning insn with uid = 97.
deleting insn with uid = 97.
rescanning insn with uid = 98.
deleting insn with uid = 98.
rescanning insn with uid = 99.
deleting insn with uid = 99.
rescanning insn with uid = 103.
deleting insn with uid = 103.
rescanning insn with uid = 104.
deleting insn with uid = 104.
rescanning insn with uid = 105.
deleting insn with uid = 105.
rescanning insn with uid = 106.
deleting insn with uid = 106.
rescanning insn with uid = 118.
deleting insn with uid = 118.
ending the processing of deferred insns

;; Function do_name (do_name)[0:1328] (unlikely executed)


26 basic blocks, 38 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 42, probably never executed.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(11){ }d-1(12){ }d-1(13){ }d-1(14){ }d-1(25){ }d-1(26){ }}
;; bb 0 artificial_uses: { }

Successors:  2 [100.0%]  (fallthru)


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 42, probably never executed.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  3 [66.7%]  (fallthru) 7 [33.3%] 


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 28, probably never executed.
Predecessors:  2 [66.7%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  5 [100.0%]  (fallthru)


Basic block 4 , prev 3, next 5, loop_depth 2, count 0, freq 9100, probably never executed.
Predecessors:  5 [91.0%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  5 [100.0%]  (fallthru,dfs_back)


Basic block 5 , prev 4, next 6, loop_depth 2, count 0, freq 10000, probably never executed.
Predecessors:  6 [96.9%]  (dfs_back) 4 [100.0%]  (fallthru,dfs_back) 3 [100.0%]  (fallthru)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  4 [91.0%]  6 [9.0%]  (fallthru)


Basic block 6 , prev 5, next 7, loop_depth 1, count 0, freq 900, probably never executed.
Predecessors:  5 [9.0%]  (fallthru)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  5 [96.9%]  (dfs_back) 25 [3.1%]  (fallthru)


Basic block 7 , prev 6, next 8, loop_depth 0, count 0, freq 14, probably never executed.
Predecessors:  2 [33.3%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  8 [0.0%]  (fallthru) 16 [100.0%] 


Basic block 8 , prev 7, next 9, loop_depth 0, count 0, freq 0, probably never executed.
Predecessors:  7 [0.0%]  (fallthru)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  9 [80.9%]  (fallthru) 25 [19.1%] 


Basic block 9 , prev 8, next 10, loop_depth 0, count 0, freq 0, probably never executed.
Predecessors:  8 [80.9%]  (fallthru)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  10 [72.0%]  (fallthru) 11 [28.0%] 


Basic block 10 , prev 9, next 11, loop_depth 0, count 0, freq 0, probably never executed.
Predecessors:  9 [72.0%]  (fallthru)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  12 [100.0%]  (fallthru)


Basic block 11 , prev 10, next 12, loop_depth 0, count 0, freq 0, probably never executed.
Predecessors:  9 [28.0%] 
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  12 [100.0%]  (fallthru)


Basic block 12 , prev 11, next 13, loop_depth 0, count 0, freq 0, probably never executed.
Predecessors:  11 [100.0%]  (fallthru) 10 [100.0%]  (fallthru)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  13 [63.3%]  (fallthru) 25 [36.7%] 


Basic block 13 , prev 12, next 14, loop_depth 0, count 0, freq 0, probably never executed.
Predecessors:  12 [63.3%]  (fallthru)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  14 [39.0%]  (fallthru) 15 [61.0%] 


Basic block 14 , prev 13, next 15, loop_depth 0, count 0, freq 0, probably never executed.
Predecessors:  13 [39.0%]  (fallthru)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  15 [100.0%]  (fallthru)


Basic block 15 , prev 14, next 16, loop_depth 0, count 0, freq 0, probably never executed.
Predecessors:  13 [61.0%]  14 [100.0%]  (fallthru)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  25 [100.0%]  (fallthru)


Basic block 16 , prev 15, next 17, loop_depth 0, count 0, freq 14, probably never executed.
Predecessors:  7 [100.0%] 
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  17 [0.0%]  (fallthru) 20 [100.0%] 


Basic block 17 , prev 16, next 18, loop_depth 0, count 0, freq 0, probably never executed.
Predecessors:  16 [0.0%]  (fallthru)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  18 [0.0%]  (fallthru) 19 [100.0%] 


Basic block 18 , prev 17, next 19, loop_depth 0, count 0, freq 0, probably never executed.
Predecessors:  17 [0.0%]  (fallthru)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors: 


Basic block 19 , prev 18, next 20, loop_depth 0, count 0, freq 0, probably never executed.
Predecessors:  17 [100.0%] 
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  25 [100.0%]  (fallthru)


Basic block 20 , prev 19, next 21, loop_depth 0, count 0, freq 14, probably never executed.
Predecessors:  16 [100.0%] 
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  23 [0.0%]  21 [100.0%]  (fallthru)


Basic block 21 , prev 20, next 22, loop_depth 0, count 0, freq 14, probably never executed.
Predecessors:  20 [100.0%]  (fallthru)
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  23 [0.0%]  22 [100.0%]  (fallthru)


Basic block 22 , prev 21, next 23, loop_depth 0, count 0, freq 14, probably never executed.
Predecessors:  21 [100.0%]  (fallthru)
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  23 [0.0%]  (fallthru) 25 [100.0%] 


Basic block 23 , prev 22, next 24, loop_depth 0, count 0, freq 0, probably never executed.
Predecessors:  20 [0.0%]  21 [0.0%]  22 [0.0%]  (fallthru)
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  24 [0.0%]  (fallthru) 25 [100.0%] 


Basic block 24 , prev 23, next 25, loop_depth 0, count 0, freq 0, probably never executed.
Predecessors:  23 [0.0%]  (fallthru)
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  25 [100.0%]  (fallthru)


Basic block 25 , prev 24, next 1, loop_depth 0, count 0, freq 42, probably never executed.
Predecessors:  22 [100.0%]  19 [100.0%]  (fallthru) 12 [36.7%]  15 [100.0%]  (fallthru) 8 [19.1%]  24 [100.0%]  (fallthru) 23 [100.0%]  6 [3.1%]  (fallthru)
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  EXIT [100.0%]  (fallthru)


Basic block 1 , prev 25, loop_depth 0, count 0, freq 42, probably never executed.
Predecessors:  25 [100.0%]  (fallthru)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(11){ }u-1(13){ }u-1(14){ }u-1(25){ }}

Successors: 


starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 26 n_edges 38 count 42 (  1.6)


do_name

Dataflow summary:
def_info->table_size = 0, use_info->table_size = 0
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={40d,27u} r1={37d,16u} r2={26d,5u} r3={21d} r11={1d,25u} r12={21d} r13={1d,45u} r14={21d,1u} r15={20d} r16={20d} r17={20d} r18={20d} r19={20d} r20={20d} r21={20d} r22={20d} r23={20d} r24={36d,16u} r25={1d,25u} r26={1d,24u} r27={20d} r28={20d} r29={20d} r30={20d} r31={20d} r32={20d} r33={20d} r34={20d} r35={20d} r36={20d} r37={20d} r38={20d} r39={20d} r40={20d} r41={20d} r42={20d} r43={20d} r44={20d} r45={20d} r46={20d} r47={20d} r48={20d} r49={20d} r50={20d} r51={20d} r52={20d} r53={20d} r54={20d} r55={20d} r56={20d} r57={20d} r58={20d} r59={20d} r60={20d} r61={20d} r62={20d} r63={20d} r64={20d} r65={20d} r66={20d} r67={20d} r68={20d} r69={20d} r70={20d} r71={20d} r72={20d} r73={20d} r74={20d} r75={20d} r76={20d} r77={20d} r78={20d} r79={20d} r80={20d} r81={20d} r82={20d} r83={20d} r84={20d} r85={20d} r86={20d} r87={20d} r88={20d} r89={20d} r90={20d} r91={20d} r92={20d} r93={20d} r94={20d} r95={20d} r96={20d} r97={20d} r98={20d} r99={20d} r100={20d} r101={20d} r102={20d} r103={20d} r104={20d} r105={20d} r106={20d} r107={20d} r108={20d} r109={20d} r110={20d} r111={20d} r112={20d} r113={20d} r114={20d} r115={20d} r116={20d} r117={20d} r118={20d} r119={20d} r120={20d} r121={20d} r122={20d} r123={20d} r124={20d} r125={20d} r126={20d} r127={20d} r163={1d,1u} r164={2d,4u} r165={1d,4u} r166={1d,1u} r167={1d,8u} r168={1d,1u} r169={1d,2u} r170={1d,3u} r171={2d,1u} r172={1d,2u} r173={1d,1u} r174={1d,1u} r175={1d,1u} r176={1d,2u} r177={1d,3u} r178={1d,6u} r179={1d,2u} r180={1d,1u} r181={1d,2u} r182={1d,1u} r183={1d,1u} r184={1d,1u} r185={1d,1u} r186={1d,1u} r187={1d,1u} r188={1d,1u} r189={1d,1u} r190={1d,1u} r191={1d,1u} r192={1d,1u} r193={1d,1u} r194={1d,1u} r195={1d,1u} r196={1d,1u} r197={1d,1u} r198={1d,1u} r199={1d,1u} r200={1d,1u} r201={1d,1u} r202={1d,1u} r203={1d,1u} r204={1d,1u} r205={1d,1u} r206={1d,1u} r207={1d,1u} r208={1d,1u} r209={1d,1u} r210={1d,1u} r211={1d,1u} r212={1d,1u} r213={1d,1u} r214={1d,1u} r215={1d,1u} r216={1d,1u} r217={1d,1u} r218={1d,1u} r219={1d,1u} r220={1d,1u} r221={1d,1u} r222={1d,1u} r223={1d,1u} r224={1d,1u} r225={1d,1u} r226={1d,1u} r227={1d,1u} r228={1d,1u} r229={1d,1u} r230={1d,1u} r231={1d,1u} r232={1d,1u} r233={1d,1u} r234={1d,1u} r235={1d,1u} r236={1d,1u} r237={1d,1u} r238={1d,1u} r239={1d,1u} r240={1d,1u} r241={1d,1u} r242={1d,1u} r243={1d,1u} r244={1d,1u} r245={1d,1u} r246={1d,1u} 
;;    total ref usage 2787{2492d,295u,0e} in 191{171 regular + 20 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(11){ }d-1(12){ }d-1(13){ }d-1(14){ }d-1(25){ }d-1(26){ }}
;; bb 0 artificial_uses: { }

( 0 )->[2]->( 3 7 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 2 )->[3]->( 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 5 )->[4]->( 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 6 4 3 )->[5]->( 4 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 5 )->[6]->( 5 25 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 2 )->[7]->( 8 16 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 7 )->[8]->( 9 25 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 8 )->[9]->( 10 11 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 9 )->[10]->( 12 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 9 )->[11]->( 12 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 11 10 )->[12]->( 13 25 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 12 )->[13]->( 14 15 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 13 )->[14]->( 15 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 13 14 )->[15]->( 25 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 7 )->[16]->( 17 20 )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 16 )->[17]->( 18 19 )
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 17 )->[18]->( )
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 17 )->[19]->( 25 )
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 16 )->[20]->( 23 21 )
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 20 )->[21]->( 23 22 )
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 21 )->[22]->( 23 25 )
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 20 21 22 )->[23]->( 24 25 )
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 23 )->[24]->( 25 )
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 22 19 12 15 8 24 23 6 )->[25]->( 1 )
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 25 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(11){ }u-1(13){ }u-1(14){ }u-1(25){ }}

Finding needed instructions:
  Adding insn 50 to worklist
  Adding insn 46 to worklist
  Adding insn 40 to worklist
  Adding insn 37 to worklist
  Adding insn 61 to worklist
  Adding insn 59 to worklist
  Adding insn 69 to worklist
  Adding insn 73 to worklist
  Adding insn 88 to worklist
  Adding insn 83 to worklist
  Adding insn 93 to worklist
  Adding insn 90 to worklist
  Adding insn 96 to worklist
  Adding insn 117 to worklist
  Adding insn 115 to worklist
  Adding insn 112 to worklist
  Adding insn 134 to worklist
  Adding insn 130 to worklist
  Adding insn 124 to worklist
  Adding insn 139 to worklist
  Adding insn 151 to worklist
  Adding insn 148 to worklist
  Adding insn 145 to worklist
  Adding insn 157 to worklist
  Adding insn 189 to worklist
  Adding insn 185 to worklist
  Adding insn 175 to worklist
  Adding insn 169 to worklist
  Adding insn 162 to worklist
  Adding insn 193 to worklist
  Adding insn 214 to worklist
  Adding insn 212 to worklist
  Adding insn 209 to worklist
  Adding insn 208 to worklist
  Adding insn 205 to worklist
  Adding insn 204 to worklist
  Adding insn 202 to worklist
  Adding insn 199 to worklist
  Adding insn 198 to worklist
  Adding insn 229 to worklist
  Adding insn 232 to worklist
  Adding insn 235 to worklist
  Adding insn 241 to worklist
  Adding insn 238 to worklist
  Adding insn 268 to worklist
  Adding insn 263 to worklist
  Adding insn 257 to worklist
  Adding insn 250 to worklist
  Adding insn 281 to worklist
Finished finding needed instructions:
processing block 4 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 164
  Adding insn 60 to worklist
  Adding insn 58 to worklist
  Adding insn 57 to worklist
  Adding insn 56 to worklist
processing block 25 lr out =  0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 275 to worklist
  Adding insn 271 to worklist
processing block 6 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 164
  Adding insn 72 to worklist
  Adding insn 71 to worklist
processing block 5 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 164 170
  Adding insn 68 to worklist
  Adding insn 66 to worklist
  Adding insn 65 to worklist
  Adding insn 64 to worklist
processing block 3 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 164
  Adding insn 52 to worklist
processing block 15 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 150 to worklist
  Adding insn 149 to worklist
  Adding insn 147 to worklist
  Adding insn 146 to worklist
  Adding insn 144 to worklist
  Adding insn 143 to worklist
  Adding insn 142 to worklist
processing block 14 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp]
  Adding insn 138 to worklist
  Adding insn 137 to worklist
  Adding insn 136 to worklist
processing block 13 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 176
  Adding insn 133 to worklist
  Adding insn 132 to worklist
  Adding insn 131 to worklist
  Adding insn 129 to worklist
  Adding insn 128 to worklist
  Adding insn 127 to worklist
  Adding insn 126 to worklist
  Adding insn 125 to worklist
  Adding insn 123 to worklist
  Adding insn 122 to worklist
  Adding insn 121 to worklist
  Adding insn 120 to worklist
  Adding insn 119 to worklist
processing block 12 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 177
  Adding insn 116 to worklist
  Adding insn 114 to worklist
  Adding insn 113 to worklist
  Adding insn 111 to worklist
  Adding insn 110 to worklist
  Adding insn 109 to worklist
  Adding insn 108 to worklist
  Adding insn 107 to worklist
  Adding insn 106 to worklist
processing block 10 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171
  Adding insn 98 to worklist
processing block 11 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171
  Adding insn 103 to worklist
processing block 9 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp]
  Adding insn 95 to worklist
processing block 8 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 172
  Adding insn 92 to worklist
  Adding insn 91 to worklist
processing block 18 lr out =  13 [sp] 25 [sfp] 26 [afp]
  Adding insn 192 to worklist
  Adding insn 191 to worklist
processing block 19 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 213 to worklist
  Adding insn 211 to worklist
  Adding insn 210 to worklist
  Adding insn 207 to worklist
  Adding insn 206 to worklist
  Adding insn 203 to worklist
  Adding insn 201 to worklist
  Adding insn 200 to worklist
  Adding insn 197 to worklist
processing block 17 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163 167 174
  Adding insn 188 to worklist
  Adding insn 187 to worklist
  Adding insn 186 to worklist
  Adding insn 184 to worklist
  Adding insn 183 to worklist
  Adding insn 182 to worklist
  Adding insn 179 to worklist
  Adding insn 178 to worklist
  Adding insn 177 to worklist
  Adding insn 176 to worklist
  Adding insn 174 to worklist
  Adding insn 173 to worklist
  Adding insn 172 to worklist
  Adding insn 171 to worklist
  Adding insn 170 to worklist
  Adding insn 168 to worklist
  Adding insn 167 to worklist
  Adding insn 166 to worklist
  Adding insn 165 to worklist
  Adding insn 164 to worklist
  Adding insn 163 to worklist
  Adding insn 161 to worklist
  Adding insn 160 to worklist
  Adding insn 159 to worklist
processing block 24 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 267 to worklist
  Adding insn 266 to worklist
  Adding insn 265 to worklist
  Adding insn 264 to worklist
  Adding insn 262 to worklist
  Adding insn 261 to worklist
  Adding insn 260 to worklist
  Adding insn 259 to worklist
  Adding insn 258 to worklist
  Adding insn 256 to worklist
  Adding insn 255 to worklist
  Adding insn 254 to worklist
  Adding insn 253 to worklist
  Adding insn 252 to worklist
  Adding insn 251 to worklist
  Adding insn 249 to worklist
  Adding insn 248 to worklist
  Adding insn 247 to worklist
  Adding insn 246 to worklist
  Adding insn 245 to worklist
  Adding insn 244 to worklist
  Adding insn 243 to worklist
processing block 23 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 240 to worklist
  Adding insn 239 to worklist
processing block 22 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 234 to worklist
processing block 21 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 178
  Adding insn 231 to worklist
processing block 20 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 178
  Adding insn 228 to worklist
  Adding insn 227 to worklist
  Adding insn 226 to worklist
  Adding insn 225 to worklist
  Adding insn 224 to worklist
  Adding insn 223 to worklist
  Adding insn 222 to worklist
  Adding insn 221 to worklist
  Adding insn 220 to worklist
  Adding insn 219 to worklist
processing block 16 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 178 179
  Adding insn 156 to worklist
processing block 7 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 178 179
  Adding insn 87 to worklist
  Adding insn 86 to worklist
  Adding insn 85 to worklist
  Adding insn 84 to worklist
  Adding insn 82 to worklist
  Adding insn 81 to worklist
  Adding insn 80 to worklist
  Adding insn 79 to worklist
processing block 2 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 181
  Adding insn 49 to worklist
  Adding insn 48 to worklist
  Adding insn 47 to worklist
  Adding insn 45 to worklist
  Adding insn 44 to worklist
  Adding insn 43 to worklist
  Adding insn 42 to worklist
  Adding insn 41 to worklist
  Adding insn 39 to worklist
  Adding insn 38 to worklist
  Adding insn 36 to worklist
  Adding insn 35 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 26 n_edges 38 count 51 (    2)
;; Following path with 47 sets: 2 7 16 20 21 22 
deferring rescan insn with uid = 38.
deferring rescan insn with uid = 40.
deferring rescan insn with uid = 41.
deferring rescan insn with uid = 42.
deferring rescan insn with uid = 49.
deferring rescan insn with uid = 79.
deferring rescan insn with uid = 80.
deferring rescan insn with uid = 84.
deferring rescan insn with uid = 85.
;; Following path with 89 sets: 2 7 16 17 19 
deferring rescan insn with uid = 159.
deferring rescan insn with uid = 160.
deferring rescan insn with uid = 163.
deferring rescan insn with uid = 164.
deferring rescan insn with uid = 165.
deferring rescan insn with uid = 166.
deferring rescan insn with uid = 167.
deferring rescan insn with uid = 168.
deferring rescan insn with uid = 170.
deferring rescan insn with uid = 171.
deferring rescan insn with uid = 172.
deferring rescan insn with uid = 173.
deferring rescan insn with uid = 176.
deferring rescan insn with uid = 177.
deferring rescan insn with uid = 178.
deferring rescan insn with uid = 179.
deferring rescan insn with uid = 188.
deferring rescan insn with uid = 197.
deferring rescan insn with uid = 198.
deferring rescan insn with uid = 199.
deferring rescan insn with uid = 204.
deferring rescan insn with uid = 205.
deferring rescan insn with uid = 206.
deferring rescan insn with uid = 207.
deferring rescan insn with uid = 208.
deferring rescan insn with uid = 209.
deferring rescan insn with uid = 210.
deferring rescan insn with uid = 211.
deferring rescan insn with uid = 212.
deferring rescan insn with uid = 213.
deferring rescan insn with uid = 214.
;; Following path with 74 sets: 2 7 16 17 18 
;; Following path with 39 sets: 2 7 8 9 11 
;; Following path with 39 sets: 2 7 8 9 10 
;; Following path with 19 sets: 2 3 
deferring rescan insn with uid = 52.
;; Following path with 40 sets: 23 24 
deferring rescan insn with uid = 244.
deferring rescan insn with uid = 245.
deferring rescan insn with uid = 246.
deferring rescan insn with uid = 249.
deferring rescan insn with uid = 251.
deferring rescan insn with uid = 252.
deferring rescan insn with uid = 253.
deferring rescan insn with uid = 254.
deferring rescan insn with uid = 255.
deferring rescan insn with uid = 256.
deferring rescan insn with uid = 258.
deferring rescan insn with uid = 259.
deferring rescan insn with uid = 260.
deferring rescan insn with uid = 261.
deferring rescan insn with uid = 264.
deferring rescan insn with uid = 265.
deferring rescan insn with uid = 266.
deferring rescan insn with uid = 267.
;; Following path with 40 sets: 12 13 14 
deferring rescan insn with uid = 107.
deferring rescan insn with uid = 108.
deferring rescan insn with uid = 114.
deferring rescan insn with uid = 115.
deferring rescan insn with uid = 119.
deferring rescan insn with uid = 120.
deferring rescan insn with uid = 121.
deferring rescan insn with uid = 122.
deferring rescan insn with uid = 123.
deferring rescan insn with uid = 125.
deferring rescan insn with uid = 126.
deferring rescan insn with uid = 127.
deferring rescan insn with uid = 128.
deferring rescan insn with uid = 131.
deferring rescan insn with uid = 132.
deferring rescan insn with uid = 136.
deferring rescan insn with uid = 137.
;; Following path with 12 sets: 15 
deferring rescan insn with uid = 147.
deferring rescan insn with uid = 148.
deferring rescan insn with uid = 149.
deferring rescan insn with uid = 151.
;; Following path with 13 sets: 5 4 
deferring rescan insn with uid = 56.
deferring rescan insn with uid = 57.
deferring rescan insn with uid = 57.
deferring rescan insn with uid = 59.
;; Following path with 8 sets: 5 6 
;; Following path with 3 sets: 25 
;; Following path with 8 sets: 4 


try_optimize_cfg iteration 1



do_name

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={40d,27u} r1={37d,16u} r2={26d,5u} r3={21d} r11={1d,25u} r12={21d} r13={1d,45u} r14={21d,1u} r15={20d} r16={20d} r17={20d} r18={20d} r19={20d} r20={20d} r21={20d} r22={20d} r23={20d} r24={36d,16u} r25={1d,25u} r26={1d,24u} r27={20d} r28={20d} r29={20d} r30={20d} r31={20d} r32={20d} r33={20d} r34={20d} r35={20d} r36={20d} r37={20d} r38={20d} r39={20d} r40={20d} r41={20d} r42={20d} r43={20d} r44={20d} r45={20d} r46={20d} r47={20d} r48={20d} r49={20d} r50={20d} r51={20d} r52={20d} r53={20d} r54={20d} r55={20d} r56={20d} r57={20d} r58={20d} r59={20d} r60={20d} r61={20d} r62={20d} r63={20d} r64={20d} r65={20d} r66={20d} r67={20d} r68={20d} r69={20d} r70={20d} r71={20d} r72={20d} r73={20d} r74={20d} r75={20d} r76={20d} r77={20d} r78={20d} r79={20d} r80={20d} r81={20d} r82={20d} r83={20d} r84={20d} r85={20d} r86={20d} r87={20d} r88={20d} r89={20d} r90={20d} r91={20d} r92={20d} r93={20d} r94={20d} r95={20d} r96={20d} r97={20d} r98={20d} r99={20d} r100={20d} r101={20d} r102={20d} r103={20d} r104={20d} r105={20d} r106={20d} r107={20d} r108={20d} r109={20d} r110={20d} r111={20d} r112={20d} r113={20d} r114={20d} r115={20d} r116={20d} r117={20d} r118={20d} r119={20d} r120={20d} r121={20d} r122={20d} r123={20d} r124={20d} r125={20d} r126={20d} r127={20d} r163={1d,1u} r164={2d,4u} r165={1d,4u} r166={1d,1u} r167={1d,8u} r168={1d,1u} r169={1d,2u} r170={1d,3u} r171={2d,1u} r172={1d,2u} r173={1d,1u} r174={1d,1u} r175={1d,1u} r176={1d,2u} r177={1d,3u} r178={1d,6u} r179={1d,2u} r180={1d,1u} r181={1d,2u} r182={1d,1u} r183={1d,1u} r184={1d,1u} r185={1d,1u} r186={1d,1u} r187={1d,1u} r188={1d,1u} r189={1d,1u} r190={1d,1u} r191={1d,1u} r192={1d,1u} r193={1d,1u} r194={1d,1u} r195={1d,1u} r196={1d,1u} r197={1d,1u} r198={1d,1u} r199={1d,1u} r200={1d,1u} r201={1d,1u} r202={1d,1u} r203={1d,1u} r204={1d,1u} r205={1d,1u} r206={1d,1u} r207={1d,1u} r208={1d,1u} r209={1d,1u} r210={1d,1u} r211={1d,1u} r212={1d,1u} r213={1d,1u} r214={1d,1u} r215={1d,1u} r216={1d,1u} r217={1d,1u} r218={1d,1u} r219={1d,1u} r220={1d,1u} r221={1d,1u} r222={1d,1u} r223={1d,1u} r224={1d,1u} r225={1d,1u} r226={1d,1u} r227={1d,1u} r228={1d,1u} r229={1d,1u} r230={1d,1u} r231={1d,1u} r232={1d,1u} r233={1d,1u} r234={1d,1u} r235={1d,1u} r236={1d,1u} r237={1d,1u} r238={1d,1u} r239={1d,1u} r240={1d,1u} r241={1d,1u} r242={1d,1u} r243={1d,1u} r244={1d,1u} r245={1d,1u} r246={1d,1u} 
;;    total ref usage 2787{2492d,295u,0e} in 191{171 regular + 20 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 180 181 183 184 185 186 187 188 189
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 180 181 183 184 185 186 187 188 189
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 33 0 32 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 32 33 35 2 NOTE_INSN_FUNCTION_BEG)

(insn 35 32 36 2 init/initramfs.c:295 (set (reg/f:SI 183)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 36 35 37 2 init/initramfs.c:295 (set (reg:SI 184)
        (const_int 3 [0x3])) 167 {*arm_movsi_insn} (nil))

(insn 37 36 38 2 init/initramfs.c:295 (set (mem/c/i:SI (plus:SI (reg/f:SI 183)
                (const_int 32 [0x20])) [0 state+0 S4 A32])
        (reg:SI 184)) 167 {*arm_movsi_insn} (nil))

(insn 38 37 39 2 init/initramfs.c:296 (set (reg/f:SI 185)
        (reg/f:SI 183)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 39 38 40 2 init/initramfs.c:296 (set (reg:SI 186)
        (const_int 7 [0x7])) 167 {*arm_movsi_insn} (nil))

(insn 40 39 41 2 init/initramfs.c:296 (set (mem/c/i:SI (plus:SI (reg/f:SI 183)
                (const_int 44 [0x2c])) [0 next_state+0 S4 A32])
        (reg:SI 186)) 167 {*arm_movsi_insn} (nil))

(insn 41 40 42 2 init/initramfs.c:297 (set (reg/f:SI 187)
        (reg/f:SI 183)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 42 41 43 2 init/initramfs.c:297 (set (reg/f:SI 181 [ collected.373 ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 183)
                (const_int 16 [0x10])) [0 collected+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 43 42 44 2 init/initramfs.c:297 (set (reg/f:SI 188)
        (symbol_ref/v/f:SI ("*.LC6") [flags 0x82] <string_cst 0x114dc5a0>)) 167 {*arm_movsi_insn} (nil))

(insn 44 43 45 2 init/initramfs.c:297 (set (reg:SI 0 r0)
        (reg/f:SI 181 [ collected.373 ])) 167 {*arm_movsi_insn} (nil))

(insn 45 44 46 2 init/initramfs.c:297 (set (reg:SI 1 r1)
        (reg/f:SI 188)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC6") [flags 0x82] <string_cst 0x114dc5a0>)
        (nil)))

(call_insn/i 46 45 47 2 init/initramfs.c:297 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcmp") [flags 0x41] <function_decl 0x51157680 strcmp>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 47 46 48 2 init/initramfs.c:297 (set (reg:SI 189)
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 48 47 49 2 init/initramfs.c:297 (set (reg:SI 180 [ D.25985 ])
        (reg:SI 189)) 167 {*arm_movsi_insn} (nil))

(insn 49 48 50 2 init/initramfs.c:297 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 189)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 50 49 51 2 init/initramfs.c:297 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 77)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 3333 [0xd05])
        (nil)))
;; End of basic block 2 -> ( 3 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 181
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181


;; Succ edge  3 [66.7%]  (fallthru)
;; Succ edge  7 [33.3%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 164
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 164
;; live  kill	

;; Pred edge  2 [66.7%]  (fallthru)
(note 51 50 52 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 52 51 67 3 init/initramfs.c:297 (set (reg:SI 164 [ ivtmp.840 ])
        (reg:SI 189)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))
;; End of basic block 3 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 164
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 5) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164 170
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164 170
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 190 191 192
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164 170
;; live  gen 	 0 [r0] 190 191 192
;; live  kill	 14 [lr]

;; Pred edge  5 [91.0%] 
(code_label 67 52 55 4 108 "" [1 uses])

(note 55 67 56 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 56 55 57 4 init/initramfs.c:71 (set (reg/f:SI 190)
        (reg/f:SI 193)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 57 56 58 4 init/initramfs.c:71 (set (reg/f:SI 191)
        (reg/f:SI 194)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 220 [0xdc])))
        (nil)))

(insn 58 57 59 4 init/initramfs.c:71 (set (reg/f:SI 192 [ <variable>.next ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 170 [ D.26478 ])
                (const_int 16 [0x10])) [0 <variable>.next+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 59 58 60 4 init/initramfs.c:71 (set (mem/f:SI (plus:SI (reg/f:SI 194)
                (reg:SI 164 [ ivtmp.840 ])) [0 S4 A32])
        (reg/f:SI 192 [ <variable>.next ])) 167 {*arm_movsi_insn} (nil))

(insn 60 59 61 4 init/initramfs.c:72 (set (reg:SI 0 r0)
        (reg/f:SI 170 [ D.26478 ])) 167 {*arm_movsi_insn} (nil))

(call_insn 61 60 62 4 init/initramfs.c:72 (parallel [
            (call (mem:SI (symbol_ref:SI ("kfree") [flags 0x41] <function_decl 0x10c2b080 kfree>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 4 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 164
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164


;; Succ edge  5 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 6 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 164
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164
;; lr  def 	 24 [cc] 170 193 194
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164
;; live  gen 	 24 [cc] 170 193 194
;; live  kill	

;; Pred edge  6 [96.9%]  (dfs_back)
;; Pred edge  4 [100.0%]  (fallthru,dfs_back)
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 62 61 63 5 107 "" [1 uses])

(note 63 62 64 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 64 63 65 5 init/initramfs.c:69 discrim 1 (set (reg/f:SI 193)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 65 64 66 5 init/initramfs.c:69 discrim 1 (set (reg/f:SI 194)
        (plus:SI (reg/f:SI 193)
            (const_int 220 [0xdc]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 220 [0xdc])))
        (nil)))

(insn 66 65 68 5 init/initramfs.c:69 discrim 1 (set (reg/f:SI 170 [ D.26478 ])
        (mem/f:SI (plus:SI (reg/f:SI 194)
                (reg:SI 164 [ ivtmp.840 ])) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 68 66 69 5 init/initramfs.c:69 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 170 [ D.26478 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 69 68 70 5 init/initramfs.c:69 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 67)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
        (nil)))
;; End of basic block 5 -> ( 4 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 164 170
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164 170


;; Succ edge  4 [91.0%] 
;; Succ edge  6 [9.0%]  (fallthru)

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 164
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164
;; lr  def 	 24 [cc] 164
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164
;; live  gen 	 24 [cc] 164
;; live  kill	

;; Pred edge  5 [9.0%]  (fallthru)
(note 70 69 71 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 71 70 72 6 init/initramfs.c:69 discrim 1 (set (reg:SI 164 [ ivtmp.840 ])
        (plus:SI (reg:SI 164 [ ivtmp.840 ])
            (const_int 4 [0x4]))) 4 {*arm_addsi3} (nil))

(insn 72 71 73 6 init/initramfs.c:68 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 164 [ ivtmp.840 ])
            (const_int 128 [0x80]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 73 72 77 6 init/initramfs.c:68 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 62)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9688 [0x25d8])
        (nil)))
;; End of basic block 6 -> ( 5 25)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 164
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164


;; Succ edge  5 [96.9%]  (dfs_back)
;; Succ edge  25 [3.1%]  (fallthru)

;; Start of basic block ( 2) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 178 179 195 196 197
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 178 179 195 196 197
;; live  kill	 14 [lr]

;; Pred edge  2 [33.3%] 
(code_label 77 73 78 7 106 "" [1 uses])

(note 78 77 79 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 79 78 80 7 init/initramfs.c:301 (set (reg/f:SI 195)
        (reg/f:SI 183)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 80 79 81 7 init/initramfs.c:301 (set (reg:SI 196 [ mode ])
        (zero_extend:SI (mem/c/i:HI (plus:SI (reg/f:SI 183)
                    (const_int 216 [0xd8])) [0 mode+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 81 80 82 7 init/initramfs.c:301 (set (reg:SI 0 r0)
        (reg/f:SI 181 [ collected.373 ])) 167 {*arm_movsi_insn} (nil))

(insn 82 81 83 7 init/initramfs.c:301 (set (reg:SI 1 r1)
        (reg:SI 196 [ mode ])) 167 {*arm_movsi_insn} (nil))

(call_insn 83 82 84 7 init/initramfs.c:301 (parallel [
            (call (mem:SI (symbol_ref:SI ("clean_path") [flags 0x3] <function_decl 0x114ad300 clean_path>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 84 83 85 7 init/initramfs.c:302 (set (reg/f:SI 197)
        (reg/f:SI 183)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 85 84 86 7 init/initramfs.c:302 (set (reg:SI 179 [ D.25990 ])
        (zero_extend:SI (mem/c/i:HI (plus:SI (reg/f:SI 183)
                    (const_int 216 [0xd8])) [0 mode+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 86 85 87 7 init/initramfs.c:302 (set (reg:SI 178 [ D.25991 ])
        (and:SI (reg:SI 179 [ D.25990 ])
            (const_int 61440 [0xf000]))) 67 {*arm_andsi3_insn} (nil))

(insn 87 86 88 7 init/initramfs.c:302 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 178 [ D.25991 ])
            (const_int 32768 [0x8000]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 88 87 89 7 init/initramfs.c:302 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 154)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 7 -> ( 8 16)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 178 179
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 178 179


;; Succ edge  8 [0.0%]  (fallthru)
;; Succ edge  16 [100.0%] 

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 172
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 24 [cc] 172
;; live  kill	 14 [lr]

;; Pred edge  7 [0.0%]  (fallthru)
(note 89 88 90 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(call_insn 90 89 91 8 init/initramfs.c:303 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("maybe_link") [flags 0x3] <function_decl 0x114ad200 maybe_link>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))

(insn 91 90 92 8 init/initramfs.c:303 (set (reg/v:SI 172 [ ml ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 92 91 93 8 init/initramfs.c:304 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 172 [ ml ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 93 92 94 8 init/initramfs.c:304 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 269)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 1912 [0x778])
        (nil)))
;; End of basic block 8 -> ( 9 25)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 172
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 172


;; Succ edge  9 [80.9%]  (fallthru)
;; Succ edge  25 [19.1%] 

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 172
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 172
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 172
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  8 [80.9%]  (fallthru)
(note 94 93 95 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 95 94 96 9 init/initramfs.c:306 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 172 [ ml ])
            (const_int 1 [0x1]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 96 95 97 9 init/initramfs.c:306 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 101)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 2800 [0xaf0])
        (nil)))
;; End of basic block 9 -> ( 10 11)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  10 [72.0%]  (fallthru)
;; Succ edge  11 [28.0%] 

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 171
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 171
;; live  kill	

;; Pred edge  9 [72.0%]  (fallthru)
(note 97 96 98 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 98 97 101 10 init/initramfs.c:307 (set (reg/v:SI 171 [ openflags ])
        (const_int 577 [0x241])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 10 -> ( 12)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171


;; Succ edge  12 [100.0%]  (fallthru)

;; Start of basic block ( 9) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 171
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 171
;; live  kill	

;; Pred edge  9 [28.0%] 
(code_label 101 98 102 11 111 "" [1 uses])

(note 102 101 103 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 103 102 104 11 init/initramfs.c:305 (set (reg/v:SI 171 [ openflags ])
        (const_int 65 [0x41])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 11 -> ( 12)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171


;; Succ edge  12 [100.0%]  (fallthru)

;; Start of basic block ( 11 10) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 177 198 199 200 201
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 177 198 199 200 201
;; live  kill	 14 [lr]

;; Pred edge  11 [100.0%]  (fallthru)
;; Pred edge  10 [100.0%]  (fallthru)
(code_label 104 103 105 12 112 "" [0 uses])

(note 105 104 106 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 106 105 107 12 init/initramfs.c:308 (set (reg/f:SI 198)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 107 106 108 12 init/initramfs.c:308 (set (reg/f:SI 199)
        (reg/f:SI 198)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 108 107 109 12 init/initramfs.c:308 (set (reg:SI 200 [ mode ])
        (zero_extend:SI (mem/c/i:HI (plus:SI (reg/f:SI 198)
                    (const_int 216 [0xd8])) [0 mode+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 109 108 110 12 init/initramfs.c:308 (set (reg:SI 0 r0)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 198)
                (const_int 16 [0x10])) [0 collected+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 110 109 111 12 init/initramfs.c:308 (set (reg:SI 1 r1)
        (reg/v:SI 171 [ openflags ])) 167 {*arm_movsi_insn} (nil))

(insn 111 110 112 12 init/initramfs.c:308 (set (reg:SI 2 r2)
        (reg:SI 200 [ mode ])) 167 {*arm_movsi_insn} (nil))

(call_insn 112 111 113 12 init/initramfs.c:308 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sys_open") [flags 0x41] <function_decl 0x1145e880 sys_open>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 113 112 114 12 init/initramfs.c:308 (set (reg:SI 177 [ wfd.376 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 114 113 115 12 init/initramfs.c:308 (set (reg/f:SI 201)
        (reg/f:SI 198)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 115 114 116 12 init/initramfs.c:308 (set (mem/c/i:SI (plus:SI (reg/f:SI 198)
                (const_int 192 [0xc0])) [0 wfd+0 S4 A32])
        (reg:SI 177 [ wfd.376 ])) 167 {*arm_movsi_insn} (nil))

(insn 116 115 117 12 init/initramfs.c:310 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 177 [ wfd.376 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 117 116 118 12 init/initramfs.c:310 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 269)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 3666 [0xe52])
        (nil)))
;; End of basic block 12 -> ( 13 25)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 177
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 177


;; Succ edge  13 [63.3%]  (fallthru)
;; Succ edge  25 [36.7%] 

;; Start of basic block ( 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 177
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 177
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 176 202 203 204 205 206 207
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 177
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 176 202 203 204 205 206 207
;; live  kill	 14 [lr]

;; Pred edge  12 [63.3%]  (fallthru)
(note 118 117 119 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 119 118 120 13 init/initramfs.c:311 (set (reg/f:SI 202)
        (reg/f:SI 198)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 120 119 121 13 init/initramfs.c:311 (set (reg/f:SI 203)
        (reg/f:SI 198)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 121 120 122 13 init/initramfs.c:311 (set (reg:SI 0 r0)
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 122 121 123 13 init/initramfs.c:311 (set (reg:SI 1 r1)
        (mem/c/i:SI (plus:SI (reg/f:SI 198)
                (const_int 100 [0x64])) [0 uid+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 123 122 124 13 init/initramfs.c:311 (set (reg:SI 2 r2)
        (mem/c/i:SI (plus:SI (reg/f:SI 198)
                (const_int 104 [0x68])) [0 gid+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn 124 123 125 13 init/initramfs.c:311 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sys_fchown") [flags 0x41] <function_decl 0x1145eb80 sys_fchown>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 125 124 126 13 init/initramfs.c:312 (set (reg/f:SI 204)
        (reg/f:SI 198)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 126 125 127 13 init/initramfs.c:312 (set (reg/f:SI 205)
        (reg/f:SI 198)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 127 126 128 13 init/initramfs.c:312 (set (reg:SI 206 [ mode ])
        (zero_extend:SI (mem/c/i:HI (plus:SI (reg/f:SI 198)
                    (const_int 216 [0xd8])) [0 mode+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 128 127 129 13 init/initramfs.c:312 (set (reg:SI 0 r0)
        (mem/c/i:SI (plus:SI (reg/f:SI 198)
                (const_int 192 [0xc0])) [0 wfd+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 129 128 130 13 init/initramfs.c:312 (set (reg:SI 1 r1)
        (reg:SI 206 [ mode ])) 167 {*arm_movsi_insn} (nil))

(call_insn 130 129 131 13 init/initramfs.c:312 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sys_fchmod") [flags 0x41] <function_decl 0x11458e80 sys_fchmod>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 131 130 132 13 init/initramfs.c:313 (set (reg/f:SI 207)
        (reg/f:SI 198)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 132 131 133 13 init/initramfs.c:313 (set (reg:SI 176 [ body_len.381 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 198)
                (const_int 92 [0x5c])) [0 body_len+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 133 132 134 13 init/initramfs.c:313 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 176 [ body_len.381 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 134 133 135 13 init/initramfs.c:313 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 140)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 6102 [0x17d6])
        (nil)))
;; End of basic block 13 -> ( 14 15)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 176
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 176


;; Succ edge  14 [39.0%]  (fallthru)
;; Succ edge  15 [61.0%] 

;; Start of basic block ( 13) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 176
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 176
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 208
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 176
;; live  gen 	 0 [r0] 1 [r1] 208
;; live  kill	 14 [lr]

;; Pred edge  13 [39.0%]  (fallthru)
(note 135 134 136 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 136 135 137 14 init/initramfs.c:314 (set (reg/f:SI 208)
        (reg/f:SI 198)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 137 136 138 14 init/initramfs.c:314 (set (reg:SI 0 r0)
        (mem/c/i:SI (plus:SI (reg/f:SI 198)
                (const_int 192 [0xc0])) [0 wfd+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 138 137 139 14 init/initramfs.c:314 (set (reg:SI 1 r1)
        (reg:SI 176 [ body_len.381 ])) 167 {*arm_movsi_insn} (nil))

(call_insn 139 138 140 14 init/initramfs.c:314 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sys_ftruncate") [flags 0x41] <function_decl 0x11452500 sys_ftruncate>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 14 -> ( 15)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  15 [100.0%]  (fallthru)

;; Start of basic block ( 13 14) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 175 209 210 211 212
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 175 209 210 211 212
;; live  kill	 14 [lr]

;; Pred edge  13 [61.0%] 
;; Pred edge  14 [100.0%]  (fallthru)
(code_label 140 139 141 15 113 "" [1 uses])

(note 141 140 142 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 142 141 143 15 init/initramfs.c:315 (set (reg/f:SI 209)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 143 142 144 15 init/initramfs.c:315 (set (reg:SI 0 r0)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 209)
                (const_int 16 [0x10])) [0 collected+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 144 143 145 15 init/initramfs.c:315 (set (reg:SI 1 r1)
        (const_int 208 [0xd0])) 167 {*arm_movsi_insn} (nil))

(call_insn 145 144 146 15 init/initramfs.c:315 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("kstrdup") [flags 0x41] <function_decl 0x10b92580 kstrdup>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 146 145 147 15 init/initramfs.c:315 (set (reg/f:SI 175 [ vcollected.382 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 147 146 148 15 init/initramfs.c:315 (set (reg/f:SI 210)
        (reg/f:SI 209)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 148 147 149 15 init/initramfs.c:315 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 209)
                (const_int 196 [0xc4])) [0 vcollected+0 S4 A32])
        (reg/f:SI 175 [ vcollected.382 ])) 167 {*arm_movsi_insn} (nil))

(insn 149 148 150 15 init/initramfs.c:316 (set (reg/f:SI 211)
        (reg/f:SI 209)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 150 149 151 15 init/initramfs.c:316 (set (reg:SI 212)
        (const_int 5 [0x5])) 167 {*arm_movsi_insn} (nil))

(insn 151 150 154 15 init/initramfs.c:316 (set (mem/c/i:SI (plus:SI (reg/f:SI 209)
                (const_int 32 [0x20])) [0 state+0 S4 A32])
        (reg:SI 212)) 167 {*arm_movsi_insn} (nil))
;; End of basic block 15 -> ( 25)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  25 [100.0%]  (fallthru)

;; Start of basic block ( 7) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 178 179
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 178
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 178 179
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  7 [100.0%] 
(code_label 154 151 155 16 110 "" [1 uses])

(note 155 154 156 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 156 155 157 16 init/initramfs.c:319 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 178 [ D.25991 ])
            (const_int 16384 [0x4000]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 157 156 158 16 init/initramfs.c:319 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 217)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 16 -> ( 17 20)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 178 179
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 178 179


;; Succ edge  17 [0.0%]  (fallthru)
;; Succ edge  20 [100.0%] 

;; Start of basic block ( 16) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 179
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 179
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 163 167 168 174 213 214 215 216 217 218 219 220 221 222
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 179
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 163 167 168 174 213 214 215 216 217 218 219 220 221 222
;; live  kill	 14 [lr]

;; Pred edge  16 [0.0%]  (fallthru)
(note 158 157 159 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 159 158 160 17 init/initramfs.c:320 (set (reg/f:SI 213)
        (reg/f:SI 183)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 160 159 161 17 init/initramfs.c:320 (set (reg:SI 0 r0)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 183)
                (const_int 16 [0x10])) [0 collected+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 161 160 162 17 init/initramfs.c:320 (set (reg:SI 1 r1)
        (reg:SI 179 [ D.25990 ])) 167 {*arm_movsi_insn} (nil))

(call_insn 162 161 163 17 init/initramfs.c:320 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sys_mkdir") [flags 0x41] <function_decl 0x11464c80 sys_mkdir>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 163 162 164 17 init/initramfs.c:321 (set (reg/f:SI 214)
        (reg/f:SI 183)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 164 163 165 17 init/initramfs.c:321 (set (reg/f:SI 215)
        (reg/f:SI 183)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 165 164 166 17 init/initramfs.c:321 (set (reg/f:SI 216)
        (reg/f:SI 183)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 166 165 167 17 init/initramfs.c:321 (set (reg:SI 0 r0)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 183)
                (const_int 16 [0x10])) [0 collected+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 167 166 168 17 init/initramfs.c:321 (set (reg:SI 1 r1)
        (mem/c/i:SI (plus:SI (reg/f:SI 183)
                (const_int 100 [0x64])) [0 uid+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 168 167 169 17 init/initramfs.c:321 (set (reg:SI 2 r2)
        (mem/c/i:SI (plus:SI (reg/f:SI 183)
                (const_int 104 [0x68])) [0 gid+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn 169 168 170 17 init/initramfs.c:321 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sys_chown") [flags 0x41] <function_decl 0x1145ea80 sys_chown>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 170 169 171 17 init/initramfs.c:322 (set (reg/f:SI 217)
        (reg/f:SI 183)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 171 170 172 17 init/initramfs.c:322 (set (reg/f:SI 218)
        (reg/f:SI 183)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 172 171 173 17 init/initramfs.c:322 (set (reg:SI 219 [ mode ])
        (zero_extend:SI (mem/c/i:HI (plus:SI (reg/f:SI 183)
                    (const_int 216 [0xd8])) [0 mode+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 173 172 174 17 init/initramfs.c:322 (set (reg:SI 0 r0)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 183)
                (const_int 16 [0x10])) [0 collected+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 174 173 175 17 init/initramfs.c:322 (set (reg:SI 1 r1)
        (reg:SI 219 [ mode ])) 167 {*arm_movsi_insn} (nil))

(call_insn 175 174 176 17 init/initramfs.c:322 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sys_chmod") [flags 0x41] <function_decl 0x11458e00 sys_chmod>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 176 175 177 17 init/initramfs.c:323 (set (reg/f:SI 220)
        (reg/f:SI 183)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 177 176 178 17 init/initramfs.c:323 (set (reg/f:SI 163 [ collected.860 ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 183)
                (const_int 16 [0x10])) [0 collected+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 178 177 179 17 init/initramfs.c:323 (set (reg/f:SI 221)
        (reg/f:SI 183)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 179 178 180 17 init/initramfs.c:323 (set (reg:SI 174 [ mtime.383 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 183)
                (const_int 108 [0x6c])) [0 mtime+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(note 180 179 182 17 ("found") NOTE_INSN_DELETED_LABEL 115)

(insn 182 180 183 17 include/linux/slab_def.h:122 (set (reg/f:SI 222)
        (symbol_ref:SI ("malloc_sizes") [flags 0xc0] <var_decl 0x10efe840 malloc_sizes>)) 167 {*arm_movsi_insn} (nil))

(insn 183 182 184 17 include/linux/slab_def.h:122 (set (reg:SI 0 r0)
        (mem/s/f/j:SI (plus:SI (reg/f:SI 222)
                (const_int 4 [0x4])) [0 <variable>.cs_cachep+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 184 183 185 17 include/linux/slab_def.h:122 (set (reg:SI 1 r1)
        (const_int 208 [0xd0])) 167 {*arm_movsi_insn} (nil))

(call_insn 185 184 186 17 include/linux/slab_def.h:122 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("kmem_cache_alloc") [flags 0x41] <function_decl 0x10efa480 kmem_cache_alloc>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 186 185 187 17 include/linux/slab_def.h:122 (set (reg/v/f:SI 168 [ ret ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 187 186 188 17 init/initramfs.c:98 (set (reg/v/f:SI 167 [ de ])
        (reg/v/f:SI 168 [ ret ])) 167 {*arm_movsi_insn} (nil))

(insn 188 187 189 17 init/initramfs.c:99 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 168 [ ret ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 189 188 190 17 init/initramfs.c:99 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 195)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 17 -> ( 18 19)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163 167 174
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163 167 174


;; Succ edge  18 [0.0%]  (fallthru)
;; Succ edge  19 [100.0%] 

;; Start of basic block ( 17) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 223
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 223
;; live  kill	 14 [lr]

;; Pred edge  17 [0.0%]  (fallthru)
(note 190 189 191 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 191 190 192 18 init/initramfs.c:100 (set (reg/f:SI 223)
        (symbol_ref/v/f:SI ("*.LC7") [flags 0x82] <string_cst 0x11532800>)) 167 {*arm_movsi_insn} (nil))

(insn 192 191 193 18 init/initramfs.c:100 (set (reg:SI 0 r0)
        (reg/f:SI 223)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC7") [flags 0x82] <string_cst 0x11532800>)
        (nil)))

(call_insn 193 192 195 18 init/initramfs.c:100 (parallel [
            (call (mem:SI (symbol_ref:SI ("panic") [flags 0x41] <function_decl 0x10a86f00 panic>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_NORETURN (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 18 -> ()
;; lr  out 	 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 13 [sp] 25 [sfp] 26 [afp]



;; Start of basic block ( 17) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163 167 174
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163 167 174
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 165 166 169 224 225 226 227
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163 167 174
;; live  gen 	 0 [r0] 1 [r1] 165 166 169 224 225 226 227
;; live  kill	 14 [lr]

;; Pred edge  17 [100.0%] 
(code_label 195 193 196 19 116 "" [1 uses])

(note 196 195 197 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 197 196 198 19 init/initramfs.c:101 (set (reg/f:SI 165 [ D.26492 ])
        (reg/v/f:SI 168 [ ret ])) 167 {*arm_movsi_insn} (nil))

(insn 198 197 199 19 include/linux/list.h:26 (set (mem/s/f/j:SI (reg/v/f:SI 168 [ ret ]) [0 <variable>.list.next+0 S4 A32])
        (reg/v/f:SI 168 [ ret ])) 167 {*arm_movsi_insn} (nil))

(insn 199 198 200 19 include/linux/list.h:27 (set (mem/s/f/j:SI (plus:SI (reg/v/f:SI 168 [ ret ])
                (const_int 4 [0x4])) [0 <variable>.list.prev+0 S4 A32])
        (reg/v/f:SI 168 [ ret ])) 167 {*arm_movsi_insn} (nil))

(insn 200 199 201 19 init/initramfs.c:102 (set (reg:SI 0 r0)
        (reg/f:SI 163 [ collected.860 ])) 167 {*arm_movsi_insn} (nil))

(insn 201 200 202 19 init/initramfs.c:102 (set (reg:SI 1 r1)
        (const_int 208 [0xd0])) 167 {*arm_movsi_insn} (nil))

(call_insn 202 201 203 19 init/initramfs.c:102 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("kstrdup") [flags 0x41] <function_decl 0x10b92580 kstrdup>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 203 202 204 19 init/initramfs.c:102 (set (reg/f:SI 166 [ D.26491 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 204 203 205 19 init/initramfs.c:102 (set (mem/s/f/j:SI (plus:SI (reg/v/f:SI 168 [ ret ])
                (const_int 8 [0x8])) [0 <variable>.name+0 S4 A32])
        (reg/f:SI 166 [ D.26491 ])) 167 {*arm_movsi_insn} (nil))

(insn 205 204 206 19 init/initramfs.c:103 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 168 [ ret ])
                (const_int 12 [0xc])) [0 <variable>.mtime+0 S4 A32])
        (reg:SI 174 [ mtime.383 ])) 167 {*arm_movsi_insn} (nil))

(insn 206 205 207 19 include/linux/list.h:62 (set (reg/f:SI 224)
        (reg/f:SI 183)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 207 206 208 19 include/linux/list.h:62 (set (reg/f:SI 169 [ D.26490 ])
        (mem/s/f/j/c:SI (plus:SI (reg/f:SI 183)
                (const_int 184 [0xb8])) [0 dir_list.next+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 208 207 209 19 include/linux/list.h:41 (set (mem/s/f/j:SI (plus:SI (reg/f:SI 169 [ D.26490 ])
                (const_int 4 [0x4])) [0 <variable>.prev+0 S4 A32])
        (reg/v/f:SI 168 [ ret ])) 167 {*arm_movsi_insn} (nil))

(insn 209 208 210 19 include/linux/list.h:42 (set (mem/s/f/j:SI (reg/v/f:SI 168 [ ret ]) [0 <variable>.list.next+0 S4 A32])
        (reg/f:SI 169 [ D.26490 ])) 167 {*arm_movsi_insn} (nil))

(insn 210 209 211 19 include/linux/list.h:43 (set (reg/f:SI 225)
        (reg/f:SI 183)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 211 210 212 19 include/linux/list.h:43 (set (reg/f:SI 226)
        (plus:SI (reg/f:SI 183)
            (const_int 184 [0xb8]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 184 [0xb8])))
        (nil)))

(insn 212 211 213 19 include/linux/list.h:43 (set (mem/s/f/j:SI (plus:SI (reg/v/f:SI 168 [ ret ])
                (const_int 4 [0x4])) [0 <variable>.list.prev+0 S4 A32])
        (reg/f:SI 226)) 167 {*arm_movsi_insn} (nil))

(insn 213 212 214 19 include/linux/list.h:44 (set (reg/f:SI 227)
        (reg/f:SI 183)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 214 213 217 19 include/linux/list.h:44 (set (mem/s/f/j/c:SI (plus:SI (reg/f:SI 183)
                (const_int 184 [0xb8])) [0 dir_list.next+0 S4 A32])
        (reg/v/f:SI 168 [ ret ])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 19 -> ( 25)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  25 [100.0%]  (fallthru)

;; Start of basic block ( 16) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 178
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 178
;; lr  def 	 24 [cc] 228 229 230 231 232 233 234
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 178
;; live  gen 	 24 [cc] 228 229 230 231 232 233 234
;; live  kill	

;; Pred edge  16 [100.0%] 
(code_label 217 214 218 20 114 "" [1 uses])

(note 218 217 219 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn 219 218 220 20 init/initramfs.c:324 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 178 [ D.25991 ])
            (const_int 8192 [0x2000]))) 219 {*arm_cmpsi_insn} (nil))

(insn 220 219 221 20 init/initramfs.c:324 (set (reg:SI 229)
        (eq:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (nil))

(insn 221 220 222 20 init/initramfs.c:324 (set (reg:QI 228)
        (subreg:QI (reg:SI 229) 0)) 178 {*arm_movqi_insn} (nil))

(insn 222 221 223 20 init/initramfs.c:324 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 178 [ D.25991 ])
            (const_int 24576 [0x6000]))) 219 {*arm_cmpsi_insn} (nil))

(insn 223 222 224 20 init/initramfs.c:324 (set (reg:SI 231)
        (eq:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (nil))

(insn 224 223 225 20 init/initramfs.c:324 (set (reg:QI 230)
        (subreg:QI (reg:SI 231) 0)) 178 {*arm_movqi_insn} (nil))

(insn 225 224 226 20 init/initramfs.c:324 (set (reg:SI 232)
        (ior:SI (subreg:SI (reg:QI 228) 0)
            (subreg:SI (reg:QI 230) 0))) 89 {*arm_iorsi3} (nil))

(insn 226 225 227 20 init/initramfs.c:324 (set (reg:QI 233)
        (subreg:QI (reg:SI 232) 0)) 178 {*arm_movqi_insn} (nil))

(insn 227 226 228 20 init/initramfs.c:324 (set (reg:SI 234)
        (zero_extend:SI (reg:QI 233))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 228 227 229 20 init/initramfs.c:324 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 234)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 229 228 230 20 init/initramfs.c:324 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 236)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 4 [0x4])
        (nil)))
;; End of basic block 20 -> ( 23 21)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 178
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 178


;; Succ edge  23 [0.0%] 
;; Succ edge  21 [100.0%]  (fallthru)

;; Start of basic block ( 20) -> 21
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 178
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 178
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 178
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  20 [100.0%]  (fallthru)
(note 230 229 231 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn 231 230 232 21 init/initramfs.c:324 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 178 [ D.25991 ])
            (const_int 4096 [0x1000]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 232 231 233 21 init/initramfs.c:324 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 236)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 4 [0x4])
        (nil)))
;; End of basic block 21 -> ( 23 22)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 178
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 178


;; Succ edge  23 [0.0%] 
;; Succ edge  22 [100.0%]  (fallthru)

;; Start of basic block ( 21) -> 22
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 178
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 178
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 178
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  21 [100.0%]  (fallthru)
(note 233 232 234 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(insn 234 233 235 22 init/initramfs.c:324 discrim 2 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 178 [ D.25991 ])
            (const_int 49152 [0xc000]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 235 234 236 22 init/initramfs.c:324 discrim 2 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 269)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 22 -> ( 23 25)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  23 [0.0%]  (fallthru)
;; Succ edge  25 [100.0%] 

;; Start of basic block ( 20 21 22) -> 23
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 173
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 24 [cc] 173
;; live  kill	 14 [lr]

;; Pred edge  20 [0.0%] 
;; Pred edge  21 [0.0%] 
;; Pred edge  22 [0.0%]  (fallthru)
(code_label 236 235 237 23 117 "" [2 uses])

(note 237 236 238 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(call_insn 238 237 239 23 init/initramfs.c:326 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("maybe_link") [flags 0x3] <function_decl 0x114ad200 maybe_link>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))

(insn 239 238 240 23 init/initramfs.c:326 (set (reg:SI 173 [ D.26023 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 240 239 241 23 init/initramfs.c:326 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 173 [ D.26023 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 241 240 242 23 init/initramfs.c:326 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 269)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 23 -> ( 24 25)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  24 [0.0%]  (fallthru)
;; Succ edge  25 [100.0%] 

;; Start of basic block ( 23) -> 24
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 235 236 237 238 239 240 241 242 243 244 245 246
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 235 236 237 238 239 240 241 242 243 244 245 246
;; live  kill	 14 [lr]

;; Pred edge  23 [0.0%]  (fallthru)
(note 242 241 243 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(insn 243 242 244 24 init/initramfs.c:327 (set (reg/f:SI 235)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 244 243 245 24 init/initramfs.c:327 (set (reg/f:SI 236)
        (reg/f:SI 235)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 245 244 246 24 init/initramfs.c:327 (set (reg:SI 237 [ mode ])
        (zero_extend:SI (mem/c/i:HI (plus:SI (reg/f:SI 235)
                    (const_int 216 [0xd8])) [0 mode+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 246 245 247 24 init/initramfs.c:327 (set (reg/f:SI 238)
        (reg/f:SI 235)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 247 246 248 24 init/initramfs.c:327 (set (reg:SI 0 r0)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 235)
                (const_int 16 [0x10])) [0 collected+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 248 247 249 24 init/initramfs.c:327 (set (reg:SI 1 r1)
        (reg:SI 237 [ mode ])) 167 {*arm_movsi_insn} (nil))

(insn 249 248 250 24 init/initramfs.c:327 (set (reg:SI 2 r2)
        (mem/c/i:SI (plus:SI (reg/f:SI 235)
                (const_int 348 [0x15c])) [0 rdev+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn 250 249 251 24 init/initramfs.c:327 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sys_mknod") [flags 0x41] <function_decl 0x11458b80 sys_mknod>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 251 250 252 24 init/initramfs.c:328 (set (reg/f:SI 239)
        (reg/f:SI 235)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 252 251 253 24 init/initramfs.c:328 (set (reg/f:SI 240)
        (reg/f:SI 235)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 253 252 254 24 init/initramfs.c:328 (set (reg/f:SI 241)
        (reg/f:SI 235)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 254 253 255 24 init/initramfs.c:328 (set (reg:SI 0 r0)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 235)
                (const_int 16 [0x10])) [0 collected+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 255 254 256 24 init/initramfs.c:328 (set (reg:SI 1 r1)
        (mem/c/i:SI (plus:SI (reg/f:SI 235)
                (const_int 100 [0x64])) [0 uid+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 256 255 257 24 init/initramfs.c:328 (set (reg:SI 2 r2)
        (mem/c/i:SI (plus:SI (reg/f:SI 235)
                (const_int 104 [0x68])) [0 gid+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn 257 256 258 24 init/initramfs.c:328 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sys_chown") [flags 0x41] <function_decl 0x1145ea80 sys_chown>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 258 257 259 24 init/initramfs.c:329 (set (reg/f:SI 242)
        (reg/f:SI 235)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 259 258 260 24 init/initramfs.c:329 (set (reg/f:SI 243)
        (reg/f:SI 235)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 260 259 261 24 init/initramfs.c:329 (set (reg:SI 244 [ mode ])
        (zero_extend:SI (mem/c/i:HI (plus:SI (reg/f:SI 235)
                    (const_int 216 [0xd8])) [0 mode+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 261 260 262 24 init/initramfs.c:329 (set (reg:SI 0 r0)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 235)
                (const_int 16 [0x10])) [0 collected+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 262 261 263 24 init/initramfs.c:329 (set (reg:SI 1 r1)
        (reg:SI 244 [ mode ])) 167 {*arm_movsi_insn} (nil))

(call_insn 263 262 264 24 init/initramfs.c:329 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sys_chmod") [flags 0x41] <function_decl 0x11458e00 sys_chmod>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 264 263 265 24 init/initramfs.c:330 (set (reg/f:SI 245)
        (reg/f:SI 235)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 265 264 266 24 init/initramfs.c:330 (set (reg/f:SI 246)
        (reg/f:SI 235)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 266 265 267 24 init/initramfs.c:330 (set (reg:SI 0 r0)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 235)
                (const_int 16 [0x10])) [0 collected+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 267 266 268 24 init/initramfs.c:330 (set (reg:SI 1 r1)
        (mem/c/i:SI (plus:SI (reg/f:SI 235)
                (const_int 108 [0x6c])) [0 mtime+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn 268 267 269 24 init/initramfs.c:330 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("do_utime") [flags 0x3] <function_decl 0x11487700 do_utime>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 24 -> ( 25)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  25 [100.0%]  (fallthru)

;; Start of basic block ( 22 19 12 15 8 24 23 6) -> 25
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 182
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 182
;; live  kill	

;; Pred edge  22 [100.0%] 
;; Pred edge  19 [100.0%]  (fallthru)
;; Pred edge  12 [36.7%] 
;; Pred edge  15 [100.0%]  (fallthru)
;; Pred edge  8 [19.1%] 
;; Pred edge  24 [100.0%]  (fallthru)
;; Pred edge  23 [100.0%] 
;; Pred edge  6 [3.1%]  (fallthru)
(code_label 269 268 270 25 109 "" [4 uses])

(note 270 269 271 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(insn 271 270 275 25 init/initramfs.c:334 (set (reg:SI 182 [ <result> ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 275 271 281 25 init/initramfs.c:334 (set (reg/i:SI 0 r0)
        (reg:SI 182 [ <result> ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 281 275 0 25 init/initramfs.c:334 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 25 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
rescanning insn with uid = 38.
deleting insn with uid = 38.
rescanning insn with uid = 40.
deleting insn with uid = 40.
rescanning insn with uid = 41.
deleting insn with uid = 41.
rescanning insn with uid = 42.
deleting insn with uid = 42.
rescanning insn with uid = 49.
deleting insn with uid = 49.
rescanning insn with uid = 52.
deleting insn with uid = 52.
rescanning insn with uid = 56.
deleting insn with uid = 56.
rescanning insn with uid = 57.
deleting insn with uid = 57.
rescanning insn with uid = 59.
deleting insn with uid = 59.
rescanning insn with uid = 79.
deleting insn with uid = 79.
rescanning insn with uid = 80.
deleting insn with uid = 80.
rescanning insn with uid = 84.
deleting insn with uid = 84.
rescanning insn with uid = 85.
deleting insn with uid = 85.
rescanning insn with uid = 107.
deleting insn with uid = 107.
rescanning insn with uid = 108.
deleting insn with uid = 108.
rescanning insn with uid = 114.
deleting insn with uid = 114.
rescanning insn with uid = 115.
deleting insn with uid = 115.
rescanning insn with uid = 119.
deleting insn with uid = 119.
rescanning insn with uid = 120.
deleting insn with uid = 120.
rescanning insn with uid = 121.
deleting insn with uid = 121.
rescanning insn with uid = 122.
deleting insn with uid = 122.
rescanning insn with uid = 123.
deleting insn with uid = 123.
rescanning insn with uid = 125.
deleting insn with uid = 125.
rescanning insn with uid = 126.
deleting insn with uid = 126.
rescanning insn with uid = 127.
deleting insn with uid = 127.
rescanning insn with uid = 128.
deleting insn with uid = 128.
rescanning insn with uid = 131.
deleting insn with uid = 131.
rescanning insn with uid = 132.
deleting insn with uid = 132.
rescanning insn with uid = 136.
deleting insn with uid = 136.
rescanning insn with uid = 137.
deleting insn with uid = 137.
rescanning insn with uid = 147.
deleting insn with uid = 147.
rescanning insn with uid = 148.
deleting insn with uid = 148.
rescanning insn with uid = 149.
deleting insn with uid = 149.
rescanning insn with uid = 151.
deleting insn with uid = 151.
rescanning insn with uid = 159.
deleting insn with uid = 159.
rescanning insn with uid = 160.
deleting insn with uid = 160.
rescanning insn with uid = 163.
deleting insn with uid = 163.
rescanning insn with uid = 164.
deleting insn with uid = 164.
rescanning insn with uid = 165.
deleting insn with uid = 165.
rescanning insn with uid = 166.
deleting insn with uid = 166.
rescanning insn with uid = 167.
deleting insn with uid = 167.
rescanning insn with uid = 168.
deleting insn with uid = 168.
rescanning insn with uid = 170.
deleting insn with uid = 170.
rescanning insn with uid = 171.
deleting insn with uid = 171.
rescanning insn with uid = 172.
deleting insn with uid = 172.
rescanning insn with uid = 173.
deleting insn with uid = 173.
rescanning insn with uid = 176.
deleting insn with uid = 176.
rescanning insn with uid = 177.
deleting insn with uid = 177.
rescanning insn with uid = 178.
deleting insn with uid = 178.
rescanning insn with uid = 179.
deleting insn with uid = 179.
rescanning insn with uid = 188.
deleting insn with uid = 188.
rescanning insn with uid = 197.
deleting insn with uid = 197.
rescanning insn with uid = 198.
deleting insn with uid = 198.
rescanning insn with uid = 199.
deleting insn with uid = 199.
rescanning insn with uid = 204.
deleting insn with uid = 204.
rescanning insn with uid = 205.
deleting insn with uid = 205.
rescanning insn with uid = 206.
deleting insn with uid = 206.
rescanning insn with uid = 207.
deleting insn with uid = 207.
rescanning insn with uid = 208.
deleting insn with uid = 208.
rescanning insn with uid = 209.
deleting insn with uid = 209.
rescanning insn with uid = 210.
deleting insn with uid = 210.
rescanning insn with uid = 211.
deleting insn with uid = 211.
rescanning insn with uid = 212.
deleting insn with uid = 212.
rescanning insn with uid = 213.
deleting insn with uid = 213.
rescanning insn with uid = 214.
deleting insn with uid = 214.
rescanning insn with uid = 244.
deleting insn with uid = 244.
rescanning insn with uid = 245.
deleting insn with uid = 245.
rescanning insn with uid = 246.
deleting insn with uid = 246.
rescanning insn with uid = 249.
deleting insn with uid = 249.
rescanning insn with uid = 251.
deleting insn with uid = 251.
rescanning insn with uid = 252.
deleting insn with uid = 252.
rescanning insn with uid = 253.
deleting insn with uid = 253.
rescanning insn with uid = 254.
deleting insn with uid = 254.
rescanning insn with uid = 255.
deleting insn with uid = 255.
rescanning insn with uid = 256.
deleting insn with uid = 256.
rescanning insn with uid = 258.
deleting insn with uid = 258.
rescanning insn with uid = 259.
deleting insn with uid = 259.
rescanning insn with uid = 260.
deleting insn with uid = 260.
rescanning insn with uid = 261.
deleting insn with uid = 261.
rescanning insn with uid = 264.
deleting insn with uid = 264.
rescanning insn with uid = 265.
deleting insn with uid = 265.
rescanning insn with uid = 266.
deleting insn with uid = 266.
rescanning insn with uid = 267.
deleting insn with uid = 267.
ending the processing of deferred insns

;; Function do_collect (do_collect)[0:1322] (unlikely executed)


6 basic blocks, 6 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, probably never executed.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(11){ }d-1(12){ }d-1(13){ }d-1(14){ }d-1(25){ }d-1(26){ }}
;; bb 0 artificial_uses: { }

Successors:  2 [100.0%]  (fallthru)


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, probably never executed.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  3 [39.0%]  (fallthru) 4 [61.0%] 


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 3900, probably never executed.
Predecessors:  2 [39.0%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  5 [100.0%]  (fallthru)


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 6100, probably never executed.
Predecessors:  2 [61.0%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  5 [100.0%]  (fallthru)


Basic block 5 , prev 4, next 1, loop_depth 0, count 0, freq 10000, probably never executed.
Predecessors:  3 [100.0%]  (fallthru) 4 [100.0%]  (fallthru)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  EXIT [100.0%]  (fallthru)


Basic block 1 , prev 5, loop_depth 0, count 0, freq 10000, probably never executed.
Predecessors:  5 [100.0%]  (fallthru)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(11){ }u-1(13){ }u-1(14){ }u-1(25){ }}

Successors: 


starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 9 (  1.5)


do_collect

Dataflow summary:
def_info->table_size = 0, use_info->table_size = 0
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={4d,3u} r1={3d,1u} r2={3d,1u} r3={2d} r11={1d,5u} r12={2d} r13={1d,6u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={4d,1u} r25={1d,5u} r26={1d,4u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,6u} r134={1d,1u} r135={2d,1u} r136={1d,2u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r171={1d,1u} 
;;    total ref usage 244{173d,71u,0e} in 53{52 regular + 1 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(11){ }d-1(12){ }d-1(13){ }d-1(14){ }d-1(25){ }d-1(26){ }}
;; bb 0 artificial_uses: { }

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 2 )->[3]->( 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 2 )->[4]->( 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 3 4 )->[5]->( 1 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 5 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(11){ }u-1(13){ }u-1(14){ }u-1(25){ }}

Finding needed instructions:
  Adding insn 49 to worklist
  Adding insn 47 to worklist
  Adding insn 42 to worklist
  Adding insn 37 to worklist
  Adding insn 32 to worklist
  Adding insn 26 to worklist
  Adding insn 20 to worklist
  Adding insn 59 to worklist
  Adding insn 73 to worklist
Finished finding needed instructions:
processing block 5 lr out =  0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 67 to worklist
  Adding insn 63 to worklist
processing block 3 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
  Adding insn 51 to worklist
processing block 4 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
  Adding insn 60 to worklist
  Adding insn 58 to worklist
  Adding insn 57 to worklist
  Adding insn 56 to worklist
processing block 2 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 48 to worklist
  Adding insn 46 to worklist
  Adding insn 45 to worklist
  Adding insn 44 to worklist
  Adding insn 43 to worklist
  Adding insn 41 to worklist
  Adding insn 40 to worklist
  Adding insn 39 to worklist
  Adding insn 38 to worklist
  Adding insn 36 to worklist
  Adding insn 35 to worklist
  Adding insn 34 to worklist
  Adding insn 33 to worklist
  Adding insn 31 to worklist
  Adding insn 30 to worklist
  Adding insn 29 to worklist
  Adding insn 28 to worklist
  Adding insn 27 to worklist
  Adding insn 25 to worklist
  Adding insn 24 to worklist
  Adding insn 23 to worklist
  Adding insn 22 to worklist
  Adding insn 19 to worklist
  Adding insn 18 to worklist
  Adding insn 17 to worklist
  Adding insn 16 to worklist
  Adding insn 15 to worklist
  Adding insn 14 to worklist
  Adding insn 13 to worklist
  Adding insn 12 to worklist
  Adding insn 11 to worklist
  Adding insn 10 to worklist
  Adding insn 9 to worklist
  Adding insn 8 to worklist
  Adding insn 7 to worklist
  Adding insn 6 to worklist
  Adding insn 5 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 10 (  1.7)
;; Following path with 53 sets: 2 4 
deferring rescan insn with uid = 7.
deferring rescan insn with uid = 8.
deferring rescan insn with uid = 10.
deferring rescan insn with uid = 11.
deferring rescan insn with uid = 12.
deferring rescan insn with uid = 13.
deferring rescan insn with uid = 17.
deferring rescan insn with uid = 18.
deferring rescan insn with uid = 19.
deferring rescan insn with uid = 22.
deferring rescan insn with uid = 23.
deferring rescan insn with uid = 24.
deferring rescan insn with uid = 26.
deferring rescan insn with uid = 27.
deferring rescan insn with uid = 29.
deferring rescan insn with uid = 30.
deferring rescan insn with uid = 32.
deferring rescan insn with uid = 33.
deferring rescan insn with uid = 34.
deferring rescan insn with uid = 35.
deferring rescan insn with uid = 37.
deferring rescan insn with uid = 38.
deferring rescan insn with uid = 39.
deferring rescan insn with uid = 40.
deferring rescan insn with uid = 42.
deferring rescan insn with uid = 43.
deferring rescan insn with uid = 44.
deferring rescan insn with uid = 46.
deferring rescan insn with uid = 47.
deferring rescan insn with uid = 56.
deferring rescan insn with uid = 57.
deferring rescan insn with uid = 58.
deferring rescan insn with uid = 59.
deferring rescan insn with uid = 60.
;; Following path with 49 sets: 2 3 
;; Following path with 3 sets: 5 
deferring rescan insn with uid = 67.


try_optimize_cfg iteration 1



do_collect

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={4d,3u} r1={3d,1u} r2={3d,1u} r3={2d} r11={1d,5u} r12={2d} r13={1d,6u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={4d,1u} r25={1d,5u} r26={1d,4u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,6u} r134={1d,1u} r135={2d,1u} r136={1d,2u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r171={1d,1u} 
;;    total ref usage 244{173d,71u,0e} in 53{52 regular + 1 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134 136 138 139 140 141 142 143 144 145 146 147 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 133 134 136 138 139 140 141 142 143 144 145 146 147 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168
;; live  kill	 14 [lr] 24 [cc]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)

(insn 5 2 6 2 init/initramfs.c:206 (set (reg/f:SI 138)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 6 5 7 2 init/initramfs.c:206 (set (reg/v:SI 134 [ n ])
        (mem/c/i:SI (plus:SI (reg/f:SI 138)
                (const_int 40 [0x28])) [0 remains+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 7 6 8 2 init/initramfs.c:206 (set (reg/f:SI 139)
        (reg/f:SI 138)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 8 7 9 2 init/initramfs.c:206 (set (reg:SI 140 [ count ])
        (mem/c/i:SI (plus:SI (reg/f:SI 138)
                (const_int 8 [0x8])) [0 count+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 9 8 10 2 init/initramfs.c:206 (parallel [
            (set (reg/v:SI 133 [ n.896 ])
                (umin:SI (reg/v:SI 134 [ n ])
                    (reg:SI 140 [ count ])))
            (clobber (reg:CC 24 cc))
        ]) 107 {*arm_uminsi3} (nil))

(insn 10 9 11 2 init/initramfs.c:209 (set (reg/f:SI 141)
        (reg/f:SI 138)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 11 10 12 2 init/initramfs.c:209 (set (reg/f:SI 142 [ collect ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 138)
                (const_int 36 [0x24])) [0 collect+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 12 11 13 2 init/initramfs.c:209 (set (reg/f:SI 143)
        (reg/f:SI 138)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 13 12 14 2 init/initramfs.c:209 (set (reg/f:SI 144 [ victim ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 138)
                (const_int 12 [0xc])) [0 victim+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 14 13 15 2 init/initramfs.c:209 (set (reg/f:SI 145 [ collect ])
        (reg/f:SI 142 [ collect ])) 167 {*arm_movsi_insn} (nil))

(insn 15 14 16 2 init/initramfs.c:209 (set (reg/f:SI 146 [ victim ])
        (reg/f:SI 144 [ victim ])) 167 {*arm_movsi_insn} (nil))

(insn 16 15 17 2 init/initramfs.c:209 (set (reg:SI 147 [ n.896 ])
        (reg/v:SI 133 [ n.896 ])) 167 {*arm_movsi_insn} (nil))

(insn 17 16 18 2 init/initramfs.c:209 (set (reg:SI 0 r0)
        (reg/f:SI 142 [ collect ])) 167 {*arm_movsi_insn} (nil))

(insn 18 17 19 2 init/initramfs.c:209 (set (reg:SI 1 r1)
        (reg/f:SI 144 [ victim ])) 167 {*arm_movsi_insn} (nil))

(insn 19 18 20 2 init/initramfs.c:209 (set (reg:SI 2 r2)
        (reg/v:SI 133 [ n.896 ])) 167 {*arm_movsi_insn} (nil))

(call_insn 20 19 22 2 init/initramfs.c:209 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41] <function_decl 0x1150cc00 memcpy>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 22 20 23 2 init/initramfs.c:172 (set (reg/f:SI 149)
        (reg/f:SI 138)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 23 22 24 2 init/initramfs.c:172 (set (reg/f:SI 150)
        (reg/f:SI 138)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 24 23 25 2 init/initramfs.c:172 (set (reg/f:SI 151 [ victim ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 138)
                (const_int 12 [0xc])) [0 victim+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 25 24 26 2 init/initramfs.c:172 (set (reg:SI 152)
        (plus:SI (reg/f:SI 151 [ victim ])
            (reg/v:SI 133 [ n.896 ]))) 4 {*arm_addsi3} (nil))

(insn 26 25 27 2 init/initramfs.c:172 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 138)
                (const_int 12 [0xc])) [0 victim+0 S4 A32])
        (reg:SI 152)) 167 {*arm_movsi_insn} (nil))

(insn 27 26 28 2 init/initramfs.c:173 (set (reg/f:SI 153)
        (reg/f:SI 138)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 28 27 29 2 init/initramfs.c:173 (set (reg:DI 154 [ n.896 ])
        (zero_extend:DI (reg/v:SI 133 [ n.896 ]))) 138 {*arm_zero_extendsidi2} (nil))

(insn 29 28 30 2 init/initramfs.c:173 (set (reg/f:SI 155)
        (reg/f:SI 138)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 30 29 31 2 init/initramfs.c:173 (set (reg:DI 156 [ this_header ])
        (mem/c/i:DI (plus:SI (reg/f:SI 138)
                (const_int 24 [0x18])) [0 this_header+0 S8 A64])) 163 {*arm_movdi} (nil))

(insn 31 30 32 2 init/initramfs.c:173 (parallel [
            (set (reg:DI 157)
                (plus:DI (reg:DI 154 [ n.896 ])
                    (reg:DI 156 [ this_header ])))
            (clobber (reg:CC 24 cc))
        ]) 1 {*arm_adddi3} (nil))

(insn 32 31 33 2 init/initramfs.c:173 (set (mem/c/i:DI (plus:SI (reg/f:SI 138)
                (const_int 24 [0x18])) [0 this_header+0 S8 A64])
        (reg:DI 157)) 163 {*arm_movdi} (nil))

(insn 33 32 34 2 init/initramfs.c:174 (set (reg/f:SI 158)
        (reg/f:SI 138)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 34 33 35 2 init/initramfs.c:174 (set (reg/f:SI 159)
        (reg/f:SI 138)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 35 34 36 2 init/initramfs.c:174 (set (reg:SI 160 [ count ])
        (mem/c/i:SI (plus:SI (reg/f:SI 138)
                (const_int 8 [0x8])) [0 count+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 36 35 37 2 init/initramfs.c:174 (set (reg:SI 161)
        (minus:SI (reg:SI 160 [ count ])
            (reg/v:SI 133 [ n.896 ]))) 28 {*arm_subsi3_insn} (nil))

(insn 37 36 38 2 init/initramfs.c:174 (set (mem/c/i:SI (plus:SI (reg/f:SI 138)
                (const_int 8 [0x8])) [0 count+0 S4 A32])
        (reg:SI 161)) 167 {*arm_movsi_insn} (nil))

(insn 38 37 39 2 init/initramfs.c:211 (set (reg/f:SI 162)
        (reg/f:SI 138)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 39 38 40 2 init/initramfs.c:211 (set (reg/f:SI 163)
        (reg/f:SI 138)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 40 39 41 2 init/initramfs.c:211 (set (reg/f:SI 164 [ collect ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 138)
                (const_int 36 [0x24])) [0 collect+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 41 40 42 2 init/initramfs.c:211 (set (reg:SI 165)
        (plus:SI (reg/f:SI 164 [ collect ])
            (reg/v:SI 133 [ n.896 ]))) 4 {*arm_addsi3} (nil))

(insn 42 41 43 2 init/initramfs.c:211 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 138)
                (const_int 36 [0x24])) [0 collect+0 S4 A32])
        (reg:SI 165)) 167 {*arm_movsi_insn} (nil))

(insn 43 42 44 2 init/initramfs.c:212 (set (reg/f:SI 166)
        (reg/f:SI 138)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 44 43 45 2 init/initramfs.c:212 (set (reg:SI 167 [ remains ])
        (mem/c/i:SI (plus:SI (reg/f:SI 138)
                (const_int 40 [0x28])) [0 remains+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 45 44 46 2 init/initramfs.c:212 (set (reg:SI 136 [ remains.342 ])
        (minus:SI (reg:SI 167 [ remains ])
            (reg/v:SI 133 [ n.896 ]))) 28 {*arm_subsi3_insn} (nil))

(insn 46 45 47 2 init/initramfs.c:212 (set (reg/f:SI 168)
        (reg/f:SI 138)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 47 46 48 2 init/initramfs.c:212 (set (mem/c/i:SI (plus:SI (reg/f:SI 138)
                (const_int 40 [0x28])) [0 remains+0 S4 A32])
        (reg:SI 136 [ remains.342 ])) 167 {*arm_movsi_insn} (nil))

(insn 48 47 49 2 init/initramfs.c:212 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 136 [ remains.342 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 49 48 50 2 init/initramfs.c:212 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 54)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
        (nil)))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  3 [39.0%]  (fallthru)
;; Succ edge  4 [61.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 135
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 135
;; live  kill	

;; Pred edge  2 [39.0%]  (fallthru)
(note 50 49 51 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 51 50 54 3 init/initramfs.c:213 (set (reg:SI 135 [ D.25859 ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 3 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 135 169 170 171
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 135 169 170 171
;; live  kill	

;; Pred edge  2 [61.0%] 
(code_label 54 51 55 4 127 "" [1 uses])

(note 55 54 56 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 56 55 57 4 init/initramfs.c:214 (set (reg/f:SI 169)
        (reg/f:SI 138)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 57 56 58 4 init/initramfs.c:214 (set (reg/f:SI 170)
        (reg/f:SI 138)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 58 57 59 4 init/initramfs.c:214 (set (reg:SI 171 [ next_state ])
        (mem/c/i:SI (plus:SI (reg/f:SI 138)
                (const_int 44 [0x2c])) [0 next_state+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 59 58 60 4 init/initramfs.c:214 (set (mem/c/i:SI (plus:SI (reg/f:SI 138)
                (const_int 32 [0x20])) [0 state+0 S4 A32])
        (reg:SI 171 [ next_state ])) 167 {*arm_movsi_insn} (nil))

(insn 60 59 61 4 init/initramfs.c:215 (set (reg:SI 135 [ D.25859 ])
        (reg:SI 136 [ remains.342 ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))
;; End of basic block 4 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 3 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 0 [r0] 137
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; live  gen 	 0 [r0] 137
;; live  kill	

;; Pred edge  3 [100.0%]  (fallthru)
;; Pred edge  4 [100.0%]  (fallthru)
(code_label 61 60 62 5 128 "" [0 uses])

(note 62 61 63 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 63 62 67 5 init/initramfs.c:216 (set (reg:SI 137 [ <result> ])
        (reg:SI 135 [ D.25859 ])) 167 {*arm_movsi_insn} (nil))

(insn 67 63 73 5 init/initramfs.c:216 (set (reg/i:SI 0 r0)
        (reg:SI 135 [ D.25859 ])) 167 {*arm_movsi_insn} (nil))

(insn 73 67 0 5 init/initramfs.c:216 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 5 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
rescanning insn with uid = 7.
deleting insn with uid = 7.
rescanning insn with uid = 8.
deleting insn with uid = 8.
rescanning insn with uid = 10.
deleting insn with uid = 10.
rescanning insn with uid = 11.
deleting insn with uid = 11.
rescanning insn with uid = 12.
deleting insn with uid = 12.
rescanning insn with uid = 13.
deleting insn with uid = 13.
rescanning insn with uid = 17.
deleting insn with uid = 17.
rescanning insn with uid = 18.
deleting insn with uid = 18.
rescanning insn with uid = 19.
deleting insn with uid = 19.
rescanning insn with uid = 22.
deleting insn with uid = 22.
rescanning insn with uid = 23.
deleting insn with uid = 23.
rescanning insn with uid = 24.
deleting insn with uid = 24.
rescanning insn with uid = 26.
deleting insn with uid = 26.
rescanning insn with uid = 27.
deleting insn with uid = 27.
rescanning insn with uid = 29.
deleting insn with uid = 29.
rescanning insn with uid = 30.
deleting insn with uid = 30.
rescanning insn with uid = 32.
deleting insn with uid = 32.
rescanning insn with uid = 33.
deleting insn with uid = 33.
rescanning insn with uid = 34.
deleting insn with uid = 34.
rescanning insn with uid = 35.
deleting insn with uid = 35.
rescanning insn with uid = 37.
deleting insn with uid = 37.
rescanning insn with uid = 38.
deleting insn with uid = 38.
rescanning insn with uid = 39.
deleting insn with uid = 39.
rescanning insn with uid = 40.
deleting insn with uid = 40.
rescanning insn with uid = 42.
deleting insn with uid = 42.
rescanning insn with uid = 43.
deleting insn with uid = 43.
rescanning insn with uid = 44.
deleting insn with uid = 44.
rescanning insn with uid = 46.
deleting insn with uid = 46.
rescanning insn with uid = 47.
deleting insn with uid = 47.
rescanning insn with uid = 56.
deleting insn with uid = 56.
rescanning insn with uid = 57.
deleting insn with uid = 57.
rescanning insn with uid = 58.
deleting insn with uid = 58.
rescanning insn with uid = 59.
deleting insn with uid = 59.
rescanning insn with uid = 60.
deleting insn with uid = 60.
rescanning insn with uid = 67.
deleting insn with uid = 67.
ending the processing of deferred insns

;; Function do_header (do_header)[0:1323] (unlikely executed)


22 basic blocks, 32 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 1539, probably never executed.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(11){ }d-1(12){ }d-1(13){ }d-1(14){ }d-1(25){ }d-1(26){ }}
;; bb 0 artificial_uses: { }

Successors:  2 [100.0%]  (fallthru)


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 1539, probably never executed.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  3 [0.0%]  (fallthru) 5 [100.0%] 


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 1, probably never executed.
Predecessors:  2 [0.0%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  4 [15.0%]  (fallthru) 19 [85.0%] 


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 0, probably never executed.
Predecessors:  3 [15.0%]  (fallthru)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  21 [100.0%]  (fallthru)


Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 1538, probably never executed.
Predecessors:  2 [100.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  6 [50.0%]  (fallthru) 8 [50.0%] 


Basic block 6 , prev 5, next 7, loop_depth 0, count 0, freq 769, probably never executed.
Predecessors:  5 [50.0%]  (fallthru)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  7 [15.0%]  (fallthru) 19 [85.0%] 


Basic block 7 , prev 6, next 8, loop_depth 0, count 0, freq 115, probably never executed.
Predecessors:  6 [15.0%]  (fallthru)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  21 [100.0%]  (fallthru)


Basic block 8 , prev 7, next 9, loop_depth 0, count 0, freq 769, probably never executed.
Predecessors:  5 [50.0%] 
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  9 [100.0%]  (fallthru)


Basic block 9 , prev 8, next 10, loop_depth 1, count 0, freq 9231, probably never executed.
Predecessors:  9 [91.7%]  (dfs_back) 8 [100.0%]  (fallthru)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  9 [91.7%]  (dfs_back) 10 [8.3%]  (fallthru)


Basic block 10 , prev 9, next 11, loop_depth 0, count 0, freq 769, probably never executed.
Predecessors:  9 [8.3%]  (fallthru)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  20 [39.0%]  11 [61.0%]  (fallthru)


Basic block 11 , prev 10, next 12, loop_depth 0, count 0, freq 469, probably never executed.
Predecessors:  10 [61.0%]  (fallthru)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  12 [28.0%]  (fallthru) 14 [72.0%] 


Basic block 12 , prev 11, next 13, loop_depth 0, count 0, freq 131, probably never executed.
Predecessors:  11 [28.0%]  (fallthru)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  20 [50.0%]  13 [50.0%]  (fallthru)


Basic block 13 , prev 12, next 14, loop_depth 0, count 0, freq 66, probably never executed.
Predecessors:  12 [50.0%]  (fallthru)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  21 [100.0%]  (fallthru)


Basic block 14 , prev 13, next 15, loop_depth 0, count 0, freq 338, probably never executed.
Predecessors:  11 [72.0%] 
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  16 [0.0%]  15 [100.0%]  (fallthru)


Basic block 15 , prev 14, next 16, loop_depth 0, count 0, freq 338, probably never executed.
Predecessors:  14 [100.0%]  (fallthru)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  16 [0.0%]  (fallthru) 20 [100.0%] 


Basic block 16 , prev 15, next 17, loop_depth 0, count 0, freq 0, probably never executed.
Predecessors:  14 [0.0%]  15 [0.0%]  (fallthru)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  17 [0.0%]  (fallthru) 18 [100.0%] 


Basic block 17 , prev 16, next 18, loop_depth 0, count 0, freq 0, probably never executed.
Predecessors:  16 [0.0%]  (fallthru)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  21 [100.0%]  (fallthru)


Basic block 18 , prev 17, next 19, loop_depth 0, count 0, freq 0, probably never executed.
Predecessors:  16 [100.0%] 
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  21 [100.0%]  (fallthru)


Basic block 19 , prev 18, next 20, loop_depth 0, count 0, freq 654, probably never executed.
Predecessors:  3 [85.0%]  6 [85.0%] 
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  21 [100.0%]  (fallthru)


Basic block 20 , prev 19, next 21, loop_depth 0, count 0, freq 704, probably never executed.
Predecessors:  12 [50.0%]  10 [39.0%]  15 [100.0%] 
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  21 [100.0%]  (fallthru)


Basic block 21 , prev 20, next 1, loop_depth 0, count 0, freq 1539, probably never executed.
Predecessors:  20 [100.0%]  (fallthru) 19 [100.0%]  (fallthru) 18 [100.0%]  (fallthru) 13 [100.0%]  (fallthru) 17 [100.0%]  (fallthru) 4 [100.0%]  (fallthru) 7 [100.0%]  (fallthru)
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  EXIT [100.0%]  (fallthru)


Basic block 1 , prev 21, loop_depth 0, count 0, freq 1539, probably never executed.
Predecessors:  21 [100.0%]  (fallthru)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(11){ }u-1(13){ }u-1(14){ }u-1(25){ }}

Successors: 


starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 22 n_edges 32 count 40 (  1.8)


do_header

Dataflow summary:
def_info->table_size = 0, use_info->table_size = 0
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={10d,9u} r1={9d,4u} r2={9d,4u} r3={5d} r11={1d,21u} r12={5d} r13={1d,25u} r14={5d,1u} r15={4d} r16={4d} r17={4d} r18={4d} r19={4d} r20={4d} r21={4d} r22={4d} r23={4d} r24={18d,11u} r25={1d,37u} r26={1d,20u} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r81={4d} r82={4d} r83={4d} r84={4d} r85={4d} r86={4d} r87={4d} r88={4d} r89={4d} r90={4d} r91={4d} r92={4d} r93={4d} r94={4d} r95={4d} r96={4d} r97={4d} r98={4d} r99={4d} r100={4d} r101={4d} r102={4d} r103={4d} r104={4d} r105={4d} r106={4d} r107={4d} r108={4d} r109={4d} r110={4d} r111={4d} r112={4d} r113={4d} r114={4d} r115={4d} r116={4d} r117={4d} r118={4d} r119={4d} r120={4d} r121={4d} r122={4d} r123={4d} r124={4d} r125={4d} r126={4d} r127={4d} r135={2d,3u} r136={1d,2u} r137={1d,2u} r138={1d,1u} r139={1d,2u} r140={1d,5u} r141={1d,2u,1d} r142={1d,3u} r143={1d,2u} r144={2d,2u} r145={1d,2u} r146={1d,2u} r147={1d,2u} r148={1d,2u} r149={1d,5u} r150={1d,2u} r151={1d,1u} r152={7d,1u} r153={1d,1u} r154={1d,3u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r171={1d,1u} r172={1d,1u} r173={1d,1u} r174={1d,1u} r176={1d,1u} r177={1d,1u} r178={1d,1u} r179={1d,1u} r180={1d,1u} r181={1d,1u} r182={1d,1u} r183={1d,1u} r184={1d,1u} r185={1d,1u} r186={1d,1u} r187={1d,1u} r188={1d,1u} r189={1d,1u} r190={1d,1u} r191={1d,1u} r192={1d,1u} r193={1d,1u} r194={1d,1u} r195={1d,1u} r196={1d,1u} r197={1d,1u} r198={1d,1u} r199={1d,1u} r200={1d,1u} r201={1d,1u} r202={1d,1u} r203={1d,1u} r204={1d,1u} r205={1d,1u} r206={1d,1u} r207={1d,1u} r208={1d,1u} r209={1d,1u} r210={1d,1u} r211={1d,1u} r212={1d,1u} r213={1d,1u} r214={1d,1u} r215={1d,1u} r216={1d,1u} r217={1d,1u} r218={1d,1u} r219={1d,1u} r220={1d,1u} r221={1d,1u} r222={1d,1u} r223={1d,1u} r224={1d,1u} r225={1d,1u} r226={1d,1u} r227={1d,1u} r228={1d,1u} r229={1d,1u} r230={1d,1u} r231={1d,1u} r232={1d,1u} r233={1d,1u} r234={1d,1u} r235={1d,1u} r236={1d,1u} r237={1d,1u} r238={1d,1u} r239={1d,1u} r240={1d,1u} r241={1d,1u} r242={1d,1u} r243={1d,1u} r244={1d,1u} r245={1d,1u} r246={1d,1u} r247={1d,1u} r248={1d,1u} r249={1d,1u} r250={1d,1u} 
;;    total ref usage 901{628d,272u,1e} in 195{191 regular + 4 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(11){ }d-1(12){ }d-1(13){ }d-1(14){ }d-1(25){ }d-1(26){ }}
;; bb 0 artificial_uses: { }

( 0 )->[2]->( 3 5 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 2 )->[3]->( 4 19 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 3 )->[4]->( 21 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 2 )->[5]->( 6 8 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 5 )->[6]->( 7 19 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 6 )->[7]->( 21 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 5 )->[8]->( 9 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 9 8 )->[9]->( 9 10 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 9 )->[10]->( 20 11 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 10 )->[11]->( 12 14 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 11 )->[12]->( 20 13 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 12 )->[13]->( 21 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 11 )->[14]->( 16 15 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 14 )->[15]->( 16 20 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 14 15 )->[16]->( 17 18 )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 16 )->[17]->( 21 )
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 16 )->[18]->( 21 )
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 3 6 )->[19]->( 21 )
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 12 10 15 )->[20]->( 21 )
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 20 19 18 13 17 4 7 )->[21]->( 1 )
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 21 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(11){ }u-1(13){ }u-1(14){ }u-1(25){ }}

Finding needed instructions:
  Adding insn 17 to worklist
  Adding insn 13 to worklist
  Adding insn 22 to worklist
  Adding insn 26 to worklist
  Adding insn 40 to worklist
  Adding insn 36 to worklist
  Adding insn 45 to worklist
  Adding insn 49 to worklist
  Adding insn 57 to worklist
  Adding insn 82 to worklist
  Adding insn 77 to worklist
  Adding insn 74 to worklist
  Adding insn 68 to worklist
  Adding insn 151 to worklist
  Adding insn 147 to worklist
  Adding insn 144 to worklist
  Adding insn 129 to worklist
  Adding insn 126 to worklist
  Adding insn 111 to worklist
  Adding insn 108 to worklist
  Adding insn 105 to worklist
  Adding insn 102 to worklist
  Adding insn 99 to worklist
  Adding insn 96 to worklist
  Adding insn 93 to worklist
  Adding insn 90 to worklist
  Adding insn 86 to worklist
  Adding insn 155 to worklist
  Adding insn 158 to worklist
  Adding insn 175 to worklist
  Adding insn 172 to worklist
  Adding insn 169 to worklist
  Adding insn 165 to worklist
  Adding insn 163 to worklist
  Adding insn 182 to worklist
  Adding insn 185 to worklist
  Adding insn 193 to worklist
  Adding insn 209 to worklist
  Adding insn 206 to worklist
  Adding insn 203 to worklist
  Adding insn 201 to worklist
  Adding insn 198 to worklist
  Adding insn 226 to worklist
  Adding insn 223 to worklist
  Adding insn 220 to worklist
  Adding insn 218 to worklist
  Adding insn 216 to worklist
  Adding insn 250 to worklist
Finished finding needed instructions:
processing block 21 lr out =  0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 244 to worklist
  Adding insn 240 to worklist
processing block 4 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 152
  Adding insn 27 to worklist
  Adding insn 25 to worklist
  Adding insn 24 to worklist
processing block 19 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 152
  Adding insn 232 to worklist
processing block 3 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 21 to worklist
  Adding insn 20 to worklist
  Adding insn 19 to worklist
processing block 7 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 152
  Adding insn 50 to worklist
  Adding insn 48 to worklist
  Adding insn 47 to worklist
processing block 6 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 44 to worklist
  Adding insn 43 to worklist
  Adding insn 42 to worklist
processing block 20 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 152
  Adding insn 237 to worklist
processing block 13 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 152
  Adding insn 176 to worklist
  Adding insn 174 to worklist
  Adding insn 173 to worklist
  Adding insn 171 to worklist
  Adding insn 170 to worklist
  Adding insn 168 to worklist
  Adding insn 167 to worklist
  Adding insn 166 to worklist
  Adding insn 164 to worklist
  Adding insn 162 to worklist
  Adding insn 161 to worklist
  Adding insn 160 to worklist
processing block 12 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 150
  Adding insn 157 to worklist
processing block 17 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 152
  Adding insn 210 to worklist
  Adding insn 208 to worklist
  Adding insn 207 to worklist
  Adding insn 205 to worklist
  Adding insn 204 to worklist
  Adding insn 202 to worklist
  Adding insn 200 to worklist
  Adding insn 199 to worklist
  Adding insn 197 to worklist
  Adding insn 196 to worklist
  Adding insn 195 to worklist
processing block 18 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 152
  Adding insn 227 to worklist
  Adding insn 225 to worklist
  Adding insn 224 to worklist
  Adding insn 222 to worklist
  Adding insn 221 to worklist
  Adding insn 219 to worklist
  Adding insn 217 to worklist
  Adding insn 215 to worklist
processing block 16 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 145 148 149
  Adding insn 192 to worklist
  Adding insn 191 to worklist
  Adding insn 190 to worklist
  Adding insn 189 to worklist
  Adding insn 188 to worklist
processing block 15 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 148 149
  Adding insn 184 to worklist
processing block 14 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 148 149
  Adding insn 181 to worklist
processing block 11 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 147 148 149 150
  Adding insn 154 to worklist
  Adding insn 153 to worklist
processing block 10 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 148 149 150
  Adding insn 150 to worklist
  Adding insn 149 to worklist
  Adding insn 148 to worklist
  Adding insn 146 to worklist
  Adding insn 145 to worklist
  Adding insn 143 to worklist
  Adding insn 142 to worklist
  Adding insn 141 to worklist
  Adding insn 140 to worklist
  Adding insn 139 to worklist
  Adding insn 138 to worklist
  Adding insn 137 to worklist
  Adding insn 136 to worklist
  Adding insn 135 to worklist
  Adding insn 134 to worklist
  Adding insn 133 to worklist
  Adding insn 132 to worklist
  Adding insn 131 to worklist
  Adding insn 130 to worklist
  Adding insn 128 to worklist
  Adding insn 127 to worklist
  Adding insn 125 to worklist
  Adding insn 124 to worklist
  Adding insn 123 to worklist
  Adding insn 122 to worklist
  Adding insn 121 to worklist
  Adding insn 120 to worklist
  Adding insn 119 to worklist
  Adding insn 118 to worklist
  Adding insn 117 to worklist
  Adding insn 116 to worklist
  Adding insn 115 to worklist
  Adding insn 114 to worklist
  Adding insn 113 to worklist
  Adding insn 112 to worklist
  Adding insn 110 to worklist
  Adding insn 109 to worklist
  Adding insn 107 to worklist
  Adding insn 106 to worklist
  Adding insn 104 to worklist
  Adding insn 103 to worklist
  Adding insn 101 to worklist
  Adding insn 100 to worklist
  Adding insn 98 to worklist
  Adding insn 97 to worklist
  Adding insn 95 to worklist
  Adding insn 94 to worklist
  Adding insn 92 to worklist
  Adding insn 91 to worklist
  Adding insn 89 to worklist
  Adding insn 88 to worklist
  Adding insn 87 to worklist
  Adding insn 85 to worklist
  Adding insn 84 to worklist
processing block 9 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 144
  Adding insn 81 to worklist
  Adding insn 79 to worklist
  Adding insn 78 to worklist
  Adding insn 76 to worklist
  Adding insn 75 to worklist
  Adding insn 73 to worklist
  Adding insn 72 to worklist
  Adding insn 71 to worklist
  Adding insn 70 to worklist
  Adding insn 67 to worklist
  Adding insn 66 to worklist
  Adding insn 65 to worklist
  Adding insn 64 to worklist
  Adding insn 63 to worklist
  Adding insn 62 to worklist
  Adding insn 61 to worklist
processing block 8 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 144
  Adding insn 59 to worklist
  Adding insn 58 to worklist
  Adding insn 56 to worklist
  Adding insn 55 to worklist
processing block 5 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 154
  Adding insn 39 to worklist
  Adding insn 38 to worklist
  Adding insn 37 to worklist
  Adding insn 35 to worklist
  Adding insn 34 to worklist
  Adding insn 33 to worklist
  Adding insn 32 to worklist
processing block 2 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 154
  Adding insn 16 to worklist
  Adding insn 15 to worklist
  Adding insn 14 to worklist
  Adding insn 12 to worklist
  Adding insn 11 to worklist
  Adding insn 10 to worklist
  Adding insn 9 to worklist
  Adding insn 8 to worklist
  Adding insn 7 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 22 n_edges 32 count 42 (  1.9)
;; Following path with 29 sets: 2 5 8 
deferring rescan insn with uid = 16.
deferring rescan insn with uid = 39.
deferring rescan insn with uid = 55.
deferring rescan insn with uid = 56.
deferring rescan insn with uid = 57.
deferring rescan insn with uid = 59.
;; Following path with 32 sets: 2 5 6 7 
deferring rescan insn with uid = 42.
deferring rescan insn with uid = 43.
deferring rescan insn with uid = 47.
deferring rescan insn with uid = 49.
;; Following path with 21 sets: 2 3 4 
deferring rescan insn with uid = 19.
deferring rescan insn with uid = 20.
deferring rescan insn with uid = 24.
deferring rescan insn with uid = 26.
;; Following path with 102 sets: 9 10 11 14 15 
deferring rescan insn with uid = 65.
deferring rescan insn with uid = 66.
deferring rescan insn with uid = 70.
deferring rescan insn with uid = 71.
deferring rescan insn with uid = 89.
deferring rescan insn with uid = 90.
deferring rescan insn with uid = 91.
deferring rescan insn with uid = 93.
deferring rescan insn with uid = 94.
deferring rescan insn with uid = 96.
deferring rescan insn with uid = 97.
deferring rescan insn with uid = 99.
deferring rescan insn with uid = 100.
deferring rescan insn with uid = 102.
deferring rescan insn with uid = 104.
deferring rescan insn with uid = 105.
deferring rescan insn with uid = 106.
deferring rescan insn with uid = 108.
deferring rescan insn with uid = 109.
deferring rescan insn with uid = 111.
deferring rescan insn with uid = 118.
deferring rescan insn with uid = 121.
deferring rescan insn with uid = 126.
deferring rescan insn with uid = 128.
deferring rescan insn with uid = 129.
deferring rescan insn with uid = 134.
deferring rescan insn with uid = 135.
deferring rescan insn with uid = 137.
deferring rescan insn with uid = 144.
deferring rescan insn with uid = 145.
deferring rescan insn with uid = 147.
;; Following path with 117 sets: 9 10 11 12 13 
deferring rescan insn with uid = 121.
deferring rescan insn with uid = 160.
deferring rescan insn with uid = 161.
deferring rescan insn with uid = 162.
deferring rescan insn with uid = 163.
deferring rescan insn with uid = 164.
deferring rescan insn with uid = 165.
deferring rescan insn with uid = 166.
deferring rescan insn with uid = 169.
deferring rescan insn with uid = 170.
deferring rescan insn with uid = 172.
deferring rescan insn with uid = 173.
deferring rescan insn with uid = 175.
;; Following path with 19 sets: 16 18 
deferring rescan insn with uid = 190.
deferring rescan insn with uid = 191.
deferring rescan insn with uid = 215.
deferring rescan insn with uid = 216.
deferring rescan insn with uid = 217.
deferring rescan insn with uid = 218.
deferring rescan insn with uid = 219.
deferring rescan insn with uid = 220.
deferring rescan insn with uid = 221.
deferring rescan insn with uid = 223.
deferring rescan insn with uid = 224.
deferring rescan insn with uid = 226.
;; Following path with 22 sets: 16 17 
deferring rescan insn with uid = 195.
deferring rescan insn with uid = 196.
deferring rescan insn with uid = 197.
deferring rescan insn with uid = 198.
deferring rescan insn with uid = 199.
deferring rescan insn with uid = 201.
deferring rescan insn with uid = 202.
deferring rescan insn with uid = 203.
deferring rescan insn with uid = 204.
deferring rescan insn with uid = 206.
deferring rescan insn with uid = 207.
deferring rescan insn with uid = 209.
;; Following path with 1 sets: 20 
;; Following path with 1 sets: 19 
;; Following path with 3 sets: 21 
deferring rescan insn with uid = 244.


try_optimize_cfg iteration 1



do_header

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={10d,9u} r1={9d,4u} r2={9d,4u} r3={5d} r11={1d,21u} r12={5d} r13={1d,25u} r14={5d,1u} r15={4d} r16={4d} r17={4d} r18={4d} r19={4d} r20={4d} r21={4d} r22={4d} r23={4d} r24={18d,11u} r25={1d,37u} r26={1d,20u} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r81={4d} r82={4d} r83={4d} r84={4d} r85={4d} r86={4d} r87={4d} r88={4d} r89={4d} r90={4d} r91={4d} r92={4d} r93={4d} r94={4d} r95={4d} r96={4d} r97={4d} r98={4d} r99={4d} r100={4d} r101={4d} r102={4d} r103={4d} r104={4d} r105={4d} r106={4d} r107={4d} r108={4d} r109={4d} r110={4d} r111={4d} r112={4d} r113={4d} r114={4d} r115={4d} r116={4d} r117={4d} r118={4d} r119={4d} r120={4d} r121={4d} r122={4d} r123={4d} r124={4d} r125={4d} r126={4d} r127={4d} r135={2d,3u} r136={1d,2u} r137={1d,2u} r138={1d,1u} r139={1d,2u} r140={1d,5u} r141={1d,2u,1d} r142={1d,3u} r143={1d,2u} r144={2d,2u} r145={1d,2u} r146={1d,2u} r147={1d,2u} r148={1d,2u} r149={1d,5u} r150={1d,2u} r151={1d,1u} r152={7d,1u} r153={1d,1u} r154={1d,3u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r171={1d,1u} r172={1d,1u} r173={1d,1u} r174={1d,1u} r176={1d,1u} r177={1d,1u} r178={1d,1u} r179={1d,1u} r180={1d,1u} r181={1d,1u} r182={1d,1u} r183={1d,1u} r184={1d,1u} r185={1d,1u} r186={1d,1u} r187={1d,1u} r188={1d,1u} r189={1d,1u} r190={1d,1u} r191={1d,1u} r192={1d,1u} r193={1d,1u} r194={1d,1u} r195={1d,1u} r196={1d,1u} r197={1d,1u} r198={1d,1u} r199={1d,1u} r200={1d,1u} r201={1d,1u} r202={1d,1u} r203={1d,1u} r204={1d,1u} r205={1d,1u} r206={1d,1u} r207={1d,1u} r208={1d,1u} r209={1d,1u} r210={1d,1u} r211={1d,1u} r212={1d,1u} r213={1d,1u} r214={1d,1u} r215={1d,1u} r216={1d,1u} r217={1d,1u} r218={1d,1u} r219={1d,1u} r220={1d,1u} r221={1d,1u} r222={1d,1u} r223={1d,1u} r224={1d,1u} r225={1d,1u} r226={1d,1u} r227={1d,1u} r228={1d,1u} r229={1d,1u} r230={1d,1u} r231={1d,1u} r232={1d,1u} r233={1d,1u} r234={1d,1u} r235={1d,1u} r236={1d,1u} r237={1d,1u} r238={1d,1u} r239={1d,1u} r240={1d,1u} r241={1d,1u} r242={1d,1u} r243={1d,1u} r244={1d,1u} r245={1d,1u} r246={1d,1u} r247={1d,1u} r248={1d,1u} r249={1d,1u} r250={1d,1u} 
;;    total ref usage 901{628d,272u,1e} in 195{191 regular + 4 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 153 154 156 157 158
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 153 154 156 157 158
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 0 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 4 5 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 8 2 init/initramfs.c:220 (set (reg/f:SI 156)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 8 7 9 2 init/initramfs.c:220 (set (reg/f:SI 154 [ collected.344 ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 156)
                (const_int 16 [0x10])) [0 collected+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 9 8 10 2 init/initramfs.c:220 (set (reg/f:SI 157)
        (symbol_ref/v/f:SI ("*.LC8") [flags 0x82] <string_cst 0x11536380>)) 167 {*arm_movsi_insn} (nil))

(insn 10 9 11 2 init/initramfs.c:220 (set (reg:SI 0 r0)
        (reg/f:SI 154 [ collected.344 ])) 167 {*arm_movsi_insn} (nil))

(insn 11 10 12 2 init/initramfs.c:220 (set (reg:SI 1 r1)
        (reg/f:SI 157)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC8") [flags 0x82] <string_cst 0x11536380>)
        (nil)))

(insn 12 11 13 2 init/initramfs.c:220 (set (reg:SI 2 r2)
        (const_int 6 [0x6])) 167 {*arm_movsi_insn} (nil))

(call_insn/i 13 12 14 2 init/initramfs.c:220 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcmp") [flags 0x41] <function_decl 0x51154b80 memcmp>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 14 13 15 2 init/initramfs.c:220 (set (reg:SI 158)
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 15 14 16 2 init/initramfs.c:220 (set (reg:SI 153 [ D.25865 ])
        (reg:SI 158)) 167 {*arm_movsi_insn} (nil))

(insn 16 15 17 2 init/initramfs.c:220 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 158)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 17 16 18 2 init/initramfs.c:220 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 30)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 2 -> ( 3 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 154
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154


;; Succ edge  3 [0.0%]  (fallthru)
;; Succ edge  5 [100.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 159 160
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 159 160
;; live  kill	

;; Pred edge  2 [0.0%]  (fallthru)
(note 18 17 19 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 19 18 20 3 init/initramfs.c:15 (set (reg/f:SI 159)
        (reg/f:SI 156)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 20 19 21 3 init/initramfs.c:15 (set (reg/f:SI 160 [ message ])
        (mem/f/c/i:SI (reg/f:SI 156) [0 message+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 21 20 22 3 init/initramfs.c:15 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 160 [ message ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 22 21 23 3 init/initramfs.c:15 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 230)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 8500 [0x2134])
        (nil)))
;; End of basic block 3 -> ( 4 19)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  4 [15.0%]  (fallthru)
;; Succ edge  19 [85.0%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 152 161 162
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 152 161 162
;; live  kill	

;; Pred edge  3 [15.0%]  (fallthru)
(note 23 22 24 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 24 23 25 4 init/initramfs.c:16 (set (reg/f:SI 161)
        (reg/f:SI 156)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 25 24 26 4 init/initramfs.c:16 (set (reg/f:SI 162)
        (symbol_ref/v/f:SI ("*.LC9") [flags 0x82] <string_cst 0x11527b90>)) 167 {*arm_movsi_insn} (nil))

(insn 26 25 27 4 init/initramfs.c:16 (set (mem/f/c/i:SI (reg/f:SI 156) [0 message+0 S4 A32])
        (reg/f:SI 162)) 167 {*arm_movsi_insn} (nil))

(insn 27 26 30 4 init/initramfs.c:222 (set (reg:SI 152 [ D.25868 ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 4 -> ( 21)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152


;; Succ edge  21 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 151 163 164
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 151 163 164
;; live  kill	 14 [lr]

;; Pred edge  2 [100.0%] 
(code_label 30 27 31 5 133 "" [1 uses])

(note 31 30 32 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 32 31 33 5 init/initramfs.c:224 (set (reg/f:SI 163)
        (symbol_ref/v/f:SI ("*.LC10") [flags 0x82] <string_cst 0x1153c020>)) 167 {*arm_movsi_insn} (nil))

(insn 33 32 34 5 init/initramfs.c:224 (set (reg:SI 0 r0)
        (reg/f:SI 154 [ collected.344 ])) 167 {*arm_movsi_insn} (nil))

(insn 34 33 35 5 init/initramfs.c:224 (set (reg:SI 1 r1)
        (reg/f:SI 163)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC10") [flags 0x82] <string_cst 0x1153c020>)
        (nil)))

(insn 35 34 36 5 init/initramfs.c:224 (set (reg:SI 2 r2)
        (const_int 6 [0x6])) 167 {*arm_movsi_insn} (nil))

(call_insn/i 36 35 37 5 init/initramfs.c:224 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcmp") [flags 0x41] <function_decl 0x51154b80 memcmp>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 37 36 38 5 init/initramfs.c:224 (set (reg:SI 164)
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 38 37 39 5 init/initramfs.c:224 (set (reg:SI 151 [ D.25869 ])
        (reg:SI 164)) 167 {*arm_movsi_insn} (nil))

(insn 39 38 40 5 init/initramfs.c:224 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 164)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 40 39 41 5 init/initramfs.c:224 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 53)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 5 -> ( 6 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 154
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154


;; Succ edge  6 [50.0%]  (fallthru)
;; Succ edge  8 [50.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 165 166
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 165 166
;; live  kill	

;; Pred edge  5 [50.0%]  (fallthru)
(note 41 40 42 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 42 41 43 6 init/initramfs.c:15 (set (reg/f:SI 165)
        (reg/f:SI 156)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 43 42 44 6 init/initramfs.c:15 (set (reg/f:SI 166 [ message ])
        (mem/f/c/i:SI (reg/f:SI 156) [0 message+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 44 43 45 6 init/initramfs.c:15 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 166 [ message ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 45 44 46 6 init/initramfs.c:15 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 230)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 8500 [0x2134])
        (nil)))
;; End of basic block 6 -> ( 7 19)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  7 [15.0%]  (fallthru)
;; Succ edge  19 [85.0%] 

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 152 167 168
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 152 167 168
;; live  kill	

;; Pred edge  6 [15.0%]  (fallthru)
(note 46 45 47 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 47 46 48 7 init/initramfs.c:16 (set (reg/f:SI 167)
        (reg/f:SI 156)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 48 47 49 7 init/initramfs.c:16 (set (reg/f:SI 168)
        (symbol_ref/v/f:SI ("*.LC11") [flags 0x82] <string_cst 0x114f9ed0>)) 167 {*arm_movsi_insn} (nil))

(insn 49 48 50 7 init/initramfs.c:16 (set (mem/f/c/i:SI (reg/f:SI 156) [0 message+0 S4 A32])
        (reg/f:SI 168)) 167 {*arm_movsi_insn} (nil))

(insn 50 49 53 7 init/initramfs.c:226 (set (reg:SI 152 [ D.25868 ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 7 -> ( 21)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152


;; Succ edge  21 [100.0%]  (fallthru)

;; Start of basic block ( 5) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154
;; lr  def 	 135 144 169 170
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154
;; live  gen 	 135 144 169 170
;; live  kill	

;; Pred edge  5 [50.0%] 
(code_label 53 50 54 8 136 "" [1 uses])

(note 54 53 55 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 55 54 56 8 init/initramfs.c:135 (set (reg:SI 169)
        (reg:SI 164)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 56 55 57 8 init/initramfs.c:135 (set (reg:QI 170)
        (subreg:QI (reg:SI 164) 0)) 178 {*arm_movqi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 57 56 58 8 init/initramfs.c:135 (set (mem/s/j:QI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 buf+8 S1 A32])
        (subreg:QI (reg:SI 164) 0)) 178 {*arm_movqi_insn} (nil))

(insn 58 57 59 8 init/initramfs.c:136 (set (reg/v/f:SI 144 [ s ])
        (plus:SI (reg/f:SI 154 [ collected.344 ])
            (const_int 6 [0x6]))) 4 {*arm_addsi3} (nil))

(insn 59 58 80 8 init/initramfs.c:136 (set (reg:SI 135 [ ivtmp.931 ])
        (reg:SI 164)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))
;; End of basic block 8 -> ( 9)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 144


;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 9 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 144
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 135 138 144 171 172 173 174 176 177
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 144
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 135 138 144 171 172 173 174 176 177
;; live  kill	 14 [lr]

;; Pred edge  9 [91.7%]  (dfs_back)
;; Pred edge  8 [100.0%]  (fallthru)
(code_label 80 59 60 9 137 "" [1 uses])

(note 60 80 61 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 61 60 62 9 init/initramfs.c:137 (set (reg/f:SI 171)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -12 [0xfffffffffffffff4]))) 4 {*arm_addsi3} (nil))

(insn 62 61 63 9 init/initramfs.c:137 (set (reg/f:SI 172)
        (reg/f:SI 171)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -12 [0xfffffffffffffff4]))
        (nil)))

(insn 63 62 64 9 init/initramfs.c:137 (set (reg/f:SI 173 [ s ])
        (reg/v/f:SI 144 [ s ])) 167 {*arm_movsi_insn} (nil))

(insn 64 63 65 9 init/initramfs.c:137 (set (reg:SI 174)
        (const_int 8 [0x8])) 167 {*arm_movsi_insn} (nil))

(insn 65 64 66 9 init/initramfs.c:137 (set (reg:SI 0 r0)
        (reg/f:SI 171)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -12 [0xfffffffffffffff4]))
        (nil)))

(insn 66 65 67 9 init/initramfs.c:137 (set (reg:SI 1 r1)
        (reg/v/f:SI 144 [ s ])) 167 {*arm_movsi_insn} (nil))

(insn 67 66 68 9 init/initramfs.c:137 (set (reg:SI 2 r2)
        (reg:SI 174)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 8 [0x8])
        (nil)))

(call_insn 68 67 70 9 init/initramfs.c:137 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41] <function_decl 0x1150cc00 memcpy>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 70 68 71 9 init/initramfs.c:138 (set (reg/f:SI 176)
        (reg/f:SI 171)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -12 [0xfffffffffffffff4]))
        (nil)))

(insn 71 70 72 9 init/initramfs.c:138 (set (reg:SI 0 r0)
        (reg/f:SI 171)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -12 [0xfffffffffffffff4]))
        (nil)))

(insn 72 71 73 9 init/initramfs.c:138 (set (reg:SI 1 r1)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 73 72 74 9 init/initramfs.c:138 (set (reg:SI 2 r2)
        (const_int 16 [0x10])) 167 {*arm_movsi_insn} (nil))

(call_insn 74 73 75 9 init/initramfs.c:138 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("simple_strtoul") [flags 0x41] <function_decl 0x10aa5680 simple_strtoul>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 75 74 76 9 init/initramfs.c:138 (set (reg:SI 138 [ D.26544 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 76 75 77 9 init/initramfs.c:138 (set (reg/f:SI 177)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -60 [0xffffffffffffffc4]))) 4 {*arm_addsi3} (nil))

(insn 77 76 78 9 init/initramfs.c:138 (set (mem/s/j:SI (plus:SI (reg/f:SI 177)
                (reg:SI 135 [ ivtmp.931 ])) [0 parsed S4 A32])
        (reg:SI 138 [ D.26544 ])) 167 {*arm_movsi_insn} (nil))

(insn 78 77 79 9 init/initramfs.c:136 discrim 2 (set (reg/v/f:SI 144 [ s ])
        (plus:SI (reg/v/f:SI 144 [ s ])
            (const_int 8 [0x8]))) 4 {*arm_addsi3} (nil))

(insn 79 78 81 9 init/initramfs.c:136 discrim 2 (set (reg:SI 135 [ ivtmp.931 ])
        (plus:SI (reg:SI 135 [ ivtmp.931 ])
            (const_int 4 [0x4]))) 4 {*arm_addsi3} (nil))

(insn 81 79 82 9 init/initramfs.c:136 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 135 [ ivtmp.931 ])
            (const_int 48 [0x30]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 82 81 83 9 init/initramfs.c:136 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 80)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9167 [0x23cf])
        (nil)))
;; End of basic block 9 -> ( 9 10)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 144


;; Succ edge  9 [91.7%]  (dfs_back)
;; Succ edge  10 [8.3%]  (fallthru)

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 139 140 141 142 143 148 149 150 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 139 140 141 142 143 148 149 150 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222
;; live  kill	 24 [cc]

;; Pred edge  9 [8.3%]  (fallthru)
(note 83 82 84 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 84 83 85 10 init/initramfs.c:140 (set (reg/f:SI 178)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 85 84 86 10 init/initramfs.c:140 (set (reg:SI 179 [ parsed ])
        (mem/s/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -60 [0xffffffffffffffc4])) [0 parsed+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 86 85 87 10 init/initramfs.c:140 (set (mem/c/i:SI (plus:SI (reg/f:SI 178)
                (const_int 212 [0xd4])) [0 ino+0 S4 A32])
        (reg:SI 179 [ parsed ])) 167 {*arm_movsi_insn} (nil))

(insn 87 86 88 10 init/initramfs.c:141 (set (reg:SI 180 [ parsed+4 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -56 [0xffffffffffffffc8])) [0 parsed+4 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 88 87 89 10 init/initramfs.c:141 (set (reg:SI 139 [ mode.315 ])
        (zero_extend:SI (subreg:HI (reg:SI 180 [ parsed+4 ]) 0))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 89 88 90 10 init/initramfs.c:141 (set (reg/f:SI 181)
        (reg/f:SI 178)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 90 89 91 10 init/initramfs.c:141 (set (mem/c/i:HI (plus:SI (reg/f:SI 178)
                (const_int 216 [0xd8])) [0 mode+0 S2 A16])
        (subreg/s/u:HI (reg:SI 139 [ mode.315 ]) 0)) 176 {*movhi_insn_arch4} (nil))

(insn 91 90 92 10 init/initramfs.c:142 (set (reg/f:SI 182)
        (reg/f:SI 178)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 92 91 93 10 init/initramfs.c:142 (set (reg:SI 183 [ parsed+8 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -52 [0xffffffffffffffcc])) [0 parsed+8 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 93 92 94 10 init/initramfs.c:142 (set (mem/c/i:SI (plus:SI (reg/f:SI 178)
                (const_int 100 [0x64])) [0 uid+0 S4 A32])
        (reg:SI 183 [ parsed+8 ])) 167 {*arm_movsi_insn} (nil))

(insn 94 93 95 10 init/initramfs.c:143 (set (reg/f:SI 184)
        (reg/f:SI 178)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 95 94 96 10 init/initramfs.c:143 (set (reg:SI 185 [ parsed+12 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -48 [0xffffffffffffffd0])) [0 parsed+12 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 96 95 97 10 init/initramfs.c:143 (set (mem/c/i:SI (plus:SI (reg/f:SI 178)
                (const_int 104 [0x68])) [0 gid+0 S4 A32])
        (reg:SI 185 [ parsed+12 ])) 167 {*arm_movsi_insn} (nil))

(insn 97 96 98 10 init/initramfs.c:144 (set (reg/f:SI 186)
        (reg/f:SI 178)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 98 97 99 10 init/initramfs.c:144 (set (reg:SI 187 [ parsed+16 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -44 [0xffffffffffffffd4])) [0 parsed+16 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 99 98 100 10 init/initramfs.c:144 (set (mem/c/i:SI (plus:SI (reg/f:SI 178)
                (const_int 200 [0xc8])) [0 nlink+0 S4 A32])
        (reg:SI 187 [ parsed+16 ])) 167 {*arm_movsi_insn} (nil))

(insn 100 99 101 10 init/initramfs.c:145 (set (reg/f:SI 188)
        (reg/f:SI 178)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 101 100 102 10 init/initramfs.c:145 (set (reg:SI 189 [ parsed+20 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -40 [0xffffffffffffffd8])) [0 parsed+20 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 102 101 103 10 init/initramfs.c:145 (set (mem/c/i:SI (plus:SI (reg/f:SI 178)
                (const_int 108 [0x6c])) [0 mtime+0 S4 A32])
        (reg:SI 189 [ parsed+20 ])) 167 {*arm_movsi_insn} (nil))

(insn 103 102 104 10 init/initramfs.c:146 (set (reg:SI 140 [ body_len.320 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -36 [0xffffffffffffffdc])) [0 parsed+24 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 104 103 105 10 init/initramfs.c:146 (set (reg/f:SI 190)
        (reg/f:SI 178)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 105 104 106 10 init/initramfs.c:146 (set (mem/c/i:SI (plus:SI (reg/f:SI 178)
                (const_int 92 [0x5c])) [0 body_len+0 S4 A32])
        (reg:SI 140 [ body_len.320 ])) 167 {*arm_movsi_insn} (nil))

(insn 106 105 107 10 init/initramfs.c:147 (set (reg/f:SI 191)
        (reg/f:SI 178)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 107 106 108 10 init/initramfs.c:147 (set (reg:SI 192 [ parsed+28 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -32 [0xffffffffffffffe0])) [0 parsed+28 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 108 107 109 10 init/initramfs.c:147 (set (mem/c/i:SI (plus:SI (reg/f:SI 178)
                (const_int 204 [0xcc])) [0 major+0 S4 A32])
        (reg:SI 192 [ parsed+28 ])) 167 {*arm_movsi_insn} (nil))

(insn 109 108 110 10 init/initramfs.c:148 (set (reg/f:SI 193)
        (reg/f:SI 178)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 110 109 111 10 init/initramfs.c:148 (set (reg:SI 194 [ parsed+32 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -28 [0xffffffffffffffe4])) [0 parsed+32 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 111 110 112 10 init/initramfs.c:148 (set (mem/c/i:SI (plus:SI (reg/f:SI 178)
                (const_int 208 [0xd0])) [0 minor+0 S4 A32])
        (reg:SI 194 [ parsed+32 ])) 167 {*arm_movsi_insn} (nil))

(insn 112 111 113 10 init/initramfs.c:149 (set (reg:SI 196 [ parsed+36 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -24 [0xffffffffffffffe8])) [0 parsed+36 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 113 112 114 10 init/initramfs.c:149 (set (reg:SI 195)
        (ashift:SI (reg:SI 196 [ parsed+36 ])
            (const_int 20 [0x14]))) 117 {*arm_shiftsi3} (nil))

(insn 114 113 115 10 init/initramfs.c:149 (set (reg:SI 197 [ parsed+40 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -20 [0xffffffffffffffec])) [0 parsed+40 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 115 114 116 10 init/initramfs.c:149 (set (reg:SI 141 [ D.26529 ])
        (ior:SI (reg:SI 195)
            (reg:SI 197 [ parsed+40 ]))) 89 {*arm_iorsi3} (nil))

(insn 116 115 117 10 include/linux/kdev_t.h:44 (set (reg:SI 198)
        (and:SI (reg:SI 141 [ D.26529 ])
            (const_int 16777215 [0xffffff]))) 67 {*arm_andsi3_insn} (nil))

(insn 117 116 118 10 include/linux/kdev_t.h:44 (set (reg/v:SI 143 [ minor ])
        (and:SI (reg:SI 198)
            (const_int -15728641 [0xffffffffff0fffff]))) 67 {*arm_andsi3_insn} (expr_list:REG_EQUAL (and:SI (reg:SI 141 [ D.26529 ])
            (const_int 1048575 [0xfffff]))
        (nil)))

(insn 118 117 119 10 init/initramfs.c:149 (set (reg/f:SI 199)
        (reg/f:SI 178)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 119 118 120 10 init/initramfs.c:149 (set (reg:SI 200)
        (lshiftrt:SI (reg:SI 141 [ D.26529 ])
            (const_int 20 [0x14]))) 117 {*arm_shiftsi3} (nil))

(insn 120 119 121 10 init/initramfs.c:149 (set (reg:SI 201)
        (ashift:SI (reg:SI 200)
            (const_int 8 [0x8]))) 117 {*arm_shiftsi3} (nil))

(insn 121 120 122 10 init/initramfs.c:149 (set (reg:SI 202)
        (and:SI (reg:SI 141 [ D.26529 ])
            (const_int 255 [0xff]))) 67 {*arm_andsi3_insn} (nil))

(insn 122 121 123 10 init/initramfs.c:149 (set (reg:SI 203)
        (ior:SI (reg:SI 201)
            (reg:SI 202))) 89 {*arm_iorsi3} (nil))

(insn 123 122 124 10 init/initramfs.c:149 (set (reg:SI 204)
        (and:SI (reg/v:SI 143 [ minor ])
            (const_int -256 [0xffffffffffffff00]))) 67 {*arm_andsi3_insn} (nil))

(insn 124 123 125 10 init/initramfs.c:149 (set (reg:SI 205)
        (ashift:SI (reg:SI 204)
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 125 124 126 10 init/initramfs.c:149 (set (reg:SI 206)
        (ior:SI (reg:SI 203)
            (reg:SI 205))) 89 {*arm_iorsi3} (nil))

(insn 126 125 127 10 init/initramfs.c:149 (set (mem/c/i:SI (plus:SI (reg/f:SI 178)
                (const_int 348 [0x15c])) [0 rdev+0 S4 A32])
        (reg:SI 206)) 167 {*arm_movsi_insn} (nil))

(insn 127 126 128 10 init/initramfs.c:150 (set (reg:SI 142 [ name_len.324 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -16 [0xfffffffffffffff0])) [0 parsed+44 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 128 127 129 10 init/initramfs.c:150 (set (reg/f:SI 207)
        (reg/f:SI 178)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 129 128 130 10 init/initramfs.c:150 (set (mem/c/i:SI (plus:SI (reg/f:SI 178)
                (const_int 96 [0x60])) [0 name_len+0 S4 A32])
        (reg:SI 142 [ name_len.324 ])) 167 {*arm_movsi_insn} (nil))

(insn 130 129 131 10 init/initramfs.c:229 (set (reg:SI 208)
        (plus:SI (reg:SI 142 [ name_len.324 ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 131 130 132 10 init/initramfs.c:229 (set (reg:SI 150 [ D.25875 ])
        (and:SI (reg:SI 208)
            (const_int -4 [0xfffffffffffffffc]))) 67 {*arm_andsi3_insn} (nil))

(insn 132 131 133 10 init/initramfs.c:229 (set (reg:SI 149 [ D.25876 ])
        (plus:SI (reg:SI 150 [ D.25875 ])
            (const_int 2 [0x2]))) 4 {*arm_addsi3} (nil))

(insn 133 132 134 10 init/initramfs.c:229 (set (reg:DI 209 [ D.25876 ])
        (zero_extend:DI (reg:SI 149 [ D.25876 ]))) 138 {*arm_zero_extendsidi2} (nil))

(insn 134 133 135 10 init/initramfs.c:229 (set (reg/f:SI 210)
        (reg/f:SI 178)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 135 134 136 10 init/initramfs.c:229 (set (reg:DI 211 [ this_header ])
        (mem/c/i:DI (plus:SI (reg/f:SI 178)
                (const_int 24 [0x18])) [0 this_header+0 S8 A64])) 163 {*arm_movdi} (nil))

(insn 136 135 137 10 init/initramfs.c:229 (parallel [
            (set (reg:DI 148 [ D.25878 ])
                (plus:DI (reg:DI 209 [ D.25876 ])
                    (reg:DI 211 [ this_header ])))
            (clobber (reg:CC 24 cc))
        ]) 1 {*arm_adddi3} (nil))

(insn 137 136 138 10 init/initramfs.c:230 (set (reg/f:SI 212)
        (reg/f:SI 178)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 138 137 139 10 init/initramfs.c:230 (set (reg:DI 213 [ body_len.320 ])
        (zero_extend:DI (reg:SI 140 [ body_len.320 ]))) 138 {*arm_zero_extendsidi2} (nil))

(insn 139 138 140 10 init/initramfs.c:230 (set (reg:DI 215)
        (const_int 3 [0x3])) 163 {*arm_movdi} (nil))

(insn 140 139 141 10 init/initramfs.c:230 (parallel [
            (set (reg:DI 214)
                (plus:DI (reg:DI 213 [ body_len.320 ])
                    (reg:DI 215)))
            (clobber (reg:CC 24 cc))
        ]) 1 {*arm_adddi3} (nil))

(insn 141 140 142 10 init/initramfs.c:230 (parallel [
            (set (reg:DI 216)
                (plus:DI (reg:DI 214)
                    (reg:DI 148 [ D.25878 ])))
            (clobber (reg:CC 24 cc))
        ]) 1 {*arm_adddi3} (nil))

(insn 142 141 143 10 init/initramfs.c:230 (set (reg:DI 217)
        (const_int -4 [0xfffffffffffffffc])) 163 {*arm_movdi} (nil))

(insn 143 142 144 10 init/initramfs.c:230 (set (reg:DI 218)
        (and:DI (reg:DI 216)
            (reg:DI 217))) 64 {anddi3} (nil))

(insn 144 143 145 10 init/initramfs.c:230 (set (mem/c/i:DI (plus:SI (reg/f:SI 178)
                (const_int 48 [0x30])) [0 next_header+0 S8 A64])
        (reg:DI 218)) 163 {*arm_movdi} (nil))

(insn 145 144 146 10 init/initramfs.c:231 (set (reg/f:SI 219)
        (reg/f:SI 178)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 146 145 147 10 init/initramfs.c:231 (set (reg:SI 220)
        (const_int 3 [0x3])) 167 {*arm_movsi_insn} (nil))

(insn 147 146 148 10 init/initramfs.c:231 (set (mem/c/i:SI (plus:SI (reg/f:SI 178)
                (const_int 32 [0x20])) [0 state+0 S4 A32])
        (reg:SI 220)) 167 {*arm_movsi_insn} (nil))

(insn 148 147 149 10 init/initramfs.c:232 (set (reg:SI 221)
        (plus:SI (reg:SI 142 [ name_len.324 ])
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (nil))

(insn 149 148 150 10 init/initramfs.c:232 (set (reg:SI 222)
        (const_int 4095 [0xfff])) 167 {*arm_movsi_insn} (nil))

(insn 150 149 151 10 init/initramfs.c:232 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 221)
            (reg:SI 222))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 151 150 152 10 init/initramfs.c:232 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 235)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))
;; End of basic block 10 -> ( 20 11)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 148 149 150
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 148 149 150


;; Succ edge  20 [39.0%] 
;; Succ edge  11 [61.0%]  (fallthru)

;; Start of basic block ( 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 148 149 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 24 [cc] 147
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 148 149 150
;; live  gen 	 24 [cc] 147
;; live  kill	

;; Pred edge  10 [61.0%]  (fallthru)
(note 152 151 153 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 153 152 154 11 init/initramfs.c:234 (set (reg:SI 147 [ D.25890 ])
        (and:SI (reg:SI 139 [ mode.315 ])
            (const_int 61440 [0xf000]))) 67 {*arm_andsi3_insn} (nil))

(insn 154 153 155 11 init/initramfs.c:234 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 147 [ D.25890 ])
            (const_int 40960 [0xa000]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 155 154 156 11 init/initramfs.c:234 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 179)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
        (nil)))
;; End of basic block 11 -> ( 12 14)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 147 148 149 150
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 147 148 149 150


;; Succ edge  12 [28.0%]  (fallthru)
;; Succ edge  14 [72.0%] 

;; Start of basic block ( 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 150
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  11 [28.0%]  (fallthru)
(note 156 155 157 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 157 156 158 12 init/initramfs.c:235 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 140 [ body_len.320 ])
            (const_int 4096 [0x1000]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 158 157 159 12 init/initramfs.c:235 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 235)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 12 -> ( 20 13)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 150
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 150


;; Succ edge  20 [50.0%] 
;; Succ edge  13 [50.0%]  (fallthru)

;; Start of basic block ( 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 150
;; lr  def 	 146 152 223 224 225 226 227 228 229 230 231 232
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 150
;; live  gen 	 146 152 223 224 225 226 227 228 229 230 231 232
;; live  kill	

;; Pred edge  12 [50.0%]  (fallthru)
(note 159 158 160 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 160 159 161 13 init/initramfs.c:237 (set (reg/f:SI 223)
        (reg/f:SI 178)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 161 160 162 13 init/initramfs.c:237 (set (reg/f:SI 146 [ symlink_buf.352 ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 178)
                (const_int 112 [0x70])) [0 symlink_buf+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 162 161 163 13 init/initramfs.c:237 (set (reg/f:SI 224)
        (reg/f:SI 178)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 163 162 164 13 init/initramfs.c:237 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 178)
                (const_int 16 [0x10])) [0 collected+0 S4 A32])
        (reg/f:SI 146 [ symlink_buf.352 ])) 167 {*arm_movsi_insn} (nil))

(insn 164 163 165 13 init/initramfs.c:237 (set (reg/f:SI 225)
        (reg/f:SI 178)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 165 164 166 13 init/initramfs.c:237 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 178)
                (const_int 36 [0x24])) [0 collect+0 S4 A32])
        (reg/f:SI 146 [ symlink_buf.352 ])) 167 {*arm_movsi_insn} (nil))

(insn 166 165 167 13 init/initramfs.c:238 (set (reg/f:SI 226)
        (reg/f:SI 178)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 167 166 168 13 init/initramfs.c:238 (set (reg:SI 227)
        (plus:SI (reg:SI 140 [ body_len.320 ])
            (const_int 2 [0x2]))) 4 {*arm_addsi3} (nil))

(insn 168 167 169 13 init/initramfs.c:238 (set (reg:SI 228)
        (plus:SI (reg:SI 227)
            (reg:SI 150 [ D.25875 ]))) 4 {*arm_addsi3} (nil))

(insn 169 168 170 13 init/initramfs.c:238 (set (mem/c/i:SI (plus:SI (reg/f:SI 178)
                (const_int 40 [0x28])) [0 remains+0 S4 A32])
        (reg:SI 228)) 167 {*arm_movsi_insn} (nil))

(insn 170 169 171 13 init/initramfs.c:239 (set (reg/f:SI 229)
        (reg/f:SI 178)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 171 170 172 13 init/initramfs.c:239 (set (reg:SI 230)
        (const_int 6 [0x6])) 167 {*arm_movsi_insn} (nil))

(insn 172 171 173 13 init/initramfs.c:239 (set (mem/c/i:SI (plus:SI (reg/f:SI 178)
                (const_int 44 [0x2c])) [0 next_state+0 S4 A32])
        (reg:SI 230)) 167 {*arm_movsi_insn} (nil))

(insn 173 172 174 13 init/initramfs.c:240 (set (reg/f:SI 231)
        (reg/f:SI 178)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 174 173 175 13 init/initramfs.c:240 (set (reg:SI 232)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 175 174 176 13 init/initramfs.c:240 (set (mem/c/i:SI (plus:SI (reg/f:SI 178)
                (const_int 32 [0x20])) [0 state+0 S4 A32])
        (reg:SI 232)) 167 {*arm_movsi_insn} (nil))

(insn 176 175 179 13 init/initramfs.c:241 (set (reg:SI 152 [ D.25868 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 13 -> ( 21)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152


;; Succ edge  21 [100.0%]  (fallthru)

;; Start of basic block ( 11) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 147 148 149
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 147 148 149
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  11 [72.0%] 
(code_label 179 176 180 14 139 "" [1 uses])

(note 180 179 181 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 181 180 182 14 init/initramfs.c:243 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 147 [ D.25890 ])
            (const_int 32768 [0x8000]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 182 181 183 14 init/initramfs.c:243 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 186)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 4 [0x4])
        (nil)))
;; End of basic block 14 -> ( 16 15)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 148 149
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 148 149


;; Succ edge  16 [0.0%] 
;; Succ edge  15 [100.0%]  (fallthru)

;; Start of basic block ( 14) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 148 149
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 148 149
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  14 [100.0%]  (fallthru)
(note 183 182 184 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 184 183 185 15 init/initramfs.c:243 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 140 [ body_len.320 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 185 184 186 15 init/initramfs.c:243 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 235)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 15 -> ( 16 20)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 148 149
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149


;; Succ edge  16 [0.0%]  (fallthru)
;; Succ edge  20 [100.0%] 

;; Start of basic block ( 14 15) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 148 149
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149
;; lr  def 	 24 [cc] 136 145 233 234
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149
;; live  gen 	 24 [cc] 136 145 233 234
;; live  kill	

;; Pred edge  14 [0.0%] 
;; Pred edge  15 [0.0%]  (fallthru)
(code_label 186 185 187 16 140 "" [1 uses])

(note 187 186 188 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 188 187 189 16 init/initramfs.c:244 (set (reg/f:SI 233)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 189 188 190 16 init/initramfs.c:244 (set (reg/f:SI 145 [ name_buf.354 ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 233)
                (const_int 116 [0x74])) [0 name_buf+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 190 189 191 16 init/initramfs.c:184 (set (reg/f:SI 234)
        (reg/f:SI 233)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 191 190 192 16 init/initramfs.c:184 (set (reg:SI 136 [ count.331 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 233)
                (const_int 8 [0x8])) [0 count+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 192 191 193 16 init/initramfs.c:184 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 136 [ count.331 ])
            (reg:SI 149 [ D.25876 ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 193 192 194 16 init/initramfs.c:184 (set (pc)
        (if_then_else (ltu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 213)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 16 -> ( 17 18)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 145 148 149
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 145 148 149


;; Succ edge  17 [0.0%]  (fallthru)
;; Succ edge  18 [100.0%] 

;; Start of basic block ( 16) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 148 149
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 148 149
;; lr  def 	 137 152 235 236 237 238 239 240 241 242 243
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 148 149
;; live  gen 	 137 152 235 236 237 238 239 240 241 242 243
;; live  kill	

;; Pred edge  16 [0.0%]  (fallthru)
(note 194 193 195 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 195 194 196 17 init/initramfs.c:185 (set (reg/f:SI 235)
        (reg/f:SI 233)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 196 195 197 17 init/initramfs.c:185 (set (reg/f:SI 137 [ victim.332 ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 233)
                (const_int 12 [0xc])) [0 victim+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 197 196 198 17 init/initramfs.c:185 (set (reg/f:SI 236)
        (reg/f:SI 233)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 198 197 199 17 init/initramfs.c:185 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 233)
                (const_int 16 [0x10])) [0 collected+0 S4 A32])
        (reg/f:SI 137 [ victim.332 ])) 167 {*arm_movsi_insn} (nil))

(insn 199 198 200 17 init/initramfs.c:172 (set (reg/f:SI 237)
        (reg/f:SI 233)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 200 199 201 17 init/initramfs.c:172 (set (reg:SI 238)
        (plus:SI (reg/f:SI 137 [ victim.332 ])
            (reg:SI 149 [ D.25876 ]))) 4 {*arm_addsi3} (nil))

(insn 201 200 202 17 init/initramfs.c:172 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 233)
                (const_int 12 [0xc])) [0 victim+0 S4 A32])
        (reg:SI 238)) 167 {*arm_movsi_insn} (nil))

(insn 202 201 203 17 init/initramfs.c:173 (set (reg/f:SI 239)
        (reg/f:SI 233)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 203 202 204 17 init/initramfs.c:173 (set (mem/c/i:DI (plus:SI (reg/f:SI 233)
                (const_int 24 [0x18])) [0 this_header+0 S8 A64])
        (reg:DI 148 [ D.25878 ])) 163 {*arm_movdi} (nil))

(insn 204 203 205 17 init/initramfs.c:174 (set (reg/f:SI 240)
        (reg/f:SI 233)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 205 204 206 17 init/initramfs.c:174 (set (reg:SI 241)
        (minus:SI (reg:SI 136 [ count.331 ])
            (reg:SI 149 [ D.25876 ]))) 28 {*arm_subsi3_insn} (nil))

(insn 206 205 207 17 init/initramfs.c:174 (set (mem/c/i:SI (plus:SI (reg/f:SI 233)
                (const_int 8 [0x8])) [0 count+0 S4 A32])
        (reg:SI 241)) 167 {*arm_movsi_insn} (nil))

(insn 207 206 208 17 init/initramfs.c:187 (set (reg/f:SI 242)
        (reg/f:SI 233)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 208 207 209 17 init/initramfs.c:187 (set (reg:SI 243)
        (const_int 4 [0x4])) 167 {*arm_movsi_insn} (nil))

(insn 209 208 210 17 init/initramfs.c:187 (set (mem/c/i:SI (plus:SI (reg/f:SI 233)
                (const_int 32 [0x20])) [0 state+0 S4 A32])
        (reg:SI 243)) 167 {*arm_movsi_insn} (nil))

(insn 210 209 213 17 init/initramfs.c:245 (set (reg:SI 152 [ D.25868 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 17 -> ( 21)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152


;; Succ edge  21 [100.0%]  (fallthru)

;; Start of basic block ( 16) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 145 149
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 149
;; lr  def 	 152 244 245 246 247 248 249 250
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 149
;; live  gen 	 152 244 245 246 247 248 249 250
;; live  kill	

;; Pred edge  16 [100.0%] 
(code_label 213 210 214 18 141 "" [1 uses])

(note 214 213 215 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 215 214 216 18 init/initramfs.c:189 (set (reg/f:SI 244)
        (reg/f:SI 233)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 216 215 217 18 init/initramfs.c:189 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 233)
                (const_int 16 [0x10])) [0 collected+0 S4 A32])
        (reg/f:SI 145 [ name_buf.354 ])) 167 {*arm_movsi_insn} (nil))

(insn 217 216 218 18 init/initramfs.c:189 (set (reg/f:SI 245)
        (reg/f:SI 233)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 218 217 219 18 init/initramfs.c:189 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 233)
                (const_int 36 [0x24])) [0 collect+0 S4 A32])
        (reg/f:SI 145 [ name_buf.354 ])) 167 {*arm_movsi_insn} (nil))

(insn 219 218 220 18 init/initramfs.c:190 (set (reg/f:SI 246)
        (reg/f:SI 233)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 220 219 221 18 init/initramfs.c:190 (set (mem/c/i:SI (plus:SI (reg/f:SI 233)
                (const_int 40 [0x28])) [0 remains+0 S4 A32])
        (reg:SI 149 [ D.25876 ])) 167 {*arm_movsi_insn} (nil))

(insn 221 220 222 18 init/initramfs.c:191 (set (reg/f:SI 247)
        (reg/f:SI 233)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 222 221 223 18 init/initramfs.c:191 (set (reg:SI 248)
        (const_int 4 [0x4])) 167 {*arm_movsi_insn} (nil))

(insn 223 222 224 18 init/initramfs.c:191 (set (mem/c/i:SI (plus:SI (reg/f:SI 233)
                (const_int 44 [0x2c])) [0 next_state+0 S4 A32])
        (reg:SI 248)) 167 {*arm_movsi_insn} (nil))

(insn 224 223 225 18 init/initramfs.c:192 (set (reg/f:SI 249)
        (reg/f:SI 233)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 225 224 226 18 init/initramfs.c:192 (set (reg:SI 250)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 226 225 227 18 init/initramfs.c:192 (set (mem/c/i:SI (plus:SI (reg/f:SI 233)
                (const_int 32 [0x20])) [0 state+0 S4 A32])
        (reg:SI 250)) 167 {*arm_movsi_insn} (nil))

(insn 227 226 230 18 init/initramfs.c:245 (set (reg:SI 152 [ D.25868 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 18 -> ( 21)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152


;; Succ edge  21 [100.0%]  (fallthru)

;; Start of basic block ( 3 6) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 152
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 152
;; live  kill	

;; Pred edge  3 [85.0%] 
;; Pred edge  6 [85.0%] 
(code_label 230 227 231 19 134 "" [2 uses])

(note 231 230 232 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 232 231 235 19 init/initramfs.c:222 (set (reg:SI 152 [ D.25868 ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 19 -> ( 21)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152


;; Succ edge  21 [100.0%]  (fallthru)

;; Start of basic block ( 12 10 15) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 152
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 152
;; live  kill	

;; Pred edge  12 [50.0%] 
;; Pred edge  10 [39.0%] 
;; Pred edge  15 [100.0%] 
(code_label 235 232 236 20 138 "" [3 uses])

(note 236 235 237 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn 237 236 238 20 init/initramfs.c:233 (set (reg:SI 152 [ D.25868 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 20 -> ( 21)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152


;; Succ edge  21 [100.0%]  (fallthru)

;; Start of basic block ( 20 19 18 13 17 4 7) -> 21
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152
;; lr  def 	 0 [r0] 155
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152
;; live  gen 	 0 [r0] 155
;; live  kill	

;; Pred edge  20 [100.0%]  (fallthru)
;; Pred edge  19 [100.0%]  (fallthru)
;; Pred edge  18 [100.0%]  (fallthru)
;; Pred edge  13 [100.0%]  (fallthru)
;; Pred edge  17 [100.0%]  (fallthru)
;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  7 [100.0%]  (fallthru)
(code_label 238 237 239 21 135 "" [0 uses])

(note 239 238 240 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn 240 239 244 21 init/initramfs.c:246 (set (reg:SI 155 [ <result> ])
        (reg:SI 152 [ D.25868 ])) 167 {*arm_movsi_insn} (nil))

(insn 244 240 250 21 init/initramfs.c:246 (set (reg/i:SI 0 r0)
        (reg:SI 152 [ D.25868 ])) 167 {*arm_movsi_insn} (nil))

(insn 250 244 0 21 init/initramfs.c:246 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 21 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
rescanning insn with uid = 16.
deleting insn with uid = 16.
rescanning insn with uid = 19.
deleting insn with uid = 19.
rescanning insn with uid = 20.
deleting insn with uid = 20.
rescanning insn with uid = 24.
deleting insn with uid = 24.
rescanning insn with uid = 26.
deleting insn with uid = 26.
rescanning insn with uid = 39.
deleting insn with uid = 39.
rescanning insn with uid = 42.
deleting insn with uid = 42.
rescanning insn with uid = 43.
deleting insn with uid = 43.
rescanning insn with uid = 47.
deleting insn with uid = 47.
rescanning insn with uid = 49.
deleting insn with uid = 49.
rescanning insn with uid = 55.
deleting insn with uid = 55.
rescanning insn with uid = 56.
deleting insn with uid = 56.
rescanning insn with uid = 57.
deleting insn with uid = 57.
rescanning insn with uid = 59.
deleting insn with uid = 59.
rescanning insn with uid = 65.
deleting insn with uid = 65.
rescanning insn with uid = 66.
deleting insn with uid = 66.
rescanning insn with uid = 70.
deleting insn with uid = 70.
rescanning insn with uid = 71.
deleting insn with uid = 71.
rescanning insn with uid = 89.
deleting insn with uid = 89.
rescanning insn with uid = 90.
deleting insn with uid = 90.
rescanning insn with uid = 91.
deleting insn with uid = 91.
rescanning insn with uid = 93.
deleting insn with uid = 93.
rescanning insn with uid = 94.
deleting insn with uid = 94.
rescanning insn with uid = 96.
deleting insn with uid = 96.
rescanning insn with uid = 97.
deleting insn with uid = 97.
rescanning insn with uid = 99.
deleting insn with uid = 99.
rescanning insn with uid = 100.
deleting insn with uid = 100.
rescanning insn with uid = 102.
deleting insn with uid = 102.
rescanning insn with uid = 104.
deleting insn with uid = 104.
rescanning insn with uid = 105.
deleting insn with uid = 105.
rescanning insn with uid = 106.
deleting insn with uid = 106.
rescanning insn with uid = 108.
deleting insn with uid = 108.
rescanning insn with uid = 109.
deleting insn with uid = 109.
rescanning insn with uid = 111.
deleting insn with uid = 111.
rescanning insn with uid = 118.
deleting insn with uid = 118.
rescanning insn with uid = 121.
deleting insn with uid = 121.
rescanning insn with uid = 126.
deleting insn with uid = 126.
rescanning insn with uid = 128.
deleting insn with uid = 128.
rescanning insn with uid = 129.
deleting insn with uid = 129.
rescanning insn with uid = 134.
deleting insn with uid = 134.
rescanning insn with uid = 135.
deleting insn with uid = 135.
rescanning insn with uid = 137.
deleting insn with uid = 137.
rescanning insn with uid = 144.
deleting insn with uid = 144.
rescanning insn with uid = 145.
deleting insn with uid = 145.
rescanning insn with uid = 147.
deleting insn with uid = 147.
rescanning insn with uid = 160.
deleting insn with uid = 160.
rescanning insn with uid = 161.
deleting insn with uid = 161.
rescanning insn with uid = 162.
deleting insn with uid = 162.
rescanning insn with uid = 163.
deleting insn with uid = 163.
rescanning insn with uid = 164.
deleting insn with uid = 164.
rescanning insn with uid = 165.
deleting insn with uid = 165.
rescanning insn with uid = 166.
deleting insn with uid = 166.
rescanning insn with uid = 169.
deleting insn with uid = 169.
rescanning insn with uid = 170.
deleting insn with uid = 170.
rescanning insn with uid = 172.
deleting insn with uid = 172.
rescanning insn with uid = 173.
deleting insn with uid = 173.
rescanning insn with uid = 175.
deleting insn with uid = 175.
rescanning insn with uid = 190.
deleting insn with uid = 190.
rescanning insn with uid = 191.
deleting insn with uid = 191.
rescanning insn with uid = 195.
deleting insn with uid = 195.
rescanning insn with uid = 196.
deleting insn with uid = 196.
rescanning insn with uid = 197.
deleting insn with uid = 197.
rescanning insn with uid = 198.
deleting insn with uid = 198.
rescanning insn with uid = 199.
deleting insn with uid = 199.
rescanning insn with uid = 201.
deleting insn with uid = 201.
rescanning insn with uid = 202.
deleting insn with uid = 202.
rescanning insn with uid = 203.
deleting insn with uid = 203.
rescanning insn with uid = 204.
deleting insn with uid = 204.
rescanning insn with uid = 206.
deleting insn with uid = 206.
rescanning insn with uid = 207.
deleting insn with uid = 207.
rescanning insn with uid = 209.
deleting insn with uid = 209.
rescanning insn with uid = 215.
deleting insn with uid = 215.
rescanning insn with uid = 216.
deleting insn with uid = 216.
rescanning insn with uid = 217.
deleting insn with uid = 217.
rescanning insn with uid = 218.
deleting insn with uid = 218.
rescanning insn with uid = 219.
deleting insn with uid = 219.
rescanning insn with uid = 220.
deleting insn with uid = 220.
rescanning insn with uid = 221.
deleting insn with uid = 221.
rescanning insn with uid = 223.
deleting insn with uid = 223.
rescanning insn with uid = 224.
deleting insn with uid = 224.
rescanning insn with uid = 226.
deleting insn with uid = 226.
rescanning insn with uid = 244.
deleting insn with uid = 244.
ending the processing of deferred insns

;; Function populate_rootfs (populate_rootfs)[0:1338] (unlikely executed)


11 basic blocks, 13 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, probably never executed.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(11){ }d-1(12){ }d-1(13){ }d-1(14){ }d-1(25){ }d-1(26){ }}
;; bb 0 artificial_uses: { }

Successors:  2 [100.0%]  (fallthru)


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, probably never executed.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  3 [0.0%]  (fallthru) 4 [100.0%] 


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 4, probably never executed.
Predecessors:  2 [0.0%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors: 


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 9996, probably never executed.
Predecessors:  2 [100.0%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  5 [0.0%]  (fallthru) 10 [100.0%] 


Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 4, probably never executed.
Predecessors:  4 [0.0%]  (fallthru)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  6 [0.0%]  (fallthru) 7 [100.0%] 


Basic block 6 , prev 5, next 7, loop_depth 0, count 0, freq 0, probably never executed.
Predecessors:  5 [0.0%]  (fallthru)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  7 [100.0%]  (fallthru)


Basic block 7 , prev 6, next 8, loop_depth 0, count 0, freq 4, probably never executed.
Predecessors:  5 [100.0%]  6 [100.0%]  (fallthru)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  9 [71.0%]  8 [29.0%]  (fallthru)


Basic block 8 , prev 7, next 9, loop_depth 0, count 0, freq 1, probably never executed.
Predecessors:  7 [29.0%]  (fallthru)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  9 [100.0%]  (fallthru)


Basic block 9 , prev 8, next 10, loop_depth 0, count 0, freq 4, probably never executed.
Predecessors:  7 [71.0%]  8 [100.0%]  (fallthru)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  10 [100.0%]  (fallthru)


Basic block 10 , prev 9, next 1, loop_depth 0, count 0, freq 9996, probably never executed.
Predecessors:  4 [100.0%]  9 [100.0%]  (fallthru)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  EXIT [100.0%]  (fallthru)


Basic block 1 , prev 10, loop_depth 0, count 0, freq 9996, probably never executed.
Predecessors:  10 [100.0%]  (fallthru)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(11){ }u-1(13){ }u-1(14){ }u-1(25){ }}

Successors: 


starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 11 n_edges 13 count 18 (  1.6)


populate_rootfs

Dataflow summary:
def_info->table_size = 0, use_info->table_size = 0
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={14d,10u} r1={11d,4u} r2={7d} r3={7d} r11={1d,10u} r12={7d} r13={1d,16u} r14={7d,1u} r15={6d} r16={6d} r17={6d} r18={6d} r19={6d} r20={6d} r21={6d} r22={6d} r23={6d} r24={10d,4u} r25={1d,10u} r26={1d,9u} r27={6d} r28={6d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={6d} r38={6d} r39={6d} r40={6d} r41={6d} r42={6d} r43={6d} r44={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r76={6d} r77={6d} r78={6d} r79={6d} r80={6d} r81={6d} r82={6d} r83={6d} r84={6d} r85={6d} r86={6d} r87={6d} r88={6d} r89={6d} r90={6d} r91={6d} r92={6d} r93={6d} r94={6d} r95={6d} r96={6d} r97={6d} r98={6d} r99={6d} r100={6d} r101={6d} r102={6d} r103={6d} r104={6d} r105={6d} r106={6d} r107={6d} r108={6d} r109={6d} r110={6d} r111={6d} r112={6d} r113={6d} r114={6d} r115={6d} r116={6d} r117={6d} r118={6d} r119={6d} r120={6d} r121={6d} r122={6d} r123={6d} r124={6d} r125={6d} r126={6d} r127={6d} r133={1d,2u} r134={1d,2u} r135={1d,2u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} 
;;    total ref usage 838{749d,89u,0e} in 50{44 regular + 6 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(11){ }d-1(12){ }d-1(13){ }d-1(14){ }d-1(25){ }d-1(26){ }}
;; bb 0 artificial_uses: { }

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 2 )->[3]->( )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 2 )->[4]->( 5 10 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 4 )->[5]->( 6 7 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 5 )->[6]->( 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 5 6 )->[7]->( 9 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 7 )->[8]->( 9 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 7 8 )->[9]->( 10 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 4 9 )->[10]->( 1 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 10 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(11){ }u-1(13){ }u-1(14){ }u-1(25){ }}

Finding needed instructions:
  Adding insn 12 to worklist
  Adding insn 9 to worklist
  Adding insn 15 to worklist
  Adding insn 22 to worklist
  Adding insn 37 to worklist
  Adding insn 34 to worklist
  Adding insn 26 to worklist
  Adding insn 42 to worklist
  Adding insn 48 to worklist
  Adding insn 54 to worklist
  Adding insn 62 to worklist
  Adding insn 59 to worklist
  Adding insn 75 to worklist
Finished finding needed instructions:
processing block 3 lr out =  13 [sp] 25 [sfp] 26 [afp]
  Adding insn 14 to worklist
processing block 10 lr out =  0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 69 to worklist
  Adding insn 65 to worklist
processing block 9 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 61 to worklist
  Adding insn 60 to worklist
  Adding insn 58 to worklist
  Adding insn 57 to worklist
processing block 8 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 53 to worklist
  Adding insn 52 to worklist
  Adding insn 51 to worklist
  Adding insn 50 to worklist
processing block 7 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 47 to worklist
  Adding insn 46 to worklist
  Adding insn 45 to worklist
processing block 6 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 41 to worklist
  Adding insn 40 to worklist
  Adding insn 39 to worklist
processing block 5 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
  Adding insn 36 to worklist
  Adding insn 35 to worklist
  Adding insn 33 to worklist
  Adding insn 32 to worklist
  Adding insn 31 to worklist
  Adding insn 30 to worklist
  Adding insn 29 to worklist
  Adding insn 28 to worklist
  Adding insn 27 to worklist
  Adding insn 25 to worklist
  Adding insn 24 to worklist
processing block 4 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 21 to worklist
  Adding insn 20 to worklist
  Adding insn 19 to worklist
processing block 2 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
  Adding insn 11 to worklist
  Adding insn 10 to worklist
  Adding insn 8 to worklist
  Adding insn 7 to worklist
  Adding insn 6 to worklist
  Adding insn 5 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 11 n_edges 13 count 20 (  1.8)
;; Following path with 38 sets: 2 4 5 6 
deferring rescan insn with uid = 27.
deferring rescan insn with uid = 28.
;; Following path with 14 sets: 2 3 
deferring rescan insn with uid = 14.
;; Following path with 11 sets: 7 8 
;; Following path with 6 sets: 9 
deferring rescan insn with uid = 61.
deferring rescan insn with uid = 62.
;; Following path with 3 sets: 10 
;; Following path with 4 sets: 3 


try_optimize_cfg iteration 1



populate_rootfs

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={14d,10u} r1={11d,4u} r2={7d} r3={7d} r11={1d,10u} r12={7d} r13={1d,16u} r14={7d,1u} r15={6d} r16={6d} r17={6d} r18={6d} r19={6d} r20={6d} r21={6d} r22={6d} r23={6d} r24={10d,4u} r25={1d,10u} r26={1d,9u} r27={6d} r28={6d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={6d} r38={6d} r39={6d} r40={6d} r41={6d} r42={6d} r43={6d} r44={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r76={6d} r77={6d} r78={6d} r79={6d} r80={6d} r81={6d} r82={6d} r83={6d} r84={6d} r85={6d} r86={6d} r87={6d} r88={6d} r89={6d} r90={6d} r91={6d} r92={6d} r93={6d} r94={6d} r95={6d} r96={6d} r97={6d} r98={6d} r99={6d} r100={6d} r101={6d} r102={6d} r103={6d} r104={6d} r105={6d} r106={6d} r107={6d} r108={6d} r109={6d} r110={6d} r111={6d} r112={6d} r113={6d} r114={6d} r115={6d} r116={6d} r117={6d} r118={6d} r119={6d} r120={6d} r121={6d} r122={6d} r123={6d} r124={6d} r125={6d} r126={6d} r127={6d} r133={1d,2u} r134={1d,2u} r135={1d,2u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} 
;;    total ref usage 838{749d,89u,0e} in 50{44 regular + 6 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 135 137 138
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 135 137 138
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)

(insn 5 2 6 2 init/initramfs.c:574 (set (reg/f:SI 137)
        (symbol_ref:SI ("__initramfs_start") [flags 0xc0] <var_decl 0x114d2120 __initramfs_start>)) 167 {*arm_movsi_insn} (nil))

(insn 6 5 7 2 init/initramfs.c:574 (set (reg/f:SI 138)
        (symbol_ref:SI ("__initramfs_size") [flags 0xc0] <var_decl 0x114d2180 __initramfs_size>)) 167 {*arm_movsi_insn} (nil))

(insn 7 6 8 2 init/initramfs.c:574 (set (reg:SI 0 r0)
        (reg/f:SI 137)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("__initramfs_start") [flags 0xc0] <var_decl 0x114d2120 __initramfs_start>)
        (nil)))

(insn 8 7 9 2 init/initramfs.c:574 (set (reg:SI 1 r1)
        (mem/c/i:SI (reg/f:SI 138) [0 __initramfs_size+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn 9 8 10 2 init/initramfs.c:574 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("unpack_to_rootfs") [flags 0x3] <function_decl 0x114ad980 unpack_to_rootfs>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 10 9 11 2 init/initramfs.c:574 (set (reg/v/f:SI 135 [ err ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 11 10 12 2 init/initramfs.c:575 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 135 [ err ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 12 11 13 2 init/initramfs.c:575 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 17)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135


;; Succ edge  3 [0.0%]  (fallthru)
;; Succ edge  4 [100.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  2 [0.0%]  (fallthru)
(note 13 12 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 14 13 15 3 init/initramfs.c:576 (set (reg:SI 0 r0)
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(call_insn 15 14 17 3 init/initramfs.c:576 (parallel [
            (call (mem:SI (symbol_ref:SI ("panic") [flags 0x41] <function_decl 0x10a86f00 panic>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_NORETURN (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 3 -> ()
;; lr  out 	 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 13 [sp] 25 [sfp] 26 [afp]



;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 139 140
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 139 140
;; live  kill	

;; Pred edge  2 [100.0%] 
(code_label 17 15 18 4 149 "" [1 uses])

(note 18 17 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 19 18 20 4 init/initramfs.c:577 (set (reg/f:SI 139)
        (symbol_ref:SI ("initrd_start") [flags 0xc0] <var_decl 0x114d2360 initrd_start>)) 167 {*arm_movsi_insn} (nil))

(insn 20 19 21 4 init/initramfs.c:577 (set (reg:SI 140 [ initrd_start ])
        (mem/c/i:SI (reg/f:SI 139) [0 initrd_start+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 21 20 22 4 init/initramfs.c:577 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 140 [ initrd_start ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 22 21 23 4 init/initramfs.c:577 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 63)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 4 -> ( 5 10)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  5 [0.0%]  (fallthru)
;; Succ edge  10 [100.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134 141 142 143 144 145
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 133 134 141 142 143 144 145
;; live  kill	 14 [lr]

;; Pred edge  4 [0.0%]  (fallthru)
(note 23 22 24 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 24 23 25 5 init/initramfs.c:601 (set (reg/f:SI 141)
        (symbol_ref/v/f:SI ("*.LC12") [flags 0x82] <string_cst 0x1153ef80>)) 167 {*arm_movsi_insn} (nil))

(insn 25 24 26 5 init/initramfs.c:601 (set (reg:SI 0 r0)
        (reg/f:SI 141)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC12") [flags 0x82] <string_cst 0x1153ef80>)
        (nil)))

(call_insn 26 25 27 5 init/initramfs.c:601 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a86380 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 27 26 28 5 init/initramfs.c:602 (set (reg/f:SI 142)
        (reg/f:SI 139)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("initrd_start") [flags 0xc0] <var_decl 0x114d2360 initrd_start>)
        (nil)))

(insn 28 27 29 5 init/initramfs.c:602 (set (reg:SI 134 [ initrd_start.956 ])
        (mem/c/i:SI (reg/f:SI 139) [0 initrd_start+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 29 28 30 5 init/initramfs.c:602 (set (reg/f:SI 143)
        (symbol_ref:SI ("initrd_end") [flags 0xc0] <var_decl 0x114d23c0 initrd_end>)) 167 {*arm_movsi_insn} (nil))

(insn 30 29 31 5 init/initramfs.c:602 (set (reg:SI 145 [ initrd_end ])
        (mem/c/i:SI (reg/f:SI 143) [0 initrd_end+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 31 30 32 5 init/initramfs.c:602 (set (reg:SI 144)
        (minus:SI (reg:SI 145 [ initrd_end ])
            (reg:SI 134 [ initrd_start.956 ]))) 28 {*arm_subsi3_insn} (nil))

(insn 32 31 33 5 init/initramfs.c:602 (set (reg:SI 0 r0)
        (reg:SI 134 [ initrd_start.956 ])) 167 {*arm_movsi_insn} (nil))

(insn 33 32 34 5 init/initramfs.c:602 (set (reg:SI 1 r1)
        (reg:SI 144)) 167 {*arm_movsi_insn} (nil))

(call_insn 34 33 35 5 init/initramfs.c:602 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("unpack_to_rootfs") [flags 0x3] <function_decl 0x114ad980 unpack_to_rootfs>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 35 34 36 5 init/initramfs.c:602 (set (reg/v/f:SI 133 [ err.957 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 36 35 37 5 init/initramfs.c:604 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 133 [ err.957 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 37 36 38 5 init/initramfs.c:604 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 43)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 5 -> ( 6 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133


;; Succ edge  6 [0.0%]  (fallthru)
;; Succ edge  7 [100.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 146
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; live  gen 	 0 [r0] 1 [r1] 146
;; live  kill	 14 [lr]

;; Pred edge  5 [0.0%]  (fallthru)
(note 38 37 39 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 39 38 40 6 init/initramfs.c:605 (set (reg/f:SI 146)
        (symbol_ref/v/f:SI ("*.LC13") [flags 0x82] <string_cst 0x1163ce00>)) 167 {*arm_movsi_insn} (nil))

(insn 40 39 41 6 init/initramfs.c:605 (set (reg:SI 0 r0)
        (reg/f:SI 146)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC13") [flags 0x82] <string_cst 0x1163ce00>)
        (nil)))

(insn 41 40 42 6 init/initramfs.c:605 (set (reg:SI 1 r1)
        (reg/v/f:SI 133 [ err.957 ])) 167 {*arm_movsi_insn} (nil))

(call_insn 42 41 43 6 init/initramfs.c:605 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a86380 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 6 -> ( 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 5 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 147 148
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 147 148
;; live  kill	

;; Pred edge  5 [100.0%] 
;; Pred edge  6 [100.0%]  (fallthru)
(code_label 43 42 44 7 151 "" [1 uses])

(note 44 43 45 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 45 44 46 7 init/initramfs.c:497 (set (reg/f:SI 147)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 46 45 47 7 init/initramfs.c:497 (set (reg:SI 148 [ do_retain_initrd ])
        (mem/c/i:SI (plus:SI (reg/f:SI 147)
                (const_int 88 [0x58])) [0 do_retain_initrd+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 47 46 48 7 init/initramfs.c:497 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 148 [ do_retain_initrd ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 48 47 49 7 init/initramfs.c:497 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 55)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))
;; End of basic block 7 -> ( 9 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  9 [71.0%] 
;; Succ edge  8 [29.0%]  (fallthru)

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 149 150
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 149 150
;; live  kill	 14 [lr]

;; Pred edge  7 [29.0%]  (fallthru)
(note 49 48 50 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 50 49 51 8 init/initramfs.c:517 (set (reg/f:SI 149)
        (symbol_ref:SI ("initrd_start") [flags 0xc0] <var_decl 0x114d2360 initrd_start>)) 167 {*arm_movsi_insn} (nil))

(insn 51 50 52 8 init/initramfs.c:517 (set (reg/f:SI 150)
        (symbol_ref:SI ("initrd_end") [flags 0xc0] <var_decl 0x114d23c0 initrd_end>)) 167 {*arm_movsi_insn} (nil))

(insn 52 51 53 8 init/initramfs.c:517 (set (reg:SI 0 r0)
        (mem/c/i:SI (reg/f:SI 149) [0 initrd_start+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 53 52 54 8 init/initramfs.c:517 (set (reg:SI 1 r1)
        (mem/c/i:SI (reg/f:SI 150) [0 initrd_end+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn 54 53 55 8 init/initramfs.c:517 (parallel [
            (call (mem:SI (symbol_ref:SI ("free_initrd_mem") [flags 0x41] <function_decl 0x114adb80 free_initrd_mem>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 8 -> ( 9)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 7 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 151 152 153 154
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 151 152 153 154
;; live  kill	

;; Pred edge  7 [71.0%] 
;; Pred edge  8 [100.0%]  (fallthru)
(code_label 55 54 56 9 152 ("skip") [1 uses])

(note 56 55 57 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 57 56 58 9 init/initramfs.c:519 (set (reg/f:SI 151)
        (symbol_ref:SI ("initrd_start") [flags 0xc0] <var_decl 0x114d2360 initrd_start>)) 167 {*arm_movsi_insn} (nil))

(insn 58 57 59 9 init/initramfs.c:519 (set (reg:SI 152)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 59 58 60 9 init/initramfs.c:519 (set (mem/c/i:SI (reg/f:SI 151) [0 initrd_start+0 S4 A32])
        (reg:SI 152)) 167 {*arm_movsi_insn} (nil))

(insn 60 59 61 9 init/initramfs.c:520 (set (reg/f:SI 153)
        (symbol_ref:SI ("initrd_end") [flags 0xc0] <var_decl 0x114d23c0 initrd_end>)) 167 {*arm_movsi_insn} (nil))

(insn 61 60 62 9 init/initramfs.c:520 (set (reg:SI 154)
        (reg:SI 152)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 62 61 63 9 init/initramfs.c:520 (set (mem/c/i:SI (reg/f:SI 153) [0 initrd_end+0 S4 A32])
        (reg:SI 152)) 167 {*arm_movsi_insn} (nil))
;; End of basic block 9 -> ( 10)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  10 [100.0%]  (fallthru)

;; Start of basic block ( 4 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 136
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 136
;; live  kill	

;; Pred edge  4 [100.0%] 
;; Pred edge  9 [100.0%]  (fallthru)
(code_label 63 62 64 10 150 "" [1 uses])

(note 64 63 65 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 65 64 69 10 init/initramfs.c:610 (set (reg:SI 136 [ <result> ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 69 65 75 10 init/initramfs.c:610 (set (reg/i:SI 0 r0)
        (reg:SI 136 [ <result> ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 75 69 0 10 init/initramfs.c:610 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 10 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
rescanning insn with uid = 14.
deleting insn with uid = 14.
rescanning insn with uid = 27.
deleting insn with uid = 27.
rescanning insn with uid = 28.
deleting insn with uid = 28.
rescanning insn with uid = 61.
deleting insn with uid = 61.
rescanning insn with uid = 62.
deleting insn with uid = 62.
ending the processing of deferred insns
